debug_level 2

adapter_khz     1000
reset_config srst_only
adapter_nsrst_assert_width 100

interface cmsis-dap

transport select jtag

#autoexit true

set _CHIPNAME riscv
#jtag newtap $_CHIPNAME cpu -irlen 5 -expected-id 0x1000563d
jtag newtap $_CHIPNAME cpu -irlen 5 -expected-id 0x1e200a6d

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME riscv -chain-position $_TARGETNAME
$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size 20480 -work-area-backup 0

# Work-area is a space in RAM used for flash programming
if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x5000
}

# Allow overriding the Flash bank size
if { [info exists FLASH_SIZE] } {
    set _FLASH_SIZE $FLASH_SIZE
} else {
    # autodetect size
    set _FLASH_SIZE 0
}

#debug_level 4

#set _FLASH_SIZE 0x1000

# flash size will be probed
set _FLASHNAME $_CHIPNAME.flash

flash bank $_FLASHNAME gd32vf103 0x08000000 0 0 0 $_TARGETNAME
flash banks
flash list

#flash bank bin/targets/gd32vf103c-start_boot/app/apps/boot_stub/boot_stub.elf.bin gd32vf103 0x08000000 0 0 0 $_TARGETNAME

program bin/targets/gd32vf103c-start_boot/app/apps/boot_stub/boot_stub.elf.bin 0x08000000 verify

#riscv set_reset_timeout_sec 1
# riscv expose_csrs 3040-3071

#init

#halt
# We must turn on this because otherwise the IDE version debug cannot download the program into flash
#flash protect 0 0 last off

exit

#flash
#  flash bank bank_id driver_name base_address size_bytes chip_width_bytes
#            bus_width_bytes target [driver_options ...]
#  flash banks
#  flash init
#  flash list
#gd32vf103
#  gd32vf103 lock bank_id
#  gd32vf103 mass_erase bank_id
#  gd32vf103 unlock bank_id
#gdb_flash_program ('enable'|'disable')
#mflash
#  mflash bank soc_type base_addr pin_id target
#mflash init
#nand
#program <filename> [address] [verify] [reset] [exit]
