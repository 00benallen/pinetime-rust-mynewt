In archive target/thumbv7m-none-eabi/release/libapp.rlib:

app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.o6vxcoia-cgu.0
00002323 l       .debug_str	00000000 
00002c77 l       .debug_str	00000000 
00002ca1 l       .debug_str	00000000 
00002caa l       .debug_str	00000000 
00002d1a l       .debug_str	00000000 
00002d6d l       .debug_str	00000000 
00002dbc l       .debug_str	00000000 
00002dfc l       .debug_str	00000000 
00002e23 l       .debug_str	00000000 
00002e27 l       .debug_str	00000000 
00002e29 l       .debug_str	00000000 
00002e2b l       .debug_str	00000000 
00002e35 l       .debug_str	00000000 
00002e3e l       .debug_str	00000000 
00002e47 l       .debug_str	00000000 
00002e52 l       .debug_str	00000000 
00002e5c l       .debug_str	00000000 
00002e83 l       .debug_str	00000000 
00002e9b l       .debug_str	00000000 
00002ea5 l       .debug_str	00000000 
00002ec8 l       .debug_str	00000000 
00002f10 l       .debug_str	00000000 
00002f50 l       .debug_str	00000000 
00002f97 l       .debug_str	00000000 
00002fa0 l       .debug_str	00000000 
00002fa4 l       .debug_str	00000000 
00002fce l       .debug_str	00000000 
00002fd3 l       .debug_str	00000000 
00002fd6 l       .debug_str	00000000 
00003020 l       .debug_str	00000000 
00003029 l       .debug_str	00000000 
0000305c l       .debug_str	00000000 
00003087 l       .debug_str	00000000 
00003089 l       .debug_str	00000000 
000030c5 l       .debug_str	00000000 
000030d8 l       .debug_str	00000000 
000030dd l       .debug_str	00000000 
000030ef l       .debug_str	00000000 
000030f5 l       .debug_str	00000000 
000030fb l       .debug_str	00000000 
000030fd l       .debug_str	00000000 
00003103 l       .debug_str	00000000 
00003108 l       .debug_str	00000000 
00003115 l       .debug_str	00000000 
0000311a l       .debug_str	00000000 
00003122 l       .debug_str	00000000 
00003126 l       .debug_str	00000000 
0000312b l       .debug_str	00000000 
00003133 l       .debug_str	00000000 
00003149 l       .debug_str	00000000 
00003167 l       .debug_str	00000000 
00003170 l       .debug_str	00000000 
00003175 l       .debug_str	00000000 
0000317a l       .debug_str	00000000 
0000317e l       .debug_str	00000000 
00003187 l       .debug_str	00000000 
00003191 l       .debug_str	00000000 
000031a9 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
000000a2 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000df l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000122 l       .debug_str	00000000 
00000125 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001e3 l       .debug_str	00000000 
000001ef l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
0000020a l       .debug_str	00000000 
00000214 l       .debug_str	00000000 
00000221 l       .debug_str	00000000 
0000022d l       .debug_str	00000000 
00000231 l       .debug_str	00000000 
0000023c l       .debug_str	00000000 
00000247 l       .debug_str	00000000 
0000024e l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
0000026f l       .debug_str	00000000 
00000277 l       .debug_str	00000000 
0000027e l       .debug_str	00000000 
00000282 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
00000290 l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
0000029c l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002ac l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
000002bc l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002cf l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
000002df l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002ed l       .debug_str	00000000 
000002f3 l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
0000034b l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
0000037c l       .debug_str	00000000 
00000382 l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
0000038b l       .debug_str	00000000 
0000039a l       .debug_str	00000000 
000003a1 l       .debug_str	00000000 
000003a5 l       .debug_str	00000000 
000003ae l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003be l       .debug_str	00000000 
000003c5 l       .debug_str	00000000 
000003d9 l       .debug_str	00000000 
000003e5 l       .debug_str	00000000 
000003f1 l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000420 l       .debug_str	00000000 
0000042a l       .debug_str	00000000 
00000438 l       .debug_str	00000000 
0000043c l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
0000044e l       .debug_str	00000000 
00000454 l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
0000045c l       .debug_str	00000000 
00000464 l       .debug_str	00000000 
0000047b l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
000004bb l       .debug_str	00000000 
000004c5 l       .debug_str	00000000 
000004df l       .debug_str	00000000 
0000053d l       .debug_str	00000000 
00000548 l       .debug_str	00000000 
00000565 l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
00000588 l       .debug_str	00000000 
000005ba l       .debug_str	00000000 
000005c1 l       .debug_str	00000000 
000005fa l       .debug_str	00000000 
0000060a l       .debug_str	00000000 
0000060d l       .debug_str	00000000 
00000614 l       .debug_str	00000000 
00000618 l       .debug_str	00000000 
0000061c l       .debug_str	00000000 
00000621 l       .debug_str	00000000 
00000627 l       .debug_str	00000000 
0000062b l       .debug_str	00000000 
0000063b l       .debug_str	00000000 
00000647 l       .debug_str	00000000 
00000653 l       .debug_str	00000000 
0000066a l       .debug_str	00000000 
00000676 l       .debug_str	00000000 
0000067a l       .debug_str	00000000 
00000687 l       .debug_str	00000000 
000006ab l       .debug_str	00000000 
000006b7 l       .debug_str	00000000 
000006c5 l       .debug_str	00000000 
000006dc l       .debug_str	00000000 
000006f1 l       .debug_str	00000000 
000006f4 l       .debug_str	00000000 
00000714 l       .debug_str	00000000 
0000071d l       .debug_str	00000000 
00000726 l       .debug_str	00000000 
0000072f l       .debug_str	00000000 
0000073b l       .debug_str	00000000 
00000743 l       .debug_str	00000000 
0000074b l       .debug_str	00000000 
00000751 l       .debug_str	00000000 
00000774 l       .debug_str	00000000 
00000785 l       .debug_str	00000000 
00000791 l       .debug_str	00000000 
000007cc l       .debug_str	00000000 
000007dd l       .debug_str	00000000 
000007df l       .debug_str	00000000 
00000807 l       .debug_str	00000000 
00000828 l       .debug_str	00000000 
0000082d l       .debug_str	00000000 
00000835 l       .debug_str	00000000 
0000083e l       .debug_str	00000000 
00000847 l       .debug_str	00000000 
0000084e l       .debug_str	00000000 
00000854 l       .debug_str	00000000 
000008b6 l       .debug_str	00000000 
00000920 l       .debug_str	00000000 
0000092e l       .debug_str	00000000 
00000942 l       .debug_str	00000000 
00000977 l       .debug_str	00000000 
00000982 l       .debug_str	00000000 
00000988 l       .debug_str	00000000 
00000994 l       .debug_str	00000000 
000009c1 l       .debug_str	00000000 
000009c5 l       .debug_str	00000000 
000009d7 l       .debug_str	00000000 
000009e6 l       .debug_str	00000000 
000009fa l       .debug_str	00000000 
00000a03 l       .debug_str	00000000 
00000a07 l       .debug_str	00000000 
00000a77 l       .debug_str	00000000 
00000aa5 l       .debug_str	00000000 
00000acf l       .debug_str	00000000 
00000ad4 l       .debug_str	00000000 
00000b13 l       .debug_str	00000000 
00000b29 l       .debug_str	00000000 
00000b2f l       .debug_str	00000000 
00000b36 l       .debug_str	00000000 
00000b39 l       .debug_str	00000000 
00000b45 l       .debug_str	00000000 
00000b4d l       .debug_str	00000000 
00000ba7 l       .debug_str	00000000 
00000c09 l       .debug_str	00000000 
00000c14 l       .debug_str	00000000 
00000c5b l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000cb4 l       .debug_str	00000000 
00000cf1 l       .debug_str	00000000 
00000d36 l       .debug_str	00000000 
00000d3f l       .debug_str	00000000 
00000d4f l       .debug_str	00000000 
00000d57 l       .debug_str	00000000 
00000dac l       .debug_str	00000000 
00000e09 l       .debug_str	00000000 
00000e15 l       .debug_str	00000000 
00000e1e l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e36 l       .debug_str	00000000 
00000e3f l       .debug_str	00000000 
00000e47 l       .debug_str	00000000 
00000e4f l       .debug_str	00000000 
00000e59 l       .debug_str	00000000 
00000e6e l       .debug_str	00000000 
00000e75 l       .debug_str	00000000 
00000e95 l       .debug_str	00000000 
00000e9c l       .debug_str	00000000 
00000ea4 l       .debug_str	00000000 
00000eae l       .debug_str	00000000 
00000eb9 l       .debug_str	00000000 
00000ec2 l       .debug_str	00000000 
00000ecd l       .debug_str	00000000 
00000ed9 l       .debug_str	00000000 
00000edd l       .debug_str	00000000 
00000ee6 l       .debug_str	00000000 
00000eed l       .debug_str	00000000 
00000ef5 l       .debug_str	00000000 
00000efd l       .debug_str	00000000 
00000f07 l       .debug_str	00000000 
00000f0d l       .debug_str	00000000 
00000f14 l       .debug_str	00000000 
00000f1b l       .debug_str	00000000 
00000f48 l       .debug_str	00000000 
00000f7d l       .debug_str	00000000 
00000f83 l       .debug_str	00000000 
00000f89 l       .debug_str	00000000 
00000f98 l       .debug_str	00000000 
00000fa8 l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc0 l       .debug_str	00000000 
00000fe9 l       .debug_str	00000000 
00001047 l       .debug_str	00000000 
000010ad l       .debug_str	00000000 
000010b4 l       .debug_str	00000000 
000010bc l       .debug_str	00000000 
000010c5 l       .debug_str	00000000 
000010e3 l       .debug_str	00000000 
000010f3 l       .debug_str	00000000 
00001101 l       .debug_str	00000000 
0000110c l       .debug_str	00000000 
00001119 l       .debug_str	00000000 
00001128 l       .debug_str	00000000 
0000113e l       .debug_str	00000000 
00001148 l       .debug_str	00000000 
00001151 l       .debug_str	00000000 
0000115a l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001196 l       .debug_str	00000000 
000011a1 l       .debug_str	00000000 
000011b7 l       .debug_str	00000000 
000011bf l       .debug_str	00000000 
000011e0 l       .debug_str	00000000 
000011f7 l       .debug_str	00000000 
000011fc l       .debug_str	00000000 
00001204 l       .debug_str	00000000 
0000120d l       .debug_str	00000000 
00001216 l       .debug_str	00000000 
0000121f l       .debug_str	00000000 
00001227 l       .debug_str	00000000 
0000122e l       .debug_str	00000000 
0000123a l       .debug_str	00000000 
00001245 l       .debug_str	00000000 
0000124d l       .debug_str	00000000 
00001255 l       .debug_str	00000000 
000012d1 l       .debug_str	00000000 
00001355 l       .debug_str	00000000 
00001451 l       .debug_str	00000000 
00001555 l       .debug_str	00000000 
00001563 l       .debug_str	00000000 
0000156e l       .debug_str	00000000 
00001578 l       .debug_str	00000000 
00001583 l       .debug_str	00000000 
000015b1 l       .debug_str	00000000 
0000162c l       .debug_str	00000000 
000016af l       .debug_str	00000000 
000016bd l       .debug_str	00000000 
0000171c l       .debug_str	00000000 
00001783 l       .debug_str	00000000 
00001799 l       .debug_str	00000000 
000017a9 l       .debug_str	00000000 
000017b8 l       .debug_str	00000000 
000017bc l       .debug_str	00000000 
000017c2 l       .debug_str	00000000 
000017c8 l       .debug_str	00000000 
000017ce l       .debug_str	00000000 
000017de l       .debug_str	00000000 
00001811 l       .debug_str	00000000 
00001851 l       .debug_str	00000000 
00001899 l       .debug_str	00000000 
0000189d l       .debug_str	00000000 
000018a3 l       .debug_str	00000000 
000018a9 l       .debug_str	00000000 
000018af l       .debug_str	00000000 
000018c1 l       .debug_str	00000000 
000018f6 l       .debug_str	00000000 
00001938 l       .debug_str	00000000 
00001982 l       .debug_str	00000000 
00001986 l       .debug_str	00000000 
0000198c l       .debug_str	00000000 
00001992 l       .debug_str	00000000 
00001998 l       .debug_str	00000000 
000019aa l       .debug_str	00000000 
000019df l       .debug_str	00000000 
00001a21 l       .debug_str	00000000 
00001a6b l       .debug_str	00000000 
00001a6f l       .debug_str	00000000 
00001a75 l       .debug_str	00000000 
00001a7b l       .debug_str	00000000 
00001a81 l       .debug_str	00000000 
00001a87 l       .debug_str	00000000 
00001a98 l       .debug_str	00000000 
00001acc l       .debug_str	00000000 
00001b0d l       .debug_str	00000000 
00001b56 l       .debug_str	00000000 
00001b5b l       .debug_str	00000000 
00001b60 l       .debug_str	00000000 
00001b64 l       .debug_str	00000000 
00001b6a l       .debug_str	00000000 
00001b70 l       .debug_str	00000000 
00001b76 l       .debug_str	00000000 
00001b87 l       .debug_str	00000000 
00001bbb l       .debug_str	00000000 
00001bfc l       .debug_str	00000000 
00001c45 l       .debug_str	00000000 
00001c49 l       .debug_str	00000000 
00001c7d l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00001d07 l       .debug_str	00000000 
00001d0c l       .debug_str	00000000 
00001d10 l       .debug_str	00000000 
00001d19 l       .debug_str	00000000 
00001d20 l       .debug_str	00000000 
00001d28 l       .debug_str	00000000 
00001d3a l       .debug_str	00000000 
00001d6f l       .debug_str	00000000 
00001db1 l       .debug_str	00000000 
00001dfb l       .debug_str	00000000 
00001dff l       .debug_str	00000000 
00001e05 l       .debug_str	00000000 
00001e0b l       .debug_str	00000000 
00001e11 l       .debug_str	00000000 
00001e17 l       .debug_str	00000000 
00001e1f l       .debug_str	00000000 
00001e2d l       .debug_str	00000000 
00001e3c l       .debug_str	00000000 
00001e4d l       .debug_str	00000000 
00001e58 l       .debug_str	00000000 
00001e63 l       .debug_str	00000000 
00001e6e l       .debug_str	00000000 
00001e75 l       .debug_str	00000000 
00001e98 l       .debug_str	00000000 
00001eaa l       .debug_str	00000000 
00001edf l       .debug_str	00000000 
00001f21 l       .debug_str	00000000 
00001f6b l       .debug_str	00000000 
00001f6f l       .debug_str	00000000 
00001f79 l       .debug_str	00000000 
00001f8b l       .debug_str	00000000 
00001fc0 l       .debug_str	00000000 
00002002 l       .debug_str	00000000 
0000204c l       .debug_str	00000000 
00002051 l       .debug_str	00000000 
0000205b l       .debug_str	00000000 
0000206d l       .debug_str	00000000 
000020a2 l       .debug_str	00000000 
000020e4 l       .debug_str	00000000 
0000212e l       .debug_str	00000000 
00002142 l       .debug_str	00000000 
00002146 l       .debug_str	00000000 
00002154 l       .debug_str	00000000 
00002164 l       .debug_str	00000000 
0000216d l       .debug_str	00000000 
00002178 l       .debug_str	00000000 
00002187 l       .debug_str	00000000 
0000219c l       .debug_str	00000000 
000021cd l       .debug_str	00000000 
0000226a l       .debug_str	00000000 
0000230f l       .debug_str	00000000 
0000231a l       .debug_str	00000000 
00002344 l       .debug_str	00000000 
00002357 l       .debug_str	00000000 
0000238d l       .debug_str	00000000 
00002410 l       .debug_str	00000000 
0000249b l       .debug_str	00000000 
000024b7 l       .debug_str	00000000 
00002503 l       .debug_str	00000000 
00002557 l       .debug_str	00000000 
00002574 l       .debug_str	00000000 
00002588 l       .debug_str	00000000 
000025d4 l       .debug_str	00000000 
00002628 l       .debug_str	00000000 
0000263e l       .debug_str	00000000 
00002652 l       .debug_str	00000000 
00002699 l       .debug_str	00000000 
000026e8 l       .debug_str	00000000 
000026f1 l       .debug_str	00000000 
000026ff l       .debug_str	00000000 
00002730 l       .debug_str	00000000 
00002736 l       .debug_str	00000000 
0000273e l       .debug_str	00000000 
00002745 l       .debug_str	00000000 
0000274d l       .debug_str	00000000 
00002758 l       .debug_str	00000000 
00002760 l       .debug_str	00000000 
0000276f l       .debug_str	00000000 
00002773 l       .debug_str	00000000 
0000277e l       .debug_str	00000000 
0000278a l       .debug_str	00000000 
00002795 l       .debug_str	00000000 
000027a6 l       .debug_str	00000000 
000027ac l       .debug_str	00000000 
000027b4 l       .debug_str	00000000 
000027bb l       .debug_str	00000000 
000027c5 l       .debug_str	00000000 
000027cd l       .debug_str	00000000 
000027d5 l       .debug_str	00000000 
000027f7 l       .debug_str	00000000 
00002802 l       .debug_str	00000000 
0000280e l       .debug_str	00000000 
00002816 l       .debug_str	00000000 
0000281f l       .debug_str	00000000 
0000282a l       .debug_str	00000000 
00002831 l       .debug_str	00000000 
0000283c l       .debug_str	00000000 
00002847 l       .debug_str	00000000 
00002857 l       .debug_str	00000000 
00002861 l       .debug_str	00000000 
00002867 l       .debug_str	00000000 
00002889 l       .debug_str	00000000 
000028c1 l       .debug_str	00000000 
00002901 l       .debug_str	00000000 
00002908 l       .debug_str	00000000 
00002910 l       .debug_str	00000000 
00002927 l       .debug_str	00000000 
00002930 l       .debug_str	00000000 
00002940 l       .debug_str	00000000 
0000294f l       .debug_str	00000000 
00002957 l       .debug_str	00000000 
0000295e l       .debug_str	00000000 
00002966 l       .debug_str	00000000 
00002984 l       .debug_str	00000000 
00002994 l       .debug_str	00000000 
000029c7 l       .debug_str	00000000 
000029dc l       .debug_str	00000000 
000029e5 l       .debug_str	00000000 
00002a42 l       .debug_str	00000000 
00002aa7 l       .debug_str	00000000 
00002ab1 l       .debug_str	00000000 
00002ac1 l       .debug_str	00000000 
00002ad6 l       .debug_str	00000000 
00002ade l       .debug_str	00000000 
00002b42 l       .debug_str	00000000 
00002bae l       .debug_str	00000000 
00002bb5 l       .debug_str	00000000 
00002bbd l       .debug_str	00000000 
00002bdb l       .debug_str	00000000 
00002beb l       .debug_str	00000000 
00002c1e l       .debug_str	00000000 
00002c33 l       .debug_str	00000000 
00002c46 l       .debug_str	00000000 
00002c5b l       .debug_str	00000000 
00002c62 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000019 .Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000004 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.23	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.26	00000005 .Lanon.3ed011473997af99b525cde47c9eaaac.26
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.27	0000004b .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.32	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.33	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.34
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.35	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.35
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000f .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E	00000008 app::app_sensor::SENSOR_DEVICE
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	000003d2 app::app_sensor::handle_sensor_data
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	0000000c <&T as core::fmt::Display>::fmt
00000000 l     F .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000050 core::result::unwrap_failed
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000000 .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <str as core::fmt::Display>::fmt
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::fmt::Debug>::fmt
00000000         *UND*	00000000 mynewt::hw::sensor::as_untyped
00000000         *UND*	00000000 mynewt::hw::sensor::register_listener
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::set_poll_rate_ms
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::mgr_find_next_bydevname
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 mynewt::sys::console::buffer
00000000         *UND*	00000000 mynewt::sys::console::printhex
00000000         *UND*	00000000 mynewt::Strn::new
00000000         *UND*	00000000 mynewt::libs::sensor_network::prepare_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::do_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::init_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::start_server_transport
00000000         *UND*	00000000 mynewt::kernel::os::eventq_run
00000000         *UND*	00000000 mynewt::kernel::os::eventq_dflt_get
00000000         *UND*	00000000 mynewt::sysinit
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::key_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::new_encoder
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::check_result
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::value_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::global_encoder
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::encoder
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::cstr_len
00000000         *UND*	00000000 mynewt::encoding::coap_context::COAP_CONTEXT
00000000         *UND*	00000000 <str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 cbor_encode_int
00000000         *UND*	00000000 cbor_encode_text_string
00000000         *UND*	00000000 cbor_encoder_close_container
00000000         *UND*	00000000 cbor_encoder_create_array
00000000         *UND*	00000000 cbor_encoder_create_map
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000 g     F .text.main	000000e8 main
00000000         *UND*	00000000 null_sensor
00000000 g     F .text.rust_begin_unwind	00000066 rust_begin_unwind



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E:

00000000 <<&T as core::fmt::Display>::fmt>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <<str as core::fmt::Display>::fmt>

Disassembly of section .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E:

00000000 <core::result::unwrap_failed>:
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E:

00000000 <app::app_sensor::handle_sensor_data>:
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:73
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b087      	sub	sp, #28
   6:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:75
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("Rust handle_sensor_data\n");
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:78
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { sensor::is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <is_null_sensor_data>
  1e:	b120      	cbz	r0, 2a <app::app_sensor::handle_sensor_data+0x2a>
  20:	f06f 0001 	mvn.w	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  24:	b007      	add	sp, #28
  26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
  2a:	4628      	mov	r0, r5
  2c:	f7ff fffe 	bl	0 <is_null_sensor>
  30:	2800      	cmp	r0, #0
  32:	f040 81b9 	bne.w	3a8 <app::app_sensor::handle_sensor_data+0x3a8>
  36:	2000      	movs	r0, #0
  38:	a904      	add	r1, sp, #16
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:113
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3a:	f88d 0014 	strb.w	r0, [sp, #20]
  3e:	9004      	str	r0, [sp, #16]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:114
            let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
  46:	2800      	cmp	r0, #0
  48:	f040 81b5 	bne.w	3b6 <app::app_sensor::handle_sensor_data+0x3b6>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:118

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  4c:	f89d 0014 	ldrb.w	r0, [sp, #20]
  50:	2800      	cmp	r0, #0
  52:	f000 81b7 	beq.w	3c4 <app::app_sensor::handle_sensor_data+0x3c4>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  56:	f240 0000 	movw	r0, #0
  5a:	2119      	movs	r1, #25
  5c:	f2c0 0000 	movt	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:121
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  60:	f8dd 9010 	ldr.w	r9, [sp, #16]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  64:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:51
///   {"key":"device", "value":"0102030405060708090a0b0c0d0e0f10"},
///   {"key":"t",      "value":1715}
/// ]}
/// ```
pub fn send_sensor_data(val: &SensorValue) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console::print("Rust send_sensor_data\n");
  68:	f240 0000 	movw	r0, #0
  6c:	2116      	movs	r1, #22
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:57
    if let SensorValueType::None = val.val { assert!(false); }

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post(strn!("")) ? ;
  76:	f240 0000 	movw	r0, #0
  7a:	2101      	movs	r1, #1
  7c:	f2c0 0000 	movt	r0, #0
  80:	f7ff fffe 	bl	0 <mynewt::Strn::new>
  84:	e9cd 0104 	strd	r0, r1, [sp, #16]
  88:	a802      	add	r0, sp, #8
  8a:	a904      	add	r1, sp, #16
  8c:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::init_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  90:	9802      	ldr	r0, [sp, #8]
  92:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:57
  94:	2901      	cmp	r1, #1
  96:	d107      	bne.n	a8 <app::app_sensor::handle_sensor_data+0xa8>
  98:	9803      	ldr	r0, [sp, #12]
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
  9a:	3006      	adds	r0, #6
  9c:	f000 816e 	beq.w	37c <app::app_sensor::handle_sensor_data+0x37c>
  a0:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
}
  a2:	b007      	add	sp, #28
  a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:58
    if !rc { return Err(MynewtError::SYS_EAGAIN); }  //  If network transport not ready, tell caller (Sensor Listener) to try again later.
  a8:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  ac:	f000 8166 	beq.w	37c <app::app_sensor::handle_sensor_data+0x37c>
  b0:	a804      	add	r0, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:62

    //  Compose the CoAP Payload using the coap!() macro.
    //  Select @json or @cbor To encode CoAP Payload in JSON or CBOR format.
    let _payload = coap!( @cbor {        
  b2:	213c      	movs	r1, #60	; 0x3c
  b4:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::prepare_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  b8:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:62
  bc:	2801      	cmp	r0, #1
  be:	f000 8159 	beq.w	374 <app::app_sensor::handle_sensor_data+0x374>
  c2:	f240 0a00 	movw	sl, #0
  c6:	f240 0b00 	movw	fp, #0
  ca:	f240 0700 	movw	r7, #0
  ce:	2004      	movs	r0, #4
  d0:	f2c0 0b00 	movt	fp, #0
  d4:	f2c0 0700 	movt	r7, #0
  d8:	f2c0 0a00 	movt	sl, #0
  dc:	9000      	str	r0, [sp, #0]
  de:	4650      	mov	r0, sl
  e0:	4659      	mov	r1, fp
  e2:	2204      	movs	r2, #4
  e4:	463b      	mov	r3, r7
  e6:	f04f 0804 	mov.w	r8, #4
  ea:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
  ee:	4605      	mov	r5, r0
  f0:	4650      	mov	r0, sl
  f2:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::global_encoder>
  f6:	4629      	mov	r1, r5
  f8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  fc:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 100:	4601      	mov	r1, r0
 102:	4650      	mov	r0, sl
 104:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 108:	f240 0000 	movw	r0, #0
 10c:	2106      	movs	r1, #6
 10e:	f2c0 0000 	movt	r0, #0
 112:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 116:	4605      	mov	r5, r0
 118:	460e      	mov	r6, r1
 11a:	4650      	mov	r0, sl
 11c:	4659      	mov	r1, fp
 11e:	2204      	movs	r2, #4
 120:	463b      	mov	r3, r7
 122:	f8cd 8000 	str.w	r8, [sp]
 126:	46b8      	mov	r8, r7
 128:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 12c:	4607      	mov	r7, r0
 12e:	4650      	mov	r0, sl
 130:	4629      	mov	r1, r5
 132:	4632      	mov	r2, r6
 134:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 138:	4604      	mov	r4, r0
 13a:	4650      	mov	r0, sl
 13c:	4629      	mov	r1, r5
 13e:	4632      	mov	r2, r6
 140:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 144:	4602      	mov	r2, r0
 146:	4638      	mov	r0, r7
 148:	4621      	mov	r1, r4
 14a:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 14e:	4601      	mov	r1, r0
 150:	4650      	mov	r0, sl
 152:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 156:	2004      	movs	r0, #4
 158:	4659      	mov	r1, fp
 15a:	9000      	str	r0, [sp, #0]
 15c:	4650      	mov	r0, sl
 15e:	2204      	movs	r2, #4
 160:	4643      	mov	r3, r8
 162:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 166:	f240 0700 	movw	r7, #0
 16a:	f240 0b00 	movw	fp, #0
 16e:	f2c0 0700 	movt	r7, #0
 172:	f2c0 0b00 	movt	fp, #0
 176:	4604      	mov	r4, r0
 178:	2506      	movs	r5, #6
 17a:	4650      	mov	r0, sl
 17c:	4659      	mov	r1, fp
 17e:	2206      	movs	r2, #6
 180:	463b      	mov	r3, r7
 182:	9500      	str	r5, [sp, #0]
 184:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::new_encoder>
 188:	4601      	mov	r1, r0
 18a:	4620      	mov	r0, r4
 18c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 190:	f7ff fffe 	bl	0 <cbor_encoder_create_array>
 194:	4601      	mov	r1, r0
 196:	4650      	mov	r0, sl
 198:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 19c:	4650      	mov	r0, sl
 19e:	4659      	mov	r1, fp
 1a0:	2206      	movs	r2, #6
 1a2:	463b      	mov	r3, r7
 1a4:	9500      	str	r5, [sp, #0]
 1a6:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 1aa:	4604      	mov	r4, r0
 1ac:	2004      	movs	r0, #4
 1ae:	9000      	str	r0, [sp, #0]
 1b0:	4650      	mov	r0, sl
 1b2:	4659      	mov	r1, fp
 1b4:	2206      	movs	r2, #6
 1b6:	4643      	mov	r3, r8
 1b8:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::new_encoder>
 1bc:	4601      	mov	r1, r0
 1be:	4620      	mov	r0, r4
 1c0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 1c4:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 1c8:	4601      	mov	r1, r0
 1ca:	4650      	mov	r0, sl
 1cc:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 1d0:	f240 0000 	movw	r0, #0
 1d4:	2103      	movs	r1, #3
 1d6:	f2c0 0000 	movt	r0, #0
 1da:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 1de:	4604      	mov	r4, r0
 1e0:	f240 0000 	movw	r0, #0
 1e4:	460f      	mov	r7, r1
 1e6:	f2c0 0000 	movt	r0, #0
 1ea:	2101      	movs	r1, #1
 1ec:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 1f0:	4605      	mov	r5, r0
 1f2:	2004      	movs	r0, #4
 1f4:	460e      	mov	r6, r1
 1f6:	9000      	str	r0, [sp, #0]
 1f8:	4650      	mov	r0, sl
 1fa:	4659      	mov	r1, fp
 1fc:	2206      	movs	r2, #6
 1fe:	4643      	mov	r3, r8
 200:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 204:	4680      	mov	r8, r0
 206:	4650      	mov	r0, sl
 208:	4621      	mov	r1, r4
 20a:	463a      	mov	r2, r7
 20c:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 210:	4683      	mov	fp, r0
 212:	4650      	mov	r0, sl
 214:	4621      	mov	r1, r4
 216:	463a      	mov	r2, r7
 218:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 21c:	4602      	mov	r2, r0
 21e:	4640      	mov	r0, r8
 220:	4659      	mov	r1, fp
 222:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 226:	4601      	mov	r1, r0
 228:	4650      	mov	r0, sl
 22a:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 22e:	4650      	mov	r0, sl
 230:	4629      	mov	r1, r5
 232:	4632      	mov	r2, r6
 234:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::value_to_cstr>
 238:	4604      	mov	r4, r0
 23a:	4650      	mov	r0, sl
 23c:	4629      	mov	r1, r5
 23e:	4632      	mov	r2, r6
 240:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 244:	4602      	mov	r2, r0
 246:	4640      	mov	r0, r8
 248:	4621      	mov	r1, r4
 24a:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 24e:	4601      	mov	r1, r0
 250:	4650      	mov	r0, sl
 252:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 256:	f240 0000 	movw	r0, #0
 25a:	2105      	movs	r1, #5
 25c:	f2c0 0000 	movt	r0, #0
 260:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 264:	f240 0800 	movw	r8, #0
 268:	f240 0300 	movw	r3, #0
 26c:	4604      	mov	r4, r0
 26e:	2004      	movs	r0, #4
 270:	f2c0 0800 	movt	r8, #0
 274:	460d      	mov	r5, r1
 276:	9000      	str	r0, [sp, #0]
 278:	4650      	mov	r0, sl
 27a:	4641      	mov	r1, r8
 27c:	2206      	movs	r2, #6
 27e:	f2c0 0300 	movt	r3, #0
 282:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 286:	4606      	mov	r6, r0
 288:	4650      	mov	r0, sl
 28a:	4621      	mov	r1, r4
 28c:	462a      	mov	r2, r5
 28e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 292:	4607      	mov	r7, r0
 294:	4650      	mov	r0, sl
 296:	4621      	mov	r1, r4
 298:	462a      	mov	r2, r5
 29a:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 29e:	4602      	mov	r2, r0
 2a0:	4630      	mov	r0, r6
 2a2:	4639      	mov	r1, r7
 2a4:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 2a8:	4601      	mov	r1, r0
 2aa:	4650      	mov	r0, sl
 2ac:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 2b0:	4630      	mov	r0, r6
 2b2:	464a      	mov	r2, r9
 2b4:	2300      	movs	r3, #0
 2b6:	f7ff fffe 	bl	0 <cbor_encode_int>
 2ba:	4601      	mov	r1, r0
 2bc:	4650      	mov	r0, sl
 2be:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 2c2:	f240 0b00 	movw	fp, #0
 2c6:	f04f 0906 	mov.w	r9, #6
 2ca:	f2c0 0b00 	movt	fp, #0
 2ce:	4650      	mov	r0, sl
 2d0:	4641      	mov	r1, r8
 2d2:	2206      	movs	r2, #6
 2d4:	465b      	mov	r3, fp
 2d6:	f8cd 9000 	str.w	r9, [sp]
 2da:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 2de:	f240 0600 	movw	r6, #0
 2e2:	4604      	mov	r4, r0
 2e4:	f2c0 0600 	movt	r6, #0
 2e8:	2504      	movs	r5, #4
 2ea:	4650      	mov	r0, sl
 2ec:	4641      	mov	r1, r8
 2ee:	2206      	movs	r2, #6
 2f0:	4633      	mov	r3, r6
 2f2:	9500      	str	r5, [sp, #0]
 2f4:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 2f8:	4601      	mov	r1, r0
 2fa:	4620      	mov	r0, r4
 2fc:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 300:	4601      	mov	r1, r0
 302:	4650      	mov	r0, sl
 304:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 308:	f240 0700 	movw	r7, #0
 30c:	4650      	mov	r0, sl
 30e:	f2c0 0700 	movt	r7, #0
 312:	2204      	movs	r2, #4
 314:	4639      	mov	r1, r7
 316:	4633      	mov	r3, r6
 318:	9500      	str	r5, [sp, #0]
 31a:	2504      	movs	r5, #4
 31c:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 320:	4604      	mov	r4, r0
 322:	4650      	mov	r0, sl
 324:	4641      	mov	r1, r8
 326:	2206      	movs	r2, #6
 328:	465b      	mov	r3, fp
 32a:	f8cd 9000 	str.w	r9, [sp]
 32e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 332:	4601      	mov	r1, r0
 334:	4620      	mov	r0, r4
 336:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 33a:	4601      	mov	r1, r0
 33c:	4650      	mov	r0, sl
 33e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 342:	4650      	mov	r0, sl
 344:	4639      	mov	r1, r7
 346:	2204      	movs	r2, #4
 348:	4633      	mov	r3, r6
 34a:	9500      	str	r5, [sp, #0]
 34c:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 350:	4604      	mov	r4, r0
 352:	4650      	mov	r0, sl
 354:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::global_encoder>
 358:	4621      	mov	r1, r4
 35a:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 35e:	4601      	mov	r1, r0
 360:	4650      	mov	r0, sl
 362:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 366:	a804      	add	r0, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:77
    });

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 368:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::do_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
 36c:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:77
 370:	2801      	cmp	r0, #1
 372:	d10e      	bne.n	392 <app::app_sensor::handle_sensor_data+0x392>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 374:	9805      	ldr	r0, [sp, #20]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 376:	3006      	adds	r0, #6
 378:	f47f ae92 	bne.w	a0 <app::app_sensor::handle_sensor_data+0xa0>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:95
            console::print("TMP network not ready\n");
 37c:	f240 0000 	movw	r0, #0
 380:	2116      	movs	r1, #22
 382:	f2c0 0000 	movt	r0, #0
 386:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 38a:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
}
 38c:	b007      	add	sp, #28
 38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:79

    console::print("NET view your sensor at \nhttps://blue-pill-geolocate.appspot.com?device=%s\n");  //  , device_id);
 392:	f240 0000 	movw	r0, #0
 396:	214b      	movs	r1, #75	; 0x4b
 398:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 39c:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 3a0:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
 3a2:	b007      	add	sp, #28
 3a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
 3a8:	f240 0000 	movw	r0, #0
 3ac:	f2c0 0000 	movt	r0, #0
 3b0:	f7ff fffe 	bl	0 <core::panicking::panic>
 3b4:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
 3b6:	f240 0000 	movw	r0, #0
 3ba:	f2c0 0000 	movt	r0, #0
 3be:	f7ff fffe 	bl	0 <core::panicking::panic>
 3c2:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:83
    if let SensorValueType::None = sensor_value.val { assert!(false); }  //  Invalid type
 3c4:	f240 0000 	movw	r0, #0
 3c8:	f2c0 0000 	movt	r0, #0
 3cc:	f7ff fffe 	bl	0 <core::panicking::panic>
 3d0:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:49
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:55
    //  Initialise the Mynewt packages and BME280 / temp_stm32 temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <mynewt::sysinit>
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:48
    console::print("Rust TMP poll \n");  //  SENSOR_DEVICE "\n";
   6:	f240 0000 	movw	r0, #0
   a:	210f      	movs	r1, #15
   c:	f2c0 0000 	movt	r0, #0
  10:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:51
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  14:	f240 0000 	movw	r0, #0
  18:	f242 7110 	movw	r1, #10000	; 0x2710
  1c:	f2c0 0000 	movt	r0, #0
  20:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::set_poll_rate_ms>
  24:	2801      	cmp	r0, #1
  26:	d147      	bne.n	b8 <main+0xb8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, unsafe { sensor::null_sensor() }) ? ;
  28:	f7ff fffe 	bl	0 <null_sensor>
  2c:	f240 0100 	movw	r1, #0
  30:	4602      	mov	r2, r0
  32:	4668      	mov	r0, sp
  34:	f2c0 0100 	movt	r1, #0
  38:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h43143ffffefcd0f1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  3c:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
  40:	2801      	cmp	r0, #1
  42:	d017      	beq.n	74 <main+0x74>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  44:	4620      	mov	r0, r4
  46:	f7ff fffe 	bl	0 <is_null_sensor>
  4a:	2800      	cmp	r0, #0
  4c:	d145      	bne.n	da <main+0xda>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:60
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f7ff fffe 	bl	0 <mynewt::hw::sensor::as_untyped>
  5a:	2100      	movs	r1, #0
  5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:65
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  60:	9101      	str	r1, [sp, #4]
  62:	9200      	str	r2, [sp, #0]
  64:	9104      	str	r1, [sp, #16]
  66:	e9cd 0102 	strd	r0, r1, [sp, #8]
  6a:	4669      	mov	r1, sp
  6c:	4620      	mov	r0, r4
  6e:	f7ff fffe 	bl	0 <mynewt::hw::sensor::register_listener>
  72:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  74:	2c01      	cmp	r4, #1
  76:	d120      	bne.n	ba <main+0xba>
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:62
    //  Starting polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  78:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::start_server_transport>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  7c:	2801      	cmp	r0, #1
  7e:	d124      	bne.n	ca <main+0xca>
main():
  80:	466c      	mov	r4, sp
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:68
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  82:	4620      	mov	r0, r4
  84:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_dflt_get>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  88:	9800      	ldr	r0, [sp, #0]
  8a:	2801      	cmp	r0, #1
  8c:	d00c      	beq.n	a8 <main+0xa8>
  8e:	9801      	ldr	r0, [sp, #4]
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:67
        os::eventq_run(               //  Processing events...
  90:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_run>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  94:	2801      	cmp	r0, #1
  96:	d0f4      	beq.n	82 <main+0x82>
main():
  98:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	f7ff fffe 	bl	0 <main>
  a6:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  a8:	9901      	ldr	r1, [sp, #4]
  aa:	f240 0000 	movw	r0, #0
  ae:	f2c0 0000 	movt	r0, #0
  b2:	f7ff fffe 	bl	0 <main>
  b6:	defe      	udf	#254	; 0xfe
main():
  b8:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  ba:	f240 0000 	movw	r0, #0
  be:	4621      	mov	r1, r4
  c0:	f2c0 0000 	movt	r0, #0
  c4:	f7ff fffe 	bl	0 <main>
  c8:	defe      	udf	#254	; 0xfe
main():
  ca:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  cc:	f240 0000 	movw	r0, #0
  d0:	f2c0 0000 	movt	r0, #0
  d4:	f7ff fffe 	bl	0 <main>
  d8:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  da:	f240 0000 	movw	r0, #0
  de:	f2c0 0000 	movt	r0, #0
  e2:	f7ff fffe 	bl	0 <core::panicking::panic>
  e6:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:79

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
   4:	b318      	cbz	r0, 4e <rust_begin_unwind+0x4e>
   6:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
   8:	f7ff fffe 	bl	0 <core::panic::Location::file>
   c:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
   e:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
  10:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
  12:	f7ff fffe 	bl	0 <core::panic::Location::line>
  16:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        console::print("panic at ");  console::buffer(&file);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  26:	4628      	mov	r0, r5
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <mynewt::sys::console::buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:83
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  2e:	f240 0000 	movw	r0, #0
  32:	2108      	movs	r1, #8
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  3c:	4620      	mov	r0, r4
  3e:	f7ff fffe 	bl	0 <mynewt::sys::console::printhex>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:84
        console::print("\n");         console::flush();
  42:	f240 0000 	movw	r0, #0
  46:	2101      	movs	r1, #1
  48:	f2c0 0000 	movt	r0, #0
  4c:	e004      	b.n	c <rust_begin_unwind+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:86
    } else {
        console::print("panic unknown loc\n");  console::flush();
  4e:	f240 0000 	movw	r0, #0
  52:	2112      	movs	r1, #18
  54:	f2c0 0000 	movt	r0, #0
  58:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  5c:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  60:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:91
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  64:	e7fe      	b.n	64 <rust_begin_unwind+0x64>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.bc.z: File format not recognized
