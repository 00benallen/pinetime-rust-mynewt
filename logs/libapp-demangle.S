In archive target/thumbv7m-none-eabi/release/libapp.rlib:

app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.o6vxcoia-cgu.0
00002277 l       .debug_str	00000000 
00002bc1 l       .debug_str	00000000 
00002bca l       .debug_str	00000000 
00002c3a l       .debug_str	00000000 
00002c8d l       .debug_str	00000000 
00002cdc l       .debug_str	00000000 
00002d1c l       .debug_str	00000000 
00002d43 l       .debug_str	00000000 
00002d47 l       .debug_str	00000000 
00002d49 l       .debug_str	00000000 
00002d4b l       .debug_str	00000000 
00002d55 l       .debug_str	00000000 
00002d5e l       .debug_str	00000000 
00002d67 l       .debug_str	00000000 
00002d72 l       .debug_str	00000000 
00002d7c l       .debug_str	00000000 
00002da3 l       .debug_str	00000000 
00002dbb l       .debug_str	00000000 
00002dc5 l       .debug_str	00000000 
00002de8 l       .debug_str	00000000 
00002e30 l       .debug_str	00000000 
00002e70 l       .debug_str	00000000 
00002eb7 l       .debug_str	00000000 
00002ec0 l       .debug_str	00000000 
00002ec4 l       .debug_str	00000000 
00002eee l       .debug_str	00000000 
00002ef3 l       .debug_str	00000000 
00002ef6 l       .debug_str	00000000 
00002f40 l       .debug_str	00000000 
00002f49 l       .debug_str	00000000 
00002f7c l       .debug_str	00000000 
00002fa7 l       .debug_str	00000000 
00002fa9 l       .debug_str	00000000 
00002fe5 l       .debug_str	00000000 
00002ff8 l       .debug_str	00000000 
00002ffd l       .debug_str	00000000 
0000300f l       .debug_str	00000000 
00003015 l       .debug_str	00000000 
0000301b l       .debug_str	00000000 
0000301d l       .debug_str	00000000 
00003023 l       .debug_str	00000000 
00003028 l       .debug_str	00000000 
00003035 l       .debug_str	00000000 
0000303a l       .debug_str	00000000 
00003042 l       .debug_str	00000000 
00003046 l       .debug_str	00000000 
0000304b l       .debug_str	00000000 
00003053 l       .debug_str	00000000 
00003069 l       .debug_str	00000000 
00003087 l       .debug_str	00000000 
00003090 l       .debug_str	00000000 
00003095 l       .debug_str	00000000 
0000309a l       .debug_str	00000000 
0000309e l       .debug_str	00000000 
000030a7 l       .debug_str	00000000 
000030b1 l       .debug_str	00000000 
000030c9 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
000000a2 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000df l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
00000127 l       .debug_str	00000000 
0000012a l       .debug_str	00000000 
0000012e l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
00000139 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
0000017a l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
00000192 l       .debug_str	00000000 
0000019d l       .debug_str	00000000 
000001a5 l       .debug_str	00000000 
000001b0 l       .debug_str	00000000 
000001bb l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001d0 l       .debug_str	00000000 
000001db l       .debug_str	00000000 
000001e8 l       .debug_str	00000000 
000001f4 l       .debug_str	00000000 
00000201 l       .debug_str	00000000 
0000020f l       .debug_str	00000000 
00000219 l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
00000232 l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
00000241 l       .debug_str	00000000 
0000024c l       .debug_str	00000000 
00000253 l       .debug_str	00000000 
0000025c l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
00000268 l       .debug_str	00000000 
00000274 l       .debug_str	00000000 
0000027c l       .debug_str	00000000 
00000283 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
0000028c l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
0000029a l       .debug_str	00000000 
0000029d l       .debug_str	00000000 
000002a1 l       .debug_str	00000000 
000002aa l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
000002bb l       .debug_str	00000000 
000002c1 l       .debug_str	00000000 
000002c7 l       .debug_str	00000000 
000002d1 l       .debug_str	00000000 
000002d4 l       .debug_str	00000000 
000002da l       .debug_str	00000000 
000002e4 l       .debug_str	00000000 
000002ec l       .debug_str	00000000 
000002f2 l       .debug_str	00000000 
000002f8 l       .debug_str	00000000 
00000303 l       .debug_str	00000000 
0000030c l       .debug_str	00000000 
0000032f l       .debug_str	00000000 
0000034e l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000355 l       .debug_str	00000000 
0000037c l       .debug_str	00000000 
00000381 l       .debug_str	00000000 
00000387 l       .debug_str	00000000 
0000038d l       .debug_str	00000000 
00000390 l       .debug_str	00000000 
0000039f l       .debug_str	00000000 
000003a6 l       .debug_str	00000000 
000003aa l       .debug_str	00000000 
000003b3 l       .debug_str	00000000 
000003bb l       .debug_str	00000000 
000003c3 l       .debug_str	00000000 
000003ca l       .debug_str	00000000 
000003de l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000414 l       .debug_str	00000000 
00000425 l       .debug_str	00000000 
0000042f l       .debug_str	00000000 
0000043d l       .debug_str	00000000 
00000441 l       .debug_str	00000000 
0000044c l       .debug_str	00000000 
00000453 l       .debug_str	00000000 
00000459 l       .debug_str	00000000 
0000045d l       .debug_str	00000000 
00000461 l       .debug_str	00000000 
00000469 l       .debug_str	00000000 
00000480 l       .debug_str	00000000 
000004a4 l       .debug_str	00000000 
000004c0 l       .debug_str	00000000 
000004ca l       .debug_str	00000000 
000004e4 l       .debug_str	00000000 
00000542 l       .debug_str	00000000 
0000054d l       .debug_str	00000000 
0000056a l       .debug_str	00000000 
00000583 l       .debug_str	00000000 
0000058d l       .debug_str	00000000 
000005bf l       .debug_str	00000000 
000005c6 l       .debug_str	00000000 
000005ff l       .debug_str	00000000 
0000060f l       .debug_str	00000000 
00000612 l       .debug_str	00000000 
00000619 l       .debug_str	00000000 
0000061d l       .debug_str	00000000 
00000621 l       .debug_str	00000000 
00000626 l       .debug_str	00000000 
0000062c l       .debug_str	00000000 
00000630 l       .debug_str	00000000 
00000640 l       .debug_str	00000000 
0000064c l       .debug_str	00000000 
00000658 l       .debug_str	00000000 
0000066f l       .debug_str	00000000 
0000067b l       .debug_str	00000000 
0000067f l       .debug_str	00000000 
0000068c l       .debug_str	00000000 
000006b0 l       .debug_str	00000000 
000006bc l       .debug_str	00000000 
000006ca l       .debug_str	00000000 
000006e1 l       .debug_str	00000000 
000006f6 l       .debug_str	00000000 
000006f9 l       .debug_str	00000000 
00000719 l       .debug_str	00000000 
00000722 l       .debug_str	00000000 
0000072b l       .debug_str	00000000 
00000734 l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
00000748 l       .debug_str	00000000 
00000750 l       .debug_str	00000000 
00000756 l       .debug_str	00000000 
00000779 l       .debug_str	00000000 
0000078a l       .debug_str	00000000 
00000796 l       .debug_str	00000000 
000007d1 l       .debug_str	00000000 
000007e2 l       .debug_str	00000000 
000007e4 l       .debug_str	00000000 
0000080c l       .debug_str	00000000 
0000082d l       .debug_str	00000000 
00000837 l       .debug_str	00000000 
0000083c l       .debug_str	00000000 
0000084a l       .debug_str	00000000 
0000085c l       .debug_str	00000000 
00000870 l       .debug_str	00000000 
00000874 l       .debug_str	00000000 
0000087d l       .debug_str	00000000 
00000881 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
00000898 l       .debug_str	00000000 
000008d1 l       .debug_str	00000000 
000008e0 l       .debug_str	00000000 
00000912 l       .debug_str	00000000 
0000091f l       .debug_str	00000000 
0000092b l       .debug_str	00000000 
0000099b l       .debug_str	00000000 
000009c9 l       .debug_str	00000000 
000009f3 l       .debug_str	00000000 
000009f8 l       .debug_str	00000000 
00000a37 l       .debug_str	00000000 
00000a4d l       .debug_str	00000000 
00000a53 l       .debug_str	00000000 
00000a5a l       .debug_str	00000000 
00000a5d l       .debug_str	00000000 
00000a69 l       .debug_str	00000000 
00000a71 l       .debug_str	00000000 
00000acb l       .debug_str	00000000 
00000b2d l       .debug_str	00000000 
00000b38 l       .debug_str	00000000 
00000b7f l       .debug_str	00000000 
00000bce l       .debug_str	00000000 
00000bd8 l       .debug_str	00000000 
00000c15 l       .debug_str	00000000 
00000c5a l       .debug_str	00000000 
00000c63 l       .debug_str	00000000 
00000c73 l       .debug_str	00000000 
00000c7b l       .debug_str	00000000 
00000cd0 l       .debug_str	00000000 
00000d2d l       .debug_str	00000000 
00000d39 l       .debug_str	00000000 
00000d42 l       .debug_str	00000000 
00000d4e l       .debug_str	00000000 
00000d5a l       .debug_str	00000000 
00000d63 l       .debug_str	00000000 
00000d6b l       .debug_str	00000000 
00000d73 l       .debug_str	00000000 
00000d7d l       .debug_str	00000000 
00000d92 l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000dc0 l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00000dd2 l       .debug_str	00000000 
00000ddd l       .debug_str	00000000 
00000de6 l       .debug_str	00000000 
00000df1 l       .debug_str	00000000 
00000dfd l       .debug_str	00000000 
00000e01 l       .debug_str	00000000 
00000e0a l       .debug_str	00000000 
00000e11 l       .debug_str	00000000 
00000e19 l       .debug_str	00000000 
00000e21 l       .debug_str	00000000 
00000e2b l       .debug_str	00000000 
00000e31 l       .debug_str	00000000 
00000e38 l       .debug_str	00000000 
00000e3f l       .debug_str	00000000 
00000e6c l       .debug_str	00000000 
00000ea1 l       .debug_str	00000000 
00000ea7 l       .debug_str	00000000 
00000ead l       .debug_str	00000000 
00000ebc l       .debug_str	00000000 
00000ecc l       .debug_str	00000000 
00000edc l       .debug_str	00000000 
00000ee4 l       .debug_str	00000000 
00000f0d l       .debug_str	00000000 
00000f6b l       .debug_str	00000000 
00000fd1 l       .debug_str	00000000 
00000fd8 l       .debug_str	00000000 
00000fe0 l       .debug_str	00000000 
00000fe9 l       .debug_str	00000000 
00001007 l       .debug_str	00000000 
00001017 l       .debug_str	00000000 
00001025 l       .debug_str	00000000 
00001030 l       .debug_str	00000000 
0000103d l       .debug_str	00000000 
0000104c l       .debug_str	00000000 
00001062 l       .debug_str	00000000 
0000106c l       .debug_str	00000000 
00001075 l       .debug_str	00000000 
0000107e l       .debug_str	00000000 
000010a4 l       .debug_str	00000000 
000010ba l       .debug_str	00000000 
000010c5 l       .debug_str	00000000 
000010db l       .debug_str	00000000 
000010e3 l       .debug_str	00000000 
00001104 l       .debug_str	00000000 
0000111b l       .debug_str	00000000 
00001120 l       .debug_str	00000000 
00001128 l       .debug_str	00000000 
00001131 l       .debug_str	00000000 
0000113a l       .debug_str	00000000 
00001143 l       .debug_str	00000000 
0000114b l       .debug_str	00000000 
00001152 l       .debug_str	00000000 
0000115e l       .debug_str	00000000 
00001169 l       .debug_str	00000000 
00001171 l       .debug_str	00000000 
00001179 l       .debug_str	00000000 
000011f5 l       .debug_str	00000000 
00001279 l       .debug_str	00000000 
00001375 l       .debug_str	00000000 
00001479 l       .debug_str	00000000 
00001487 l       .debug_str	00000000 
00001492 l       .debug_str	00000000 
0000149c l       .debug_str	00000000 
000014a7 l       .debug_str	00000000 
000014d5 l       .debug_str	00000000 
00001550 l       .debug_str	00000000 
000015d3 l       .debug_str	00000000 
000015e1 l       .debug_str	00000000 
00001640 l       .debug_str	00000000 
000016a7 l       .debug_str	00000000 
000016bd l       .debug_str	00000000 
000016cd l       .debug_str	00000000 
000016dc l       .debug_str	00000000 
000016e0 l       .debug_str	00000000 
000016e6 l       .debug_str	00000000 
000016ec l       .debug_str	00000000 
000016f2 l       .debug_str	00000000 
00001702 l       .debug_str	00000000 
00001735 l       .debug_str	00000000 
00001775 l       .debug_str	00000000 
000017bd l       .debug_str	00000000 
000017c1 l       .debug_str	00000000 
000017c7 l       .debug_str	00000000 
000017cd l       .debug_str	00000000 
000017d3 l       .debug_str	00000000 
000017e5 l       .debug_str	00000000 
0000181a l       .debug_str	00000000 
0000185c l       .debug_str	00000000 
000018a6 l       .debug_str	00000000 
000018aa l       .debug_str	00000000 
000018b0 l       .debug_str	00000000 
000018b6 l       .debug_str	00000000 
000018bc l       .debug_str	00000000 
000018ce l       .debug_str	00000000 
00001903 l       .debug_str	00000000 
00001945 l       .debug_str	00000000 
0000198f l       .debug_str	00000000 
00001993 l       .debug_str	00000000 
00001999 l       .debug_str	00000000 
0000199f l       .debug_str	00000000 
000019a5 l       .debug_str	00000000 
000019ab l       .debug_str	00000000 
000019bc l       .debug_str	00000000 
000019f0 l       .debug_str	00000000 
00001a31 l       .debug_str	00000000 
00001a7a l       .debug_str	00000000 
00001a7f l       .debug_str	00000000 
00001a84 l       .debug_str	00000000 
00001a88 l       .debug_str	00000000 
00001a8e l       .debug_str	00000000 
00001a94 l       .debug_str	00000000 
00001a9a l       .debug_str	00000000 
00001aab l       .debug_str	00000000 
00001adf l       .debug_str	00000000 
00001b20 l       .debug_str	00000000 
00001b69 l       .debug_str	00000000 
00001b6d l       .debug_str	00000000 
00001ba1 l       .debug_str	00000000 
00001be2 l       .debug_str	00000000 
00001c2b l       .debug_str	00000000 
00001c30 l       .debug_str	00000000 
00001c34 l       .debug_str	00000000 
00001c3d l       .debug_str	00000000 
00001c44 l       .debug_str	00000000 
00001c4c l       .debug_str	00000000 
00001c5e l       .debug_str	00000000 
00001c93 l       .debug_str	00000000 
00001cd5 l       .debug_str	00000000 
00001d1f l       .debug_str	00000000 
00001d23 l       .debug_str	00000000 
00001d29 l       .debug_str	00000000 
00001d2f l       .debug_str	00000000 
00001d35 l       .debug_str	00000000 
00001d3b l       .debug_str	00000000 
00001d43 l       .debug_str	00000000 
00001d51 l       .debug_str	00000000 
00001d60 l       .debug_str	00000000 
00001d71 l       .debug_str	00000000 
00001d7c l       .debug_str	00000000 
00001d87 l       .debug_str	00000000 
00001d92 l       .debug_str	00000000 
00001d99 l       .debug_str	00000000 
00001dbc l       .debug_str	00000000 
00001dce l       .debug_str	00000000 
00001e03 l       .debug_str	00000000 
00001e45 l       .debug_str	00000000 
00001e8f l       .debug_str	00000000 
00001e93 l       .debug_str	00000000 
00001e9d l       .debug_str	00000000 
00001eaf l       .debug_str	00000000 
00001ee4 l       .debug_str	00000000 
00001f26 l       .debug_str	00000000 
00001f70 l       .debug_str	00000000 
00001f75 l       .debug_str	00000000 
00001f7f l       .debug_str	00000000 
00001f91 l       .debug_str	00000000 
00001fc6 l       .debug_str	00000000 
00002008 l       .debug_str	00000000 
00002052 l       .debug_str	00000000 
00002066 l       .debug_str	00000000 
00002074 l       .debug_str	00000000 
00002084 l       .debug_str	00000000 
0000208d l       .debug_str	00000000 
00002098 l       .debug_str	00000000 
000020a7 l       .debug_str	00000000 
000020bc l       .debug_str	00000000 
000020ed l       .debug_str	00000000 
0000218a l       .debug_str	00000000 
0000222f l       .debug_str	00000000 
0000223a l       .debug_str	00000000 
00002243 l       .debug_str	00000000 
00002264 l       .debug_str	00000000 
000022ad l       .debug_str	00000000 
00002330 l       .debug_str	00000000 
000023bb l       .debug_str	00000000 
000023d7 l       .debug_str	00000000 
00002423 l       .debug_str	00000000 
00002477 l       .debug_str	00000000 
00002494 l       .debug_str	00000000 
000024a8 l       .debug_str	00000000 
000024f4 l       .debug_str	00000000 
00002548 l       .debug_str	00000000 
0000255e l       .debug_str	00000000 
00002572 l       .debug_str	00000000 
000025b9 l       .debug_str	00000000 
00002608 l       .debug_str	00000000 
00002611 l       .debug_str	00000000 
0000261f l       .debug_str	00000000 
00002650 l       .debug_str	00000000 
00002656 l       .debug_str	00000000 
0000265e l       .debug_str	00000000 
00002665 l       .debug_str	00000000 
0000266d l       .debug_str	00000000 
00002678 l       .debug_str	00000000 
00002680 l       .debug_str	00000000 
0000268f l       .debug_str	00000000 
00002693 l       .debug_str	00000000 
0000269e l       .debug_str	00000000 
000026aa l       .debug_str	00000000 
000026b5 l       .debug_str	00000000 
000026c6 l       .debug_str	00000000 
000026cc l       .debug_str	00000000 
000026d4 l       .debug_str	00000000 
000026db l       .debug_str	00000000 
000026e5 l       .debug_str	00000000 
000026ed l       .debug_str	00000000 
000026f5 l       .debug_str	00000000 
00002717 l       .debug_str	00000000 
00002722 l       .debug_str	00000000 
0000272e l       .debug_str	00000000 
00002736 l       .debug_str	00000000 
0000273f l       .debug_str	00000000 
0000274a l       .debug_str	00000000 
00002751 l       .debug_str	00000000 
0000275c l       .debug_str	00000000 
00002767 l       .debug_str	00000000 
00002777 l       .debug_str	00000000 
00002781 l       .debug_str	00000000 
00002787 l       .debug_str	00000000 
000027a9 l       .debug_str	00000000 
000027e1 l       .debug_str	00000000 
00002821 l       .debug_str	00000000 
00002828 l       .debug_str	00000000 
00002830 l       .debug_str	00000000 
00002847 l       .debug_str	00000000 
00002850 l       .debug_str	00000000 
00002860 l       .debug_str	00000000 
0000286f l       .debug_str	00000000 
00002877 l       .debug_str	00000000 
0000287e l       .debug_str	00000000 
00002886 l       .debug_str	00000000 
000028a4 l       .debug_str	00000000 
000028b4 l       .debug_str	00000000 
000028e7 l       .debug_str	00000000 
000028fc l       .debug_str	00000000 
00002905 l       .debug_str	00000000 
00002962 l       .debug_str	00000000 
000029c7 l       .debug_str	00000000 
000029d1 l       .debug_str	00000000 
000029e1 l       .debug_str	00000000 
000029f6 l       .debug_str	00000000 
000029fe l       .debug_str	00000000 
00002a62 l       .debug_str	00000000 
00002ace l       .debug_str	00000000 
00002ad5 l       .debug_str	00000000 
00002add l       .debug_str	00000000 
00002afb l       .debug_str	00000000 
00002b0b l       .debug_str	00000000 
00002b3e l       .debug_str	00000000 
00002b53 l       .debug_str	00000000 
00002b66 l       .debug_str	00000000 
00002b7b l       .debug_str	00000000 
00002b82 l       .debug_str	00000000 
00002b97 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000019 .Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.21	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.22	0000000d .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.23	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	00000005 .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.26	0000004b .Lanon.3ed011473997af99b525cde47c9eaaac.26
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.31	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.32	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.34	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.34
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000f .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h31cb9432cbc8a7caE	0000000c app::app_sensor::SENSOR_DEVICE
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	0000025a app::app_sensor::handle_sensor_data
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	0000000c <&T as core::fmt::Display>::fmt
00000000 l     F .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000050 core::result::unwrap_failed
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000000 .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h31cb9432cbc8a7caE	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h31cb9432cbc8a7caE
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <str as core::fmt::Display>::fmt
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::fmt::Debug>::fmt
00000000         *UND*	00000000 mynewt::hw::sensor::as_untyped
00000000         *UND*	00000000 mynewt::hw::sensor::register_listener
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::set_poll_rate_ms
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::mgr_find_next_bydevname
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 mynewt::sys::console::buffer
00000000         *UND*	00000000 mynewt::sys::console::printhex
00000000         *UND*	00000000 mynewt::Strn::new
00000000         *UND*	00000000 mynewt::libs::sensor_network::prepare_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::do_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::init_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::start_server_transport
00000000         *UND*	00000000 mynewt::kernel::os::eventq_run
00000000         *UND*	00000000 mynewt::kernel::os::eventq_dflt_get
00000000         *UND*	00000000 mynewt::sysinit
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::key_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::to_void_ptr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::value_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::COAP_CONTEXT
00000000         *UND*	00000000 <str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 get_device_id
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000         *UND*	00000000 json_helper_close_array
00000000         *UND*	00000000 json_helper_object_array_end_item
00000000         *UND*	00000000 json_helper_object_array_start_item
00000000         *UND*	00000000 json_helper_set_array
00000000         *UND*	00000000 json_helper_set_int
00000000         *UND*	00000000 json_helper_set_text_string
00000000         *UND*	00000000 json_rep_end_root_object
00000000         *UND*	00000000 json_rep_start_root_object
00000000 g     F .text.main	000000e8 main
00000000         *UND*	00000000 null_sensor
00000000 g     F .text.rust_begin_unwind	00000066 rust_begin_unwind



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E:

00000000 <<&T as core::fmt::Display>::fmt>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <<str as core::fmt::Display>::fmt>

Disassembly of section .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E:

00000000 <core::result::unwrap_failed>:
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E:

00000000 <app::app_sensor::handle_sensor_data>:
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:73
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b085      	sub	sp, #20
   6:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:75
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("Rust handle_sensor_data\n");
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:78
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { sensor::is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <is_null_sensor_data>
  1e:	b120      	cbz	r0, 2a <app::app_sensor::handle_sensor_data+0x2a>
  20:	f06f 0001 	mvn.w	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  24:	b005      	add	sp, #20
  26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
  2a:	4628      	mov	r0, r5
  2c:	f7ff fffe 	bl	0 <is_null_sensor>
  30:	2800      	cmp	r0, #0
  32:	f040 80fd 	bne.w	230 <app::app_sensor::handle_sensor_data+0x230>
  36:	2000      	movs	r0, #0
  38:	a902      	add	r1, sp, #8
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:113
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3a:	f88d 000c 	strb.w	r0, [sp, #12]
  3e:	9002      	str	r0, [sp, #8]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:114
            let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
  46:	2800      	cmp	r0, #0
  48:	f040 80f9 	bne.w	23e <app::app_sensor::handle_sensor_data+0x23e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:118

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  4c:	f89d 000c 	ldrb.w	r0, [sp, #12]
  50:	2800      	cmp	r0, #0
  52:	f000 80fb 	beq.w	24c <app::app_sensor::handle_sensor_data+0x24c>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  56:	f240 0000 	movw	r0, #0
  5a:	2119      	movs	r1, #25
  5c:	f2c0 0000 	movt	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:121
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  60:	f8dd a008 	ldr.w	sl, [sp, #8]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  64:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:70
///   {"key":"device", "value":"0102030405060708090a0b0c0d0e0f10"},
///   {"key":"t",      "value":1715}
/// ]}
/// ```
pub fn send_sensor_data(val: &SensorValue) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console::print("Rust send_sensor_data\n");
  68:	f240 0000 	movw	r0, #0
  6c:	2116      	movs	r1, #22
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
_ZN3app11app_network14get_device_id217h5798c2782d2df21dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:48
        let result_value: *const ::cty::c_char = get_device_id();
  76:	f7ff fffe 	bl	0 <get_device_id>
  7a:	ad02      	add	r5, sp, #8
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:79
    let device_id = get_device_id2() ?;

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post(strn!("")) ? ;
  7c:	f240 0100 	movw	r1, #0
  80:	f2c0 0100 	movt	r1, #0
  84:	2201      	movs	r2, #1
  86:	4628      	mov	r0, r5
  88:	f7ff fffe 	bl	0 <mynewt::Strn::new>
  8c:	4668      	mov	r0, sp
  8e:	4629      	mov	r1, r5
  90:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::init_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  94:	9800      	ldr	r0, [sp, #0]
  96:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:79
  98:	2901      	cmp	r1, #1
  9a:	d107      	bne.n	ac <app::app_sensor::handle_sensor_data+0xac>
  9c:	9801      	ldr	r0, [sp, #4]
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
  9e:	3006      	adds	r0, #6
  a0:	f000 80b0 	beq.w	204 <app::app_sensor::handle_sensor_data+0x204>
  a4:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
}
  a6:	b005      	add	sp, #20
  a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:80
    if !rc { return Err(MynewtError::SYS_EAGAIN); }  //  If network transport not ready, tell caller (Sensor Listener) to try again later.
  ac:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  b0:	f000 80a8 	beq.w	204 <app::app_sensor::handle_sensor_data+0x204>
  b4:	a802      	add	r0, sp, #8
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:84

    //  Compose the CoAP Payload using the coap!() macro.
    //  Select @json or @cbor To encode CoAP Payload in JSON or CBOR format.
    let _payload = coap!( @json {        
  b6:	2132      	movs	r1, #50	; 0x32
  b8:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::prepare_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  bc:	f89d 0008 	ldrb.w	r0, [sp, #8]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:84
  c0:	2801      	cmp	r0, #1
  c2:	f000 809b 	beq.w	1fc <app::app_sensor::handle_sensor_data+0x1fc>
  c6:	f7ff fffe 	bl	0 <json_rep_start_root_object>
  ca:	f240 0b00 	movw	fp, #0
  ce:	f2c0 0b00 	movt	fp, #0
  d2:	4658      	mov	r0, fp
  d4:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
  d8:	f240 0100 	movw	r1, #0
  dc:	4607      	mov	r7, r0
  de:	f2c0 0100 	movt	r1, #0
  e2:	4658      	mov	r0, fp
  e4:	2207      	movs	r2, #7
  e6:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
  ea:	4601      	mov	r1, r0
  ec:	4638      	mov	r0, r7
  ee:	f7ff fffe 	bl	0 <json_helper_set_array>
  f2:	f240 0900 	movw	r9, #0
  f6:	4658      	mov	r0, fp
  f8:	f2c0 0900 	movt	r9, #0
  fc:	220d      	movs	r2, #13
  fe:	4649      	mov	r1, r9
 100:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 104:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 108:	f240 0600 	movw	r6, #0
 10c:	a802      	add	r0, sp, #8
 10e:	f2c0 0600 	movt	r6, #0
 112:	2209      	movs	r2, #9
 114:	4631      	mov	r1, r6
 116:	f7ff fffe 	bl	0 <mynewt::Strn::new>
 11a:	a802      	add	r0, sp, #8
 11c:	4631      	mov	r1, r6
 11e:	2209      	movs	r2, #9
 120:	f7ff fffe 	bl	0 <mynewt::Strn::new>
 124:	4658      	mov	r0, fp
 126:	4649      	mov	r1, r9
 128:	220d      	movs	r2, #13
 12a:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 12e:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 132:	4658      	mov	r0, fp
 134:	4649      	mov	r1, r9
 136:	220d      	movs	r2, #13
 138:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 13c:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 140:	f240 0000 	movw	r0, #0
 144:	2103      	movs	r1, #3
 146:	f2c0 0000 	movt	r0, #0
 14a:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 14e:	4606      	mov	r6, r0
 150:	f240 0000 	movw	r0, #0
 154:	460f      	mov	r7, r1
 156:	f2c0 0000 	movt	r0, #0
 15a:	2101      	movs	r1, #1
 15c:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 160:	4604      	mov	r4, r0
 162:	4658      	mov	r0, fp
 164:	460d      	mov	r5, r1
 166:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
 16a:	4680      	mov	r8, r0
 16c:	4658      	mov	r0, fp
 16e:	4631      	mov	r1, r6
 170:	463a      	mov	r2, r7
 172:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 176:	4606      	mov	r6, r0
 178:	4658      	mov	r0, fp
 17a:	4621      	mov	r1, r4
 17c:	462a      	mov	r2, r5
 17e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::value_to_cstr>
 182:	4602      	mov	r2, r0
 184:	4640      	mov	r0, r8
 186:	4631      	mov	r1, r6
 188:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 18c:	f240 0000 	movw	r0, #0
 190:	2105      	movs	r1, #5
 192:	f2c0 0000 	movt	r0, #0
 196:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 19a:	4604      	mov	r4, r0
 19c:	4658      	mov	r0, fp
 19e:	460d      	mov	r5, r1
 1a0:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
 1a4:	4606      	mov	r6, r0
 1a6:	4658      	mov	r0, fp
 1a8:	4621      	mov	r1, r4
 1aa:	462a      	mov	r2, r5
 1ac:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 1b0:	4601      	mov	r1, r0
 1b2:	4630      	mov	r0, r6
 1b4:	4652      	mov	r2, sl
 1b6:	2300      	movs	r3, #0
 1b8:	f7ff fffe 	bl	0 <json_helper_set_int>
 1bc:	4658      	mov	r0, fp
 1be:	4649      	mov	r1, r9
 1c0:	220d      	movs	r2, #13
 1c2:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 1c6:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 1ca:	4658      	mov	r0, fp
 1cc:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
 1d0:	f240 0100 	movw	r1, #0
 1d4:	4604      	mov	r4, r0
 1d6:	4658      	mov	r0, fp
 1d8:	f2c0 0100 	movt	r1, #0
 1dc:	2207      	movs	r2, #7
 1de:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 1e2:	4601      	mov	r1, r0
 1e4:	4620      	mov	r0, r4
 1e6:	f7ff fffe 	bl	0 <json_helper_close_array>
 1ea:	f7ff fffe 	bl	0 <json_rep_end_root_object>
 1ee:	a802      	add	r0, sp, #8
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:99
    });

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 1f0:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::do_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
 1f4:	f89d 0008 	ldrb.w	r0, [sp, #8]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:99
 1f8:	2801      	cmp	r0, #1
 1fa:	d10e      	bne.n	21a <app::app_sensor::handle_sensor_data+0x21a>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 1fc:	9803      	ldr	r0, [sp, #12]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 1fe:	3006      	adds	r0, #6
 200:	f47f af50 	bne.w	a4 <app::app_sensor::handle_sensor_data+0xa4>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:95
            console::print("TMP network not ready\n");
 204:	f240 0000 	movw	r0, #0
 208:	2116      	movs	r1, #22
 20a:	f2c0 0000 	movt	r0, #0
 20e:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 212:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
}
 214:	b005      	add	sp, #20
 216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:101

    console::print("NET view your sensor at \nhttps://blue-pill-geolocate.appspot.com?device=%s\n");  //  , device_id);
 21a:	f240 0000 	movw	r0, #0
 21e:	214b      	movs	r1, #75	; 0x4b
 220:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 224:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 228:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
 22a:	b005      	add	sp, #20
 22c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
 230:	f240 0000 	movw	r0, #0
 234:	f2c0 0000 	movt	r0, #0
 238:	f7ff fffe 	bl	0 <core::panicking::panic>
 23c:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
 23e:	f240 0000 	movw	r0, #0
 242:	f2c0 0000 	movt	r0, #0
 246:	f7ff fffe 	bl	0 <core::panicking::panic>
 24a:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:83
    if let SensorValueType::None = sensor_value.val { assert!(false); }  //  Invalid type
 24c:	f240 0000 	movw	r0, #0
 250:	f2c0 0000 	movt	r0, #0
 254:	f7ff fffe 	bl	0 <core::panicking::panic>
 258:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:49
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:55
    //  Initialise the Mynewt packages and BME280 / temp_stm32 temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <mynewt::sysinit>
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:48
    console::print("Rust TMP poll \n");  //  SENSOR_DEVICE "\n";
   6:	f240 0000 	movw	r0, #0
   a:	210f      	movs	r1, #15
   c:	f2c0 0000 	movt	r0, #0
  10:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:51
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  14:	f240 0000 	movw	r0, #0
  18:	f242 7110 	movw	r1, #10000	; 0x2710
  1c:	f2c0 0000 	movt	r0, #0
  20:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::set_poll_rate_ms>
  24:	2801      	cmp	r0, #1
  26:	d147      	bne.n	b8 <main+0xb8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, unsafe { sensor::null_sensor() }) ? ;
  28:	f7ff fffe 	bl	0 <null_sensor>
  2c:	f240 0100 	movw	r1, #0
  30:	4602      	mov	r2, r0
  32:	4668      	mov	r0, sp
  34:	f2c0 0100 	movt	r1, #0
  38:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h43143ffffefcd0f1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  3c:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
  40:	2801      	cmp	r0, #1
  42:	d017      	beq.n	74 <main+0x74>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  44:	4620      	mov	r0, r4
  46:	f7ff fffe 	bl	0 <is_null_sensor>
  4a:	2800      	cmp	r0, #0
  4c:	d145      	bne.n	da <main+0xda>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:60
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f7ff fffe 	bl	0 <mynewt::hw::sensor::as_untyped>
  5a:	2100      	movs	r1, #0
  5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:65
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  60:	9101      	str	r1, [sp, #4]
  62:	9200      	str	r2, [sp, #0]
  64:	9104      	str	r1, [sp, #16]
  66:	e9cd 0102 	strd	r0, r1, [sp, #8]
  6a:	4669      	mov	r1, sp
  6c:	4620      	mov	r0, r4
  6e:	f7ff fffe 	bl	0 <mynewt::hw::sensor::register_listener>
  72:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  74:	2c01      	cmp	r4, #1
  76:	d120      	bne.n	ba <main+0xba>
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:62
    //  Starting polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  78:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::start_server_transport>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  7c:	2801      	cmp	r0, #1
  7e:	d124      	bne.n	ca <main+0xca>
main():
  80:	466c      	mov	r4, sp
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:68
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  82:	4620      	mov	r0, r4
  84:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_dflt_get>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  88:	9800      	ldr	r0, [sp, #0]
  8a:	2801      	cmp	r0, #1
  8c:	d00c      	beq.n	a8 <main+0xa8>
  8e:	9801      	ldr	r0, [sp, #4]
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:67
        os::eventq_run(               //  Processing events...
  90:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_run>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  94:	2801      	cmp	r0, #1
  96:	d0f4      	beq.n	82 <main+0x82>
main():
  98:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	f7ff fffe 	bl	0 <main>
  a6:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  a8:	9901      	ldr	r1, [sp, #4]
  aa:	f240 0000 	movw	r0, #0
  ae:	f2c0 0000 	movt	r0, #0
  b2:	f7ff fffe 	bl	0 <main>
  b6:	defe      	udf	#254	; 0xfe
main():
  b8:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  ba:	f240 0000 	movw	r0, #0
  be:	4621      	mov	r1, r4
  c0:	f2c0 0000 	movt	r0, #0
  c4:	f7ff fffe 	bl	0 <main>
  c8:	defe      	udf	#254	; 0xfe
main():
  ca:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  cc:	f240 0000 	movw	r0, #0
  d0:	f2c0 0000 	movt	r0, #0
  d4:	f7ff fffe 	bl	0 <main>
  d8:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  da:	f240 0000 	movw	r0, #0
  de:	f2c0 0000 	movt	r0, #0
  e2:	f7ff fffe 	bl	0 <core::panicking::panic>
  e6:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:79

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
   4:	b318      	cbz	r0, 4e <rust_begin_unwind+0x4e>
   6:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
   8:	f7ff fffe 	bl	0 <core::panic::Location::file>
   c:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
   e:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
  10:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
  12:	f7ff fffe 	bl	0 <core::panic::Location::line>
  16:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        console::print("panic at ");  console::buffer(&file);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  26:	4628      	mov	r0, r5
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <mynewt::sys::console::buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:83
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  2e:	f240 0000 	movw	r0, #0
  32:	2108      	movs	r1, #8
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  3c:	4620      	mov	r0, r4
  3e:	f7ff fffe 	bl	0 <mynewt::sys::console::printhex>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:84
        console::print("\n");         console::flush();
  42:	f240 0000 	movw	r0, #0
  46:	2101      	movs	r1, #1
  48:	f2c0 0000 	movt	r0, #0
  4c:	e004      	b.n	c <rust_begin_unwind+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:86
    } else {
        console::print("panic unknown loc\n");  console::flush();
  4e:	f240 0000 	movw	r0, #0
  52:	2112      	movs	r1, #18
  54:	f2c0 0000 	movt	r0, #0
  58:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  5c:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  60:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:91
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  64:	e7fe      	b.n	64 <rust_begin_unwind+0x64>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.bc.z: File format not recognized
