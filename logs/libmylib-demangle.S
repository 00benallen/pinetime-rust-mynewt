In archive target/thumbv7m-none-eabi/release/libmylib.rlib:

mylib-0948c04052cf796a.mylib.6fgjgbzt-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mylib.6fgjgbzt-cgu.0
0000199e l       .debug_str	00000000 
00001b3f l       .debug_str	00000000 
00001b49 l       .debug_str	00000000 
00001b4e l       .debug_str	00000000 
00001b53 l       .debug_str	00000000 
00001b58 l       .debug_str	00000000 
00001b62 l       .debug_str	00000000 
00001b6e l       .debug_str	00000000 
00001bf1 l       .debug_str	00000000 
00001bfb l       .debug_str	00000000 
00001c01 l       .debug_str	00000000 
00001c07 l       .debug_str	00000000 
00001c0b l       .debug_str	00000000 
00001c18 l       .debug_str	00000000 
00001c9e l       .debug_str	00000000 
00001cad l       .debug_str	00000000 
00001caf l       .debug_str	00000000 
00001d24 l       .debug_str	00000000 
00001d4f l       .debug_str	00000000 
00001d55 l       .debug_str	00000000 
00001d5c l       .debug_str	00000000 
00001d68 l       .debug_str	00000000 
00001d70 l       .debug_str	00000000 
00001d79 l       .debug_str	00000000 
00001d7e l       .debug_str	00000000 
00001d81 l       .debug_str	00000000 
00001d8a l       .debug_str	00000000 
00001d91 l       .debug_str	00000000 
00001d94 l       .debug_str	00000000 
00001d9a l       .debug_str	00000000 
00001da4 l       .debug_str	00000000 
00001dac l       .debug_str	00000000 
00001db2 l       .debug_str	00000000 
00001dbd l       .debug_str	00000000 
00001dc6 l       .debug_str	00000000 
00001de9 l       .debug_str	00000000 
00001e08 l       .debug_str	00000000 
00001e2f l       .debug_str	00000000 
00001e39 l       .debug_str	00000000 
00001e6b l       .debug_str	00000000 
00001e72 l       .debug_str	00000000 
00001eae l       .debug_str	00000000 
00001ec1 l       .debug_str	00000000 
00001ec3 l       .debug_str	00000000 
00001ed3 l       .debug_str	00000000 
00001ed9 l       .debug_str	00000000 
00001f1d l       .debug_str	00000000 
00001f33 l       .debug_str	00000000 
00001f3c l       .debug_str	00000000 
00001f7b l       .debug_str	00000000 
00001f8d l       .debug_str	00000000 
00001f96 l       .debug_str	00000000 
00001f9a l       .debug_str	00000000 
00001fc4 l       .debug_str	00000000 
00001fc9 l       .debug_str	00000000 
00002011 l       .debug_str	00000000 
0000201a l       .debug_str	00000000 
00002062 l       .debug_str	00000000 
00002071 l       .debug_str	00000000 
000020b9 l       .debug_str	00000000 
00002123 l       .debug_str	00000000 
0000212b l       .debug_str	00000000 
0000212f l       .debug_str	00000000 
00002135 l       .debug_str	00000000 
00002158 l       .debug_str	00000000 
000021ac l       .debug_str	00000000 
00002208 l       .debug_str	00000000 
0000220d l       .debug_str	00000000 
0000225f l       .debug_str	00000000 
000022b9 l       .debug_str	00000000 
000022c6 l       .debug_str	00000000 
000022f3 l       .debug_str	00000000 
000022f8 l       .debug_str	00000000 
00002360 l       .debug_str	00000000 
000023ca l       .debug_str	00000000 
00002433 l       .debug_str	00000000 
00002499 l       .debug_str	00000000 
00002500 l       .debug_str	00000000 
0000256a l       .debug_str	00000000 
000025d2 l       .debug_str	00000000 
00002641 l       .debug_str	00000000 
000026a8 l       .debug_str	00000000 
00002714 l       .debug_str	00000000 
0000271e l       .debug_str	00000000 
00002727 l       .debug_str	00000000 
00002734 l       .debug_str	00000000 
0000279a l       .debug_str	00000000 
000027dd l       .debug_str	00000000 
000027f3 l       .debug_str	00000000 
00002877 l       .debug_str	00000000 
000028b6 l       .debug_str	00000000 
000028c7 l       .debug_str	00000000 
00002902 l       .debug_str	00000000 
00002914 l       .debug_str	00000000 
00002919 l       .debug_str	00000000 
0000291b l       .debug_str	00000000 
0000292d l       .debug_str	00000000 
00002933 l       .debug_str	00000000 
0000293b l       .debug_str	00000000 
00002940 l       .debug_str	00000000 
0000294d l       .debug_str	00000000 
0000295a l       .debug_str	00000000 
00002961 l       .debug_str	00000000 
00002971 l       .debug_str	00000000 
00002983 l       .debug_str	00000000 
0000298f l       .debug_str	00000000 
00002994 l       .debug_str	00000000 
0000299c l       .debug_str	00000000 
000029a0 l       .debug_str	00000000 
000029a5 l       .debug_str	00000000 
000029ad l       .debug_str	00000000 
000029c3 l       .debug_str	00000000 
000029e1 l       .debug_str	00000000 
000029ea l       .debug_str	00000000 
000029ef l       .debug_str	00000000 
000029f4 l       .debug_str	00000000 
000029f8 l       .debug_str	00000000 
00002a01 l       .debug_str	00000000 
00002a0b l       .debug_str	00000000 
00002a23 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
000000a2 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000b5 l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c1 l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000cf l       .debug_str	00000000 
000000d9 l       .debug_str	00000000 
000000df l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
0000016c l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001d3 l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001e3 l       .debug_str	00000000 
000001ee l       .debug_str	00000000 
000001f7 l       .debug_str	00000000 
00000202 l       .debug_str	00000000 
0000020e l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
0000021b l       .debug_str	00000000 
0000021e l       .debug_str	00000000 
00000225 l       .debug_str	00000000 
0000022d l       .debug_str	00000000 
00000235 l       .debug_str	00000000 
0000023f l       .debug_str	00000000 
00000245 l       .debug_str	00000000 
0000024c l       .debug_str	00000000 
00000256 l       .debug_str	00000000 
0000025d l       .debug_str	00000000 
00000262 l       .debug_str	00000000 
00000269 l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
00000272 l       .debug_str	00000000 
0000027d l       .debug_str	00000000 
00000288 l       .debug_str	00000000 
0000028f l       .debug_str	00000000 
000002a6 l       .debug_str	00000000 
000002d3 l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
000002da l       .debug_str	00000000 
000002de l       .debug_str	00000000 
00000313 l       .debug_str	00000000 
00000319 l       .debug_str	00000000 
0000031f l       .debug_str	00000000 
0000032e l       .debug_str	00000000 
0000033e l       .debug_str	00000000 
0000034e l       .debug_str	00000000 
00000356 l       .debug_str	00000000 
0000037e l       .debug_str	00000000 
000003db l       .debug_str	00000000 
00000440 l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
0000044f l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
00000476 l       .debug_str	00000000 
00000486 l       .debug_str	00000000 
00000494 l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
000004ac l       .debug_str	00000000 
000004bb l       .debug_str	00000000 
000004c5 l       .debug_str	00000000 
000004e5 l       .debug_str	00000000 
000004fb l       .debug_str	00000000 
00000505 l       .debug_str	00000000 
0000050e l       .debug_str	00000000 
00000517 l       .debug_str	00000000 
0000053c l       .debug_str	00000000 
00000552 l       .debug_str	00000000 
0000055d l       .debug_str	00000000 
00000573 l       .debug_str	00000000 
0000057b l       .debug_str	00000000 
000005b1 l       .debug_str	00000000 
000005c4 l       .debug_str	00000000 
000005d8 l       .debug_str	00000000 
00000614 l       .debug_str	00000000 
00000625 l       .debug_str	00000000 
0000062a l       .debug_str	00000000 
00000664 l       .debug_str	00000000 
0000066b l       .debug_str	00000000 
0000066e l       .debug_str	00000000 
00000672 l       .debug_str	00000000 
00000679 l       .debug_str	00000000 
0000067d l       .debug_str	00000000 
00000680 l       .debug_str	00000000 
00000683 l       .debug_str	00000000 
00000688 l       .debug_str	00000000 
0000068e l       .debug_str	00000000 
00000695 l       .debug_str	00000000 
0000069d l       .debug_str	00000000 
000006a7 l       .debug_str	00000000 
000006ab l       .debug_str	00000000 
000006b4 l       .debug_str	00000000 
00000711 l       .debug_str	00000000 
00000716 l       .debug_str	00000000 
0000071b l       .debug_str	00000000 
0000071d l       .debug_str	00000000 
00000723 l       .debug_str	00000000 
00000728 l       .debug_str	00000000 
0000072d l       .debug_str	00000000 
00000733 l       .debug_str	00000000 
00000739 l       .debug_str	00000000 
0000073f l       .debug_str	00000000 
0000074d l       .debug_str	00000000 
00000757 l       .debug_str	00000000 
0000075b l       .debug_str	00000000 
00000763 l       .debug_str	00000000 
0000076b l       .debug_str	00000000 
00000772 l       .debug_str	00000000 
0000077e l       .debug_str	00000000 
00000789 l       .debug_str	00000000 
00000790 l       .debug_str	00000000 
00000796 l       .debug_str	00000000 
0000079a l       .debug_str	00000000 
000007a0 l       .debug_str	00000000 
000007a6 l       .debug_str	00000000 
000007a9 l       .debug_str	00000000 
000007b8 l       .debug_str	00000000 
000007bf l       .debug_str	00000000 
000007c3 l       .debug_str	00000000 
000007cc l       .debug_str	00000000 
000007d8 l       .debug_str	00000000 
000007f1 l       .debug_str	00000000 
000007f6 l       .debug_str	00000000 
00000807 l       .debug_str	00000000 
00000811 l       .debug_str	00000000 
0000086f l       .debug_str	00000000 
0000087a l       .debug_str	00000000 
00000897 l       .debug_str	00000000 
0000089b l       .debug_str	00000000 
000008a3 l       .debug_str	00000000 
000008ba l       .debug_str	00000000 
000008de l       .debug_str	00000000 
000008fa l       .debug_str	00000000 
000008ff l       .debug_str	00000000 
00000908 l       .debug_str	00000000 
0000090f l       .debug_str	00000000 
00000928 l       .debug_str	00000000 
00000932 l       .debug_str	00000000 
0000094c l       .debug_str	00000000 
000009a0 l       .debug_str	00000000 
000009a8 l       .debug_str	00000000 
000009b3 l       .debug_str	00000000 
000009bd l       .debug_str	00000000 
000009c7 l       .debug_str	00000000 
000009cb l       .debug_str	00000000 
00000a1d l       .debug_str	00000000 
00000a79 l       .debug_str	00000000 
00000a7d l       .debug_str	00000000 
00000a86 l       .debug_str	00000000 
00000a8a l       .debug_str	00000000 
00000a94 l       .debug_str	00000000 
00000a9a l       .debug_str	00000000 
00000abb l       .debug_str	00000000 
00000af2 l       .debug_str	00000000 
00000b31 l       .debug_str	00000000 
00000b38 l       .debug_str	00000000 
00000b40 l       .debug_str	00000000 
00000b57 l       .debug_str	00000000 
00000b60 l       .debug_str	00000000 
00000b88 l       .debug_str	00000000 
00000bac l       .debug_str	00000000 
00000bb1 l       .debug_str	00000000 
00000bb7 l       .debug_str	00000000 
00000bc1 l       .debug_str	00000000 
00000bca l       .debug_str	00000000 
00000bd3 l       .debug_str	00000000 
00000bde l       .debug_str	00000000 
00000be8 l       .debug_str	00000000 
00000c0e l       .debug_str	00000000 
00000c26 l       .debug_str	00000000 
00000c30 l       .debug_str	00000000 
00000c52 l       .debug_str	00000000 
00000c5a l       .debug_str	00000000 
00000c61 l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000cac l       .debug_str	00000000 
00000cc5 l       .debug_str	00000000 
00000cd0 l       .debug_str	00000000 
00000cf8 l       .debug_str	00000000 
00000d1e l       .debug_str	00000000 
00000d28 l       .debug_str	00000000 
00000d30 l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
00000d3e l       .debug_str	00000000 
00000d43 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8c l       .debug_str	00000000 
00000da4 l       .debug_str	00000000 
00000dae l       .debug_str	00000000 
00000dd6 l       .debug_str	00000000 
00000dfb l       .debug_str	00000000 
00000e07 l       .debug_str	00000000 
00000e0f l       .debug_str	00000000 
00000e2e l       .debug_str	00000000 
00000e87 l       .debug_str	00000000 
00000ee8 l       .debug_str	00000000 
00000ef3 l       .debug_str	00000000 
00000f39 l       .debug_str	00000000 
00000f87 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000fcd l       .debug_str	00000000 
00001011 l       .debug_str	00000000 
0000101a l       .debug_str	00000000 
0000102a l       .debug_str	00000000 
00001032 l       .debug_str	00000000 
00001086 l       .debug_str	00000000 
000010e2 l       .debug_str	00000000 
000010ee l       .debug_str	00000000 
000010f7 l       .debug_str	00000000 
00001103 l       .debug_str	00000000 
0000110f l       .debug_str	00000000 
00001118 l       .debug_str	00000000 
00001120 l       .debug_str	00000000 
00001128 l       .debug_str	00000000 
0000113d l       .debug_str	00000000 
00001144 l       .debug_str	00000000 
0000116c l       .debug_str	00000000 
0000118e l       .debug_str	00000000 
00001196 l       .debug_str	00000000 
0000119f l       .debug_str	00000000 
000011ad l       .debug_str	00000000 
000011b4 l       .debug_str	00000000 
000011bb l       .debug_str	00000000 
000011cb l       .debug_str	00000000 
000011d4 l       .debug_str	00000000 
000011e2 l       .debug_str	00000000 
000011f0 l       .debug_str	00000000 
000011fc l       .debug_str	00000000 
00001208 l       .debug_str	00000000 
00001211 l       .debug_str	00000000 
00001220 l       .debug_str	00000000 
00001228 l       .debug_str	00000000 
00001241 l       .debug_str	00000000 
00001252 l       .debug_str	00000000 
0000125c l       .debug_str	00000000 
00001264 l       .debug_str	00000000 
0000127e l       .debug_str	00000000 
0000128a l       .debug_str	00000000 
000012ae l       .debug_str	00000000 
000012c7 l       .debug_str	00000000 
000012cc l       .debug_str	00000000 
000012d7 l       .debug_str	00000000 
000012fa l       .debug_str	00000000 
00001303 l       .debug_str	00000000 
0000131e l       .debug_str	00000000 
0000132b l       .debug_str	00000000 
00001350 l       .debug_str	00000000 
00001358 l       .debug_str	00000000 
00001378 l       .debug_str	00000000 
0000138e l       .debug_str	00000000 
00001399 l       .debug_str	00000000 
000013a9 l       .debug_str	00000000 
000013ad l       .debug_str	00000000 
000013c8 l       .debug_str	00000000 
000013d0 l       .debug_str	00000000 
000013f8 l       .debug_str	00000000 
0000141b l       .debug_str	00000000 
00001443 l       .debug_str	00000000 
00001469 l       .debug_str	00000000 
00001471 l       .debug_str	00000000 
00001488 l       .debug_str	00000000 
0000148d l       .debug_str	00000000 
00001495 l       .debug_str	00000000 
0000149e l       .debug_str	00000000 
000014a7 l       .debug_str	00000000 
000014b0 l       .debug_str	00000000 
000014d8 l       .debug_str	00000000 
000014fc l       .debug_str	00000000 
00001524 l       .debug_str	00000000 
0000154f l       .debug_str	00000000 
00001577 l       .debug_str	00000000 
0000159a l       .debug_str	00000000 
000015a3 l       .debug_str	00000000 
000015b8 l       .debug_str	00000000 
000015c3 l       .debug_str	00000000 
000015ca l       .debug_str	00000000 
000015f2 l       .debug_str	00000000 
00001614 l       .debug_str	00000000 
00001623 l       .debug_str	00000000 
0000162e l       .debug_str	00000000 
0000163d l       .debug_str	00000000 
00001652 l       .debug_str	00000000 
0000166a l       .debug_str	00000000 
000016bd l       .debug_str	00000000 
00001718 l       .debug_str	00000000 
0000172d l       .debug_str	00000000 
00001746 l       .debug_str	00000000 
0000176e l       .debug_str	00000000 
000017ae l       .debug_str	00000000 
000017b3 l       .debug_str	00000000 
000017e5 l       .debug_str	00000000 
000017f3 l       .debug_str	00000000 
000017f7 l       .debug_str	00000000 
000017fd l       .debug_str	00000000 
00001801 l       .debug_str	00000000 
0000180f l       .debug_str	00000000 
0000184d l       .debug_str	00000000 
0000185d l       .debug_str	00000000 
00001861 l       .debug_str	00000000 
00001866 l       .debug_str	00000000 
0000186a l       .debug_str	00000000 
0000186f l       .debug_str	00000000 
00001875 l       .debug_str	00000000 
00001879 l       .debug_str	00000000 
00001889 l       .debug_str	00000000 
00001895 l       .debug_str	00000000 
000018a1 l       .debug_str	00000000 
000018ad l       .debug_str	00000000 
000018ba l       .debug_str	00000000 
000018c6 l       .debug_str	00000000 
000018d4 l       .debug_str	00000000 
000018eb l       .debug_str	00000000 
000018fd l       .debug_str	00000000 
00001900 l       .debug_str	00000000 
00001920 l       .debug_str	00000000 
00001929 l       .debug_str	00000000 
00001932 l       .debug_str	00000000 
00001944 l       .debug_str	00000000 
00001953 l       .debug_str	00000000 
0000198d l       .debug_str	00000000 
000019a9 l       .debug_str	00000000 
000019c3 l       .debug_str	00000000 
000019cf l       .debug_str	00000000 
000019d9 l       .debug_str	00000000 
000019df l       .debug_str	00000000 
000019e4 l       .debug_str	00000000 
000019f5 l       .debug_str	00000000 
000019fe l       .debug_str	00000000 
00001a06 l       .debug_str	00000000 
00001a10 l       .debug_str	00000000 
00001a1d l       .debug_str	00000000 
00001a64 l       .debug_str	00000000 
00001a82 l       .debug_str	00000000 
00001a8a l       .debug_str	00000000 
00001a8f l       .debug_str	00000000 
00001a98 l       .debug_str	00000000 
00001ac8 l       .debug_str	00000000 
00001ad1 l       .debug_str	00000000 
00001ad7 l       .debug_str	00000000 
00001b1b l       .debug_str	00000000 
00001b36 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.11	00000010 .Lanon.586ce42fc55749843a9229a56173fbcf.11
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.13	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.13
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.15	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.15
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.16	00000011 .Lanon.586ce42fc55749843a9229a56173fbcf.16
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.18	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.18
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.2	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.2
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.20	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.20
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.21	00000016 .Lanon.586ce42fc55749843a9229a56173fbcf.21
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.22	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.22
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.23	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.23
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.24	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.24
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.25	00000019 .Lanon.586ce42fc55749843a9229a56173fbcf.25
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.26	00000001 .Lanon.586ce42fc55749843a9229a56173fbcf.26
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.27	00000013 .Lanon.586ce42fc55749843a9229a56173fbcf.27
00000000 l     O .rodata.cst8	00000008 .Lanon.586ce42fc55749843a9229a56173fbcf.28
00000000 l     O .rodata.cst16	00000010 .Lanon.586ce42fc55749843a9229a56173fbcf.29
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.3	0000000a .Lanon.586ce42fc55749843a9229a56173fbcf.3
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.30	00000010 .Lanon.586ce42fc55749843a9229a56173fbcf.30
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.31	0000000a .Lanon.586ce42fc55749843a9229a56173fbcf.31
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.33	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.33
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.34	00000010 .Lanon.586ce42fc55749843a9229a56173fbcf.34
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.35	00000010 .Lanon.586ce42fc55749843a9229a56173fbcf.35
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.36	00000011 .Lanon.586ce42fc55749843a9229a56173fbcf.36
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.37	00000011 .Lanon.586ce42fc55749843a9229a56173fbcf.37
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.38	00000001 .Lanon.586ce42fc55749843a9229a56173fbcf.38
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.39	00000010 .Lanon.586ce42fc55749843a9229a56173fbcf.39
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.4	0000000d .Lanon.586ce42fc55749843a9229a56173fbcf.4
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.41	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.41
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.42	00000010 .Lanon.586ce42fc55749843a9229a56173fbcf.42
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.43	00000010 .Lanon.586ce42fc55749843a9229a56173fbcf.43
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.45	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.45
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.46	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.46
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.47	0000004b .Lanon.586ce42fc55749843a9229a56173fbcf.47
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.48	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.48
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.49	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.49
00000000 l     O .rodata.cst4	00000004 .Lanon.586ce42fc55749843a9229a56173fbcf.5
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.50	00000021 .Lanon.586ce42fc55749843a9229a56173fbcf.50
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.51	00000012 .Lanon.586ce42fc55749843a9229a56173fbcf.51
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.52	00000009 .Lanon.586ce42fc55749843a9229a56173fbcf.52
00000008 l     O .rodata.cst8	00000008 .Lanon.586ce42fc55749843a9229a56173fbcf.53
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.54	00000001 .Lanon.586ce42fc55749843a9229a56173fbcf.54
00000000 l     O .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.9	00000018 .Lanon.586ce42fc55749843a9229a56173fbcf.9
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3cd16d96a1ab09b9E	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb6268d049e95435E	00000050 <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc9a0951cf9a1a237E	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN5mylib13listen_sensor16read_temperature17h8d029ed87c61b3dbE	000002f0 mylib::listen_sensor::read_temperature
00000000 l     O .data._ZN5mylib6mynewt6sensor17LISTENER_INTERNAL17h558a6fa11f6c60d7E	00000018 mylib::mynewt::sensor::LISTENER_INTERNAL
00000000 l     F .text._ZN5mylib6mynewt6sensor21null_sensor_data_func17hd8c42d7d02a586efE	00000004 mylib::mynewt::sensor::null_sensor_data_func
00000000 l     O .bss._ZN5mylib9send_coap12NETWORK_TASK17had6f3c509df1c5ddE	00000050 mylib::send_coap::NETWORK_TASK
00000000 l     O .bss._ZN5mylib9send_coap16NETWORK_IS_READY17h9c862a27d6aefdb0E.0.0	00000001 _ZN5mylib9send_coap16NETWORK_IS_READY17h9c862a27d6aefdb0E.0.0
00000000 l     F .text._ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E	0000011a mylib::send_coap::network_task_func
00000000 l     O .bss._ZN5mylib9send_coap18NETWORK_TASK_STACK17hfae71d0c8a5b92e9E	00000400 mylib::send_coap::NETWORK_TASK_STACK
00000000 l     O .rodata.str.2	00000010 str.2
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3cd16d96a1ab09b9E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3cd16d96a1ab09b9E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb6268d049e95435E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb6268d049e95435E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc9a0951cf9a1a237E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc9a0951cf9a1a237E
00000000 l    d  .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000000 .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE
00000000 l    d  .text._ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd0f0cd69f8864351E	00000000 .text._ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd0f0cd69f8864351E
00000000 l    d  .text._ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h482826e974b6b674E	00000000 .text._ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h482826e974b6b674E
00000000 l    d  .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hd8128d4c19f97636E	00000000 .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hd8128d4c19f97636E
00000000 l    d  .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h51ca089748e9a617E	00000000 .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h51ca089748e9a617E
00000000 l    d  .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE	00000000 .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE
00000000 l    d  .text._ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h944ab538693cd27cE	00000000 .text._ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h944ab538693cd27cE
00000000 l    d  .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hd66c9ca0cbe832d4E	00000000 .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hd66c9ca0cbe832d4E
00000000 l    d  .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hd585e14b041eaa38E	00000000 .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hd585e14b041eaa38E
00000000 l    d  .text._ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17hffe52c3c59b86de4E	00000000 .text._ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17hffe52c3c59b86de4E
00000000 l    d  .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000000 .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E
00000000 l    d  .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hadd0a9434ed12decE	00000000 .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hadd0a9434ed12decE
00000000 l    d  .text._ZN5mylib6mynewt6sensor21null_sensor_data_func17hd8c42d7d02a586efE	00000000 .text._ZN5mylib6mynewt6sensor21null_sensor_data_func17hd8c42d7d02a586efE
00000000 l    d  .text._ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hf0a2a793a330461fE	00000000 .text._ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hf0a2a793a330461fE
00000000 l    d  .text._ZN5mylib13listen_sensor16read_temperature17h8d029ed87c61b3dbE	00000000 .text._ZN5mylib13listen_sensor16read_temperature17h8d029ed87c61b3dbE
00000000 l    d  .text._ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E	00000000 .text._ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.0	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.0
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.1	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.1
00000000 l    d  .data._ZN5mylib6mynewt6sensor17LISTENER_INTERNAL17h558a6fa11f6c60d7E	00000000 .data._ZN5mylib6mynewt6sensor17LISTENER_INTERNAL17h558a6fa11f6c60d7E
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.6	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.6
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.7	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.7
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.8	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.8
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.10	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.10
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.12	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.12
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.14	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.14
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.17	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.17
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.19	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.19
00000000 l    d  .bss._ZN5mylib9send_coap12NETWORK_TASK17had6f3c509df1c5ddE	00000000 .bss._ZN5mylib9send_coap12NETWORK_TASK17had6f3c509df1c5ddE
00000000 l    d  .bss._ZN5mylib9send_coap18NETWORK_TASK_STACK17hfae71d0c8a5b92e9E	00000000 .bss._ZN5mylib9send_coap18NETWORK_TASK_STACK17hfae71d0c8a5b92e9E
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.32	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.32
00000000 l    d  .rodata.str.2	00000000 .rodata.str.2
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.40	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.40
00000000 l    d  .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.44	00000000 .rodata..Lanon.586ce42fc55749843a9229a56173fbcf.44
00000000 l    d  .bss._ZN5mylib9send_coap16NETWORK_IS_READY17h9c862a27d6aefdb0E.0.0	00000000 .bss._ZN5mylib9send_coap16NETWORK_IS_READY17h9c862a27d6aefdb0E.0.0
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
00000000         *UND*	00000000 core::fmt::Formatter::debug_lower_hex
00000000         *UND*	00000000 core::fmt::Formatter::debug_upper_hex
00000000         *UND*	00000000 core::fmt::Formatter::alternate
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::slice::slice_index_len_fail
00000000         *UND*	00000000 core::panicking::panic_bounds_check
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000 g     F .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h51ca089748e9a617E	0000000a <mylib::mynewt::os::os_dev as core::default::Default>::default
00000000 g     F .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hadd0a9434ed12decE	00000008 <mylib::mynewt::os::os_sem as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE	0000000c <mylib::mynewt::os::os_mbuf as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17hffe52c3c59b86de4E	0000000a <mylib::mynewt::os::os_task as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd0f0cd69f8864351E	0000000c <mylib::mynewt::os::os_event as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hd66c9ca0cbe832d4E	0000000a <mylib::mynewt::os::os_mutex as core::default::Default>::default
00000000 g     F .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hd8128d4c19f97636E	00000010 <mylib::mynewt::os::hal_timer as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE	0000000c <mylib::mynewt::os::os_eventq as core::default::Default>::default
00000000 g     F .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hd8128d4c19f97636E	00000010 <mylib::mynewt::os::os_mqueue as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h482826e974b6b674E	00000014 <mylib::mynewt::os::os_callout as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h944ab538693cd27cE	00000012 <mylib::mynewt::os::os_mempool as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::tinycbor::File as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_memblock as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_task_obj as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hd66c9ca0cbe832d4E	0000000a <mylib::mynewt::os::os_mbuf_pool as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000006 <mylib::mynewt::os::os_task_list as core::default::Default>::default
00000000 g     F .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hadd0a9434ed12decE	00000008 <mylib::mynewt::os::os_mbuf_pkthdr as core::default::Default>::default
00000000 g     F .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h51ca089748e9a617E	0000000a <mylib::mynewt::os::os_mempool_ext as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000006 <mylib::mynewt::os::os_task_stailq as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000006 <mylib::mynewt::os::os_callout_list as core::default::Default>::default
00000000 g     F .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hd585e14b041eaa38E	0000000e <mylib::mynewt::os::os_sanity_check as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE	0000000c <mylib::mynewt::tinycbor::CborValue as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hd66c9ca0cbe832d4E	0000000a <mylib::mynewt::tinycbor::CborParser as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000006 <mylib::mynewt::tinycbor::cbor_iovec as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE	0000000c <mylib::mynewt::tinycbor::CborEncoder as core::default::Default>::default
00000000 g     F .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hd585e14b041eaa38E	0000000e <mylib::mynewt::os::os_time_change_info as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_dev__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_sem__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_mbuf__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_task__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000006 <mylib::mynewt::os::os_task__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_task__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_event__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_mutex__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000006 <mylib::mynewt::os::hal_timer__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000006 <mylib::mynewt::os::os_eventq__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000006 <mylib::mynewt::os::os_mqueue__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hd66c9ca0cbe832d4E	0000000a <mylib::mynewt::os::os_time_change_listener as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E	00000006 <mylib::mynewt::os::os_callout__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_mempool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_mempool__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE	0000000c <mylib::mynewt::sensor_network::sensor_value as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_memblock__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_task_obj__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_mbuf_pkthdr__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_sanity_check__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hf0a2a793a330461fE	0000000e <mylib::mynewt::sensor_network::sensor_network_interface as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE	00000004 <mylib::mynewt::os::os_time_change_listener__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 cstr_core::CStr::from_ptr
00000000         *UND*	00000000 __aeabi_memclr4
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 cbor_encode_int
00000000         *UND*	00000000 cbor_encode_text_string
00000000         *UND*	00000000 cbor_encoder_close_container
00000000         *UND*	00000000 cbor_encoder_create_map
00000000         *UND*	00000000 console_buffer
00000000         *UND*	00000000 console_flush
00000000         *UND*	00000000 console_printhex
00000000         *UND*	00000000 device_get_name
00000000         *UND*	00000000 do_collector_post
00000000         *UND*	00000000 do_server_post
00000000         *UND*	00000000 g_encoder
00000000         *UND*	00000000 get_device_id
00000000         *UND*	00000000 get_temp_data
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 init_collector_post
00000000         *UND*	00000000 init_server_post
00000000         *UND*	00000000 is_collector_node
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000         *UND*	00000000 is_sensor_node
00000000         *UND*	00000000 is_standalone_node
00000000 g     F .text.main	000001a4 main
00000000         *UND*	00000000 null_sensor
00000000         *UND*	00000000 os_eventq_dflt_get
00000000         *UND*	00000000 os_eventq_run
00000000         *UND*	00000000 os_task_init
00000000         *UND*	00000000 os_time_delay
00000000         *UND*	00000000 register_collector_transport
00000000         *UND*	00000000 register_server_transport
00000000         *UND*	00000000 root_map
00000000 g     F .text.rust_begin_unwind	00000072 rust_begin_unwind
00000000         *UND*	00000000 rust_sysinit
00000000         *UND*	00000000 sensor_get_device
00000000         *UND*	00000000 sensor_mgr_find_next_bydevname
00000000         *UND*	00000000 sensor_register_listener
00000000         *UND*	00000000 sensor_set_poll_rate_ms
00000000         *UND*	00000000 should_send_to_collector



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3cd16d96a1ab09b9E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3cd16d96a1ab09b9E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hc0a5c2426ccebe61E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt>

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb6268d049e95435E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb6268d049e95435E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	b082      	sub	sp, #8
_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h3602c568aeeeaf2cE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2009
   6:	f8d1 8000 	ldr.w	r8, [r1]
   a:	460c      	mov	r4, r1
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2008
   c:	e9d1 6702 	ldrd	r6, r7, [r1, #8]
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb6268d049e95435E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
  10:	6805      	ldr	r5, [r0, #0]
_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h3602c568aeeeaf2cE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2015
  12:	4608      	mov	r0, r1
  14:	f7ff fffe 	bl	0 <core::fmt::Formatter::alternate>
  18:	6821      	ldr	r1, [r4, #0]
  1a:	b148      	cbz	r0, 30 <<&T as core::fmt::Debug>::fmt+0x30>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2016
  1c:	f041 0108 	orr.w	r1, r1, #8
  20:	6021      	str	r1, [r4, #0]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2018
  22:	68a0      	ldr	r0, [r4, #8]
  24:	2800      	cmp	r0, #0
  26:	bf02      	ittt	eq
  28:	2001      	moveq	r0, #1
  2a:	220a      	moveq	r2, #10
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2019
  2c:	e9c4 0202 	strdeq	r0, r2, [r4, #8]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2022
  30:	f041 0004 	orr.w	r0, r1, #4
  34:	6020      	str	r0, [r4, #0]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2024
  36:	6828      	ldr	r0, [r5, #0]
  38:	4621      	mov	r1, r4
  3a:	9001      	str	r0, [sp, #4]
  3c:	a801      	add	r0, sp, #4
  3e:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2026
  42:	e9c4 6702 	strd	r6, r7, [r4, #8]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2027
  46:	f8c4 8000 	str.w	r8, [r4]
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb6268d049e95435E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
  4a:	b002      	add	sp, #8
  4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc9a0951cf9a1a237E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc9a0951cf9a1a237E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h271d1c938b44f4eaE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt>

Disassembly of section .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE:

00000000 <<mylib::mynewt::tinycbor::File as core::default::Default>::default>:
_ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17ha1e81293a702204aE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/tinycbor.rs:31
    pub vmt: *const File_methods,
}
impl Default for File {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd0f0cd69f8864351E:

00000000 <<mylib::mynewt::os::os_event as core::default::Default>::default>:
_ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd0f0cd69f8864351E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:306
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_event {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17hcd7cf3c8a5a941c6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
_ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd0f0cd69f8864351E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:308
        unsafe { ::core::mem::zeroed() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h482826e974b6b674E:

00000000 <<mylib::mynewt::os::os_callout as core::default::Default>::default>:
_ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h482826e974b6b674E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:387
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_callout {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h4502de1f61055122E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
   e:	e9c0 1106 	strd	r1, r1, [r0, #24]
_ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h482826e974b6b674E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:389
        unsafe { ::core::mem::zeroed() }
    }
  12:	4770      	bx	lr

Disassembly of section .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hd8128d4c19f97636E:

00000000 <<mylib::mynewt::os::hal_timer as core::default::Default>::default>:
_ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hd8128d4c19f97636E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:444
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for hal_timer {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17ha0c166ec42daa0e0E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
_ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hd8128d4c19f97636E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:446
        unsafe { ::core::mem::zeroed() }
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h51ca089748e9a617E:

00000000 <<mylib::mynewt::os::os_dev as core::default::Default>::default>:
_ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h51ca089748e9a617E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:524
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_dev {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17hf8f524c9f8f324aaE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	2124      	movs	r1, #36	; 0x24
   4:	f7ff fffe 	bl	0 <__aeabi_memclr4>
_ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h51ca089748e9a617E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:526
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE:

00000000 <<mylib::mynewt::os::os_mbuf as core::default::Default>::default>:
_ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:646
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_mbuf {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h30141c0a30dea17cE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
_ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h198c7c398eb06b6aE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:648
        unsafe { ::core::mem::zeroed() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h944ab538693cd27cE:

00000000 <<mylib::mynewt::os::os_mempool as core::default::Default>::default>:
_ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h944ab538693cd27cE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:851
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_mempool {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17he0f4c7d1aaf12430E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
   e:	6181      	str	r1, [r0, #24]
_ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h944ab538693cd27cE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:853
        unsafe { ::core::mem::zeroed() }
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hd66c9ca0cbe832d4E:

00000000 <<mylib::mynewt::os::os_mutex as core::default::Default>::default>:
_ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hd66c9ca0cbe832d4E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:952
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_mutex {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h9433c5c55d4d4a6dE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	6081      	str	r1, [r0, #8]
_ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hd66c9ca0cbe832d4E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:954
        unsafe { ::core::mem::zeroed() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hd585e14b041eaa38E:

00000000 <<mylib::mynewt::os::os_sanity_check as core::default::Default>::default>:
_ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hd585e14b041eaa38E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:986
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_sanity_check {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h6ede2b24a97b64ffE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	6101      	str	r1, [r0, #16]
_ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hd585e14b041eaa38E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:988
        unsafe { ::core::mem::zeroed() }
    }
   c:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17hffe52c3c59b86de4E:

00000000 <<mylib::mynewt::os::os_task as core::default::Default>::default>:
_ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17hffe52c3c59b86de4E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1083
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_task {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17h1f42f7d724e687a3E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	2150      	movs	r1, #80	; 0x50
   4:	f7ff fffe 	bl	0 <__aeabi_memclr4>
_ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17hffe52c3c59b86de4E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1085
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E:

00000000 <<mylib::mynewt::os::os_task_list as core::default::Default>::default>:
_ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h3f2f239d70e49c29E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1140
    pub tqh_last: *mut *mut os_task,
}
impl Default for os_task_list {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
   0:	2000      	movs	r0, #0
   2:	2100      	movs	r1, #0
   4:	4770      	bx	lr

Disassembly of section .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hadd0a9434ed12decE:

00000000 <<mylib::mynewt::os::os_sem as core::default::Default>::default>:
_ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hadd0a9434ed12decE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1194
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_sem {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h60a99a1d8b26f49aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
_ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hadd0a9434ed12decE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1196
        unsafe { ::core::mem::zeroed() }
    }
   6:	4770      	bx	lr

Disassembly of section .text._ZN5mylib6mynewt6sensor21null_sensor_data_func17hd8c42d7d02a586efE:

00000000 <mylib::mynewt::sensor::null_sensor_data_func>:
_ZN5mylib6mynewt6sensor21null_sensor_data_func17hd8c42d7d02a586efE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:33
    sl_arg        : 0,
    sl_next       : 0,
};

///  Define a dummy sensor data function in case there is none.
extern fn null_sensor_data_func(_sensor: SensorPtr, _arg: SensorArg, _sensor_data: SensorDataPtr, _sensor_type: SensorType) -> i32 { 0 }
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

Disassembly of section .text._ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hf0a2a793a330461fE:

00000000 <<mylib::mynewt::sensor_network::sensor_network_interface as core::default::Default>::default>:
_ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hf0a2a793a330461fE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/sensor_network.rs:49
        ) -> ::cty::c_int,
    >,
    pub transport_registered: u8,
}
impl Default for sensor_network_interface {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h44e5719cfc7dfd90E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	6101      	str	r1, [r0, #16]
_ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hf0a2a793a330461fE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/sensor_network.rs:51
        unsafe { ::core::mem::zeroed() }
    }
   c:	4770      	bx	lr

Disassembly of section .text._ZN5mylib13listen_sensor16read_temperature17h8d029ed87c61b3dbE:

00000000 <mylib::listen_sensor::read_temperature>:
_ZN5mylib13listen_sensor16read_temperature17h8d029ed87c61b3dbE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:70
///  This listener function is called by Mynewt every 10 seconds (for local sensors) or when sensor data is received
///  (for Remote Sensors).  Mynewt has fetched the raw or computed temperature value, passed through `sensor_data`.
///  If this is a Sensor Node, we send the sensor data to the Collector Node.
///  If this is a Collector Node or Standalone Node, we send the sensor data to the CoAP server.  
///  Return 0 if we have processed the sensor data successfully.
extern fn read_temperature(sensor: SensorPtr, _arg: SensorArg, sensor_data: SensorDataPtr, sensor_type: SensorType) -> i32 {
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	b091      	sub	sp, #68	; 0x44
   4:	4604      	mov	r4, r0
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
///  Display message `msg` on the Arm Semihosting console (via OpenOCD).
pub fn console_print(msg: &[u8]) {
    let len = msg.len();
    unsafe {
        //  Call the Semihosting Console API, which is unsafe.
        console_buffer(msg.as_ptr(), len as u32);
   6:	f240 0000 	movw	r0, #0
   a:	f2c0 0000 	movt	r0, #0
   e:	2111      	movs	r1, #17
  10:	4616      	mov	r6, r2
  12:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  16:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib13listen_sensor16read_temperature17h8d029ed87c61b3dbE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:75
    unsafe {
        console_print(b"read_temperature\n");
        //  Check that the temperature data is valid.
        //  TODO
        if is_null_sensor_data(sensor_data) { return SYS_EINVAL; }  //  Exit if data is missing
  1a:	4630      	mov	r0, r6
  1c:	f7ff fffe 	bl	0 <is_null_sensor_data>
  20:	b118      	cbz	r0, 2a <mylib::listen_sensor::read_temperature+0x2a>
  22:	f06f 0001 	mvn.w	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:106
        }
        assert!(rc == 0);
        //#endif  //  MYNEWT_VAL(SENSOR_COAP)
    }
    0
}
  26:	b011      	add	sp, #68	; 0x44
  28:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:76
        assert!(!is_null_sensor(sensor));
  2a:	4620      	mov	r0, r4
  2c:	f7ff fffe 	bl	0 <is_null_sensor>
  30:	2800      	cmp	r0, #0
  32:	f040 80c8 	bne.w	1c6 <mylib::listen_sensor::read_temperature+0x1c6>
  36:	e9dd 1016 	ldrd	r1, r0, [sp, #88]	; 0x58
_ZN5mylib13listen_sensor15get_temperature17h2edc08c394ae5068E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:114
///  `sensor_type` indicates whether `sensor_data` contains raw or computed temperature.  We return 
///  the raw or computed temperature, as well as the key and value type.
fn get_temperature(sensor_data: *const CVoid, sensor_type: SensorType) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                                //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
  3a:	f081 6180 	eor.w	r1, r1, #67108864	; 0x4000000
  3e:	ea41 0700 	orr.w	r7, r1, r0
_ZN5mylib13listen_sensor16read_temperature17h8d029ed87c61b3dbE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:80
        let device = sensor_get_device(sensor);
  42:	4620      	mov	r0, r4
  44:	f7ff fffe 	bl	0 <sensor_get_device>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:81
        let device_name_ptr: *const c_char = device_get_name(device);
  48:	f7ff fffe 	bl	0 <device_get_name>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:82
        let device_name: &CStr = CStr::from_ptr(device_name_ptr);
  4c:	f7ff fffe 	bl	0 <cstr_core::CStr::from_ptr>
  50:	4604      	mov	r4, r0
  52:	460d      	mov	r5, r1
  54:	2000      	movs	r0, #0
_ZN5mylib13listen_sensor15get_temperature17h2edc08c394ae5068E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:114
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
  56:	b9c7      	cbnz	r7, 8a <mylib::listen_sensor::read_temperature+0x8a>
  58:	a905      	add	r1, sp, #20
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:116
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = SensorTempRawData {
  5a:	f88d 0018 	strb.w	r0, [sp, #24]
  5e:	9005      	str	r0, [sp, #20]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:120
                strd_temp_raw: 0,
                strd_temp_raw_is_valid: 0,
            };
            let rc = unsafe { get_temp_raw_data(sensor_data, &mut rawtempdata) };
  60:	4630      	mov	r0, r6
  62:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:121
            assert!(rc == 0);
  66:	2800      	cmp	r0, #0
  68:	f040 80c2 	bne.w	1f0 <mylib::listen_sensor::read_temperature+0x1f0>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:124

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  6c:	f89d 0018 	ldrb.w	r0, [sp, #24]
  70:	2800      	cmp	r0, #0
  72:	f000 80af 	beq.w	1d4 <mylib::listen_sensor::read_temperature+0x1d4>
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  76:	f240 0000 	movw	r0, #0
  7a:	2119      	movs	r1, #25
  7c:	f2c0 0000 	movt	r0, #0
  80:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  84:	f7ff fffe 	bl	0 <console_flush>
  88:	e00e      	b.n	a8 <mylib::listen_sensor::read_temperature+0xa8>
_ZN5mylib13listen_sensor15get_temperature17h2edc08c394ae5068E():
  8a:	a905      	add	r1, sp, #20
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:132
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console_print(b"TMP listener got rawtmp \n");  // return_value->int_val);
        },
        SENSOR_TYPE_AMBIENT_TEMPERATURE => {      //  If this is computed temperature...
            //  Interpret the sensor data as a sensor_temp_data struct that contains computed temp.
            let mut tempdata = SensorTempData {
  8c:	f88d 0018 	strb.w	r0, [sp, #24]
  90:	9005      	str	r0, [sp, #20]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:136
                std_temp: 0.0,
                std_temp_is_valid: 0,
            };
            let rc = unsafe { get_temp_data(sensor_data, &mut tempdata) };
  92:	4630      	mov	r0, r6
  94:	f7ff fffe 	bl	0 <get_temp_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:137
            assert!(rc == 0);
  98:	2800      	cmp	r0, #0
  9a:	f040 80b0 	bne.w	1fe <mylib::listen_sensor::read_temperature+0x1fe>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:140

            //  Check that the computed temperature data is valid.
            if tempdata.std_temp_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  9e:	f89d 0018 	ldrb.w	r0, [sp, #24]
  a2:	2800      	cmp	r0, #0
  a4:	f000 8096 	beq.w	1d4 <mylib::listen_sensor::read_temperature+0x1d4>
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  a8:	f240 0000 	movw	r0, #0
  ac:	2111      	movs	r1, #17
  ae:	f2c0 0000 	movt	r0, #0
  b2:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  b6:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib9send_coap16send_sensor_data17h12dd0cfb6329091cE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:112
///  so this function will return without waiting for the message to be transmitted.  
///  Return 0 if successful, SYS_EAGAIN if network is not ready yet.
pub fn send_sensor_data(sensor_val: &SensorValue, sensor_node: &CStr) -> i32 {
	console_print(b"send_sensor_data\n");
    //  TODO: Remove val
    let mut val = sensor_value{
  ba:	f240 0600 	movw	r6, #0
  be:	2000      	movs	r0, #0
  c0:	9003      	str	r0, [sp, #12]
  c2:	f2c0 0600 	movt	r6, #0
  c6:	f8ad 0008 	strh.w	r0, [sp, #8]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:119
        val_type: 0,
        int_val: 0,
        float_val: 0.0,
    };
	//  For Sensor Node: Transmit the sensor data to the Collector Node as CBOR.
	if unsafe { should_send_to_collector(&mut val, sensor_node.as_ptr()) } { 
  ca:	4621      	mov	r1, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:112
    let mut val = sensor_value{
  cc:	9001      	str	r0, [sp, #4]
  ce:	4668      	mov	r0, sp
  d0:	9600      	str	r6, [sp, #0]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:119
	if unsafe { should_send_to_collector(&mut val, sensor_node.as_ptr()) } { 
  d2:	f7ff fffe 	bl	0 <should_send_to_collector>
  d6:	b3b0      	cbz	r0, 70 <mylib::listen_sensor::read_temperature+0x70>
_ZN5mylib9send_coap29send_sensor_data_to_collector17h7df1220008b3c803E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:197
///  to be transmitted.  Return 0 if successful, `SYS_EAGAIN` if network is not ready yet.
///  The CoAP payload needs to be very compact (under 32 bytes) so it will be encoded in CBOR like this:
///  `{ t: 2870 }`
fn send_sensor_data_to_collector(sensor_val: &SensorValue, node_id: &CStr) -> i32 {
	////  TODO: if let SensorValueType::None = sensor_val.val { assert!(false); }
    if unsafe { !NETWORK_IS_READY } { return SYS_EAGAIN; }  //  If network is not ready, tell caller (Sensor Listener) to try later.
  d8:	f240 0000 	movw	r0, #0
  dc:	f2c0 0000 	movt	r0, #0
  e0:	7800      	ldrb	r0, [r0, #0]
  e2:	2801      	cmp	r0, #1
  e4:	d169      	bne.n	1ba <mylib::listen_sensor::read_temperature+0x1ba>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:202

    //  Start composing the CoAP Collector message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = unsafe { init_collector_post() };  assert!(rc);
  e6:	f7ff fffe 	bl	0 <init_collector_post>
  ea:	2800      	cmp	r0, #0
  ec:	f000 80bd 	beq.w	26a <mylib::listen_sensor::read_temperature+0x26a>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:205

    //  Compose the CoAP Payload in CBOR using the `coap!()` macro.
    let _payload = coap!(@cbor {
  f0:	f240 0400 	movw	r4, #0
  f4:	f240 0500 	movw	r5, #0
  f8:	f2c0 0400 	movt	r4, #0
  fc:	f2c0 0500 	movt	r5, #0
 100:	4620      	mov	r0, r4
 102:	4629      	mov	r1, r5
 104:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 108:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 10c:	f240 0100 	movw	r1, #0
 110:	4628      	mov	r0, r5
 112:	f2c0 0100 	movt	r1, #0
 116:	2201      	movs	r2, #1
 118:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 11c:	4628      	mov	r0, r5
 11e:	f240 42d2 	movw	r2, #1234	; 0x4d2
 122:	2300      	movs	r3, #0
 124:	f7ff fffe 	bl	0 <cbor_encode_int>
 128:	4620      	mov	r0, r4
 12a:	4629      	mov	r1, r5
 12c:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:213
    });

    //  Post the CoAP Collector message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    let rc = unsafe { do_collector_post() };  assert!(rc);
 130:	f7ff fffe 	bl	0 <do_collector_post>
 134:	2800      	cmp	r0, #0
 136:	f000 809f 	beq.w	278 <mylib::listen_sensor::read_temperature+0x278>
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
 13a:	f240 0000 	movw	r0, #0
 13e:	2121      	movs	r1, #33	; 0x21
 140:	f2c0 0000 	movt	r0, #0
 144:	e024      	b.n	190 <mylib::listen_sensor::read_temperature+0x190>
_ZN9cstr_core4CStr8to_bytes17h01698a6d2c5e5247E():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cstr_core-0.1.2/src/lib.rs:1033
    /// assert_eq!(c_str.to_bytes(), b"foo");
    /// ```
    #[inline]
    pub fn to_bytes(&self) -> &[u8] {
        let bytes = self.to_bytes_with_nul();
        &bytes[..bytes.len() - 1]
 146:	1e68      	subs	r0, r5, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h3271bd4ab5986fe2E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/slice/mod.rs:2745
 148:	2d00      	cmp	r5, #0
 14a:	d05f      	beq.n	20c <mylib::listen_sensor::read_temperature+0x20c>
_ZN5mylib9send_coap26send_sensor_data_to_server17h11501310240ba06bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:147
    assert_ne!(node_id.to_bytes()[0], 0);
 14c:	2800      	cmp	r0, #0
 14e:	d061      	beq.n	214 <mylib::listen_sensor::read_temperature+0x214>
 150:	7820      	ldrb	r0, [r4, #0]
 152:	2800      	cmp	r0, #0
 154:	d067      	beq.n	226 <mylib::listen_sensor::read_temperature+0x226>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:148
	if unsafe { !NETWORK_IS_READY } { return SYS_EAGAIN; }  //  If network is not ready, tell caller (Sensor Listener) to try later.
 156:	f240 0000 	movw	r0, #0
 15a:	f2c0 0000 	movt	r0, #0
 15e:	7800      	ldrb	r0, [r0, #0]
 160:	2801      	cmp	r0, #1
 162:	d12a      	bne.n	1ba <mylib::listen_sensor::read_temperature+0x1ba>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:149
	let device_id = unsafe { get_device_id() };  assert_ne!(device_id, 0 as *const ::cty::c_char);
 164:	f7ff fffe 	bl	0 <get_device_id>
 168:	2800      	cmp	r0, #0
 16a:	9004      	str	r0, [sp, #16]
 16c:	f000 808b 	beq.w	286 <mylib::listen_sensor::read_temperature+0x286>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:154
	let rc = unsafe { init_server_post(0 as *const ::cty::c_char) };  assert!(rc);
 170:	2000      	movs	r0, #0
 172:	f7ff fffe 	bl	0 <init_server_post>
 176:	2800      	cmp	r0, #0
 178:	f000 80ac 	beq.w	2d4 <mylib::listen_sensor::read_temperature+0x2d4>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:173
    let rc = unsafe { do_server_post() };  assert!(rc);
 17c:	f7ff fffe 	bl	0 <do_server_post>
 180:	2800      	cmp	r0, #0
 182:	f000 80ae 	beq.w	2e2 <mylib::listen_sensor::read_temperature+0x2e2>
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
 186:	f240 0000 	movw	r0, #0
 18a:	214b      	movs	r1, #75	; 0x4b
 18c:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap16send_sensor_data17h12dd0cfb6329091cE():
 190:	f7ff fffe 	bl	0 <console_buffer>
 194:	f7ff fffe 	bl	0 <console_flush>
 198:	2000      	movs	r0, #0
_ZN5mylib13listen_sensor16read_temperature17h8d029ed87c61b3dbE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:98
        if rc == SYS_EAGAIN {
 19a:	2800      	cmp	r0, #0
 19c:	d011      	beq.n	1c2 <mylib::listen_sensor::read_temperature+0x1c2>
 19e:	3006      	adds	r0, #6
 1a0:	d11f      	bne.n	1e2 <mylib::listen_sensor::read_temperature+0x1e2>
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
 1a2:	f240 0000 	movw	r0, #0
 1a6:	2116      	movs	r1, #22
 1a8:	f2c0 0000 	movt	r0, #0
 1ac:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
 1b0:	f7ff fffe 	bl	0 <console_flush>
 1b4:	2000      	movs	r0, #0
_ZN5mylib13listen_sensor16read_temperature17h8d029ed87c61b3dbE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:106
}
 1b6:	b011      	add	sp, #68	; 0x44
 1b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 1ba:	f06f 0005 	mvn.w	r0, #5
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:98
        if rc == SYS_EAGAIN {
 1be:	2800      	cmp	r0, #0
 1c0:	d1ed      	bne.n	19e <mylib::listen_sensor::read_temperature+0x19e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:106
}
 1c2:	b011      	add	sp, #68	; 0x44
 1c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:76
        assert!(!is_null_sensor(sensor));
 1c6:	f240 0000 	movw	r0, #0
 1ca:	f2c0 0000 	movt	r0, #0
 1ce:	f7ff fffe 	bl	0 <core::panicking::panic>
 1d2:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:87
        if let SensorValueType::None = temp_sensor_value.val { assert!(false); }  //  Invalid type
 1d4:	f240 0000 	movw	r0, #0
 1d8:	f2c0 0000 	movt	r0, #0
 1dc:	f7ff fffe 	bl	0 <core::panicking::panic>
 1e0:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:102
        assert!(rc == 0);
 1e2:	f240 0000 	movw	r0, #0
 1e6:	f2c0 0000 	movt	r0, #0
 1ea:	f7ff fffe 	bl	0 <core::panicking::panic>
 1ee:	defe      	udf	#254	; 0xfe
_ZN5mylib13listen_sensor15get_temperature17h2edc08c394ae5068E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:121
            assert!(rc == 0);
 1f0:	f240 0000 	movw	r0, #0
 1f4:	f2c0 0000 	movt	r0, #0
 1f8:	f7ff fffe 	bl	0 <core::panicking::panic>
 1fc:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:137
            assert!(rc == 0);
 1fe:	f240 0000 	movw	r0, #0
 202:	f2c0 0000 	movt	r0, #0
 206:	f7ff fffe 	bl	0 <core::panicking::panic>
 20a:	defe      	udf	#254	; 0xfe
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h3271bd4ab5986fe2E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/slice/mod.rs:2746
 20c:	2100      	movs	r1, #0
 20e:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
 212:	defe      	udf	#254	; 0xfe
_ZN5mylib9send_coap26send_sensor_data_to_server17h11501310240ba06bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:147
    assert_ne!(node_id.to_bytes()[0], 0);
 214:	f240 0000 	movw	r0, #0
 218:	2100      	movs	r1, #0
 21a:	f2c0 0000 	movt	r0, #0
 21e:	2200      	movs	r2, #0
 220:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 224:	defe      	udf	#254	; 0xfe
 226:	f240 0000 	movw	r0, #0
 22a:	a910      	add	r1, sp, #64	; 0x40
 22c:	f2c0 0000 	movt	r0, #0
 230:	940f      	str	r4, [sp, #60]	; 0x3c
 232:	900e      	str	r0, [sp, #56]	; 0x38
 234:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 238:	a80f      	add	r0, sp, #60	; 0x3c
 23a:	900b      	str	r0, [sp, #44]	; 0x2c
 23c:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 23e:	900a      	str	r0, [sp, #40]	; 0x28
 240:	a80b      	add	r0, sp, #44	; 0x2c
 242:	9009      	str	r0, [sp, #36]	; 0x24
 244:	2000      	movs	r0, #0
_ZN5mylib9send_coap26send_sensor_data_to_server17h11501310240ba06bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:147
 246:	9610      	str	r6, [sp, #64]	; 0x40
 248:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 24c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 250:	2003      	movs	r0, #3
 252:	9006      	str	r0, [sp, #24]
 254:	f240 0000 	movw	r0, #0
 258:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap26send_sensor_data_to_server17h11501310240ba06bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:147
 25c:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 260:	9005      	str	r0, [sp, #20]
 262:	a805      	add	r0, sp, #20
_ZN5mylib9send_coap26send_sensor_data_to_server17h11501310240ba06bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:147
 264:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 268:	defe      	udf	#254	; 0xfe
_ZN5mylib9send_coap29send_sensor_data_to_collector17h7df1220008b3c803E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:202
    let rc = unsafe { init_collector_post() };  assert!(rc);
 26a:	f240 0000 	movw	r0, #0
 26e:	f2c0 0000 	movt	r0, #0
 272:	f7ff fffe 	bl	0 <core::panicking::panic>
 276:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:213
    let rc = unsafe { do_collector_post() };  assert!(rc);
 278:	f240 0000 	movw	r0, #0
 27c:	f2c0 0000 	movt	r0, #0
 280:	f7ff fffe 	bl	0 <core::panicking::panic>
 284:	defe      	udf	#254	; 0xfe
_ZN5mylib9send_coap16send_sensor_data17h12dd0cfb6329091cE():
 286:	a804      	add	r0, sp, #16
_ZN5mylib9send_coap26send_sensor_data_to_server17h11501310240ba06bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:149
	let device_id = unsafe { get_device_id() };  assert_ne!(device_id, 0 as *const ::cty::c_char);
 288:	900f      	str	r0, [sp, #60]	; 0x3c
 28a:	f240 0000 	movw	r0, #0
 28e:	a910      	add	r1, sp, #64	; 0x40
 290:	f2c0 0000 	movt	r0, #0
 294:	900e      	str	r0, [sp, #56]	; 0x38
 296:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 29a:	a80f      	add	r0, sp, #60	; 0x3c
 29c:	900b      	str	r0, [sp, #44]	; 0x2c
 29e:	f240 0000 	movw	r0, #0
 2a2:	f2c0 0000 	movt	r0, #0
 2a6:	f240 0100 	movw	r1, #0
 2aa:	9010      	str	r0, [sp, #64]	; 0x40
 2ac:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 2ae:	900a      	str	r0, [sp, #40]	; 0x28
 2b0:	a80b      	add	r0, sp, #44	; 0x2c
 2b2:	9009      	str	r0, [sp, #36]	; 0x24
 2b4:	2000      	movs	r0, #0
 2b6:	e9cd 0007 	strd	r0, r0, [sp, #28]
 2ba:	2003      	movs	r0, #3
 2bc:	9006      	str	r0, [sp, #24]
 2be:	f240 0000 	movw	r0, #0
 2c2:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap26send_sensor_data_to_server17h11501310240ba06bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:149
 2c6:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 2ca:	9005      	str	r0, [sp, #20]
 2cc:	a805      	add	r0, sp, #20
_ZN5mylib9send_coap26send_sensor_data_to_server17h11501310240ba06bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:149
 2ce:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 2d2:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:154
	let rc = unsafe { init_server_post(0 as *const ::cty::c_char) };  assert!(rc);
 2d4:	f240 0000 	movw	r0, #0
 2d8:	f2c0 0000 	movt	r0, #0
 2dc:	f7ff fffe 	bl	0 <core::panicking::panic>
 2e0:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:173
    let rc = unsafe { do_server_post() };  assert!(rc);
 2e2:	f240 0000 	movw	r0, #0
 2e6:	f2c0 0000 	movt	r0, #0
 2ea:	f7ff fffe 	bl	0 <core::panicking::panic>
 2ee:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E:

00000000 <mylib::send_coap::network_task_func>:
_ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:75
extern "C" fn network_task_func(_arg: *mut ::cty::c_void) {
   0:	b08e      	sub	sp, #56	; 0x38
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
   2:	f240 0000 	movw	r0, #0
   6:	210a      	movs	r1, #10
   8:	f2c0 0000 	movt	r0, #0
   c:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  10:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:76
	console_print(b"NET start\n");  assert!(unsafe { !NETWORK_IS_READY });
  14:	f240 0400 	movw	r4, #0
  18:	f2c0 0400 	movt	r4, #0
  1c:	7820      	ldrb	r0, [r4, #0]
  1e:	2801      	cmp	r0, #1
  20:	d026      	beq.n	70 <mylib::send_coap::network_task_func+0x70>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:80
	if unsafe { is_standalone_node() } || unsafe { is_collector_node() } {
  22:	f7ff fffe 	bl	0 <is_standalone_node>
  26:	b910      	cbnz	r0, 8 <is_collector_node+0x8>
  28:	f7ff fffe 	bl	0 <is_collector_node>
  2c:	b120      	cbz	r0, c <register_server_transport+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:81
		let rc = unsafe { register_server_transport() };  assert_eq!(rc, 0);
  2e:	f7ff fffe 	bl	0 <register_server_transport>
  32:	2800      	cmp	r0, #0
  34:	9001      	str	r0, [sp, #4]
  36:	d122      	bne.n	7e <mylib::send_coap::network_task_func+0x7e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:85
	if unsafe { is_collector_node() } || unsafe { is_sensor_node() } {
  38:	f7ff fffe 	bl	0 <is_collector_node>
  3c:	b910      	cbnz	r0, 8 <is_sensor_node+0x8>
  3e:	f7ff fffe 	bl	0 <is_sensor_node>
  42:	b120      	cbz	r0, c <register_collector_transport+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:86
		let rc = unsafe { register_collector_transport() };  assert_eq!(rc, 0);
  44:	f7ff fffe 	bl	0 <register_collector_transport>
  48:	2800      	cmp	r0, #0
  4a:	9001      	str	r0, [sp, #4]
  4c:	d13e      	bne.n	cc <mylib::send_coap::network_task_func+0xcc>
  4e:	2001      	movs	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:91
	unsafe { NETWORK_IS_READY = true; }  //  Indicate that network is ready.
  50:	7020      	strb	r0, [r4, #0]
  52:	f240 0400 	movw	r4, #0
  56:	f2c0 0400 	movt	r4, #0
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  5a:	4620      	mov	r0, r4
  5c:	2111      	movs	r1, #17
  5e:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  62:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:95
		unsafe { os_time_delay(10 * OS_TICKS_PER_SEC); }                   //  Wait 10 seconds before repeating.
  66:	f242 7010 	movw	r0, #10000	; 0x2710
  6a:	f7ff fffe 	bl	0 <os_time_delay>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:93
	loop {  //  Loop forever...        
  6e:	e7f4      	b.n	ffffffec <.Lanon.586ce42fc55749843a9229a56173fbcf.53+0xffffffe4>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:76
	console_print(b"NET start\n");  assert!(unsafe { !NETWORK_IS_READY });
  70:	f240 0000 	movw	r0, #0
  74:	f2c0 0000 	movt	r0, #0
  78:	f7ff fffe 	bl	0 <core::panicking::panic>
  7c:	defe      	udf	#254	; 0xfe
  7e:	a801      	add	r0, sp, #4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:81
		let rc = unsafe { register_server_transport() };  assert_eq!(rc, 0);
  80:	900c      	str	r0, [sp, #48]	; 0x30
  82:	f240 0000 	movw	r0, #0
  86:	a90d      	add	r1, sp, #52	; 0x34
  88:	f2c0 0000 	movt	r0, #0
  8c:	900b      	str	r0, [sp, #44]	; 0x2c
  8e:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  92:	a80c      	add	r0, sp, #48	; 0x30
  94:	9008      	str	r0, [sp, #32]
  96:	f240 0000 	movw	r0, #0
  9a:	f2c0 0000 	movt	r0, #0
  9e:	f240 0100 	movw	r1, #0
  a2:	900d      	str	r0, [sp, #52]	; 0x34
  a4:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  a6:	9007      	str	r0, [sp, #28]
  a8:	a808      	add	r0, sp, #32
  aa:	9006      	str	r0, [sp, #24]
  ac:	2000      	movs	r0, #0
  ae:	e9cd 0004 	strd	r0, r0, [sp, #16]
  b2:	2003      	movs	r0, #3
  b4:	9003      	str	r0, [sp, #12]
  b6:	f240 0000 	movw	r0, #0
  ba:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:81
  be:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  c2:	9002      	str	r0, [sp, #8]
  c4:	a802      	add	r0, sp, #8
_ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:81
  c6:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  ca:	defe      	udf	#254	; 0xfe
  cc:	a801      	add	r0, sp, #4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:86
		let rc = unsafe { register_collector_transport() };  assert_eq!(rc, 0);
  ce:	900c      	str	r0, [sp, #48]	; 0x30
  d0:	f240 0000 	movw	r0, #0
  d4:	a90d      	add	r1, sp, #52	; 0x34
  d6:	f2c0 0000 	movt	r0, #0
  da:	900b      	str	r0, [sp, #44]	; 0x2c
  dc:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  e0:	a80c      	add	r0, sp, #48	; 0x30
  e2:	9008      	str	r0, [sp, #32]
  e4:	f240 0000 	movw	r0, #0
  e8:	f2c0 0000 	movt	r0, #0
  ec:	f240 0100 	movw	r1, #0
  f0:	900d      	str	r0, [sp, #52]	; 0x34
  f2:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  f4:	9007      	str	r0, [sp, #28]
  f6:	a808      	add	r0, sp, #32
  f8:	9006      	str	r0, [sp, #24]
  fa:	2000      	movs	r0, #0
  fc:	e9cd 0004 	strd	r0, r0, [sp, #16]
 100:	2003      	movs	r0, #3
 102:	9003      	str	r0, [sp, #12]
 104:	f240 0000 	movw	r0, #0
 108:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:86
 10c:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 110:	9002      	str	r0, [sp, #8]
 112:	a802      	add	r0, sp, #8
_ZN5mylib9send_coap17network_task_func17h4cb9c6d5020b51c1E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:86
 114:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 118:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:26
use crate::listen_sensor::*;    //  Import listen_sensor.rs for polling the temperature sensor
use crate::send_coap::*;        //  Import send_coap.rs for sending sensor data

///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
pub extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b092      	sub	sp, #72	; 0x48
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:28
    //  Init Mynewt system.
    unsafe { rust_sysinit()  };
   2:	f7ff fffe 	bl	0 <rust_sysinit>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:29
    unsafe { console_flush() };
   6:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
   a:	f240 0000 	movw	r0, #0
   e:	2113      	movs	r1, #19
  10:	f2c0 0000 	movt	r0, #0
  14:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  18:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib9send_coap18start_network_task17hbb48babd6a17a35bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:54
    let rc = unsafe { os_task_init( //  Create a new task and start it...
  1c:	f240 0100 	movw	r1, #0
  20:	f44f 7080 	mov.w	r0, #256	; 0x100
  24:	f2c0 0100 	movt	r1, #0
  28:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  2c:	230a      	movs	r3, #10
  2e:	2400      	movs	r4, #0
  30:	e9cd 3200 	strd	r3, r2, [sp]
  34:	f240 0200 	movw	r2, #0
  38:	e9cd 1002 	strd	r1, r0, [sp, #8]
  3c:	f240 0000 	movw	r0, #0
  40:	f240 0100 	movw	r1, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	f2c0 0100 	movt	r1, #0
  4c:	f2c0 0200 	movt	r2, #0
  50:	2300      	movs	r3, #0
  52:	f7ff fffe 	bl	0 <os_task_init>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:63
    assert_eq!(rc, 0);
  56:	2800      	cmp	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:54
    let rc = unsafe { os_task_init( //  Create a new task and start it...
  58:	9009      	str	r0, [sp, #36]	; 0x24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:63
    assert_eq!(rc, 0);
  5a:	d141      	bne.n	e0 <main+0xe0>
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  5c:	f240 0000 	movw	r0, #0
  60:	210a      	movs	r1, #10
  62:	f2c0 0000 	movt	r0, #0
  66:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  6a:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib13listen_sensor21start_sensor_listener17h2fa31960787317c0E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:34
    let rc = unsafe { sensor_set_poll_rate_ms(SENSOR_DEVICE, SENSOR_POLL_TIME) };
  6e:	f240 0000 	movw	r0, #0
  72:	f242 7110 	movw	r1, #10000	; 0x2710
  76:	f2c0 0000 	movt	r0, #0
  7a:	f7ff fffe 	bl	0 <sensor_set_poll_rate_ms>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:35
    assert_eq!(rc, 0);
  7e:	2800      	cmp	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:34
    let rc = unsafe { sensor_set_poll_rate_ms(SENSOR_DEVICE, SENSOR_POLL_TIME) };
  80:	9009      	str	r0, [sp, #36]	; 0x24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:35
    assert_eq!(rc, 0);
  82:	d153      	bne.n	12c <main+0x12c>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:38
    let listen_sensor = unsafe { sensor_mgr_find_next_bydevname(SENSOR_DEVICE, null_sensor()) };
  84:	f7ff fffe 	bl	0 <null_sensor>
  88:	4601      	mov	r1, r0
  8a:	f240 0000 	movw	r0, #0
  8e:	f2c0 0000 	movt	r0, #0
  92:	f7ff fffe 	bl	0 <sensor_mgr_find_next_bydevname>
  96:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:39
    assert!(unsafe{ !is_null_sensor(listen_sensor) });
  98:	f7ff fffe 	bl	0 <is_null_sensor>
  9c:	2800      	cmp	r0, #0
  9e:	d16c      	bne.n	17a <main+0x17a>
_ZN5mylib6mynewt6sensor17register_listener17hdfbfc768c2525aeaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:15
    unsafe { assert!(LISTENER_INTERNAL.sl_sensor_type == 0) };  //  Make sure it's not used.
  a0:	f240 0100 	movw	r1, #0
  a4:	f2c0 0100 	movt	r1, #0
  a8:	e9d1 0200 	ldrd	r0, r2, [r1]
  ac:	4310      	orrs	r0, r2
  ae:	d16b      	bne.n	188 <main+0x188>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:17
    unsafe { LISTENER_INTERNAL = listener };
  b0:	f240 0300 	movw	r3, #0
  b4:	2000      	movs	r0, #0
  b6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  ba:	f04f 0c01 	mov.w	ip, #1
  be:	f2c0 0300 	movt	r3, #0
  c2:	e9c1 2000 	strd	r2, r0, [r1]
  c6:	e9c1 3c02 	strd	r3, ip, [r1, #8]
  ca:	6108      	str	r0, [r1, #16]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:19
    unsafe { sensor_register_listener(sensor, &mut LISTENER_INTERNAL) }
  cc:	4620      	mov	r0, r4
  ce:	f7ff fffe 	bl	0 <sensor_register_listener>
_ZN5mylib13listen_sensor21start_sensor_listener17h2fa31960787317c0E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:51
    assert!(rc == 0);
  d2:	2800      	cmp	r0, #0
  d4:	d15f      	bne.n	196 <main+0x196>
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:56

    //  Main event loop
    loop {                            //  Loop forever...
        unsafe {
            os_eventq_run(            //  Process events...
                os_eventq_dflt_get()  //  From default event queue.
  d6:	f7ff fffe 	bl	0 <os_eventq_dflt_get>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:55
            os_eventq_run(            //  Process events...
  da:	f7ff fffe 	bl	0 <os_eventq_run>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:53
    loop {                            //  Loop forever...
  de:	e7fa      	b.n	d6 <main+0xd6>
  e0:	a809      	add	r0, sp, #36	; 0x24
_ZN5mylib9send_coap18start_network_task17hbb48babd6a17a35bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:63
  e2:	9010      	str	r0, [sp, #64]	; 0x40
  e4:	f240 0000 	movw	r0, #0
  e8:	a911      	add	r1, sp, #68	; 0x44
  ea:	f2c0 0000 	movt	r0, #0
  ee:	9008      	str	r0, [sp, #32]
  f0:	e9cd 0106 	strd	r0, r1, [sp, #24]
  f4:	a810      	add	r0, sp, #64	; 0x40
  f6:	9005      	str	r0, [sp, #20]
  f8:	f240 0000 	movw	r0, #0
  fc:	f2c0 0000 	movt	r0, #0
 100:	f240 0100 	movw	r1, #0
 104:	9011      	str	r0, [sp, #68]	; 0x44
 106:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 108:	900f      	str	r0, [sp, #60]	; 0x3c
 10a:	a805      	add	r0, sp, #20
 10c:	900e      	str	r0, [sp, #56]	; 0x38
 10e:	2003      	movs	r0, #3
 110:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
_ZN5mylib9send_coap18start_network_task17hbb48babd6a17a35bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:63
 114:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 118:	900b      	str	r0, [sp, #44]	; 0x2c
 11a:	f240 0000 	movw	r0, #0
 11e:	f2c0 0000 	movt	r0, #0
 122:	900a      	str	r0, [sp, #40]	; 0x28
 124:	a80a      	add	r0, sp, #40	; 0x28
_ZN5mylib9send_coap18start_network_task17hbb48babd6a17a35bE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/send_coap.rs:63
 126:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 12a:	defe      	udf	#254	; 0xfe
main():
 12c:	a809      	add	r0, sp, #36	; 0x24
_ZN5mylib13listen_sensor21start_sensor_listener17h2fa31960787317c0E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:35
    assert_eq!(rc, 0);
 12e:	9010      	str	r0, [sp, #64]	; 0x40
 130:	f240 0000 	movw	r0, #0
 134:	a911      	add	r1, sp, #68	; 0x44
 136:	f2c0 0000 	movt	r0, #0
 13a:	9008      	str	r0, [sp, #32]
 13c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 140:	a810      	add	r0, sp, #64	; 0x40
 142:	9005      	str	r0, [sp, #20]
 144:	f240 0000 	movw	r0, #0
 148:	f2c0 0000 	movt	r0, #0
 14c:	f240 0100 	movw	r1, #0
 150:	9011      	str	r0, [sp, #68]	; 0x44
 152:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 154:	900f      	str	r0, [sp, #60]	; 0x3c
 156:	a805      	add	r0, sp, #20
 158:	900e      	str	r0, [sp, #56]	; 0x38
 15a:	2000      	movs	r0, #0
 15c:	e9cd 000c 	strd	r0, r0, [sp, #48]	; 0x30
 160:	2003      	movs	r0, #3
 162:	900b      	str	r0, [sp, #44]	; 0x2c
 164:	f240 0000 	movw	r0, #0
 168:	f2c0 0000 	movt	r0, #0
_ZN5mylib13listen_sensor21start_sensor_listener17h2fa31960787317c0E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:35
 16c:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 170:	900a      	str	r0, [sp, #40]	; 0x28
 172:	a80a      	add	r0, sp, #40	; 0x28
_ZN5mylib13listen_sensor21start_sensor_listener17h2fa31960787317c0E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:35
 174:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 178:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:39
    assert!(unsafe{ !is_null_sensor(listen_sensor) });
 17a:	f240 0000 	movw	r0, #0
 17e:	f2c0 0000 	movt	r0, #0
 182:	f7ff fffe 	bl	0 <core::panicking::panic>
 186:	defe      	udf	#254	; 0xfe
_ZN5mylib6mynewt6sensor17register_listener17hdfbfc768c2525aeaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:15
    unsafe { assert!(LISTENER_INTERNAL.sl_sensor_type == 0) };  //  Make sure it's not used.
 188:	f240 0000 	movw	r0, #0
 18c:	f2c0 0000 	movt	r0, #0
 190:	f7ff fffe 	bl	0 <core::panicking::panic>
 194:	defe      	udf	#254	; 0xfe
_ZN5mylib13listen_sensor21start_sensor_listener17h2fa31960787317c0E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:51
    assert!(rc == 0);
 196:	f240 0000 	movw	r0, #0
 19a:	f2c0 0000 	movt	r0, #0
 19e:	f7ff fffe 	bl	0 <core::panicking::panic>
 1a2:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:67

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
   4:	b338      	cbz	r0, 56 <rust_begin_unwind+0x56>
   6:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:68
        let file = location.file();
   8:	f7ff fffe 	bl	0 <core::panic::Location::file>
   c:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:69
        let line = location.line();
   e:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:68
        let file = location.file();
  10:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:69
        let line = location.line();
  12:	f7ff fffe 	bl	0 <core::panic::Location::line>
  16:	4604      	mov	r4, r0
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  26:	f7ff fffe 	bl	0 <console_flush>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:71
        console_print(b"panic at ");
        unsafe { console_buffer(file.as_ptr(), file.len() as u32) }
  2a:	4628      	mov	r0, r5
  2c:	4631      	mov	r1, r6
  2e:	f7ff fffe 	bl	0 <console_buffer>
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  32:	f240 0000 	movw	r0, #0
  36:	2108      	movs	r1, #8
  38:	f2c0 0000 	movt	r0, #0
  3c:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  40:	f7ff fffe 	bl	0 <console_flush>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:73
        console_print(b" line 0x");
        unsafe { console_printhex(line as u8) }  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  44:	b2e0      	uxtb	r0, r4
  46:	f7ff fffe 	bl	0 <console_printhex>
_ZN5mylib4base13console_print17hee1ead095790f478E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  4a:	f240 0000 	movw	r0, #0
  4e:	2101      	movs	r1, #1
  50:	f2c0 0000 	movt	r0, #0
  54:	e004      	b.n	c <rust_begin_unwind+0xc>
  56:	f240 0000 	movw	r0, #0
  5a:	2112      	movs	r1, #18
  5c:	f2c0 0000 	movt	r0, #0
rust_begin_unwind():
  60:	f7ff fffe 	bl	0 <console_buffer>
  64:	f7ff fffe 	bl	0 <console_flush>
  68:	f7ff fffe 	bl	0 <console_flush>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  6c:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/src/lib.rs:83
        unsafe { console_flush() }
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  70:	e7fe      	b.n	70 <rust_begin_unwind+0x70>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: mylib-0948c04052cf796a.mylib.6fgjgbzt-cgu.0.rcgu.bc.z: File format not recognized
