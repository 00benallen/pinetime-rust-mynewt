In archive rustlib.a:

aligned-a67274d61f03cda2.aligned.d0prr5w8-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 aligned.d0prr5w8-cgu.0



app-ba860f72f0ac9e7b.2bqatrntwn9uk26t.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 2bqatrntwn9uk26t
000012ed l       .debug_str	00000000 
0000296f l       .debug_str	00000000 
00002964 l       .debug_str	00000000 
00002960 l       .debug_str	00000000 
00002952 l       .debug_str	00000000 
00002948 l       .debug_str	00000000 
00002ab0 l       .debug_str	00000000 
00002937 l       .debug_str	00000000 
00002932 l       .debug_str	00000000 
00002919 l       .debug_str	00000000 
0000290d l       .debug_str	00000000 
00002901 l       .debug_str	00000000 
000028fa l       .debug_str	00000000 
000028f2 l       .debug_str	00000000 
000028ea l       .debug_str	00000000 
000028e1 l       .debug_str	00000000 
000028dd l       .debug_str	00000000 
00002aa6 l       .debug_str	00000000 
000028ce l       .debug_str	00000000 
000028c8 l       .debug_str	00000000 
000028c3 l       .debug_str	00000000 
0000289c l       .debug_str	00000000 
0000287d l       .debug_str	00000000 
0000285a l       .debug_str	00000000 
00002851 l       .debug_str	00000000 
00002846 l       .debug_str	00000000 
00002a8d l       .debug_str	00000000 
00002840 l       .debug_str	00000000 
0000283a l       .debug_str	00000000 
00002a70 l       .debug_str	00000000 
00002a65 l       .debug_str	00000000 
00002a07 l       .debug_str	00000000 
000029ed l       .debug_str	00000000 
000029e3 l       .debug_str	00000000 
000029c7 l       .debug_str	00000000 
000029a3 l       .debug_str	00000000 
0000298c l       .debug_str	00000000 
00002984 l       .debug_str	00000000 
00002980 l       .debug_str	00000000 
0000297c l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000095 l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
0000009c l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000c8 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000d3 l       .debug_str	00000000 
000000db l       .debug_str	00000000 
000000e0 l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
00000132 l       .debug_str	00000000 
00000136 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
00000176 l       .debug_str	00000000 
00000186 l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001e1 l       .debug_str	00000000 
000001ec l       .debug_str	00000000 
000001f9 l       .debug_str	00000000 
00000204 l       .debug_str	00000000 
0000020c l       .debug_str	00000000 
00000217 l       .debug_str	00000000 
00000222 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000237 l       .debug_str	00000000 
00000242 l       .debug_str	00000000 
0000024f l       .debug_str	00000000 
0000025b l       .debug_str	00000000 
00000268 l       .debug_str	00000000 
00000276 l       .debug_str	00000000 
00000280 l       .debug_str	00000000 
0000028d l       .debug_str	00000000 
00000299 l       .debug_str	00000000 
0000029e l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000002ad l       .debug_str	00000000 
000002b8 l       .debug_str	00000000 
000002bf l       .debug_str	00000000 
000002c3 l       .debug_str	00000000 
000002c6 l       .debug_str	00000000 
000002c9 l       .debug_str	00000000 
000002ce l       .debug_str	00000000 
000002d4 l       .debug_str	00000000 
000002db l       .debug_str	00000000 
000002e3 l       .debug_str	00000000 
000002ed l       .debug_str	00000000 
000002f0 l       .debug_str	00000000 
000002f4 l       .debug_str	00000000 
000002fb l       .debug_str	00000000 
00000337 l       .debug_str	00000000 
0000034a l       .debug_str	00000000 
0000034d l       .debug_str	00000000 
0000034f l       .debug_str	00000000 
00000351 l       .debug_str	00000000 
00000379 l       .debug_str	00000000 
000003b2 l       .debug_str	00000000 
000003c2 l       .debug_str	00000000 
000003fc l       .debug_str	00000000 
0000040d l       .debug_str	00000000 
00000411 l       .debug_str	00000000 
0000041f l       .debug_str	00000000 
00000425 l       .debug_str	00000000 
00000429 l       .debug_str	00000000 
00000435 l       .debug_str	00000000 
00000474 l       .debug_str	00000000 
0000048a l       .debug_str	00000000 
00000493 l       .debug_str	00000000 
00000499 l       .debug_str	00000000 
000004a0 l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
000004af l       .debug_str	00000000 
000004b7 l       .debug_str	00000000 
000004be l       .debug_str	00000000 
000004d5 l       .debug_str	00000000 
0000052f l       .debug_str	00000000 
00000534 l       .debug_str	00000000 
00000596 l       .debug_str	00000000 
000005a1 l       .debug_str	00000000 
000005e8 l       .debug_str	00000000 
00000637 l       .debug_str	00000000 
00000641 l       .debug_str	00000000 
0000067e l       .debug_str	00000000 
000006c3 l       .debug_str	00000000 
000006cc l       .debug_str	00000000 
000006dc l       .debug_str	00000000 
000006e4 l       .debug_str	00000000 
00000739 l       .debug_str	00000000 
00000796 l       .debug_str	00000000 
000007a2 l       .debug_str	00000000 
000007ab l       .debug_str	00000000 
000007b7 l       .debug_str	00000000 
000007c3 l       .debug_str	00000000 
000007cc l       .debug_str	00000000 
000007d4 l       .debug_str	00000000 
000007dc l       .debug_str	00000000 
000007e6 l       .debug_str	00000000 
000007fb l       .debug_str	00000000 
00000802 l       .debug_str	00000000 
00000822 l       .debug_str	00000000 
00000829 l       .debug_str	00000000 
00000831 l       .debug_str	00000000 
0000083b l       .debug_str	00000000 
00000846 l       .debug_str	00000000 
0000084f l       .debug_str	00000000 
0000085a l       .debug_str	00000000 
00000866 l       .debug_str	00000000 
0000086a l       .debug_str	00000000 
00000873 l       .debug_str	00000000 
0000087a l       .debug_str	00000000 
00000882 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
00000894 l       .debug_str	00000000 
0000089a l       .debug_str	00000000 
000008a1 l       .debug_str	00000000 
000008a8 l       .debug_str	00000000 
000008d5 l       .debug_str	00000000 
0000090a l       .debug_str	00000000 
00000910 l       .debug_str	00000000 
00000916 l       .debug_str	00000000 
00000925 l       .debug_str	00000000 
00000935 l       .debug_str	00000000 
00000945 l       .debug_str	00000000 
0000094d l       .debug_str	00000000 
00000976 l       .debug_str	00000000 
000009d4 l       .debug_str	00000000 
00000a3a l       .debug_str	00000000 
00000a41 l       .debug_str	00000000 
00000a49 l       .debug_str	00000000 
00000a52 l       .debug_str	00000000 
00000a70 l       .debug_str	00000000 
00000a80 l       .debug_str	00000000 
00000a8e l       .debug_str	00000000 
00000a99 l       .debug_str	00000000 
00000aa6 l       .debug_str	00000000 
00000ab5 l       .debug_str	00000000 
00000acb l       .debug_str	00000000 
00000ad5 l       .debug_str	00000000 
00000ade l       .debug_str	00000000 
00000ae7 l       .debug_str	00000000 
00000b0d l       .debug_str	00000000 
00000b23 l       .debug_str	00000000 
00000b2e l       .debug_str	00000000 
00000b44 l       .debug_str	00000000 
00000b4c l       .debug_str	00000000 
00000b6d l       .debug_str	00000000 
00000b84 l       .debug_str	00000000 
00000b89 l       .debug_str	00000000 
00000b91 l       .debug_str	00000000 
00000b9a l       .debug_str	00000000 
00000ba3 l       .debug_str	00000000 
00000bac l       .debug_str	00000000 
00000bb4 l       .debug_str	00000000 
00000bb8 l       .debug_str	00000000 
00000bbf l       .debug_str	00000000 
00000bcb l       .debug_str	00000000 
00000bd6 l       .debug_str	00000000 
00000bde l       .debug_str	00000000 
00000be6 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000ce6 l       .debug_str	00000000 
00000de2 l       .debug_str	00000000 
00000ee6 l       .debug_str	00000000 
00000ef4 l       .debug_str	00000000 
00000eff l       .debug_str	00000000 
00000f09 l       .debug_str	00000000 
00000f1d l       .debug_str	00000000 
00000f28 l       .debug_str	00000000 
00000f56 l       .debug_str	00000000 
00000fd1 l       .debug_str	00000000 
00001054 l       .debug_str	00000000 
00001062 l       .debug_str	00000000 
000010c1 l       .debug_str	00000000 
00001128 l       .debug_str	00000000 
0000113e l       .debug_str	00000000 
0000114e l       .debug_str	00000000 
0000115d l       .debug_str	00000000 
00001161 l       .debug_str	00000000 
00001168 l       .debug_str	00000000 
0000116e l       .debug_str	00000000 
00001174 l       .debug_str	00000000 
0000117a l       .debug_str	00000000 
00001186 l       .debug_str	00000000 
0000118e l       .debug_str	00000000 
00001194 l       .debug_str	00000000 
0000119c l       .debug_str	00000000 
000011a2 l       .debug_str	00000000 
000011c5 l       .debug_str	00000000 
000011d5 l       .debug_str	00000000 
00001208 l       .debug_str	00000000 
00001248 l       .debug_str	00000000 
00001290 l       .debug_str	00000000 
00001294 l       .debug_str	00000000 
0000129a l       .debug_str	00000000 
000012a0 l       .debug_str	00000000 
000012a6 l       .debug_str	00000000 
000012b8 l       .debug_str	00000000 
00002832 l       .debug_str	00000000 
0000132f l       .debug_str	00000000 
00001379 l       .debug_str	00000000 
0000137d l       .debug_str	00000000 
00001383 l       .debug_str	00000000 
00001389 l       .debug_str	00000000 
0000138f l       .debug_str	00000000 
000013a1 l       .debug_str	00000000 
000013d6 l       .debug_str	00000000 
00001418 l       .debug_str	00000000 
00001462 l       .debug_str	00000000 
00001466 l       .debug_str	00000000 
0000146c l       .debug_str	00000000 
00001472 l       .debug_str	00000000 
00001478 l       .debug_str	00000000 
0000147e l       .debug_str	00000000 
0000148f l       .debug_str	00000000 
000014c3 l       .debug_str	00000000 
00001504 l       .debug_str	00000000 
0000154d l       .debug_str	00000000 
00001552 l       .debug_str	00000000 
00001557 l       .debug_str	00000000 
0000155b l       .debug_str	00000000 
00001561 l       .debug_str	00000000 
00001567 l       .debug_str	00000000 
0000156d l       .debug_str	00000000 
0000157e l       .debug_str	00000000 
000015b2 l       .debug_str	00000000 
000015f3 l       .debug_str	00000000 
0000163c l       .debug_str	00000000 
00001640 l       .debug_str	00000000 
00001649 l       .debug_str	00000000 
0000165a l       .debug_str	00000000 
0000168e l       .debug_str	00000000 
000016cf l       .debug_str	00000000 
00001718 l       .debug_str	00000000 
0000171d l       .debug_str	00000000 
00001721 l       .debug_str	00000000 
0000172a l       .debug_str	00000000 
00001731 l       .debug_str	00000000 
00001739 l       .debug_str	00000000 
0000174b l       .debug_str	00000000 
00001780 l       .debug_str	00000000 
000017c2 l       .debug_str	00000000 
0000180c l       .debug_str	00000000 
00001810 l       .debug_str	00000000 
00001816 l       .debug_str	00000000 
0000181c l       .debug_str	00000000 
00001822 l       .debug_str	00000000 
00001828 l       .debug_str	00000000 
00001830 l       .debug_str	00000000 
0000183e l       .debug_str	00000000 
0000184d l       .debug_str	00000000 
0000185e l       .debug_str	00000000 
00001869 l       .debug_str	00000000 
00001874 l       .debug_str	00000000 
0000187f l       .debug_str	00000000 
00001886 l       .debug_str	00000000 
000018a9 l       .debug_str	00000000 
000018bb l       .debug_str	00000000 
000018f0 l       .debug_str	00000000 
00001932 l       .debug_str	00000000 
0000197c l       .debug_str	00000000 
00001980 l       .debug_str	00000000 
0000198a l       .debug_str	00000000 
0000199c l       .debug_str	00000000 
000019d1 l       .debug_str	00000000 
00001a13 l       .debug_str	00000000 
00001a5d l       .debug_str	00000000 
00001a62 l       .debug_str	00000000 
00001a6c l       .debug_str	00000000 
00001a7e l       .debug_str	00000000 
00001ab3 l       .debug_str	00000000 
00001af5 l       .debug_str	00000000 
00001b3f l       .debug_str	00000000 
00001b53 l       .debug_str	00000000 
00001b57 l       .debug_str	00000000 
00001b65 l       .debug_str	00000000 
00001b75 l       .debug_str	00000000 
00001b7e l       .debug_str	00000000 
00001b89 l       .debug_str	00000000 
00001b98 l       .debug_str	00000000 
00001bad l       .debug_str	00000000 
00001bde l       .debug_str	00000000 
00001c7b l       .debug_str	00000000 
00001d20 l       .debug_str	00000000 
00001d2b l       .debug_str	00000000 
00001d34 l       .debug_str	00000000 
00001d55 l       .debug_str	00000000 
00001d68 l       .debug_str	00000000 
00001d9e l       .debug_str	00000000 
00001e21 l       .debug_str	00000000 
00001eac l       .debug_str	00000000 
00001ec8 l       .debug_str	00000000 
00001f14 l       .debug_str	00000000 
00001f68 l       .debug_str	00000000 
00001f85 l       .debug_str	00000000 
00001f99 l       .debug_str	00000000 
00001fe5 l       .debug_str	00000000 
00002039 l       .debug_str	00000000 
0000204f l       .debug_str	00000000 
00002063 l       .debug_str	00000000 
000020aa l       .debug_str	00000000 
000020f9 l       .debug_str	00000000 
00002102 l       .debug_str	00000000 
00002110 l       .debug_str	00000000 
00002141 l       .debug_str	00000000 
00002147 l       .debug_str	00000000 
0000214f l       .debug_str	00000000 
00002156 l       .debug_str	00000000 
0000215e l       .debug_str	00000000 
00002169 l       .debug_str	00000000 
00002171 l       .debug_str	00000000 
00002180 l       .debug_str	00000000 
00002184 l       .debug_str	00000000 
0000218f l       .debug_str	00000000 
0000219b l       .debug_str	00000000 
000021a6 l       .debug_str	00000000 
000021b7 l       .debug_str	00000000 
000021bd l       .debug_str	00000000 
000021c5 l       .debug_str	00000000 
000021cc l       .debug_str	00000000 
000021d6 l       .debug_str	00000000 
000021de l       .debug_str	00000000 
000021e6 l       .debug_str	00000000 
00002208 l       .debug_str	00000000 
00002213 l       .debug_str	00000000 
0000221f l       .debug_str	00000000 
00002227 l       .debug_str	00000000 
00002230 l       .debug_str	00000000 
0000223b l       .debug_str	00000000 
00002242 l       .debug_str	00000000 
0000224d l       .debug_str	00000000 
00002258 l       .debug_str	00000000 
00002268 l       .debug_str	00000000 
00002272 l       .debug_str	00000000 
00002278 l       .debug_str	00000000 
0000229a l       .debug_str	00000000 
000022d2 l       .debug_str	00000000 
00002312 l       .debug_str	00000000 
00002319 l       .debug_str	00000000 
00002321 l       .debug_str	00000000 
00002338 l       .debug_str	00000000 
00002341 l       .debug_str	00000000 
00002351 l       .debug_str	00000000 
00002360 l       .debug_str	00000000 
00002368 l       .debug_str	00000000 
0000236f l       .debug_str	00000000 
00002377 l       .debug_str	00000000 
00002395 l       .debug_str	00000000 
000023a5 l       .debug_str	00000000 
000023d8 l       .debug_str	00000000 
000023ed l       .debug_str	00000000 
000023f6 l       .debug_str	00000000 
00002453 l       .debug_str	00000000 
000024b8 l       .debug_str	00000000 
000024c2 l       .debug_str	00000000 
000024d2 l       .debug_str	00000000 
000024e7 l       .debug_str	00000000 
000024ef l       .debug_str	00000000 
00002553 l       .debug_str	00000000 
000025bf l       .debug_str	00000000 
000025c6 l       .debug_str	00000000 
000025ce l       .debug_str	00000000 
000025ec l       .debug_str	00000000 
000025fc l       .debug_str	00000000 
0000262f l       .debug_str	00000000 
00002644 l       .debug_str	00000000 
00002657 l       .debug_str	00000000 
0000266c l       .debug_str	00000000 
00002673 l       .debug_str	00000000 
00002688 l       .debug_str	00000000 
000026b2 l       .debug_str	00000000 
000026b6 l       .debug_str	00000000 
000026ba l       .debug_str	00000000 
000026c3 l       .debug_str	00000000 
000026c8 l       .debug_str	00000000 
000026d4 l       .debug_str	00000000 
000026e0 l       .debug_str	00000000 
000026ed l       .debug_str	00000000 
00002705 l       .debug_str	00000000 
00002711 l       .debug_str	00000000 
0000271e l       .debug_str	00000000 
0000272c l       .debug_str	00000000 
00002739 l       .debug_str	00000000 
0000274f l       .debug_str	00000000 
00002766 l       .debug_str	00000000 
0000277c l       .debug_str	00000000 
00002794 l       .debug_str	00000000 
00002797 l       .debug_str	00000000 
000027a0 l       .debug_str	00000000 
000027a5 l       .debug_str	00000000 
000027af l       .debug_str	00000000 
000027b4 l       .debug_str	00000000 
000027ba l       .debug_str	00000000 
000027bf l       .debug_str	00000000 
000027c4 l       .debug_str	00000000 
000027cb l       .debug_str	00000000 
000027d0 l       .debug_str	00000000 
000027dc l       .debug_str	00000000 
000027e4 l       .debug_str	00000000 
000027ed l       .debug_str	00000000 
000027f2 l       .debug_str	00000000 
000027f5 l       .debug_str	00000000 
000027fe l       .debug_str	00000000 
00002805 l       .debug_str	00000000 
0000280a l       .debug_str	00000000 
0000280f l       .debug_str	00000000 
00002815 l       .debug_str	00000000 
0000281f l       .debug_str	00000000 
00002822 l       .debug_str	00000000 
00002828 l       .debug_str	00000000 
00002976 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.1	0000000e .Lanon.e46afc319663ca1946cfe7c945d2b251.1
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.10	00000007 .Lanon.e46afc319663ca1946cfe7c945d2b251.10
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.11	00000001 .Lanon.e46afc319663ca1946cfe7c945d2b251.11
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.12	00000014 .Lanon.e46afc319663ca1946cfe7c945d2b251.12
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.13	0000002a .Lanon.e46afc319663ca1946cfe7c945d2b251.13
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.15	0000000c .Lanon.e46afc319663ca1946cfe7c945d2b251.15
00000000 l     O .rodata.cst4	00000004 .Lanon.e46afc319663ca1946cfe7c945d2b251.16
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.20	00000018 .Lanon.e46afc319663ca1946cfe7c945d2b251.20
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.22	00000008 .Lanon.e46afc319663ca1946cfe7c945d2b251.22
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.23	00000000 .Lanon.e46afc319663ca1946cfe7c945d2b251.23
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.24	00000010 .Lanon.e46afc319663ca1946cfe7c945d2b251.24
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.4	00000018 .Lanon.e46afc319663ca1946cfe7c945d2b251.4
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.5	0000001c .Lanon.e46afc319663ca1946cfe7c945d2b251.5
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.7	00000018 .Lanon.e46afc319663ca1946cfe7c945d2b251.7
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.8	0000000f .Lanon.e46afc319663ca1946cfe7c945d2b251.8
00000000 l     O .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.9	00000007 .Lanon.e46afc319663ca1946cfe7c945d2b251.9
00000000 l     O .rodata._ZN3app10gps_sensor10GPS_DEVICE17h5c1dc9ec84221b48E	0000000c app::gps_sensor::GPS_DEVICE
00000000 l     F .text._ZN3app10gps_sensor15handle_gps_data17h161a6c6153221eeeE	00000152 app::gps_sensor::handle_gps_data
00000000 l     F .text._ZN3app10gps_sensor16convert_gps_data17hdeb43b8f0524d562E	00000218 app::gps_sensor::convert_gps_data
00000000 l     O .bss._ZN3app10gps_sensor19current_geolocation17hc62d493c14b35f87E	00000020 app::gps_sensor::current_geolocation
00000000 l     F .text._ZN3app10gps_sensor21aggregate_sensor_data17h564b9a4ef9721806E	000000a2 app::gps_sensor::aggregate_sensor_data
00000000 l    d  .text._ZN3app10gps_sensor18start_gps_listener17hff4f7c9c3618b255E	00000000 .text._ZN3app10gps_sensor18start_gps_listener17hff4f7c9c3618b255E
00000000 l    d  .text._ZN3app10gps_sensor15handle_gps_data17h161a6c6153221eeeE	00000000 .text._ZN3app10gps_sensor15handle_gps_data17h161a6c6153221eeeE
00000000 l    d  .text._ZN3app10gps_sensor16convert_gps_data17hdeb43b8f0524d562E	00000000 .text._ZN3app10gps_sensor16convert_gps_data17hdeb43b8f0524d562E
00000000 l    d  .text._ZN3app10gps_sensor21aggregate_sensor_data17h564b9a4ef9721806E	00000000 .text._ZN3app10gps_sensor21aggregate_sensor_data17h564b9a4ef9721806E
00000000 l    d  .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.0	00000000 .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.0
00000000 l    d  .rodata._ZN3app10gps_sensor10GPS_DEVICE17h5c1dc9ec84221b48E	00000000 .rodata._ZN3app10gps_sensor10GPS_DEVICE17h5c1dc9ec84221b48E
00000000 l    d  .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.2	00000000 .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.2
00000000 l    d  .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.3	00000000 .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.3
00000000 l    d  .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.6	00000000 .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.6
00000000 l    d  .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.14	00000000 .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.14
00000000 l    d  .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.17	00000000 .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.17
00000000 l    d  .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.18	00000000 .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.18
00000000 l    d  .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.19	00000000 .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.19
00000000 l    d  .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.21	00000000 .rodata..Lanon.e46afc319663ca1946cfe7c945d2b251.21
00000000 l    d  .bss._ZN3app10gps_sensor19current_geolocation17hc62d493c14b35f87E	00000000 .bss._ZN3app10gps_sensor19current_geolocation17hc62d493c14b35f87E
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN3app10gps_sensor18start_gps_listener17hff4f7c9c3618b255E	0000018c .hidden app::gps_sensor::start_gps_listener
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 core::ptr::<impl *mut T>::is_null
00000000         *UND*	00000000 core::ptr::<impl *mut T>::is_null
00000000         *UND*	00000000 core::ptr::null_mut
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <T as core::convert::From<T>>::from
00000000         *UND*	00000000 <core::fmt::Arguments as core::fmt::Display>::fmt
00000000         *UND*	00000000 mynewt::hw::sensor::as_untyped
00000000         *UND*	00000000 mynewt::hw::sensor::register_listener
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::set_poll_rate_ms
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::mgr_find_next_bydevname
00000000         *UND*	00000000 mynewt::sys::console::printfloat
00000000         *UND*	00000000 mynewt::sys::console::printdouble
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 <core::result::Result<T,E> as core::ops::try::Try>::from_error
00000000         *UND*	00000000 <core::result::Result<T,E> as core::ops::try::Try>::into_result
00000000         *UND*	00000000 <core::result::Result<T,E> as core::ops::try::Try>::into_result
00000000         *UND*	00000000 __aeabi_d2f
00000000         *UND*	00000000 __aeabi_memcpy
00000000         *UND*	00000000 __aeabi_memcpy8
00000000         *UND*	00000000 get_geolocation_data



Disassembly of section .text._ZN3app10gps_sensor18start_gps_listener17hff4f7c9c3618b255E:

00000000 <app::gps_sensor::start_gps_listener>:
_ZN3app10gps_sensor18start_gps_listener17hff4f7c9c3618b255E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:48
///  Type of sensor: Geolocation (latitude, longitude, altitude)
const GPS_SENSOR_TYPE: sensor_type_t = sensor::SENSOR_TYPE_GEOLOCATION;

///  Ask Mynewt to poll the GPS sensor and call `handle_gps_data()`
///  Return `Ok()` if successful, else return `Err()` with `MynewtError` error code inside.
pub fn start_gps_listener() -> MynewtResult<()>  {  //  Returns an error code upon error.
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	b0b5      	sub	sp, #212	; 0xd4
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:49
    console::print("Rust GPS poll\n");
   4:	f240 0000 	movw	r0, #0
   8:	f2c0 0000 	movt	r0, #0
   c:	210e      	movs	r1, #14
   e:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  12:	e7ff      	b.n	2 <core::ptr::null_mut+0x2>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:52

    //  Fetch the sensor by name, without locking the driver for exclusive access.
    let sensor = sensor::mgr_find_next_bydevname(&GPS_DEVICE, core::ptr::null_mut()) ? ;
  14:	f7ff fffe 	bl	0 <core::ptr::null_mut>
  18:	900c      	str	r0, [sp, #48]	; 0x30
  1a:	e7ff      	b.n	1c <app::gps_sensor::start_gps_listener+0x1c>
  1c:	f240 0100 	movw	r1, #0
  20:	f2c0 0100 	movt	r1, #0
  24:	a811      	add	r0, sp, #68	; 0x44
  26:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  28:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname>
  2c:	e7ff      	b.n	2e <app::gps_sensor::start_gps_listener+0x2e>
  2e:	a80f      	add	r0, sp, #60	; 0x3c
  30:	a911      	add	r1, sp, #68	; 0x44
  32:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
  36:	e7ff      	b.n	38 <app::gps_sensor::start_gps_listener+0x38>
  38:	980f      	ldr	r0, [sp, #60]	; 0x3c
  3a:	2800      	cmp	r0, #0
  3c:	900b      	str	r0, [sp, #44]	; 0x2c
  3e:	d016      	beq.n	6e <app::gps_sensor::start_gps_listener+0x6e>
  40:	e7ff      	b.n	42 <app::gps_sensor::start_gps_listener+0x42>
  42:	980b      	ldr	r0, [sp, #44]	; 0x2c
  44:	2801      	cmp	r0, #1
  46:	d001      	beq.n	4c <app::gps_sensor::start_gps_listener+0x4c>
  48:	e7ff      	b.n	4a <app::gps_sensor::start_gps_listener+0x4a>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:70
    //  Register the Listener Function to be called with the polled sensor data.
    sensor::register_listener(sensor, listener) ? ;  //  `?` means in case of error, return error now.

    //  Return `Ok()` to indicate success.  This line should not end with a semicolon (;).
    Ok(())
}
  4a:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:52
    let sensor = sensor::mgr_find_next_bydevname(&GPS_DEVICE, core::ptr::null_mut()) ? ;
  4c:	9810      	ldr	r0, [sp, #64]	; 0x40
  4e:	9013      	str	r0, [sp, #76]	; 0x4c
  50:	9813      	ldr	r0, [sp, #76]	; 0x4c
  52:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
  56:	900a      	str	r0, [sp, #40]	; 0x28
  58:	e7ff      	b.n	5a <app::gps_sensor::start_gps_listener+0x5a>
  5a:	980a      	ldr	r0, [sp, #40]	; 0x28
  5c:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
  60:	900d      	str	r0, [sp, #52]	; 0x34
  62:	e7ff      	b.n	64 <app::gps_sensor::start_gps_listener+0x64>
  64:	e002      	b.n	6c <app::gps_sensor::start_gps_listener+0x6c>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:70
}
  66:	980d      	ldr	r0, [sp, #52]	; 0x34
  68:	b035      	add	sp, #212	; 0xd4
  6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:52
    let sensor = sensor::mgr_find_next_bydevname(&GPS_DEVICE, core::ptr::null_mut()) ? ;
  6c:	e7fb      	b.n	66 <app::gps_sensor::start_gps_listener+0x66>
  6e:	9810      	ldr	r0, [sp, #64]	; 0x40
  70:	9014      	str	r0, [sp, #80]	; 0x50
  72:	9814      	ldr	r0, [sp, #80]	; 0x50
  74:	900e      	str	r0, [sp, #56]	; 0x38
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:53
    assert!(!sensor.is_null(), "no gps");
  76:	980e      	ldr	r0, [sp, #56]	; 0x38
  78:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::is_null>
  7c:	9009      	str	r0, [sp, #36]	; 0x24
  7e:	e7ff      	b.n	80 <app::gps_sensor::start_gps_listener+0x80>
  80:	9809      	ldr	r0, [sp, #36]	; 0x24
  82:	07c1      	lsls	r1, r0, #31
  84:	2900      	cmp	r1, #0
  86:	d007      	beq.n	98 <app::gps_sensor::start_gps_listener+0x98>
  88:	e7ff      	b.n	8a <app::gps_sensor::start_gps_listener+0x8a>
  8a:	f240 0000 	movw	r0, #0
  8e:	f2c0 0000 	movt	r0, #0
  92:	f7ff fffe 	bl	0 <core::panicking::panic>
  96:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:56
    sensor::set_poll_rate_ms(&GPS_DEVICE, GPS_POLL_TIME) ? ;
  98:	f240 0000 	movw	r0, #0
  9c:	f2c0 0000 	movt	r0, #0
  a0:	f242 7110 	movw	r1, #10000	; 0x2710
  a4:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::set_poll_rate_ms>
  a8:	9008      	str	r0, [sp, #32]
  aa:	e7ff      	b.n	ac <app::gps_sensor::start_gps_listener+0xac>
  ac:	9808      	ldr	r0, [sp, #32]
  ae:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
  b2:	9015      	str	r0, [sp, #84]	; 0x54
  b4:	e7ff      	b.n	b6 <app::gps_sensor::start_gps_listener+0xb6>
  b6:	9815      	ldr	r0, [sp, #84]	; 0x54
  b8:	1e41      	subs	r1, r0, #1
  ba:	bf18      	it	ne
  bc:	2101      	movne	r1, #1
  be:	2801      	cmp	r0, #1
  c0:	9107      	str	r1, [sp, #28]
  c2:	d011      	beq.n	e8 <app::gps_sensor::start_gps_listener+0xe8>
  c4:	e7ff      	b.n	c6 <app::gps_sensor::start_gps_listener+0xc6>
  c6:	9807      	ldr	r0, [sp, #28]
  c8:	2801      	cmp	r0, #1
  ca:	d1be      	bne.n	4a <app::gps_sensor::start_gps_listener+0x4a>
  cc:	e7ff      	b.n	ce <app::gps_sensor::start_gps_listener+0xce>
  ce:	9815      	ldr	r0, [sp, #84]	; 0x54
  d0:	9016      	str	r0, [sp, #88]	; 0x58
  d2:	9816      	ldr	r0, [sp, #88]	; 0x58
  d4:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
  d8:	9006      	str	r0, [sp, #24]
  da:	e7ff      	b.n	dc <app::gps_sensor::start_gps_listener+0xdc>
  dc:	9806      	ldr	r0, [sp, #24]
  de:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
  e2:	900d      	str	r0, [sp, #52]	; 0x34
  e4:	e7ff      	b.n	e6 <app::gps_sensor::start_gps_listener+0xe6>
  e6:	e7c1      	b.n	6c <app::gps_sensor::start_gps_listener+0x6c>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:61
        sl_func       : sensor::as_untyped(handle_gps_data),  //  Listener function
  e8:	f240 0000 	movw	r0, #0
  ec:	f2c0 0000 	movt	r0, #0
  f0:	f7ff fffe 	bl	0 <mynewt::hw::sensor::as_untyped>
  f4:	9005      	str	r0, [sp, #20]
  f6:	e7ff      	b.n	f8 <app::gps_sensor::start_gps_listener+0xf8>
  f8:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:62
        ..fill_zero!(sensor_listener)     //  Set other fields to 0
  fa:	902a      	str	r0, [sp, #168]	; 0xa8
  fc:	9029      	str	r0, [sp, #164]	; 0xa4
  fe:	9028      	str	r0, [sp, #160]	; 0xa0
 100:	9027      	str	r0, [sp, #156]	; 0x9c
 102:	9026      	str	r0, [sp, #152]	; 0x98
 104:	9025      	str	r0, [sp, #148]	; 0x94
 106:	a81e      	add	r0, sp, #120	; 0x78
 108:	a925      	add	r1, sp, #148	; 0x94
 10a:	2218      	movs	r2, #24
 10c:	f7ff fffe 	bl	0 <__aeabi_memcpy>
 110:	9004      	str	r0, [sp, #16]
 112:	e7ff      	b.n	114 <app::gps_sensor::start_gps_listener+0x114>
 114:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:59
    let listener = sensor_listener {
 116:	9019      	str	r0, [sp, #100]	; 0x64
 118:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
 11c:	9018      	str	r0, [sp, #96]	; 0x60
 11e:	9805      	ldr	r0, [sp, #20]
 120:	901a      	str	r0, [sp, #104]	; 0x68
 122:	9921      	ldr	r1, [sp, #132]	; 0x84
 124:	911b      	str	r1, [sp, #108]	; 0x6c
 126:	9922      	ldr	r1, [sp, #136]	; 0x88
 128:	911c      	str	r1, [sp, #112]	; 0x70
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:66
    sensor::register_listener(sensor, listener) ? ;  //  `?` means in case of error, return error now.
 12a:	980e      	ldr	r0, [sp, #56]	; 0x38
 12c:	a918      	add	r1, sp, #96	; 0x60
 12e:	aa2c      	add	r2, sp, #176	; 0xb0
 130:	4613      	mov	r3, r2
 132:	e891 50f0 	ldmia.w	r1, {r4, r5, r6, r7, ip, lr}
 136:	e883 50f0 	stmia.w	r3, {r4, r5, r6, r7, ip, lr}
 13a:	4611      	mov	r1, r2
 13c:	f7ff fffe 	bl	0 <mynewt::hw::sensor::register_listener>
 140:	9003      	str	r0, [sp, #12]
 142:	e7ff      	b.n	144 <app::gps_sensor::start_gps_listener+0x144>
 144:	9803      	ldr	r0, [sp, #12]
 146:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
 14a:	902b      	str	r0, [sp, #172]	; 0xac
 14c:	e7ff      	b.n	14e <app::gps_sensor::start_gps_listener+0x14e>
 14e:	982b      	ldr	r0, [sp, #172]	; 0xac
 150:	1e41      	subs	r1, r0, #1
 152:	bf18      	it	ne
 154:	2101      	movne	r1, #1
 156:	2801      	cmp	r0, #1
 158:	9102      	str	r1, [sp, #8]
 15a:	d012      	beq.n	182 <app::gps_sensor::start_gps_listener+0x182>
 15c:	e7ff      	b.n	15e <app::gps_sensor::start_gps_listener+0x15e>
 15e:	9802      	ldr	r0, [sp, #8]
 160:	2801      	cmp	r0, #1
 162:	f47f af72 	bne.w	4a <app::gps_sensor::start_gps_listener+0x4a>
 166:	e7ff      	b.n	168 <app::gps_sensor::start_gps_listener+0x168>
 168:	982b      	ldr	r0, [sp, #172]	; 0xac
 16a:	9032      	str	r0, [sp, #200]	; 0xc8
 16c:	9832      	ldr	r0, [sp, #200]	; 0xc8
 16e:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
 172:	9001      	str	r0, [sp, #4]
 174:	e7ff      	b.n	176 <app::gps_sensor::start_gps_listener+0x176>
 176:	9801      	ldr	r0, [sp, #4]
 178:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
 17c:	900d      	str	r0, [sp, #52]	; 0x34
 17e:	e7ff      	b.n	180 <app::gps_sensor::start_gps_listener+0x180>
 180:	e774      	b.n	6c <app::gps_sensor::start_gps_listener+0x6c>
 182:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:69
    Ok(())
 184:	900d      	str	r0, [sp, #52]	; 0x34
 186:	2001      	movs	r0, #1
 188:	900d      	str	r0, [sp, #52]	; 0x34
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:70
}
 18a:	e76c      	b.n	66 <app::gps_sensor::start_gps_listener+0x66>

Disassembly of section .text._ZN3app10gps_sensor15handle_gps_data17h161a6c6153221eeeE:

00000000 <app::gps_sensor::handle_gps_data>:
_ZN3app10gps_sensor15handle_gps_data17h161a6c6153221eeeE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:74

///  This listener function is called every 10 seconds by Mynewt to handle the polled GPS data.
///  Return 0 if we have handled the GPS data successfully.
extern fn handle_gps_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0b8      	sub	sp, #224	; 0xe0
   4:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
   6:	f8dd c0f0 	ldr.w	ip, [sp, #240]	; 0xf0
   a:	4696      	mov	lr, r2
   c:	460c      	mov	r4, r1
   e:	4605      	mov	r5, r0
  10:	9007      	str	r0, [sp, #28]
  12:	9108      	str	r1, [sp, #32]
  14:	9209      	str	r2, [sp, #36]	; 0x24
  16:	930b      	str	r3, [sp, #44]	; 0x2c
  18:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:76
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("\nInfo: Rust handle_gps_data\n");
  1c:	f240 0000 	movw	r0, #0
  20:	f2c0 0000 	movt	r0, #0
  24:	211c      	movs	r1, #28
  26:	f8cd e018 	str.w	lr, [sp, #24]
  2a:	9405      	str	r4, [sp, #20]
  2c:	9504      	str	r5, [sp, #16]
  2e:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  32:	e7ff      	b.n	34 <app::gps_sensor::handle_gps_data+0x34>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:79

    //  Check that the GPS geolocation data is available.
    if sensor_data.is_null() { return MynewtError::SYS_EINVAL; }  //  Exit if GPS is not ready
  34:	9809      	ldr	r0, [sp, #36]	; 0x24
  36:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::is_null>
  3a:	9003      	str	r0, [sp, #12]
  3c:	e7ff      	b.n	3e <app::gps_sensor::handle_gps_data+0x3e>
  3e:	9803      	ldr	r0, [sp, #12]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d007      	beq.n	56 <app::gps_sensor::handle_gps_data+0x56>
  46:	e7ff      	b.n	48 <app::gps_sensor::handle_gps_data+0x48>
  48:	f06f 0001 	mvn.w	r0, #1
  4c:	900d      	str	r0, [sp, #52]	; 0x34
  4e:	e7ff      	b.n	50 <app::gps_sensor::handle_gps_data+0x50>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:102
    //  Aggregate the GPS geolocation with other sensor data before transmitting to server.
    aggregate_sensor_data(sensor_value);

    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  50:	980d      	ldr	r0, [sp, #52]	; 0x34
  52:	b038      	add	sp, #224	; 0xe0
  54:	bdb0      	pop	{r4, r5, r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:80
    assert!(!sensor.is_null(), "null sensor");
  56:	9807      	ldr	r0, [sp, #28]
  58:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::is_null>
  5c:	9002      	str	r0, [sp, #8]
  5e:	e7ff      	b.n	60 <app::gps_sensor::handle_gps_data+0x60>
  60:	9802      	ldr	r0, [sp, #8]
  62:	07c1      	lsls	r1, r0, #31
  64:	2900      	cmp	r1, #0
  66:	d007      	beq.n	78 <app::gps_sensor::handle_gps_data+0x78>
  68:	e7ff      	b.n	6a <app::gps_sensor::handle_gps_data+0x6a>
  6a:	f240 0000 	movw	r0, #0
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <core::panicking::panic>
  76:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:83
    let sensor_value = convert_gps_data(sensor_data, sensor_type);
  78:	9909      	ldr	r1, [sp, #36]	; 0x24
  7a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  7c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  7e:	a80e      	add	r0, sp, #56	; 0x38
  80:	f7ff fffe 	bl	0 <app::gps_sensor::handle_gps_data>
  84:	e7ff      	b.n	86 <app::gps_sensor::handle_gps_data+0x86>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:84
    if let SensorValueType::None = sensor_value.value {
  86:	980e      	ldr	r0, [sp, #56]	; 0x38
  88:	2800      	cmp	r0, #0
  8a:	d10c      	bne.n	a6 <app::gps_sensor::handle_gps_data+0xa6>
  8c:	e7ff      	b.n	8e <app::gps_sensor::handle_gps_data+0x8e>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:85
        console::print("Warn: GPS not ready\n");
  8e:	f240 0000 	movw	r0, #0
  92:	f2c0 0000 	movt	r0, #0
  96:	2114      	movs	r1, #20
  98:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  9c:	e7ff      	b.n	9e <app::gps_sensor::handle_gps_data+0x9e>
  9e:	f06f 0001 	mvn.w	r0, #1
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:86
        return MynewtError::SYS_EINVAL;   //  Exit if GPS is not ready
  a2:	900d      	str	r0, [sp, #52]	; 0x34
  a4:	e7d4      	b.n	50 <app::gps_sensor::handle_gps_data+0x50>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:90
    if let SensorValueType::Geolocation { latitude, longitude, altitude } = sensor_value.value {
  a6:	980e      	ldr	r0, [sp, #56]	; 0x38
  a8:	2803      	cmp	r0, #3
  aa:	d145      	bne.n	138 <app::gps_sensor::handle_gps_data+0x138>
  ac:	e7ff      	b.n	ae <app::gps_sensor::handle_gps_data+0xae>
  ae:	ed9d 0b10 	vldr	d0, [sp, #64]	; 0x40
  b2:	ed8d 0b20 	vstr	d0, [sp, #128]	; 0x80
  b6:	ed9d 0b12 	vldr	d0, [sp, #72]	; 0x48
  ba:	ed8d 0b22 	vstr	d0, [sp, #136]	; 0x88
  be:	ed9d 0b14 	vldr	d0, [sp, #80]	; 0x50
  c2:	ed8d 0b24 	vstr	d0, [sp, #144]	; 0x90
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:91
        console::print("Info: GPS lat: ");   console::printdouble(latitude);
  c6:	f240 0000 	movw	r0, #0
  ca:	f2c0 0000 	movt	r0, #0
  ce:	210f      	movs	r1, #15
  d0:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  d4:	e7ff      	b.n	d6 <app::gps_sensor::handle_gps_data+0xd6>
  d6:	ed9d 0b20 	vldr	d0, [sp, #128]	; 0x80
  da:	f7ff fffe 	bl	0 <mynewt::sys::console::printdouble>
  de:	e7ff      	b.n	2 <app::gps_sensor::handle_gps_data+0x2>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:92
        console::print(", lng: "); console::printdouble(longitude);
  e0:	f240 0000 	movw	r0, #0
  e4:	f2c0 0000 	movt	r0, #0
  e8:	2107      	movs	r1, #7
  ea:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  ee:	e7ff      	b.n	f0 <app::gps_sensor::handle_gps_data+0xf0>
  f0:	ed9d 0b22 	vldr	d0, [sp, #136]	; 0x88
  f4:	f7ff fffe 	bl	0 <mynewt::sys::console::printdouble>
  f8:	e7ff      	b.n	2 <app::gps_sensor::handle_gps_data+0x2>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:93
        console::print(", alt: "); console::printfloat(altitude as f32);
  fa:	f240 0000 	movw	r0, #0
  fe:	f2c0 0000 	movt	r0, #0
 102:	2107      	movs	r1, #7
 104:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 108:	e7ff      	b.n	10a <app::gps_sensor::handle_gps_data+0x10a>
 10a:	ed9d 0b24 	vldr	d0, [sp, #144]	; 0x90
 10e:	ec51 0b10 	vmov	r0, r1, d0
 112:	f7ff fffe 	bl	0 <__aeabi_d2f>
 116:	ee00 0a10 	vmov	s0, r0
 11a:	f7ff fffe 	bl	0 <mynewt::sys::console::printfloat>
 11e:	e7ff      	b.n	2 <app::gps_sensor::handle_gps_data+0x2>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:94
        console::print("\n"); console::flush();
 120:	f240 0000 	movw	r0, #0
 124:	f2c0 0000 	movt	r0, #0
 128:	2101      	movs	r1, #1
 12a:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 12e:	e7ff      	b.n	2 <mynewt::sys::console::flush+0x2>
 130:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
 134:	e7ff      	b.n	136 <app::gps_sensor::handle_gps_data+0x136>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:90
    if let SensorValueType::Geolocation { latitude, longitude, altitude } = sensor_value.value {
 136:	e7ff      	b.n	138 <app::gps_sensor::handle_gps_data+0x138>
 138:	a826      	add	r0, sp, #152	; 0x98
 13a:	a90e      	add	r1, sp, #56	; 0x38
 13c:	2248      	movs	r2, #72	; 0x48
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:98
    aggregate_sensor_data(sensor_value);
 13e:	9001      	str	r0, [sp, #4]
 140:	f7ff fffe 	bl	0 <__aeabi_memcpy8>
 144:	9801      	ldr	r0, [sp, #4]
 146:	f7ff fffe 	bl	0 <app::gps_sensor::handle_gps_data>
 14a:	e7ff      	b.n	14c <app::gps_sensor::handle_gps_data+0x14c>
 14c:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:101
    MynewtError::SYS_EOK
 14e:	900d      	str	r0, [sp, #52]	; 0x34
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:102
}
 150:	e77e      	b.n	50 <app::gps_sensor::handle_gps_data+0x50>

Disassembly of section .text._ZN3app10gps_sensor16convert_gps_data17hdeb43b8f0524d562E:

00000000 <app::gps_sensor::convert_gps_data>:
_ZN3app10gps_sensor16convert_gps_data17hdeb43b8f0524d562E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:107

///  Convert the geolocation value received from Mynewt into a Geolocation `SensorValue` for transmission. 
///  `sensor_type` indicates the type of data in `sensor_data`.
#[allow(non_snake_case, unused_variables)]
fn convert_gps_data(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0d6      	sub	sp, #344	; 0x158
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	9113      	str	r1, [sp, #76]	; 0x4c
   c:	9315      	str	r3, [sp, #84]	; 0x54
   e:	9214      	str	r2, [sp, #80]	; 0x50
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:108
    console::print("Info: GPS listener converting geolocation\n");
  10:	f240 0100 	movw	r1, #0
  14:	f2c0 0100 	movt	r1, #0
  18:	222a      	movs	r2, #42	; 0x2a
  1a:	900b      	str	r0, [sp, #44]	; 0x2c
  1c:	4608      	mov	r0, r1
  1e:	4611      	mov	r1, r2
  20:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
  24:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
  28:	9408      	str	r4, [sp, #32]
  2a:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  2e:	e7ff      	b.n	30 <app::gps_sensor::convert_gps_data+0x30>
  30:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:112
    //  Construct and return a new `SensorValue` (without semicolon)
    SensorValue {
        key: &GPS_SENSOR_KEY,  //  Sensor data key is `geolocation`
        geo: SensorValueType::None,
  32:	9016      	str	r0, [sp, #88]	; 0x58
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:114
        value: match sensor_type {
            SENSOR_TYPE_GEOLOCATION => {  //  If sensor data is GPS geolocation...
  34:	9914      	ldr	r1, [sp, #80]	; 0x50
  36:	9a15      	ldr	r2, [sp, #84]	; 0x54
  38:	9227      	str	r2, [sp, #156]	; 0x9c
  3a:	9126      	str	r1, [sp, #152]	; 0x98
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:116
                //  Interpret the sensor data as a `sensor_geolocation_data` struct that contains GPS geolocation.
                let mut geolocation = fill_zero!(sensor_geolocation_data);
  3c:	f8cd 00d3 	str.w	r0, [sp, #211]	; 0xd3
  40:	9034      	str	r0, [sp, #208]	; 0xd0
  42:	9033      	str	r0, [sp, #204]	; 0xcc
  44:	9032      	str	r0, [sp, #200]	; 0xc8
  46:	9031      	str	r0, [sp, #196]	; 0xc4
  48:	9030      	str	r0, [sp, #192]	; 0xc0
  4a:	902f      	str	r0, [sp, #188]	; 0xbc
  4c:	a828      	add	r0, sp, #160	; 0xa0
  4e:	a92f      	add	r1, sp, #188	; 0xbc
  50:	221b      	movs	r2, #27
  52:	f7ff fffe 	bl	0 <__aeabi_memcpy>
  56:	9007      	str	r0, [sp, #28]
  58:	e7ff      	b.n	5a <app::gps_sensor::convert_gps_data+0x5a>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:117
                let rc = unsafe { sensor::get_geolocation_data(sensor_data, &mut geolocation) };
  5a:	9813      	ldr	r0, [sp, #76]	; 0x4c
  5c:	a928      	add	r1, sp, #160	; 0xa0
  5e:	f7ff fffe 	bl	0 <get_geolocation_data>
  62:	9036      	str	r0, [sp, #216]	; 0xd8
  64:	e7ff      	b.n	66 <app::gps_sensor::convert_gps_data+0x66>
  66:	a836      	add	r0, sp, #216	; 0xd8
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:118
                assert_eq!(rc, 0, "geodata fail");
  68:	9037      	str	r0, [sp, #220]	; 0xdc
  6a:	f240 0000 	movw	r0, #0
  6e:	f2c0 0000 	movt	r0, #0
  72:	9038      	str	r0, [sp, #224]	; 0xe0
  74:	9837      	ldr	r0, [sp, #220]	; 0xdc
  76:	9039      	str	r0, [sp, #228]	; 0xe4
  78:	9838      	ldr	r0, [sp, #224]	; 0xe0
  7a:	903a      	str	r0, [sp, #232]	; 0xe8
  7c:	9839      	ldr	r0, [sp, #228]	; 0xe4
  7e:	6800      	ldr	r0, [r0, #0]
  80:	993a      	ldr	r1, [sp, #232]	; 0xe8
  82:	6809      	ldr	r1, [r1, #0]
  84:	4288      	cmp	r0, r1
  86:	d014      	beq.n	b2 <app::gps_sensor::convert_gps_data+0xb2>
  88:	e7ff      	b.n	8a <app::gps_sensor::convert_gps_data+0x8a>
  8a:	9839      	ldr	r0, [sp, #228]	; 0xe4
  8c:	904a      	str	r0, [sp, #296]	; 0x128
  8e:	983a      	ldr	r0, [sp, #232]	; 0xe8
  90:	904b      	str	r0, [sp, #300]	; 0x12c
  92:	4668      	mov	r0, sp
  94:	2100      	movs	r1, #0
  96:	6001      	str	r1, [r0, #0]
  98:	f240 0100 	movw	r1, #0
  9c:	f2c0 0100 	movt	r1, #0
  a0:	f240 0300 	movw	r3, #0
  a4:	f2c0 0300 	movt	r3, #0
  a8:	a84c      	add	r0, sp, #304	; 0x130
  aa:	2201      	movs	r2, #1
  ac:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  b0:	e004      	b.n	bc <app::gps_sensor::convert_gps_data+0xbc>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:120
                //  Check that the geolocation data is valid.
                if  geolocation.sgd_latitude_is_valid  != 0 &&
  b2:	f89d 00b8 	ldrb.w	r0, [sp, #184]	; 0xb8
  b6:	2800      	cmp	r0, #0
  b8:	d165      	bne.n	186 <app::gps_sensor::convert_gps_data+0x186>
  ba:	e060      	b.n	17e <app::gps_sensor::convert_gps_data+0x17e>
  bc:	a84a      	add	r0, sp, #296	; 0x128
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:118
                assert_eq!(rc, 0, "geodata fail");
  be:	9047      	str	r0, [sp, #284]	; 0x11c
  c0:	a84b      	add	r0, sp, #300	; 0x12c
  c2:	9048      	str	r0, [sp, #288]	; 0x120
  c4:	a84c      	add	r0, sp, #304	; 0x130
  c6:	9049      	str	r0, [sp, #292]	; 0x124
  c8:	9847      	ldr	r0, [sp, #284]	; 0x11c
  ca:	9052      	str	r0, [sp, #328]	; 0x148
  cc:	9848      	ldr	r0, [sp, #288]	; 0x120
  ce:	9053      	str	r0, [sp, #332]	; 0x14c
  d0:	9849      	ldr	r0, [sp, #292]	; 0x124
  d2:	9054      	str	r0, [sp, #336]	; 0x150
  d4:	9852      	ldr	r0, [sp, #328]	; 0x148
  d6:	f240 0100 	movw	r1, #0
  da:	f2c0 0100 	movt	r1, #0
  de:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  e2:	9006      	str	r0, [sp, #24]
  e4:	9105      	str	r1, [sp, #20]
  e6:	e7ff      	b.n	e8 <app::gps_sensor::convert_gps_data+0xe8>
  e8:	9853      	ldr	r0, [sp, #332]	; 0x14c
  ea:	f240 0100 	movw	r1, #0
  ee:	f2c0 0100 	movt	r1, #0
  f2:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  f6:	9004      	str	r0, [sp, #16]
  f8:	9103      	str	r1, [sp, #12]
  fa:	e7ff      	b.n	fc <app::gps_sensor::convert_gps_data+0xfc>
  fc:	9854      	ldr	r0, [sp, #336]	; 0x150
  fe:	f240 0100 	movw	r1, #0
 102:	f2c0 0100 	movt	r1, #0
 106:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 10a:	9002      	str	r0, [sp, #8]
 10c:	9101      	str	r1, [sp, #4]
 10e:	e7ff      	b.n	110 <app::gps_sensor::convert_gps_data+0x110>
 110:	9806      	ldr	r0, [sp, #24]
 112:	9041      	str	r0, [sp, #260]	; 0x104
 114:	9905      	ldr	r1, [sp, #20]
 116:	9142      	str	r1, [sp, #264]	; 0x108
 118:	9a04      	ldr	r2, [sp, #16]
 11a:	9243      	str	r2, [sp, #268]	; 0x10c
 11c:	9b03      	ldr	r3, [sp, #12]
 11e:	9344      	str	r3, [sp, #272]	; 0x110
 120:	f8dd c008 	ldr.w	ip, [sp, #8]
 124:	f8cd c114 	str.w	ip, [sp, #276]	; 0x114
 128:	f8dd e004 	ldr.w	lr, [sp, #4]
 12c:	f8cd e118 	str.w	lr, [sp, #280]	; 0x118
 130:	466c      	mov	r4, sp
 132:	2503      	movs	r5, #3
 134:	6025      	str	r5, [r4, #0]
 136:	f240 0100 	movw	r1, #0
 13a:	f2c0 0100 	movt	r1, #0
 13e:	a83b      	add	r0, sp, #236	; 0xec
 140:	ab41      	add	r3, sp, #260	; 0x104
 142:	462a      	mov	r2, r5
 144:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 148:	e7ff      	b.n	2 <app::gps_sensor::convert_gps_data+0x2>
 14a:	f240 0100 	movw	r1, #0
 14e:	f2c0 0100 	movt	r1, #0
 152:	a83b      	add	r0, sp, #236	; 0xec
 154:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 158:	defe      	udf	#254	; 0xfe
 15a:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:120
                if  geolocation.sgd_latitude_is_valid  != 0 &&
 15c:	f88d 0156 	strb.w	r0, [sp, #342]	; 0x156
 160:	e007      	b.n	172 <app::gps_sensor::convert_gps_data+0x172>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:122
                    geolocation.sgd_longitude_is_valid != 0 &&
                    geolocation.sgd_altitude_is_valid  != 0 {
 162:	f89d 00ba 	ldrb.w	r0, [sp, #186]	; 0xba
 166:	2800      	cmp	r0, #0
 168:	bf18      	it	ne
 16a:	2001      	movne	r0, #1
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:120
                if  geolocation.sgd_latitude_is_valid  != 0 &&
 16c:	f88d 0156 	strb.w	r0, [sp, #342]	; 0x156
 170:	e7ff      	b.n	172 <app::gps_sensor::convert_gps_data+0x172>
 172:	f89d 0156 	ldrb.w	r0, [sp, #342]	; 0x156
 176:	07c0      	lsls	r0, r0, #31
 178:	2800      	cmp	r0, #0
 17a:	d112      	bne.n	1a2 <app::gps_sensor::convert_gps_data+0x1a2>
 17c:	e02c      	b.n	1d8 <app::gps_sensor::convert_gps_data+0x1d8>
 17e:	2000      	movs	r0, #0
 180:	f88d 0157 	strb.w	r0, [sp, #343]	; 0x157
 184:	e007      	b.n	196 <app::gps_sensor::convert_gps_data+0x196>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:121
                    geolocation.sgd_longitude_is_valid != 0 &&
 186:	f89d 00b9 	ldrb.w	r0, [sp, #185]	; 0xb9
 18a:	2800      	cmp	r0, #0
 18c:	bf18      	it	ne
 18e:	2001      	movne	r0, #1
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:120
                if  geolocation.sgd_latitude_is_valid  != 0 &&
 190:	f88d 0157 	strb.w	r0, [sp, #343]	; 0x157
 194:	e7ff      	b.n	196 <app::gps_sensor::convert_gps_data+0x196>
 196:	f89d 0157 	ldrb.w	r0, [sp, #343]	; 0x157
 19a:	07c0      	lsls	r0, r0, #31
 19c:	2800      	cmp	r0, #0
 19e:	d1e0      	bne.n	162 <app::gps_sensor::convert_gps_data+0x162>
 1a0:	e7db      	b.n	15a <app::gps_sensor::convert_gps_data+0x15a>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:125
                    //  Geolocation data is valid.  Return it.
                    SensorValueType::Geolocation {
                        latitude:  geolocation.sgd_latitude,
 1a2:	9828      	ldr	r0, [sp, #160]	; 0xa0
 1a4:	9929      	ldr	r1, [sp, #164]	; 0xa4
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:126
                        longitude: geolocation.sgd_longitude,
 1a6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 1a8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:125
                        latitude:  geolocation.sgd_latitude,
 1aa:	910d      	str	r1, [sp, #52]	; 0x34
 1ac:	900c      	str	r0, [sp, #48]	; 0x30
 1ae:	ed9d 0b0c 	vldr	d0, [sp, #48]	; 0x30
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:126
                        longitude: geolocation.sgd_longitude,
 1b2:	930f      	str	r3, [sp, #60]	; 0x3c
 1b4:	920e      	str	r2, [sp, #56]	; 0x38
 1b6:	ed9d 1b0e 	vldr	d1, [sp, #56]	; 0x38
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:127
                        altitude:  geolocation.sgd_altitude,
 1ba:	982d      	ldr	r0, [sp, #180]	; 0xb4
 1bc:	9011      	str	r0, [sp, #68]	; 0x44
 1be:	982c      	ldr	r0, [sp, #176]	; 0xb0
 1c0:	9010      	str	r0, [sp, #64]	; 0x40
 1c2:	ed9d 2b10 	vldr	d2, [sp, #64]	; 0x40
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:124
                    SensorValueType::Geolocation {
 1c6:	ed8d 0b20 	vstr	d0, [sp, #128]	; 0x80
 1ca:	ed8d 1b22 	vstr	d1, [sp, #136]	; 0x88
 1ce:	ed8d 2b24 	vstr	d2, [sp, #144]	; 0x90
 1d2:	2003      	movs	r0, #3
 1d4:	901e      	str	r0, [sp, #120]	; 0x78
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:120
                if  geolocation.sgd_latitude_is_valid  != 0 &&
 1d6:	e002      	b.n	1de <app::gps_sensor::convert_gps_data+0x1de>
 1d8:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:129
                    }
                } else { SensorValueType::None }  //  Geolocation data is invalid.  Maybe GPS is not ready.                 
 1da:	901e      	str	r0, [sp, #120]	; 0x78
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:120
                if  geolocation.sgd_latitude_is_valid  != 0 &&
 1dc:	e7ff      	b.n	1de <app::gps_sensor::convert_gps_data+0x1de>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:110
    SensorValue {
 1de:	f240 0000 	movw	r0, #0
 1e2:	f2c0 0000 	movt	r0, #0
 1e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 1e8:	6408      	str	r0, [r1, #64]	; 0x40
 1ea:	a81e      	add	r0, sp, #120	; 0x78
 1ec:	e8b0 500c 	ldmia.w	r0!, {r2, r3, ip, lr}
 1f0:	e8a1 500c 	stmia.w	r1!, {r2, r3, ip, lr}
 1f4:	e890 500c 	ldmia.w	r0, {r2, r3, ip, lr}
 1f8:	e881 500c 	stmia.w	r1, {r2, r3, ip, lr}
 1fc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 1fe:	f100 0120 	add.w	r1, r0, #32
 202:	aa16      	add	r2, sp, #88	; 0x58
 204:	e8b2 5018 	ldmia.w	r2!, {r3, r4, ip, lr}
 208:	e8a1 5018 	stmia.w	r1!, {r3, r4, ip, lr}
 20c:	e892 5018 	ldmia.w	r2, {r3, r4, ip, lr}
 210:	e881 5018 	stmia.w	r1, {r3, r4, ip, lr}
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:135
            }
            //  Unknown type of sensor value
            //  _ => { assert!(false, "sensor type"); SensorValueType::None }
        }
    }
}
 214:	b056      	add	sp, #344	; 0x158
 216:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN3app10gps_sensor21aggregate_sensor_data17h564b9a4ef9721806E:

00000000 <app::gps_sensor::aggregate_sensor_data>:
_ZN3app10gps_sensor21aggregate_sensor_data17h564b9a4ef9721806E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:140

static mut current_geolocation: SensorValueType = SensorValueType::None;

///  Aggregate the sensor value with other sensor data before transmitting to server.
fn aggregate_sensor_data(sensor_value: SensorValue) {
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b0ac      	sub	sp, #176	; 0xb0
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:141
    if let SensorValueType::Geolocation {..} = sensor_value.value {
   6:	6800      	ldr	r0, [r0, #0]
   8:	2803      	cmp	r0, #3
   a:	9101      	str	r1, [sp, #4]
   c:	d118      	bne.n	40 <app::gps_sensor::aggregate_sensor_data+0x40>
   e:	e7ff      	b.n	10 <app::gps_sensor::aggregate_sensor_data+0x10>
  10:	a802      	add	r0, sp, #8
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:143
        //  Save the geolocation for later transmission.
        unsafe { current_geolocation = sensor_value.value };
  12:	4601      	mov	r1, r0
  14:	9a01      	ldr	r2, [sp, #4]
  16:	e8b2 5018 	ldmia.w	r2!, {r3, r4, ip, lr}
  1a:	e8a1 5018 	stmia.w	r1!, {r3, r4, ip, lr}
  1e:	e892 5018 	ldmia.w	r2, {r3, r4, ip, lr}
  22:	e881 5018 	stmia.w	r1, {r3, r4, ip, lr}
  26:	f240 0100 	movw	r1, #0
  2a:	f2c0 0100 	movt	r1, #0
  2e:	e8b0 500c 	ldmia.w	r0!, {r2, r3, ip, lr}
  32:	e8a1 500c 	stmia.w	r1!, {r2, r3, ip, lr}
  36:	e890 500c 	ldmia.w	r0, {r2, r3, ip, lr}
  3a:	e881 500c 	stmia.w	r1, {r2, r3, ip, lr}
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:141
    if let SensorValueType::Geolocation {..} = sensor_value.value {
  3e:	e02e      	b.n	9e <app::gps_sensor::aggregate_sensor_data+0x9e>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:147
    } else {
        //  Attach the current geolocation to the sensor data for transmission.
        let transmit_value = SensorValue {
            key:    sensor_value.key,
  40:	9801      	ldr	r0, [sp, #4]
  42:	6c01      	ldr	r1, [r0, #64]	; 0x40
  44:	aa1c      	add	r2, sp, #112	; 0x70
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:148
            value:  sensor_value.value,
  46:	4613      	mov	r3, r2
  48:	e8b0 5030 	ldmia.w	r0!, {r4, r5, ip, lr}
  4c:	e8a3 5030 	stmia.w	r3!, {r4, r5, ip, lr}
  50:	e890 5030 	ldmia.w	r0, {r4, r5, ip, lr}
  54:	e883 5030 	stmia.w	r3, {r4, r5, ip, lr}
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:149
            geo:    unsafe { current_geolocation }
  58:	f240 0000 	movw	r0, #0
  5c:	f2c0 0000 	movt	r0, #0
  60:	ab24      	add	r3, sp, #144	; 0x90
  62:	469c      	mov	ip, r3
  64:	e8b0 4070 	ldmia.w	r0!, {r4, r5, r6, lr}
  68:	e8ac 4070 	stmia.w	ip!, {r4, r5, r6, lr}
  6c:	e890 4070 	ldmia.w	r0, {r4, r5, r6, lr}
  70:	e88c 4070 	stmia.w	ip, {r4, r5, r6, lr}
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:146
        let transmit_value = SensorValue {
  74:	911a      	str	r1, [sp, #104]	; 0x68
  76:	a80a      	add	r0, sp, #40	; 0x28
  78:	4601      	mov	r1, r0
  7a:	e8b2 5030 	ldmia.w	r2!, {r4, r5, ip, lr}
  7e:	e8a1 5030 	stmia.w	r1!, {r4, r5, ip, lr}
  82:	e892 5030 	ldmia.w	r2, {r4, r5, ip, lr}
  86:	e881 5030 	stmia.w	r1, {r4, r5, ip, lr}
  8a:	3020      	adds	r0, #32
  8c:	e8b3 5006 	ldmia.w	r3!, {r1, r2, ip, lr}
  90:	e8a0 5006 	stmia.w	r0!, {r1, r2, ip, lr}
  94:	e893 5006 	ldmia.w	r3, {r1, r2, ip, lr}
  98:	e880 5006 	stmia.w	r0, {r1, r2, ip, lr}
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:141
    if let SensorValueType::Geolocation {..} = sensor_value.value {
  9c:	e7ff      	b.n	9e <app::gps_sensor::aggregate_sensor_data+0x9e>
c:\stm32bluepill-mynewt-sensor/rust\app\src/gps_sensor.rs:153
        };
        //  TODO: Transmit sensor value with geolocation.
    }
  9e:	b02c      	add	sp, #176	; 0xb0
  a0:	bd70      	pop	{r4, r5, r6, pc}

app-ba860f72f0ac9e7b.2irj8h114k888726.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 2irj8h114k888726
000011cf l       .debug_str	00000000 
000027d4 l       .debug_str	00000000 
000027e2 l       .debug_str	00000000 
000027ce l       .debug_str	00000000 
000027dd l       .debug_str	00000000 
000027c7 l       .debug_str	00000000 
000027db l       .debug_str	00000000 
000027be l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000079 l       .debug_str	00000000 
0000007d l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
0000008b l       .debug_str	00000000 
00000096 l       .debug_str	00000000 
0000009d l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000ab l       .debug_str	00000000 
000000af l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000cd l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000e5 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
00000161 l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
0000017a l       .debug_str	00000000 
0000017e l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
0000018c l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
00000199 l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001c8 l       .debug_str	00000000 
000001d1 l       .debug_str	00000000 
000001d8 l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001e8 l       .debug_str	00000000 
000001f2 l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
00000209 l       .debug_str	00000000 
00000210 l       .debug_str	00000000 
00000217 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000233 l       .debug_str	00000000 
00000260 l       .debug_str	00000000 
00000262 l       .debug_str	00000000 
00000267 l       .debug_str	00000000 
0000029c l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000002a8 l       .debug_str	00000000 
000002b7 l       .debug_str	00000000 
000002c7 l       .debug_str	00000000 
000002d7 l       .debug_str	00000000 
000002df l       .debug_str	00000000 
00000308 l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
000003cc l       .debug_str	00000000 
000003d3 l       .debug_str	00000000 
000003db l       .debug_str	00000000 
000003e4 l       .debug_str	00000000 
00000402 l       .debug_str	00000000 
00000412 l       .debug_str	00000000 
00000420 l       .debug_str	00000000 
0000042b l       .debug_str	00000000 
00000438 l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
00000451 l       .debug_str	00000000 
00000467 l       .debug_str	00000000 
00000471 l       .debug_str	00000000 
0000047a l       .debug_str	00000000 
00000483 l       .debug_str	00000000 
000004a9 l       .debug_str	00000000 
000004bf l       .debug_str	00000000 
000004ca l       .debug_str	00000000 
000004e0 l       .debug_str	00000000 
000004e8 l       .debug_str	00000000 
00000509 l       .debug_str	00000000 
00000512 l       .debug_str	00000000 
0000051b l       .debug_str	00000000 
00000526 l       .debug_str	00000000 
00000530 l       .debug_str	00000000 
00000536 l       .debug_str	00000000 
0000056e l       .debug_str	00000000 
000005ae l       .debug_str	00000000 
000005b5 l       .debug_str	00000000 
000005bd l       .debug_str	00000000 
000005d4 l       .debug_str	00000000 
000005dd l       .debug_str	00000000 
000005ff l       .debug_str	00000000 
00000609 l       .debug_str	00000000 
00000630 l       .debug_str	00000000 
00000648 l       .debug_str	00000000 
00000652 l       .debug_str	00000000 
00000675 l       .debug_str	00000000 
00000677 l       .debug_str	00000000 
0000067b l       .debug_str	00000000 
000006c3 l       .debug_str	00000000 
000006cc l       .debug_str	00000000 
0000070c l       .debug_str	00000000 
00000753 l       .debug_str	00000000 
00000756 l       .debug_str	00000000 
000007c5 l       .debug_str	00000000 
000007f0 l       .debug_str	00000000 
00000818 l       .debug_str	00000000 
0000081b l       .debug_str	00000000 
00000822 l       .debug_str	00000000 
0000082b l       .debug_str	00000000 
00000831 l       .debug_str	00000000 
0000083d l       .debug_str	00000000 
00000845 l       .debug_str	00000000 
0000089f l       .debug_str	00000000 
00000901 l       .debug_str	00000000 
0000090c l       .debug_str	00000000 
00000953 l       .debug_str	00000000 
000009a2 l       .debug_str	00000000 
000009ac l       .debug_str	00000000 
000009e9 l       .debug_str	00000000 
00000a2e l       .debug_str	00000000 
00000a37 l       .debug_str	00000000 
00000a47 l       .debug_str	00000000 
00000a4f l       .debug_str	00000000 
00000aa4 l       .debug_str	00000000 
00000b01 l       .debug_str	00000000 
00000b0d l       .debug_str	00000000 
00000b16 l       .debug_str	00000000 
00000b22 l       .debug_str	00000000 
00000b2e l       .debug_str	00000000 
00000b37 l       .debug_str	00000000 
00000b3f l       .debug_str	00000000 
00000b47 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b83 l       .debug_str	00000000 
00000b8a l       .debug_str	00000000 
00000b92 l       .debug_str	00000000 
00000b9c l       .debug_str	00000000 
00000bb3 l       .debug_str	00000000 
00000bb8 l       .debug_str	00000000 
00000bc0 l       .debug_str	00000000 
00000bc9 l       .debug_str	00000000 
00000bd2 l       .debug_str	00000000 
00000bdb l       .debug_str	00000000 
00000be3 l       .debug_str	00000000 
00000be7 l       .debug_str	00000000 
00000bee l       .debug_str	00000000 
00000bfa l       .debug_str	00000000 
00000c05 l       .debug_str	00000000 
00000c0d l       .debug_str	00000000 
00000c15 l       .debug_str	00000000 
00000c91 l       .debug_str	00000000 
00000d15 l       .debug_str	00000000 
00000e11 l       .debug_str	00000000 
00000f15 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f38 l       .debug_str	00000000 
00000f4c l       .debug_str	00000000 
00000f57 l       .debug_str	00000000 
00000f85 l       .debug_str	00000000 
00001000 l       .debug_str	00000000 
00001083 l       .debug_str	00000000 
00001091 l       .debug_str	00000000 
000010f0 l       .debug_str	00000000 
00001157 l       .debug_str	00000000 
0000116d l       .debug_str	00000000 
0000117d l       .debug_str	00000000 
0000118c l       .debug_str	00000000 
00001190 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
0000119d l       .debug_str	00000000 
000011a1 l       .debug_str	00000000 
000011a7 l       .debug_str	00000000 
000011ad l       .debug_str	00000000 
000011b9 l       .debug_str	00000000 
000011c1 l       .debug_str	00000000 
000011c7 l       .debug_str	00000000 
000027ba l       .debug_str	00000000 
000011d5 l       .debug_str	00000000 
000011f8 l       .debug_str	00000000 
00001208 l       .debug_str	00000000 
0000123b l       .debug_str	00000000 
0000127b l       .debug_str	00000000 
000012c3 l       .debug_str	00000000 
000012c7 l       .debug_str	00000000 
000012cd l       .debug_str	00000000 
000012d3 l       .debug_str	00000000 
000012d9 l       .debug_str	00000000 
000012eb l       .debug_str	00000000 
00001320 l       .debug_str	00000000 
00001362 l       .debug_str	00000000 
000013ac l       .debug_str	00000000 
000013b0 l       .debug_str	00000000 
000013b6 l       .debug_str	00000000 
000013bc l       .debug_str	00000000 
000013c2 l       .debug_str	00000000 
000013d4 l       .debug_str	00000000 
00001409 l       .debug_str	00000000 
0000144b l       .debug_str	00000000 
00001495 l       .debug_str	00000000 
00001499 l       .debug_str	00000000 
0000149f l       .debug_str	00000000 
000014a5 l       .debug_str	00000000 
000014ab l       .debug_str	00000000 
000014b1 l       .debug_str	00000000 
000014c2 l       .debug_str	00000000 
000014f6 l       .debug_str	00000000 
00001537 l       .debug_str	00000000 
00001580 l       .debug_str	00000000 
00001585 l       .debug_str	00000000 
0000158a l       .debug_str	00000000 
0000158e l       .debug_str	00000000 
00001594 l       .debug_str	00000000 
0000159a l       .debug_str	00000000 
000015a0 l       .debug_str	00000000 
000015b1 l       .debug_str	00000000 
000015e5 l       .debug_str	00000000 
00001626 l       .debug_str	00000000 
0000166f l       .debug_str	00000000 
00001673 l       .debug_str	00000000 
0000167c l       .debug_str	00000000 
0000168d l       .debug_str	00000000 
000016c1 l       .debug_str	00000000 
00001702 l       .debug_str	00000000 
0000174b l       .debug_str	00000000 
00001750 l       .debug_str	00000000 
00001754 l       .debug_str	00000000 
0000175d l       .debug_str	00000000 
00001764 l       .debug_str	00000000 
0000176c l       .debug_str	00000000 
0000177e l       .debug_str	00000000 
000017b3 l       .debug_str	00000000 
000017f5 l       .debug_str	00000000 
0000183f l       .debug_str	00000000 
00001843 l       .debug_str	00000000 
00001849 l       .debug_str	00000000 
0000184f l       .debug_str	00000000 
00001855 l       .debug_str	00000000 
0000185b l       .debug_str	00000000 
00001863 l       .debug_str	00000000 
00001871 l       .debug_str	00000000 
00001880 l       .debug_str	00000000 
00001891 l       .debug_str	00000000 
0000189c l       .debug_str	00000000 
000018a7 l       .debug_str	00000000 
000018b2 l       .debug_str	00000000 
000018b9 l       .debug_str	00000000 
000018dc l       .debug_str	00000000 
000018ee l       .debug_str	00000000 
00001923 l       .debug_str	00000000 
00001965 l       .debug_str	00000000 
000019af l       .debug_str	00000000 
000019b3 l       .debug_str	00000000 
000019bd l       .debug_str	00000000 
000019cf l       .debug_str	00000000 
00001a04 l       .debug_str	00000000 
00001a46 l       .debug_str	00000000 
00001a90 l       .debug_str	00000000 
00001a95 l       .debug_str	00000000 
00001a9f l       .debug_str	00000000 
00001ab1 l       .debug_str	00000000 
00001ae6 l       .debug_str	00000000 
00001b28 l       .debug_str	00000000 
00001b72 l       .debug_str	00000000 
00001b86 l       .debug_str	00000000 
00001b8a l       .debug_str	00000000 
00001b98 l       .debug_str	00000000 
00001ba8 l       .debug_str	00000000 
00001bb1 l       .debug_str	00000000 
00001bbc l       .debug_str	00000000 
00001bcb l       .debug_str	00000000 
00001be0 l       .debug_str	00000000 
00001c11 l       .debug_str	00000000 
00001cae l       .debug_str	00000000 
00001d53 l       .debug_str	00000000 
00001d5e l       .debug_str	00000000 
00001d67 l       .debug_str	00000000 
00001d88 l       .debug_str	00000000 
00001d9b l       .debug_str	00000000 
00001dd1 l       .debug_str	00000000 
00001e54 l       .debug_str	00000000 
00001edf l       .debug_str	00000000 
00001efb l       .debug_str	00000000 
00001f47 l       .debug_str	00000000 
00001f9b l       .debug_str	00000000 
00001fb8 l       .debug_str	00000000 
00001fcc l       .debug_str	00000000 
00002018 l       .debug_str	00000000 
0000206c l       .debug_str	00000000 
00002082 l       .debug_str	00000000 
00002096 l       .debug_str	00000000 
000020dd l       .debug_str	00000000 
0000212c l       .debug_str	00000000 
00002135 l       .debug_str	00000000 
00002143 l       .debug_str	00000000 
00002174 l       .debug_str	00000000 
0000217a l       .debug_str	00000000 
00002182 l       .debug_str	00000000 
00002189 l       .debug_str	00000000 
00002191 l       .debug_str	00000000 
0000219c l       .debug_str	00000000 
000021a4 l       .debug_str	00000000 
000021b3 l       .debug_str	00000000 
000021b7 l       .debug_str	00000000 
000021c2 l       .debug_str	00000000 
000021ce l       .debug_str	00000000 
000021d9 l       .debug_str	00000000 
000021ea l       .debug_str	00000000 
000021f0 l       .debug_str	00000000 
000021f8 l       .debug_str	00000000 
000021ff l       .debug_str	00000000 
00002209 l       .debug_str	00000000 
00002211 l       .debug_str	00000000 
00002219 l       .debug_str	00000000 
0000223b l       .debug_str	00000000 
00002246 l       .debug_str	00000000 
00002252 l       .debug_str	00000000 
0000225a l       .debug_str	00000000 
00002263 l       .debug_str	00000000 
0000226e l       .debug_str	00000000 
00002275 l       .debug_str	00000000 
00002280 l       .debug_str	00000000 
0000228b l       .debug_str	00000000 
0000229b l       .debug_str	00000000 
000022ab l       .debug_str	00000000 
000022ba l       .debug_str	00000000 
000022c2 l       .debug_str	00000000 
000022c9 l       .debug_str	00000000 
000022d1 l       .debug_str	00000000 
000022ef l       .debug_str	00000000 
000022ff l       .debug_str	00000000 
00002332 l       .debug_str	00000000 
00002347 l       .debug_str	00000000 
00002350 l       .debug_str	00000000 
000023ad l       .debug_str	00000000 
00002412 l       .debug_str	00000000 
0000241c l       .debug_str	00000000 
0000242c l       .debug_str	00000000 
00002441 l       .debug_str	00000000 
00002449 l       .debug_str	00000000 
000024ad l       .debug_str	00000000 
00002519 l       .debug_str	00000000 
00002520 l       .debug_str	00000000 
00002528 l       .debug_str	00000000 
00002546 l       .debug_str	00000000 
00002556 l       .debug_str	00000000 
00002589 l       .debug_str	00000000 
0000259e l       .debug_str	00000000 
000025b1 l       .debug_str	00000000 
000025c6 l       .debug_str	00000000 
000025cd l       .debug_str	00000000 
000025e2 l       .debug_str	00000000 
0000260c l       .debug_str	00000000 
0000267c l       .debug_str	00000000 
000026cf l       .debug_str	00000000 
0000271e l       .debug_str	00000000 
0000278e l       .debug_str	00000000 
000027d9 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h30f9912194b1df84E	00000000 .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h30f9912194b1df84E
00000000 l    d  .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h411c740de4b3d5baE	00000000 .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h411c740de4b3d5baE
00000000 l    d  .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h421b2f04d2878290E	00000000 .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h421b2f04d2878290E
00000000 l    d  .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h5477961aa483feaaE	00000000 .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h5477961aa483feaaE
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::result::unwrap_failed
00000000 g     F .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h30f9912194b1df84E	0000005a core::result::Result<T,E>::expect
00000000 g     F .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h411c740de4b3d5baE	00000012 <core::result::Result<T,E> as core::ops::try::Try>::from_error
00000000 g     F .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h421b2f04d2878290E	0000001a <core::result::Result<T,E> as core::ops::try::Try>::into_result
00000000 g     F .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h5477961aa483feaaE	0000000e <core::result::Result<T,E> as core::ops::try::Try>::into_result



Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h30f9912194b1df84E:

00000000 <core::result::Result<T,E>::expect>:
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h30f9912194b1df84E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:824
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9106      	str	r1, [sp, #24]
   c:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
   e:	6800      	ldr	r0, [r0, #0]
  10:	2800      	cmp	r0, #0
  12:	9305      	str	r3, [sp, #20]
  14:	f8cd c010 	str.w	ip, [sp, #16]
  18:	f8cd e00c 	str.w	lr, [sp, #12]
  1c:	9002      	str	r0, [sp, #8]
  1e:	d005      	beq.n	2c <core::result::Result<T,E>::expect+0x2c>
  20:	e7ff      	b.n	22 <core::result::Result<T,E>::expect+0x22>
  22:	9802      	ldr	r0, [sp, #8]
  24:	2801      	cmp	r0, #1
  26:	d00b      	beq.n	40 <core::result::Result<T,E>::expect+0x40>
  28:	e7ff      	b.n	2a <core::result::Result<T,E>::expect+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:829
  2a:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  2c:	9803      	ldr	r0, [sp, #12]
  2e:	6841      	ldr	r1, [r0, #4]
  30:	9108      	str	r1, [sp, #32]
  32:	9808      	ldr	r0, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:829
  34:	9903      	ldr	r1, [sp, #12]
  36:	680a      	ldr	r2, [r1, #0]
  38:	2a00      	cmp	r2, #0
  3a:	9001      	str	r0, [sp, #4]
  3c:	d009      	beq.n	52 <core::result::Result<T,E>::expect+0x52>
  3e:	e00b      	b.n	58 <core::result::Result<T,E>::expect+0x58>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  40:	9803      	ldr	r0, [sp, #12]
  42:	6841      	ldr	r1, [r0, #4]
  44:	9109      	str	r1, [sp, #36]	; 0x24
  46:	9806      	ldr	r0, [sp, #24]
  48:	9907      	ldr	r1, [sp, #28]
  4a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4c:	f7ff fffe 	bl	0 <core::result::unwrap_failed>
  50:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:829
  52:	9801      	ldr	r0, [sp, #4]
  54:	b00a      	add	sp, #40	; 0x28
  56:	bd80      	pop	{r7, pc}
  58:	e7fb      	b.n	52 <core::result::Result<T,E>::expect+0x52>

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h411c740de4b3d5baE:

00000000 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>:
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h411c740de4b3d5baE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1292
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1293
   6:	9801      	ldr	r0, [sp, #4]
   8:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1294
   a:	9802      	ldr	r0, [sp, #8]
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h421b2f04d2878290E:

00000000 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>:
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h421b2f04d2878290E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1282
   0:	b082      	sub	sp, #8
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
   6:	f8d1 c000 	ldr.w	ip, [r1]
   a:	6849      	ldr	r1, [r1, #4]
   c:	6041      	str	r1, [r0, #4]
   e:	f8c0 c000 	str.w	ip, [r0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1284
  12:	9201      	str	r2, [sp, #4]
  14:	9300      	str	r3, [sp, #0]
  16:	b002      	add	sp, #8
  18:	4770      	bx	lr

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h5477961aa483feaaE:

00000000 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>:
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h5477961aa483feaaE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1282
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
   6:	9801      	ldr	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1284
   8:	9100      	str	r1, [sp, #0]
   a:	b002      	add	sp, #8
   c:	4770      	bx	lr

app-ba860f72f0ac9e7b.2urosza1x5g7hih0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 2urosza1x5g7hih0
00000186 l       .debug_str	00000000 
00000410 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000079 l       .debug_str	00000000 
0000007d l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
0000008b l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000aa l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000b8 l       .debug_str	00000000 
000000bf l       .debug_str	00000000 
000000c6 l       .debug_str	00000000 
000000cf l       .debug_str	00000000 
000000d9 l       .debug_str	00000000 
000000e0 l       .debug_str	00000000 
000000e6 l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
00000139 l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
00000406 l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
000001b2 l       .debug_str	00000000 
000001d1 l       .debug_str	00000000 
000001d3 l       .debug_str	00000000 
000001d8 l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
00000204 l       .debug_str	00000000 
0000020a l       .debug_str	00000000 
00000210 l       .debug_str	00000000 
00000213 l       .debug_str	00000000 
00000222 l       .debug_str	00000000 
00000229 l       .debug_str	00000000 
0000022d l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
0000023e l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
0000024d l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
0000026d l       .debug_str	00000000 
00000279 l       .debug_str	00000000 
00000292 l       .debug_str	00000000 
00000297 l       .debug_str	00000000 
000002a8 l       .debug_str	00000000 
000002b2 l       .debug_str	00000000 
000002c0 l       .debug_str	00000000 
000002c4 l       .debug_str	00000000 
000002cf l       .debug_str	00000000 
000002d6 l       .debug_str	00000000 
000002dc l       .debug_str	00000000 
000002e0 l       .debug_str	00000000 
000002e4 l       .debug_str	00000000 
000002ec l       .debug_str	00000000 
00000303 l       .debug_str	00000000 
00000327 l       .debug_str	00000000 
00000343 l       .debug_str	00000000 
0000034d l       .debug_str	00000000 
00000367 l       .debug_str	00000000 
000003c5 l       .debug_str	00000000 
000003d0 l       .debug_str	00000000 
000003ed l       .debug_str	00000000 
00000442 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3fmt9Arguments6new_v117hed481d77d3c83033E	00000000 .text._ZN4core3fmt9Arguments6new_v117hed481d77d3c83033E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3fmt9Arguments6new_v117hed481d77d3c83033E	0000004c .hidden core::fmt::Arguments::new_v1



Disassembly of section .text._ZN4core3fmt9Arguments6new_v117hed481d77d3c83033E:

00000000 <core::fmt::Arguments::new_v1>:
_ZN4core3fmt9Arguments6new_v117hed481d77d3c83033E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:314
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	9104      	str	r1, [sp, #16]
  12:	9205      	str	r2, [sp, #20]
  14:	9306      	str	r3, [sp, #24]
  16:	f8cd c01c 	str.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:317
  1a:	9904      	ldr	r1, [sp, #16]
  1c:	9a05      	ldr	r2, [sp, #20]
  1e:	2300      	movs	r3, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:318
  20:	9309      	str	r3, [sp, #36]	; 0x24
  22:	9308      	str	r3, [sp, #32]
  24:	9308      	str	r3, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:319
  26:	9b06      	ldr	r3, [sp, #24]
  28:	f8dd c01c 	ldr.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  2c:	6001      	str	r1, [r0, #0]
  2e:	6042      	str	r2, [r0, #4]
  30:	9908      	ldr	r1, [sp, #32]
  32:	9a09      	ldr	r2, [sp, #36]	; 0x24
  34:	6081      	str	r1, [r0, #8]
  36:	60c2      	str	r2, [r0, #12]
  38:	6103      	str	r3, [r0, #16]
  3a:	f8c0 c014 	str.w	ip, [r0, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:321
  3e:	f8cd e00c 	str.w	lr, [sp, #12]
  42:	9402      	str	r4, [sp, #8]
  44:	9501      	str	r5, [sp, #4]
  46:	9600      	str	r6, [sp, #0]
  48:	b00a      	add	sp, #40	; 0x28
  4a:	bd70      	pop	{r4, r5, r6, pc}

app-ba860f72f0ac9e7b.3t0neq0rfdfezmuj.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3t0neq0rfdfezmuj
000000a7 l       .debug_str	00000000 
000000d6 l       .debug_str	00000000 
000000e3 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
0000009c l       .debug_str	00000000 
0000009f l       .debug_str	00000000 
000000d1 l       .debug_str	00000000 
000000ab l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000be l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000cb l       .debug_str	00000000 
000000de l       .debug_str	00000000 
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h54c19c743b889826E	0000000c app::app_sensor::SENSOR_DEVICE
00000000 l    d  .rodata..Lanon.d41d8cd98f00b204e9800998ecf8427e.0	00000000 .rodata..Lanon.d41d8cd98f00b204e9800998ecf8427e.0
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h54c19c743b889826E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h54c19c743b889826E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line



app-ba860f72f0ac9e7b.55jcccxybhk58gh5.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 55jcccxybhk58gh5
000000ef l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
0000007b l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000bc l       .debug_str	00000000 
000000c4 l       .debug_str	00000000 
000000cf l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000107 l       .debug_str	00000000 
00000113 l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
0000012e l       .debug_str	00000000 
00000138 l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
000001dc l       .debug_str	00000000 
00000000 l    d  .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he9bf930fef93cf18E	00000000 .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he9bf930fef93cf18E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he9bf930fef93cf18E	0000000e <T as core::convert::From<T>>::from



Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he9bf930fef93cf18E:

00000000 <<T as core::convert::From<T>>::from>:
_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he9bf930fef93cf18E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:547
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9100      	str	r1, [sp, #0]
   a:	b002      	add	sp, #8
   c:	4770      	bx	lr

app-ba860f72f0ac9e7b.ju01llv1v56g26l.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ju01llv1v56g26l
000001e1 l       .debug_str	00000000 
000004e1 l       .debug_str	00000000 
000004d8 l       .debug_str	00000000 
000004d4 l       .debug_str	00000000 
000004cf l       .debug_str	00000000 
00000503 l       .debug_str	00000000 
000004ca l       .debug_str	00000000 
000004c1 l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
0000048d l       .debug_str	00000000 
00000483 l       .debug_str	00000000 
0000046a l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000079 l       .debug_str	00000000 
0000007d l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
0000008b l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000aa l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000b8 l       .debug_str	00000000 
000000bf l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
000000cc l       .debug_str	00000000 
000000d0 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
00000104 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000160 l       .debug_str	00000000 
0000016c l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
00000184 l       .debug_str	00000000 
00000189 l       .debug_str	00000000 
00000190 l       .debug_str	00000000 
00000199 l       .debug_str	00000000 
000001a3 l       .debug_str	00000000 
000001aa l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000001bb l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000001cc l       .debug_str	00000000 
000001d1 l       .debug_str	00000000 
000001d4 l       .debug_str	00000000 
000001d8 l       .debug_str	00000000 
0000044d l       .debug_str	00000000 
000001e8 l       .debug_str	00000000 
000001ed l       .debug_str	00000000 
000001f2 l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
000001fe l       .debug_str	00000000 
00000208 l       .debug_str	00000000 
0000020b l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
0000021b l       .debug_str	00000000 
00000223 l       .debug_str	00000000 
00000229 l       .debug_str	00000000 
0000022f l       .debug_str	00000000 
0000023a l       .debug_str	00000000 
00000243 l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
0000028c l       .debug_str	00000000 
000002b3 l       .debug_str	00000000 
000002b8 l       .debug_str	00000000 
000002be l       .debug_str	00000000 
000002c4 l       .debug_str	00000000 
000002c7 l       .debug_str	00000000 
000002d6 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e1 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
000002f6 l       .debug_str	00000000 
0000030f l       .debug_str	00000000 
00000314 l       .debug_str	00000000 
00000325 l       .debug_str	00000000 
0000032f l       .debug_str	00000000 
0000033d l       .debug_str	00000000 
00000341 l       .debug_str	00000000 
0000034c l       .debug_str	00000000 
00000353 l       .debug_str	00000000 
00000359 l       .debug_str	00000000 
0000035d l       .debug_str	00000000 
00000361 l       .debug_str	00000000 
00000369 l       .debug_str	00000000 
00000380 l       .debug_str	00000000 
000003a4 l       .debug_str	00000000 
000003c0 l       .debug_str	00000000 
000003ca l       .debug_str	00000000 
000003e4 l       .debug_str	00000000 
00000442 l       .debug_str	00000000 
000004eb l       .debug_str	00000000 
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.0
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.1
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.5
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 .hidden app::gps_sensor::start_gps_listener
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::result::Result<T,E>::expect
00000000         *UND*	00000000 core::result::Result<T,E>::expect
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 mynewt::sys::console::buffer
00000000         *UND*	00000000 mynewt::sys::console::printhex
00000000         *UND*	00000000 mynewt::kernel::os::eventq_run
00000000         *UND*	00000000 mynewt::kernel::os::eventq_dflt_get
00000000         *UND*	00000000 mynewt::sysinit
00000000         *UND*	00000000 gps_l70r_start
00000000 g     F .text.main	00000066 main
00000000 g     F .text.rust_begin_unwind	000000ac rust_begin_unwind



Disassembly of section .text.main:

00000000 <main>:
main():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:50
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                 //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:56
    //  Initialise the Mynewt packages and Blue Pill internal temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <mynewt::sysinit>
   6:	e7ff      	b.n	2 <gps_l70r_start+0x2>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:71
        .expect("TMP fail");
*/

    //  Start the GPS.
    extern { fn gps_l70r_start() -> i32; }
    unsafe { gps_l70r_start() };
   8:	f7ff fffe 	bl	0 <gps_l70r_start>
   c:	9003      	str	r0, [sp, #12]
   e:	e7ff      	b.n	10 <main+0x10>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:76

    //  Start polling the GPS.
    //  extern { fn start_gps_listener(); }
    //  unsafe { start_gps_listener() };
    gps_sensor::start_gps_listener()
  10:	f7ff fffe 	bl	0 <app::gps_sensor::start_gps_listener>
  14:	9002      	str	r0, [sp, #8]
  16:	e7ff      	b.n	18 <main+0x18>
  18:	f240 0100 	movw	r1, #0
  1c:	f2c0 0100 	movt	r1, #0
  20:	2208      	movs	r2, #8
  22:	9802      	ldr	r0, [sp, #8]
  24:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  28:	e7ff      	b.n	2a <main+0x2a>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:80
        .expect("GPS fail");

    //  Main event loop
    loop {                            //  Loop forever...
  2a:	e7ff      	b.n	2c <main+0x2c>
  2c:	a804      	add	r0, sp, #16
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:82
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  2e:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_dflt_get>
  32:	e7ff      	b.n	a <main+0xa>
  34:	f240 0100 	movw	r1, #0
  38:	f2c0 0100 	movt	r1, #0
  3c:	a804      	add	r0, sp, #16
  3e:	2208      	movs	r2, #8
  40:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  44:	9001      	str	r0, [sp, #4]
  46:	e7ff      	b.n	48 <main+0x48>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:81
        os::eventq_run(               //  Processing events...
  48:	9801      	ldr	r0, [sp, #4]
  4a:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_run>
  4e:	9000      	str	r0, [sp, #0]
  50:	e7ff      	b.n	52 <main+0x52>
  52:	f240 0100 	movw	r1, #0
  56:	f2c0 0100 	movt	r1, #0
  5a:	2208      	movs	r2, #8
  5c:	9800      	ldr	r0, [sp, #0]
  5e:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  62:	e7ff      	b.n	64 <main+0x64>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:80
    loop {                            //  Loop forever...
  64:	e7e2      	b.n	2c <main+0x2c>

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:91
    //  Never comes here
}

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
   0:	b088      	sub	sp, #32
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:93
    //  Display the filename and line number to the Semihosting Console.
    console::print("panic ");
   6:	f240 0000 	movw	r0, #0
   a:	f2c0 0000 	movt	r0, #0
   e:	2206      	movs	r2, #6
  10:	9101      	str	r1, [sp, #4]
  12:	4611      	mov	r1, r2
  14:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  18:	e7ff      	b.n	1a <rust_begin_unwind+0x1a>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:94
    if let Some(location) = info.location() {
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
  20:	9003      	str	r0, [sp, #12]
  22:	e7ff      	b.n	24 <rust_begin_unwind+0x24>
  24:	9803      	ldr	r0, [sp, #12]
  26:	2800      	cmp	r0, #0
  28:	d032      	beq.n	90 <rust_begin_unwind+0x90>
  2a:	e7ff      	b.n	2c <rust_begin_unwind+0x2c>
  2c:	9803      	ldr	r0, [sp, #12]
  2e:	9004      	str	r0, [sp, #16]
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:95
        let file = location.file();
  30:	9804      	ldr	r0, [sp, #16]
  32:	f7ff fffe 	bl	0 <core::panic::Location::file>
  36:	9106      	str	r1, [sp, #24]
  38:	9005      	str	r0, [sp, #20]
  3a:	e7ff      	b.n	3c <rust_begin_unwind+0x3c>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:96
        let line = location.line();
  3c:	9804      	ldr	r0, [sp, #16]
  3e:	f7ff fffe 	bl	0 <core::panic::Location::line>
  42:	9007      	str	r0, [sp, #28]
  44:	e7ff      	b.n	46 <rust_begin_unwind+0x46>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:97
        console::print("at ");        console::buffer(&file);
  46:	f240 0000 	movw	r0, #0
  4a:	f2c0 0000 	movt	r0, #0
  4e:	2103      	movs	r1, #3
  50:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  54:	e7ff      	b.n	56 <rust_begin_unwind+0x56>
  56:	9805      	ldr	r0, [sp, #20]
  58:	9906      	ldr	r1, [sp, #24]
  5a:	f7ff fffe 	bl	0 <mynewt::sys::console::buffer>
  5e:	e7ff      	b.n	1a <rust_begin_unwind+0x1a>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:98
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  60:	f240 0000 	movw	r0, #0
  64:	f2c0 0000 	movt	r0, #0
  68:	2108      	movs	r1, #8
  6a:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  6e:	e7ff      	b.n	70 <rust_begin_unwind+0x70>
  70:	9807      	ldr	r0, [sp, #28]
  72:	f7ff fffe 	bl	0 <mynewt::sys::console::printhex>
  76:	e7ff      	b.n	2 <rust_begin_unwind+0x2>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:99
        console::print("\n");         console::flush();
  78:	f240 0000 	movw	r0, #0
  7c:	f2c0 0000 	movt	r0, #0
  80:	2101      	movs	r1, #1
  82:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  86:	e7ff      	b.n	2 <mynewt::sys::console::flush+0x2>
  88:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
  8c:	e7ff      	b.n	8e <rust_begin_unwind+0x8e>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:94
    if let Some(location) = info.location() {
  8e:	e00a      	b.n	a6 <rust_begin_unwind+0xa6>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:101
    } else {
        console::print("no loc\n");   console::flush();
  90:	f240 0000 	movw	r0, #0
  94:	f2c0 0000 	movt	r0, #0
  98:	2107      	movs	r1, #7
  9a:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  9e:	e7ff      	b.n	2 <mynewt::sys::console::flush+0x2>
  a0:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
  a4:	e7ff      	b.n	a6 <rust_begin_unwind+0xa6>
_ZN8cortex_m3asm4bkpt17h5468adc9991cdf06E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/asm.rs:11
/// exception.
#[inline(always)]
pub fn bkpt() {
    match () {
        #[cfg(all(cortex_m, feature = "inline-asm"))]
        () => unsafe { asm!("bkpt" :::: "volatile") },
  a6:	be00      	bkpt	0x0000
rust_begin_unwind():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:104
    }
    //  Pause in the debugger.
    bkpt();
  a8:	e7ff      	b.n	aa <rust_begin_unwind+0xaa>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:106
    //  Loop forever so that device won't restart.
    loop {}
  aa:	e7fe      	b.n	aa <rust_begin_unwind+0xaa>

app-ba860f72f0ac9e7b.n3qxs2j9ahxer3s.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 n3qxs2j9ahxer3s
000010d9 l       .debug_str	00000000 
000022fb l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000079 l       .debug_str	00000000 
0000007d l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
0000008b l       .debug_str	00000000 
00000096 l       .debug_str	00000000 
0000009d l       .debug_str	00000000 
000000a1 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000ab l       .debug_str	00000000 
000000b2 l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c1 l       .debug_str	00000000 
000000c8 l       .debug_str	00000000 
000000cb l       .debug_str	00000000 
000000d7 l       .debug_str	00000000 
000000df l       .debug_str	00000000 
000000e6 l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
0000016b l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
000001d1 l       .debug_str	00000000 
000001dc l       .debug_str	00000000 
00000223 l       .debug_str	00000000 
00000272 l       .debug_str	00000000 
0000027c l       .debug_str	00000000 
000002b9 l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
00000317 l       .debug_str	00000000 
0000031f l       .debug_str	00000000 
00000374 l       .debug_str	00000000 
000003d1 l       .debug_str	00000000 
000003dd l       .debug_str	00000000 
000003e6 l       .debug_str	00000000 
000003f2 l       .debug_str	00000000 
000003fe l       .debug_str	00000000 
00000407 l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000419 l       .debug_str	00000000 
00000421 l       .debug_str	00000000 
0000042b l       .debug_str	00000000 
00000440 l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
00000467 l       .debug_str	00000000 
0000046e l       .debug_str	00000000 
00000476 l       .debug_str	00000000 
00000480 l       .debug_str	00000000 
0000048b l       .debug_str	00000000 
00000494 l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
000004ab l       .debug_str	00000000 
000004af l       .debug_str	00000000 
000004b8 l       .debug_str	00000000 
000004bf l       .debug_str	00000000 
000004c7 l       .debug_str	00000000 
000004cf l       .debug_str	00000000 
000004d9 l       .debug_str	00000000 
000004df l       .debug_str	00000000 
000004e6 l       .debug_str	00000000 
000004ed l       .debug_str	00000000 
0000051a l       .debug_str	00000000 
0000054f l       .debug_str	00000000 
00000555 l       .debug_str	00000000 
0000055b l       .debug_str	00000000 
0000056a l       .debug_str	00000000 
0000057a l       .debug_str	00000000 
0000058a l       .debug_str	00000000 
00000592 l       .debug_str	00000000 
000005bb l       .debug_str	00000000 
00000619 l       .debug_str	00000000 
0000067f l       .debug_str	00000000 
00000686 l       .debug_str	00000000 
0000068e l       .debug_str	00000000 
00000697 l       .debug_str	00000000 
000006b5 l       .debug_str	00000000 
000006c5 l       .debug_str	00000000 
000006d3 l       .debug_str	00000000 
000006de l       .debug_str	00000000 
000006eb l       .debug_str	00000000 
000006fa l       .debug_str	00000000 
00000710 l       .debug_str	00000000 
0000071a l       .debug_str	00000000 
00000723 l       .debug_str	00000000 
0000072c l       .debug_str	00000000 
00000752 l       .debug_str	00000000 
00000768 l       .debug_str	00000000 
00000773 l       .debug_str	00000000 
00000789 l       .debug_str	00000000 
00000791 l       .debug_str	00000000 
000007b2 l       .debug_str	00000000 
000007c9 l       .debug_str	00000000 
000007ce l       .debug_str	00000000 
000007d6 l       .debug_str	00000000 
000007df l       .debug_str	00000000 
000007e8 l       .debug_str	00000000 
000007f1 l       .debug_str	00000000 
000007f9 l       .debug_str	00000000 
000007fd l       .debug_str	00000000 
00000804 l       .debug_str	00000000 
00000810 l       .debug_str	00000000 
0000081b l       .debug_str	00000000 
00000823 l       .debug_str	00000000 
0000082b l       .debug_str	00000000 
00000855 l       .debug_str	00000000 
000008d1 l       .debug_str	00000000 
00000955 l       .debug_str	00000000 
00000a51 l       .debug_str	00000000 
00000b55 l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6e l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b8c l       .debug_str	00000000 
00000b97 l       .debug_str	00000000 
00000bc5 l       .debug_str	00000000 
00000c40 l       .debug_str	00000000 
00000cc3 l       .debug_str	00000000 
00000cd1 l       .debug_str	00000000 
00000d30 l       .debug_str	00000000 
00000d97 l       .debug_str	00000000 
00000dad l       .debug_str	00000000 
00000dbd l       .debug_str	00000000 
00000dcc l       .debug_str	00000000 
00000dd0 l       .debug_str	00000000 
00000dd7 l       .debug_str	00000000 
00000ddd l       .debug_str	00000000 
00000de1 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000ded l       .debug_str	00000000 
00000df9 l       .debug_str	00000000 
00000e01 l       .debug_str	00000000 
00000e07 l       .debug_str	00000000 
00000e0f l       .debug_str	00000000 
00000e15 l       .debug_str	00000000 
00000e38 l       .debug_str	00000000 
00000e48 l       .debug_str	00000000 
00000e7b l       .debug_str	00000000 
00000ebb l       .debug_str	00000000 
00000f03 l       .debug_str	00000000 
00000f07 l       .debug_str	00000000 
00000f0d l       .debug_str	00000000 
00000f13 l       .debug_str	00000000 
00000f19 l       .debug_str	00000000 
00000f2b l       .debug_str	00000000 
00000f60 l       .debug_str	00000000 
00000fa2 l       .debug_str	00000000 
00000fec l       .debug_str	00000000 
00000ff0 l       .debug_str	00000000 
00000ff6 l       .debug_str	00000000 
00000ffc l       .debug_str	00000000 
00001002 l       .debug_str	00000000 
00001014 l       .debug_str	00000000 
00001049 l       .debug_str	00000000 
0000108b l       .debug_str	00000000 
000010d5 l       .debug_str	00000000 
000022e6 l       .debug_str	00000000 
000010df l       .debug_str	00000000 
000010e5 l       .debug_str	00000000 
000010eb l       .debug_str	00000000 
000010f1 l       .debug_str	00000000 
00001102 l       .debug_str	00000000 
00001136 l       .debug_str	00000000 
00001177 l       .debug_str	00000000 
000011c0 l       .debug_str	00000000 
000011c5 l       .debug_str	00000000 
000011ca l       .debug_str	00000000 
000011ce l       .debug_str	00000000 
000011d4 l       .debug_str	00000000 
000011da l       .debug_str	00000000 
000011e0 l       .debug_str	00000000 
000011f1 l       .debug_str	00000000 
00001225 l       .debug_str	00000000 
00001266 l       .debug_str	00000000 
000012af l       .debug_str	00000000 
000012b3 l       .debug_str	00000000 
000012bc l       .debug_str	00000000 
000012cd l       .debug_str	00000000 
00001301 l       .debug_str	00000000 
00001342 l       .debug_str	00000000 
0000138b l       .debug_str	00000000 
00001390 l       .debug_str	00000000 
00001394 l       .debug_str	00000000 
0000139d l       .debug_str	00000000 
000013a4 l       .debug_str	00000000 
000013ac l       .debug_str	00000000 
000013be l       .debug_str	00000000 
000013f3 l       .debug_str	00000000 
00001435 l       .debug_str	00000000 
0000147f l       .debug_str	00000000 
00001483 l       .debug_str	00000000 
00001489 l       .debug_str	00000000 
0000148f l       .debug_str	00000000 
00001495 l       .debug_str	00000000 
0000149b l       .debug_str	00000000 
000014a3 l       .debug_str	00000000 
000014b1 l       .debug_str	00000000 
000014c0 l       .debug_str	00000000 
000014d1 l       .debug_str	00000000 
000014dc l       .debug_str	00000000 
000014e7 l       .debug_str	00000000 
000014f2 l       .debug_str	00000000 
000014f9 l       .debug_str	00000000 
0000151c l       .debug_str	00000000 
0000152e l       .debug_str	00000000 
00001563 l       .debug_str	00000000 
000015a5 l       .debug_str	00000000 
000015ef l       .debug_str	00000000 
000015f3 l       .debug_str	00000000 
000015fd l       .debug_str	00000000 
0000160f l       .debug_str	00000000 
00001644 l       .debug_str	00000000 
00001686 l       .debug_str	00000000 
000016d0 l       .debug_str	00000000 
000016d5 l       .debug_str	00000000 
000016df l       .debug_str	00000000 
000016f1 l       .debug_str	00000000 
00001726 l       .debug_str	00000000 
00001768 l       .debug_str	00000000 
000017b2 l       .debug_str	00000000 
000017c6 l       .debug_str	00000000 
000017ca l       .debug_str	00000000 
000017d8 l       .debug_str	00000000 
000017e8 l       .debug_str	00000000 
000017f1 l       .debug_str	00000000 
000017fc l       .debug_str	00000000 
0000180b l       .debug_str	00000000 
00001820 l       .debug_str	00000000 
00001851 l       .debug_str	00000000 
000018ee l       .debug_str	00000000 
00001993 l       .debug_str	00000000 
0000199e l       .debug_str	00000000 
000019a7 l       .debug_str	00000000 
000019c8 l       .debug_str	00000000 
000019db l       .debug_str	00000000 
00001a11 l       .debug_str	00000000 
00001a94 l       .debug_str	00000000 
00001b1f l       .debug_str	00000000 
00001b3b l       .debug_str	00000000 
00001b87 l       .debug_str	00000000 
00001bdb l       .debug_str	00000000 
00001bf8 l       .debug_str	00000000 
00001c0c l       .debug_str	00000000 
00001c58 l       .debug_str	00000000 
00001cac l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001cd6 l       .debug_str	00000000 
00001d1d l       .debug_str	00000000 
00001d6c l       .debug_str	00000000 
00001d75 l       .debug_str	00000000 
00001d83 l       .debug_str	00000000 
00001db4 l       .debug_str	00000000 
00001dba l       .debug_str	00000000 
00001dc2 l       .debug_str	00000000 
00001dc9 l       .debug_str	00000000 
00001dd1 l       .debug_str	00000000 
00001ddc l       .debug_str	00000000 
00001de4 l       .debug_str	00000000 
00001df3 l       .debug_str	00000000 
00001df7 l       .debug_str	00000000 
00001e02 l       .debug_str	00000000 
00001e0e l       .debug_str	00000000 
00001e19 l       .debug_str	00000000 
00001e2a l       .debug_str	00000000 
00001e30 l       .debug_str	00000000 
00001e38 l       .debug_str	00000000 
00001e3f l       .debug_str	00000000 
00001e49 l       .debug_str	00000000 
00001e51 l       .debug_str	00000000 
00001e59 l       .debug_str	00000000 
00001e7b l       .debug_str	00000000 
00001e86 l       .debug_str	00000000 
00001e92 l       .debug_str	00000000 
00001e9a l       .debug_str	00000000 
00001ea3 l       .debug_str	00000000 
00001eae l       .debug_str	00000000 
00001eb5 l       .debug_str	00000000 
00001ec0 l       .debug_str	00000000 
00001ecb l       .debug_str	00000000 
00001edb l       .debug_str	00000000 
00001ee5 l       .debug_str	00000000 
00001eeb l       .debug_str	00000000 
00001f0d l       .debug_str	00000000 
00001f45 l       .debug_str	00000000 
00001f85 l       .debug_str	00000000 
00001f8c l       .debug_str	00000000 
00001f94 l       .debug_str	00000000 
00001fab l       .debug_str	00000000 
00001fb4 l       .debug_str	00000000 
00001fc4 l       .debug_str	00000000 
00001fd3 l       .debug_str	00000000 
00001fdb l       .debug_str	00000000 
00001fe2 l       .debug_str	00000000 
00001fea l       .debug_str	00000000 
00002008 l       .debug_str	00000000 
00002018 l       .debug_str	00000000 
0000204b l       .debug_str	00000000 
00002060 l       .debug_str	00000000 
00002069 l       .debug_str	00000000 
000020c6 l       .debug_str	00000000 
0000212b l       .debug_str	00000000 
00002135 l       .debug_str	00000000 
00002145 l       .debug_str	00000000 
0000215a l       .debug_str	00000000 
00002162 l       .debug_str	00000000 
000021c6 l       .debug_str	00000000 
00002232 l       .debug_str	00000000 
00002239 l       .debug_str	00000000 
00002241 l       .debug_str	00000000 
0000225f l       .debug_str	00000000 
0000226f l       .debug_str	00000000 
000022a2 l       .debug_str	00000000 
000022b7 l       .debug_str	00000000 
000022ca l       .debug_str	00000000 
000022df l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3ptr8null_mut17h9b62b0f2d444e6e2E	00000000 .text._ZN4core3ptr8null_mut17h9b62b0f2d444e6e2E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3ptr8null_mut17h9b62b0f2d444e6e2E	00000004 core::ptr::null_mut



Disassembly of section .text._ZN4core3ptr8null_mut17h9b62b0f2d444e6e2E:

00000000 <core::ptr::null_mut>:
_ZN4core3ptr8null_mut17h9b62b0f2d444e6e2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:231
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

as_slice-f57366d097e64402.as_slice.16r9fqnv-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 as_slice.16r9fqnv-cgu.0



bare_metal-084a7a423a8970f1.bare_metal.6lvb76h8-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 bare_metal.6lvb76h8-cgu.0
000000fa l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009c l       .debug_str	00000000 
000000ec l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
00000000 l    d  .text._ZN10bare_metal15CriticalSection3new17he6a9c2fdc67e7d83E	00000000 .text._ZN10bare_metal15CriticalSection3new17he6a9c2fdc67e7d83E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN10bare_metal15CriticalSection3new17he6a9c2fdc67e7d83E	00000006 bare_metal::CriticalSection::new



Disassembly of section .text._ZN10bare_metal15CriticalSection3new17he6a9c2fdc67e7d83E:

00000000 <bare_metal::CriticalSection::new>:
_ZN10bare_metal15CriticalSection3new17he6a9c2fdc67e7d83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\bare-metal-0.2.4\src/lib.rs:66
impl CriticalSection {
    /// Creates a critical section token
    ///
    /// This method is meant to be used to create safe abstractions rather than
    /// meant to be directly used in applications.
    pub unsafe fn new() -> Self {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\bare-metal-0.2.4\src/lib.rs:68
        CriticalSection { _0: () }
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.0
00000cfc l       .debug_str	00000000 
00002896 l       .debug_str	00000000 
00002f11 l       .debug_str	00000000 
0000288b l       .debug_str	00000000 
00002886 l       .debug_str	00000000 
0000287b l       .debug_str	00000000 
00002ef5 l       .debug_str	00000000 
00002876 l       .debug_str	00000000 
00002eda l       .debug_str	00000000 
0000286b l       .debug_str	00000000 
00002ebe l       .debug_str	00000000 
00002866 l       .debug_str	00000000 
00002ea3 l       .debug_str	00000000 
00002861 l       .debug_str	00000000 
00002e84 l       .debug_str	00000000 
0000285c l       .debug_str	00000000 
00002e69 l       .debug_str	00000000 
00002826 l       .debug_str	00000000 
00002e4e l       .debug_str	00000000 
000027fc l       .debug_str	00000000 
00002e33 l       .debug_str	00000000 
00002797 l       .debug_str	00000000 
00002e18 l       .debug_str	00000000 
00002767 l       .debug_str	00000000 
00002dfd l       .debug_str	00000000 
0000275f l       .debug_str	00000000 
00002757 l       .debug_str	00000000 
0000274f l       .debug_str	00000000 
00002747 l       .debug_str	00000000 
00002de0 l       .debug_str	00000000 
0000273f l       .debug_str	00000000 
00002dc5 l       .debug_str	00000000 
00002737 l       .debug_str	00000000 
00002dba l       .debug_str	00000000 
00002732 l       .debug_str	00000000 
00002dab l       .debug_str	00000000 
0000272d l       .debug_str	00000000 
00002d8b l       .debug_str	00000000 
00002729 l       .debug_str	00000000 
00002d86 l       .debug_str	00000000 
00002723 l       .debug_str	00000000 
00002d80 l       .debug_str	00000000 
0000271f l       .debug_str	00000000 
00002d71 l       .debug_str	00000000 
000026ea l       .debug_str	00000000 
00002d6c l       .debug_str	00000000 
000026bc l       .debug_str	00000000 
00002d4d l       .debug_str	00000000 
000026b2 l       .debug_str	00000000 
00002646 l       .debug_str	00000000 
0000261c l       .debug_str	00000000 
00002d2e l       .debug_str	00000000 
000025b7 l       .debug_str	00000000 
00002589 l       .debug_str	00000000 
0000257f l       .debug_str	00000000 
00002d0f l       .debug_str	00000000 
0000257b l       .debug_str	00000000 
00002d0b l       .debug_str	00000000 
00002571 l       .debug_str	00000000 
00002d05 l       .debug_str	00000000 
0000256d l       .debug_str	00000000 
00002ce4 l       .debug_str	00000000 
00002563 l       .debug_str	00000000 
00002cb9 l       .debug_str	00000000 
0000255f l       .debug_str	00000000 
00002c53 l       .debug_str	00000000 
0000255a l       .debug_str	00000000 
00002c22 l       .debug_str	00000000 
00002555 l       .debug_str	00000000 
00002c18 l       .debug_str	00000000 
00002551 l       .debug_str	00000000 
00002c13 l       .debug_str	00000000 
0000251c l       .debug_str	00000000 
00002c0e l       .debug_str	00000000 
000024f2 l       .debug_str	00000000 
00002c09 l       .debug_str	00000000 
0000248d l       .debug_str	00000000 
00002c03 l       .debug_str	00000000 
0000245d l       .debug_str	00000000 
00002bfd l       .debug_str	00000000 
00002458 l       .debug_str	00000000 
00002bf8 l       .debug_str	00000000 
00002451 l       .debug_str	00000000 
00002bc2 l       .debug_str	00000000 
0000244b l       .debug_str	00000000 
00002b97 l       .debug_str	00000000 
00002445 l       .debug_str	00000000 
00002b31 l       .debug_str	00000000 
00002441 l       .debug_str	00000000 
00002b00 l       .debug_str	00000000 
0000240c l       .debug_str	00000000 
00002afa l       .debug_str	00000000 
000023e2 l       .debug_str	00000000 
00002af6 l       .debug_str	00000000 
0000237d l       .debug_str	00000000 
00002af2 l       .debug_str	00000000 
0000234d l       .debug_str	00000000 
00002aee l       .debug_str	00000000 
00002347 l       .debug_str	00000000 
00002ab8 l       .debug_str	00000000 
00002343 l       .debug_str	00000000 
00002a8e l       .debug_str	00000000 
0000230e l       .debug_str	00000000 
00002a29 l       .debug_str	00000000 
000022e4 l       .debug_str	00000000 
000029f9 l       .debug_str	00000000 
0000227f l       .debug_str	00000000 
000029f3 l       .debug_str	00000000 
0000224f l       .debug_str	00000000 
000029e8 l       .debug_str	00000000 
0000224b l       .debug_str	00000000 
000029e3 l       .debug_str	00000000 
00002247 l       .debug_str	00000000 
000029de l       .debug_str	00000000 
0000223c l       .debug_str	00000000 
000029d8 l       .debug_str	00000000 
00002233 l       .debug_str	00000000 
000029d3 l       .debug_str	00000000 
0000222a l       .debug_str	00000000 
000029ce l       .debug_str	00000000 
00002225 l       .debug_str	00000000 
000029c9 l       .debug_str	00000000 
00002220 l       .debug_str	00000000 
000029c3 l       .debug_str	00000000 
0000221e l       .debug_str	00000000 
000029be l       .debug_str	00000000 
00002219 l       .debug_str	00000000 
000029ba l       .debug_str	00000000 
00002211 l       .debug_str	00000000 
000029b6 l       .debug_str	00000000 
0000220a l       .debug_str	00000000 
000029b0 l       .debug_str	00000000 
00002201 l       .debug_str	00000000 
000029ab l       .debug_str	00000000 
000021fa l       .debug_str	00000000 
000029a6 l       .debug_str	00000000 
000021f3 l       .debug_str	00000000 
00002971 l       .debug_str	00000000 
000021ec l       .debug_str	00000000 
00002946 l       .debug_str	00000000 
000021e7 l       .debug_str	00000000 
000021e3 l       .debug_str	00000000 
000028e0 l       .debug_str	00000000 
000021ae l       .debug_str	00000000 
000028af l       .debug_str	00000000 
00002184 l       .debug_str	00000000 
000028aa l       .debug_str	00000000 
0000211f l       .debug_str	00000000 
000028a6 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
00000152 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
00000182 l       .debug_str	00000000 
0000018c l       .debug_str	00000000 
0000019d l       .debug_str	00000000 
000001a6 l       .debug_str	00000000 
000001b1 l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001cc l       .debug_str	00000000 
000001d4 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001ec l       .debug_str	00000000 
000001f1 l       .debug_str	00000000 
000001f6 l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
0000020d l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000228 l       .debug_str	00000000 
0000022e l       .debug_str	00000000 
00000234 l       .debug_str	00000000 
00000239 l       .debug_str	00000000 
0000023e l       .debug_str	00000000 
00000242 l       .debug_str	00000000 
00000244 l       .debug_str	00000000 
00000254 l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
000002ac l       .debug_str	00000000 
000002b7 l       .debug_str	00000000 
000002bc l       .debug_str	00000000 
000002d8 l       .debug_str	00000000 
00000311 l       .debug_str	00000000 
0000031a l       .debug_str	00000000 
00000334 l       .debug_str	00000000 
0000033c l       .debug_str	00000000 
00000343 l       .debug_str	00000000 
00000346 l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000367 l       .debug_str	00000000 
0000036d l       .debug_str	00000000 
00000375 l       .debug_str	00000000 
000003b2 l       .debug_str	00000000 
000003bc l       .debug_str	00000000 
000003d8 l       .debug_str	00000000 
00000411 l       .debug_str	00000000 
0000041a l       .debug_str	00000000 
00000422 l       .debug_str	00000000 
00000424 l       .debug_str	00000000 
00000463 l       .debug_str	00000000 
00000477 l       .debug_str	00000000 
00000479 l       .debug_str	00000000 
0000047d l       .debug_str	00000000 
000004bc l       .debug_str	00000000 
000004fb l       .debug_str	00000000 
000004ff l       .debug_str	00000000 
0000053c l       .debug_str	00000000 
00000540 l       .debug_str	00000000 
0000057f l       .debug_str	00000000 
000005be l       .debug_str	00000000 
000005fd l       .debug_str	00000000 
0000063c l       .debug_str	00000000 
0000067b l       .debug_str	00000000 
000006ba l       .debug_str	00000000 
000006c9 l       .debug_str	00000000 
000006da l       .debug_str	00000000 
000006e1 l       .debug_str	00000000 
0000071e l       .debug_str	00000000 
00000727 l       .debug_str	00000000 
00000742 l       .debug_str	00000000 
0000077b l       .debug_str	00000000 
00000783 l       .debug_str	00000000 
0000079c l       .debug_str	00000000 
000007da l       .debug_str	00000000 
000007e4 l       .debug_str	00000000 
0000081d l       .debug_str	00000000 
00000825 l       .debug_str	00000000 
0000082a l       .debug_str	00000000 
00000869 l       .debug_str	00000000 
000008a8 l       .debug_str	00000000 
000008e7 l       .debug_str	00000000 
00000926 l       .debug_str	00000000 
00000965 l       .debug_str	00000000 
000009a4 l       .debug_str	00000000 
000009a8 l       .debug_str	00000000 
000009ac l       .debug_str	00000000 
000009b0 l       .debug_str	00000000 
000009b4 l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000009bd l       .debug_str	00000000 
000009c2 l       .debug_str	00000000 
000009ce l       .debug_str	00000000 
000009d7 l       .debug_str	00000000 
00000a47 l       .debug_str	00000000 
00000a54 l       .debug_str	00000000 
00000acb l       .debug_str	00000000 
00000adf l       .debug_str	00000000 
00000ae3 l       .debug_str	00000000 
00000ae7 l       .debug_str	00000000 
00000aeb l       .debug_str	00000000 
00000af6 l       .debug_str	00000000 
00000b62 l       .debug_str	00000000 
00000b6f l       .debug_str	00000000 
00000bdc l       .debug_str	00000000 
00000bea l       .debug_str	00000000 
00000c5e l       .debug_str	00000000 
00000c73 l       .debug_str	00000000 
00000ce7 l       .debug_str	00000000 
000020ef l       .debug_str	00000000 
00000d6b l       .debug_str	00000000 
00000d7b l       .debug_str	00000000 
00000de6 l       .debug_str	00000000 
00000df2 l       .debug_str	00000000 
00000e5c l       .debug_str	00000000 
00000e67 l       .debug_str	00000000 
00000ed6 l       .debug_str	00000000 
00000ee6 l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f6d l       .debug_str	00000000 
00000fd8 l       .debug_str	00000000 
00000fe4 l       .debug_str	00000000 
00000fef l       .debug_str	00000000 
00000ff9 l       .debug_str	00000000 
00000ffe l       .debug_str	00000000 
00001009 l       .debug_str	00000000 
00001076 l       .debug_str	00000000 
00001084 l       .debug_str	00000000 
000010f3 l       .debug_str	00000000 
00001103 l       .debug_str	00000000 
00001172 l       .debug_str	00000000 
00001182 l       .debug_str	00000000 
000011f3 l       .debug_str	00000000 
00001205 l       .debug_str	00000000 
00001271 l       .debug_str	00000000 
0000127e l       .debug_str	00000000 
00001280 l       .debug_str	00000000 
000012e8 l       .debug_str	00000000 
000012f2 l       .debug_str	00000000 
0000135c l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
000013d8 l       .debug_str	00000000 
000013ea l       .debug_str	00000000 
00001456 l       .debug_str	00000000 
00001463 l       .debug_str	00000000 
000014cf l       .debug_str	00000000 
000014dc l       .debug_str	00000000 
00001548 l       .debug_str	00000000 
00001555 l       .debug_str	00000000 
000015c4 l       .debug_str	00000000 
000015d2 l       .debug_str	00000000 
00001643 l       .debug_str	00000000 
00001653 l       .debug_str	00000000 
000016c6 l       .debug_str	00000000 
000016d8 l       .debug_str	00000000 
00001748 l       .debug_str	00000000 
00001757 l       .debug_str	00000000 
000017c9 l       .debug_str	00000000 
000017da l       .debug_str	00000000 
0000184c l       .debug_str	00000000 
0000185d l       .debug_str	00000000 
000018ca l       .debug_str	00000000 
000018d6 l       .debug_str	00000000 
00001942 l       .debug_str	00000000 
0000194d l       .debug_str	00000000 
000019c1 l       .debug_str	00000000 
000019d4 l       .debug_str	00000000 
00001a49 l       .debug_str	00000000 
00001a5d l       .debug_str	00000000 
00001aca l       .debug_str	00000000 
00001ad6 l       .debug_str	00000000 
00001b4a l       .debug_str	00000000 
00001b5d l       .debug_str	00000000 
00001bd3 l       .debug_str	00000000 
00001be8 l       .debug_str	00000000 
00001c54 l       .debug_str	00000000 
00001c5f l       .debug_str	00000000 
00001cd1 l       .debug_str	00000000 
00001ce2 l       .debug_str	00000000 
00001d4e l       .debug_str	00000000 
00001d59 l       .debug_str	00000000 
00001d99 l       .debug_str	00000000 
00001d9f l       .debug_str	00000000 
00001dd4 l       .debug_str	00000000 
00001dd8 l       .debug_str	00000000 
00001e0d l       .debug_str	00000000 
00001e11 l       .debug_str	00000000 
00001e15 l       .debug_str	00000000 
00001e1d l       .debug_str	00000000 
00001e25 l       .debug_str	00000000 
00001e2f l       .debug_str	00000000 
00001e37 l       .debug_str	00000000 
00001e3f l       .debug_str	00000000 
00001e45 l       .debug_str	00000000 
00001e4d l       .debug_str	00000000 
00001e55 l       .debug_str	00000000 
00001e5b l       .debug_str	00000000 
00001e64 l       .debug_str	00000000 
00001e6b l       .debug_str	00000000 
00001e72 l       .debug_str	00000000 
00001e80 l       .debug_str	00000000 
00001eb0 l       .debug_str	00000000 
00001f15 l       .debug_str	00000000 
00001f1b l       .debug_str	00000000 
00001f45 l       .debug_str	00000000 
00001f7c l       .debug_str	00000000 
00001f81 l       .debug_str	00000000 
00001f8c l       .debug_str	00000000 
00001fa0 l       .debug_str	00000000 
00001fa4 l       .debug_str	00000000 
00001fa8 l       .debug_str	00000000 
00001fac l       .debug_str	00000000 
00001fb1 l       .debug_str	00000000 
00001fb6 l       .debug_str	00000000 
00001fc1 l       .debug_str	00000000 
00001fc7 l       .debug_str	00000000 
00001fcb l       .debug_str	00000000 
00001fd2 l       .debug_str	00000000 
00001fd9 l       .debug_str	00000000 
0000200b l       .debug_str	00000000 
00002072 l       .debug_str	00000000 
0000209e l       .debug_str	00000000 
000020d3 l       .debug_str	00000000 
000020d7 l       .debug_str	00000000 
000020dd l       .debug_str	00000000 
000020e3 l       .debug_str	00000000 
000020e9 l       .debug_str	00000000 
0000289b l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.f0f1e8b220260bb82b1e94796d9bc727.0	00000018 .Lanon.f0f1e8b220260bb82b1e94796d9bc727.0
00000000 l     O .rodata..Lanon.f0f1e8b220260bb82b1e94796d9bc727.1	00000018 .Lanon.f0f1e8b220260bb82b1e94796d9bc727.1
00000000 l     O .rodata..Lanon.f0f1e8b220260bb82b1e94796d9bc727.2	00000018 .Lanon.f0f1e8b220260bb82b1e94796d9bc727.2
00000000 l     O .rodata..Lanon.f0f1e8b220260bb82b1e94796d9bc727.3	00000018 .Lanon.f0f1e8b220260bb82b1e94796d9bc727.3
00000000 l     O .rodata..Lanon.f0f1e8b220260bb82b1e94796d9bc727.4	00000010 .Lanon.f0f1e8b220260bb82b1e94796d9bc727.4
00000000 l     O .rodata..Lanon.f0f1e8b220260bb82b1e94796d9bc727.5	00000018 .Lanon.f0f1e8b220260bb82b1e94796d9bc727.5
00000000 l     O .rodata..Lanon.f0f1e8b220260bb82b1e94796d9bc727.6	00000010 .Lanon.f0f1e8b220260bb82b1e94796d9bc727.6
00000000 l     O .rodata.str.0	00000065 str.0
00000000 l     O .rodata.str.1	0000001c str.1
00000000 l     O .rodata.str.2	00000063 str.2
00000000 l     O .rodata.str.3	00000021 str.3
00000000 l    d  .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h82980b392467e02bE	00000000 .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h82980b392467e02bE
00000000 l    d  .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17heefa8f4b64d081dbE	00000000 .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17heefa8f4b64d081dbE
00000000 l    d  .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h964f484a7c91d36bE	00000000 .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h964f484a7c91d36bE
00000000 l    d  .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h78a9ce3ba652f914E	00000000 .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h78a9ce3ba652f914E
00000000 l    d  .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h711e140c77b89977E	00000000 .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h711e140c77b89977E
00000000 l    d  .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h28489aa9af705ba7E	00000000 .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h28489aa9af705ba7E
00000000 l    d  .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17h5bf8aa8522c2351eE	00000000 .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17h5bf8aa8522c2351eE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11disable_fpu17h979b3586a8bff52bE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11disable_fpu17h979b3586a8bff52bE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10enable_fpu17h7bc3cfa35706b21aE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10enable_fpu17h7bc3cfa35706b21aE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15fpu_access_mode17h159097251a6034f3E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15fpu_access_mode17h159097251a6034f3E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$19set_fpu_access_mode17heb23c87f50c7ede3E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$19set_fpu_access_mode17heb23c87f50c7ede3E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17h276f9e187a6e2298E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17h276f9e187a6e2298E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17ha96302f40e5662a3E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17ha96302f40e5662a3E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h3cb9453b0717d66eE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h3cb9453b0717d66eE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17hef3383e14e12d68cE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17hef3383e14e12d68cE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17h40ad8ffa6427b4b9E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17h40ad8ffa6427b4b9E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h9917a7a046af957eE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h9917a7a046af957eE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset17h7d82617eee6b8a96E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset17h7d82617eee6b8a96E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h530e4c459282c162E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h530e4c459282c162E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hf8d89c73ad2d3128E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hf8d89c73ad2d3128E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h467037947a92d2eeE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h467037947a92d2eeE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17h004d4e0f53d4262bE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17h004d4e0f53d4262bE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hbccfb29c6e350b86E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hbccfb29c6e350b86E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17ha5c432bb1d3a179dE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17ha5c432bb1d3a179dE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17h6287a8e7d2ee0df9E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17h6287a8e7d2ee0df9E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17h84acc8bd6d77ef18E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17h84acc8bd6d77ef18E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17h9b2a58dc2c7a606eE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17h9b2a58dc2c7a606eE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hc2cdeef5183e7e67E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hc2cdeef5183e7e67E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h59a0147fd3109cc4E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h59a0147fd3109cc4E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17h27654ff9541dadeaE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17h27654ff9541dadeaE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17haddf5f03f310d763E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17haddf5f03f310d763E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17hb6bc27007a616428E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17hb6bc27007a616428E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17hd358d2b186b5a47dE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17hd358d2b186b5a47dE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17hafd4d19bb8ba70b5E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17hafd4d19bb8ba70b5E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha000f96468b80338E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha000f96468b80338E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h81acfbd637e6c08dE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h81acfbd637e6c08dE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h0c97eb3e19b1c4dfE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h0c97eb3e19b1c4dfE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17h18062f0d122dfba9E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17h18062f0d122dfba9E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hc1c38f6142aa2de1E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hc1c38f6142aa2de1E
00000000 l    d  .text._ZN8cortex_m10peripheral11Peripherals5steal17h15413da39a30cd1dE	00000000 .text._ZN8cortex_m10peripheral11Peripherals5steal17h15413da39a30cd1dE
00000000 l    d  .text._ZN8cortex_m10peripheral3CBP3new17ha10b7ee893af2439E	00000000 .text._ZN8cortex_m10peripheral3CBP3new17ha10b7ee893af2439E
00000000 l    d  .text._ZN8cortex_m10peripheral3CBP3ptr17h377c02c8c1787ae4E	00000000 .text._ZN8cortex_m10peripheral3CBP3ptr17h377c02c8c1787ae4E
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadf256d537903084E	00000000 .text._ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadf256d537903084E
00000000 l    d  .text._ZN8cortex_m10peripheral5CPUID3ptr17h122332c03e42390bE	00000000 .text._ZN8cortex_m10peripheral5CPUID3ptr17h122332c03e42390bE
00000000 l    d  .text._ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4118c569d2e63737E	00000000 .text._ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4118c569d2e63737E
00000000 l    d  .text._ZN8cortex_m10peripheral3DCB3ptr17h0d7be6912828c88cE	00000000 .text._ZN8cortex_m10peripheral3DCB3ptr17h0d7be6912828c88cE
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h626597380cfe03f7E	00000000 .text._ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h626597380cfe03f7E
00000000 l    d  .text._ZN8cortex_m10peripheral3DWT3ptr17h72afa2852124a6d8E	00000000 .text._ZN8cortex_m10peripheral3DWT3ptr17h72afa2852124a6d8E
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e8370a8c3e597a3E	00000000 .text._ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e8370a8c3e597a3E
00000000 l    d  .text._ZN8cortex_m10peripheral3FPB3ptr17h88953fe8f2813c56E	00000000 .text._ZN8cortex_m10peripheral3FPB3ptr17h88953fe8f2813c56E
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h26ba43de2133ea10E	00000000 .text._ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h26ba43de2133ea10E
00000000 l    d  .text._ZN8cortex_m10peripheral3FPU3ptr17h6a01315203ab96afE	00000000 .text._ZN8cortex_m10peripheral3FPU3ptr17h6a01315203ab96afE
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..FPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h716c63b8b7032d0eE	00000000 .text._ZN69_$LT$cortex_m..peripheral..FPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h716c63b8b7032d0eE
00000000 l    d  .text._ZN8cortex_m10peripheral3ITM3ptr17h37204737952c7ebbE	00000000 .text._ZN8cortex_m10peripheral3ITM3ptr17h37204737952c7ebbE
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h60a3345c99f54189E	00000000 .text._ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h60a3345c99f54189E
00000000 l    d  .text._ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf23be00e44479b5bE	00000000 .text._ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf23be00e44479b5bE
00000000 l    d  .text._ZN8cortex_m10peripheral3MPU3ptr17h8f1745c4d0818912E	00000000 .text._ZN8cortex_m10peripheral3MPU3ptr17h8f1745c4d0818912E
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha2cc57a7561495faE	00000000 .text._ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha2cc57a7561495faE
00000000 l    d  .text._ZN8cortex_m10peripheral4NVIC3ptr17h561c3df34499b03aE	00000000 .text._ZN8cortex_m10peripheral4NVIC3ptr17h561c3df34499b03aE
00000000 l    d  .text._ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hcbf5e29844739915E	00000000 .text._ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hcbf5e29844739915E
00000000 l    d  .text._ZN8cortex_m10peripheral3SCB3ptr17hb8b5070cf4d81ed4E	00000000 .text._ZN8cortex_m10peripheral3SCB3ptr17hb8b5070cf4d81ed4E
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h148f3c6fd338e68fE	00000000 .text._ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h148f3c6fd338e68fE
00000000 l    d  .text._ZN8cortex_m10peripheral4SYST3ptr17h8b3ba6561b454774E	00000000 .text._ZN8cortex_m10peripheral4SYST3ptr17h8b3ba6561b454774E
00000000 l    d  .text._ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf8ae4cee0937d53bE	00000000 .text._ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf8ae4cee0937d53bE
00000000 l    d  .text._ZN8cortex_m10peripheral4TPIU3ptr17h1f41a2dbaf2bb820E	00000000 .text._ZN8cortex_m10peripheral4TPIU3ptr17h1f41a2dbaf2bb820E
00000000 l    d  .text._ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7c4e0333b3911d8eE	00000000 .text._ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7c4e0333b3911d8eE
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata.str.2	00000000 .rodata.str.2
00000000 l    d  .rodata.str.3	00000000 .rodata.str.3
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     O .bss.CORE_PERIPHERALS	00000001 CORE_PERIPHERALS
00000000         *UND*	00000000 .hidden core::num::<impl core::convert::From<u8> for usize>::from
00000000         *UND*	00000000 core::ptr::read_volatile
00000000         *UND*	00000000 core::ptr::read_volatile
00000000         *UND*	00000000 core::ptr::write_volatile
00000000         *UND*	00000000 core::ptr::write_volatile
00000000         *UND*	00000000 core::ptr::read
00000000         *UND*	00000000 core::cell::UnsafeCell<T>::get
00000000         *UND*	00000000 core::cell::UnsafeCell<T>::get
00000000         *UND*	00000000 core::panicking::panic_bounds_check
00000000         *UND*	00000000 core::panicking::panic
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadf256d537903084E	00000018 <cortex_m::peripheral::CBP as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h626597380cfe03f7E	00000018 <cortex_m::peripheral::DCB as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e8370a8c3e597a3E	00000018 <cortex_m::peripheral::DWT as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h26ba43de2133ea10E	00000018 <cortex_m::peripheral::FPB as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..FPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h716c63b8b7032d0eE	00000018 <cortex_m::peripheral::FPU as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h60a3345c99f54189E	00000018 <cortex_m::peripheral::ITM as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha2cc57a7561495faE	00000018 <cortex_m::peripheral::MPU as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h148f3c6fd338e68fE	00000018 <cortex_m::peripheral::SCB as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hcbf5e29844739915E	00000018 <cortex_m::peripheral::NVIC as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf8ae4cee0937d53bE	00000018 <cortex_m::peripheral::SYST as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7c4e0333b3911d8eE	00000018 <cortex_m::peripheral::TPIU as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4118c569d2e63737E	00000018 <cortex_m::peripheral::CPUID as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf23be00e44479b5bE	00000018 <cortex_m::peripheral::ITM as core::ops::deref::DerefMut>::deref_mut
00000000 g     F .text._ZN8cortex_m10peripheral11Peripherals5steal17h15413da39a30cd1dE	00000012 cortex_m::peripheral::Peripherals::steal
00000000 g     F .text._ZN8cortex_m10peripheral3CBP3new17ha10b7ee893af2439E	00000006 cortex_m::peripheral::CBP::new
00000000 g     F .text._ZN8cortex_m10peripheral3CBP3ptr17h377c02c8c1787ae4E	0000000a cortex_m::peripheral::CBP::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3DCB3ptr17h0d7be6912828c88cE	0000000a cortex_m::peripheral::DCB::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3DWT3ptr17h72afa2852124a6d8E	0000000a cortex_m::peripheral::DWT::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3FPB3ptr17h88953fe8f2813c56E	0000000a cortex_m::peripheral::FPB::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3FPU3ptr17h6a01315203ab96afE	0000000a cortex_m::peripheral::FPU::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3ITM3ptr17h37204737952c7ebbE	00000006 cortex_m::peripheral::ITM::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3MPU3ptr17h8f1745c4d0818912E	0000000a cortex_m::peripheral::MPU::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3SCB3ptr17hb8b5070cf4d81ed4E	0000000a cortex_m::peripheral::SCB::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h964f484a7c91d36bE	0000004c cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace
00000000         *UND*	00000000 .hidden cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h78a9ce3ba652f914E	0000004c cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace
00000000         *UND*	00000000 .hidden cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h711e140c77b89977E	00000024 cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::is_debugger_attached
00000000 g     F .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17h5bf8aa8522c2351eE	0000002a cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::get_cycle_count
00000000 g     F .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h28489aa9af705ba7E	00000048 cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter
00000000         *UND*	00000000 .hidden cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter::{{closure}}
00000000         *UND*	00000000 .hidden cortex_m::peripheral::scb::SystemHandler::index
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10enable_fpu17h7bc3cfa35706b21aE	00000022 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::enable_fpu
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h530e4c459282c162E	00000030 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_pendsv
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11disable_fpu17h979b3586a8bff52bE	00000022 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::disable_fpu
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17h276f9e187a6e2298E	00000148 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h467037947a92d2eeE	00000030 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_pendsv
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17h004d4e0f53d4262bE	00000088 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hbccfb29c6e350b86E	000000ac cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h9917a7a046af957eE	00000058 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset
00000000         *UND*	00000000 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17ha96302f40e5662a3E	0000004c cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep
00000000         *UND*	00000000 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h3cb9453b0717d66eE	0000004c cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep
00000000         *UND*	00000000 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15fpu_access_mode17h159097251a6034f3E	00000064 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17hef3383e14e12d68cE	0000004c cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit
00000000         *UND*	00000000 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17h40ad8ffa6427b4b9E	0000004c cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit
00000000         *UND*	00000000 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hf8d89c73ad2d3128E	0000002c cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::is_pendsv_pending
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$19set_fpu_access_mode17heb23c87f50c7ede3E	000000a2 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset17h7d82617eee6b8a96E	00000050 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset
00000000         *UND*	00000000 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4NVIC3ptr17h561c3df34499b03aE	0000000a cortex_m::peripheral::NVIC::ptr
00000000 g     F .text._ZN8cortex_m10peripheral4SYST3ptr17h8b3ba6561b454774E	0000000a cortex_m::peripheral::SYST::ptr
00000000 g     F .text._ZN8cortex_m10peripheral4TPIU3ptr17h1f41a2dbaf2bb820E	00000008 cortex_m::peripheral::TPIU::ptr
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17haddf5f03f310d763E	0000002a cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_reload
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h0c97eb3e19b1c4dfE	00000036 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_precise
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hc1c38f6142aa2de1E	0000003e cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_reload
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17h27654ff9541dadeaE	0000002c cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_current
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17hafd4d19bb8ba70b5E	00000034 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_wrapped
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17ha5c432bb1d3a179dE	0000003a cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::clear_current
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17h9b2a58dc2c7a606eE	00000048 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter
00000000         *UND*	00000000 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17h6287a8e7d2ee0df9E	00000048 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter
00000000         *UND*	00000000 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hc2cdeef5183e7e67E	00000048 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt
00000000         *UND*	00000000 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h59a0147fd3109cc4E	00000058 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17h18062f0d122dfba9E	000000a6 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source
00000000         *UND*	00000000 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source::{{closure}}
00000000         *UND*	00000000 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17h84acc8bd6d77ef18E	00000048 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt
00000000         *UND*	00000000 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17hb6bc27007a616428E	00000030 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_ticks_per_10ms
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha000f96468b80338E	00000034 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_counter_enabled
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17hd358d2b186b5a47dE	00000030 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_reference_clock
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h81acfbd637e6c08dE	00000034 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_interrupt_enabled
00000000 g     F .text._ZN8cortex_m10peripheral5CPUID3ptr17h122332c03e42390bE	0000000a cortex_m::peripheral::CPUID::ptr
00000000 g     F .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h82980b392467e02bE	00000078 cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::select_cache
00000000 g     F .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17heefa8f4b64d081dbE	000000c0 cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways
00000000         *UND*	00000000 .hidden cortex_m::asm::dsb
00000000         *UND*	00000000 .hidden cortex_m::asm::nop



Disassembly of section .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h82980b392467e02bE:

00000000 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::select_cache>:
_ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h82980b392467e02bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:85
    ///
    /// * `level`: the required cache level minus 1, e.g. 0 for L1, 1 for L2
    /// * `ind`: select instruction cache or data/unified cache
    ///
    /// `level` is masked to be between 0 and 7.
    pub fn select_cache(&mut self, level: u8, ind: CsselrCacheType) {
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9008      	str	r0, [sp, #32]
   c:	f88d 1026 	strb.w	r1, [sp, #38]	; 0x26
  10:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:92
        const CSSELR_IND_MASK: u32 = 1 << CSSELR_IND_POS;
        const CSSELR_LEVEL_POS: u32 = 1;
        const CSSELR_LEVEL_MASK: u32 = 0x7 << CSSELR_LEVEL_POS;

        unsafe {
            self.csselr.write(
  14:	9808      	ldr	r0, [sp, #32]
  16:	9307      	str	r3, [sp, #28]
  18:	f8cd c018 	str.w	ip, [sp, #24]
  1c:	f8cd e014 	str.w	lr, [sp, #20]
  20:	f7ff fffe 	bl	0 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::select_cache>
  24:	9004      	str	r0, [sp, #16]
  26:	e7ff      	b.n	28 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::select_cache+0x28>
  28:	9804      	ldr	r0, [sp, #16]
  2a:	f100 0184 	add.w	r1, r0, #132	; 0x84
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:93
                (((level as u32) << CSSELR_LEVEL_POS) & CSSELR_LEVEL_MASK)
  2e:	f89d 2026 	ldrb.w	r2, [sp, #38]	; 0x26
  32:	0052      	lsls	r2, r2, #1
  34:	9103      	str	r1, [sp, #12]
  36:	9202      	str	r2, [sp, #8]
  38:	e7ff      	b.n	3a <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::select_cache+0x3a>
  3a:	9802      	ldr	r0, [sp, #8]
  3c:	f000 010e 	and.w	r1, r0, #14
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:94
                    | (((ind as u32) << CSSELR_IND_POS) & CSSELR_IND_MASK),
  40:	f89d 2027 	ldrb.w	r2, [sp, #39]	; 0x27
  44:	9101      	str	r1, [sp, #4]
  46:	9200      	str	r2, [sp, #0]
  48:	e7ff      	b.n	4a <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::select_cache+0x4a>
  4a:	9800      	ldr	r0, [sp, #0]
  4c:	f000 0101 	and.w	r1, r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:93
                (((level as u32) << CSSELR_LEVEL_POS) & CSSELR_LEVEL_MASK)
  50:	9a01      	ldr	r2, [sp, #4]
  52:	4311      	orrs	r1, r2
  54:	9b03      	ldr	r3, [sp, #12]
  56:	930a      	str	r3, [sp, #40]	; 0x28
  58:	910b      	str	r1, [sp, #44]	; 0x2c
_ZN17volatile_register11RW$LT$T$GT$5write17hcf6e0d37e755b82aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:83
    /// Writes a `value` into the register
    ///
    /// NOTE: `unsafe` because writes to a register are side effectful
    #[inline(always)]
    pub unsafe fn write(&self, value: T) {
        self.register.set(value)
  5a:	990a      	ldr	r1, [sp, #40]	; 0x28
  5c:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
  60:	910c      	str	r1, [sp, #48]	; 0x30
  62:	f8cd c034 	str.w	ip, [sp, #52]	; 0x34
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
    /// Sets the contained value
    #[inline(always)]
    pub fn set(&self, value: T)
        where T: Copy
    {
        unsafe { ptr::write_volatile(self.value.get(), value) }
  66:	980c      	ldr	r0, [sp, #48]	; 0x30
  68:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  6c:	990d      	ldr	r1, [sp, #52]	; 0x34
  6e:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h82980b392467e02bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:92
            self.csselr.write(
  72:	e7ff      	b.n	74 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::select_cache+0x74>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:97
            )
        }
    }
  74:	b00e      	add	sp, #56	; 0x38
  76:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17heefa8f4b64d081dbE:

00000000 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways>:
_ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17heefa8f4b64d081dbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:100

    /// Returns the number of sets and ways in the selected cache
    pub fn cache_num_sets_ways(&mut self, level: u8, ind: CsselrCacheType) -> (u16, u16) {
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	900a      	str	r0, [sp, #40]	; 0x28
   c:	f88d 102e 	strb.w	r1, [sp, #46]	; 0x2e
  10:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:106
        const CCSIDR_NUMSETS_POS: u32 = 13;
        const CCSIDR_NUMSETS_MASK: u32 = 0x7FFF << CCSIDR_NUMSETS_POS;
        const CCSIDR_ASSOCIATIVITY_POS: u32 = 3;
        const CCSIDR_ASSOCIATIVITY_MASK: u32 = 0x3FF << CCSIDR_ASSOCIATIVITY_POS;

        self.select_cache(level, ind);
  14:	980a      	ldr	r0, [sp, #40]	; 0x28
  16:	f89d 202f 	ldrb.w	r2, [sp, #47]	; 0x2f
  1a:	f89d 102e 	ldrb.w	r1, [sp, #46]	; 0x2e
  1e:	9309      	str	r3, [sp, #36]	; 0x24
  20:	f8cd c020 	str.w	ip, [sp, #32]
  24:	f8cd e01c 	str.w	lr, [sp, #28]
  28:	f7ff fffe 	bl	0 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways>
  2c:	e7ff      	b.n	2 <cortex_m::asm::dsb+0x2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:107
        crate::asm::dsb();
  2e:	f7ff fffe 	bl	0 <cortex_m::asm::dsb>
  32:	e7ff      	b.n	34 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways+0x34>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:108
        let ccsidr = self.ccsidr.read();
  34:	980a      	ldr	r0, [sp, #40]	; 0x28
  36:	f7ff fffe 	bl	0 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways>
  3a:	9006      	str	r0, [sp, #24]
  3c:	e7ff      	b.n	3e <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways+0x3e>
  3e:	9806      	ldr	r0, [sp, #24]
  40:	f100 0180 	add.w	r1, r0, #128	; 0x80
  44:	910e      	str	r1, [sp, #56]	; 0x38
_ZN17volatile_register11RO$LT$T$GT$4read17hcee17a8c9aafc1dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:48
        self.register.get()
  46:	990e      	ldr	r1, [sp, #56]	; 0x38
  48:	910f      	str	r1, [sp, #60]	; 0x3c
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  4a:	980f      	ldr	r0, [sp, #60]	; 0x3c
  4c:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  50:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17heefa8f4b64d081dbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:108
  54:	900d      	str	r0, [sp, #52]	; 0x34
  56:	e7ff      	b.n	58 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways+0x58>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:110
        (
            (1 + ((ccsidr & CCSIDR_NUMSETS_MASK) >> CCSIDR_NUMSETS_POS)) as u16,
  58:	980d      	ldr	r0, [sp, #52]	; 0x34
  5a:	f3c0 304e 	ubfx	r0, r0, #13, #15
  5e:	9005      	str	r0, [sp, #20]
  60:	e7ff      	b.n	62 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways+0x62>
  62:	9805      	ldr	r0, [sp, #20]
  64:	1c41      	adds	r1, r0, #1
  66:	460a      	mov	r2, r1
  68:	4281      	cmp	r1, r0
  6a:	9204      	str	r2, [sp, #16]
  6c:	d31a      	bcc.n	a4 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways+0xa4>
  6e:	e7ff      	b.n	70 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways+0x70>
  70:	9804      	ldr	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:111
            (1 + ((ccsidr & CCSIDR_ASSOCIATIVITY_MASK) >> CCSIDR_ASSOCIATIVITY_POS)) as u16,
  72:	990d      	ldr	r1, [sp, #52]	; 0x34
  74:	f3c1 01c9 	ubfx	r1, r1, #3, #10
  78:	9003      	str	r0, [sp, #12]
  7a:	9102      	str	r1, [sp, #8]
  7c:	e7ff      	b.n	7e <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways+0x7e>
  7e:	9802      	ldr	r0, [sp, #8]
  80:	1c41      	adds	r1, r0, #1
  82:	460a      	mov	r2, r1
  84:	4281      	cmp	r1, r0
  86:	9201      	str	r2, [sp, #4]
  88:	d313      	bcc.n	b2 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways+0xb2>
  8a:	e7ff      	b.n	8c <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways+0x8c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:109
        (
  8c:	9803      	ldr	r0, [sp, #12]
  8e:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
  92:	9901      	ldr	r1, [sp, #4]
  94:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:113
        )
    }
  98:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
  9c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
  a0:	b010      	add	sp, #64	; 0x40
  a2:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:110
            (1 + ((ccsidr & CCSIDR_NUMSETS_MASK) >> CCSIDR_NUMSETS_POS)) as u16,
  a4:	f240 0000 	movw	r0, #0
  a8:	f2c0 0000 	movt	r0, #0
  ac:	f7ff fffe 	bl	0 <core::panicking::panic>
  b0:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:111
            (1 + ((ccsidr & CCSIDR_ASSOCIATIVITY_MASK) >> CCSIDR_ASSOCIATIVITY_POS)) as u16,
  b2:	f240 0000 	movw	r0, #0
  b6:	f2c0 0000 	movt	r0, #0
  ba:	f7ff fffe 	bl	0 <core::panicking::panic>
  be:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h964f484a7c91d36bE:

00000000 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace>:
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h964f484a7c91d36bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:28
impl DCB {
    /// Enables TRACE. This is for example required by the
    /// `peripheral::DWT` cycle counter to work properly.
    /// As by STM documentation, this flag is not reset on
    /// soft-reset, only on power reset.
    pub fn enable_trace(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:31
        // set bit 24 / TRCENA
        unsafe {
            self.demcr.modify(|w| w | DCB_DEMCR_TRCENA);
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	f100 010c 	add.w	r1, r0, #12
  1a:	9106      	str	r1, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17hb7351be85ee02db1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
        self.register.set(f(self.register.get()));
  1c:	9906      	ldr	r1, [sp, #24]
  1e:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  20:	9809      	ldr	r0, [sp, #36]	; 0x24
  22:	9101      	str	r1, [sp, #4]
  24:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  28:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17hb7351be85ee02db1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  2c:	9008      	str	r0, [sp, #32]
  2e:	9808      	ldr	r0, [sp, #32]
  30:	f7ff fffe 	bl	0 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace::{{closure}}>
  34:	9901      	ldr	r1, [sp, #4]
  36:	910a      	str	r1, [sp, #40]	; 0x28
  38:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  3a:	980a      	ldr	r0, [sp, #40]	; 0x28
  3c:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  42:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h964f484a7c91d36bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:31
  46:	e7ff      	b.n	48 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace+0x48>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:33
        }
    }
  48:	b00c      	add	sp, #48	; 0x30
  4a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h78a9ce3ba652f914E:

00000000 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace>:
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h78a9ce3ba652f914E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:36

    /// Disables TRACE. See `DCB::enable_trace()` for more details
    pub fn disable_trace(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:39
        // unset bit 24 / TRCENA
        unsafe {
            self.demcr.modify(|w| w & !DCB_DEMCR_TRCENA);
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	f100 010c 	add.w	r1, r0, #12
  1a:	9106      	str	r1, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h81f5730b9918679aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  1c:	9906      	ldr	r1, [sp, #24]
  1e:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  20:	9809      	ldr	r0, [sp, #36]	; 0x24
  22:	9101      	str	r1, [sp, #4]
  24:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  28:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h81f5730b9918679aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  2c:	9008      	str	r0, [sp, #32]
  2e:	9808      	ldr	r0, [sp, #32]
  30:	f7ff fffe 	bl	0 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace::{{closure}}>
  34:	9901      	ldr	r1, [sp, #4]
  36:	910a      	str	r1, [sp, #40]	; 0x28
  38:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  3a:	980a      	ldr	r0, [sp, #40]	; 0x28
  3c:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  42:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h78a9ce3ba652f914E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:39
  46:	e7ff      	b.n	48 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace+0x48>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:41
        }
    }
  48:	b00c      	add	sp, #48	; 0x30
  4a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h711e140c77b89977E:

00000000 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::is_debugger_attached>:
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h711e140c77b89977E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:50
    /// Note: This function is [reported not to
    /// work](http://web.archive.org/web/20180821191012/https://community.nxp.com/thread/424925#comment-782843)
    /// on Cortex-M0 devices. Per the ARM v6-M Architecture Reference Manual, "Access to the DHCSR
    /// from software running on the processor is IMPLEMENTATION DEFINED". Indeed, from the
    /// [Cortex-M0+ r0p1 Technical Reference Manual](http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0484c/BABJHEIG.html), "Note Software cannot access the debug registers."
    pub fn is_debugger_attached() -> bool {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:53
        unsafe {
            // do an 8-bit read of the 32-bit DHCSR register, and get the LSB
            let value = ptr::read_volatile(Self::ptr() as *const u8);
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::is_debugger_attached>
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::is_debugger_attached+0xc>
   c:	9800      	ldr	r0, [sp, #0]
   e:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
  12:	f88d 0007 	strb.w	r0, [sp, #7]
  16:	e7ff      	b.n	18 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::is_debugger_attached+0x18>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:56
            value & 0x1 == 1
        }
    }
  18:	f89d 0007 	ldrb.w	r0, [sp, #7]
  1c:	f000 0001 	and.w	r0, r0, #1
  20:	b002      	add	sp, #8
  22:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h28489aa9af705ba7E:

00000000 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter>:
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h28489aa9af705ba7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dwt.rs:68
}

impl DWT {
    /// Enables the cycle counter
    #[cfg(not(armv6m))]
    pub fn enable_cycle_counter(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dwt.rs:69
        unsafe { self.ctrl.modify(|r| r | 1) }
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	9006      	str	r0, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17hb51be959db643a11E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  18:	9906      	ldr	r1, [sp, #24]
  1a:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9101      	str	r1, [sp, #4]
  20:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  24:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17hb51be959db643a11E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  28:	9008      	str	r0, [sp, #32]
  2a:	9808      	ldr	r0, [sp, #32]
  2c:	f7ff fffe 	bl	0 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter::{{closure}}>
  30:	9901      	ldr	r1, [sp, #4]
  32:	910a      	str	r1, [sp, #40]	; 0x28
  34:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  36:	980a      	ldr	r0, [sp, #40]	; 0x28
  38:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  3e:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h28489aa9af705ba7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dwt.rs:69
  42:	e7ff      	b.n	44 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter+0x44>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dwt.rs:70
    }
  44:	b00c      	add	sp, #48	; 0x30
  46:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17h5bf8aa8522c2351eE:

00000000 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::get_cycle_count>:
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17h5bf8aa8522c2351eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dwt.rs:74

    /// Returns the current clock cycle count
    #[cfg(not(armv6m))]
    pub fn get_cycle_count() -> u32 {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dwt.rs:76
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).cyccnt.read() }
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::get_cycle_count>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::get_cycle_count+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	1d01      	adds	r1, r0, #4
  10:	9102      	str	r1, [sp, #8]
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
        self.register.get()
  12:	9902      	ldr	r1, [sp, #8]
  14:	9103      	str	r1, [sp, #12]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  16:	9803      	ldr	r0, [sp, #12]
  18:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  1c:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17h5bf8aa8522c2351eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dwt.rs:76
  20:	9000      	str	r0, [sp, #0]
  22:	e7ff      	b.n	24 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::get_cycle_count+0x24>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dwt.rs:77
    }
  24:	9800      	ldr	r0, [sp, #0]
  26:	b004      	add	sp, #16
  28:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11disable_fpu17h979b3586a8bff52bE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::disable_fpu>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11disable_fpu17h979b3586a8bff52bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:123
use self::fpu_consts::*;

#[cfg(has_fpu)]
impl SCB {
    /// Shorthand for `set_fpu_access_mode(FpuAccessMode::Disabled)`
    pub fn disable_fpu(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9002      	str	r0, [sp, #8]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:124
        self.set_fpu_access_mode(FpuAccessMode::Disabled)
   8:	9802      	ldr	r0, [sp, #8]
   a:	2200      	movs	r2, #0
   c:	f88d 200f 	strb.w	r2, [sp, #15]
  10:	f89d 200f 	ldrb.w	r2, [sp, #15]
  14:	9101      	str	r1, [sp, #4]
  16:	4611      	mov	r1, r2
  18:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::disable_fpu>
  1c:	e7ff      	b.n	1e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::disable_fpu+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:125
    }
  1e:	b004      	add	sp, #16
  20:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10enable_fpu17h7bc3cfa35706b21aE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::enable_fpu>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10enable_fpu17h7bc3cfa35706b21aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:128

    /// Shorthand for `set_fpu_access_mode(FpuAccessMode::Enabled)`
    pub fn enable_fpu(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9002      	str	r0, [sp, #8]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:129
        self.set_fpu_access_mode(FpuAccessMode::Enabled)
   8:	9802      	ldr	r0, [sp, #8]
   a:	2201      	movs	r2, #1
   c:	f88d 200f 	strb.w	r2, [sp, #15]
  10:	f89d 200f 	ldrb.w	r2, [sp, #15]
  14:	9101      	str	r1, [sp, #4]
  16:	4611      	mov	r1, r2
  18:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::enable_fpu>
  1c:	e7ff      	b.n	1e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::enable_fpu+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:130
    }
  1e:	b004      	add	sp, #16
  20:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15fpu_access_mode17h159097251a6034f3E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15fpu_access_mode17h159097251a6034f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:133

    /// Gets FPU access mode
    pub fn fpu_access_mode() -> FpuAccessMode {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:135
        // NOTE(unsafe) atomic read operation with no side effects
        let cpacr = unsafe { (*Self::ptr()).cpacr.read() };
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	f100 0184 	add.w	r1, r0, #132	; 0x84
  12:	9104      	str	r1, [sp, #16]
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
  14:	9904      	ldr	r1, [sp, #16]
  16:	9105      	str	r1, [sp, #20]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  18:	9805      	ldr	r0, [sp, #20]
  1a:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  1e:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15fpu_access_mode17h159097251a6034f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:135
  22:	9003      	str	r0, [sp, #12]
  24:	e7ff      	b.n	26 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0x26>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:137

        if cpacr & SCB_CPACR_FPU_MASK == SCB_CPACR_FPU_ENABLE | SCB_CPACR_FPU_USER {
  26:	9803      	ldr	r0, [sp, #12]
  28:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
  2c:	f5b0 0f70 	cmp.w	r0, #15728640	; 0xf00000
  30:	d104      	bne.n	3c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0x3c>
  32:	e7ff      	b.n	34 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0x34>
  34:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:138
            FpuAccessMode::Enabled
  36:	f88d 000b 	strb.w	r0, [sp, #11]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:137
        if cpacr & SCB_CPACR_FPU_MASK == SCB_CPACR_FPU_ENABLE | SCB_CPACR_FPU_USER {
  3a:	e00f      	b.n	5c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0x5c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:139
        } else if cpacr & SCB_CPACR_FPU_MASK == SCB_CPACR_FPU_ENABLE {
  3c:	9803      	ldr	r0, [sp, #12]
  3e:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
  42:	f5b0 0fa0 	cmp.w	r0, #5242880	; 0x500000
  46:	d104      	bne.n	52 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0x52>
  48:	e7ff      	b.n	4a <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0x4a>
  4a:	2002      	movs	r0, #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:140
            FpuAccessMode::Privileged
  4c:	f88d 000b 	strb.w	r0, [sp, #11]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:139
        } else if cpacr & SCB_CPACR_FPU_MASK == SCB_CPACR_FPU_ENABLE {
  50:	e003      	b.n	5a <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0x5a>
  52:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:142
        } else {
            FpuAccessMode::Disabled
  54:	f88d 000b 	strb.w	r0, [sp, #11]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:139
        } else if cpacr & SCB_CPACR_FPU_MASK == SCB_CPACR_FPU_ENABLE {
  58:	e7ff      	b.n	5a <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0x5a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:137
        if cpacr & SCB_CPACR_FPU_MASK == SCB_CPACR_FPU_ENABLE | SCB_CPACR_FPU_USER {
  5a:	e7ff      	b.n	5c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::fpu_access_mode+0x5c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:144
        }
    }
  5c:	f89d 000b 	ldrb.w	r0, [sp, #11]
  60:	b006      	add	sp, #24
  62:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$19set_fpu_access_mode17heb23c87f50c7ede3E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$19set_fpu_access_mode17heb23c87f50c7ede3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:152
    ///
    /// *IMPORTANT* Any function that runs fully or partly with the FPU disabled must *not* take any
    /// floating-point arguments or have any floating-point local variables. Because the compiler
    /// might inline such a function into a caller that does have floating-point arguments or
    /// variables, any such function must be also marked #[inline(never)].
    pub fn set_fpu_access_mode(&mut self, mode: FpuAccessMode) {
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9007      	str	r0, [sp, #28]
   a:	f88d 1023 	strb.w	r1, [sp, #35]	; 0x23
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:153
        let mut cpacr = self.cpacr.read() & !SCB_CPACR_FPU_MASK;
   e:	9807      	ldr	r0, [sp, #28]
  10:	9206      	str	r2, [sp, #24]
  12:	9305      	str	r3, [sp, #20]
  14:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode>
  18:	9004      	str	r0, [sp, #16]
  1a:	e7ff      	b.n	1c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x1c>
  1c:	9804      	ldr	r0, [sp, #16]
  1e:	f100 0184 	add.w	r1, r0, #132	; 0x84
  22:	910a      	str	r1, [sp, #40]	; 0x28
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
  24:	990a      	ldr	r1, [sp, #40]	; 0x28
  26:	910b      	str	r1, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  28:	980b      	ldr	r0, [sp, #44]	; 0x2c
  2a:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  2e:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$19set_fpu_access_mode17heb23c87f50c7ede3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:153
  32:	9003      	str	r0, [sp, #12]
  34:	e7ff      	b.n	36 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x36>
  36:	9803      	ldr	r0, [sp, #12]
  38:	f420 0170 	bic.w	r1, r0, #15728640	; 0xf00000
  3c:	9109      	str	r1, [sp, #36]	; 0x24
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:155
        match mode {
            FpuAccessMode::Disabled => (),
  3e:	f89d 1023 	ldrb.w	r1, [sp, #35]	; 0x23
  42:	460a      	mov	r2, r1
  44:	2900      	cmp	r1, #0
  46:	9202      	str	r2, [sp, #8]
  48:	d013      	beq.n	72 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x72>
  4a:	e7ff      	b.n	4c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x4c>
  4c:	9802      	ldr	r0, [sp, #8]
  4e:	2801      	cmp	r0, #1
  50:	d00a      	beq.n	68 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x68>
  52:	e7ff      	b.n	54 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x54>
  54:	9802      	ldr	r0, [sp, #8]
  56:	2802      	cmp	r0, #2
  58:	d001      	beq.n	5e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x5e>
  5a:	e7ff      	b.n	5c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x5c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:160
            FpuAccessMode::Privileged => cpacr |= SCB_CPACR_FPU_ENABLE,
            FpuAccessMode::Enabled => cpacr |= SCB_CPACR_FPU_ENABLE | SCB_CPACR_FPU_USER,
        }
        unsafe { self.cpacr.write(cpacr) }
    }
  5c:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:156
            FpuAccessMode::Privileged => cpacr |= SCB_CPACR_FPU_ENABLE,
  5e:	9809      	ldr	r0, [sp, #36]	; 0x24
  60:	f440 00a0 	orr.w	r0, r0, #5242880	; 0x500000
  64:	9009      	str	r0, [sp, #36]	; 0x24
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:154
        match mode {
  66:	e004      	b.n	72 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x72>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:157
            FpuAccessMode::Enabled => cpacr |= SCB_CPACR_FPU_ENABLE | SCB_CPACR_FPU_USER,
  68:	9809      	ldr	r0, [sp, #36]	; 0x24
  6a:	f440 0070 	orr.w	r0, r0, #15728640	; 0xf00000
  6e:	9009      	str	r0, [sp, #36]	; 0x24
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:154
        match mode {
  70:	e7ff      	b.n	72 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x72>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:159
        unsafe { self.cpacr.write(cpacr) }
  72:	9807      	ldr	r0, [sp, #28]
  74:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode>
  78:	9001      	str	r0, [sp, #4]
  7a:	e7ff      	b.n	7c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x7c>
  7c:	9801      	ldr	r0, [sp, #4]
  7e:	f100 0184 	add.w	r1, r0, #132	; 0x84
  82:	9a09      	ldr	r2, [sp, #36]	; 0x24
  84:	910c      	str	r1, [sp, #48]	; 0x30
  86:	920d      	str	r2, [sp, #52]	; 0x34
_ZN17volatile_register11RW$LT$T$GT$5write17hcf6e0d37e755b82aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:83
        self.register.set(value)
  88:	990c      	ldr	r1, [sp, #48]	; 0x30
  8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  8c:	910e      	str	r1, [sp, #56]	; 0x38
  8e:	920f      	str	r2, [sp, #60]	; 0x3c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  90:	980e      	ldr	r0, [sp, #56]	; 0x38
  92:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  96:	990f      	ldr	r1, [sp, #60]	; 0x3c
  98:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$19set_fpu_access_mode17heb23c87f50c7ede3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:159
  9c:	e7ff      	b.n	9e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_fpu_access_mode+0x9e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:160
    }
  9e:	b010      	add	sp, #64	; 0x40
  a0:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17h276f9e187a6e2298E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17h276f9e187a6e2298E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:165
}

impl SCB {
    /// Returns the active exception number
    pub fn vect_active() -> VectActive {
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:166
        let icsr = unsafe { ptr::read(&(*SCB::ptr()).icsr as *const _ as *const u32) };
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active>
   8:	9004      	str	r0, [sp, #16]
   a:	e7ff      	b.n	c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0xc>
   c:	9804      	ldr	r0, [sp, #16]
   e:	f7ff fffe 	bl	0 <core::ptr::read>
  12:	9006      	str	r0, [sp, #24]
  14:	e7ff      	b.n	16 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x16>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168

        match icsr as u8 {
  16:	9806      	ldr	r0, [sp, #24]
  18:	b2c1      	uxtb	r1, r0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:169
            0 => VectActive::ThreadMode,
  1a:	460a      	mov	r2, r1
  1c:	290f      	cmp	r1, #15
  1e:	9003      	str	r0, [sp, #12]
  20:	9202      	str	r2, [sp, #8]
  22:	f200 8071 	bhi.w	108 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x108>
  26:	9902      	ldr	r1, [sp, #8]
  28:	e8df f001 	tbb	[pc, r1]
  2c:	170c6e08 	.word	0x170c6e08
  30:	6e372c21 	.word	0x6e372c21
  34:	426e6e6e 	.word	0x426e6e6e
  38:	63586e4d 	.word	0x63586e4d
  3c:	2000      	movs	r0, #0
  3e:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
  42:	e074      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
  44:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:170
            2 => VectActive::Exception(Exception::NonMaskableInt),
  46:	f88d 001e 	strb.w	r0, [sp, #30]
  4a:	f89d 001e 	ldrb.w	r0, [sp, #30]
  4e:	f88d 0015 	strb.w	r0, [sp, #21]
  52:	2001      	movs	r0, #1
  54:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
  58:	e069      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
  5a:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:171
            3 => VectActive::Exception(Exception::HardFault),
  5c:	f88d 001f 	strb.w	r0, [sp, #31]
  60:	f89d 101f 	ldrb.w	r1, [sp, #31]
  64:	f88d 1015 	strb.w	r1, [sp, #21]
  68:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
  6c:	e05f      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
  6e:	2002      	movs	r0, #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:173
            #[cfg(not(armv6m))]
            4 => VectActive::Exception(Exception::MemoryManagement),
  70:	f88d 0020 	strb.w	r0, [sp, #32]
  74:	f89d 0020 	ldrb.w	r0, [sp, #32]
  78:	f88d 0015 	strb.w	r0, [sp, #21]
  7c:	2001      	movs	r0, #1
  7e:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
  82:	e054      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
  84:	2003      	movs	r0, #3
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:175
            #[cfg(not(armv6m))]
            5 => VectActive::Exception(Exception::BusFault),
  86:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
  8a:	f89d 0021 	ldrb.w	r0, [sp, #33]	; 0x21
  8e:	f88d 0015 	strb.w	r0, [sp, #21]
  92:	2001      	movs	r0, #1
  94:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
  98:	e049      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
  9a:	2004      	movs	r0, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:177
            #[cfg(not(armv6m))]
            6 => VectActive::Exception(Exception::UsageFault),
  9c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
  a0:	f89d 0022 	ldrb.w	r0, [sp, #34]	; 0x22
  a4:	f88d 0015 	strb.w	r0, [sp, #21]
  a8:	2001      	movs	r0, #1
  aa:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
  ae:	e03e      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
  b0:	2005      	movs	r0, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:180
            #[cfg(any(armv8m, target_arch = "x86_64"))]
            7 => VectActive::Exception(Exception::SecureFault),
            11 => VectActive::Exception(Exception::SVCall),
  b2:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
  b6:	f89d 0023 	ldrb.w	r0, [sp, #35]	; 0x23
  ba:	f88d 0015 	strb.w	r0, [sp, #21]
  be:	2001      	movs	r0, #1
  c0:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
  c4:	e033      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
  c6:	2006      	movs	r0, #6
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:182
            #[cfg(not(armv6m))]
            12 => VectActive::Exception(Exception::DebugMonitor),
  c8:	f88d 0024 	strb.w	r0, [sp, #36]	; 0x24
  cc:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
  d0:	f88d 0015 	strb.w	r0, [sp, #21]
  d4:	2001      	movs	r0, #1
  d6:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
  da:	e028      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
  dc:	2007      	movs	r0, #7
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:183
            14 => VectActive::Exception(Exception::PendSV),
  de:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
  e2:	f89d 0025 	ldrb.w	r0, [sp, #37]	; 0x25
  e6:	f88d 0015 	strb.w	r0, [sp, #21]
  ea:	2001      	movs	r0, #1
  ec:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
  f0:	e01d      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
  f2:	2008      	movs	r0, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:184
            15 => VectActive::Exception(Exception::SysTick),
  f4:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  f8:	f89d 0026 	ldrb.w	r0, [sp, #38]	; 0x26
  fc:	f88d 0015 	strb.w	r0, [sp, #21]
 100:	2001      	movs	r0, #1
 102:	f88d 0014 	strb.w	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
 106:	e012      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:185
            irqn => VectActive::Interrupt { irqn: irqn - 16 },
 108:	9803      	ldr	r0, [sp, #12]
 10a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
 10e:	f89d 1027 	ldrb.w	r1, [sp, #39]	; 0x27
 112:	3910      	subs	r1, #16
 114:	b2ca      	uxtb	r2, r1
 116:	460b      	mov	r3, r1
 118:	428a      	cmp	r2, r1
 11a:	9301      	str	r3, [sp, #4]
 11c:	d10d      	bne.n	13a <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x13a>
 11e:	e7ff      	b.n	120 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x120>
 120:	9801      	ldr	r0, [sp, #4]
 122:	f88d 0015 	strb.w	r0, [sp, #21]
 126:	2102      	movs	r1, #2
 128:	f88d 1014 	strb.w	r1, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:168
        match icsr as u8 {
 12c:	e7ff      	b.n	12e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x12e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:187
        }
    }
 12e:	f89d 0014 	ldrb.w	r0, [sp, #20]
 132:	f89d 1015 	ldrb.w	r1, [sp, #21]
 136:	b00a      	add	sp, #40	; 0x28
 138:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:185
            irqn => VectActive::Interrupt { irqn: irqn - 16 },
 13a:	f240 0000 	movw	r0, #0
 13e:	f2c0 0000 	movt	r0, #0
 142:	f7ff fffe 	bl	0 <core::panicking::panic>
 146:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17ha96302f40e5662a3E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17ha96302f40e5662a3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:585

const SCB_SCR_SLEEPDEEP: u32 = 0x1 << 2;

impl SCB {
    /// Set the SLEEPDEEP bit in the SCR register
    pub fn set_sleepdeep(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:587
        unsafe {
            self.scr.modify(|scr| scr | SCB_SCR_SLEEPDEEP);
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	f100 010c 	add.w	r1, r0, #12
  1a:	9106      	str	r1, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h707d0266402931eaE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
        self.register.set(f(self.register.get()));
  1c:	9906      	ldr	r1, [sp, #24]
  1e:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  20:	9809      	ldr	r0, [sp, #36]	; 0x24
  22:	9101      	str	r1, [sp, #4]
  24:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  28:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h707d0266402931eaE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  2c:	9008      	str	r0, [sp, #32]
  2e:	9808      	ldr	r0, [sp, #32]
  30:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep::{{closure}}>
  34:	9901      	ldr	r1, [sp, #4]
  36:	910a      	str	r1, [sp, #40]	; 0x28
  38:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  3a:	980a      	ldr	r0, [sp, #40]	; 0x28
  3c:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  42:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17ha96302f40e5662a3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:587
  46:	e7ff      	b.n	48 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep+0x48>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:589
        }
    }
  48:	b00c      	add	sp, #48	; 0x30
  4a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h3cb9453b0717d66eE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h3cb9453b0717d66eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:592

    /// Clear the SLEEPDEEP bit in the SCR register
    pub fn clear_sleepdeep(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:594
        unsafe {
            self.scr.modify(|scr| scr & !SCB_SCR_SLEEPDEEP);
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	f100 010c 	add.w	r1, r0, #12
  1a:	9106      	str	r1, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h044b4b803d5d442dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  1c:	9906      	ldr	r1, [sp, #24]
  1e:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  20:	9809      	ldr	r0, [sp, #36]	; 0x24
  22:	9101      	str	r1, [sp, #4]
  24:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  28:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h044b4b803d5d442dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  2c:	9008      	str	r0, [sp, #32]
  2e:	9808      	ldr	r0, [sp, #32]
  30:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep::{{closure}}>
  34:	9901      	ldr	r1, [sp, #4]
  36:	910a      	str	r1, [sp, #40]	; 0x28
  38:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  3a:	980a      	ldr	r0, [sp, #40]	; 0x28
  3c:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  42:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h3cb9453b0717d66eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:594
  46:	e7ff      	b.n	48 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep+0x48>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:596
        }
    }
  48:	b00c      	add	sp, #48	; 0x30
  4a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17hef3383e14e12d68cE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17hef3383e14e12d68cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:603

const SCB_SCR_SLEEPONEXIT: u32 = 0x1 << 1;

impl SCB {
    /// Set the SLEEPONEXIT bit in the SCR register
    pub fn set_sleeponexit(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:605
        unsafe {
            self.scr.modify(|scr| scr | SCB_SCR_SLEEPONEXIT);
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	f100 010c 	add.w	r1, r0, #12
  1a:	9106      	str	r1, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h79e3b1aabe4fce20E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  1c:	9906      	ldr	r1, [sp, #24]
  1e:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  20:	9809      	ldr	r0, [sp, #36]	; 0x24
  22:	9101      	str	r1, [sp, #4]
  24:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  28:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h79e3b1aabe4fce20E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  2c:	9008      	str	r0, [sp, #32]
  2e:	9808      	ldr	r0, [sp, #32]
  30:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit::{{closure}}>
  34:	9901      	ldr	r1, [sp, #4]
  36:	910a      	str	r1, [sp, #40]	; 0x28
  38:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  3a:	980a      	ldr	r0, [sp, #40]	; 0x28
  3c:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  42:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17hef3383e14e12d68cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:605
  46:	e7ff      	b.n	48 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit+0x48>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:607
        }
    }
  48:	b00c      	add	sp, #48	; 0x30
  4a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17h40ad8ffa6427b4b9E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17h40ad8ffa6427b4b9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:610

    /// Clear the SLEEPONEXIT bit in the SCR register
    pub fn clear_sleeponexit(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:612
        unsafe {
            self.scr.modify(|scr| scr & !SCB_SCR_SLEEPONEXIT);
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	f100 010c 	add.w	r1, r0, #12
  1a:	9106      	str	r1, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h9e38096a12a2edc2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  1c:	9906      	ldr	r1, [sp, #24]
  1e:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  20:	9809      	ldr	r0, [sp, #36]	; 0x24
  22:	9101      	str	r1, [sp, #4]
  24:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  28:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h9e38096a12a2edc2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  2c:	9008      	str	r0, [sp, #32]
  2e:	9808      	ldr	r0, [sp, #32]
  30:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit::{{closure}}>
  34:	9901      	ldr	r1, [sp, #4]
  36:	910a      	str	r1, [sp, #40]	; 0x28
  38:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  3a:	980a      	ldr	r0, [sp, #40]	; 0x28
  3c:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  42:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17h40ad8ffa6427b4b9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:612
  46:	e7ff      	b.n	48 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit+0x48>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:614
        }
    }
  48:	b00c      	add	sp, #48	; 0x30
  4a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h9917a7a046af957eE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h9917a7a046af957eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:624
const SCB_AIRCR_SYSRESETREQ: u32 = 1 << 2;

impl SCB {
    /// Initiate a system reset request to reset the MCU
    #[deprecated(since = "0.6.1", note = "Use `SCB::sys_reset`")]
    pub fn system_reset(&mut self) -> ! {
   0:	b08c      	sub	sp, #48	; 0x30
   2:	4601      	mov	r1, r0
   4:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:625
        crate::asm::dsb();
   6:	9103      	str	r1, [sp, #12]
   8:	f7ff fffe 	bl	0 <cortex_m::asm::dsb>
   c:	e7ff      	b.n	e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset+0xe>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:627
        unsafe {
            self.aircr.modify(
   e:	9804      	ldr	r0, [sp, #16]
  10:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset>
  14:	9002      	str	r0, [sp, #8]
  16:	e7ff      	b.n	18 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset+0x18>
  18:	9802      	ldr	r0, [sp, #8]
  1a:	f100 0108 	add.w	r1, r0, #8
  1e:	9106      	str	r1, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h1a16ff671213ddb5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  20:	9906      	ldr	r1, [sp, #24]
  22:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  24:	9809      	ldr	r0, [sp, #36]	; 0x24
  26:	9101      	str	r1, [sp, #4]
  28:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  2c:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h1a16ff671213ddb5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  30:	9008      	str	r0, [sp, #32]
  32:	9808      	ldr	r0, [sp, #32]
  34:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset::{{closure}}>
  38:	9901      	ldr	r1, [sp, #4]
  3a:	910a      	str	r1, [sp, #40]	; 0x28
  3c:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  3e:	980a      	ldr	r0, [sp, #40]	; 0x28
  40:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  44:	990b      	ldr	r1, [sp, #44]	; 0x2c
  46:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h9917a7a046af957eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:627
  4a:	e7ff      	b.n	2 <cortex_m::asm::dsb+0x2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:635
            r & SCB_AIRCR_PRIGROUP_MASK | // keep priority group unchanged
            SCB_AIRCR_SYSRESETREQ
                }, // set the bit
            )
        };
        crate::asm::dsb();
  4c:	f7ff fffe 	bl	0 <cortex_m::asm::dsb>
  50:	e7ff      	b.n	2 <cortex_m::asm::nop+0x2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:638
        loop {
            // wait for the reset
            crate::asm::nop(); // avoid rust-lang/rust#28728
  52:	f7ff fffe 	bl	0 <cortex_m::asm::nop>
  56:	e7fc      	b.n	52 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset+0x52>

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset17h7d82617eee6b8a96E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset17h7d82617eee6b8a96E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:643
        }
    }

    /// Initiate a system reset request to reset the MCU
    pub fn sys_reset() -> ! {
   0:	b08a      	sub	sp, #40	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:644
        crate::asm::dsb();
   2:	f7ff fffe 	bl	0 <cortex_m::asm::dsb>
   6:	e7ff      	b.n	2 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset+0x2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:646
        unsafe {
            (*Self::ptr()).aircr.modify(
   8:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset>
   c:	9002      	str	r0, [sp, #8]
   e:	e7ff      	b.n	10 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset+0x10>
  10:	9802      	ldr	r0, [sp, #8]
  12:	f100 0108 	add.w	r1, r0, #8
  16:	9104      	str	r1, [sp, #16]
_ZN17volatile_register11RW$LT$T$GT$6modify17h2cd74cf1c84cd571E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  18:	9904      	ldr	r1, [sp, #16]
  1a:	9107      	str	r1, [sp, #28]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  1c:	9807      	ldr	r0, [sp, #28]
  1e:	9101      	str	r1, [sp, #4]
  20:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  24:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h2cd74cf1c84cd571E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  28:	9006      	str	r0, [sp, #24]
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset::{{closure}}>
  30:	9901      	ldr	r1, [sp, #4]
  32:	9108      	str	r1, [sp, #32]
  34:	9009      	str	r0, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  36:	9808      	ldr	r0, [sp, #32]
  38:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  3c:	9909      	ldr	r1, [sp, #36]	; 0x24
  3e:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset17h7d82617eee6b8a96E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:646
  42:	e7ff      	b.n	2 <cortex_m::asm::dsb+0x2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:654
            r & SCB_AIRCR_PRIGROUP_MASK | // keep priority group unchanged
            SCB_AIRCR_SYSRESETREQ
                }, // set the bit
            )
        };
        crate::asm::dsb();
  44:	f7ff fffe 	bl	0 <cortex_m::asm::dsb>
  48:	e7ff      	b.n	2 <cortex_m::asm::nop+0x2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:657
        loop {
            // wait for the reset
            crate::asm::nop(); // avoid rust-lang/rust#28728
  4a:	f7ff fffe 	bl	0 <cortex_m::asm::nop>
  4e:	e7fc      	b.n	4a <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset+0x4a>

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h530e4c459282c162E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_pendsv>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h530e4c459282c162E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:670
const SCB_ICSR_PENDSTSET: u32 = 1 << 26;
const SCB_ICSR_PENDSTCLR: u32 = 1 << 25;

impl SCB {
    /// Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt
    pub fn set_pendsv() {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:672
        unsafe {
            (*Self::ptr()).icsr.write(SCB_ICSR_PENDSVSET);
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_pendsv>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_pendsv+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	9002      	str	r0, [sp, #8]
  10:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  14:	9103      	str	r1, [sp, #12]
_ZN17volatile_register11RW$LT$T$GT$5write17hcf6e0d37e755b82aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:83
        self.register.set(value)
  16:	9902      	ldr	r1, [sp, #8]
  18:	9a03      	ldr	r2, [sp, #12]
  1a:	9104      	str	r1, [sp, #16]
  1c:	9205      	str	r2, [sp, #20]
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
  1e:	9804      	ldr	r0, [sp, #16]
  20:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  24:	9905      	ldr	r1, [sp, #20]
  26:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h530e4c459282c162E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:672
  2a:	e7ff      	b.n	2c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_pendsv+0x2c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:674
        }
    }
  2c:	b006      	add	sp, #24
  2e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hf8d89c73ad2d3128E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::is_pendsv_pending>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hf8d89c73ad2d3128E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:677

    /// Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending
    pub fn is_pendsv_pending() -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:678
        unsafe { (*Self::ptr()).icsr.read() & SCB_ICSR_PENDSVSET == SCB_ICSR_PENDSVSET }
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::is_pendsv_pending>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::is_pendsv_pending+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	9002      	str	r0, [sp, #8]
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
        self.register.get()
  10:	9902      	ldr	r1, [sp, #8]
  12:	9103      	str	r1, [sp, #12]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  14:	9803      	ldr	r0, [sp, #12]
  16:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  1a:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hf8d89c73ad2d3128E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:678
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::is_pendsv_pending+0x22>
  22:	9800      	ldr	r0, [sp, #0]
  24:	f3c0 7000 	ubfx	r0, r0, #28, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:679
    }
  28:	b004      	add	sp, #16
  2a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h467037947a92d2eeE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_pendsv>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h467037947a92d2eeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:682

    /// Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt
    pub fn clear_pendsv() {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:684
        unsafe {
            (*Self::ptr()).icsr.write(SCB_ICSR_PENDSVCLR);
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_pendsv>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_pendsv+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	9002      	str	r0, [sp, #8]
  10:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  14:	9103      	str	r1, [sp, #12]
_ZN17volatile_register11RW$LT$T$GT$5write17hcf6e0d37e755b82aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:83
        self.register.set(value)
  16:	9902      	ldr	r1, [sp, #8]
  18:	9a03      	ldr	r2, [sp, #12]
  1a:	9104      	str	r1, [sp, #16]
  1c:	9205      	str	r2, [sp, #20]
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  1e:	9804      	ldr	r0, [sp, #16]
  20:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  24:	9905      	ldr	r1, [sp, #20]
  26:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h467037947a92d2eeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:684
  2a:	e7ff      	b.n	2c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_pendsv+0x2c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:686
        }
    }
  2c:	b006      	add	sp, #24
  2e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17h004d4e0f53d4262bE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17h004d4e0f53d4262bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:772
impl SCB {
    /// Returns the hardware priority of `system_handler`
    ///
    /// *NOTE*: Hardware priority does not exactly match logical priority levels. See
    /// [`NVIC.get_priority`](struct.NVIC.html#method.get_priority) for more details.
    pub fn get_priority(system_handler: SystemHandler) -> u8 {
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4601      	mov	r1, r0
   6:	f88d 0016 	strb.w	r0, [sp, #22]
   a:	f10d 0016 	add.w	r0, sp, #22
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:773
        let index = system_handler.index();
   e:	9104      	str	r1, [sp, #16]
  10:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::SystemHandler::index>
  14:	f88d 0017 	strb.w	r0, [sp, #23]
  18:	e7ff      	b.n	2 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority+0x2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:778

        #[cfg(not(armv6m))]
        {
            // NOTE(unsafe) atomic read with no side effects
            unsafe { (*Self::ptr()).shpr[usize::from(index - 4)].read() }
  1a:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority>
  1e:	9003      	str	r0, [sp, #12]
  20:	e7ff      	b.n	22 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority+0x22>
  22:	f89d 0017 	ldrb.w	r0, [sp, #23]
  26:	3804      	subs	r0, #4
  28:	b2c1      	uxtb	r1, r0
  2a:	4602      	mov	r2, r0
  2c:	4281      	cmp	r1, r0
  2e:	9202      	str	r2, [sp, #8]
  30:	d11a      	bne.n	68 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority+0x68>
  32:	e7ff      	b.n	34 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority+0x34>
  34:	9802      	ldr	r0, [sp, #8]
  36:	f7ff fffe 	bl	0 <core::num::<impl core::convert::From<u8> for usize>::from>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	280b      	cmp	r0, #11
  42:	d818      	bhi.n	76 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority+0x76>
  44:	e7ff      	b.n	46 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority+0x46>
  46:	9803      	ldr	r0, [sp, #12]
  48:	9901      	ldr	r1, [sp, #4]
  4a:	1842      	adds	r2, r0, r1
  4c:	3214      	adds	r2, #20
  4e:	9206      	str	r2, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$4read17he8d993d65c08303aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
        self.register.get()
  50:	9a06      	ldr	r2, [sp, #24]
  52:	9207      	str	r2, [sp, #28]
_ZN5vcell21VolatileCell$LT$T$GT$3get17h4c94d9600352282eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  54:	9807      	ldr	r0, [sp, #28]
  56:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  5a:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17h004d4e0f53d4262bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:778
  5e:	9000      	str	r0, [sp, #0]
  60:	e7ff      	b.n	62 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority+0x62>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:788
            // NOTE(unsafe) atomic read with no side effects
            let shpr = unsafe { (*Self::ptr()).shpr[usize::from((index - 8) / 4)].read() };
            let prio = (shpr >> (8 * (index % 4))) & 0x000000ff;
            prio as u8
        }
    }
  62:	9800      	ldr	r0, [sp, #0]
  64:	b008      	add	sp, #32
  66:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:778
            unsafe { (*Self::ptr()).shpr[usize::from(index - 4)].read() }
  68:	f240 0000 	movw	r0, #0
  6c:	f2c0 0000 	movt	r0, #0
  70:	f7ff fffe 	bl	0 <core::panicking::panic>
  74:	defe      	udf	#254	; 0xfe
  76:	f240 0000 	movw	r0, #0
  7a:	f2c0 0000 	movt	r0, #0
  7e:	220c      	movs	r2, #12
  80:	9901      	ldr	r1, [sp, #4]
  82:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
  86:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hbccfb29c6e350b86E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hbccfb29c6e350b86E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:802
    ///
    /// # Unsafety
    ///
    /// Changing priority levels can break priority-based critical sections (see
    /// [`register::basepri`](../register/basepri/index.html)) and compromise memory safety.
    pub unsafe fn set_priority(&mut self, system_handler: SystemHandler, prio: u8) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9006      	str	r0, [sp, #24]
   c:	f88d 101d 	strb.w	r1, [sp, #29]
  10:	f88d 201e 	strb.w	r2, [sp, #30]
  14:	f10d 001d 	add.w	r0, sp, #29
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:803
        let index = system_handler.index();
  18:	9305      	str	r3, [sp, #20]
  1a:	f8cd c010 	str.w	ip, [sp, #16]
  1e:	f8cd e00c 	str.w	lr, [sp, #12]
  22:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::SystemHandler::index>
  26:	f88d 001f 	strb.w	r0, [sp, #31]
  2a:	e7ff      	b.n	2c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority+0x2c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:807

        #[cfg(not(armv6m))]
        {
            self.shpr[usize::from(index - 4)].write(prio)
  2c:	9806      	ldr	r0, [sp, #24]
  2e:	f7ff fffe 	bl	0 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority>
  32:	9002      	str	r0, [sp, #8]
  34:	e7ff      	b.n	36 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority+0x36>
  36:	f89d 001f 	ldrb.w	r0, [sp, #31]
  3a:	3804      	subs	r0, #4
  3c:	b2c1      	uxtb	r1, r0
  3e:	4602      	mov	r2, r0
  40:	4281      	cmp	r1, r0
  42:	9201      	str	r2, [sp, #4]
  44:	d122      	bne.n	8c <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority+0x8c>
  46:	e7ff      	b.n	48 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority+0x48>
  48:	9801      	ldr	r0, [sp, #4]
  4a:	f7ff fffe 	bl	0 <core::num::<impl core::convert::From<u8> for usize>::from>
  4e:	9000      	str	r0, [sp, #0]
  50:	e7ff      	b.n	52 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority+0x52>
  52:	9800      	ldr	r0, [sp, #0]
  54:	280b      	cmp	r0, #11
  56:	d820      	bhi.n	9a <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority+0x9a>
  58:	e7ff      	b.n	5a <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority+0x5a>
  5a:	9802      	ldr	r0, [sp, #8]
  5c:	9900      	ldr	r1, [sp, #0]
  5e:	1842      	adds	r2, r0, r1
  60:	3214      	adds	r2, #20
  62:	f89d 301e 	ldrb.w	r3, [sp, #30]
  66:	9208      	str	r2, [sp, #32]
  68:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
_ZN17volatile_register11RW$LT$T$GT$5write17h304d31a08092e9e9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:83
        self.register.set(value)
  6c:	9a08      	ldr	r2, [sp, #32]
  6e:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
  72:	920a      	str	r2, [sp, #40]	; 0x28
  74:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
_ZN5vcell21VolatileCell$LT$T$GT$3set17h48a018307a4666a9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  78:	980a      	ldr	r0, [sp, #40]	; 0x28
  7a:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  7e:	f89d 102f 	ldrb.w	r1, [sp, #47]	; 0x2f
  82:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hbccfb29c6e350b86E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:807
  86:	e7ff      	b.n	88 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority+0x88>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:820
                let prio = u32::from(prio) << shift;

                (value & !mask) | prio
            });
        }
    }
  88:	b00c      	add	sp, #48	; 0x30
  8a:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:807
            self.shpr[usize::from(index - 4)].write(prio)
  8c:	f240 0000 	movw	r0, #0
  90:	f2c0 0000 	movt	r0, #0
  94:	f7ff fffe 	bl	0 <core::panicking::panic>
  98:	defe      	udf	#254	; 0xfe
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	220c      	movs	r2, #12
  a4:	9900      	ldr	r1, [sp, #0]
  a6:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
  aa:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17ha5c432bb1d3a179dE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::clear_current>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17ha5c432bb1d3a179dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:43

impl SYST {
    /// Clears current value to 0
    ///
    /// After calling `clear_current()`, the next call to `has_wrapped()` will return `false`.
    pub fn clear_current(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:44
        unsafe { self.cvr.write(0) }
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::clear_current>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::clear_current+0x14>
  14:	9801      	ldr	r0, [sp, #4]
  16:	f100 0108 	add.w	r1, r0, #8
  1a:	9104      	str	r1, [sp, #16]
  1c:	2100      	movs	r1, #0
  1e:	9105      	str	r1, [sp, #20]
_ZN17volatile_register11RW$LT$T$GT$5write17hcf6e0d37e755b82aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:83
  20:	9904      	ldr	r1, [sp, #16]
  22:	9a05      	ldr	r2, [sp, #20]
  24:	9106      	str	r1, [sp, #24]
  26:	9207      	str	r2, [sp, #28]
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
  28:	9806      	ldr	r0, [sp, #24]
  2a:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  2e:	9907      	ldr	r1, [sp, #28]
  30:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17ha5c432bb1d3a179dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:44
  34:	e7ff      	b.n	36 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::clear_current+0x36>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:45
    }
  36:	b008      	add	sp, #32
  38:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17h6287a8e7d2ee0df9E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17h6287a8e7d2ee0df9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:48

    /// Disables counter
    pub fn disable_counter(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:49
        unsafe { self.csr.modify(|v| v & !SYST_CSR_ENABLE) }
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	9006      	str	r0, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h5c59f461475d55f4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
        self.register.set(f(self.register.get()));
  18:	9906      	ldr	r1, [sp, #24]
  1a:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9101      	str	r1, [sp, #4]
  20:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  24:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h5c59f461475d55f4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  28:	9008      	str	r0, [sp, #32]
  2a:	9808      	ldr	r0, [sp, #32]
  2c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter::{{closure}}>
  30:	9901      	ldr	r1, [sp, #4]
  32:	910a      	str	r1, [sp, #40]	; 0x28
  34:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  36:	980a      	ldr	r0, [sp, #40]	; 0x28
  38:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  3e:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17h6287a8e7d2ee0df9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:49
  42:	e7ff      	b.n	44 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter+0x44>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:50
    }
  44:	b00c      	add	sp, #48	; 0x30
  46:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17h84acc8bd6d77ef18E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17h84acc8bd6d77ef18E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:53

    /// Disables SysTick interrupt
    pub fn disable_interrupt(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:54
        unsafe { self.csr.modify(|v| v & !SYST_CSR_TICKINT) }
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	9006      	str	r0, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h0e82e98471504314E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  18:	9906      	ldr	r1, [sp, #24]
  1a:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9101      	str	r1, [sp, #4]
  20:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  24:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h0e82e98471504314E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  28:	9008      	str	r0, [sp, #32]
  2a:	9808      	ldr	r0, [sp, #32]
  2c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt::{{closure}}>
  30:	9901      	ldr	r1, [sp, #4]
  32:	910a      	str	r1, [sp, #40]	; 0x28
  34:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  36:	980a      	ldr	r0, [sp, #40]	; 0x28
  38:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  3e:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17h84acc8bd6d77ef18E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:54
  42:	e7ff      	b.n	44 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt+0x44>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:55
    }
  44:	b00c      	add	sp, #48	; 0x30
  46:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17h9b2a58dc2c7a606eE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17h9b2a58dc2c7a606eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:69
    /// - Program reload value
    /// - Clear current value
    /// - Program Control and Status register"
    ///
    /// The sequence translates to `self.set_reload(x); self.clear_current(); self.enable_counter()`
    pub fn enable_counter(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:70
        unsafe { self.csr.modify(|v| v | SYST_CSR_ENABLE) }
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	9006      	str	r0, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h64bed2858378958dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  18:	9906      	ldr	r1, [sp, #24]
  1a:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9101      	str	r1, [sp, #4]
  20:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  24:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h64bed2858378958dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  28:	9008      	str	r0, [sp, #32]
  2a:	9808      	ldr	r0, [sp, #32]
  2c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter::{{closure}}>
  30:	9901      	ldr	r1, [sp, #4]
  32:	910a      	str	r1, [sp, #40]	; 0x28
  34:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  36:	980a      	ldr	r0, [sp, #40]	; 0x28
  38:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  3e:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17h9b2a58dc2c7a606eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:70
  42:	e7ff      	b.n	44 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter+0x44>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:71
    }
  44:	b00c      	add	sp, #48	; 0x30
  46:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hc2cdeef5183e7e67E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hc2cdeef5183e7e67E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:74

    /// Enables SysTick interrupt
    pub fn enable_interrupt(&mut self) {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:75
        unsafe { self.csr.modify(|v| v | SYST_CSR_TICKINT) }
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	9006      	str	r0, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$6modify17h587fef99dc91d167E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  18:	9906      	ldr	r1, [sp, #24]
  1a:	9109      	str	r1, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9101      	str	r1, [sp, #4]
  20:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  24:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h587fef99dc91d167E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  28:	9008      	str	r0, [sp, #32]
  2a:	9808      	ldr	r0, [sp, #32]
  2c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt::{{closure}}>
  30:	9901      	ldr	r1, [sp, #4]
  32:	910a      	str	r1, [sp, #40]	; 0x28
  34:	900b      	str	r0, [sp, #44]	; 0x2c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  36:	980a      	ldr	r0, [sp, #40]	; 0x28
  38:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  3e:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hc2cdeef5183e7e67E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:75
  42:	e7ff      	b.n	44 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt+0x44>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:76
    }
  44:	b00c      	add	sp, #48	; 0x30
  46:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h59a0147fd3109cc4E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h59a0147fd3109cc4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:82

    /// Gets clock source
    ///
    /// *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the
    /// bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)
    pub fn get_clock_source(&mut self) -> SystClkSource {
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:84
        // NOTE(unsafe) atomic read with no side effects
        let clk_source_bit = self.csr.read() & SYST_CSR_CLKSOURCE != 0;
   8:	9804      	ldr	r0, [sp, #16]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source>
  10:	9002      	str	r0, [sp, #8]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source+0x14>
  14:	9802      	ldr	r0, [sp, #8]
  16:	9006      	str	r0, [sp, #24]
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
        self.register.get()
  18:	9906      	ldr	r1, [sp, #24]
  1a:	9107      	str	r1, [sp, #28]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  1c:	9807      	ldr	r0, [sp, #28]
  1e:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  22:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h59a0147fd3109cc4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:84
  26:	9001      	str	r0, [sp, #4]
  28:	e7ff      	b.n	2a <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source+0x2a>
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	f3c0 0180 	ubfx	r1, r0, #2, #1
  30:	f88d 1017 	strb.w	r1, [sp, #23]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:86
        match clk_source_bit {
            false => SystClkSource::External,
  34:	f89d 1017 	ldrb.w	r1, [sp, #23]
  38:	07c9      	lsls	r1, r1, #31
  3a:	2900      	cmp	r1, #0
  3c:	d104      	bne.n	48 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source+0x48>
  3e:	e7ff      	b.n	40 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source+0x40>
  40:	2001      	movs	r0, #1
  42:	f88d 0016 	strb.w	r0, [sp, #22]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:85
        match clk_source_bit {
  46:	e003      	b.n	50 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source+0x50>
  48:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:87
            true => SystClkSource::Core,
  4a:	f88d 0016 	strb.w	r0, [sp, #22]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:85
        match clk_source_bit {
  4e:	e7ff      	b.n	50 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source+0x50>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:89
        }
    }
  50:	f89d 0016 	ldrb.w	r0, [sp, #22]
  54:	b008      	add	sp, #32
  56:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17h27654ff9541dadeaE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_current>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17h27654ff9541dadeaE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:92

    /// Gets current value
    pub fn get_current() -> u32 {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:94
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).cvr.read() }
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_current>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_current+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	f100 0108 	add.w	r1, r0, #8
  12:	9102      	str	r1, [sp, #8]
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
  14:	9902      	ldr	r1, [sp, #8]
  16:	9103      	str	r1, [sp, #12]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  18:	9803      	ldr	r0, [sp, #12]
  1a:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  1e:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17h27654ff9541dadeaE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:94
  22:	9000      	str	r0, [sp, #0]
  24:	e7ff      	b.n	26 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_current+0x26>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:95
    }
  26:	9800      	ldr	r0, [sp, #0]
  28:	b004      	add	sp, #16
  2a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17haddf5f03f310d763E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_reload>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17haddf5f03f310d763E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:98

    /// Gets reload value
    pub fn get_reload() -> u32 {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:100
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).rvr.read() }
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_reload>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_reload+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	1d01      	adds	r1, r0, #4
  10:	9102      	str	r1, [sp, #8]
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
  12:	9902      	ldr	r1, [sp, #8]
  14:	9103      	str	r1, [sp, #12]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  16:	9803      	ldr	r0, [sp, #12]
  18:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  1c:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17haddf5f03f310d763E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:100
  20:	9000      	str	r0, [sp, #0]
  22:	e7ff      	b.n	24 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_reload+0x24>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:101
    }
  24:	9800      	ldr	r0, [sp, #0]
  26:	b004      	add	sp, #16
  28:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17hb6bc27007a616428E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_ticks_per_10ms>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17hb6bc27007a616428E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:108
    /// Returns the reload value with which the counter would wrap once per 10
    /// ms
    ///
    /// Returns `0` if the value is not known (e.g. because the clock can
    /// change dynamically).
    pub fn get_ticks_per_10ms() -> u32 {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:110
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).calib.read() & SYST_COUNTER_MASK }
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_ticks_per_10ms>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_ticks_per_10ms+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	f100 010c 	add.w	r1, r0, #12
  12:	9102      	str	r1, [sp, #8]
_ZN17volatile_register11RO$LT$T$GT$4read17hcee17a8c9aafc1dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:48
        self.register.get()
  14:	9902      	ldr	r1, [sp, #8]
  16:	9103      	str	r1, [sp, #12]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  18:	9803      	ldr	r0, [sp, #12]
  1a:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  1e:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17hb6bc27007a616428E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:110
  22:	9000      	str	r0, [sp, #0]
  24:	e7ff      	b.n	26 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_ticks_per_10ms+0x26>
  26:	9800      	ldr	r0, [sp, #0]
  28:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:111
    }
  2c:	b004      	add	sp, #16
  2e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17hd358d2b186b5a47dE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_reference_clock>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17hd358d2b186b5a47dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:114

    /// Checks if an external reference clock is available
    pub fn has_reference_clock() -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:116
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).calib.read() & SYST_CALIB_NOREF == 0 }
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_reference_clock>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_reference_clock+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	f100 010c 	add.w	r1, r0, #12
  12:	9102      	str	r1, [sp, #8]
_ZN17volatile_register11RO$LT$T$GT$4read17hcee17a8c9aafc1dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:48
  14:	9902      	ldr	r1, [sp, #8]
  16:	9103      	str	r1, [sp, #12]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  18:	9803      	ldr	r0, [sp, #12]
  1a:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  1e:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17hd358d2b186b5a47dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:116
  22:	9000      	str	r0, [sp, #0]
  24:	e7ff      	b.n	26 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_reference_clock+0x26>
  26:	9800      	ldr	r0, [sp, #0]
  28:	43c1      	mvns	r1, r0
  2a:	0fc8      	lsrs	r0, r1, #31
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:117
    }
  2c:	b004      	add	sp, #16
  2e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17hafd4d19bb8ba70b5E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_wrapped>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17hafd4d19bb8ba70b5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:123

    /// Checks if the counter wrapped (underflowed) since the last check
    ///
    /// *NOTE* This takes `&mut self` because the read operation is side effectful and will clear
    /// the bit of the read register.
    pub fn has_wrapped(&mut self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:124
        self.csr.read() & SYST_CSR_COUNTFLAG != 0
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_wrapped>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_wrapped+0x14>
  14:	9801      	ldr	r0, [sp, #4]
  16:	9004      	str	r0, [sp, #16]
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
        self.register.get()
  18:	9904      	ldr	r1, [sp, #16]
  1a:	9105      	str	r1, [sp, #20]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  1c:	9805      	ldr	r0, [sp, #20]
  1e:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  22:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17hafd4d19bb8ba70b5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:124
  26:	9000      	str	r0, [sp, #0]
  28:	e7ff      	b.n	2a <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_wrapped+0x2a>
  2a:	9800      	ldr	r0, [sp, #0]
  2c:	f3c0 4000 	ubfx	r0, r0, #16, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:125
    }
  30:	b006      	add	sp, #24
  32:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha000f96468b80338E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_counter_enabled>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha000f96468b80338E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:131

    /// Checks if counter is enabled
    ///
    /// *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the
    /// bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)
    pub fn is_counter_enabled(&mut self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:132
        self.csr.read() & SYST_CSR_ENABLE != 0
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_counter_enabled>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_counter_enabled+0x14>
  14:	9801      	ldr	r0, [sp, #4]
  16:	9004      	str	r0, [sp, #16]
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
  18:	9904      	ldr	r1, [sp, #16]
  1a:	9105      	str	r1, [sp, #20]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  1c:	9805      	ldr	r0, [sp, #20]
  1e:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  22:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha000f96468b80338E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:132
  26:	9000      	str	r0, [sp, #0]
  28:	e7ff      	b.n	2a <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_counter_enabled+0x2a>
  2a:	9800      	ldr	r0, [sp, #0]
  2c:	f000 0001 	and.w	r0, r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:133
    }
  30:	b006      	add	sp, #24
  32:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h81acfbd637e6c08dE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_interrupt_enabled>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h81acfbd637e6c08dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:139

    /// Checks if SysTick interrupt is enabled
    ///
    /// *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the
    /// bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)
    pub fn is_interrupt_enabled(&mut self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:140
        self.csr.read() & SYST_CSR_TICKINT != 0
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_interrupt_enabled>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_interrupt_enabled+0x14>
  14:	9801      	ldr	r0, [sp, #4]
  16:	9004      	str	r0, [sp, #16]
_ZN17volatile_register11RW$LT$T$GT$4read17h8d2fee59118d646aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:75
  18:	9904      	ldr	r1, [sp, #16]
  1a:	9105      	str	r1, [sp, #20]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  1c:	9805      	ldr	r0, [sp, #20]
  1e:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  22:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h81acfbd637e6c08dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:140
  26:	9000      	str	r0, [sp, #0]
  28:	e7ff      	b.n	2a <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_interrupt_enabled+0x2a>
  2a:	9800      	ldr	r0, [sp, #0]
  2c:	f3c0 0040 	ubfx	r0, r0, #1, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:141
    }
  30:	b006      	add	sp, #24
  32:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h0c97eb3e19b1c4dfE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_precise>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h0c97eb3e19b1c4dfE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:148
    /// Checks if the calibration value is precise
    ///
    /// Returns `false` if using the reload value returned by
    /// `get_ticks_per_10ms()` may result in a period significantly deviating
    /// from 10 ms.
    pub fn is_precise() -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:150
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).calib.read() & SYST_CALIB_SKEW == 0 }
   4:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_precise>
   8:	9001      	str	r0, [sp, #4]
   a:	e7ff      	b.n	c <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_precise+0xc>
   c:	9801      	ldr	r0, [sp, #4]
   e:	f100 010c 	add.w	r1, r0, #12
  12:	9102      	str	r1, [sp, #8]
_ZN17volatile_register11RO$LT$T$GT$4read17hcee17a8c9aafc1dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:48
        self.register.get()
  14:	9902      	ldr	r1, [sp, #8]
  16:	9103      	str	r1, [sp, #12]
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  18:	9803      	ldr	r0, [sp, #12]
  1a:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  1e:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h0c97eb3e19b1c4dfE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:150
  22:	9000      	str	r0, [sp, #0]
  24:	e7ff      	b.n	26 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_precise+0x26>
  26:	9800      	ldr	r0, [sp, #0]
  28:	f000 4180 	and.w	r1, r0, #1073741824	; 0x40000000
  2c:	2201      	movs	r2, #1
  2e:	ea82 7091 	eor.w	r0, r2, r1, lsr #30
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:151
    }
  32:	b004      	add	sp, #16
  34:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17h18062f0d122dfba9E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17h18062f0d122dfba9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:154

    /// Sets clock source
    pub fn set_clock_source(&mut self, clk_source: SystClkSource) {
   0:	b580      	push	{r7, lr}
   2:	b098      	sub	sp, #96	; 0x60
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9007      	str	r0, [sp, #28]
   a:	f88d 1023 	strb.w	r1, [sp, #35]	; 0x23
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:156
        match clk_source {
            SystClkSource::External => unsafe { self.csr.modify(|v| v & !SYST_CSR_CLKSOURCE) },
   e:	f89d 0023 	ldrb.w	r0, [sp, #35]	; 0x23
  12:	07c1      	lsls	r1, r0, #31
  14:	2900      	cmp	r1, #0
  16:	9206      	str	r2, [sp, #24]
  18:	9305      	str	r3, [sp, #20]
  1a:	9004      	str	r0, [sp, #16]
  1c:	d023      	beq.n	66 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0x66>
  1e:	e7ff      	b.n	20 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0x20>
  20:	9804      	ldr	r0, [sp, #16]
  22:	2801      	cmp	r0, #1
  24:	d001      	beq.n	2a <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0x2a>
  26:	e7ff      	b.n	28 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0x28>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:159
            SystClkSource::Core => unsafe { self.csr.modify(|v| v | SYST_CSR_CLKSOURCE) },
        }
    }
  28:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:156
            SystClkSource::External => unsafe { self.csr.modify(|v| v & !SYST_CSR_CLKSOURCE) },
  2a:	9807      	ldr	r0, [sp, #28]
  2c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source>
  30:	9003      	str	r0, [sp, #12]
  32:	e7ff      	b.n	34 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0x34>
  34:	9803      	ldr	r0, [sp, #12]
  36:	900c      	str	r0, [sp, #48]	; 0x30
_ZN17volatile_register11RW$LT$T$GT$6modify17h425e12690399bfe8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
        self.register.set(f(self.register.get()));
  38:	990c      	ldr	r1, [sp, #48]	; 0x30
  3a:	910f      	str	r1, [sp, #60]	; 0x3c
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
  3c:	980f      	ldr	r0, [sp, #60]	; 0x3c
  3e:	9102      	str	r1, [sp, #8]
  40:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  44:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17h425e12690399bfe8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  48:	900e      	str	r0, [sp, #56]	; 0x38
  4a:	980e      	ldr	r0, [sp, #56]	; 0x38
  4c:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source::{{closure}}>
  50:	9902      	ldr	r1, [sp, #8]
  52:	9110      	str	r1, [sp, #64]	; 0x40
  54:	9011      	str	r0, [sp, #68]	; 0x44
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  56:	9810      	ldr	r0, [sp, #64]	; 0x40
  58:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  5c:	9911      	ldr	r1, [sp, #68]	; 0x44
  5e:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17h18062f0d122dfba9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:156
  62:	e7ff      	b.n	64 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0x64>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:155
        match clk_source {
  64:	e01d      	b.n	a2 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0xa2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:157
            SystClkSource::Core => unsafe { self.csr.modify(|v| v | SYST_CSR_CLKSOURCE) },
  66:	9807      	ldr	r0, [sp, #28]
  68:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source>
  6c:	9001      	str	r0, [sp, #4]
  6e:	e7ff      	b.n	70 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0x70>
  70:	9801      	ldr	r0, [sp, #4]
  72:	9012      	str	r0, [sp, #72]	; 0x48
_ZN17volatile_register11RW$LT$T$GT$6modify17hf09abc312a17fe84E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  74:	9912      	ldr	r1, [sp, #72]	; 0x48
  76:	9115      	str	r1, [sp, #84]	; 0x54
_ZN5vcell21VolatileCell$LT$T$GT$3get17hebc398f22fb4597fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:43
        unsafe { ptr::read_volatile(self.value.get()) }
  78:	9815      	ldr	r0, [sp, #84]	; 0x54
  7a:	9100      	str	r1, [sp, #0]
  7c:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  80:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
_ZN17volatile_register11RW$LT$T$GT$6modify17hf09abc312a17fe84E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:69
  84:	9014      	str	r0, [sp, #80]	; 0x50
  86:	9814      	ldr	r0, [sp, #80]	; 0x50
  88:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source::{{closure}}>
  8c:	9900      	ldr	r1, [sp, #0]
  8e:	9116      	str	r1, [sp, #88]	; 0x58
  90:	9017      	str	r0, [sp, #92]	; 0x5c
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
        unsafe { ptr::write_volatile(self.value.get(), value) }
  92:	9816      	ldr	r0, [sp, #88]	; 0x58
  94:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  98:	9917      	ldr	r1, [sp, #92]	; 0x5c
  9a:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17h18062f0d122dfba9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:157
  9e:	e7ff      	b.n	a0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0xa0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:155
        match clk_source {
  a0:	e7ff      	b.n	a2 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source+0xa2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:159
    }
  a2:	b018      	add	sp, #96	; 0x60
  a4:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hc1c38f6142aa2de1E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_reload>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hc1c38f6142aa2de1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:166
    /// Sets reload value
    ///
    /// Valid values are between `1` and `0x00ffffff`.
    ///
    /// *NOTE* To make the timer wrap every `N` ticks set the reload value to `N - 1`
    pub fn set_reload(&mut self, value: u32) {
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:167
        unsafe { self.rvr.write(value) }
   c:	9804      	ldr	r0, [sp, #16]
   e:	9203      	str	r2, [sp, #12]
  10:	9302      	str	r3, [sp, #8]
  12:	f7ff fffe 	bl	0 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_reload>
  16:	9001      	str	r0, [sp, #4]
  18:	e7ff      	b.n	1a <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_reload+0x1a>
  1a:	9801      	ldr	r0, [sp, #4]
  1c:	1d01      	adds	r1, r0, #4
  1e:	9a05      	ldr	r2, [sp, #20]
  20:	9106      	str	r1, [sp, #24]
  22:	9207      	str	r2, [sp, #28]
_ZN17volatile_register11RW$LT$T$GT$5write17hcf6e0d37e755b82aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\volatile-register-0.2.0\src/lib.rs:83
        self.register.set(value)
  24:	9906      	ldr	r1, [sp, #24]
  26:	9a07      	ldr	r2, [sp, #28]
  28:	9108      	str	r1, [sp, #32]
  2a:	9209      	str	r2, [sp, #36]	; 0x24
_ZN5vcell21VolatileCell$LT$T$GT$3set17h5443f81711737a77E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\vcell-0.1.0\src/lib.rs:51
  2c:	9808      	ldr	r0, [sp, #32]
  2e:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  32:	9909      	ldr	r1, [sp, #36]	; 0x24
  34:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hc1c38f6142aa2de1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:167
  38:	e7ff      	b.n	3a <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_reload+0x3a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:168
    }
  3a:	b00a      	add	sp, #40	; 0x28
  3c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral11Peripherals5steal17h15413da39a30cd1dE:

00000000 <cortex_m::peripheral::Peripherals::steal>:
_ZN8cortex_m10peripheral11Peripherals5steal17h15413da39a30cd1dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:161
            }
        })
    }

    /// Unchecked version of `Peripherals::take`
    pub unsafe fn steal() -> Self {
   0:	b099      	sub	sp, #100	; 0x64
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:162
        CORE_PERIPHERALS = true;
   2:	f240 0000 	movw	r0, #0
   6:	f2c0 0000 	movt	r0, #0
   a:	2101      	movs	r1, #1
   c:	7001      	strb	r1, [r0, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:202
            },
            TPIU: TPIU {
                _marker: PhantomData,
            },
        }
    }
   e:	b019      	add	sp, #100	; 0x64
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3CBP3new17ha10b7ee893af2439E:

00000000 <cortex_m::peripheral::CBP::new>:
_ZN8cortex_m10peripheral3CBP3new17ha10b7ee893af2439E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:214

unsafe impl Send for CBP {}

#[cfg(not(armv6m))]
impl CBP {
    pub(crate) unsafe fn new() -> Self {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:218
        CBP {
            _marker: PhantomData,
        }
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3CBP3ptr17h377c02c8c1787ae4E:

00000000 <cortex_m::peripheral::CBP::ptr>:
_ZN8cortex_m10peripheral3CBP3ptr17h377c02c8c1787ae4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:221

    /// Returns a pointer to the register block
    pub fn ptr() -> *const self::cbp::RegisterBlock {
   0:	f64e 7050 	movw	r0, #61264	; 0xef50
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:223
        0xE000_EF50 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadf256d537903084E:

00000000 <<cortex_m::peripheral::CBP as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17hadf256d537903084E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:230

#[cfg(not(armv6m))]
impl ops::Deref for CBP {
    type Target = self::cbp::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:231
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::CBP as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::CBP as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:232
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral5CPUID3ptr17h122332c03e42390bE:

00000000 <cortex_m::peripheral::CPUID::ptr>:
_ZN8cortex_m10peripheral5CPUID3ptr17h122332c03e42390bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:244

unsafe impl Send for CPUID {}

impl CPUID {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const self::cpuid::RegisterBlock {
   0:	f64e 5000 	movw	r0, #60672	; 0xed00
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:246
        0xE000_ED00 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4118c569d2e63737E:

00000000 <<cortex_m::peripheral::CPUID as core::ops::deref::Deref>::deref>:
_ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4118c569d2e63737E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:252
}

impl ops::Deref for CPUID {
    type Target = self::cpuid::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:253
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::CPUID as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::CPUID as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:254
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3DCB3ptr17h0d7be6912828c88cE:

00000000 <cortex_m::peripheral::DCB::ptr>:
_ZN8cortex_m10peripheral3DCB3ptr17h0d7be6912828c88cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:266

unsafe impl Send for DCB {}

impl DCB {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const dcb::RegisterBlock {
   0:	f64e 50f0 	movw	r0, #60912	; 0xedf0
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:268
        0xE000_EDF0 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h626597380cfe03f7E:

00000000 <<cortex_m::peripheral::DCB as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h626597380cfe03f7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:274
}

impl ops::Deref for DCB {
    type Target = self::dcb::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:275
        unsafe { &*DCB::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::DCB as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::DCB as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:276
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3DWT3ptr17h72afa2852124a6d8E:

00000000 <cortex_m::peripheral::DWT::ptr>:
_ZN8cortex_m10peripheral3DWT3ptr17h72afa2852124a6d8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:288

unsafe impl Send for DWT {}

impl DWT {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const dwt::RegisterBlock {
   0:	f241 0000 	movw	r0, #4096	; 0x1000
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:290
        0xE000_1000 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e8370a8c3e597a3E:

00000000 <<cortex_m::peripheral::DWT as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e8370a8c3e597a3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:296
}

impl ops::Deref for DWT {
    type Target = self::dwt::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:297
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::DWT as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::DWT as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:298
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3FPB3ptr17h88953fe8f2813c56E:

00000000 <cortex_m::peripheral::FPB::ptr>:
_ZN8cortex_m10peripheral3FPB3ptr17h88953fe8f2813c56E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:311
unsafe impl Send for FPB {}

#[cfg(not(armv6m))]
impl FPB {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const fpb::RegisterBlock {
   0:	f242 0000 	movw	r0, #8192	; 0x2000
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:313
        0xE000_2000 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h26ba43de2133ea10E:

00000000 <<cortex_m::peripheral::FPB as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h26ba43de2133ea10E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:320

#[cfg(not(armv6m))]
impl ops::Deref for FPB {
    type Target = self::fpb::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:321
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::FPB as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::FPB as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:322
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3FPU3ptr17h6a01315203ab96afE:

00000000 <cortex_m::peripheral::FPU::ptr>:
_ZN8cortex_m10peripheral3FPU3ptr17h6a01315203ab96afE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:335
unsafe impl Send for FPU {}

#[cfg(any(has_fpu, target_arch = "x86_64"))]
impl FPU {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const fpu::RegisterBlock {
   0:	f64e 7030 	movw	r0, #61232	; 0xef30
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:337
        0xE000_EF30 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..FPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h716c63b8b7032d0eE:

00000000 <<cortex_m::peripheral::FPU as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..FPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h716c63b8b7032d0eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:344

#[cfg(any(has_fpu, target_arch = "x86_64"))]
impl ops::Deref for FPU {
    type Target = self::fpu::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:345
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::FPU as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::FPU as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:346
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3ITM3ptr17h37204737952c7ebbE:

00000000 <cortex_m::peripheral::ITM::ptr>:
_ZN8cortex_m10peripheral3ITM3ptr17h37204737952c7ebbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:359
unsafe impl Send for ITM {}

#[cfg(not(armv6m))]
impl ITM {
    /// Returns a pointer to the register block
    pub fn ptr() -> *mut itm::RegisterBlock {
   0:	f04f 4060 	mov.w	r0, #3758096384	; 0xe0000000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:361
        0xE000_0000 as *mut _
    }
   4:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h60a3345c99f54189E:

00000000 <<cortex_m::peripheral::ITM as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h60a3345c99f54189E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:368

#[cfg(not(armv6m))]
impl ops::Deref for ITM {
    type Target = self::itm::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:369
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::ITM as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::ITM as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:370
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf23be00e44479b5bE:

00000000 <<cortex_m::peripheral::ITM as core::ops::deref::DerefMut>::deref_mut>:
_ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf23be00e44479b5bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:375
}

#[cfg(not(armv6m))]
impl ops::DerefMut for ITM {
    fn deref_mut(&mut self) -> &mut Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:376
        unsafe { &mut *Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::ITM as core::ops::deref::DerefMut>::deref_mut>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::ITM as core::ops::deref::DerefMut>::deref_mut+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:377
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3MPU3ptr17h8f1745c4d0818912E:

00000000 <cortex_m::peripheral::MPU::ptr>:
_ZN8cortex_m10peripheral3MPU3ptr17h8f1745c4d0818912E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:389

unsafe impl Send for MPU {}

impl MPU {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const mpu::RegisterBlock {
   0:	f64e 5090 	movw	r0, #60816	; 0xed90
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:391
        0xE000_ED90 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha2cc57a7561495faE:

00000000 <<cortex_m::peripheral::MPU as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha2cc57a7561495faE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:397
}

impl ops::Deref for MPU {
    type Target = self::mpu::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:398
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::MPU as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::MPU as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:399
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4NVIC3ptr17h561c3df34499b03aE:

00000000 <cortex_m::peripheral::NVIC::ptr>:
_ZN8cortex_m10peripheral4NVIC3ptr17h561c3df34499b03aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:411

unsafe impl Send for NVIC {}

impl NVIC {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const nvic::RegisterBlock {
   0:	f24e 1000 	movw	r0, #57600	; 0xe100
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:413
        0xE000_E100 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hcbf5e29844739915E:

00000000 <<cortex_m::peripheral::NVIC as core::ops::deref::Deref>::deref>:
_ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hcbf5e29844739915E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:419
}

impl ops::Deref for NVIC {
    type Target = self::nvic::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:420
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::NVIC as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::NVIC as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:421
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3SCB3ptr17hb8b5070cf4d81ed4E:

00000000 <cortex_m::peripheral::SCB::ptr>:
_ZN8cortex_m10peripheral3SCB3ptr17hb8b5070cf4d81ed4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:433

unsafe impl Send for SCB {}

impl SCB {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const scb::RegisterBlock {
   0:	f64e 5004 	movw	r0, #60676	; 0xed04
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:435
        0xE000_ED04 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h148f3c6fd338e68fE:

00000000 <<cortex_m::peripheral::SCB as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h148f3c6fd338e68fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:441
}

impl ops::Deref for SCB {
    type Target = self::scb::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:442
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::SCB as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::SCB as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:443
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4SYST3ptr17h8b3ba6561b454774E:

00000000 <cortex_m::peripheral::SYST::ptr>:
_ZN8cortex_m10peripheral4SYST3ptr17h8b3ba6561b454774E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:455

unsafe impl Send for SYST {}

impl SYST {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const syst::RegisterBlock {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:457
        0xE000_E010 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf8ae4cee0937d53bE:

00000000 <<cortex_m::peripheral::SYST as core::ops::deref::Deref>::deref>:
_ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf8ae4cee0937d53bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:463
}

impl ops::Deref for SYST {
    type Target = self::syst::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:464
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::SYST as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::SYST as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:465
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral4TPIU3ptr17h1f41a2dbaf2bb820E:

00000000 <cortex_m::peripheral::TPIU::ptr>:
_ZN8cortex_m10peripheral4TPIU3ptr17h1f41a2dbaf2bb820E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:478
unsafe impl Send for TPIU {}

#[cfg(not(armv6m))]
impl TPIU {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const tpiu::RegisterBlock {
   0:	2000      	movs	r0, #0
   2:	f2ce 0004 	movt	r0, #57348	; 0xe004
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:480
        0xE004_0000 as *const _
    }
   6:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7c4e0333b3911d8eE:

00000000 <<cortex_m::peripheral::TPIU as core::ops::deref::Deref>::deref>:
_ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7c4e0333b3911d8eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:487

#[cfg(not(armv6m))]
impl ops::Deref for TPIU {
    type Target = self::tpiu::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:488
        unsafe { &*Self::ptr() }
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <<cortex_m::peripheral::TPIU as core::ops::deref::Deref>::deref>
   e:	9001      	str	r0, [sp, #4]
  10:	e7ff      	b.n	12 <<cortex_m::peripheral::TPIU as core::ops::deref::Deref>::deref+0x12>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/mod.rs:489
    }
  12:	9801      	ldr	r0, [sp, #4]
  14:	b004      	add	sp, #16
  16:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.1.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.1
00000241 l       .debug_str	00000000 
00000b7a l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00000b70 l       .debug_str	00000000 
00000b57 l       .debug_str	00000000 
00000b50 l       .debug_str	00000000 
00000c71 l       .debug_str	00000000 
00000b47 l       .debug_str	00000000 
00000b42 l       .debug_str	00000000 
00000b26 l       .debug_str	00000000 
00000c68 l       .debug_str	00000000 
00000b02 l       .debug_str	00000000 
00000c41 l       .debug_str	00000000 
00000aeb l       .debug_str	00000000 
00000c36 l       .debug_str	00000000 
00000ae3 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000adf l       .debug_str	00000000 
00000c26 l       .debug_str	00000000 
00000ac2 l       .debug_str	00000000 
00000c1f l       .debug_str	00000000 
00000ab7 l       .debug_str	00000000 
00000c16 l       .debug_str	00000000 
00000a59 l       .debug_str	00000000 
00000a4f l       .debug_str	00000000 
00000a3e l       .debug_str	00000000 
00000c02 l       .debug_str	00000000 
00000a39 l       .debug_str	00000000 
00000a20 l       .debug_str	00000000 
00000a14 l       .debug_str	00000000 
00000a0b l       .debug_str	00000000 
00000bd8 l       .debug_str	00000000 
00000a07 l       .debug_str	00000000 
00000a00 l       .debug_str	00000000 
000009f1 l       .debug_str	00000000 
000009ee l       .debug_str	00000000 
000009e8 l       .debug_str	00000000 
000009e2 l       .debug_str	00000000 
000009de l       .debug_str	00000000 
000009d8 l       .debug_str	00000000 
000009d1 l       .debug_str	00000000 
000009c6 l       .debug_str	00000000 
000009ba l       .debug_str	00000000 
000009a6 l       .debug_str	00000000 
00000bae l       .debug_str	00000000 
0000099e l       .debug_str	00000000 
00000996 l       .debug_str	00000000 
00000992 l       .debug_str	00000000 
00000988 l       .debug_str	00000000 
0000097a l       .debug_str	00000000 
00000974 l       .debug_str	00000000 
0000096e l       .debug_str	00000000 
00000bac l       .debug_str	00000000 
00000968 l       .debug_str	00000000 
00000963 l       .debug_str	00000000 
0000095e l       .debug_str	00000000 
00000ba8 l       .debug_str	00000000 
00000ba0 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f2 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000127 l       .debug_str	00000000 
00000138 l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
00000160 l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
0000019f l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001b2 l       .debug_str	00000000 
000001b9 l       .debug_str	00000000 
000001bd l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000001c8 l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001dd l       .debug_str	00000000 
000001e7 l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
000001fe l       .debug_str	00000000 
00000206 l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000228 l       .debug_str	00000000 
00000233 l       .debug_str	00000000 
00000237 l       .debug_str	00000000 
00000958 l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
0000025f l       .debug_str	00000000 
0000026f l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
00000291 l       .debug_str	00000000 
0000029e l       .debug_str	00000000 
000002a8 l       .debug_str	00000000 
000002aa l       .debug_str	00000000 
000002f2 l       .debug_str	00000000 
0000031c l       .debug_str	00000000 
0000035c l       .debug_str	00000000 
0000035f l       .debug_str	00000000 
000003a1 l       .debug_str	00000000 
000003a6 l       .debug_str	00000000 
000003ad l       .debug_str	00000000 
000003b2 l       .debug_str	00000000 
000003b7 l       .debug_str	00000000 
000003e5 l       .debug_str	00000000 
00000470 l       .debug_str	00000000 
0000047c l       .debug_str	00000000 
00000480 l       .debug_str	00000000 
0000050d l       .debug_str	00000000 
0000059a l       .debug_str	00000000 
00000629 l       .debug_str	00000000 
000006b3 l       .debug_str	00000000 
00000739 l       .debug_str	00000000 
0000077f l       .debug_str	00000000 
00000785 l       .debug_str	00000000 
000007f0 l       .debug_str	00000000 
00000857 l       .debug_str	00000000 
000008bf l       .debug_str	00000000 
0000092a l       .debug_str	00000000 
0000092f l       .debug_str	00000000 
00000956 l       .debug_str	00000000 
00000b94 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.0	0000000a .Lanon.08626c2e518eb07648b9271a4275960a.0
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.1	00000007 .Lanon.08626c2e518eb07648b9271a4275960a.1
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.10	00000009 .Lanon.08626c2e518eb07648b9271a4275960a.10
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.11	0000000e .Lanon.08626c2e518eb07648b9271a4275960a.11
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.12	00000009 .Lanon.08626c2e518eb07648b9271a4275960a.12
00000000 l     O .rodata.cst4	00000004 .Lanon.08626c2e518eb07648b9271a4275960a.13
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.14	00000010 .Lanon.08626c2e518eb07648b9271a4275960a.14
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.15	00000009 .Lanon.08626c2e518eb07648b9271a4275960a.15
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.16	00000010 .Lanon.08626c2e518eb07648b9271a4275960a.16
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.17	0000000a .Lanon.08626c2e518eb07648b9271a4275960a.17
00000000 l     O .rodata.cst8	00000008 .Lanon.08626c2e518eb07648b9271a4275960a.2
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.3	00000007 .Lanon.08626c2e518eb07648b9271a4275960a.3
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.4	00000006 .Lanon.08626c2e518eb07648b9271a4275960a.4
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.5	0000000c .Lanon.08626c2e518eb07648b9271a4275960a.5
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.6	00000006 .Lanon.08626c2e518eb07648b9271a4275960a.6
00000000 l     O .rodata..Lanon.08626c2e518eb07648b9271a4275960a.7	0000000a .Lanon.08626c2e518eb07648b9271a4275960a.7
00000008 l     O .rodata.cst8	00000008 .Lanon.08626c2e518eb07648b9271a4275960a.8
00000000 l     O .rodata.cst16	00000010 .Lanon.08626c2e518eb07648b9271a4275960a.9
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd2a569f2c0d05397E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd2a569f2c0d05397E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb9Exception4irqn17h16ef3f8a9d25c90dE	00000000 .text._ZN8cortex_m10peripheral3scb9Exception4irqn17h16ef3f8a9d25c90dE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb10VectActive4from17hfa58923efcaba369E	00000000 .text._ZN8cortex_m10peripheral3scb10VectActive4from17hfa58923efcaba369E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h32ed0e9cae391dc1E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h32ed0e9cae391dc1E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h33e1bbf1b39a2261E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h33e1bbf1b39a2261E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h287835424c6b5a43E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h287835424c6b5a43E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h4d0aa2b019631bd7E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h4d0aa2b019631bd7E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset28_$u7b$$u7b$closure$u7d$$u7d$17h8edd752de7b76079E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset28_$u7b$$u7b$closure$u7d$$u7d$17h8edd752de7b76079E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset28_$u7b$$u7b$closure$u7d$$u7d$17he3bd4db149308f48E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset28_$u7b$$u7b$closure$u7d$$u7d$17he3bd4db149308f48E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb13SystemHandler5index17hfe6794ca973921bbE	00000000 .text._ZN8cortex_m10peripheral3scb13SystemHandler5index17hfe6794ca973921bbE
00000000 l    d  .text._ZN77_$LT$cortex_m..peripheral..scb..FpuAccessMode$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6007df4216a2bfaE	00000000 .text._ZN77_$LT$cortex_m..peripheral..scb..FpuAccessMode$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6007df4216a2bfaE
00000000 l    d  .text._ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hbe99212960ac2516E	00000000 .text._ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hbe99212960ac2516E
00000000 l    d  .text._ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hadd81f1774ddce3cE	00000000 .text._ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hadd81f1774ddce3cE
00000000 l    d  .text._ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17hb6ebeed8caa5eb4dE	00000000 .text._ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17hb6ebeed8caa5eb4dE
00000000 l    d  .rodata..Lanon.08626c2e518eb07648b9271a4275960a.14	00000000 .rodata..Lanon.08626c2e518eb07648b9271a4275960a.14
00000000 l    d  .rodata..Lanon.08626c2e518eb07648b9271a4275960a.16	00000000 .rodata..Lanon.08626c2e518eb07648b9271a4275960a.16
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd2a569f2c0d05397E	00000028 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::field
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::field
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000         *UND*	00000000 core::fmt::Formatter::debug_struct
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000 g     F .text._ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hbe99212960ac2516E	0000016c <cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt
00000000 g     F .text._ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hadd81f1774ddce3cE	000000ec <cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt
00000000 g     F .text._ZN77_$LT$cortex_m..peripheral..scb..FpuAccessMode$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6007df4216a2bfaE	000000a2 <cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt
00000000 g     F .text._ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17hb6ebeed8caa5eb4dE	00000126 <cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt
00000000 g     F .text._ZN8cortex_m10peripheral3scb10VectActive4from17hfa58923efcaba369E	0000014e cortex_m::peripheral::scb::VectActive::from
00000000 g     F .text._ZN8cortex_m10peripheral3scb13SystemHandler5index17hfe6794ca973921bbE	00000064 .hidden cortex_m::peripheral::scb::SystemHandler::index
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset28_$u7b$$u7b$closure$u7d$$u7d$17h8edd752de7b76079E	0000001a .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h32ed0e9cae391dc1E	00000012 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h33e1bbf1b39a2261E	00000012 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h287835424c6b5a43E	00000012 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h4d0aa2b019631bd7E	00000012 .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset28_$u7b$$u7b$closure$u7d$$u7d$17he3bd4db149308f48E	0000001a .hidden cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3scb9Exception4irqn17h16ef3f8a9d25c90dE	00000076 cortex_m::peripheral::scb::Exception::irqn



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd2a569f2c0d05397E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hd2a569f2c0d05397E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <<&T as core::fmt::Debug>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3scb9Exception4irqn17h16ef3f8a9d25c90dE:

00000000 <cortex_m::peripheral::scb::Exception::irqn>:
_ZN8cortex_m10peripheral3scb9Exception4irqn17h16ef3f8a9d25c90dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:233

impl Exception {
    /// Returns the IRQ number of this `Exception`
    ///
    /// The return value is always within the closed range `[-1, -14]`
    pub fn irqn(&self) -> i8 {
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:235
        match *self {
            Exception::NonMaskableInt => -14,
   6:	9802      	ldr	r0, [sp, #8]
   8:	7800      	ldrb	r0, [r0, #0]
   a:	4602      	mov	r2, r0
   c:	2808      	cmp	r0, #8
   e:	9101      	str	r1, [sp, #4]
  10:	9200      	str	r2, [sp, #0]
  12:	d807      	bhi.n	24 <cortex_m::peripheral::scb::Exception::irqn+0x24>
  14:	9900      	ldr	r1, [sp, #0]
  16:	e8df f001 	tbb	[pc, r1]
  1a:	0a06      	.short	0x0a06
  1c:	1a16120e 	.word	0x1a16120e
  20:	0026221e 	.word	0x0026221e
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:251
            #[cfg(not(armv6m))]
            Exception::DebugMonitor => -4,
            Exception::PendSV => -2,
            Exception::SysTick => -1,
        }
    }
  24:	defe      	udf	#254	; 0xfe
  26:	20f2      	movs	r0, #242	; 0xf2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:235
            Exception::NonMaskableInt => -14,
  28:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:234
        match *self {
  2c:	e01f      	b.n	6e <cortex_m::peripheral::scb::Exception::irqn+0x6e>
  2e:	20f3      	movs	r0, #243	; 0xf3
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:236
            Exception::HardFault => -13,
  30:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:234
        match *self {
  34:	e01b      	b.n	6e <cortex_m::peripheral::scb::Exception::irqn+0x6e>
  36:	20f4      	movs	r0, #244	; 0xf4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:238
            Exception::MemoryManagement => -12,
  38:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:234
        match *self {
  3c:	e017      	b.n	6e <cortex_m::peripheral::scb::Exception::irqn+0x6e>
  3e:	20f5      	movs	r0, #245	; 0xf5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:240
            Exception::BusFault => -11,
  40:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:234
        match *self {
  44:	e013      	b.n	6e <cortex_m::peripheral::scb::Exception::irqn+0x6e>
  46:	20f6      	movs	r0, #246	; 0xf6
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:242
            Exception::UsageFault => -10,
  48:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:234
        match *self {
  4c:	e00f      	b.n	6e <cortex_m::peripheral::scb::Exception::irqn+0x6e>
  4e:	20fb      	movs	r0, #251	; 0xfb
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:245
            Exception::SVCall => -5,
  50:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:234
        match *self {
  54:	e00b      	b.n	6e <cortex_m::peripheral::scb::Exception::irqn+0x6e>
  56:	20fc      	movs	r0, #252	; 0xfc
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:247
            Exception::DebugMonitor => -4,
  58:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:234
        match *self {
  5c:	e007      	b.n	6e <cortex_m::peripheral::scb::Exception::irqn+0x6e>
  5e:	20fe      	movs	r0, #254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:248
            Exception::PendSV => -2,
  60:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:234
        match *self {
  64:	e003      	b.n	6e <cortex_m::peripheral::scb::Exception::irqn+0x6e>
  66:	20ff      	movs	r0, #255	; 0xff
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:249
            Exception::SysTick => -1,
  68:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:234
        match *self {
  6c:	e7ff      	b.n	6e <cortex_m::peripheral::scb::Exception::irqn+0x6e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:251
    }
  6e:	f89d 000f 	ldrb.w	r0, [sp, #15]
  72:	b004      	add	sp, #16
  74:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb10VectActive4from17hfa58923efcaba369E:

00000000 <cortex_m::peripheral::scb::VectActive::from>:
_ZN8cortex_m10peripheral3scb10VectActive4from17hfa58923efcaba369E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:272
    },
}

impl VectActive {
    /// Converts a `byte` into `VectActive`
    pub fn from(vect_active: u8) -> Option<Self> {
   0:	b088      	sub	sp, #32
   2:	4601      	mov	r1, r0
   4:	f88d 000b 	strb.w	r0, [sp, #11]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:274
        Some(match vect_active {
            0 => VectActive::ThreadMode,
   8:	f89d 000b 	ldrb.w	r0, [sp, #11]
   c:	4602      	mov	r2, r0
   e:	280f      	cmp	r0, #15
  10:	9101      	str	r1, [sp, #4]
  12:	9200      	str	r2, [sp, #0]
  14:	f200 8071 	bhi.w	fa <cortex_m::peripheral::scb::VectActive::from+0xfa>
  18:	9900      	ldr	r1, [sp, #0]
  1a:	e8df f001 	tbb	[pc, r1]
  1e:	6e08      	.short	0x6e08
  20:	2c21170c 	.word	0x2c21170c
  24:	6e6e6e37 	.word	0x6e6e6e37
  28:	6e4d426e 	.word	0x6e4d426e
  2c:	6358      	.short	0x6358
  2e:	2000      	movs	r0, #0
  30:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  34:	e082      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  36:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:275
            2 => VectActive::Exception(Exception::NonMaskableInt),
  38:	f88d 0012 	strb.w	r0, [sp, #18]
  3c:	f89d 0012 	ldrb.w	r0, [sp, #18]
  40:	f88d 0011 	strb.w	r0, [sp, #17]
  44:	2001      	movs	r0, #1
  46:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  4a:	e077      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  4c:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:276
            3 => VectActive::Exception(Exception::HardFault),
  4e:	f88d 0013 	strb.w	r0, [sp, #19]
  52:	f89d 1013 	ldrb.w	r1, [sp, #19]
  56:	f88d 1011 	strb.w	r1, [sp, #17]
  5a:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  5e:	e06d      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  60:	2002      	movs	r0, #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:278
            #[cfg(not(armv6m))]
            4 => VectActive::Exception(Exception::MemoryManagement),
  62:	f88d 0014 	strb.w	r0, [sp, #20]
  66:	f89d 0014 	ldrb.w	r0, [sp, #20]
  6a:	f88d 0011 	strb.w	r0, [sp, #17]
  6e:	2001      	movs	r0, #1
  70:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  74:	e062      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  76:	2003      	movs	r0, #3
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:280
            #[cfg(not(armv6m))]
            5 => VectActive::Exception(Exception::BusFault),
  78:	f88d 0015 	strb.w	r0, [sp, #21]
  7c:	f89d 0015 	ldrb.w	r0, [sp, #21]
  80:	f88d 0011 	strb.w	r0, [sp, #17]
  84:	2001      	movs	r0, #1
  86:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  8a:	e057      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  8c:	2004      	movs	r0, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:282
            #[cfg(not(armv6m))]
            6 => VectActive::Exception(Exception::UsageFault),
  8e:	f88d 0016 	strb.w	r0, [sp, #22]
  92:	f89d 0016 	ldrb.w	r0, [sp, #22]
  96:	f88d 0011 	strb.w	r0, [sp, #17]
  9a:	2001      	movs	r0, #1
  9c:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  a0:	e04c      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  a2:	2005      	movs	r0, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:285
            #[cfg(any(armv8m, target_arch = "x86_64"))]
            7 => VectActive::Exception(Exception::SecureFault),
            11 => VectActive::Exception(Exception::SVCall),
  a4:	f88d 0017 	strb.w	r0, [sp, #23]
  a8:	f89d 0017 	ldrb.w	r0, [sp, #23]
  ac:	f88d 0011 	strb.w	r0, [sp, #17]
  b0:	2001      	movs	r0, #1
  b2:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  b6:	e041      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  b8:	2006      	movs	r0, #6
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:287
            #[cfg(not(armv6m))]
            12 => VectActive::Exception(Exception::DebugMonitor),
  ba:	f88d 0018 	strb.w	r0, [sp, #24]
  be:	f89d 0018 	ldrb.w	r0, [sp, #24]
  c2:	f88d 0011 	strb.w	r0, [sp, #17]
  c6:	2001      	movs	r0, #1
  c8:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  cc:	e036      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  ce:	2007      	movs	r0, #7
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:288
            14 => VectActive::Exception(Exception::PendSV),
  d0:	f88d 0019 	strb.w	r0, [sp, #25]
  d4:	f89d 0019 	ldrb.w	r0, [sp, #25]
  d8:	f88d 0011 	strb.w	r0, [sp, #17]
  dc:	2001      	movs	r0, #1
  de:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  e2:	e02b      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  e4:	2008      	movs	r0, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:289
            15 => VectActive::Exception(Exception::SysTick),
  e6:	f88d 001a 	strb.w	r0, [sp, #26]
  ea:	f89d 001a 	ldrb.w	r0, [sp, #26]
  ee:	f88d 0011 	strb.w	r0, [sp, #17]
  f2:	2001      	movs	r0, #1
  f4:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
  f8:	e020      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
  fa:	f10d 000b 	add.w	r0, sp, #11
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:290
            irqn if irqn >= 16 => VectActive::Interrupt { irqn },
  fe:	9007      	str	r0, [sp, #28]
 100:	9807      	ldr	r0, [sp, #28]
 102:	7800      	ldrb	r0, [r0, #0]
 104:	2810      	cmp	r0, #16
 106:	d30c      	bcc.n	122 <cortex_m::peripheral::scb::VectActive::from+0x122>
 108:	e7ff      	b.n	10a <cortex_m::peripheral::scb::VectActive::from+0x10a>
 10a:	f89d 000b 	ldrb.w	r0, [sp, #11]
 10e:	f88d 001b 	strb.w	r0, [sp, #27]
 112:	f89d 001b 	ldrb.w	r0, [sp, #27]
 116:	f88d 0011 	strb.w	r0, [sp, #17]
 11a:	2002      	movs	r0, #2
 11c:	f88d 0010 	strb.w	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
 120:	e00c      	b.n	13c <cortex_m::peripheral::scb::VectActive::from+0x13c>
 122:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:291
            _ => return None,
 124:	f8ad 000c 	strh.w	r0, [sp, #12]
 128:	2003      	movs	r0, #3
 12a:	f88d 000c 	strb.w	r0, [sp, #12]
 12e:	e7ff      	b.n	130 <cortex_m::peripheral::scb::VectActive::from+0x130>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:293
        })
    }
 130:	f89d 000c 	ldrb.w	r0, [sp, #12]
 134:	f89d 100d 	ldrb.w	r1, [sp, #13]
 138:	b008      	add	sp, #32
 13a:	4770      	bx	lr
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:273
        Some(match vect_active {
 13c:	f89d 0010 	ldrb.w	r0, [sp, #16]
 140:	f89d 1011 	ldrb.w	r1, [sp, #17]
 144:	f88d 000c 	strb.w	r0, [sp, #12]
 148:	f88d 100d 	strb.w	r1, [sp, #13]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:293
    }
 14c:	e7f0      	b.n	130 <cortex_m::peripheral::scb::VectActive::from+0x130>

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h32ed0e9cae391dc1E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep::{{closure}}>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h32ed0e9cae391dc1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:587

impl SCB {
    /// Set the SLEEPDEEP bit in the SCR register
    pub fn set_sleepdeep(&mut self) {
        unsafe {
            self.scr.modify(|scr| scr | SCB_SCR_SLEEPDEEP);
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f040 0004 	orr.w	r0, r0, #4
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h33e1bbf1b39a2261E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep::{{closure}}>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h33e1bbf1b39a2261E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:594
    }

    /// Clear the SLEEPDEEP bit in the SCR register
    pub fn clear_sleepdeep(&mut self) {
        unsafe {
            self.scr.modify(|scr| scr & !SCB_SCR_SLEEPDEEP);
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f020 0004 	bic.w	r0, r0, #4
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h287835424c6b5a43E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit::{{closure}}>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h287835424c6b5a43E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:605

impl SCB {
    /// Set the SLEEPONEXIT bit in the SCR register
    pub fn set_sleeponexit(&mut self) {
        unsafe {
            self.scr.modify(|scr| scr | SCB_SCR_SLEEPONEXIT);
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f040 0002 	orr.w	r0, r0, #2
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h4d0aa2b019631bd7E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit::{{closure}}>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h4d0aa2b019631bd7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:612
    }

    /// Clear the SLEEPONEXIT bit in the SCR register
    pub fn clear_sleeponexit(&mut self) {
        unsafe {
            self.scr.modify(|scr| scr & !SCB_SCR_SLEEPONEXIT);
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f020 0002 	bic.w	r0, r0, #2
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset28_$u7b$$u7b$closure$u7d$$u7d$17h8edd752de7b76079E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset::{{closure}}>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset28_$u7b$$u7b$closure$u7d$$u7d$17h8edd752de7b76079E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:628
    #[deprecated(since = "0.6.1", note = "Use `SCB::sys_reset`")]
    pub fn system_reset(&mut self) -> ! {
        crate::asm::dsb();
        unsafe {
            self.aircr.modify(
                |r| {
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:630
                    SCB_AIRCR_VECTKEY | // otherwise the write is ignored
            r & SCB_AIRCR_PRIGROUP_MASK | // keep priority group unchanged
   6:	9802      	ldr	r0, [sp, #8]
   8:	f400 60a0 	and.w	r0, r0, #1280	; 0x500
   c:	2204      	movs	r2, #4
   e:	f2c0 52fa 	movt	r2, #1530	; 0x5fa
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:629
                    SCB_AIRCR_VECTKEY | // otherwise the write is ignored
  12:	4310      	orrs	r0, r2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:632
            SCB_AIRCR_SYSRESETREQ
                }, // set the bit
  14:	9100      	str	r1, [sp, #0]
  16:	b003      	add	sp, #12
  18:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset28_$u7b$$u7b$closure$u7d$$u7d$17he3bd4db149308f48E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::sys_reset::{{closure}}>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$9sys_reset28_$u7b$$u7b$closure$u7d$$u7d$17he3bd4db149308f48E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:647
    /// Initiate a system reset request to reset the MCU
    pub fn sys_reset() -> ! {
        crate::asm::dsb();
        unsafe {
            (*Self::ptr()).aircr.modify(
                |r| {
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:649
                    SCB_AIRCR_VECTKEY | // otherwise the write is ignored
            r & SCB_AIRCR_PRIGROUP_MASK | // keep priority group unchanged
   6:	9802      	ldr	r0, [sp, #8]
   8:	f400 60a0 	and.w	r0, r0, #1280	; 0x500
   c:	2204      	movs	r2, #4
   e:	f2c0 52fa 	movt	r2, #1530	; 0x5fa
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:648
                    SCB_AIRCR_VECTKEY | // otherwise the write is ignored
  12:	4310      	orrs	r0, r2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:651
            SCB_AIRCR_SYSRESETREQ
                }, // set the bit
  14:	9100      	str	r1, [sp, #0]
  16:	b003      	add	sp, #12
  18:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb13SystemHandler5index17hfe6794ca973921bbE:

00000000 <cortex_m::peripheral::scb::SystemHandler::index>:
_ZN8cortex_m10peripheral3scb13SystemHandler5index17hfe6794ca973921bbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:748
    /// System Tick interrupt
    SysTick,
}

impl SystemHandler {
    fn index(&self) -> u8 {
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:751
        match *self {
            #[cfg(not(armv6m))]
            SystemHandler::MemoryManagement => 4,
   6:	9802      	ldr	r0, [sp, #8]
   8:	7800      	ldrb	r0, [r0, #0]
   a:	4602      	mov	r2, r0
   c:	2806      	cmp	r0, #6
   e:	9101      	str	r1, [sp, #4]
  10:	9200      	str	r2, [sp, #0]
  12:	d806      	bhi.n	22 <cortex_m::peripheral::scb::SystemHandler::index+0x22>
  14:	9900      	ldr	r1, [sp, #0]
  16:	e8df f001 	tbb	[pc, r1]
  1a:	0905      	.short	0x0905
  1c:	1915110d 	.word	0x1915110d
  20:	001d      	.short	0x001d
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:764
            #[cfg(not(armv6m))]
            SystemHandler::DebugMonitor => 12,
            SystemHandler::PendSV => 14,
            SystemHandler::SysTick => 15,
        }
    }
  22:	defe      	udf	#254	; 0xfe
  24:	2004      	movs	r0, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:751
            SystemHandler::MemoryManagement => 4,
  26:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:749
        match *self {
  2a:	e017      	b.n	5c <cortex_m::peripheral::scb::SystemHandler::index+0x5c>
  2c:	2005      	movs	r0, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:753
            SystemHandler::BusFault => 5,
  2e:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:749
        match *self {
  32:	e013      	b.n	5c <cortex_m::peripheral::scb::SystemHandler::index+0x5c>
  34:	2006      	movs	r0, #6
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:755
            SystemHandler::UsageFault => 6,
  36:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:749
        match *self {
  3a:	e00f      	b.n	5c <cortex_m::peripheral::scb::SystemHandler::index+0x5c>
  3c:	200b      	movs	r0, #11
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:758
            SystemHandler::SVCall => 11,
  3e:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:749
        match *self {
  42:	e00b      	b.n	5c <cortex_m::peripheral::scb::SystemHandler::index+0x5c>
  44:	200c      	movs	r0, #12
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:760
            SystemHandler::DebugMonitor => 12,
  46:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:749
        match *self {
  4a:	e007      	b.n	5c <cortex_m::peripheral::scb::SystemHandler::index+0x5c>
  4c:	200e      	movs	r0, #14
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:761
            SystemHandler::PendSV => 14,
  4e:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:749
        match *self {
  52:	e003      	b.n	5c <cortex_m::peripheral::scb::SystemHandler::index+0x5c>
  54:	200f      	movs	r0, #15
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:762
            SystemHandler::SysTick => 15,
  56:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:749
        match *self {
  5a:	e7ff      	b.n	5c <cortex_m::peripheral::scb::SystemHandler::index+0x5c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:764
    }
  5c:	f89d 000f 	ldrb.w	r0, [sp, #15]
  60:	b004      	add	sp, #16
  62:	4770      	bx	lr

Disassembly of section .text._ZN77_$LT$cortex_m..peripheral..scb..FpuAccessMode$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6007df4216a2bfaE:

00000000 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt>:
_ZN77_$LT$cortex_m..peripheral..scb..FpuAccessMode$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6007df4216a2bfaE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:100
#[derive(Clone, Copy, Debug, PartialEq, Eq)]
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9003      	str	r0, [sp, #12]
   a:	9104      	str	r1, [sp, #16]
   c:	9803      	ldr	r0, [sp, #12]
   e:	9006      	str	r0, [sp, #24]
  10:	9806      	ldr	r0, [sp, #24]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	4601      	mov	r1, r0
  16:	2800      	cmp	r0, #0
  18:	9202      	str	r2, [sp, #8]
  1a:	9301      	str	r3, [sp, #4]
  1c:	9100      	str	r1, [sp, #0]
  1e:	d009      	beq.n	34 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x34>
  20:	e7ff      	b.n	22 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x22>
  22:	9800      	ldr	r0, [sp, #0]
  24:	2801      	cmp	r0, #1
  26:	d016      	beq.n	56 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x56>
  28:	e7ff      	b.n	2a <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x2a>
  2a:	9800      	ldr	r0, [sp, #0]
  2c:	2802      	cmp	r0, #2
  2e:	d023      	beq.n	78 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x78>
  30:	e7ff      	b.n	32 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x32>
  32:	defe      	udf	#254	; 0xfe
  34:	9904      	ldr	r1, [sp, #16]
  36:	f240 0200 	movw	r2, #0
  3a:	f2c0 0200 	movt	r2, #0
  3e:	a807      	add	r0, sp, #28
  40:	2308      	movs	r3, #8
  42:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  46:	e7ff      	b.n	48 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x48>
  48:	a807      	add	r0, sp, #28
  4a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  4e:	f88d 0017 	strb.w	r0, [sp, #23]
  52:	e7ff      	b.n	54 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x54>
  54:	e021      	b.n	9a <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x9a>
  56:	9904      	ldr	r1, [sp, #16]
  58:	f240 0200 	movw	r2, #0
  5c:	f2c0 0200 	movt	r2, #0
  60:	a80a      	add	r0, sp, #40	; 0x28
  62:	2307      	movs	r3, #7
  64:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  68:	e7ff      	b.n	6a <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x6a>
  6a:	a80a      	add	r0, sp, #40	; 0x28
  6c:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  70:	f88d 0017 	strb.w	r0, [sp, #23]
  74:	e7ff      	b.n	76 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x76>
  76:	e010      	b.n	9a <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x9a>
  78:	9904      	ldr	r1, [sp, #16]
  7a:	f240 0200 	movw	r2, #0
  7e:	f2c0 0200 	movt	r2, #0
  82:	a80d      	add	r0, sp, #52	; 0x34
  84:	230a      	movs	r3, #10
  86:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  8a:	e7ff      	b.n	8c <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x8c>
  8c:	a80d      	add	r0, sp, #52	; 0x34
  8e:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  92:	f88d 0017 	strb.w	r0, [sp, #23]
  96:	e7ff      	b.n	98 <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x98>
  98:	e7ff      	b.n	9a <<cortex_m::peripheral::scb::FpuAccessMode as core::fmt::Debug>::fmt+0x9a>
  9a:	f89d 0017 	ldrb.w	r0, [sp, #23]
  9e:	b010      	add	sp, #64	; 0x40
  a0:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hbe99212960ac2516E:

00000000 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt>:
_ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17hbe99212960ac2516E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:191
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b580      	push	{r7, lr}
   2:	b0a2      	sub	sp, #136	; 0x88
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9003      	str	r0, [sp, #12]
   a:	9104      	str	r1, [sp, #16]
   c:	9803      	ldr	r0, [sp, #12]
   e:	9006      	str	r0, [sp, #24]
  10:	9806      	ldr	r0, [sp, #24]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	4601      	mov	r1, r0
  16:	2808      	cmp	r0, #8
  18:	9202      	str	r2, [sp, #8]
  1a:	9301      	str	r3, [sp, #4]
  1c:	9100      	str	r1, [sp, #0]
  1e:	d807      	bhi.n	30 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x30>
  20:	9900      	ldr	r1, [sp, #0]
  22:	e8df f001 	tbb	[pc, r1]
  26:	1706      	.short	0x1706
  28:	5b4a3928 	.word	0x5b4a3928
  2c:	008e7d6c 	.word	0x008e7d6c
  30:	defe      	udf	#254	; 0xfe
  32:	9904      	ldr	r1, [sp, #16]
  34:	f240 0200 	movw	r2, #0
  38:	f2c0 0200 	movt	r2, #0
  3c:	a807      	add	r0, sp, #28
  3e:	230e      	movs	r3, #14
  40:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  44:	e7ff      	b.n	46 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x46>
  46:	a807      	add	r0, sp, #28
  48:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  4c:	f88d 0017 	strb.w	r0, [sp, #23]
  50:	e7ff      	b.n	52 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x52>
  52:	e087      	b.n	164 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x164>
  54:	9904      	ldr	r1, [sp, #16]
  56:	f240 0200 	movw	r2, #0
  5a:	f2c0 0200 	movt	r2, #0
  5e:	a80a      	add	r0, sp, #40	; 0x28
  60:	2309      	movs	r3, #9
  62:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  66:	e7ff      	b.n	68 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x68>
  68:	a80a      	add	r0, sp, #40	; 0x28
  6a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  6e:	f88d 0017 	strb.w	r0, [sp, #23]
  72:	e7ff      	b.n	74 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x74>
  74:	e076      	b.n	164 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x164>
  76:	9904      	ldr	r1, [sp, #16]
  78:	f240 0200 	movw	r2, #0
  7c:	f2c0 0200 	movt	r2, #0
  80:	a80d      	add	r0, sp, #52	; 0x34
  82:	2310      	movs	r3, #16
  84:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  88:	e7ff      	b.n	8a <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x8a>
  8a:	a80d      	add	r0, sp, #52	; 0x34
  8c:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  90:	f88d 0017 	strb.w	r0, [sp, #23]
  94:	e7ff      	b.n	96 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x96>
  96:	e065      	b.n	164 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x164>
  98:	9904      	ldr	r1, [sp, #16]
  9a:	f240 0200 	movw	r2, #0
  9e:	f2c0 0200 	movt	r2, #0
  a2:	a810      	add	r0, sp, #64	; 0x40
  a4:	2308      	movs	r3, #8
  a6:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  aa:	e7ff      	b.n	ac <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0xac>
  ac:	a810      	add	r0, sp, #64	; 0x40
  ae:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  b2:	f88d 0017 	strb.w	r0, [sp, #23]
  b6:	e7ff      	b.n	b8 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0xb8>
  b8:	e054      	b.n	164 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x164>
  ba:	9904      	ldr	r1, [sp, #16]
  bc:	f240 0200 	movw	r2, #0
  c0:	f2c0 0200 	movt	r2, #0
  c4:	a813      	add	r0, sp, #76	; 0x4c
  c6:	230a      	movs	r3, #10
  c8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  cc:	e7ff      	b.n	ce <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0xce>
  ce:	a813      	add	r0, sp, #76	; 0x4c
  d0:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  d4:	f88d 0017 	strb.w	r0, [sp, #23]
  d8:	e7ff      	b.n	da <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0xda>
  da:	e043      	b.n	164 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x164>
  dc:	9904      	ldr	r1, [sp, #16]
  de:	f240 0200 	movw	r2, #0
  e2:	f2c0 0200 	movt	r2, #0
  e6:	a816      	add	r0, sp, #88	; 0x58
  e8:	2306      	movs	r3, #6
  ea:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  ee:	e7ff      	b.n	f0 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0xf0>
  f0:	a816      	add	r0, sp, #88	; 0x58
  f2:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  f6:	f88d 0017 	strb.w	r0, [sp, #23]
  fa:	e7ff      	b.n	fc <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0xfc>
  fc:	e032      	b.n	164 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x164>
  fe:	9904      	ldr	r1, [sp, #16]
 100:	f240 0200 	movw	r2, #0
 104:	f2c0 0200 	movt	r2, #0
 108:	a819      	add	r0, sp, #100	; 0x64
 10a:	230c      	movs	r3, #12
 10c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 110:	e7ff      	b.n	112 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x112>
 112:	a819      	add	r0, sp, #100	; 0x64
 114:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 118:	f88d 0017 	strb.w	r0, [sp, #23]
 11c:	e7ff      	b.n	11e <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x11e>
 11e:	e021      	b.n	164 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x164>
 120:	9904      	ldr	r1, [sp, #16]
 122:	f240 0200 	movw	r2, #0
 126:	f2c0 0200 	movt	r2, #0
 12a:	a81c      	add	r0, sp, #112	; 0x70
 12c:	2306      	movs	r3, #6
 12e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 132:	e7ff      	b.n	134 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x134>
 134:	a81c      	add	r0, sp, #112	; 0x70
 136:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 13a:	f88d 0017 	strb.w	r0, [sp, #23]
 13e:	e7ff      	b.n	140 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x140>
 140:	e010      	b.n	164 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x164>
 142:	9904      	ldr	r1, [sp, #16]
 144:	f240 0200 	movw	r2, #0
 148:	f2c0 0200 	movt	r2, #0
 14c:	a81f      	add	r0, sp, #124	; 0x7c
 14e:	2307      	movs	r3, #7
 150:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 154:	e7ff      	b.n	156 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x156>
 156:	a81f      	add	r0, sp, #124	; 0x7c
 158:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 15c:	f88d 0017 	strb.w	r0, [sp, #23]
 160:	e7ff      	b.n	162 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x162>
 162:	e7ff      	b.n	164 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x164>
 164:	f89d 0017 	ldrb.w	r0, [sp, #23]
 168:	b022      	add	sp, #136	; 0x88
 16a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hadd81f1774ddce3cE:

00000000 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt>:
_ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hadd81f1774ddce3cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:255
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b580      	push	{r7, lr}
   2:	b096      	sub	sp, #88	; 0x58
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
   c:	9806      	ldr	r0, [sp, #24]
   e:	9009      	str	r0, [sp, #36]	; 0x24
  10:	9809      	ldr	r0, [sp, #36]	; 0x24
  12:	7800      	ldrb	r0, [r0, #0]
  14:	4601      	mov	r1, r0
  16:	2800      	cmp	r0, #0
  18:	9205      	str	r2, [sp, #20]
  1a:	9304      	str	r3, [sp, #16]
  1c:	9103      	str	r1, [sp, #12]
  1e:	d009      	beq.n	34 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x34>
  20:	e7ff      	b.n	22 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x22>
  22:	9803      	ldr	r0, [sp, #12]
  24:	2801      	cmp	r0, #1
  26:	d016      	beq.n	56 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x56>
  28:	e7ff      	b.n	2a <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x2a>
  2a:	9803      	ldr	r0, [sp, #12]
  2c:	2802      	cmp	r0, #2
  2e:	d032      	beq.n	96 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x96>
  30:	e7ff      	b.n	32 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x32>
  32:	defe      	udf	#254	; 0xfe
  34:	9907      	ldr	r1, [sp, #28]
  36:	f240 0200 	movw	r2, #0
  3a:	f2c0 0200 	movt	r2, #0
  3e:	a80a      	add	r0, sp, #40	; 0x28
  40:	230a      	movs	r3, #10
  42:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  46:	e7ff      	b.n	48 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x48>
  48:	a80a      	add	r0, sp, #40	; 0x28
  4a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  4e:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
  52:	e7ff      	b.n	54 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x54>
  54:	e046      	b.n	e4 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0xe4>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:261
    Exception(Exception),
  56:	9809      	ldr	r0, [sp, #36]	; 0x24
  58:	3001      	adds	r0, #1
  5a:	900d      	str	r0, [sp, #52]	; 0x34
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:255
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
  5c:	9907      	ldr	r1, [sp, #28]
  5e:	f240 0200 	movw	r2, #0
  62:	f2c0 0200 	movt	r2, #0
  66:	a80e      	add	r0, sp, #56	; 0x38
  68:	2309      	movs	r3, #9
  6a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  6e:	e7ff      	b.n	70 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x70>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:261
    Exception(Exception),
  70:	980d      	ldr	r0, [sp, #52]	; 0x34
  72:	9011      	str	r0, [sp, #68]	; 0x44
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:255
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
  74:	f240 0200 	movw	r2, #0
  78:	f2c0 0200 	movt	r2, #0
  7c:	a80e      	add	r0, sp, #56	; 0x38
  7e:	a911      	add	r1, sp, #68	; 0x44
  80:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::field>
  84:	9002      	str	r0, [sp, #8]
  86:	e7ff      	b.n	88 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x88>
  88:	a80e      	add	r0, sp, #56	; 0x38
  8a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  8e:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
  92:	e7ff      	b.n	94 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x94>
  94:	e026      	b.n	e4 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0xe4>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:266
        irqn: u8,
  96:	9809      	ldr	r0, [sp, #36]	; 0x24
  98:	3001      	adds	r0, #1
  9a:	9012      	str	r0, [sp, #72]	; 0x48
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:255
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
  9c:	9907      	ldr	r1, [sp, #28]
  9e:	f240 0200 	movw	r2, #0
  a2:	f2c0 0200 	movt	r2, #0
  a6:	a813      	add	r0, sp, #76	; 0x4c
  a8:	2309      	movs	r3, #9
  aa:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_struct>
  ae:	e7ff      	b.n	b0 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0xb0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:266
        irqn: u8,
  b0:	9812      	ldr	r0, [sp, #72]	; 0x48
  b2:	9015      	str	r0, [sp, #84]	; 0x54
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:255
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
  b4:	f240 0000 	movw	r0, #0
  b8:	f2c0 0000 	movt	r0, #0
  bc:	4669      	mov	r1, sp
  be:	6008      	str	r0, [r1, #0]
  c0:	f240 0100 	movw	r1, #0
  c4:	f2c0 0100 	movt	r1, #0
  c8:	a813      	add	r0, sp, #76	; 0x4c
  ca:	2204      	movs	r2, #4
  cc:	ab15      	add	r3, sp, #84	; 0x54
  ce:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::field>
  d2:	9001      	str	r0, [sp, #4]
  d4:	e7ff      	b.n	d6 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0xd6>
  d6:	a813      	add	r0, sp, #76	; 0x4c
  d8:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::finish>
  dc:	f88d 0023 	strb.w	r0, [sp, #35]	; 0x23
  e0:	e7ff      	b.n	e2 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0xe2>
  e2:	e7ff      	b.n	e4 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0xe4>
  e4:	f89d 0023 	ldrb.w	r0, [sp, #35]	; 0x23
  e8:	b016      	add	sp, #88	; 0x58
  ea:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17hb6ebeed8caa5eb4dE:

00000000 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt>:
_ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17hb6ebeed8caa5eb4dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/scb.rs:713
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b580      	push	{r7, lr}
   2:	b09c      	sub	sp, #112	; 0x70
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9003      	str	r0, [sp, #12]
   a:	9104      	str	r1, [sp, #16]
   c:	9803      	ldr	r0, [sp, #12]
   e:	9006      	str	r0, [sp, #24]
  10:	9806      	ldr	r0, [sp, #24]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	4601      	mov	r1, r0
  16:	2806      	cmp	r0, #6
  18:	9202      	str	r2, [sp, #8]
  1a:	9301      	str	r3, [sp, #4]
  1c:	9100      	str	r1, [sp, #0]
  1e:	d806      	bhi.n	2e <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x2e>
  20:	9900      	ldr	r1, [sp, #0]
  22:	e8df f001 	tbb	[pc, r1]
  26:	1605      	.short	0x1605
  28:	5a493827 	.word	0x5a493827
  2c:	006b      	.short	0x006b
  2e:	defe      	udf	#254	; 0xfe
  30:	9904      	ldr	r1, [sp, #16]
  32:	f240 0200 	movw	r2, #0
  36:	f2c0 0200 	movt	r2, #0
  3a:	a807      	add	r0, sp, #28
  3c:	2310      	movs	r3, #16
  3e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  42:	e7ff      	b.n	44 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x44>
  44:	a807      	add	r0, sp, #28
  46:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  4a:	f88d 0017 	strb.w	r0, [sp, #23]
  4e:	e7ff      	b.n	50 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x50>
  50:	e065      	b.n	11e <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x11e>
  52:	9904      	ldr	r1, [sp, #16]
  54:	f240 0200 	movw	r2, #0
  58:	f2c0 0200 	movt	r2, #0
  5c:	a80a      	add	r0, sp, #40	; 0x28
  5e:	2308      	movs	r3, #8
  60:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  64:	e7ff      	b.n	66 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x66>
  66:	a80a      	add	r0, sp, #40	; 0x28
  68:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  6c:	f88d 0017 	strb.w	r0, [sp, #23]
  70:	e7ff      	b.n	72 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x72>
  72:	e054      	b.n	11e <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x11e>
  74:	9904      	ldr	r1, [sp, #16]
  76:	f240 0200 	movw	r2, #0
  7a:	f2c0 0200 	movt	r2, #0
  7e:	a80d      	add	r0, sp, #52	; 0x34
  80:	230a      	movs	r3, #10
  82:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  86:	e7ff      	b.n	88 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x88>
  88:	a80d      	add	r0, sp, #52	; 0x34
  8a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  8e:	f88d 0017 	strb.w	r0, [sp, #23]
  92:	e7ff      	b.n	94 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x94>
  94:	e043      	b.n	11e <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x11e>
  96:	9904      	ldr	r1, [sp, #16]
  98:	f240 0200 	movw	r2, #0
  9c:	f2c0 0200 	movt	r2, #0
  a0:	a810      	add	r0, sp, #64	; 0x40
  a2:	2306      	movs	r3, #6
  a4:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  a8:	e7ff      	b.n	aa <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0xaa>
  aa:	a810      	add	r0, sp, #64	; 0x40
  ac:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  b0:	f88d 0017 	strb.w	r0, [sp, #23]
  b4:	e7ff      	b.n	b6 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0xb6>
  b6:	e032      	b.n	11e <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x11e>
  b8:	9904      	ldr	r1, [sp, #16]
  ba:	f240 0200 	movw	r2, #0
  be:	f2c0 0200 	movt	r2, #0
  c2:	a813      	add	r0, sp, #76	; 0x4c
  c4:	230c      	movs	r3, #12
  c6:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  ca:	e7ff      	b.n	cc <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0xcc>
  cc:	a813      	add	r0, sp, #76	; 0x4c
  ce:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  d2:	f88d 0017 	strb.w	r0, [sp, #23]
  d6:	e7ff      	b.n	d8 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0xd8>
  d8:	e021      	b.n	11e <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x11e>
  da:	9904      	ldr	r1, [sp, #16]
  dc:	f240 0200 	movw	r2, #0
  e0:	f2c0 0200 	movt	r2, #0
  e4:	a816      	add	r0, sp, #88	; 0x58
  e6:	2306      	movs	r3, #6
  e8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  ec:	e7ff      	b.n	ee <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0xee>
  ee:	a816      	add	r0, sp, #88	; 0x58
  f0:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  f4:	f88d 0017 	strb.w	r0, [sp, #23]
  f8:	e7ff      	b.n	fa <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0xfa>
  fa:	e010      	b.n	11e <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x11e>
  fc:	9904      	ldr	r1, [sp, #16]
  fe:	f240 0200 	movw	r2, #0
 102:	f2c0 0200 	movt	r2, #0
 106:	a819      	add	r0, sp, #100	; 0x64
 108:	2307      	movs	r3, #7
 10a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 10e:	e7ff      	b.n	110 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x110>
 110:	a819      	add	r0, sp, #100	; 0x64
 112:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 116:	f88d 0017 	strb.w	r0, [sp, #23]
 11a:	e7ff      	b.n	11c <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x11c>
 11c:	e7ff      	b.n	11e <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x11e>
 11e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 122:	b01c      	add	sp, #112	; 0x70
 124:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.10.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.10
0000034a l       .debug_str	00000000 
00000594 l       .debug_str	00000000 
0000057a l       .debug_str	00000000 
00000570 l       .debug_str	00000000 
000005c3 l       .debug_str	00000000 
00000557 l       .debug_str	00000000 
00000550 l       .debug_str	00000000 
000005b8 l       .debug_str	00000000 
00000547 l       .debug_str	00000000 
000005b1 l       .debug_str	00000000 
00000542 l       .debug_str	00000000 
00000526 l       .debug_str	00000000 
00000502 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000122 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
0000012c l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
0000015b l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
000001b2 l       .debug_str	00000000 
000001bc l       .debug_str	00000000 
000001c1 l       .debug_str	00000000 
00000208 l       .debug_str	00000000 
00000214 l       .debug_str	00000000 
0000027e l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
000002e8 l       .debug_str	00000000 
000002ed l       .debug_str	00000000 
00000313 l       .debug_str	00000000 
00000319 l       .debug_str	00000000 
00000323 l       .debug_str	00000000 
00000329 l       .debug_str	00000000 
00000334 l       .debug_str	00000000 
00000336 l       .debug_str	00000000 
0000033c l       .debug_str	00000000 
00000340 l       .debug_str	00000000 
00000345 l       .debug_str	00000000 
000004eb l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000356 l       .debug_str	00000000 
0000035d l       .debug_str	00000000 
00000362 l       .debug_str	00000000 
00000368 l       .debug_str	00000000 
0000036a l       .debug_str	00000000 
0000036f l       .debug_str	00000000 
00000373 l       .debug_str	00000000 
00000381 l       .debug_str	00000000 
0000038b l       .debug_str	00000000 
0000038f l       .debug_str	00000000 
00000397 l       .debug_str	00000000 
0000039f l       .debug_str	00000000 
000003a6 l       .debug_str	00000000 
000003ba l       .debug_str	00000000 
000003c6 l       .debug_str	00000000 
000003d1 l       .debug_str	00000000 
000003d8 l       .debug_str	00000000 
000003de l       .debug_str	00000000 
000003e2 l       .debug_str	00000000 
000003e8 l       .debug_str	00000000 
000003ee l       .debug_str	00000000 
000003f1 l       .debug_str	00000000 
00000400 l       .debug_str	00000000 
00000407 l       .debug_str	00000000 
0000040b l       .debug_str	00000000 
00000414 l       .debug_str	00000000 
00000420 l       .debug_str	00000000 
00000439 l       .debug_str	00000000 
0000043e l       .debug_str	00000000 
0000044f l       .debug_str	00000000 
00000459 l       .debug_str	00000000 
000004b7 l       .debug_str	00000000 
000004c2 l       .debug_str	00000000 
000004df l       .debug_str	00000000 
000004e3 l       .debug_str	00000000 
000005a8 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.ce917dbf35bcc7d698ccbe1a2964bc86.0	00000001 .Lanon.ce917dbf35bcc7d698ccbe1a2964bc86.0
00000000 l     O .rodata..Lanon.ce917dbf35bcc7d698ccbe1a2964bc86.1	00000001 .Lanon.ce917dbf35bcc7d698ccbe1a2964bc86.1
00000000 l     O .rodata.cst8	00000008 .Lanon.ce917dbf35bcc7d698ccbe1a2964bc86.2
00000000 l     O .rodata..Lanon.ce917dbf35bcc7d698ccbe1a2964bc86.3	00000006 .Lanon.ce917dbf35bcc7d698ccbe1a2964bc86.3
00000000 l     F .text._ZN77_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..cmp..PartialEq$GT$2eq17haf87d13cfaf7b43bE	00000068 <cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq
00000000 l    d  .text._ZN8cortex_m8register7primask7Primask9is_active17he7c988de3701e0e0E	00000000 .text._ZN8cortex_m8register7primask7Primask9is_active17he7c988de3701e0e0E
00000000 l    d  .text._ZN8cortex_m8register7primask7Primask11is_inactive17h35aaabaf57810060E	00000000 .text._ZN8cortex_m8register7primask7Primask11is_inactive17h35aaabaf57810060E
00000000 l    d  .text._ZN77_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..cmp..PartialEq$GT$2eq17haf87d13cfaf7b43bE	00000000 .text._ZN77_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..cmp..PartialEq$GT$2eq17haf87d13cfaf7b43bE
00000000 l    d  .text._ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h9eb5b58466c6aed4E	00000000 .text._ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h9eb5b58466c6aed4E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h9eb5b58466c6aed4E	00000078 <cortex_m::register::primask::Primask as core::fmt::Debug>::fmt
00000000 g     F .text._ZN8cortex_m8register7primask7Primask11is_inactive17h35aaabaf57810060E	00000028 cortex_m::register::primask::Primask::is_inactive
00000000 g     F .text._ZN8cortex_m8register7primask7Primask9is_active17he7c988de3701e0e0E	00000028 cortex_m::register::primask::Primask::is_active



Disassembly of section .text._ZN8cortex_m8register7primask7Primask9is_active17he7c988de3701e0e0E:

00000000 <cortex_m::register::primask::Primask::is_active>:
_ZN8cortex_m8register7primask7Primask9is_active17he7c988de3701e0e0E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/primask.rs:14
    Inactive,
}

impl Primask {
    /// All exceptions with configurable priority are active
    pub fn is_active(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/primask.rs:15
        *self == Primask::Active
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::primask::Primask::is_active>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::primask::Primask::is_active+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/primask.rs:16
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m8register7primask7Primask11is_inactive17h35aaabaf57810060E:

00000000 <cortex_m::register::primask::Primask::is_inactive>:
_ZN8cortex_m8register7primask7Primask11is_inactive17h35aaabaf57810060E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/primask.rs:19

    /// All exceptions with configurable priority are inactive
    pub fn is_inactive(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/primask.rs:20
        *self == Primask::Inactive
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::primask::Primask::is_inactive>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::primask::Primask::is_inactive+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/primask.rs:21
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN77_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..cmp..PartialEq$GT$2eq17haf87d13cfaf7b43bE:

00000000 <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq>:
_ZN77_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..cmp..PartialEq$GT$2eq17haf87d13cfaf7b43bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/primask.rs:4
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b092      	sub	sp, #72	; 0x48
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9007      	str	r0, [sp, #28]
   8:	9108      	str	r1, [sp, #32]
   a:	9807      	ldr	r0, [sp, #28]
   c:	7800      	ldrb	r0, [r0, #0]
   e:	2100      	movs	r1, #0
  10:	910f      	str	r1, [sp, #60]	; 0x3c
  12:	900e      	str	r0, [sp, #56]	; 0x38
  14:	980e      	ldr	r0, [sp, #56]	; 0x38
  16:	990f      	ldr	r1, [sp, #60]	; 0x3c
  18:	9206      	str	r2, [sp, #24]
  1a:	9305      	str	r3, [sp, #20]
  1c:	9004      	str	r0, [sp, #16]
  1e:	9103      	str	r1, [sp, #12]
  20:	e7ff      	b.n	22 <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq+0x22>
  22:	9804      	ldr	r0, [sp, #16]
  24:	900a      	str	r0, [sp, #40]	; 0x28
  26:	9908      	ldr	r1, [sp, #32]
  28:	7809      	ldrb	r1, [r1, #0]
  2a:	2200      	movs	r2, #0
  2c:	9211      	str	r2, [sp, #68]	; 0x44
  2e:	9110      	str	r1, [sp, #64]	; 0x40
  30:	9910      	ldr	r1, [sp, #64]	; 0x40
  32:	9a11      	ldr	r2, [sp, #68]	; 0x44
  34:	9102      	str	r1, [sp, #8]
  36:	9201      	str	r2, [sp, #4]
  38:	e7ff      	b.n	3a <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq+0x3a>
  3a:	9802      	ldr	r0, [sp, #8]
  3c:	900b      	str	r0, [sp, #44]	; 0x2c
  3e:	990a      	ldr	r1, [sp, #40]	; 0x28
  40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  42:	4291      	cmp	r1, r2
  44:	d108      	bne.n	58 <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq+0x58>
  46:	e7ff      	b.n	48 <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq+0x48>
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9908      	ldr	r1, [sp, #32]
  4c:	900c      	str	r0, [sp, #48]	; 0x30
  4e:	910d      	str	r1, [sp, #52]	; 0x34
  50:	2001      	movs	r0, #1
  52:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  56:	e003      	b.n	60 <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq+0x60>
  58:	2000      	movs	r0, #0
  5a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  5e:	e7ff      	b.n	60 <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq+0x60>
  60:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  64:	b012      	add	sp, #72	; 0x48
  66:	4770      	bx	lr

Disassembly of section .text._ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h9eb5b58466c6aed4E:

00000000 <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt>:
_ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h9eb5b58466c6aed4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/primask.rs:4
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	07c1      	lsls	r1, r0, #31
  16:	2900      	cmp	r1, #0
  18:	9203      	str	r2, [sp, #12]
  1a:	9302      	str	r3, [sp, #8]
  1c:	9001      	str	r0, [sp, #4]
  1e:	d005      	beq.n	2c <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x2c>
  20:	e7ff      	b.n	22 <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x22>
  22:	9801      	ldr	r0, [sp, #4]
  24:	2801      	cmp	r0, #1
  26:	d012      	beq.n	4e <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x4e>
  28:	e7ff      	b.n	2a <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x2a>
  2a:	defe      	udf	#254	; 0xfe
  2c:	9905      	ldr	r1, [sp, #20]
  2e:	f240 0200 	movw	r2, #0
  32:	f2c0 0200 	movt	r2, #0
  36:	a808      	add	r0, sp, #32
  38:	2306      	movs	r3, #6
  3a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  3e:	e7ff      	b.n	40 <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x40>
  40:	a808      	add	r0, sp, #32
  42:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  46:	f88d 001b 	strb.w	r0, [sp, #27]
  4a:	e7ff      	b.n	4c <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x4c>
  4c:	e010      	b.n	70 <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x70>
  4e:	9905      	ldr	r1, [sp, #20]
  50:	f240 0200 	movw	r2, #0
  54:	f2c0 0200 	movt	r2, #0
  58:	a80b      	add	r0, sp, #44	; 0x2c
  5a:	2308      	movs	r3, #8
  5c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  60:	e7ff      	b.n	62 <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x62>
  62:	a80b      	add	r0, sp, #44	; 0x2c
  64:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  68:	f88d 001b 	strb.w	r0, [sp, #27]
  6c:	e7ff      	b.n	6e <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x6e>
  6e:	e7ff      	b.n	70 <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x70>
  70:	f89d 001b 	ldrb.w	r0, [sp, #27]
  74:	b00e      	add	sp, #56	; 0x38
  76:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.11.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.11
00000362 l       .debug_str	00000000 
000005ac l       .debug_str	00000000 
00000592 l       .debug_str	00000000 
00000588 l       .debug_str	00000000 
000005db l       .debug_str	00000000 
0000056f l       .debug_str	00000000 
00000568 l       .debug_str	00000000 
000005d0 l       .debug_str	00000000 
0000055f l       .debug_str	00000000 
000005c9 l       .debug_str	00000000 
0000055a l       .debug_str	00000000 
0000053e l       .debug_str	00000000 
0000051a l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000104 l       .debug_str	00000000 
00000107 l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000117 l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000142 l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
00000214 l       .debug_str	00000000 
00000220 l       .debug_str	00000000 
0000028e l       .debug_str	00000000 
00000291 l       .debug_str	00000000 
000002fc l       .debug_str	00000000 
00000301 l       .debug_str	00000000 
0000032b l       .debug_str	00000000 
00000331 l       .debug_str	00000000 
0000033b l       .debug_str	00000000 
00000341 l       .debug_str	00000000 
0000034c l       .debug_str	00000000 
0000034e l       .debug_str	00000000 
00000354 l       .debug_str	00000000 
00000358 l       .debug_str	00000000 
0000035d l       .debug_str	00000000 
00000503 l       .debug_str	00000000 
00000368 l       .debug_str	00000000 
0000036e l       .debug_str	00000000 
00000375 l       .debug_str	00000000 
0000037a l       .debug_str	00000000 
00000380 l       .debug_str	00000000 
00000382 l       .debug_str	00000000 
00000387 l       .debug_str	00000000 
0000038b l       .debug_str	00000000 
00000399 l       .debug_str	00000000 
000003a3 l       .debug_str	00000000 
000003a7 l       .debug_str	00000000 
000003af l       .debug_str	00000000 
000003b7 l       .debug_str	00000000 
000003be l       .debug_str	00000000 
000003d2 l       .debug_str	00000000 
000003de l       .debug_str	00000000 
000003e9 l       .debug_str	00000000 
000003f0 l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
000003fa l       .debug_str	00000000 
00000400 l       .debug_str	00000000 
00000406 l       .debug_str	00000000 
00000409 l       .debug_str	00000000 
00000418 l       .debug_str	00000000 
0000041f l       .debug_str	00000000 
00000423 l       .debug_str	00000000 
0000042c l       .debug_str	00000000 
00000438 l       .debug_str	00000000 
00000451 l       .debug_str	00000000 
00000456 l       .debug_str	00000000 
00000467 l       .debug_str	00000000 
00000471 l       .debug_str	00000000 
000004cf l       .debug_str	00000000 
000004da l       .debug_str	00000000 
000004f7 l       .debug_str	00000000 
000004fb l       .debug_str	00000000 
000005c0 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.430dbb11bc38109452269731a82ff4b6.0	00000001 .Lanon.430dbb11bc38109452269731a82ff4b6.0
00000000 l     O .rodata..Lanon.430dbb11bc38109452269731a82ff4b6.1	00000001 .Lanon.430dbb11bc38109452269731a82ff4b6.1
00000000 l     O .rodata.cst8	00000008 .Lanon.430dbb11bc38109452269731a82ff4b6.2
00000000 l     O .rodata..Lanon.430dbb11bc38109452269731a82ff4b6.3	00000006 .Lanon.430dbb11bc38109452269731a82ff4b6.3
00000000 l     F .text._ZN81_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9d7c43255bbc4725E	00000068 <cortex_m::register::faultmask::Faultmask as core::cmp::PartialEq>::eq
00000000 l    d  .text._ZN8cortex_m8register9faultmask9Faultmask9is_active17hff3a5d2a9a720b97E	00000000 .text._ZN8cortex_m8register9faultmask9Faultmask9is_active17hff3a5d2a9a720b97E
00000000 l    d  .text._ZN8cortex_m8register9faultmask9Faultmask11is_inactive17h10289021abbcdc7cE	00000000 .text._ZN8cortex_m8register9faultmask9Faultmask11is_inactive17h10289021abbcdc7cE
00000000 l    d  .text._ZN81_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9d7c43255bbc4725E	00000000 .text._ZN81_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9d7c43255bbc4725E
00000000 l    d  .text._ZN77_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f0a998297a3b544E	00000000 .text._ZN77_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f0a998297a3b544E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN77_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f0a998297a3b544E	00000078 <cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt
00000000 g     F .text._ZN8cortex_m8register9faultmask9Faultmask11is_inactive17h10289021abbcdc7cE	00000028 cortex_m::register::faultmask::Faultmask::is_inactive
00000000 g     F .text._ZN8cortex_m8register9faultmask9Faultmask9is_active17hff3a5d2a9a720b97E	00000028 cortex_m::register::faultmask::Faultmask::is_active



Disassembly of section .text._ZN8cortex_m8register9faultmask9Faultmask9is_active17hff3a5d2a9a720b97E:

00000000 <cortex_m::register::faultmask::Faultmask::is_active>:
_ZN8cortex_m8register9faultmask9Faultmask9is_active17hff3a5d2a9a720b97E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/faultmask.rs:14
    Inactive,
}

impl Faultmask {
    /// All exceptions are active
    pub fn is_active(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/faultmask.rs:15
        *self == Faultmask::Active
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::faultmask::Faultmask::is_active>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::faultmask::Faultmask::is_active+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/faultmask.rs:16
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m8register9faultmask9Faultmask11is_inactive17h10289021abbcdc7cE:

00000000 <cortex_m::register::faultmask::Faultmask::is_inactive>:
_ZN8cortex_m8register9faultmask9Faultmask11is_inactive17h10289021abbcdc7cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/faultmask.rs:19

    /// All exceptions, except for NMI, are inactive
    pub fn is_inactive(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/faultmask.rs:20
        *self == Faultmask::Inactive
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::faultmask::Faultmask::is_inactive>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::faultmask::Faultmask::is_inactive+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/faultmask.rs:21
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN81_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9d7c43255bbc4725E:

00000000 <<cortex_m::register::faultmask::Faultmask as core::cmp::PartialEq>::eq>:
_ZN81_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9d7c43255bbc4725E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/faultmask.rs:4
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b092      	sub	sp, #72	; 0x48
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9007      	str	r0, [sp, #28]
   8:	9108      	str	r1, [sp, #32]
   a:	9807      	ldr	r0, [sp, #28]
   c:	7800      	ldrb	r0, [r0, #0]
   e:	2100      	movs	r1, #0
  10:	910f      	str	r1, [sp, #60]	; 0x3c
  12:	900e      	str	r0, [sp, #56]	; 0x38
  14:	980e      	ldr	r0, [sp, #56]	; 0x38
  16:	990f      	ldr	r1, [sp, #60]	; 0x3c
  18:	9206      	str	r2, [sp, #24]
  1a:	9305      	str	r3, [sp, #20]
  1c:	9004      	str	r0, [sp, #16]
  1e:	9103      	str	r1, [sp, #12]
  20:	e7ff      	b.n	22 <<cortex_m::register::faultmask::Faultmask as core::cmp::PartialEq>::eq+0x22>
  22:	9804      	ldr	r0, [sp, #16]
  24:	900a      	str	r0, [sp, #40]	; 0x28
  26:	9908      	ldr	r1, [sp, #32]
  28:	7809      	ldrb	r1, [r1, #0]
  2a:	2200      	movs	r2, #0
  2c:	9211      	str	r2, [sp, #68]	; 0x44
  2e:	9110      	str	r1, [sp, #64]	; 0x40
  30:	9910      	ldr	r1, [sp, #64]	; 0x40
  32:	9a11      	ldr	r2, [sp, #68]	; 0x44
  34:	9102      	str	r1, [sp, #8]
  36:	9201      	str	r2, [sp, #4]
  38:	e7ff      	b.n	3a <<cortex_m::register::faultmask::Faultmask as core::cmp::PartialEq>::eq+0x3a>
  3a:	9802      	ldr	r0, [sp, #8]
  3c:	900b      	str	r0, [sp, #44]	; 0x2c
  3e:	990a      	ldr	r1, [sp, #40]	; 0x28
  40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  42:	4291      	cmp	r1, r2
  44:	d108      	bne.n	58 <<cortex_m::register::faultmask::Faultmask as core::cmp::PartialEq>::eq+0x58>
  46:	e7ff      	b.n	48 <<cortex_m::register::faultmask::Faultmask as core::cmp::PartialEq>::eq+0x48>
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9908      	ldr	r1, [sp, #32]
  4c:	900c      	str	r0, [sp, #48]	; 0x30
  4e:	910d      	str	r1, [sp, #52]	; 0x34
  50:	2001      	movs	r0, #1
  52:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  56:	e003      	b.n	60 <<cortex_m::register::faultmask::Faultmask as core::cmp::PartialEq>::eq+0x60>
  58:	2000      	movs	r0, #0
  5a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  5e:	e7ff      	b.n	60 <<cortex_m::register::faultmask::Faultmask as core::cmp::PartialEq>::eq+0x60>
  60:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  64:	b012      	add	sp, #72	; 0x48
  66:	4770      	bx	lr

Disassembly of section .text._ZN77_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f0a998297a3b544E:

00000000 <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt>:
_ZN77_$LT$cortex_m..register..faultmask..Faultmask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6f0a998297a3b544E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/faultmask.rs:4
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	07c1      	lsls	r1, r0, #31
  16:	2900      	cmp	r1, #0
  18:	9203      	str	r2, [sp, #12]
  1a:	9302      	str	r3, [sp, #8]
  1c:	9001      	str	r0, [sp, #4]
  1e:	d005      	beq.n	2c <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x2c>
  20:	e7ff      	b.n	22 <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x22>
  22:	9801      	ldr	r0, [sp, #4]
  24:	2801      	cmp	r0, #1
  26:	d012      	beq.n	4e <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x4e>
  28:	e7ff      	b.n	2a <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x2a>
  2a:	defe      	udf	#254	; 0xfe
  2c:	9905      	ldr	r1, [sp, #20]
  2e:	f240 0200 	movw	r2, #0
  32:	f2c0 0200 	movt	r2, #0
  36:	a808      	add	r0, sp, #32
  38:	2306      	movs	r3, #6
  3a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  3e:	e7ff      	b.n	40 <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x40>
  40:	a808      	add	r0, sp, #32
  42:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  46:	f88d 001b 	strb.w	r0, [sp, #27]
  4a:	e7ff      	b.n	4c <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x4c>
  4c:	e010      	b.n	70 <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x70>
  4e:	9905      	ldr	r1, [sp, #20]
  50:	f240 0200 	movw	r2, #0
  54:	f2c0 0200 	movt	r2, #0
  58:	a80b      	add	r0, sp, #44	; 0x2c
  5a:	2308      	movs	r3, #8
  5c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  60:	e7ff      	b.n	62 <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x62>
  62:	a80b      	add	r0, sp, #44	; 0x2c
  64:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  68:	f88d 001b 	strb.w	r0, [sp, #27]
  6c:	e7ff      	b.n	6e <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x6e>
  6e:	e7ff      	b.n	70 <<cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt+0x70>
  70:	f89d 001b 	ldrb.w	r0, [sp, #27]
  74:	b00e      	add	sp, #56	; 0x38
  76:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.12.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.12
00000315 l       .debug_str	00000000 
00000b2f l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00000b2b l       .debug_str	00000000 
00000c64 l       .debug_str	00000000 
00000b02 l       .debug_str	00000000 
00000c47 l       .debug_str	00000000 
00000ad9 l       .debug_str	00000000 
00000c2b l       .debug_str	00000000 
00000ad7 l       .debug_str	00000000 
00000c21 l       .debug_str	00000000 
00000acc l       .debug_str	00000000 
00000c18 l       .debug_str	00000000 
00000ab6 l       .debug_str	00000000 
00000bfa l       .debug_str	00000000 
00000a5e l       .debug_str	00000000 
00000bcf l       .debug_str	00000000 
00000a4c l       .debug_str	00000000 
00000b7d l       .debug_str	00000000 
000009fb l       .debug_str	00000000 
00000b7b l       .debug_str	00000000 
000009f9 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
000009ed l       .debug_str	00000000 
00000b6e l       .debug_str	00000000 
0000099c l       .debug_str	00000000 
00000b68 l       .debug_str	00000000 
00000989 l       .debug_str	00000000 
00000b66 l       .debug_str	00000000 
0000094b l       .debug_str	00000000 
00000b61 l       .debug_str	00000000 
00000942 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000939 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000147 l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
0000017e l       .debug_str	00000000 
00000189 l       .debug_str	00000000 
00000190 l       .debug_str	00000000 
0000019d l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001ac l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
000001bf l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001cf l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001d8 l       .debug_str	00000000 
000001e7 l       .debug_str	00000000 
000001ee l       .debug_str	00000000 
000001f2 l       .debug_str	00000000 
000001fb l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
0000020b l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
00000244 l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
0000025f l       .debug_str	00000000 
00000264 l       .debug_str	00000000 
00000275 l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
00000289 l       .debug_str	00000000 
0000028e l       .debug_str	00000000 
00000293 l       .debug_str	00000000 
00000299 l       .debug_str	00000000 
0000029f l       .debug_str	00000000 
000002a6 l       .debug_str	00000000 
000002ab l       .debug_str	00000000 
000002b0 l       .debug_str	00000000 
000002b4 l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002d0 l       .debug_str	00000000 
000002db l       .debug_str	00000000 
000002e2 l       .debug_str	00000000 
000002e8 l       .debug_str	00000000 
000002ec l       .debug_str	00000000 
00000309 l       .debug_str	00000000 
0000030d l       .debug_str	00000000 
000008fe l       .debug_str	00000000 
0000032c l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
0000036c l       .debug_str	00000000 
00000371 l       .debug_str	00000000 
0000037a l       .debug_str	00000000 
00000381 l       .debug_str	00000000 
0000039a l       .debug_str	00000000 
000003a4 l       .debug_str	00000000 
000003be l       .debug_str	00000000 
0000041c l       .debug_str	00000000 
00000427 l       .debug_str	00000000 
0000042e l       .debug_str	00000000 
00000438 l       .debug_str	00000000 
0000043d l       .debug_str	00000000 
00000449 l       .debug_str	00000000 
00000451 l       .debug_str	00000000 
0000045a l       .debug_str	00000000 
0000045f l       .debug_str	00000000 
00000462 l       .debug_str	00000000 
0000046b l       .debug_str	00000000 
00000472 l       .debug_str	00000000 
00000475 l       .debug_str	00000000 
0000047b l       .debug_str	00000000 
00000485 l       .debug_str	00000000 
0000048d l       .debug_str	00000000 
00000493 l       .debug_str	00000000 
0000049e l       .debug_str	00000000 
000004a7 l       .debug_str	00000000 
000004ca l       .debug_str	00000000 
000004e9 l       .debug_str	00000000 
00000510 l       .debug_str	00000000 
0000051a l       .debug_str	00000000 
0000051f l       .debug_str	00000000 
0000052e l       .debug_str	00000000 
0000053e l       .debug_str	00000000 
00000546 l       .debug_str	00000000 
0000054a l       .debug_str	00000000 
00000592 l       .debug_str	00000000 
0000059a l       .debug_str	00000000 
000005e2 l       .debug_str	00000000 
000005eb l       .debug_str	00000000 
00000650 l       .debug_str	00000000 
00000653 l       .debug_str	00000000 
00000658 l       .debug_str	00000000 
00000689 l       .debug_str	00000000 
00000692 l       .debug_str	00000000 
000006c4 l       .debug_str	00000000 
000006cb l       .debug_str	00000000 
000006f1 l       .debug_str	00000000 
00000726 l       .debug_str	00000000 
00000760 l       .debug_str	00000000 
00000764 l       .debug_str	00000000 
0000076d l       .debug_str	00000000 
00000772 l       .debug_str	00000000 
00000797 l       .debug_str	00000000 
0000079c l       .debug_str	00000000 
000007b5 l       .debug_str	00000000 
000007ea l       .debug_str	00000000 
00000817 l       .debug_str	00000000 
0000081b l       .debug_str	00000000 
00000850 l       .debug_str	00000000 
00000868 l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
000008a2 l       .debug_str	00000000 
000008bb l       .debug_str	00000000 
000008f6 l       .debug_str	00000000 
00000b58 l       .debug_str	00000000 
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ed7f69c3a6dd526E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ed7f69c3a6dd526E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hcfe6e81be4e39c58E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hcfe6e81be4e39c58E
00000000 l    d  .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h54e8b1d0c614deadE	00000000 .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h54e8b1d0c614deadE
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17hbc82267d2b247f1eE	00000000 .text._ZN4core3fmt10ArgumentV13new17hbc82267d2b247f1eE
00000000 l    d  .text._ZN4core3fmt9Arguments6new_v117h2b74d742cc770db1E	00000000 .text._ZN4core3fmt9Arguments6new_v117h2b74d742cc770db1E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h62dd0ad10544490cE	00000000 .text._ZN4core3ptr18real_drop_in_place17h62dd0ad10544490cE
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h76a9c566027be00dE	00000000 .text._ZN4core3ptr18real_drop_in_place17h76a9c566027be00dE
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h9251dfa37791c92bE	00000000 .text._ZN4core3ptr18real_drop_in_place17h9251dfa37791c92bE
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h9e57463639f7f369E	00000000 .text._ZN4core3ptr18real_drop_in_place17h9e57463639f7f369E
00000000 l    d  .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h57d1e6b29b12215fE	00000000 .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h57d1e6b29b12215fE
00000000 l    d  .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hfc15062b54614d75E	00000000 .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hfc15062b54614d75E
00000000 l    d  .text._ZN4core4char7convert18from_u32_unchecked17h97b309aed6f3dd2bE	00000000 .text._ZN4core4char7convert18from_u32_unchecked17h97b309aed6f3dd2bE
00000000 l    d  .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h6806fa64bb761407E	00000000 .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h6806fa64bb761407E
00000000 l    d  .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h96abf87cb4803487E	00000000 .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h96abf87cb4803487E
00000000 l    d  .text._ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17hdbf551c6c48f05a8E	00000000 .text._ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17hdbf551c6c48f05a8E
00000000 l    d  .text._ZN8cortex_m3asm3nop17hc7b325b3a4cf5c20E	00000000 .text._ZN8cortex_m3asm3nop17hc7b325b3a4cf5c20E
00000000 l    d  .text._ZN8cortex_m3asm3dsb17h1c342c7958c8b072E	00000000 .text._ZN8cortex_m3asm3dsb17h1c342c7958c8b072E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ed7f69c3a6dd526E	00000028 <&T as core::fmt::Debug>::fmt
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hcfe6e81be4e39c58E	00000028 <&T as core::fmt::Debug>::fmt
00000000 g     F .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h54e8b1d0c614deadE	00000028 .hidden core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17hbc82267d2b247f1eE	00000032 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::num::<impl core::fmt::Debug for u8>::fmt
00000000         *UND*	00000000 .hidden core::fmt::num::<impl core::fmt::Debug for u32>::fmt
00000000 g     F .text._ZN4core3fmt9Arguments6new_v117h2b74d742cc770db1E	0000004c .hidden core::fmt::Arguments::new_v1
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17h62dd0ad10544490cE	0000000c .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17h76a9c566027be00dE	0000000c .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17h9251dfa37791c92bE	0000000c .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17h9e57463639f7f369E	0000000c .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h57d1e6b29b12215fE	0000000e core::cell::UnsafeCell<T>::get
00000000 g     F .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hfc15062b54614d75E	0000000e core::cell::UnsafeCell<T>::get
00000000 g     F .text._ZN4core4char7convert18from_u32_unchecked17h97b309aed6f3dd2bE	00000018 .hidden core::char::convert::from_u32_unchecked
00000000 g     F .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h6806fa64bb761407E	0000000e <T as core::convert::From<T>>::from
00000000 g     F .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h96abf87cb4803487E	0000001a <T as core::convert::Into<U>>::into
00000000 g     F .text._ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17hdbf551c6c48f05a8E	0000001e <T as core::convert::TryFrom<U>>::try_from
00000000 g     F .text._ZN8cortex_m3asm3dsb17h1c342c7958c8b072E	00000006 .hidden cortex_m::asm::dsb
00000000 g     F .text._ZN8cortex_m3asm3nop17hc7b325b3a4cf5c20E	00000004 .hidden cortex_m::asm::nop



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ed7f69c3a6dd526E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ed7f69c3a6dd526E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hcfe6e81be4e39c58E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hcfe6e81be4e39c58E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h54e8b1d0c614deadE:

00000000 <core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt>:
_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h54e8b1d0c614deadE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:974
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
   a:	9802      	ldr	r0, [sp, #8]
   c:	6800      	ldr	r0, [r0, #0]
   e:	9903      	ldr	r1, [sp, #12]
  10:	6809      	ldr	r1, [r1, #0]
  12:	f04f 0c00 	mov.w	ip, #0
  16:	4288      	cmp	r0, r1
  18:	bf38      	it	cc
  1a:	f04f 0c01 	movcc.w	ip, #1
  1e:	4660      	mov	r0, ip
  20:	9201      	str	r2, [sp, #4]
  22:	9300      	str	r3, [sp, #0]
  24:	b004      	add	sp, #16
  26:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17hbc82267d2b247f1eE:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17hbc82267d2b247f1eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt9Arguments6new_v117h2b74d742cc770db1E:

00000000 <core::fmt::Arguments::new_v1>:
_ZN4core3fmt9Arguments6new_v117h2b74d742cc770db1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:314
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	9104      	str	r1, [sp, #16]
  12:	9205      	str	r2, [sp, #20]
  14:	9306      	str	r3, [sp, #24]
  16:	f8cd c01c 	str.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:317
  1a:	9904      	ldr	r1, [sp, #16]
  1c:	9a05      	ldr	r2, [sp, #20]
  1e:	2300      	movs	r3, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:318
  20:	9309      	str	r3, [sp, #36]	; 0x24
  22:	9308      	str	r3, [sp, #32]
  24:	9308      	str	r3, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:319
  26:	9b06      	ldr	r3, [sp, #24]
  28:	f8dd c01c 	ldr.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  2c:	6001      	str	r1, [r0, #0]
  2e:	6042      	str	r2, [r0, #4]
  30:	9908      	ldr	r1, [sp, #32]
  32:	9a09      	ldr	r2, [sp, #36]	; 0x24
  34:	6081      	str	r1, [r0, #8]
  36:	60c2      	str	r2, [r0, #12]
  38:	6103      	str	r3, [r0, #16]
  3a:	f8c0 c014 	str.w	ip, [r0, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:321
  3e:	f8cd e00c 	str.w	lr, [sp, #12]
  42:	9402      	str	r4, [sp, #8]
  44:	9501      	str	r5, [sp, #4]
  46:	9600      	str	r6, [sp, #0]
  48:	b00a      	add	sp, #40	; 0x28
  4a:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h62dd0ad10544490cE:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h62dd0ad10544490cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h76a9c566027be00dE:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h76a9c566027be00dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h9251dfa37791c92bE:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h9251dfa37791c92bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h9e57463639f7f369E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h9e57463639f7f369E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17h57d1e6b29b12215fE:

00000000 <core::cell::UnsafeCell<T>::get>:
_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h57d1e6b29b12215fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cell.rs:1530
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cell.rs:1533
   6:	9801      	ldr	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cell.rs:1534
   8:	9100      	str	r1, [sp, #0]
   a:	b002      	add	sp, #8
   c:	4770      	bx	lr

Disassembly of section .text._ZN4core4cell19UnsafeCell$LT$T$GT$3get17hfc15062b54614d75E:

00000000 <core::cell::UnsafeCell<T>::get>:
_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hfc15062b54614d75E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cell.rs:1530
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cell.rs:1533
   6:	9801      	ldr	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cell.rs:1534
   8:	9100      	str	r1, [sp, #0]
   a:	b002      	add	sp, #8
   c:	4770      	bx	lr

Disassembly of section .text._ZN4core4char7convert18from_u32_unchecked17h97b309aed6f3dd2bE:

00000000 <core::char::convert::from_u32_unchecked>:
_ZN4core4char7convert18from_u32_unchecked17h97b309aed6f3dd2bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/convert.rs:101
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/convert.rs:102
   6:	9802      	ldr	r0, [sp, #8]
   8:	9003      	str	r0, [sp, #12]
   a:	9803      	ldr	r0, [sp, #12]
   c:	9101      	str	r1, [sp, #4]
   e:	9000      	str	r0, [sp, #0]
  10:	e7ff      	b.n	12 <core::char::convert::from_u32_unchecked+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/convert.rs:103
  12:	9800      	ldr	r0, [sp, #0]
  14:	b004      	add	sp, #16
  16:	4770      	bx	lr

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h6806fa64bb761407E:

00000000 <<T as core::convert::From<T>>::from>:
_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h6806fa64bb761407E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:547
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9100      	str	r1, [sp, #0]
   a:	b002      	add	sp, #8
   c:	4770      	bx	lr

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h96abf87cb4803487E:

00000000 <<T as core::convert::Into<U>>::into>:
_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h96abf87cb4803487E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:539
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:540
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <<T as core::convert::Into<U>>::into>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <<T as core::convert::Into<U>>::into+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:541
  14:	9801      	ldr	r0, [sp, #4]
  16:	b004      	add	sp, #16
  18:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17hdbf551c6c48f05a8E:

00000000 <<T as core::convert::TryFrom<U>>::try_from>:
_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17hdbf551c6c48f05a8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:568
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:569
   8:	9802      	ldr	r0, [sp, #8]
   a:	9101      	str	r1, [sp, #4]
   c:	f7ff fffe 	bl	0 <<T as core::convert::TryFrom<U>>::try_from>
  10:	9000      	str	r0, [sp, #0]
  12:	e7ff      	b.n	14 <<T as core::convert::TryFrom<U>>::try_from+0x14>
  14:	9800      	ldr	r0, [sp, #0]
  16:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:570
  18:	9803      	ldr	r0, [sp, #12]
  1a:	b004      	add	sp, #16
  1c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m3asm3nop17hc7b325b3a4cf5c20E:

00000000 <cortex_m::asm::nop>:
_ZN8cortex_m3asm3nop17hc7b325b3a4cf5c20E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/asm.rs:68
/// A no-operation. Useful to prevent delay loops from being optimized away.
#[inline]
pub fn nop() {
    match () {
        #[cfg(all(cortex_m, feature = "inline-asm"))]
        () => unsafe { asm!("nop" :::: "volatile") },
   0:	bf00      	nop
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/asm.rs:82
        },

        #[cfg(not(cortex_m))]
        () => unimplemented!(),
    }
}
   2:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m3asm3dsb17h1c342c7958c8b072E:

00000000 <cortex_m::asm::dsb>:
_ZN8cortex_m3asm3dsb17h1c342c7958c8b072E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/asm.rs:183
///  * all cache and branch predictor maintenance operations before this instruction complete
#[inline]
pub fn dsb() {
    match () {
        #[cfg(all(cortex_m, feature = "inline-asm"))]
        () => unsafe { asm!("dsb 0xF" ::: "memory" : "volatile") },
   0:	f3bf 8f4f 	dsb	sy
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/asm.rs:198
        },

        #[cfg(not(cortex_m))]
        () => unimplemented!(),
    }
}
   4:	4770      	bx	lr

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.13.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.13
000001ee l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
0000042e l       .debug_str	00000000 
0000033c l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
000002d9 l       .debug_str	00000000 
000003fb l       .debug_str	00000000 
000002d7 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000107 l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001cd l       .debug_str	00000000 
000001d7 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001e4 l       .debug_str	00000000 
000002ca l       .debug_str	00000000 
000001f0 l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
00000291 l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
0000029c l       .debug_str	00000000 
000002a1 l       .debug_str	00000000 
000002a6 l       .debug_str	00000000 
000002aa l       .debug_str	00000000 
000002b8 l       .debug_str	00000000 
000002bc l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002c6 l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
00000000 l    d  .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h9a6e23af4393d894E	00000000 .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h9a6e23af4393d894E
00000000 l    d  .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc31674559d50ff80E	00000000 .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc31674559d50ff80E
00000000 l    d  .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4de7d2371883dc98E	00000000 .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4de7d2371883dc98E
00000000 l    d  .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he273d0be0145c069E	00000000 .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he273d0be0145c069E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h9a6e23af4393d894E	00000046 <core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut
00000000         *UND*	00000000 .hidden <usize as core::iter::range::Step>::add_usize
00000000         *UND*	00000000 .hidden core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
00000000         *UND*	00000000 core::mem::swap
00000000         *UND*	00000000 core::ptr::<impl *mut T>::add
00000000 g     F .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc31674559d50ff80E	0000009a core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
00000000         *UND*	00000000 core::slice::from_raw_parts_mut
00000000         *UND*	00000000 core::slice::<impl [T]>::as_mut_ptr
00000000 g     F .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4de7d2371883dc98E	00000016 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000 g     F .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he273d0be0145c069E	00000052 <core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut



Disassembly of section .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h9a6e23af4393d894E:

00000000 <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut>:
_ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h9a6e23af4393d894E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2786
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9007      	str	r0, [sp, #28]
   c:	9108      	str	r1, [sp, #32]
   e:	9209      	str	r2, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2787
  10:	9807      	ldr	r0, [sp, #28]
  12:	2100      	movs	r1, #0
  14:	910a      	str	r1, [sp, #40]	; 0x28
  16:	900b      	str	r0, [sp, #44]	; 0x2c
  18:	9a08      	ldr	r2, [sp, #32]
  1a:	9809      	ldr	r0, [sp, #36]	; 0x24
  1c:	990a      	ldr	r1, [sp, #40]	; 0x28
  1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  20:	9006      	str	r0, [sp, #24]
  22:	4608      	mov	r0, r1
  24:	4621      	mov	r1, r4
  26:	9c06      	ldr	r4, [sp, #24]
  28:	9305      	str	r3, [sp, #20]
  2a:	4623      	mov	r3, r4
  2c:	f8cd c010 	str.w	ip, [sp, #16]
  30:	f8cd e00c 	str.w	lr, [sp, #12]
  34:	f7ff fffe 	bl	0 <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut>
  38:	9002      	str	r0, [sp, #8]
  3a:	9101      	str	r1, [sp, #4]
  3c:	e7ff      	b.n	3e <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2788
  3e:	9802      	ldr	r0, [sp, #8]
  40:	9901      	ldr	r1, [sp, #4]
  42:	b00c      	add	sp, #48	; 0x30
  44:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc31674559d50ff80E:

00000000 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next>:
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc31674559d50ff80E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:205
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
   8:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
   a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
   e:	9803      	ldr	r0, [sp, #12]
  10:	1d02      	adds	r2, r0, #4
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	07c1      	lsls	r1, r0, #31
  22:	2900      	cmp	r1, #0
  24:	d01f      	beq.n	66 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x66>
  26:	e7ff      	b.n	28 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:211
  28:	9803      	ldr	r0, [sp, #12]
  2a:	2101      	movs	r1, #1
  2c:	f88d 1027 	strb.w	r1, [sp, #39]	; 0x27
  30:	f7ff fffe 	bl	0 <<usize as core::iter::range::Step>::add_usize>
  34:	9107      	str	r1, [sp, #28]
  36:	9006      	str	r0, [sp, #24]
  38:	e7ff      	b.n	3a <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x3a>
  3a:	9806      	ldr	r0, [sp, #24]
  3c:	2801      	cmp	r0, #1
  3e:	d10f      	bne.n	60 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x60>
  40:	e7ff      	b.n	42 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x42>
  42:	2000      	movs	r0, #0
  44:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9008      	str	r0, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:212
  4c:	9903      	ldr	r1, [sp, #12]
  4e:	a808      	add	r0, sp, #32
  50:	f7ff fffe 	bl	0 <core::mem::swap>
  54:	e7ff      	b.n	56 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:213
  56:	9808      	ldr	r0, [sp, #32]
  58:	9005      	str	r0, [sp, #20]
  5a:	2001      	movs	r0, #1
  5c:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:211
  5e:	e018      	b.n	92 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x92>
  60:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:215
  62:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:211
  64:	e015      	b.n	92 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x92>
  66:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:218
  68:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  6a:	e7ff      	b.n	6c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x6c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:220
  6c:	9804      	ldr	r0, [sp, #16]
  6e:	9905      	ldr	r1, [sp, #20]
  70:	b00a      	add	sp, #40	; 0x28
  72:	bd80      	pop	{r7, pc}
  74:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:217
  76:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  7a:	e7f7      	b.n	6c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x6c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:217
  7c:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  80:	07c0      	lsls	r0, r0, #31
  82:	2800      	cmp	r0, #0
  84:	d0f6      	beq.n	74 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x74>
  86:	e7ff      	b.n	88 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x88>
  88:	2000      	movs	r0, #0
  8a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  8e:	e7f1      	b.n	74 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x74>
  90:	e7f0      	b.n	74 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x74>
  92:	9806      	ldr	r0, [sp, #24]
  94:	2801      	cmp	r0, #1
  96:	d0f1      	beq.n	7c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x7c>
  98:	e7fa      	b.n	90 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x90>

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4de7d2371883dc98E:

00000000 <<I as core::iter::traits::collect::IntoIterator>::into_iter>:
_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4de7d2371883dc98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:245
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:246
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:247
   e:	9201      	str	r2, [sp, #4]
  10:	9300      	str	r3, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he273d0be0145c069E:

00000000 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut>:
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he273d0be0145c069E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2737
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9008      	str	r0, [sp, #32]
   e:	9109      	str	r1, [sp, #36]	; 0x24
  10:	920a      	str	r2, [sp, #40]	; 0x28
  12:	930b      	str	r3, [sp, #44]	; 0x2c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2738
  14:	980a      	ldr	r0, [sp, #40]	; 0x28
  16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  18:	f8cd c01c 	str.w	ip, [sp, #28]
  1c:	f8cd e018 	str.w	lr, [sp, #24]
  20:	9405      	str	r4, [sp, #20]
  22:	9504      	str	r5, [sp, #16]
  24:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_mut_ptr>
  28:	9003      	str	r0, [sp, #12]
  2a:	e7ff      	b.n	2c <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut+0x2c>
  2c:	9908      	ldr	r1, [sp, #32]
  2e:	9803      	ldr	r0, [sp, #12]
  30:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::add>
  34:	9002      	str	r0, [sp, #8]
  36:	e7ff      	b.n	38 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut+0x38>
  38:	9808      	ldr	r0, [sp, #32]
  3a:	9909      	ldr	r1, [sp, #36]	; 0x24
  3c:	1a09      	subs	r1, r1, r0
  3e:	9802      	ldr	r0, [sp, #8]
  40:	f7ff fffe 	bl	0 <core::slice::from_raw_parts_mut>
  44:	9001      	str	r0, [sp, #4]
  46:	9100      	str	r1, [sp, #0]
  48:	e7ff      	b.n	4a <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut+0x4a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2739
  4a:	9801      	ldr	r0, [sp, #4]
  4c:	9900      	ldr	r1, [sp, #0]
  4e:	b00c      	add	sp, #48	; 0x30
  50:	bdb0      	pop	{r4, r5, r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.14.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.14
000001a0 l       .debug_str	00000000 
000003ff l       .debug_str	00000000 
00000467 l       .debug_str	00000000 
000003f9 l       .debug_str	00000000 
00000442 l       .debug_str	00000000 
000003f0 l       .debug_str	00000000 
0000043d l       .debug_str	00000000 
000003ec l       .debug_str	00000000 
00000435 l       .debug_str	00000000 
000003e1 l       .debug_str	00000000 
0000042b l       .debug_str	00000000 
000003dd l       .debug_str	00000000 
00000422 l       .debug_str	00000000 
000003d8 l       .debug_str	00000000 
00000417 l       .debug_str	00000000 
000003ca l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
00000110 l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
0000012a l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
0000019a l       .debug_str	00000000 
00000385 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001f9 l       .debug_str	00000000 
00000237 l       .debug_str	00000000 
00000250 l       .debug_str	00000000 
00000253 l       .debug_str	00000000 
00000291 l       .debug_str	00000000 
000002a9 l       .debug_str	00000000 
000002e8 l       .debug_str	00000000 
000002f1 l       .debug_str	00000000 
00000331 l       .debug_str	00000000 
0000033b l       .debug_str	00000000 
0000037b l       .debug_str	00000000 
0000040c l       .debug_str	00000000 
00000000 l    d  .text._ZN4core10intrinsics19copy_nonoverlapping17h871b394ca91014b2E	00000000 .text._ZN4core10intrinsics19copy_nonoverlapping17h871b394ca91014b2E
00000000 l    d  .text._ZN4core10intrinsics19copy_nonoverlapping17h976dabeb892910fcE	00000000 .text._ZN4core10intrinsics19copy_nonoverlapping17h976dabeb892910fcE
00000000 l    d  .text._ZN4core10intrinsics19copy_nonoverlapping17hbb174e3513cbd462E	00000000 .text._ZN4core10intrinsics19copy_nonoverlapping17hbb174e3513cbd462E
00000000 l    d  .text._ZN4core10intrinsics19copy_nonoverlapping17hfa26e1d835249f12E	00000000 .text._ZN4core10intrinsics19copy_nonoverlapping17hfa26e1d835249f12E
00000000 l    d  .text._ZN8cortex_m10peripheral3itm4Stim8write_u817h07804e83b44d9b6cE	00000000 .text._ZN8cortex_m10peripheral3itm4Stim8write_u817h07804e83b44d9b6cE
00000000 l    d  .text._ZN8cortex_m10peripheral3itm4Stim9write_u1617hebc51d83f140b864E	00000000 .text._ZN8cortex_m10peripheral3itm4Stim9write_u1617hebc51d83f140b864E
00000000 l    d  .text._ZN8cortex_m10peripheral3itm4Stim9write_u3217hb4b34c3ffbf1c067E	00000000 .text._ZN8cortex_m10peripheral3itm4Stim9write_u3217hb4b34c3ffbf1c067E
00000000 l    d  .text._ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h8ba7d770a699c4edE	00000000 .text._ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h8ba7d770a699c4edE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core10intrinsics19copy_nonoverlapping17h871b394ca91014b2E	0000002e core::intrinsics::copy_nonoverlapping
00000000 g     F .text._ZN4core10intrinsics19copy_nonoverlapping17h976dabeb892910fcE	0000002c core::intrinsics::copy_nonoverlapping
00000000 g     F .text._ZN4core10intrinsics19copy_nonoverlapping17hbb174e3513cbd462E	0000002c core::intrinsics::copy_nonoverlapping
00000000 g     F .text._ZN4core10intrinsics19copy_nonoverlapping17hfa26e1d835249f12E	0000002c core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::ptr::read_volatile
00000000         *UND*	00000000 core::ptr::write_volatile
00000000         *UND*	00000000 core::ptr::write_volatile
00000000         *UND*	00000000 core::ptr::write_volatile
00000000         *UND*	00000000 core::cell::UnsafeCell<T>::get
00000000 g     F .text._ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h8ba7d770a699c4edE	0000002c cortex_m::peripheral::itm::Stim::is_fifo_ready
00000000 g     F .text._ZN8cortex_m10peripheral3itm4Stim8write_u817h07804e83b44d9b6cE	0000002c cortex_m::peripheral::itm::Stim::write_u8
00000000 g     F .text._ZN8cortex_m10peripheral3itm4Stim9write_u1617hebc51d83f140b864E	0000002c cortex_m::peripheral::itm::Stim::write_u16
00000000 g     F .text._ZN8cortex_m10peripheral3itm4Stim9write_u3217hb4b34c3ffbf1c067E	00000028 cortex_m::peripheral::itm::Stim::write_u32
00000000         *UND*	00000000 __aeabi_memcpy
00000000         *UND*	00000000 __aeabi_memcpy4



Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h871b394ca91014b2E:

00000000 <core::intrinsics::copy_nonoverlapping>:
_ZN4core10intrinsics19copy_nonoverlapping17h871b394ca91014b2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1411
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  10:	9905      	ldr	r1, [sp, #20]
  12:	9806      	ldr	r0, [sp, #24]
  14:	9a07      	ldr	r2, [sp, #28]
  16:	0052      	lsls	r2, r2, #1
  18:	9304      	str	r3, [sp, #16]
  1a:	f8cd c00c 	str.w	ip, [sp, #12]
  1e:	f8cd e008 	str.w	lr, [sp, #8]
  22:	f7ff fffe 	bl	0 <__aeabi_memcpy>
  26:	9001      	str	r0, [sp, #4]
  28:	e7ff      	b.n	2a <core::intrinsics::copy_nonoverlapping+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1413
  2a:	b008      	add	sp, #32
  2c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h976dabeb892910fcE:

00000000 <core::intrinsics::copy_nonoverlapping>:
_ZN4core10intrinsics19copy_nonoverlapping17h976dabeb892910fcE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1411
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9003      	str	r0, [sp, #12]
   c:	9104      	str	r1, [sp, #16]
   e:	9205      	str	r2, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  10:	9903      	ldr	r1, [sp, #12]
  12:	9804      	ldr	r0, [sp, #16]
  14:	9a05      	ldr	r2, [sp, #20]
  16:	0092      	lsls	r2, r2, #2
  18:	9302      	str	r3, [sp, #8]
  1a:	f8cd c004 	str.w	ip, [sp, #4]
  1e:	f8cd e000 	str.w	lr, [sp]
  22:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  26:	e7ff      	b.n	28 <core::intrinsics::copy_nonoverlapping+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1413
  28:	b006      	add	sp, #24
  2a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17hbb174e3513cbd462E:

00000000 <core::intrinsics::copy_nonoverlapping>:
_ZN4core10intrinsics19copy_nonoverlapping17hbb174e3513cbd462E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1411
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9003      	str	r0, [sp, #12]
   c:	9104      	str	r1, [sp, #16]
   e:	9205      	str	r2, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  10:	9903      	ldr	r1, [sp, #12]
  12:	9804      	ldr	r0, [sp, #16]
  14:	9a05      	ldr	r2, [sp, #20]
  16:	0092      	lsls	r2, r2, #2
  18:	9302      	str	r3, [sp, #8]
  1a:	f8cd c004 	str.w	ip, [sp, #4]
  1e:	f8cd e000 	str.w	lr, [sp]
  22:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  26:	e7ff      	b.n	28 <core::intrinsics::copy_nonoverlapping+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1413
  28:	b006      	add	sp, #24
  2a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17hfa26e1d835249f12E:

00000000 <core::intrinsics::copy_nonoverlapping>:
_ZN4core10intrinsics19copy_nonoverlapping17hfa26e1d835249f12E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1411
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  10:	9905      	ldr	r1, [sp, #20]
  12:	9806      	ldr	r0, [sp, #24]
  14:	9a07      	ldr	r2, [sp, #28]
  16:	9304      	str	r3, [sp, #16]
  18:	f8cd c00c 	str.w	ip, [sp, #12]
  1c:	f8cd e008 	str.w	lr, [sp, #8]
  20:	f7ff fffe 	bl	0 <__aeabi_memcpy>
  24:	9001      	str	r0, [sp, #4]
  26:	e7ff      	b.n	28 <core::intrinsics::copy_nonoverlapping+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1413
  28:	b008      	add	sp, #32
  2a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3itm4Stim8write_u817h07804e83b44d9b6cE:

00000000 <cortex_m::peripheral::itm::Stim::write_u8>:
_ZN8cortex_m10peripheral3itm4Stim8write_u817h07804e83b44d9b6cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:38
    register: UnsafeCell<u32>,
}

impl Stim {
    /// Writes an `u8` payload into the stimulus port
    pub fn write_u8(&mut self, value: u8) {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	f88d 1017 	strb.w	r1, [sp, #23]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:39
        unsafe { ptr::write_volatile(self.register.get() as *mut u8, value) }
   e:	9804      	ldr	r0, [sp, #16]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <cortex_m::peripheral::itm::Stim::write_u8+0x1c>
  1c:	f89d 1017 	ldrb.w	r1, [sp, #23]
  20:	9801      	ldr	r0, [sp, #4]
  22:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
  26:	e7ff      	b.n	28 <cortex_m::peripheral::itm::Stim::write_u8+0x28>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:40
    }
  28:	b006      	add	sp, #24
  2a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3itm4Stim9write_u1617hebc51d83f140b864E:

00000000 <cortex_m::peripheral::itm::Stim::write_u16>:
_ZN8cortex_m10peripheral3itm4Stim9write_u1617hebc51d83f140b864E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:43

    /// Writes an `u16` payload into the stimulus port
    pub fn write_u16(&mut self, value: u16) {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	f8ad 1016 	strh.w	r1, [sp, #22]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:44
        unsafe { ptr::write_volatile(self.register.get() as *mut u16, value) }
   e:	9804      	ldr	r0, [sp, #16]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <cortex_m::peripheral::itm::Stim::write_u16+0x1c>
  1c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
  20:	9801      	ldr	r0, [sp, #4]
  22:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
  26:	e7ff      	b.n	28 <cortex_m::peripheral::itm::Stim::write_u16+0x28>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:45
    }
  28:	b006      	add	sp, #24
  2a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3itm4Stim9write_u3217hb4b34c3ffbf1c067E:

00000000 <cortex_m::peripheral::itm::Stim::write_u32>:
_ZN8cortex_m10peripheral3itm4Stim9write_u3217hb4b34c3ffbf1c067E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:48

    /// Writes an `u32` payload into the stimulus port
    pub fn write_u32(&mut self, value: u32) {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:49
        unsafe { ptr::write_volatile(self.register.get(), value) }
   c:	9804      	ldr	r0, [sp, #16]
   e:	9203      	str	r2, [sp, #12]
  10:	9302      	str	r3, [sp, #8]
  12:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  16:	9001      	str	r0, [sp, #4]
  18:	e7ff      	b.n	1a <cortex_m::peripheral::itm::Stim::write_u32+0x1a>
  1a:	9905      	ldr	r1, [sp, #20]
  1c:	9801      	ldr	r0, [sp, #4]
  1e:	f7ff fffe 	bl	0 <core::ptr::write_volatile>
  22:	e7ff      	b.n	24 <cortex_m::peripheral::itm::Stim::write_u32+0x24>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:50
    }
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h8ba7d770a699c4edE:

00000000 <cortex_m::peripheral::itm::Stim::is_fifo_ready>:
_ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h8ba7d770a699c4edE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:53

    /// Returns `true` if the stimulus port is ready to accept more data
    pub fn is_fifo_ready(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:54
        unsafe { ptr::read_volatile(self.register.get()) == 1 }
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <core::cell::UnsafeCell<T>::get>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <cortex_m::peripheral::itm::Stim::is_fifo_ready+0x14>
  14:	9801      	ldr	r0, [sp, #4]
  16:	f7ff fffe 	bl	0 <core::ptr::read_volatile>
  1a:	9000      	str	r0, [sp, #0]
  1c:	e7ff      	b.n	1e <cortex_m::peripheral::itm::Stim::is_fifo_ready+0x1e>
  1e:	9800      	ldr	r0, [sp, #0]
  20:	1e41      	subs	r1, r0, #1
  22:	fab1 f181 	clz	r1, r1
  26:	0948      	lsrs	r0, r1, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/itm.rs:55
    }
  28:	b004      	add	sp, #16
  2a:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.15.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.15
00000337 l       .debug_str	00000000 
00000b72 l       .debug_str	00000000 
00000c4a l       .debug_str	00000000 
00000b6a l       .debug_str	00000000 
00000c3f l       .debug_str	00000000 
00000b66 l       .debug_str	00000000 
00000c3a l       .debug_str	00000000 
00000b49 l       .debug_str	00000000 
00000c2f l       .debug_str	00000000 
00000b3e l       .debug_str	00000000 
00000c28 l       .debug_str	00000000 
00000ae0 l       .debug_str	00000000 
00000c1f l       .debug_str	00000000 
00000ad6 l       .debug_str	00000000 
00000c0b l       .debug_str	00000000 
00000ac5 l       .debug_str	00000000 
00000bf1 l       .debug_str	00000000 
00000ac0 l       .debug_str	00000000 
00000be7 l       .debug_str	00000000 
00000aa7 l       .debug_str	00000000 
00000bce l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
00000bc9 l       .debug_str	00000000 
00000a92 l       .debug_str	00000000 
00000a8e l       .debug_str	00000000 
00000a87 l       .debug_str	00000000 
00000bad l       .debug_str	00000000 
00000a78 l       .debug_str	00000000 
00000a75 l       .debug_str	00000000 
00000a6f l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000139 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
0000014d l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
00000158 l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
00000177 l       .debug_str	00000000 
0000017c l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
0000019c l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
000001b1 l       .debug_str	00000000 
000001be l       .debug_str	00000000 
000001cc l       .debug_str	00000000 
000001d0 l       .debug_str	00000000 
000001e5 l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
00000207 l       .debug_str	00000000 
00000216 l       .debug_str	00000000 
00000227 l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
00000272 l       .debug_str	00000000 
0000028a l       .debug_str	00000000 
00000293 l       .debug_str	00000000 
0000029d l       .debug_str	00000000 
000002a4 l       .debug_str	00000000 
000002aa l       .debug_str	00000000 
000002b3 l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
000002b8 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002ce l       .debug_str	00000000 
00000a6b l       .debug_str	00000000 
0000034f l       .debug_str	00000000 
00000355 l       .debug_str	00000000 
000003df l       .debug_str	00000000 
000003eb l       .debug_str	00000000 
000003ef l       .debug_str	00000000 
0000047a l       .debug_str	00000000 
0000050c l       .debug_str	00000000 
0000059b l       .debug_str	00000000 
0000062c l       .debug_str	00000000 
000006ba l       .debug_str	00000000 
0000074a l       .debug_str	00000000 
000007da l       .debug_str	00000000 
0000086a l       .debug_str	00000000 
000008d9 l       .debug_str	00000000 
00000945 l       .debug_str	00000000 
00000947 l       .debug_str	00000000 
00000951 l       .debug_str	00000000 
00000956 l       .debug_str	00000000 
00000961 l       .debug_str	00000000 
00000967 l       .debug_str	00000000 
00000982 l       .debug_str	00000000 
000009a7 l       .debug_str	00000000 
000009af l       .debug_str	00000000 
000009b1 l       .debug_str	00000000 
000009b3 l       .debug_str	00000000 
000009e1 l       .debug_str	00000000 
000009e3 l       .debug_str	00000000 
000009e9 l       .debug_str	00000000 
000009ee l       .debug_str	00000000 
000009f3 l       .debug_str	00000000 
000009f9 l       .debug_str	00000000 
000009ff l       .debug_str	00000000 
00000a06 l       .debug_str	00000000 
00000a0b l       .debug_str	00000000 
00000a10 l       .debug_str	00000000 
00000a14 l       .debug_str	00000000 
00000a22 l       .debug_str	00000000 
00000a2c l       .debug_str	00000000 
00000a30 l       .debug_str	00000000 
00000a38 l       .debug_str	00000000 
00000a40 l       .debug_str	00000000 
00000a47 l       .debug_str	00000000 
00000a53 l       .debug_str	00000000 
00000a5e l       .debug_str	00000000 
00000a65 l       .debug_str	00000000 
00000b89 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.22b231e609c1f8d49da06c6db9c2024a.0	0000000b .Lanon.22b231e609c1f8d49da06c6db9c2024a.0
00000000 l     O .rodata..Lanon.22b231e609c1f8d49da06c6db9c2024a.1	0000000d .Lanon.22b231e609c1f8d49da06c6db9c2024a.1
00000000 l     O .rodata.cst8	00000008 .Lanon.22b231e609c1f8d49da06c6db9c2024a.2
00000000 l     O .rodata.cst4	00000004 .Lanon.22b231e609c1f8d49da06c6db9c2024a.3
00000000 l    d  .text._ZN4core3str23from_utf8_unchecked_mut17hc8623145fa531bb0E	00000000 .text._ZN4core3str23from_utf8_unchecked_mut17hc8623145fa531bb0E
00000000 l    d  .text._ZN73_$LT$aligned..Aligned$LT$A$C$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2494619bb23f622eE	00000000 .text._ZN73_$LT$aligned..Aligned$LT$A$C$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2494619bb23f622eE
00000000 l    d  .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace28_$u7b$$u7b$closure$u7d$$u7d$17hff3c2611f1a43a94E	00000000 .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace28_$u7b$$u7b$closure$u7d$$u7d$17hff3c2611f1a43a94E
00000000 l    d  .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace28_$u7b$$u7b$closure$u7d$$u7d$17h820640e9a6d961d2E	00000000 .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace28_$u7b$$u7b$closure$u7d$$u7d$17h820640e9a6d961d2E
00000000 l    d  .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter28_$u7b$$u7b$closure$u7d$$u7d$17h512f88cd9fdcac14E	00000000 .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter28_$u7b$$u7b$closure$u7d$$u7d$17h512f88cd9fdcac14E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter28_$u7b$$u7b$closure$u7d$$u7d$17hfd640341262f4548E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter28_$u7b$$u7b$closure$u7d$$u7d$17hfd640341262f4548E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17h892cd9e6a5814df7E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17h892cd9e6a5814df7E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter28_$u7b$$u7b$closure$u7d$$u7d$17h86192191e28d6906E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter28_$u7b$$u7b$closure$u7d$$u7d$17h86192191e28d6906E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17hd4a4269de9b2599fE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17hd4a4269de9b2599fE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h01e7578154288b12E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h01e7578154288b12E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h0fc5597ce5109660E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h0fc5597ce5109660E
00000000 l    d  .text._ZN81_$LT$cortex_m..peripheral..cpuid..CsselrCacheType$u20$as$u20$core..fmt..Debug$GT$3fmt17h6c8e1d7c0fe74606E	00000000 .text._ZN81_$LT$cortex_m..peripheral..cpuid..CsselrCacheType$u20$as$u20$core..fmt..Debug$GT$3fmt17h6c8e1d7c0fe74606E
00000000 l    d  .text._ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h5875375c24da5cabE	00000000 .text._ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h5875375c24da5cabE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN4core3str23from_utf8_unchecked_mut17hc8623145fa531bb0E	00000016 .hidden core::str::from_utf8_unchecked_mut
00000000 g     F .text._ZN73_$LT$aligned..Aligned$LT$A$C$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2494619bb23f622eE	00000016 <aligned::Aligned<A,T> as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h5875375c24da5cabE	00000078 <cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt
00000000 g     F .text._ZN81_$LT$cortex_m..peripheral..cpuid..CsselrCacheType$u20$as$u20$core..fmt..Debug$GT$3fmt17h6c8e1d7c0fe74606E	00000078 <cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt
00000000 g     F .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace28_$u7b$$u7b$closure$u7d$$u7d$17hff3c2611f1a43a94E	00000012 .hidden cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace28_$u7b$$u7b$closure$u7d$$u7d$17h820640e9a6d961d2E	00000012 .hidden cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter28_$u7b$$u7b$closure$u7d$$u7d$17h512f88cd9fdcac14E	00000012 .hidden cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter28_$u7b$$u7b$closure$u7d$$u7d$17h86192191e28d6906E	00000012 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter28_$u7b$$u7b$closure$u7d$$u7d$17hfd640341262f4548E	00000012 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17hd4a4269de9b2599fE	00000012 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h01e7578154288b12E	00000012 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h0fc5597ce5109660E	00000012 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source::{{closure}}
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17h892cd9e6a5814df7E	00000012 .hidden cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt::{{closure}}



Disassembly of section .text._ZN4core3str23from_utf8_unchecked_mut17hc8623145fa531bb0E:

00000000 <core::str::from_utf8_unchecked_mut>:
_ZN4core3str23from_utf8_unchecked_mut17hc8623145fa531bb0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:438
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:439
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:440
   e:	9201      	str	r2, [sp, #4]
  10:	9300      	str	r3, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN73_$LT$aligned..Aligned$LT$A$C$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2494619bb23f622eE:

00000000 <<aligned::Aligned<A,T> as core::ops::deref::Deref>::deref>:
_ZN73_$LT$aligned..Aligned$LT$A$C$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2494619bb23f622eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\aligned-0.3.1\src/lib.rs:79
    A: sealed::Alignment,
    T: ?Sized,
{
    type Target = T;

    fn deref(&self) -> &T {
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\aligned-0.3.1\src/lib.rs:80
        &self.value
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\aligned-0.3.1\src/lib.rs:81
    }
   e:	9201      	str	r2, [sp, #4]
  10:	9300      	str	r3, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace28_$u7b$$u7b$closure$u7d$$u7d$17hff3c2611f1a43a94E:

00000000 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace::{{closure}}>:
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace28_$u7b$$u7b$closure$u7d$$u7d$17hff3c2611f1a43a94E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:31
    /// As by STM documentation, this flag is not reset on
    /// soft-reset, only on power reset.
    pub fn enable_trace(&mut self) {
        // set bit 24 / TRCENA
        unsafe {
            self.demcr.modify(|w| w | DCB_DEMCR_TRCENA);
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace28_$u7b$$u7b$closure$u7d$$u7d$17h820640e9a6d961d2E:

00000000 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace::{{closure}}>:
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace28_$u7b$$u7b$closure$u7d$$u7d$17h820640e9a6d961d2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dcb.rs:39

    /// Disables TRACE. See `DCB::enable_trace()` for more details
    pub fn disable_trace(&mut self) {
        // unset bit 24 / TRCENA
        unsafe {
            self.demcr.modify(|w| w & !DCB_DEMCR_TRCENA);
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f020 7080 	bic.w	r0, r0, #16777216	; 0x1000000
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter28_$u7b$$u7b$closure$u7d$$u7d$17h512f88cd9fdcac14E:

00000000 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter::{{closure}}>:
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter28_$u7b$$u7b$closure$u7d$$u7d$17h512f88cd9fdcac14E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/dwt.rs:69

impl DWT {
    /// Enables the cycle counter
    #[cfg(not(armv6m))]
    pub fn enable_cycle_counter(&mut self) {
        unsafe { self.ctrl.modify(|r| r | 1) }
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f040 0001 	orr.w	r0, r0, #1
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter28_$u7b$$u7b$closure$u7d$$u7d$17hfd640341262f4548E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter::{{closure}}>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter28_$u7b$$u7b$closure$u7d$$u7d$17hfd640341262f4548E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:49
        unsafe { self.cvr.write(0) }
    }

    /// Disables counter
    pub fn disable_counter(&mut self) {
        unsafe { self.csr.modify(|v| v & !SYST_CSR_ENABLE) }
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f020 0001 	bic.w	r0, r0, #1
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17h892cd9e6a5814df7E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt::{{closure}}>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17h892cd9e6a5814df7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:54
    }

    /// Disables SysTick interrupt
    pub fn disable_interrupt(&mut self) {
        unsafe { self.csr.modify(|v| v & !SYST_CSR_TICKINT) }
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f020 0002 	bic.w	r0, r0, #2
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter28_$u7b$$u7b$closure$u7d$$u7d$17h86192191e28d6906E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter::{{closure}}>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter28_$u7b$$u7b$closure$u7d$$u7d$17h86192191e28d6906E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:70
    /// - Clear current value
    /// - Program Control and Status register"
    ///
    /// The sequence translates to `self.set_reload(x); self.clear_current(); self.enable_counter()`
    pub fn enable_counter(&mut self) {
        unsafe { self.csr.modify(|v| v | SYST_CSR_ENABLE) }
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f040 0001 	orr.w	r0, r0, #1
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17hd4a4269de9b2599fE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt::{{closure}}>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17hd4a4269de9b2599fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:75
    }

    /// Enables SysTick interrupt
    pub fn enable_interrupt(&mut self) {
        unsafe { self.csr.modify(|v| v | SYST_CSR_TICKINT) }
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f040 0002 	orr.w	r0, r0, #2
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h01e7578154288b12E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source::{{closure}}>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h01e7578154288b12E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:156
    }

    /// Sets clock source
    pub fn set_clock_source(&mut self, clk_source: SystClkSource) {
        match clk_source {
            SystClkSource::External => unsafe { self.csr.modify(|v| v & !SYST_CSR_CLKSOURCE) },
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f020 0004 	bic.w	r0, r0, #4
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h0fc5597ce5109660E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source::{{closure}}>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source28_$u7b$$u7b$closure$u7d$$u7d$17h0fc5597ce5109660E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:157
            SystClkSource::Core => unsafe { self.csr.modify(|v| v | SYST_CSR_CLKSOURCE) },
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
   6:	9802      	ldr	r0, [sp, #8]
   8:	f040 0004 	orr.w	r0, r0, #4
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN81_$LT$cortex_m..peripheral..cpuid..CsselrCacheType$u20$as$u20$core..fmt..Debug$GT$3fmt17h6c8e1d7c0fe74606E:

00000000 <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt>:
_ZN81_$LT$cortex_m..peripheral..cpuid..CsselrCacheType$u20$as$u20$core..fmt..Debug$GT$3fmt17h6c8e1d7c0fe74606E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/cpuid.rs:69
    pub csselr: RW<u32>,
}

/// Type of cache to select on CSSELR writes.
#[cfg(not(armv6m))]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	07c1      	lsls	r1, r0, #31
  16:	2900      	cmp	r1, #0
  18:	9203      	str	r2, [sp, #12]
  1a:	9302      	str	r3, [sp, #8]
  1c:	9001      	str	r0, [sp, #4]
  1e:	d005      	beq.n	2c <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x2c>
  20:	e7ff      	b.n	22 <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x22>
  22:	9801      	ldr	r0, [sp, #4]
  24:	2801      	cmp	r0, #1
  26:	d012      	beq.n	4e <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x4e>
  28:	e7ff      	b.n	2a <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x2a>
  2a:	defe      	udf	#254	; 0xfe
  2c:	9905      	ldr	r1, [sp, #20]
  2e:	f240 0200 	movw	r2, #0
  32:	f2c0 0200 	movt	r2, #0
  36:	a808      	add	r0, sp, #32
  38:	230d      	movs	r3, #13
  3a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  3e:	e7ff      	b.n	40 <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x40>
  40:	a808      	add	r0, sp, #32
  42:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  46:	f88d 001b 	strb.w	r0, [sp, #27]
  4a:	e7ff      	b.n	4c <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x4c>
  4c:	e010      	b.n	70 <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x70>
  4e:	9905      	ldr	r1, [sp, #20]
  50:	f240 0200 	movw	r2, #0
  54:	f2c0 0200 	movt	r2, #0
  58:	a80b      	add	r0, sp, #44	; 0x2c
  5a:	230b      	movs	r3, #11
  5c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  60:	e7ff      	b.n	62 <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x62>
  62:	a80b      	add	r0, sp, #44	; 0x2c
  64:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  68:	f88d 001b 	strb.w	r0, [sp, #27]
  6c:	e7ff      	b.n	6e <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x6e>
  6e:	e7ff      	b.n	70 <<cortex_m::peripheral::cpuid::CsselrCacheType as core::fmt::Debug>::fmt+0x70>
  70:	f89d 001b 	ldrb.w	r0, [sp, #27]
  74:	b00e      	add	sp, #56	; 0x38
  76:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h5875375c24da5cabE:

00000000 <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt>:
_ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h5875375c24da5cabE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\peripheral/syst.rs:21
#[derive(Clone, Copy, Debug, PartialEq, Eq)]
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	07c1      	lsls	r1, r0, #31
  16:	2900      	cmp	r1, #0
  18:	9203      	str	r2, [sp, #12]
  1a:	9302      	str	r3, [sp, #8]
  1c:	9001      	str	r0, [sp, #4]
  1e:	d005      	beq.n	2c <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x2c>
  20:	e7ff      	b.n	22 <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x22>
  22:	9801      	ldr	r0, [sp, #4]
  24:	2801      	cmp	r0, #1
  26:	d012      	beq.n	4e <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x4e>
  28:	e7ff      	b.n	2a <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x2a>
  2a:	defe      	udf	#254	; 0xfe
  2c:	9905      	ldr	r1, [sp, #20]
  2e:	f240 0200 	movw	r2, #0
  32:	f2c0 0200 	movt	r2, #0
  36:	a808      	add	r0, sp, #32
  38:	2304      	movs	r3, #4
  3a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  3e:	e7ff      	b.n	40 <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x40>
  40:	a808      	add	r0, sp, #32
  42:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  46:	f88d 001b 	strb.w	r0, [sp, #27]
  4a:	e7ff      	b.n	4c <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x4c>
  4c:	e010      	b.n	70 <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x70>
  4e:	9905      	ldr	r1, [sp, #20]
  50:	f240 0200 	movw	r2, #0
  54:	f2c0 0200 	movt	r2, #0
  58:	a80b      	add	r0, sp, #44	; 0x2c
  5a:	2308      	movs	r3, #8
  5c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  60:	e7ff      	b.n	62 <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x62>
  62:	a80b      	add	r0, sp, #44	; 0x2c
  64:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  68:	f88d 001b 	strb.w	r0, [sp, #27]
  6c:	e7ff      	b.n	6e <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x6e>
  6e:	e7ff      	b.n	70 <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x70>
  70:	f89d 001b 	ldrb.w	r0, [sp, #27]
  74:	b00e      	add	sp, #56	; 0x38
  76:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.2.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.2
00000570 l       .debug_str	00000000 
00000914 l       .debug_str	00000000 
0000099f l       .debug_str	00000000 
00000910 l       .debug_str	00000000 
0000090a l       .debug_str	00000000 
0000099a l       .debug_str	00000000 
00000904 l       .debug_str	00000000 
00000994 l       .debug_str	00000000 
000008ff l       .debug_str	00000000 
0000096f l       .debug_str	00000000 
000008fd l       .debug_str	00000000 
00000954 l       .debug_str	00000000 
000008f6 l       .debug_str	00000000 
000008eb l       .debug_str	00000000 
00000952 l       .debug_str	00000000 
000008e5 l       .debug_str	00000000 
0000094f l       .debug_str	00000000 
000008e0 l       .debug_str	00000000 
000008de l       .debug_str	00000000 
000008c0 l       .debug_str	00000000 
00000944 l       .debug_str	00000000 
000008b6 l       .debug_str	00000000 
0000089d l       .debug_str	00000000 
0000093c l       .debug_str	00000000 
00000880 l       .debug_str	00000000 
00000938 l       .debug_str	00000000 
00000875 l       .debug_str	00000000 
00000931 l       .debug_str	00000000 
00000817 l       .debug_str	00000000 
0000092c l       .debug_str	00000000 
000007fd l       .debug_str	00000000 
00000928 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
0000012a l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
00000182 l       .debug_str	00000000 
00000189 l       .debug_str	00000000 
0000018c l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
00000193 l       .debug_str	00000000 
0000019a l       .debug_str	00000000 
0000019e l       .debug_str	00000000 
000001a1 l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001a9 l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
000001be l       .debug_str	00000000 
000001c8 l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001d7 l       .debug_str	00000000 
000001db l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000225 l       .debug_str	00000000 
0000022e l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
0000023f l       .debug_str	00000000 
00000245 l       .debug_str	00000000 
0000024b l       .debug_str	00000000 
00000250 l       .debug_str	00000000 
00000255 l       .debug_str	00000000 
0000025a l       .debug_str	00000000 
0000028d l       .debug_str	00000000 
000002ad l       .debug_str	00000000 
000002de l       .debug_str	00000000 
000002fd l       .debug_str	00000000 
000002ff l       .debug_str	00000000 
00000357 l       .debug_str	00000000 
000003ad l       .debug_str	00000000 
00000403 l       .debug_str	00000000 
00000422 l       .debug_str	00000000 
00000454 l       .debug_str	00000000 
00000460 l       .debug_str	00000000 
000004bc l       .debug_str	00000000 
000004c6 l       .debug_str	00000000 
000004f5 l       .debug_str	00000000 
000004ff l       .debug_str	00000000 
00000533 l       .debug_str	00000000 
00000541 l       .debug_str	00000000 
000007f3 l       .debug_str	00000000 
0000057a l       .debug_str	00000000 
000005a9 l       .debug_str	00000000 
000005ab l       .debug_str	00000000 
000005b0 l       .debug_str	00000000 
000005b5 l       .debug_str	00000000 
000005bc l       .debug_str	00000000 
000005c8 l       .debug_str	00000000 
000005d0 l       .debug_str	00000000 
000005d7 l       .debug_str	00000000 
000005dc l       .debug_str	00000000 
000005e5 l       .debug_str	00000000 
000005ea l       .debug_str	00000000 
000005ed l       .debug_str	00000000 
000005f6 l       .debug_str	00000000 
000005fd l       .debug_str	00000000 
00000602 l       .debug_str	00000000 
00000608 l       .debug_str	00000000 
0000060e l       .debug_str	00000000 
00000618 l       .debug_str	00000000 
0000061b l       .debug_str	00000000 
00000621 l       .debug_str	00000000 
0000062b l       .debug_str	00000000 
00000633 l       .debug_str	00000000 
00000639 l       .debug_str	00000000 
0000063f l       .debug_str	00000000 
0000064a l       .debug_str	00000000 
00000653 l       .debug_str	00000000 
00000676 l       .debug_str	00000000 
00000695 l       .debug_str	00000000 
0000069a l       .debug_str	00000000 
000006c1 l       .debug_str	00000000 
000006c7 l       .debug_str	00000000 
000006ca l       .debug_str	00000000 
000006d9 l       .debug_str	00000000 
000006e0 l       .debug_str	00000000 
000006e4 l       .debug_str	00000000 
000006ed l       .debug_str	00000000 
000006f5 l       .debug_str	00000000 
000006fd l       .debug_str	00000000 
00000711 l       .debug_str	00000000 
0000071d l       .debug_str	00000000 
00000729 l       .debug_str	00000000 
00000742 l       .debug_str	00000000 
00000747 l       .debug_str	00000000 
00000758 l       .debug_str	00000000 
00000762 l       .debug_str	00000000 
00000770 l       .debug_str	00000000 
00000774 l       .debug_str	00000000 
0000077f l       .debug_str	00000000 
00000786 l       .debug_str	00000000 
0000078c l       .debug_str	00000000 
00000790 l       .debug_str	00000000 
00000794 l       .debug_str	00000000 
0000079c l       .debug_str	00000000 
000007b3 l       .debug_str	00000000 
000007d7 l       .debug_str	00000000 
00000921 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.0	00000018 .Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.0
00000000 l     O .rodata..Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.1	00000018 .Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.1
00000000 l     O .rodata..Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.2	00000018 .Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.2
00000000 l     O .rodata..Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.3	00000018 .Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.3
00000000 l     F .text._ZN8cortex_m3itm11write_words17h08d0e587f52c05e9E	000000c0 cortex_m::itm::write_words
00000000 l     O .rodata.str.0	00000058 str.0
00000000 l     O .rodata.str.1	00000021 str.1
00000000 l    d  .text._ZN4core3fmt5Write10write_char17h911a7ab47dd7741fE	00000000 .text._ZN4core3fmt5Write10write_char17h911a7ab47dd7741fE
00000000 l    d  .text._ZN4core3fmt5Write9write_fmt17h1eb8a82931a6afbdE	00000000 .text._ZN4core3fmt5Write9write_fmt17h1eb8a82931a6afbdE
00000000 l    d  .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h4953d4e15fc306f8E	00000000 .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h4953d4e15fc306f8E
00000000 l    d  .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hee6dccd80f2f4960E	00000000 .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hee6dccd80f2f4960E
00000000 l    d  .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h645c02228e1779eeE	00000000 .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h645c02228e1779eeE
00000000 l    d  .text._ZN8cortex_m3itm11write_words17h08d0e587f52c05e9E	00000000 .text._ZN8cortex_m3itm11write_words17h08d0e587f52c05e9E
00000000 l    d  .text._ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17hc775596a3f678201E	00000000 .text._ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17hc775596a3f678201E
00000000 l    d  .text._ZN8cortex_m3itm9write_all17h9da72510bea03a75E	00000000 .text._ZN8cortex_m3itm9write_all17h9da72510bea03a75E
00000000 l    d  .text._ZN8cortex_m3itm13write_aligned17h380c95e99b717d8aE	00000000 .text._ZN8cortex_m3itm13write_aligned17h380c95e99b717d8aE
00000000 l    d  .text._ZN8cortex_m3itm9write_fmt17hcd18ef5d530fa7abE	00000000 .text._ZN8cortex_m3itm9write_fmt17hcd18ef5d530fa7abE
00000000 l    d  .text._ZN8cortex_m3itm9write_str17h19083a8f7a8d15d4E	00000000 .text._ZN8cortex_m3itm9write_str17h19083a8f7a8d15d4E
00000000 l    d  .rodata..Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.0	00000000 .rodata..Lanon.1b8cbcdfc6b4eb339ca6c54dfee3fc81.0
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3fmt5Write10write_char17h911a7ab47dd7741fE	0000004e core::fmt::Write::write_char
00000000 g     F .text._ZN4core3fmt5Write9write_fmt17h1eb8a82931a6afbdE	00000046 core::fmt::Write::write_fmt
00000000         *UND*	00000000 core::fmt::write
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::ptr::<impl *const T>::offset
00000000         *UND*	00000000 core::ptr::<impl *const T>::offset
00000000         *UND*	00000000 core::ptr::read
00000000         *UND*	00000000 core::ptr::read
00000000         *UND*	00000000 .hidden core::char::methods::<impl char>::encode_utf8
00000000         *UND*	00000000 core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
00000000         *UND*	00000000 core::slice::from_raw_parts
00000000         *UND*	00000000 core::slice::from_raw_parts
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000         *UND*	00000000 core::result::Result<T,E>::ok
00000000         *UND*	00000000 core::panicking::panic
00000000 g     F .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h4953d4e15fc306f8E	00000028 <&mut W as core::fmt::Write>::write_char
00000000 g     F .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hee6dccd80f2f4960E	00000038 <&mut W as core::fmt::Write>::write_fmt
00000000 g     F .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h645c02228e1779eeE	00000034 <&mut W as core::fmt::Write>::write_str
00000000 g     F .text._ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17hc775596a3f678201E	00000054 <cortex_m::itm::Port as core::fmt::Write>::write_str
00000000         *UND*	00000000 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000         *UND*	00000000 <aligned::Aligned<A,T> as core::ops::deref::Deref>::deref
00000000         *UND*	00000000 cortex_m::peripheral::itm::Stim::is_fifo_ready
00000000         *UND*	00000000 cortex_m::peripheral::itm::Stim::write_u8
00000000         *UND*	00000000 cortex_m::peripheral::itm::Stim::write_u16
00000000         *UND*	00000000 cortex_m::peripheral::itm::Stim::write_u32
00000000 g     F .text._ZN8cortex_m3itm13write_aligned17h380c95e99b717d8aE	00000152 cortex_m::itm::write_aligned
00000000 g     F .text._ZN8cortex_m3itm9write_all17h9da72510bea03a75E	0000017c cortex_m::itm::write_all
00000000 g     F .text._ZN8cortex_m3itm9write_fmt17hcd18ef5d530fa7abE	00000044 cortex_m::itm::write_fmt
00000000 g     F .text._ZN8cortex_m3itm9write_str17h19083a8f7a8d15d4E	00000048 cortex_m::itm::write_str



Disassembly of section .text._ZN4core3fmt5Write10write_char17h911a7ab47dd7741fE:

00000000 <core::fmt::Write::write_char>:
_ZN4core3fmt5Write10write_char17h911a7ab47dd7741fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:169
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9007      	str	r0, [sp, #28]
   a:	9108      	str	r1, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:170
   c:	9807      	ldr	r0, [sp, #28]
   e:	9908      	ldr	r1, [sp, #32]
  10:	f04f 0c00 	mov.w	ip, #0
  14:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  18:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
  1c:	f04f 0e04 	mov.w	lr, #4
  20:	9006      	str	r0, [sp, #24]
  22:	4608      	mov	r0, r1
  24:	4661      	mov	r1, ip
  26:	9205      	str	r2, [sp, #20]
  28:	4672      	mov	r2, lr
  2a:	9304      	str	r3, [sp, #16]
  2c:	f7ff fffe 	bl	0 <core::char::methods::<impl char>::encode_utf8>
  30:	9003      	str	r0, [sp, #12]
  32:	9102      	str	r1, [sp, #8]
  34:	e7ff      	b.n	36 <core::fmt::Write::write_char+0x36>
  36:	9806      	ldr	r0, [sp, #24]
  38:	9903      	ldr	r1, [sp, #12]
  3a:	9a02      	ldr	r2, [sp, #8]
  3c:	f7ff fffe 	bl	0 <core::fmt::Write::write_char>
  40:	9001      	str	r0, [sp, #4]
  42:	e7ff      	b.n	44 <core::fmt::Write::write_char+0x44>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:171
  44:	9801      	ldr	r0, [sp, #4]
  46:	f000 0001 	and.w	r0, r0, #1
  4a:	b00a      	add	sp, #40	; 0x28
  4c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3fmt5Write9write_fmt17h1eb8a82931a6afbdE:

00000000 <core::fmt::Write::write_fmt>:
_ZN4core3fmt5Write9write_fmt17h1eb8a82931a6afbdE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:194
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	b08c      	sub	sp, #48	; 0x30
   6:	460a      	mov	r2, r1
   8:	4603      	mov	r3, r0
   a:	9005      	str	r0, [sp, #20]
   c:	a806      	add	r0, sp, #24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:195
   e:	4684      	mov	ip, r0
  10:	e891 41f0 	ldmia.w	r1, {r4, r5, r6, r7, r8, lr}
  14:	e88c 41f0 	stmia.w	ip, {r4, r5, r6, r7, r8, lr}
  18:	f240 0100 	movw	r1, #0
  1c:	f2c0 0100 	movt	r1, #0
  20:	f10d 0c14 	add.w	ip, sp, #20
  24:	9004      	str	r0, [sp, #16]
  26:	4660      	mov	r0, ip
  28:	f8dd c010 	ldr.w	ip, [sp, #16]
  2c:	9203      	str	r2, [sp, #12]
  2e:	4662      	mov	r2, ip
  30:	9302      	str	r3, [sp, #8]
  32:	f7ff fffe 	bl	0 <core::fmt::write>
  36:	9001      	str	r0, [sp, #4]
  38:	e7ff      	b.n	3a <core::fmt::Write::write_fmt+0x3a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:196
  3a:	9801      	ldr	r0, [sp, #4]
  3c:	f000 0001 	and.w	r0, r0, #1
  40:	b00c      	add	sp, #48	; 0x30
  42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h4953d4e15fc306f8E:

00000000 <<&mut W as core::fmt::Write>::write_char>:
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h4953d4e15fc306f8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:205
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:206
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <<&mut W as core::fmt::Write>::write_char>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&mut W as core::fmt::Write>::write_char+0x1e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:207
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hee6dccd80f2f4960E:

00000000 <<&mut W as core::fmt::Write>::write_fmt>:
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hee6dccd80f2f4960E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:209
   0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   4:	b08b      	sub	sp, #44	; 0x2c
   6:	460a      	mov	r2, r1
   8:	4603      	mov	r3, r0
   a:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:210
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	f10d 0c14 	add.w	ip, sp, #20
  14:	46e6      	mov	lr, ip
  16:	e891 03f0 	ldmia.w	r1, {r4, r5, r6, r7, r8, r9}
  1a:	e88e 03f0 	stmia.w	lr, {r4, r5, r6, r7, r8, r9}
  1e:	4661      	mov	r1, ip
  20:	9203      	str	r2, [sp, #12]
  22:	9302      	str	r3, [sp, #8]
  24:	f7ff fffe 	bl	0 <<&mut W as core::fmt::Write>::write_fmt>
  28:	9001      	str	r0, [sp, #4]
  2a:	e7ff      	b.n	2c <<&mut W as core::fmt::Write>::write_fmt+0x2c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:211
  2c:	9801      	ldr	r0, [sp, #4]
  2e:	f000 0001 	and.w	r0, r0, #1
  32:	b00b      	add	sp, #44	; 0x2c
  34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h645c02228e1779eeE:

00000000 <<&mut W as core::fmt::Write>::write_str>:
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h645c02228e1779eeE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:201
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:202
  10:	9805      	ldr	r0, [sp, #20]
  12:	6800      	ldr	r0, [r0, #0]
  14:	9906      	ldr	r1, [sp, #24]
  16:	9a07      	ldr	r2, [sp, #28]
  18:	9304      	str	r3, [sp, #16]
  1a:	f8cd c00c 	str.w	ip, [sp, #12]
  1e:	f8cd e008 	str.w	lr, [sp, #8]
  22:	f7ff fffe 	bl	0 <<&mut W as core::fmt::Write>::write_str>
  26:	9001      	str	r0, [sp, #4]
  28:	e7ff      	b.n	2a <<&mut W as core::fmt::Write>::write_str+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:203
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	f000 0001 	and.w	r0, r0, #1
  30:	b008      	add	sp, #32
  32:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m3itm11write_words17h08d0e587f52c05e9E:

00000000 <cortex_m::itm::write_words>:
_ZN8cortex_m3itm11write_words17h08d0e587f52c05e9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:12
use aligned::{Aligned, A4};

use crate::peripheral::itm::Stim;

// NOTE assumes that `bytes` is 32-bit aligned
unsafe fn write_words(stim: &mut Stim, bytes: &[u32]) {
   0:	b580      	push	{r7, lr}
   2:	b098      	sub	sp, #96	; 0x60
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	900c      	str	r0, [sp, #48]	; 0x30
   c:	910d      	str	r1, [sp, #52]	; 0x34
   e:	920e      	str	r2, [sp, #56]	; 0x38
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:13
    let mut p = bytes.as_ptr();
  10:	980d      	ldr	r0, [sp, #52]	; 0x34
  12:	990e      	ldr	r1, [sp, #56]	; 0x38
  14:	930b      	str	r3, [sp, #44]	; 0x2c
  16:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
  1a:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
  1e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  22:	900f      	str	r0, [sp, #60]	; 0x3c
  24:	e7ff      	b.n	26 <cortex_m::itm::write_words+0x26>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:14
    for _ in 0..bytes.len() {
  26:	980d      	ldr	r0, [sp, #52]	; 0x34
  28:	990e      	ldr	r1, [sp, #56]	; 0x38
  2a:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  2e:	9008      	str	r0, [sp, #32]
  30:	e7ff      	b.n	32 <cortex_m::itm::write_words+0x32>
  32:	2000      	movs	r0, #0
  34:	9010      	str	r0, [sp, #64]	; 0x40
  36:	9808      	ldr	r0, [sp, #32]
  38:	9011      	str	r0, [sp, #68]	; 0x44
  3a:	9810      	ldr	r0, [sp, #64]	; 0x40
  3c:	9911      	ldr	r1, [sp, #68]	; 0x44
  3e:	f7ff fffe 	bl	0 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
  42:	9007      	str	r0, [sp, #28]
  44:	9106      	str	r1, [sp, #24]
  46:	e7ff      	b.n	48 <cortex_m::itm::write_words+0x48>
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9012      	str	r0, [sp, #72]	; 0x48
  4c:	9906      	ldr	r1, [sp, #24]
  4e:	9113      	str	r1, [sp, #76]	; 0x4c
  50:	e7ff      	b.n	52 <cortex_m::itm::write_words+0x52>
  52:	a812      	add	r0, sp, #72	; 0x48
  54:	f7ff fffe 	bl	0 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next>
  58:	9116      	str	r1, [sp, #88]	; 0x58
  5a:	9015      	str	r0, [sp, #84]	; 0x54
  5c:	e7ff      	b.n	5e <cortex_m::itm::write_words+0x5e>
  5e:	9815      	ldr	r0, [sp, #84]	; 0x54
  60:	2800      	cmp	r0, #0
  62:	9005      	str	r0, [sp, #20]
  64:	d00a      	beq.n	7c <cortex_m::itm::write_words+0x7c>
  66:	e7ff      	b.n	68 <cortex_m::itm::write_words+0x68>
  68:	9805      	ldr	r0, [sp, #20]
  6a:	2801      	cmp	r0, #1
  6c:	d001      	beq.n	72 <cortex_m::itm::write_words+0x72>
  6e:	e7ff      	b.n	70 <cortex_m::itm::write_words+0x70>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:19
        while !stim.is_fifo_ready() {}
        stim.write_u32(ptr::read(p));
        p = p.offset(1);
    }
}
  70:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:14
    for _ in 0..bytes.len() {
  72:	9816      	ldr	r0, [sp, #88]	; 0x58
  74:	9017      	str	r0, [sp, #92]	; 0x5c
  76:	9817      	ldr	r0, [sp, #92]	; 0x5c
  78:	9014      	str	r0, [sp, #80]	; 0x50
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:15
        while !stim.is_fifo_ready() {}
  7a:	e001      	b.n	80 <cortex_m::itm::write_words+0x80>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:19
}
  7c:	b018      	add	sp, #96	; 0x60
  7e:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:15
        while !stim.is_fifo_ready() {}
  80:	980c      	ldr	r0, [sp, #48]	; 0x30
  82:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::is_fifo_ready>
  86:	9004      	str	r0, [sp, #16]
  88:	e007      	b.n	9a <cortex_m::itm::write_words+0x9a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:16
        stim.write_u32(ptr::read(p));
  8a:	980c      	ldr	r0, [sp, #48]	; 0x30
  8c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  8e:	9003      	str	r0, [sp, #12]
  90:	4608      	mov	r0, r1
  92:	f7ff fffe 	bl	0 <core::ptr::read>
  96:	9002      	str	r0, [sp, #8]
  98:	e004      	b.n	a4 <cortex_m::itm::write_words+0xa4>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:15
        while !stim.is_fifo_ready() {}
  9a:	9804      	ldr	r0, [sp, #16]
  9c:	07c1      	lsls	r1, r0, #31
  9e:	2900      	cmp	r1, #0
  a0:	d0ee      	beq.n	80 <cortex_m::itm::write_words+0x80>
  a2:	e7f2      	b.n	8a <cortex_m::itm::write_words+0x8a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:16
        stim.write_u32(ptr::read(p));
  a4:	9803      	ldr	r0, [sp, #12]
  a6:	9902      	ldr	r1, [sp, #8]
  a8:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::write_u32>
  ac:	e7ff      	b.n	ae <cortex_m::itm::write_words+0xae>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:17
        p = p.offset(1);
  ae:	980f      	ldr	r0, [sp, #60]	; 0x3c
  b0:	2101      	movs	r1, #1
  b2:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
  b6:	9001      	str	r0, [sp, #4]
  b8:	e7ff      	b.n	ba <cortex_m::itm::write_words+0xba>
  ba:	9801      	ldr	r0, [sp, #4]
  bc:	900f      	str	r0, [sp, #60]	; 0x3c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:14
    for _ in 0..bytes.len() {
  be:	e7c8      	b.n	52 <cortex_m::itm::write_words+0x52>

Disassembly of section .text._ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17hc775596a3f678201E:

00000000 <<cortex_m::itm::Port as core::fmt::Write>::write_str>:
_ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17hc775596a3f678201E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:24

struct Port<'p>(&'p mut Stim);

impl<'p> fmt::Write for Port<'p> {
    fn write_str(&mut self, s: &str) -> fmt::Result {
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9007      	str	r0, [sp, #28]
   c:	9108      	str	r1, [sp, #32]
   e:	9209      	str	r2, [sp, #36]	; 0x24
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:25
        write_all(self.0, s.as_bytes());
  10:	9807      	ldr	r0, [sp, #28]
  12:	6800      	ldr	r0, [r0, #0]
  14:	9908      	ldr	r1, [sp, #32]
  16:	9a09      	ldr	r2, [sp, #36]	; 0x24
  18:	910c      	str	r1, [sp, #48]	; 0x30
  1a:	920d      	str	r2, [sp, #52]	; 0x34
_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h63ffb0f526205321E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2143
  1c:	990c      	ldr	r1, [sp, #48]	; 0x30
  1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  20:	910e      	str	r1, [sp, #56]	; 0x38
  22:	920f      	str	r2, [sp, #60]	; 0x3c
  24:	990e      	ldr	r1, [sp, #56]	; 0x38
  26:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
_ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17hc775596a3f678201E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:25
  28:	9306      	str	r3, [sp, #24]
  2a:	f8cd c014 	str.w	ip, [sp, #20]
  2e:	f8cd e010 	str.w	lr, [sp, #16]
  32:	9003      	str	r0, [sp, #12]
  34:	9102      	str	r1, [sp, #8]
  36:	9201      	str	r2, [sp, #4]
  38:	e7ff      	b.n	3a <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x3a>
  3a:	9803      	ldr	r0, [sp, #12]
  3c:	9902      	ldr	r1, [sp, #8]
  3e:	9a01      	ldr	r2, [sp, #4]
  40:	f7ff fffe 	bl	0 <<cortex_m::itm::Port as core::fmt::Write>::write_str>
  44:	e7ff      	b.n	46 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x46>
  46:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:26
        Ok(())
  48:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:27
    }
  4c:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
  50:	b010      	add	sp, #64	; 0x40
  52:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m3itm9write_all17h9da72510bea03a75E:

00000000 <cortex_m::itm::write_all>:
_ZN8cortex_m3itm9write_all17h9da72510bea03a75E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:31
}

/// Writes a `buffer` to the ITM `port`
pub fn write_all(port: &mut Stim, buffer: &[u8]) {
   0:	b580      	push	{r7, lr}
   2:	b09a      	sub	sp, #104	; 0x68
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9013      	str	r0, [sp, #76]	; 0x4c
   c:	9114      	str	r1, [sp, #80]	; 0x50
   e:	9215      	str	r2, [sp, #84]	; 0x54
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:33
    unsafe {
        let mut len = buffer.len();
  10:	9814      	ldr	r0, [sp, #80]	; 0x50
  12:	9915      	ldr	r1, [sp, #84]	; 0x54
  14:	9312      	str	r3, [sp, #72]	; 0x48
  16:	f8cd c044 	str.w	ip, [sp, #68]	; 0x44
  1a:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  1e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  22:	9016      	str	r0, [sp, #88]	; 0x58
  24:	e7ff      	b.n	26 <cortex_m::itm::write_all+0x26>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:34
        let mut ptr = buffer.as_ptr();
  26:	9814      	ldr	r0, [sp, #80]	; 0x50
  28:	9915      	ldr	r1, [sp, #84]	; 0x54
  2a:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  2e:	9017      	str	r0, [sp, #92]	; 0x5c
  30:	e7ff      	b.n	32 <cortex_m::itm::write_all+0x32>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:36

        if len == 0 {
  32:	9816      	ldr	r0, [sp, #88]	; 0x58
  34:	2800      	cmp	r0, #0
  36:	d104      	bne.n	42 <cortex_m::itm::write_all+0x42>
  38:	e7ff      	b.n	3a <cortex_m::itm::write_all+0x3a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:37
            return;
  3a:	e001      	b.n	40 <cortex_m::itm::write_all+0x40>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:73
            }
        }

        write_aligned(port, mem::transmute(slice::from_raw_parts(ptr, len)));
    }
}
  3c:	b01a      	add	sp, #104	; 0x68
  3e:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:37
            return;
  40:	e7fc      	b.n	3c <cortex_m::itm::write_all+0x3c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:41
        if ptr as usize % 2 == 1 {
  42:	9817      	ldr	r0, [sp, #92]	; 0x5c
  44:	900f      	str	r0, [sp, #60]	; 0x3c
  46:	e7ff      	b.n	48 <cortex_m::itm::write_all+0x48>
  48:	980f      	ldr	r0, [sp, #60]	; 0x3c
  4a:	07c1      	lsls	r1, r0, #31
  4c:	2900      	cmp	r1, #0
  4e:	d021      	beq.n	94 <cortex_m::itm::write_all+0x94>
  50:	e7ff      	b.n	52 <cortex_m::itm::write_all+0x52>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:42
            while !port.is_fifo_ready() {}
  52:	9813      	ldr	r0, [sp, #76]	; 0x4c
  54:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::is_fifo_ready>
  58:	900e      	str	r0, [sp, #56]	; 0x38
  5a:	e005      	b.n	68 <cortex_m::itm::write_all+0x68>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:43
            port.write_u8(*ptr);
  5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
  5e:	9917      	ldr	r1, [sp, #92]	; 0x5c
  60:	7809      	ldrb	r1, [r1, #0]
  62:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::write_u8>
  66:	e004      	b.n	72 <cortex_m::itm::write_all+0x72>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:42
            while !port.is_fifo_ready() {}
  68:	980e      	ldr	r0, [sp, #56]	; 0x38
  6a:	07c1      	lsls	r1, r0, #31
  6c:	2900      	cmp	r1, #0
  6e:	d0f0      	beq.n	52 <cortex_m::itm::write_all+0x52>
  70:	e7f4      	b.n	5c <cortex_m::itm::write_all+0x5c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:46
            ptr = ptr.offset(1);
  72:	9817      	ldr	r0, [sp, #92]	; 0x5c
  74:	2101      	movs	r1, #1
  76:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
  7a:	900d      	str	r0, [sp, #52]	; 0x34
  7c:	e7ff      	b.n	7e <cortex_m::itm::write_all+0x7e>
  7e:	980d      	ldr	r0, [sp, #52]	; 0x34
  80:	9017      	str	r0, [sp, #92]	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:47
            len -= 1;
  82:	9916      	ldr	r1, [sp, #88]	; 0x58
  84:	1e4a      	subs	r2, r1, #1
  86:	2901      	cmp	r1, #1
  88:	920c      	str	r2, [sp, #48]	; 0x30
  8a:	d369      	bcc.n	160 <cortex_m::itm::write_all+0x160>
  8c:	e7ff      	b.n	8e <cortex_m::itm::write_all+0x8e>
  8e:	980c      	ldr	r0, [sp, #48]	; 0x30
  90:	9016      	str	r0, [sp, #88]	; 0x58
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:41
        if ptr as usize % 2 == 1 {
  92:	e7ff      	b.n	94 <cortex_m::itm::write_all+0x94>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:51
        if ptr as usize % 4 == 2 {
  94:	9817      	ldr	r0, [sp, #92]	; 0x5c
  96:	900b      	str	r0, [sp, #44]	; 0x2c
  98:	e7ff      	b.n	9a <cortex_m::itm::write_all+0x9a>
  9a:	980b      	ldr	r0, [sp, #44]	; 0x2c
  9c:	f000 0103 	and.w	r1, r0, #3
  a0:	2902      	cmp	r1, #2
  a2:	d142      	bne.n	12a <cortex_m::itm::write_all+0x12a>
  a4:	e7ff      	b.n	a6 <cortex_m::itm::write_all+0xa6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:52
            if len > 1 {
  a6:	9816      	ldr	r0, [sp, #88]	; 0x58
  a8:	2802      	cmp	r0, #2
  aa:	d328      	bcc.n	fe <cortex_m::itm::write_all+0xfe>
  ac:	e7ff      	b.n	ae <cortex_m::itm::write_all+0xae>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:54
                while !port.is_fifo_ready() {}
  ae:	9813      	ldr	r0, [sp, #76]	; 0x4c
  b0:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::is_fifo_ready>
  b4:	900a      	str	r0, [sp, #40]	; 0x28
  b6:	e007      	b.n	c8 <cortex_m::itm::write_all+0xc8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:55
                port.write_u16(ptr::read(ptr as *const u16));
  b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
  ba:	9917      	ldr	r1, [sp, #92]	; 0x5c
  bc:	9009      	str	r0, [sp, #36]	; 0x24
  be:	4608      	mov	r0, r1
  c0:	f7ff fffe 	bl	0 <core::ptr::read>
  c4:	9008      	str	r0, [sp, #32]
  c6:	e004      	b.n	d2 <cortex_m::itm::write_all+0xd2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:54
                while !port.is_fifo_ready() {}
  c8:	980a      	ldr	r0, [sp, #40]	; 0x28
  ca:	07c1      	lsls	r1, r0, #31
  cc:	2900      	cmp	r1, #0
  ce:	d0ee      	beq.n	ae <cortex_m::itm::write_all+0xae>
  d0:	e7f2      	b.n	b8 <cortex_m::itm::write_all+0xb8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:55
                port.write_u16(ptr::read(ptr as *const u16));
  d2:	9809      	ldr	r0, [sp, #36]	; 0x24
  d4:	9908      	ldr	r1, [sp, #32]
  d6:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::write_u16>
  da:	e7ff      	b.n	dc <cortex_m::itm::write_all+0xdc>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:58
                ptr = ptr.offset(2);
  dc:	9817      	ldr	r0, [sp, #92]	; 0x5c
  de:	2102      	movs	r1, #2
  e0:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
  e4:	9007      	str	r0, [sp, #28]
  e6:	e7ff      	b.n	e8 <cortex_m::itm::write_all+0xe8>
  e8:	9807      	ldr	r0, [sp, #28]
  ea:	9017      	str	r0, [sp, #92]	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:59
                len -= 2;
  ec:	9916      	ldr	r1, [sp, #88]	; 0x58
  ee:	1e8a      	subs	r2, r1, #2
  f0:	2902      	cmp	r1, #2
  f2:	9206      	str	r2, [sp, #24]
  f4:	d33b      	bcc.n	16e <cortex_m::itm::write_all+0x16e>
  f6:	e7ff      	b.n	f8 <cortex_m::itm::write_all+0xf8>
  f8:	9806      	ldr	r0, [sp, #24]
  fa:	9016      	str	r0, [sp, #88]	; 0x58
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:51
        if ptr as usize % 4 == 2 {
  fc:	e015      	b.n	12a <cortex_m::itm::write_all+0x12a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:61
                if len == 1 {
  fe:	9816      	ldr	r0, [sp, #88]	; 0x58
 100:	2801      	cmp	r0, #1
 102:	d111      	bne.n	128 <cortex_m::itm::write_all+0x128>
 104:	e7ff      	b.n	106 <cortex_m::itm::write_all+0x106>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:63
                    while !port.is_fifo_ready() {}
 106:	9813      	ldr	r0, [sp, #76]	; 0x4c
 108:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::is_fifo_ready>
 10c:	9005      	str	r0, [sp, #20]
 10e:	e005      	b.n	11c <cortex_m::itm::write_all+0x11c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:64
                    port.write_u8(*ptr);
 110:	9813      	ldr	r0, [sp, #76]	; 0x4c
 112:	9917      	ldr	r1, [sp, #92]	; 0x5c
 114:	7809      	ldrb	r1, [r1, #0]
 116:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::write_u8>
 11a:	e004      	b.n	126 <cortex_m::itm::write_all+0x126>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:63
                    while !port.is_fifo_ready() {}
 11c:	9805      	ldr	r0, [sp, #20]
 11e:	07c1      	lsls	r1, r0, #31
 120:	2900      	cmp	r1, #0
 122:	d0f0      	beq.n	106 <cortex_m::itm::write_all+0x106>
 124:	e7f4      	b.n	110 <cortex_m::itm::write_all+0x110>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:61
                if len == 1 {
 126:	e7ff      	b.n	128 <cortex_m::itm::write_all+0x128>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:67
                return;
 128:	e78a      	b.n	40 <cortex_m::itm::write_all+0x40>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:71
        write_aligned(port, mem::transmute(slice::from_raw_parts(ptr, len)));
 12a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 12c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 12e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 130:	9004      	str	r0, [sp, #16]
 132:	4608      	mov	r0, r1
 134:	4611      	mov	r1, r2
 136:	f7ff fffe 	bl	0 <core::slice::from_raw_parts>
 13a:	9003      	str	r0, [sp, #12]
 13c:	9102      	str	r1, [sp, #8]
 13e:	e7ff      	b.n	140 <cortex_m::itm::write_all+0x140>
 140:	9803      	ldr	r0, [sp, #12]
 142:	9018      	str	r0, [sp, #96]	; 0x60
 144:	9902      	ldr	r1, [sp, #8]
 146:	9119      	str	r1, [sp, #100]	; 0x64
 148:	9918      	ldr	r1, [sp, #96]	; 0x60
 14a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 14c:	9101      	str	r1, [sp, #4]
 14e:	9200      	str	r2, [sp, #0]
 150:	e7ff      	b.n	152 <cortex_m::itm::write_all+0x152>
 152:	9804      	ldr	r0, [sp, #16]
 154:	9901      	ldr	r1, [sp, #4]
 156:	9a00      	ldr	r2, [sp, #0]
 158:	f7ff fffe 	bl	0 <cortex_m::itm::write_all>
 15c:	e7ff      	b.n	15e <cortex_m::itm::write_all+0x15e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:73
}
 15e:	e76d      	b.n	3c <cortex_m::itm::write_all+0x3c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:47
            len -= 1;
 160:	f240 0000 	movw	r0, #0
 164:	f2c0 0000 	movt	r0, #0
 168:	f7ff fffe 	bl	0 <core::panicking::panic>
 16c:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:59
                len -= 2;
 16e:	f240 0000 	movw	r0, #0
 172:	f2c0 0000 	movt	r0, #0
 176:	f7ff fffe 	bl	0 <core::panicking::panic>
 17a:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN8cortex_m3itm13write_aligned17h380c95e99b717d8aE:

00000000 <cortex_m::itm::write_aligned>:
_ZN8cortex_m3itm13write_aligned17h380c95e99b717d8aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:89
/// itm::write_aligned(&itm.stim[0], &buffer);
///
/// // Or equivalently
/// itm::write_aligned(&itm.stim[0], &Aligned(*b"Hello, world!\n"));
/// ```
pub fn write_aligned(port: &mut Stim, buffer: &Aligned<A4, [u8]>) {
   0:	b580      	push	{r7, lr}
   2:	b09e      	sub	sp, #120	; 0x78
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9017      	str	r0, [sp, #92]	; 0x5c
   c:	9118      	str	r1, [sp, #96]	; 0x60
   e:	9219      	str	r2, [sp, #100]	; 0x64
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:91
    unsafe {
        let len = buffer.len();
  10:	9818      	ldr	r0, [sp, #96]	; 0x60
  12:	9919      	ldr	r1, [sp, #100]	; 0x64
  14:	9316      	str	r3, [sp, #88]	; 0x58
  16:	f8cd c054 	str.w	ip, [sp, #84]	; 0x54
  1a:	f8cd e050 	str.w	lr, [sp, #80]	; 0x50
  1e:	f7ff fffe 	bl	0 <<aligned::Aligned<A,T> as core::ops::deref::Deref>::deref>
  22:	9013      	str	r0, [sp, #76]	; 0x4c
  24:	9112      	str	r1, [sp, #72]	; 0x48
  26:	e7ff      	b.n	28 <cortex_m::itm::write_aligned+0x28>
  28:	9813      	ldr	r0, [sp, #76]	; 0x4c
  2a:	9912      	ldr	r1, [sp, #72]	; 0x48
  2c:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  30:	901a      	str	r0, [sp, #104]	; 0x68
  32:	e7ff      	b.n	34 <cortex_m::itm::write_aligned+0x34>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:93

        if len == 0 {
  34:	981a      	ldr	r0, [sp, #104]	; 0x68
  36:	2800      	cmp	r0, #0
  38:	d103      	bne.n	42 <cortex_m::itm::write_aligned+0x42>
  3a:	e7ff      	b.n	3c <cortex_m::itm::write_aligned+0x3c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:94
            return;
  3c:	e7ff      	b.n	3e <cortex_m::itm::write_aligned+0x3e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:122
        if left == 1 {
            while !port.is_fifo_ready() {}
            port.write_u8(*ptr);
        }
    }
}
  3e:	b01e      	add	sp, #120	; 0x78
  40:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:97
        let split = len & !0b11;
  42:	981a      	ldr	r0, [sp, #104]	; 0x68
  44:	f020 0003 	bic.w	r0, r0, #3
  48:	901b      	str	r0, [sp, #108]	; 0x6c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:99
            port,
  4a:	9817      	ldr	r0, [sp, #92]	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:100
            slice::from_raw_parts(buffer.as_ptr() as *const u32, split >> 2),
  4c:	9918      	ldr	r1, [sp, #96]	; 0x60
  4e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  50:	9011      	str	r0, [sp, #68]	; 0x44
  52:	4608      	mov	r0, r1
  54:	4611      	mov	r1, r2
  56:	f7ff fffe 	bl	0 <<aligned::Aligned<A,T> as core::ops::deref::Deref>::deref>
  5a:	9010      	str	r0, [sp, #64]	; 0x40
  5c:	910f      	str	r1, [sp, #60]	; 0x3c
  5e:	e7ff      	b.n	60 <cortex_m::itm::write_aligned+0x60>
  60:	9810      	ldr	r0, [sp, #64]	; 0x40
  62:	990f      	ldr	r1, [sp, #60]	; 0x3c
  64:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  68:	900e      	str	r0, [sp, #56]	; 0x38
  6a:	e7ff      	b.n	6c <cortex_m::itm::write_aligned+0x6c>
  6c:	980e      	ldr	r0, [sp, #56]	; 0x38
  6e:	991b      	ldr	r1, [sp, #108]	; 0x6c
  70:	0889      	lsrs	r1, r1, #2
  72:	900d      	str	r0, [sp, #52]	; 0x34
  74:	910c      	str	r1, [sp, #48]	; 0x30
  76:	e7ff      	b.n	78 <cortex_m::itm::write_aligned+0x78>
  78:	980d      	ldr	r0, [sp, #52]	; 0x34
  7a:	990c      	ldr	r1, [sp, #48]	; 0x30
  7c:	f7ff fffe 	bl	0 <core::slice::from_raw_parts>
  80:	900b      	str	r0, [sp, #44]	; 0x2c
  82:	910a      	str	r1, [sp, #40]	; 0x28
  84:	e7ff      	b.n	86 <cortex_m::itm::write_aligned+0x86>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:98
        write_words(
  86:	9811      	ldr	r0, [sp, #68]	; 0x44
  88:	990b      	ldr	r1, [sp, #44]	; 0x2c
  8a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  8c:	f7ff fffe 	bl	0 <cortex_m::itm::write_aligned>
  90:	e7ff      	b.n	92 <cortex_m::itm::write_aligned+0x92>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:104
        let mut left = len & 0b11;
  92:	981a      	ldr	r0, [sp, #104]	; 0x68
  94:	f000 0003 	and.w	r0, r0, #3
  98:	901c      	str	r0, [sp, #112]	; 0x70
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:105
        let mut ptr = buffer.as_ptr().offset(split as isize);
  9a:	9818      	ldr	r0, [sp, #96]	; 0x60
  9c:	9919      	ldr	r1, [sp, #100]	; 0x64
  9e:	f7ff fffe 	bl	0 <<aligned::Aligned<A,T> as core::ops::deref::Deref>::deref>
  a2:	9009      	str	r0, [sp, #36]	; 0x24
  a4:	9108      	str	r1, [sp, #32]
  a6:	e7ff      	b.n	a8 <cortex_m::itm::write_aligned+0xa8>
  a8:	9809      	ldr	r0, [sp, #36]	; 0x24
  aa:	9908      	ldr	r1, [sp, #32]
  ac:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  b0:	9007      	str	r0, [sp, #28]
  b2:	e7ff      	b.n	b4 <cortex_m::itm::write_aligned+0xb4>
  b4:	991b      	ldr	r1, [sp, #108]	; 0x6c
  b6:	9807      	ldr	r0, [sp, #28]
  b8:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
  bc:	901d      	str	r0, [sp, #116]	; 0x74
  be:	e7ff      	b.n	c0 <cortex_m::itm::write_aligned+0xc0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:108
        if left > 1 {
  c0:	981c      	ldr	r0, [sp, #112]	; 0x70
  c2:	2802      	cmp	r0, #2
  c4:	d328      	bcc.n	118 <cortex_m::itm::write_aligned+0x118>
  c6:	e7ff      	b.n	c8 <cortex_m::itm::write_aligned+0xc8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:109
            while !port.is_fifo_ready() {}
  c8:	9817      	ldr	r0, [sp, #92]	; 0x5c
  ca:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::is_fifo_ready>
  ce:	9006      	str	r0, [sp, #24]
  d0:	e007      	b.n	e2 <cortex_m::itm::write_aligned+0xe2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:110
            port.write_u16(ptr::read(ptr as *const u16));
  d2:	9817      	ldr	r0, [sp, #92]	; 0x5c
  d4:	991d      	ldr	r1, [sp, #116]	; 0x74
  d6:	9005      	str	r0, [sp, #20]
  d8:	4608      	mov	r0, r1
  da:	f7ff fffe 	bl	0 <core::ptr::read>
  de:	9004      	str	r0, [sp, #16]
  e0:	e004      	b.n	ec <cortex_m::itm::write_aligned+0xec>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:109
            while !port.is_fifo_ready() {}
  e2:	9806      	ldr	r0, [sp, #24]
  e4:	07c1      	lsls	r1, r0, #31
  e6:	2900      	cmp	r1, #0
  e8:	d0ee      	beq.n	c8 <cortex_m::itm::write_aligned+0xc8>
  ea:	e7f2      	b.n	d2 <cortex_m::itm::write_aligned+0xd2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:110
            port.write_u16(ptr::read(ptr as *const u16));
  ec:	9805      	ldr	r0, [sp, #20]
  ee:	9904      	ldr	r1, [sp, #16]
  f0:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::write_u16>
  f4:	e7ff      	b.n	f6 <cortex_m::itm::write_aligned+0xf6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:112
            ptr = ptr.offset(2);
  f6:	981d      	ldr	r0, [sp, #116]	; 0x74
  f8:	2102      	movs	r1, #2
  fa:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
  fe:	9003      	str	r0, [sp, #12]
 100:	e7ff      	b.n	102 <cortex_m::itm::write_aligned+0x102>
 102:	9803      	ldr	r0, [sp, #12]
 104:	901d      	str	r0, [sp, #116]	; 0x74
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:113
            left -= 2;
 106:	991c      	ldr	r1, [sp, #112]	; 0x70
 108:	1e8a      	subs	r2, r1, #2
 10a:	2902      	cmp	r1, #2
 10c:	9202      	str	r2, [sp, #8]
 10e:	d319      	bcc.n	144 <cortex_m::itm::write_aligned+0x144>
 110:	e7ff      	b.n	112 <cortex_m::itm::write_aligned+0x112>
 112:	9802      	ldr	r0, [sp, #8]
 114:	901c      	str	r0, [sp, #112]	; 0x70
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:108
        if left > 1 {
 116:	e7ff      	b.n	118 <cortex_m::itm::write_aligned+0x118>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:117
        if left == 1 {
 118:	981c      	ldr	r0, [sp, #112]	; 0x70
 11a:	2801      	cmp	r0, #1
 11c:	d111      	bne.n	142 <cortex_m::itm::write_aligned+0x142>
 11e:	e7ff      	b.n	120 <cortex_m::itm::write_aligned+0x120>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:118
            while !port.is_fifo_ready() {}
 120:	9817      	ldr	r0, [sp, #92]	; 0x5c
 122:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::is_fifo_ready>
 126:	9001      	str	r0, [sp, #4]
 128:	e005      	b.n	136 <cortex_m::itm::write_aligned+0x136>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:119
            port.write_u8(*ptr);
 12a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 12c:	991d      	ldr	r1, [sp, #116]	; 0x74
 12e:	7809      	ldrb	r1, [r1, #0]
 130:	f7ff fffe 	bl	0 <cortex_m::peripheral::itm::Stim::write_u8>
 134:	e004      	b.n	140 <cortex_m::itm::write_aligned+0x140>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:118
            while !port.is_fifo_ready() {}
 136:	9801      	ldr	r0, [sp, #4]
 138:	07c1      	lsls	r1, r0, #31
 13a:	2900      	cmp	r1, #0
 13c:	d0f0      	beq.n	120 <cortex_m::itm::write_aligned+0x120>
 13e:	e7f4      	b.n	12a <cortex_m::itm::write_aligned+0x12a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:117
        if left == 1 {
 140:	e7ff      	b.n	142 <cortex_m::itm::write_aligned+0x142>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:122
}
 142:	e77c      	b.n	3e <cortex_m::itm::write_aligned+0x3e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:113
            left -= 2;
 144:	f240 0000 	movw	r0, #0
 148:	f2c0 0000 	movt	r0, #0
 14c:	f7ff fffe 	bl	0 <core::panicking::panic>
 150:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN8cortex_m3itm9write_fmt17hcd18ef5d530fa7abE:

00000000 <cortex_m::itm::write_fmt>:
_ZN8cortex_m3itm9write_fmt17hcd18ef5d530fa7abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:125

/// Writes `fmt::Arguments` to the ITM `port`
pub fn write_fmt(port: &mut Stim, args: fmt::Arguments) {
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	b08e      	sub	sp, #56	; 0x38
   6:	460a      	mov	r2, r1
   8:	4603      	mov	r3, r0
   a:	9006      	str	r0, [sp, #24]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:128
    use core::fmt::Write;

    Port(port).write_fmt(args).ok();
   c:	9806      	ldr	r0, [sp, #24]
   e:	9007      	str	r0, [sp, #28]
  10:	a808      	add	r0, sp, #32
  12:	4684      	mov	ip, r0
  14:	e891 41f0 	ldmia.w	r1, {r4, r5, r6, r7, r8, lr}
  18:	e88c 41f0 	stmia.w	ip, {r4, r5, r6, r7, r8, lr}
  1c:	a907      	add	r1, sp, #28
  1e:	9005      	str	r0, [sp, #20]
  20:	4608      	mov	r0, r1
  22:	9905      	ldr	r1, [sp, #20]
  24:	9204      	str	r2, [sp, #16]
  26:	9303      	str	r3, [sp, #12]
  28:	f7ff fffe 	bl	0 <cortex_m::itm::write_fmt>
  2c:	9002      	str	r0, [sp, #8]
  2e:	e7ff      	b.n	30 <cortex_m::itm::write_fmt+0x30>
  30:	9802      	ldr	r0, [sp, #8]
  32:	f000 0001 	and.w	r0, r0, #1
  36:	f7ff fffe 	bl	0 <core::result::Result<T,E>::ok>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <cortex_m::itm::write_fmt+0x3e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:129
}
  3e:	b00e      	add	sp, #56	; 0x38
  40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

Disassembly of section .text._ZN8cortex_m3itm9write_str17h19083a8f7a8d15d4E:

00000000 <cortex_m::itm::write_str>:
_ZN8cortex_m3itm9write_str17h19083a8f7a8d15d4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:132

/// Writes a string to the ITM `port`
pub fn write_str(port: &mut Stim, string: &str) {
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9007      	str	r0, [sp, #28]
   c:	9108      	str	r1, [sp, #32]
   e:	9209      	str	r2, [sp, #36]	; 0x24
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:133
    write_all(port, string.as_bytes())
  10:	9807      	ldr	r0, [sp, #28]
  12:	9908      	ldr	r1, [sp, #32]
  14:	9a09      	ldr	r2, [sp, #36]	; 0x24
  16:	910a      	str	r1, [sp, #40]	; 0x28
  18:	920b      	str	r2, [sp, #44]	; 0x2c
_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h63ffb0f526205321E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2143
  1a:	990a      	ldr	r1, [sp, #40]	; 0x28
  1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  1e:	910c      	str	r1, [sp, #48]	; 0x30
  20:	920d      	str	r2, [sp, #52]	; 0x34
  22:	990c      	ldr	r1, [sp, #48]	; 0x30
  24:	9a0d      	ldr	r2, [sp, #52]	; 0x34
_ZN8cortex_m3itm9write_str17h19083a8f7a8d15d4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:133
  26:	9306      	str	r3, [sp, #24]
  28:	f8cd c014 	str.w	ip, [sp, #20]
  2c:	f8cd e010 	str.w	lr, [sp, #16]
  30:	9003      	str	r0, [sp, #12]
  32:	9102      	str	r1, [sp, #8]
  34:	9201      	str	r2, [sp, #4]
  36:	e7ff      	b.n	38 <cortex_m::itm::write_str+0x38>
  38:	9803      	ldr	r0, [sp, #12]
  3a:	9902      	ldr	r1, [sp, #8]
  3c:	9a01      	ldr	r2, [sp, #4]
  3e:	f7ff fffe 	bl	0 <cortex_m::itm::write_str>
  42:	e7ff      	b.n	44 <cortex_m::itm::write_str+0x44>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/itm.rs:134
}
  44:	b00e      	add	sp, #56	; 0x38
  46:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.3.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.3
000002c4 l       .debug_str	00000000 
000009ee l       .debug_str	00000000 
00000ace l       .debug_str	00000000 
000009ca l       .debug_str	00000000 
00000ac3 l       .debug_str	00000000 
000009b3 l       .debug_str	00000000 
00000abc l       .debug_str	00000000 
000009ab l       .debug_str	00000000 
00000ab1 l       .debug_str	00000000 
000009a7 l       .debug_str	00000000 
0000098a l       .debug_str	00000000 
0000097f l       .debug_str	00000000 
00000aab l       .debug_str	00000000 
00000921 l       .debug_str	00000000 
00000917 l       .debug_str	00000000 
00000aa1 l       .debug_str	00000000 
00000906 l       .debug_str	00000000 
00000901 l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
000008e8 l       .debug_str	00000000 
00000a8f l       .debug_str	00000000 
000008dc l       .debug_str	00000000 
000008d3 l       .debug_str	00000000 
00000a84 l       .debug_str	00000000 
000008cf l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
000008c8 l       .debug_str	00000000 
000008b9 l       .debug_str	00000000 
000008b6 l       .debug_str	00000000 
000008b0 l       .debug_str	00000000 
00000a67 l       .debug_str	00000000 
000008aa l       .debug_str	00000000 
00000a5c l       .debug_str	00000000 
000008a6 l       .debug_str	00000000 
000008a0 l       .debug_str	00000000 
00000899 l       .debug_str	00000000 
00000a42 l       .debug_str	00000000 
0000088e l       .debug_str	00000000 
00000a38 l       .debug_str	00000000 
00000882 l       .debug_str	00000000 
0000086e l       .debug_str	00000000 
00000866 l       .debug_str	00000000 
00000a1f l       .debug_str	00000000 
0000085e l       .debug_str	00000000 
00000a18 l       .debug_str	00000000 
0000085a l       .debug_str	00000000 
00000850 l       .debug_str	00000000 
00000842 l       .debug_str	00000000 
00000a0f l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
00000152 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000015c l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
00000178 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
00000186 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
00000195 l       .debug_str	00000000 
0000019f l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001ac l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001f4 l       .debug_str	00000000 
00000234 l       .debug_str	00000000 
0000023a l       .debug_str	00000000 
0000027a l       .debug_str	00000000 
00000280 l       .debug_str	00000000 
000002bf l       .debug_str	00000000 
0000083e l       .debug_str	00000000 
0000030b l       .debug_str	00000000 
00000319 l       .debug_str	00000000 
0000031e l       .debug_str	00000000 
00000367 l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003bd l       .debug_str	00000000 
000003fc l       .debug_str	00000000 
00000403 l       .debug_str	00000000 
00000444 l       .debug_str	00000000 
0000044e l       .debug_str	00000000 
00000494 l       .debug_str	00000000 
000004a2 l       .debug_str	00000000 
00000509 l       .debug_str	00000000 
00000571 l       .debug_str	00000000 
00000574 l       .debug_str	00000000 
000005d9 l       .debug_str	00000000 
00000641 l       .debug_str	00000000 
000006a6 l       .debug_str	00000000 
0000070d l       .debug_str	00000000 
00000771 l       .debug_str	00000000 
00000776 l       .debug_str	00000000 
0000079c l       .debug_str	00000000 
000007c0 l       .debug_str	00000000 
000007e4 l       .debug_str	00000000 
00000807 l       .debug_str	00000000 
00000809 l       .debug_str	00000000 
0000080f l       .debug_str	00000000 
00000814 l       .debug_str	00000000 
00000819 l       .debug_str	00000000 
0000081f l       .debug_str	00000000 
00000825 l       .debug_str	00000000 
0000082c l       .debug_str	00000000 
00000831 l       .debug_str	00000000 
00000837 l       .debug_str	00000000 
00000839 l       .debug_str	00000000 
00000a0a l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.0	00000001 .Lanon.847e910a0d6789772c8f0857a66cf2e5.0
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.1	00000001 .Lanon.847e910a0d6789772c8f0857a66cf2e5.1
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.10	00000006 .Lanon.847e910a0d6789772c8f0857a66cf2e5.10
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.2	00000007 .Lanon.847e910a0d6789772c8f0857a66cf2e5.2
00000000 l     O .rodata.cst4	00000004 .Lanon.847e910a0d6789772c8f0857a66cf2e5.3
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.4	00000010 .Lanon.847e910a0d6789772c8f0857a66cf2e5.4
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.5	0000000c .Lanon.847e910a0d6789772c8f0857a66cf2e5.5
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.6	0000000a .Lanon.847e910a0d6789772c8f0857a66cf2e5.6
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.7	00000003 .Lanon.847e910a0d6789772c8f0857a66cf2e5.7
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.8	00000003 .Lanon.847e910a0d6789772c8f0857a66cf2e5.8
00000000 l     O .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.9	00000009 .Lanon.847e910a0d6789772c8f0857a66cf2e5.9
00000000 l     F .text._ZN74_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..cmp..PartialEq$GT$2eq17he2828bd2bb6e1ae2E	00000068 <cortex_m::register::control::Fpca as core::cmp::PartialEq>::eq
00000000 l     F .text._ZN75_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf62592fbc613af27E	00000068 <cortex_m::register::control::Npriv as core::cmp::PartialEq>::eq
00000000 l     F .text._ZN75_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd0a4d90d68669d04E	00000068 <cortex_m::register::control::Spsel as core::cmp::PartialEq>::eq
00000000 l    d  .text._ZN8cortex_m8register7control7Control4bits17hd928d2fa48048becE	00000000 .text._ZN8cortex_m8register7control7Control4bits17hd928d2fa48048becE
00000000 l    d  .text._ZN8cortex_m8register7control7Control5npriv17h498290b885fbc6faE	00000000 .text._ZN8cortex_m8register7control7Control5npriv17h498290b885fbc6faE
00000000 l    d  .text._ZN8cortex_m8register7control7Control5spsel17hc7c0148f4cb358d7E	00000000 .text._ZN8cortex_m8register7control7Control5spsel17hc7c0148f4cb358d7E
00000000 l    d  .text._ZN8cortex_m8register7control7Control4fpca17hed64053e4879bbc8E	00000000 .text._ZN8cortex_m8register7control7Control4fpca17hed64053e4879bbc8E
00000000 l    d  .text._ZN8cortex_m8register7control5Npriv13is_privileged17h6f0555a9d086b284E	00000000 .text._ZN8cortex_m8register7control5Npriv13is_privileged17h6f0555a9d086b284E
00000000 l    d  .text._ZN8cortex_m8register7control5Npriv15is_unprivileged17h0d0105a05c5274e9E	00000000 .text._ZN8cortex_m8register7control5Npriv15is_unprivileged17h0d0105a05c5274e9E
00000000 l    d  .text._ZN8cortex_m8register7control5Spsel6is_msp17hc5f21afa5746f1deE	00000000 .text._ZN8cortex_m8register7control5Spsel6is_msp17hc5f21afa5746f1deE
00000000 l    d  .text._ZN8cortex_m8register7control5Spsel6is_psp17h583d88cc2b18afbcE	00000000 .text._ZN8cortex_m8register7control5Spsel6is_psp17h583d88cc2b18afbcE
00000000 l    d  .text._ZN8cortex_m8register7control4Fpca9is_active17h790af094306178fdE	00000000 .text._ZN8cortex_m8register7control4Fpca9is_active17h790af094306178fdE
00000000 l    d  .text._ZN8cortex_m8register7control4Fpca13is_not_active17he400a6294bbf7c79E	00000000 .text._ZN8cortex_m8register7control4Fpca13is_not_active17he400a6294bbf7c79E
00000000 l    d  .text._ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17h804c6070727d7d9fE	00000000 .text._ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17h804c6070727d7d9fE
00000000 l    d  .text._ZN75_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf62592fbc613af27E	00000000 .text._ZN75_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf62592fbc613af27E
00000000 l    d  .text._ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17h81d1123d801b0ee8E	00000000 .text._ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17h81d1123d801b0ee8E
00000000 l    d  .text._ZN75_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd0a4d90d68669d04E	00000000 .text._ZN75_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd0a4d90d68669d04E
00000000 l    d  .text._ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17h5320f29de0b5c1d1E	00000000 .text._ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17h5320f29de0b5c1d1E
00000000 l    d  .text._ZN74_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..cmp..PartialEq$GT$2eq17he2828bd2bb6e1ae2E	00000000 .text._ZN74_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..cmp..PartialEq$GT$2eq17he2828bd2bb6e1ae2E
00000000 l    d  .text._ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h40ecd8cf7a158846E	00000000 .text._ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h40ecd8cf7a158846E
00000000 l    d  .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.4	00000000 .rodata..Lanon.847e910a0d6789772c8f0857a66cf2e5.4
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::field
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000         *UND*	00000000 core::fmt::Formatter::debug_struct
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000 g     F .text._ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h40ecd8cf7a158846E	00000078 <cortex_m::register::control::Fpca as core::fmt::Debug>::fmt
00000000 g     F .text._ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17h81d1123d801b0ee8E	00000078 <cortex_m::register::control::Npriv as core::fmt::Debug>::fmt
00000000 g     F .text._ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17h5320f29de0b5c1d1E	00000078 <cortex_m::register::control::Spsel as core::fmt::Debug>::fmt
00000000 g     F .text._ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17h804c6070727d7d9fE	00000072 <cortex_m::register::control::Control as core::fmt::Debug>::fmt
00000000 g     F .text._ZN8cortex_m8register7control4Fpca13is_not_active17he400a6294bbf7c79E	00000028 cortex_m::register::control::Fpca::is_not_active
00000000 g     F .text._ZN8cortex_m8register7control4Fpca9is_active17h790af094306178fdE	00000028 cortex_m::register::control::Fpca::is_active
00000000 g     F .text._ZN8cortex_m8register7control5Npriv13is_privileged17h6f0555a9d086b284E	00000028 cortex_m::register::control::Npriv::is_privileged
00000000 g     F .text._ZN8cortex_m8register7control5Npriv15is_unprivileged17h0d0105a05c5274e9E	00000028 cortex_m::register::control::Npriv::is_unprivileged
00000000 g     F .text._ZN8cortex_m8register7control5Spsel6is_msp17hc5f21afa5746f1deE	00000028 cortex_m::register::control::Spsel::is_msp
00000000 g     F .text._ZN8cortex_m8register7control5Spsel6is_psp17h583d88cc2b18afbcE	00000028 cortex_m::register::control::Spsel::is_psp
00000000 g     F .text._ZN8cortex_m8register7control7Control4bits17hd928d2fa48048becE	00000010 cortex_m::register::control::Control::bits
00000000 g     F .text._ZN8cortex_m8register7control7Control4fpca17hed64053e4879bbc8E	0000003a cortex_m::register::control::Control::fpca
00000000 g     F .text._ZN8cortex_m8register7control7Control5npriv17h498290b885fbc6faE	0000003a cortex_m::register::control::Control::npriv
00000000 g     F .text._ZN8cortex_m8register7control7Control5spsel17hc7c0148f4cb358d7E	0000003a cortex_m::register::control::Control::spsel



Disassembly of section .text._ZN8cortex_m8register7control7Control4bits17hd928d2fa48048becE:

00000000 <cortex_m::register::control::Control::bits>:
_ZN8cortex_m8register7control7Control4bits17hd928d2fa48048becE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:11
    bits: u32,
}

impl Control {
    /// Returns the contents of the register as raw bits
    pub fn bits(&self) -> u32 {
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:12
        self.bits
   6:	9801      	ldr	r0, [sp, #4]
   8:	6800      	ldr	r0, [r0, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:13
    }
   a:	9100      	str	r1, [sp, #0]
   c:	b002      	add	sp, #8
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control7Control5npriv17h498290b885fbc6faE:

00000000 <cortex_m::register::control::Control::npriv>:
_ZN8cortex_m8register7control7Control5npriv17h498290b885fbc6faE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:16

    /// Thread mode privilege level
    pub fn npriv(&self) -> Npriv {
   0:	b085      	sub	sp, #20
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:17
        if self.bits & (1 << 0) == (1 << 0) {
   6:	9803      	ldr	r0, [sp, #12]
   8:	6800      	ldr	r0, [r0, #0]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	e7ff      	b.n	10 <cortex_m::register::control::Control::npriv+0x10>
  10:	9801      	ldr	r0, [sp, #4]
  12:	f000 0101 	and.w	r1, r0, #1
  16:	9100      	str	r1, [sp, #0]
  18:	e7ff      	b.n	1a <cortex_m::register::control::Control::npriv+0x1a>
  1a:	9800      	ldr	r0, [sp, #0]
  1c:	2801      	cmp	r0, #1
  1e:	d104      	bne.n	2a <cortex_m::register::control::Control::npriv+0x2a>
  20:	e7ff      	b.n	22 <cortex_m::register::control::Control::npriv+0x22>
  22:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:18
            Npriv::Unprivileged
  24:	f88d 0013 	strb.w	r0, [sp, #19]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:17
        if self.bits & (1 << 0) == (1 << 0) {
  28:	e003      	b.n	32 <cortex_m::register::control::Control::npriv+0x32>
  2a:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:20
        } else {
            Npriv::Privileged
  2c:	f88d 0013 	strb.w	r0, [sp, #19]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:17
        if self.bits & (1 << 0) == (1 << 0) {
  30:	e7ff      	b.n	32 <cortex_m::register::control::Control::npriv+0x32>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:22
        }
    }
  32:	f89d 0013 	ldrb.w	r0, [sp, #19]
  36:	b005      	add	sp, #20
  38:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control7Control5spsel17hc7c0148f4cb358d7E:

00000000 <cortex_m::register::control::Control::spsel>:
_ZN8cortex_m8register7control7Control5spsel17hc7c0148f4cb358d7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:25

    /// Currently active stack pointer
    pub fn spsel(&self) -> Spsel {
   0:	b085      	sub	sp, #20
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:26
        if self.bits & (1 << 1) == (1 << 1) {
   6:	9803      	ldr	r0, [sp, #12]
   8:	6800      	ldr	r0, [r0, #0]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	e7ff      	b.n	10 <cortex_m::register::control::Control::spsel+0x10>
  10:	9801      	ldr	r0, [sp, #4]
  12:	f000 0102 	and.w	r1, r0, #2
  16:	9100      	str	r1, [sp, #0]
  18:	e7ff      	b.n	1a <cortex_m::register::control::Control::spsel+0x1a>
  1a:	9800      	ldr	r0, [sp, #0]
  1c:	2802      	cmp	r0, #2
  1e:	d104      	bne.n	2a <cortex_m::register::control::Control::spsel+0x2a>
  20:	e7ff      	b.n	22 <cortex_m::register::control::Control::spsel+0x22>
  22:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:27
            Spsel::Psp
  24:	f88d 0013 	strb.w	r0, [sp, #19]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:26
        if self.bits & (1 << 1) == (1 << 1) {
  28:	e003      	b.n	32 <cortex_m::register::control::Control::spsel+0x32>
  2a:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:29
        } else {
            Spsel::Msp
  2c:	f88d 0013 	strb.w	r0, [sp, #19]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:26
        if self.bits & (1 << 1) == (1 << 1) {
  30:	e7ff      	b.n	32 <cortex_m::register::control::Control::spsel+0x32>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:31
        }
    }
  32:	f89d 0013 	ldrb.w	r0, [sp, #19]
  36:	b005      	add	sp, #20
  38:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control7Control4fpca17hed64053e4879bbc8E:

00000000 <cortex_m::register::control::Control::fpca>:
_ZN8cortex_m8register7control7Control4fpca17hed64053e4879bbc8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:34

    /// Whether context floating-point is currently active
    pub fn fpca(&self) -> Fpca {
   0:	b085      	sub	sp, #20
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:35
        if self.bits & (1 << 2) == (1 << 2) {
   6:	9803      	ldr	r0, [sp, #12]
   8:	6800      	ldr	r0, [r0, #0]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	e7ff      	b.n	10 <cortex_m::register::control::Control::fpca+0x10>
  10:	9801      	ldr	r0, [sp, #4]
  12:	f000 0104 	and.w	r1, r0, #4
  16:	9100      	str	r1, [sp, #0]
  18:	e7ff      	b.n	1a <cortex_m::register::control::Control::fpca+0x1a>
  1a:	9800      	ldr	r0, [sp, #0]
  1c:	2804      	cmp	r0, #4
  1e:	d104      	bne.n	2a <cortex_m::register::control::Control::fpca+0x2a>
  20:	e7ff      	b.n	22 <cortex_m::register::control::Control::fpca+0x22>
  22:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:36
            Fpca::Active
  24:	f88d 0013 	strb.w	r0, [sp, #19]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:35
        if self.bits & (1 << 2) == (1 << 2) {
  28:	e003      	b.n	32 <cortex_m::register::control::Control::fpca+0x32>
  2a:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:38
        } else {
            Fpca::NotActive
  2c:	f88d 0013 	strb.w	r0, [sp, #19]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:35
        if self.bits & (1 << 2) == (1 << 2) {
  30:	e7ff      	b.n	32 <cortex_m::register::control::Control::fpca+0x32>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:40
        }
    }
  32:	f89d 0013 	ldrb.w	r0, [sp, #19]
  36:	b005      	add	sp, #20
  38:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control5Npriv13is_privileged17h6f0555a9d086b284E:

00000000 <cortex_m::register::control::Npriv::is_privileged>:
_ZN8cortex_m8register7control5Npriv13is_privileged17h6f0555a9d086b284E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:54
    Unprivileged,
}

impl Npriv {
    /// Is in privileged thread mode?
    pub fn is_privileged(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:55
        *self == Npriv::Privileged
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::control::Npriv::is_privileged>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::control::Npriv::is_privileged+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:56
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m8register7control5Npriv15is_unprivileged17h0d0105a05c5274e9E:

00000000 <cortex_m::register::control::Npriv::is_unprivileged>:
_ZN8cortex_m8register7control5Npriv15is_unprivileged17h0d0105a05c5274e9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:59

    /// Is in unprivileged thread mode?
    pub fn is_unprivileged(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:60
        *self == Npriv::Unprivileged
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::control::Npriv::is_unprivileged>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::control::Npriv::is_unprivileged+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:61
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m8register7control5Spsel6is_msp17hc5f21afa5746f1deE:

00000000 <cortex_m::register::control::Spsel::is_msp>:
_ZN8cortex_m8register7control5Spsel6is_msp17hc5f21afa5746f1deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:75
    Psp,
}

impl Spsel {
    /// Is MSP the current stack pointer?
    pub fn is_msp(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:76
        *self == Spsel::Msp
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::control::Spsel::is_msp>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::control::Spsel::is_msp+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:77
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m8register7control5Spsel6is_psp17h583d88cc2b18afbcE:

00000000 <cortex_m::register::control::Spsel::is_psp>:
_ZN8cortex_m8register7control5Spsel6is_psp17h583d88cc2b18afbcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:80

    /// Is PSP the current stack pointer?
    pub fn is_psp(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:81
        *self == Spsel::Psp
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::control::Spsel::is_psp>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::control::Spsel::is_psp+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:82
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m8register7control4Fpca9is_active17h790af094306178fdE:

00000000 <cortex_m::register::control::Fpca::is_active>:
_ZN8cortex_m8register7control4Fpca9is_active17h790af094306178fdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:96
    NotActive,
}

impl Fpca {
    /// Is a floating-point context active?
    pub fn is_active(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:97
        *self == Fpca::Active
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::control::Fpca::is_active>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::control::Fpca::is_active+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:98
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN8cortex_m8register7control4Fpca13is_not_active17he400a6294bbf7c79E:

00000000 <cortex_m::register::control::Fpca::is_not_active>:
_ZN8cortex_m8register7control4Fpca13is_not_active17he400a6294bbf7c79E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:101

    /// Is a floating-point context not active?
    pub fn is_not_active(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:102
        *self == Fpca::NotActive
   8:	9803      	ldr	r0, [sp, #12]
   a:	f240 0200 	movw	r2, #0
   e:	f2c0 0200 	movt	r2, #0
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <cortex_m::register::control::Fpca::is_not_active>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <cortex_m::register::control::Fpca::is_not_active+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:103
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17h804c6070727d7d9fE:

00000000 <<cortex_m::register::control::Control as core::fmt::Debug>::fmt>:
_ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17h804c6070727d7d9fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:4
#[derive(Clone, Copy, Debug)]
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:6
    bits: u32,
   c:	9806      	ldr	r0, [sp, #24]
   e:	9008      	str	r0, [sp, #32]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:4
#[derive(Clone, Copy, Debug)]
  10:	9907      	ldr	r1, [sp, #28]
  12:	f240 0000 	movw	r0, #0
  16:	f2c0 0000 	movt	r0, #0
  1a:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
  1e:	f04f 0e07 	mov.w	lr, #7
  22:	9005      	str	r0, [sp, #20]
  24:	4660      	mov	r0, ip
  26:	f8dd c014 	ldr.w	ip, [sp, #20]
  2a:	9204      	str	r2, [sp, #16]
  2c:	4662      	mov	r2, ip
  2e:	9303      	str	r3, [sp, #12]
  30:	4673      	mov	r3, lr
  32:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_struct>
  36:	e7ff      	b.n	38 <<cortex_m::register::control::Control as core::fmt::Debug>::fmt+0x38>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:6
    bits: u32,
  38:	9808      	ldr	r0, [sp, #32]
  3a:	900b      	str	r0, [sp, #44]	; 0x2c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:4
#[derive(Clone, Copy, Debug)]
  3c:	f240 0000 	movw	r0, #0
  40:	f2c0 0000 	movt	r0, #0
  44:	4669      	mov	r1, sp
  46:	6008      	str	r0, [r1, #0]
  48:	f240 0100 	movw	r1, #0
  4c:	f2c0 0100 	movt	r1, #0
  50:	a809      	add	r0, sp, #36	; 0x24
  52:	2204      	movs	r2, #4
  54:	ab0b      	add	r3, sp, #44	; 0x2c
  56:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::field>
  5a:	9002      	str	r0, [sp, #8]
  5c:	e7ff      	b.n	5e <<cortex_m::register::control::Control as core::fmt::Debug>::fmt+0x5e>
  5e:	a809      	add	r0, sp, #36	; 0x24
  60:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::finish>
  64:	9001      	str	r0, [sp, #4]
  66:	e7ff      	b.n	68 <<cortex_m::register::control::Control as core::fmt::Debug>::fmt+0x68>
  68:	9801      	ldr	r0, [sp, #4]
  6a:	f000 0001 	and.w	r0, r0, #1
  6e:	b00c      	add	sp, #48	; 0x30
  70:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN75_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf62592fbc613af27E:

00000000 <<cortex_m::register::control::Npriv as core::cmp::PartialEq>::eq>:
_ZN75_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf62592fbc613af27E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:44
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b092      	sub	sp, #72	; 0x48
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9007      	str	r0, [sp, #28]
   8:	9108      	str	r1, [sp, #32]
   a:	9807      	ldr	r0, [sp, #28]
   c:	7800      	ldrb	r0, [r0, #0]
   e:	2100      	movs	r1, #0
  10:	910f      	str	r1, [sp, #60]	; 0x3c
  12:	900e      	str	r0, [sp, #56]	; 0x38
  14:	980e      	ldr	r0, [sp, #56]	; 0x38
  16:	990f      	ldr	r1, [sp, #60]	; 0x3c
  18:	9206      	str	r2, [sp, #24]
  1a:	9305      	str	r3, [sp, #20]
  1c:	9004      	str	r0, [sp, #16]
  1e:	9103      	str	r1, [sp, #12]
  20:	e7ff      	b.n	22 <<cortex_m::register::control::Npriv as core::cmp::PartialEq>::eq+0x22>
  22:	9804      	ldr	r0, [sp, #16]
  24:	900a      	str	r0, [sp, #40]	; 0x28
  26:	9908      	ldr	r1, [sp, #32]
  28:	7809      	ldrb	r1, [r1, #0]
  2a:	2200      	movs	r2, #0
  2c:	9211      	str	r2, [sp, #68]	; 0x44
  2e:	9110      	str	r1, [sp, #64]	; 0x40
  30:	9910      	ldr	r1, [sp, #64]	; 0x40
  32:	9a11      	ldr	r2, [sp, #68]	; 0x44
  34:	9102      	str	r1, [sp, #8]
  36:	9201      	str	r2, [sp, #4]
  38:	e7ff      	b.n	3a <<cortex_m::register::control::Npriv as core::cmp::PartialEq>::eq+0x3a>
  3a:	9802      	ldr	r0, [sp, #8]
  3c:	900b      	str	r0, [sp, #44]	; 0x2c
  3e:	990a      	ldr	r1, [sp, #40]	; 0x28
  40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  42:	4291      	cmp	r1, r2
  44:	d108      	bne.n	58 <<cortex_m::register::control::Npriv as core::cmp::PartialEq>::eq+0x58>
  46:	e7ff      	b.n	48 <<cortex_m::register::control::Npriv as core::cmp::PartialEq>::eq+0x48>
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9908      	ldr	r1, [sp, #32]
  4c:	900c      	str	r0, [sp, #48]	; 0x30
  4e:	910d      	str	r1, [sp, #52]	; 0x34
  50:	2001      	movs	r0, #1
  52:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  56:	e003      	b.n	60 <<cortex_m::register::control::Npriv as core::cmp::PartialEq>::eq+0x60>
  58:	2000      	movs	r0, #0
  5a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  5e:	e7ff      	b.n	60 <<cortex_m::register::control::Npriv as core::cmp::PartialEq>::eq+0x60>
  60:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  64:	b012      	add	sp, #72	; 0x48
  66:	4770      	bx	lr

Disassembly of section .text._ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17h81d1123d801b0ee8E:

00000000 <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt>:
_ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17h81d1123d801b0ee8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:44
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	07c1      	lsls	r1, r0, #31
  16:	2900      	cmp	r1, #0
  18:	9203      	str	r2, [sp, #12]
  1a:	9302      	str	r3, [sp, #8]
  1c:	9001      	str	r0, [sp, #4]
  1e:	d005      	beq.n	2c <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x2c>
  20:	e7ff      	b.n	22 <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x22>
  22:	9801      	ldr	r0, [sp, #4]
  24:	2801      	cmp	r0, #1
  26:	d012      	beq.n	4e <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x4e>
  28:	e7ff      	b.n	2a <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x2a>
  2a:	defe      	udf	#254	; 0xfe
  2c:	9905      	ldr	r1, [sp, #20]
  2e:	f240 0200 	movw	r2, #0
  32:	f2c0 0200 	movt	r2, #0
  36:	a808      	add	r0, sp, #32
  38:	230a      	movs	r3, #10
  3a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  3e:	e7ff      	b.n	40 <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x40>
  40:	a808      	add	r0, sp, #32
  42:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  46:	f88d 001b 	strb.w	r0, [sp, #27]
  4a:	e7ff      	b.n	4c <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x4c>
  4c:	e010      	b.n	70 <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x70>
  4e:	9905      	ldr	r1, [sp, #20]
  50:	f240 0200 	movw	r2, #0
  54:	f2c0 0200 	movt	r2, #0
  58:	a80b      	add	r0, sp, #44	; 0x2c
  5a:	230c      	movs	r3, #12
  5c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  60:	e7ff      	b.n	62 <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x62>
  62:	a80b      	add	r0, sp, #44	; 0x2c
  64:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  68:	f88d 001b 	strb.w	r0, [sp, #27]
  6c:	e7ff      	b.n	6e <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x6e>
  6e:	e7ff      	b.n	70 <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x70>
  70:	f89d 001b 	ldrb.w	r0, [sp, #27]
  74:	b00e      	add	sp, #56	; 0x38
  76:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN75_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd0a4d90d68669d04E:

00000000 <<cortex_m::register::control::Spsel as core::cmp::PartialEq>::eq>:
_ZN75_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd0a4d90d68669d04E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:65
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b092      	sub	sp, #72	; 0x48
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9007      	str	r0, [sp, #28]
   8:	9108      	str	r1, [sp, #32]
   a:	9807      	ldr	r0, [sp, #28]
   c:	7800      	ldrb	r0, [r0, #0]
   e:	2100      	movs	r1, #0
  10:	910f      	str	r1, [sp, #60]	; 0x3c
  12:	900e      	str	r0, [sp, #56]	; 0x38
  14:	980e      	ldr	r0, [sp, #56]	; 0x38
  16:	990f      	ldr	r1, [sp, #60]	; 0x3c
  18:	9206      	str	r2, [sp, #24]
  1a:	9305      	str	r3, [sp, #20]
  1c:	9004      	str	r0, [sp, #16]
  1e:	9103      	str	r1, [sp, #12]
  20:	e7ff      	b.n	22 <<cortex_m::register::control::Spsel as core::cmp::PartialEq>::eq+0x22>
  22:	9804      	ldr	r0, [sp, #16]
  24:	900a      	str	r0, [sp, #40]	; 0x28
  26:	9908      	ldr	r1, [sp, #32]
  28:	7809      	ldrb	r1, [r1, #0]
  2a:	2200      	movs	r2, #0
  2c:	9211      	str	r2, [sp, #68]	; 0x44
  2e:	9110      	str	r1, [sp, #64]	; 0x40
  30:	9910      	ldr	r1, [sp, #64]	; 0x40
  32:	9a11      	ldr	r2, [sp, #68]	; 0x44
  34:	9102      	str	r1, [sp, #8]
  36:	9201      	str	r2, [sp, #4]
  38:	e7ff      	b.n	3a <<cortex_m::register::control::Spsel as core::cmp::PartialEq>::eq+0x3a>
  3a:	9802      	ldr	r0, [sp, #8]
  3c:	900b      	str	r0, [sp, #44]	; 0x2c
  3e:	990a      	ldr	r1, [sp, #40]	; 0x28
  40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  42:	4291      	cmp	r1, r2
  44:	d108      	bne.n	58 <<cortex_m::register::control::Spsel as core::cmp::PartialEq>::eq+0x58>
  46:	e7ff      	b.n	48 <<cortex_m::register::control::Spsel as core::cmp::PartialEq>::eq+0x48>
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9908      	ldr	r1, [sp, #32]
  4c:	900c      	str	r0, [sp, #48]	; 0x30
  4e:	910d      	str	r1, [sp, #52]	; 0x34
  50:	2001      	movs	r0, #1
  52:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  56:	e003      	b.n	60 <<cortex_m::register::control::Spsel as core::cmp::PartialEq>::eq+0x60>
  58:	2000      	movs	r0, #0
  5a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  5e:	e7ff      	b.n	60 <<cortex_m::register::control::Spsel as core::cmp::PartialEq>::eq+0x60>
  60:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  64:	b012      	add	sp, #72	; 0x48
  66:	4770      	bx	lr

Disassembly of section .text._ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17h5320f29de0b5c1d1E:

00000000 <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt>:
_ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17h5320f29de0b5c1d1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:65
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	07c1      	lsls	r1, r0, #31
  16:	2900      	cmp	r1, #0
  18:	9203      	str	r2, [sp, #12]
  1a:	9302      	str	r3, [sp, #8]
  1c:	9001      	str	r0, [sp, #4]
  1e:	d005      	beq.n	2c <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x2c>
  20:	e7ff      	b.n	22 <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x22>
  22:	9801      	ldr	r0, [sp, #4]
  24:	2801      	cmp	r0, #1
  26:	d012      	beq.n	4e <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x4e>
  28:	e7ff      	b.n	2a <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x2a>
  2a:	defe      	udf	#254	; 0xfe
  2c:	9905      	ldr	r1, [sp, #20]
  2e:	f240 0200 	movw	r2, #0
  32:	f2c0 0200 	movt	r2, #0
  36:	a808      	add	r0, sp, #32
  38:	2303      	movs	r3, #3
  3a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  3e:	e7ff      	b.n	40 <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x40>
  40:	a808      	add	r0, sp, #32
  42:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  46:	f88d 001b 	strb.w	r0, [sp, #27]
  4a:	e7ff      	b.n	4c <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x4c>
  4c:	e010      	b.n	70 <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x70>
  4e:	9905      	ldr	r1, [sp, #20]
  50:	f240 0200 	movw	r2, #0
  54:	f2c0 0200 	movt	r2, #0
  58:	a80b      	add	r0, sp, #44	; 0x2c
  5a:	2303      	movs	r3, #3
  5c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  60:	e7ff      	b.n	62 <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x62>
  62:	a80b      	add	r0, sp, #44	; 0x2c
  64:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  68:	f88d 001b 	strb.w	r0, [sp, #27]
  6c:	e7ff      	b.n	6e <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x6e>
  6e:	e7ff      	b.n	70 <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x70>
  70:	f89d 001b 	ldrb.w	r0, [sp, #27]
  74:	b00e      	add	sp, #56	; 0x38
  76:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN74_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..cmp..PartialEq$GT$2eq17he2828bd2bb6e1ae2E:

00000000 <<cortex_m::register::control::Fpca as core::cmp::PartialEq>::eq>:
_ZN74_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..cmp..PartialEq$GT$2eq17he2828bd2bb6e1ae2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:86
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b092      	sub	sp, #72	; 0x48
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9007      	str	r0, [sp, #28]
   8:	9108      	str	r1, [sp, #32]
   a:	9807      	ldr	r0, [sp, #28]
   c:	7800      	ldrb	r0, [r0, #0]
   e:	2100      	movs	r1, #0
  10:	910f      	str	r1, [sp, #60]	; 0x3c
  12:	900e      	str	r0, [sp, #56]	; 0x38
  14:	980e      	ldr	r0, [sp, #56]	; 0x38
  16:	990f      	ldr	r1, [sp, #60]	; 0x3c
  18:	9206      	str	r2, [sp, #24]
  1a:	9305      	str	r3, [sp, #20]
  1c:	9004      	str	r0, [sp, #16]
  1e:	9103      	str	r1, [sp, #12]
  20:	e7ff      	b.n	22 <<cortex_m::register::control::Fpca as core::cmp::PartialEq>::eq+0x22>
  22:	9804      	ldr	r0, [sp, #16]
  24:	900a      	str	r0, [sp, #40]	; 0x28
  26:	9908      	ldr	r1, [sp, #32]
  28:	7809      	ldrb	r1, [r1, #0]
  2a:	2200      	movs	r2, #0
  2c:	9211      	str	r2, [sp, #68]	; 0x44
  2e:	9110      	str	r1, [sp, #64]	; 0x40
  30:	9910      	ldr	r1, [sp, #64]	; 0x40
  32:	9a11      	ldr	r2, [sp, #68]	; 0x44
  34:	9102      	str	r1, [sp, #8]
  36:	9201      	str	r2, [sp, #4]
  38:	e7ff      	b.n	3a <<cortex_m::register::control::Fpca as core::cmp::PartialEq>::eq+0x3a>
  3a:	9802      	ldr	r0, [sp, #8]
  3c:	900b      	str	r0, [sp, #44]	; 0x2c
  3e:	990a      	ldr	r1, [sp, #40]	; 0x28
  40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  42:	4291      	cmp	r1, r2
  44:	d108      	bne.n	58 <<cortex_m::register::control::Fpca as core::cmp::PartialEq>::eq+0x58>
  46:	e7ff      	b.n	48 <<cortex_m::register::control::Fpca as core::cmp::PartialEq>::eq+0x48>
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9908      	ldr	r1, [sp, #32]
  4c:	900c      	str	r0, [sp, #48]	; 0x30
  4e:	910d      	str	r1, [sp, #52]	; 0x34
  50:	2001      	movs	r0, #1
  52:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  56:	e003      	b.n	60 <<cortex_m::register::control::Fpca as core::cmp::PartialEq>::eq+0x60>
  58:	2000      	movs	r0, #0
  5a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  5e:	e7ff      	b.n	60 <<cortex_m::register::control::Fpca as core::cmp::PartialEq>::eq+0x60>
  60:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  64:	b012      	add	sp, #72	; 0x48
  66:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h40ecd8cf7a158846E:

00000000 <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt>:
_ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h40ecd8cf7a158846E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/control.rs:86
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	07c1      	lsls	r1, r0, #31
  16:	2900      	cmp	r1, #0
  18:	9203      	str	r2, [sp, #12]
  1a:	9302      	str	r3, [sp, #8]
  1c:	9001      	str	r0, [sp, #4]
  1e:	d005      	beq.n	2c <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x2c>
  20:	e7ff      	b.n	22 <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x22>
  22:	9801      	ldr	r0, [sp, #4]
  24:	2801      	cmp	r0, #1
  26:	d012      	beq.n	4e <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x4e>
  28:	e7ff      	b.n	2a <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x2a>
  2a:	defe      	udf	#254	; 0xfe
  2c:	9905      	ldr	r1, [sp, #20]
  2e:	f240 0200 	movw	r2, #0
  32:	f2c0 0200 	movt	r2, #0
  36:	a808      	add	r0, sp, #32
  38:	2306      	movs	r3, #6
  3a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  3e:	e7ff      	b.n	40 <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x40>
  40:	a808      	add	r0, sp, #32
  42:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  46:	f88d 001b 	strb.w	r0, [sp, #27]
  4a:	e7ff      	b.n	4c <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x4c>
  4c:	e010      	b.n	70 <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x70>
  4e:	9905      	ldr	r1, [sp, #20]
  50:	f240 0200 	movw	r2, #0
  54:	f2c0 0200 	movt	r2, #0
  58:	a80b      	add	r0, sp, #44	; 0x2c
  5a:	2309      	movs	r3, #9
  5c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  60:	e7ff      	b.n	62 <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x62>
  62:	a80b      	add	r0, sp, #44	; 0x2c
  64:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  68:	f88d 001b 	strb.w	r0, [sp, #27]
  6c:	e7ff      	b.n	6e <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x6e>
  6e:	e7ff      	b.n	70 <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x70>
  70:	f89d 001b 	ldrb.w	r0, [sp, #27]
  74:	b00e      	add	sp, #56	; 0x38
  76:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.4.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.4
0000016a l       .debug_str	00000000 
000001f6 l       .debug_str	00000000 
000001f1 l       .debug_str	00000000 
000001e7 l       .debug_str	00000000 
000001e3 l       .debug_str	00000000 
00000214 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
0000020f l       .debug_str	00000000 
0000020a l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
000001fe l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f2 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000152 l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
00000174 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
000001fa l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.3	00000018 .Lanon.6b8299bb998503e94a6a397f5b355eba.3
00000000 l     O .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.5	00000010 .Lanon.6b8299bb998503e94a6a397f5b355eba.5
00000000 l     F .text._ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hc9f3835ab11a4988E	0000004c core::char::methods::<impl char>::len_utf8
00000000 l    d  .text._ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h1e1b1ed7af1db35cE	00000000 .text._ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h1e1b1ed7af1db35cE
00000000 l    d  .text._ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hc9f3835ab11a4988E	00000000 .text._ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hc9f3835ab11a4988E
00000000 l    d  .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.0	00000000 .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.0
00000000 l    d  .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.1	00000000 .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.1
00000000 l    d  .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.2	00000000 .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.2
00000000 l    d  .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.4	00000000 .rodata..Lanon.6b8299bb998503e94a6a397f5b355eba.4
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 .hidden core::str::from_utf8_unchecked_mut
00000000         *UND*	00000000 .hidden core::char::convert::from_u32_unchecked
00000000 g     F .text._ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h1e1b1ed7af1db35cE	0000033a .hidden core::char::methods::<impl char>::encode_utf8
00000000         *UND*	00000000 core::slice::<impl [T]>::get_unchecked_mut
00000000         *UND*	00000000 core::slice::<impl [T]>::get_unchecked_mut
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000         *UND*	00000000 core::slice::<impl [T]>::is_empty
00000000         *UND*	00000000 core::panicking::panic_fmt



Disassembly of section .text._ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h1e1b1ed7af1db35cE:

00000000 <core::char::methods::<impl char>::encode_utf8>:
_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h1e1b1ed7af1db35cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:436
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0c2      	sub	sp, #264	; 0x108
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9027      	str	r0, [sp, #156]	; 0x9c
   c:	9128      	str	r1, [sp, #160]	; 0xa0
   e:	9229      	str	r2, [sp, #164]	; 0xa4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:437
  10:	9827      	ldr	r0, [sp, #156]	; 0x9c
  12:	902a      	str	r0, [sp, #168]	; 0xa8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:440
  14:	982a      	ldr	r0, [sp, #168]	; 0xa8
  16:	2880      	cmp	r0, #128	; 0x80
  18:	9326      	str	r3, [sp, #152]	; 0x98
  1a:	f8cd c094 	str.w	ip, [sp, #148]	; 0x94
  1e:	f8cd e090 	str.w	lr, [sp, #144]	; 0x90
  22:	d304      	bcc.n	2e <core::char::methods::<impl char>::encode_utf8+0x2e>
  24:	e7ff      	b.n	26 <core::char::methods::<impl char>::encode_utf8+0x26>
  26:	2000      	movs	r0, #0
  28:	f88d 00b1 	strb.w	r0, [sp, #177]	; 0xb1
  2c:	e005      	b.n	3a <core::char::methods::<impl char>::encode_utf8+0x3a>
  2e:	9828      	ldr	r0, [sp, #160]	; 0xa0
  30:	9929      	ldr	r1, [sp, #164]	; 0xa4
  32:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::is_empty>
  36:	9023      	str	r0, [sp, #140]	; 0x8c
  38:	e005      	b.n	46 <core::char::methods::<impl char>::encode_utf8+0x46>
  3a:	f89d 00b1 	ldrb.w	r0, [sp, #177]	; 0xb1
  3e:	07c0      	lsls	r0, r0, #31
  40:	2800      	cmp	r0, #0
  42:	d106      	bne.n	52 <core::char::methods::<impl char>::encode_utf8+0x52>
  44:	e017      	b.n	76 <core::char::methods::<impl char>::encode_utf8+0x76>
  46:	2001      	movs	r0, #1
  48:	9923      	ldr	r1, [sp, #140]	; 0x8c
  4a:	4388      	bics	r0, r1
  4c:	f88d 00b1 	strb.w	r0, [sp, #177]	; 0xb1
  50:	e7f3      	b.n	3a <core::char::methods::<impl char>::encode_utf8+0x3a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:441
  52:	982a      	ldr	r0, [sp, #168]	; 0xa8
  54:	9928      	ldr	r1, [sp, #160]	; 0xa0
  56:	9a29      	ldr	r2, [sp, #164]	; 0xa4
  58:	2300      	movs	r3, #0
  5a:	9022      	str	r0, [sp, #136]	; 0x88
  5c:	4608      	mov	r0, r1
  5e:	4611      	mov	r1, r2
  60:	461a      	mov	r2, r3
  62:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
  66:	9021      	str	r0, [sp, #132]	; 0x84
  68:	e7ff      	b.n	6a <core::char::methods::<impl char>::encode_utf8+0x6a>
  6a:	9822      	ldr	r0, [sp, #136]	; 0x88
  6c:	9921      	ldr	r1, [sp, #132]	; 0x84
  6e:	7008      	strb	r0, [r1, #0]
  70:	2201      	movs	r2, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:442
  72:	922b      	str	r2, [sp, #172]	; 0xac
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:440
  74:	e14c      	b.n	310 <core::char::methods::<impl char>::encode_utf8+0x310>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:443
  76:	982a      	ldr	r0, [sp, #168]	; 0xa8
  78:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
  7c:	d304      	bcc.n	88 <core::char::methods::<impl char>::encode_utf8+0x88>
  7e:	e7ff      	b.n	80 <core::char::methods::<impl char>::encode_utf8+0x80>
  80:	2000      	movs	r0, #0
  82:	f88d 00b2 	strb.w	r0, [sp, #178]	; 0xb2
  86:	e005      	b.n	94 <core::char::methods::<impl char>::encode_utf8+0x94>
  88:	9828      	ldr	r0, [sp, #160]	; 0xa0
  8a:	9929      	ldr	r1, [sp, #164]	; 0xa4
  8c:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  90:	9020      	str	r0, [sp, #128]	; 0x80
  92:	e005      	b.n	a0 <core::char::methods::<impl char>::encode_utf8+0xa0>
  94:	f89d 00b2 	ldrb.w	r0, [sp, #178]	; 0xb2
  98:	07c0      	lsls	r0, r0, #31
  9a:	2800      	cmp	r0, #0
  9c:	d108      	bne.n	b0 <core::char::methods::<impl char>::encode_utf8+0xb0>
  9e:	e02e      	b.n	fe <core::char::methods::<impl char>::encode_utf8+0xfe>
  a0:	2000      	movs	r0, #0
  a2:	9920      	ldr	r1, [sp, #128]	; 0x80
  a4:	2901      	cmp	r1, #1
  a6:	bf88      	it	hi
  a8:	2001      	movhi	r0, #1
  aa:	f88d 00b2 	strb.w	r0, [sp, #178]	; 0xb2
  ae:	e7f1      	b.n	94 <core::char::methods::<impl char>::encode_utf8+0x94>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:444
  b0:	982a      	ldr	r0, [sp, #168]	; 0xa8
  b2:	f3c0 1084 	ubfx	r0, r0, #6, #5
  b6:	9928      	ldr	r1, [sp, #160]	; 0xa0
  b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
  ba:	2300      	movs	r3, #0
  bc:	901f      	str	r0, [sp, #124]	; 0x7c
  be:	4608      	mov	r0, r1
  c0:	4611      	mov	r1, r2
  c2:	461a      	mov	r2, r3
  c4:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
  c8:	901e      	str	r0, [sp, #120]	; 0x78
  ca:	e7ff      	b.n	cc <core::char::methods::<impl char>::encode_utf8+0xcc>
  cc:	981f      	ldr	r0, [sp, #124]	; 0x7c
  ce:	f040 01c0 	orr.w	r1, r0, #192	; 0xc0
  d2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
  d4:	7011      	strb	r1, [r2, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:445
  d6:	992a      	ldr	r1, [sp, #168]	; 0xa8
  d8:	f001 013f 	and.w	r1, r1, #63	; 0x3f
  dc:	9828      	ldr	r0, [sp, #160]	; 0xa0
  de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
  e0:	2201      	movs	r2, #1
  e2:	911d      	str	r1, [sp, #116]	; 0x74
  e4:	4619      	mov	r1, r3
  e6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
  ea:	901c      	str	r0, [sp, #112]	; 0x70
  ec:	e7ff      	b.n	ee <core::char::methods::<impl char>::encode_utf8+0xee>
  ee:	981d      	ldr	r0, [sp, #116]	; 0x74
  f0:	f040 0180 	orr.w	r1, r0, #128	; 0x80
  f4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  f6:	7011      	strb	r1, [r2, #0]
  f8:	2102      	movs	r1, #2
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:446
  fa:	912b      	str	r1, [sp, #172]	; 0xac
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:443
  fc:	e107      	b.n	30e <core::char::methods::<impl char>::encode_utf8+0x30e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:447
  fe:	982a      	ldr	r0, [sp, #168]	; 0xa8
 100:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 104:	d304      	bcc.n	110 <core::char::methods::<impl char>::encode_utf8+0x110>
 106:	e7ff      	b.n	108 <core::char::methods::<impl char>::encode_utf8+0x108>
 108:	2000      	movs	r0, #0
 10a:	f88d 00b3 	strb.w	r0, [sp, #179]	; 0xb3
 10e:	e005      	b.n	11c <core::char::methods::<impl char>::encode_utf8+0x11c>
 110:	9828      	ldr	r0, [sp, #160]	; 0xa0
 112:	9929      	ldr	r1, [sp, #164]	; 0xa4
 114:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
 118:	901b      	str	r0, [sp, #108]	; 0x6c
 11a:	e005      	b.n	128 <core::char::methods::<impl char>::encode_utf8+0x128>
 11c:	f89d 00b3 	ldrb.w	r0, [sp, #179]	; 0xb3
 120:	07c0      	lsls	r0, r0, #31
 122:	2800      	cmp	r0, #0
 124:	d108      	bne.n	138 <core::char::methods::<impl char>::encode_utf8+0x138>
 126:	e03f      	b.n	1a8 <core::char::methods::<impl char>::encode_utf8+0x1a8>
 128:	2000      	movs	r0, #0
 12a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 12c:	2902      	cmp	r1, #2
 12e:	bf88      	it	hi
 130:	2001      	movhi	r0, #1
 132:	f88d 00b3 	strb.w	r0, [sp, #179]	; 0xb3
 136:	e7f1      	b.n	11c <core::char::methods::<impl char>::encode_utf8+0x11c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:448
 138:	982a      	ldr	r0, [sp, #168]	; 0xa8
 13a:	f3c0 3003 	ubfx	r0, r0, #12, #4
 13e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 140:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 142:	2300      	movs	r3, #0
 144:	901a      	str	r0, [sp, #104]	; 0x68
 146:	4608      	mov	r0, r1
 148:	4611      	mov	r1, r2
 14a:	461a      	mov	r2, r3
 14c:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
 150:	9019      	str	r0, [sp, #100]	; 0x64
 152:	e7ff      	b.n	154 <core::char::methods::<impl char>::encode_utf8+0x154>
 154:	981a      	ldr	r0, [sp, #104]	; 0x68
 156:	f040 01e0 	orr.w	r1, r0, #224	; 0xe0
 15a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 15c:	7011      	strb	r1, [r2, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:449
 15e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 160:	f3c1 1185 	ubfx	r1, r1, #6, #6
 164:	9828      	ldr	r0, [sp, #160]	; 0xa0
 166:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 168:	2201      	movs	r2, #1
 16a:	9118      	str	r1, [sp, #96]	; 0x60
 16c:	4619      	mov	r1, r3
 16e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
 172:	9017      	str	r0, [sp, #92]	; 0x5c
 174:	e7ff      	b.n	176 <core::char::methods::<impl char>::encode_utf8+0x176>
 176:	9818      	ldr	r0, [sp, #96]	; 0x60
 178:	f040 0180 	orr.w	r1, r0, #128	; 0x80
 17c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 17e:	7011      	strb	r1, [r2, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:450
 180:	992a      	ldr	r1, [sp, #168]	; 0xa8
 182:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 186:	9828      	ldr	r0, [sp, #160]	; 0xa0
 188:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 18a:	2202      	movs	r2, #2
 18c:	9116      	str	r1, [sp, #88]	; 0x58
 18e:	4619      	mov	r1, r3
 190:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
 194:	9015      	str	r0, [sp, #84]	; 0x54
 196:	e7ff      	b.n	198 <core::char::methods::<impl char>::encode_utf8+0x198>
 198:	9816      	ldr	r0, [sp, #88]	; 0x58
 19a:	f040 0180 	orr.w	r1, r0, #128	; 0x80
 19e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 1a0:	7011      	strb	r1, [r2, #0]
 1a2:	2103      	movs	r1, #3
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:451
 1a4:	912b      	str	r1, [sp, #172]	; 0xac
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:447
 1a6:	e0b1      	b.n	30c <core::char::methods::<impl char>::encode_utf8+0x30c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:452
 1a8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 1aa:	9929      	ldr	r1, [sp, #164]	; 0xa4
 1ac:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
 1b0:	9014      	str	r0, [sp, #80]	; 0x50
 1b2:	e7ff      	b.n	1b4 <core::char::methods::<impl char>::encode_utf8+0x1b4>
 1b4:	9814      	ldr	r0, [sp, #80]	; 0x50
 1b6:	2804      	cmp	r0, #4
 1b8:	d349      	bcc.n	24e <core::char::methods::<impl char>::encode_utf8+0x24e>
 1ba:	e7ff      	b.n	1bc <core::char::methods::<impl char>::encode_utf8+0x1bc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:453
 1bc:	982a      	ldr	r0, [sp, #168]	; 0xa8
 1be:	f3c0 4082 	ubfx	r0, r0, #18, #3
 1c2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 1c4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 1c6:	2300      	movs	r3, #0
 1c8:	9013      	str	r0, [sp, #76]	; 0x4c
 1ca:	4608      	mov	r0, r1
 1cc:	4611      	mov	r1, r2
 1ce:	461a      	mov	r2, r3
 1d0:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
 1d4:	9012      	str	r0, [sp, #72]	; 0x48
 1d6:	e7ff      	b.n	1d8 <core::char::methods::<impl char>::encode_utf8+0x1d8>
 1d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 1da:	f040 01f0 	orr.w	r1, r0, #240	; 0xf0
 1de:	9a12      	ldr	r2, [sp, #72]	; 0x48
 1e0:	7011      	strb	r1, [r2, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:454
 1e2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 1e4:	f3c1 3105 	ubfx	r1, r1, #12, #6
 1e8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 1ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 1ec:	2201      	movs	r2, #1
 1ee:	9111      	str	r1, [sp, #68]	; 0x44
 1f0:	4619      	mov	r1, r3
 1f2:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
 1f6:	9010      	str	r0, [sp, #64]	; 0x40
 1f8:	e7ff      	b.n	1fa <core::char::methods::<impl char>::encode_utf8+0x1fa>
 1fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 1fc:	f040 0180 	orr.w	r1, r0, #128	; 0x80
 200:	9a10      	ldr	r2, [sp, #64]	; 0x40
 202:	7011      	strb	r1, [r2, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:455
 204:	992a      	ldr	r1, [sp, #168]	; 0xa8
 206:	f3c1 1185 	ubfx	r1, r1, #6, #6
 20a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 20c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 20e:	2202      	movs	r2, #2
 210:	910f      	str	r1, [sp, #60]	; 0x3c
 212:	4619      	mov	r1, r3
 214:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
 218:	900e      	str	r0, [sp, #56]	; 0x38
 21a:	e7ff      	b.n	21c <core::char::methods::<impl char>::encode_utf8+0x21c>
 21c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 21e:	f040 0180 	orr.w	r1, r0, #128	; 0x80
 222:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 224:	7011      	strb	r1, [r2, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:456
 226:	992a      	ldr	r1, [sp, #168]	; 0xa8
 228:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 22c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 22e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 230:	2203      	movs	r2, #3
 232:	910d      	str	r1, [sp, #52]	; 0x34
 234:	4619      	mov	r1, r3
 236:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
 23a:	900c      	str	r0, [sp, #48]	; 0x30
 23c:	e7ff      	b.n	23e <core::char::methods::<impl char>::encode_utf8+0x23e>
 23e:	980d      	ldr	r0, [sp, #52]	; 0x34
 240:	f040 0180 	orr.w	r1, r0, #128	; 0x80
 244:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 246:	7011      	strb	r1, [r2, #0]
 248:	2104      	movs	r1, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:457
 24a:	912b      	str	r1, [sp, #172]	; 0xac
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:447
 24c:	e05e      	b.n	30c <core::char::methods::<impl char>::encode_utf8+0x30c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:460
 24e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 250:	f7ff fffe 	bl	0 <core::char::convert::from_u32_unchecked>
 254:	900b      	str	r0, [sp, #44]	; 0x2c
 256:	e7ff      	b.n	258 <core::char::methods::<impl char>::encode_utf8+0x258>
 258:	980b      	ldr	r0, [sp, #44]	; 0x2c
 25a:	f7ff fffe 	bl	0 <core::char::methods::<impl char>::encode_utf8>
 25e:	903c      	str	r0, [sp, #240]	; 0xf0
 260:	e7ff      	b.n	262 <core::char::methods::<impl char>::encode_utf8+0x262>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:462
 262:	9828      	ldr	r0, [sp, #160]	; 0xa0
 264:	9929      	ldr	r1, [sp, #164]	; 0xa4
 266:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
 26a:	903d      	str	r0, [sp, #244]	; 0xf4
 26c:	e7ff      	b.n	26e <core::char::methods::<impl char>::encode_utf8+0x26e>
 26e:	a83c      	add	r0, sp, #240	; 0xf0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:459
 270:	9039      	str	r0, [sp, #228]	; 0xe4
 272:	a82a      	add	r0, sp, #168	; 0xa8
 274:	903a      	str	r0, [sp, #232]	; 0xe8
 276:	a83d      	add	r0, sp, #244	; 0xf4
 278:	903b      	str	r0, [sp, #236]	; 0xec
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src/lib.rs:1
//! Low level access to Cortex-M processors
 27a:	9839      	ldr	r0, [sp, #228]	; 0xe4
 27c:	903e      	str	r0, [sp, #248]	; 0xf8
 27e:	983a      	ldr	r0, [sp, #232]	; 0xe8
 280:	903f      	str	r0, [sp, #252]	; 0xfc
 282:	983b      	ldr	r0, [sp, #236]	; 0xec
 284:	9040      	str	r0, [sp, #256]	; 0x100
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:460
 286:	983e      	ldr	r0, [sp, #248]	; 0xf8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
 288:	f240 0100 	movw	r1, #0
 28c:	f2c0 0100 	movt	r1, #0
 290:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 294:	900a      	str	r0, [sp, #40]	; 0x28
 296:	9109      	str	r1, [sp, #36]	; 0x24
 298:	e7ff      	b.n	29a <core::char::methods::<impl char>::encode_utf8+0x29a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:461
 29a:	983f      	ldr	r0, [sp, #252]	; 0xfc
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
 29c:	f240 0100 	movw	r1, #0
 2a0:	f2c0 0100 	movt	r1, #0
 2a4:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 2a8:	9008      	str	r0, [sp, #32]
 2aa:	9107      	str	r1, [sp, #28]
 2ac:	e7ff      	b.n	2ae <core::char::methods::<impl char>::encode_utf8+0x2ae>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:462
 2ae:	9840      	ldr	r0, [sp, #256]	; 0x100
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
 2b0:	f240 0100 	movw	r1, #0
 2b4:	f2c0 0100 	movt	r1, #0
 2b8:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 2bc:	9006      	str	r0, [sp, #24]
 2be:	9105      	str	r1, [sp, #20]
 2c0:	e7ff      	b.n	2c2 <core::char::methods::<impl char>::encode_utf8+0x2c2>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:459
 2c2:	980a      	ldr	r0, [sp, #40]	; 0x28
 2c4:	9033      	str	r0, [sp, #204]	; 0xcc
 2c6:	9909      	ldr	r1, [sp, #36]	; 0x24
 2c8:	9134      	str	r1, [sp, #208]	; 0xd0
 2ca:	9a08      	ldr	r2, [sp, #32]
 2cc:	9235      	str	r2, [sp, #212]	; 0xd4
 2ce:	9b07      	ldr	r3, [sp, #28]
 2d0:	9336      	str	r3, [sp, #216]	; 0xd8
 2d2:	f8dd c018 	ldr.w	ip, [sp, #24]
 2d6:	f8cd c0dc 	str.w	ip, [sp, #220]	; 0xdc
 2da:	f8dd e014 	ldr.w	lr, [sp, #20]
 2de:	f8cd e0e0 	str.w	lr, [sp, #224]	; 0xe0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
 2e2:	466c      	mov	r4, sp
 2e4:	2503      	movs	r5, #3
 2e6:	6025      	str	r5, [r4, #0]
 2e8:	f240 0100 	movw	r1, #0
 2ec:	f2c0 0100 	movt	r1, #0
 2f0:	a82d      	add	r0, sp, #180	; 0xb4
 2f2:	ab33      	add	r3, sp, #204	; 0xcc
 2f4:	462a      	mov	r2, r5
 2f6:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 2fa:	e7ff      	b.n	2 <core::char::methods::<impl char>::encode_utf8+0x2>
 2fc:	f240 0100 	movw	r1, #0
 300:	f2c0 0100 	movt	r1, #0
 304:	a82d      	add	r0, sp, #180	; 0xb4
 306:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 30a:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:443
 30c:	e7ff      	b.n	30e <core::char::methods::<impl char>::encode_utf8+0x30e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:440
 30e:	e7ff      	b.n	310 <core::char::methods::<impl char>::encode_utf8+0x310>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:464
 310:	9828      	ldr	r0, [sp, #160]	; 0xa0
 312:	9929      	ldr	r1, [sp, #164]	; 0xa4
 314:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 316:	9241      	str	r2, [sp, #260]	; 0x104
 318:	9a41      	ldr	r2, [sp, #260]	; 0x104
 31a:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
 31e:	9004      	str	r0, [sp, #16]
 320:	9103      	str	r1, [sp, #12]
 322:	e7ff      	b.n	324 <core::char::methods::<impl char>::encode_utf8+0x324>
 324:	9804      	ldr	r0, [sp, #16]
 326:	9903      	ldr	r1, [sp, #12]
 328:	f7ff fffe 	bl	0 <core::str::from_utf8_unchecked_mut>
 32c:	9002      	str	r0, [sp, #8]
 32e:	9101      	str	r1, [sp, #4]
 330:	e7ff      	b.n	332 <core::char::methods::<impl char>::encode_utf8+0x332>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:466
 332:	9802      	ldr	r0, [sp, #8]
 334:	9901      	ldr	r1, [sp, #4]
 336:	b042      	add	sp, #264	; 0x108
 338:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hc9f3835ab11a4988E:

00000000 <core::char::methods::<impl char>::len_utf8>:
_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hc9f3835ab11a4988E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:359
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:360
   6:	9801      	ldr	r0, [sp, #4]
   8:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:361
   a:	9803      	ldr	r0, [sp, #12]
   c:	287f      	cmp	r0, #127	; 0x7f
   e:	9100      	str	r1, [sp, #0]
  10:	d803      	bhi.n	1a <core::char::methods::<impl char>::len_utf8+0x1a>
  12:	e7ff      	b.n	14 <core::char::methods::<impl char>::len_utf8+0x14>
  14:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:362
  16:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:361
  18:	e015      	b.n	46 <core::char::methods::<impl char>::len_utf8+0x46>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:363
  1a:	9803      	ldr	r0, [sp, #12]
  1c:	2100      	movs	r1, #0
  1e:	ebb1 2fd0 	cmp.w	r1, r0, lsr #11
  22:	d103      	bne.n	2c <core::char::methods::<impl char>::len_utf8+0x2c>
  24:	e7ff      	b.n	26 <core::char::methods::<impl char>::len_utf8+0x26>
  26:	2002      	movs	r0, #2
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:364
  28:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:363
  2a:	e00b      	b.n	44 <core::char::methods::<impl char>::len_utf8+0x44>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:365
  2c:	f8bd 000e 	ldrh.w	r0, [sp, #14]
  30:	2800      	cmp	r0, #0
  32:	d103      	bne.n	3c <core::char::methods::<impl char>::len_utf8+0x3c>
  34:	e7ff      	b.n	36 <core::char::methods::<impl char>::len_utf8+0x36>
  36:	2003      	movs	r0, #3
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:366
  38:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:365
  3a:	e002      	b.n	42 <core::char::methods::<impl char>::len_utf8+0x42>
  3c:	2004      	movs	r0, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:368
  3e:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:365
  40:	e7ff      	b.n	42 <core::char::methods::<impl char>::len_utf8+0x42>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:363
  42:	e7ff      	b.n	44 <core::char::methods::<impl char>::len_utf8+0x44>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:361
  44:	e7ff      	b.n	46 <core::char::methods::<impl char>::len_utf8+0x46>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:370
  46:	9802      	ldr	r0, [sp, #8]
  48:	b004      	add	sp, #16
  4a:	4770      	bx	lr

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.5.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.5
0000098f l       .debug_str	00000000 
00001390 l       .debug_str	00000000 
00001404 l       .debug_str	00000000 
00001384 l       .debug_str	00000000 
000013f9 l       .debug_str	00000000 
0000135e l       .debug_str	00000000 
000013f5 l       .debug_str	00000000 
00001354 l       .debug_str	00000000 
000013ef l       .debug_str	00000000 
0000132e l       .debug_str	00000000 
000013eb l       .debug_str	00000000 
00001324 l       .debug_str	00000000 
000012fe l       .debug_str	00000000 
000013e9 l       .debug_str	00000000 
000012f3 l       .debug_str	00000000 
000013e7 l       .debug_str	00000000 
000012e7 l       .debug_str	00000000 
000013dc l       .debug_str	00000000 
0000129c l       .debug_str	00000000 
000013da l       .debug_str	00000000 
00001292 l       .debug_str	00000000 
000013d6 l       .debug_str	00000000 
00001247 l       .debug_str	00000000 
000013d0 l       .debug_str	00000000 
0000123c l       .debug_str	00000000 
000013ce l       .debug_str	00000000 
000011f3 l       .debug_str	00000000 
000013cc l       .debug_str	00000000 
000011eb l       .debug_str	00000000 
000013c8 l       .debug_str	00000000 
000011e3 l       .debug_str	00000000 
000013c4 l       .debug_str	00000000 
0000119d l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000f5 l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000142 l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
0000014e l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
00000190 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
0000021a l       .debug_str	00000000 
00000252 l       .debug_str	00000000 
00000283 l       .debug_str	00000000 
00000288 l       .debug_str	00000000 
000002df l       .debug_str	00000000 
000002e8 l       .debug_str	00000000 
0000036a l       .debug_str	00000000 
000003a1 l       .debug_str	00000000 
000003d2 l       .debug_str	00000000 
0000042b l       .debug_str	00000000 
0000043a l       .debug_str	00000000 
0000047d l       .debug_str	00000000 
000004bf l       .debug_str	00000000 
00000510 l       .debug_str	00000000 
00000551 l       .debug_str	00000000 
0000058b l       .debug_str	00000000 
000005eb l       .debug_str	00000000 
0000066d l       .debug_str	00000000 
000006ad l       .debug_str	00000000 
000006e7 l       .debug_str	00000000 
00000749 l       .debug_str	00000000 
0000074d l       .debug_str	00000000 
0000075f l       .debug_str	00000000 
00000770 l       .debug_str	00000000 
000007bc l       .debug_str	00000000 
000007c8 l       .debug_str	00000000 
00000819 l       .debug_str	00000000 
00000829 l       .debug_str	00000000 
00000832 l       .debug_str	00000000 
00000861 l       .debug_str	00000000 
000008e3 l       .debug_str	00000000 
000008f2 l       .debug_str	00000000 
000008fb l       .debug_str	00000000 
0000092c l       .debug_str	00000000 
0000097e l       .debug_str	00000000 
00001161 l       .debug_str	00000000 
000009e2 l       .debug_str	00000000 
000009f2 l       .debug_str	00000000 
000009f7 l       .debug_str	00000000 
000009fb l       .debug_str	00000000 
00000a0d l       .debug_str	00000000 
00000a1e l       .debug_str	00000000 
00000a6a l       .debug_str	00000000 
00000a76 l       .debug_str	00000000 
00000ac7 l       .debug_str	00000000 
00000ad7 l       .debug_str	00000000 
00000ae0 l       .debug_str	00000000 
00000b0f l       .debug_str	00000000 
00000b91 l       .debug_str	00000000 
00000ba0 l       .debug_str	00000000 
00000ba9 l       .debug_str	00000000 
00000bda l       .debug_str	00000000 
00000c2c l       .debug_str	00000000 
00000c3d l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00000ca0 l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cba l       .debug_str	00000000 
00000ccd l       .debug_str	00000000 
00000d19 l       .debug_str	00000000 
00000d27 l       .debug_str	00000000 
00000d78 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d95 l       .debug_str	00000000 
00000dc6 l       .debug_str	00000000 
00000e48 l       .debug_str	00000000 
00000e59 l       .debug_str	00000000 
00000e64 l       .debug_str	00000000 
00000e97 l       .debug_str	00000000 
00000ee9 l       .debug_str	00000000 
00000efc l       .debug_str	00000000 
00000f4f l       .debug_str	00000000 
00000f61 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000fa4 l       .debug_str	00000000 
00000fa7 l       .debug_str	00000000 
00000fd7 l       .debug_str	00000000 
00000fe9 l       .debug_str	00000000 
0000101a l       .debug_str	00000000 
0000102e l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
00001072 l       .debug_str	00000000 
000010a3 l       .debug_str	00000000 
000010b7 l       .debug_str	00000000 
000010ed l       .debug_str	00000000 
00001108 l       .debug_str	00000000 
00001142 l       .debug_str	00000000 
000013b7 l       .debug_str	00000000 
00000000 l     F .text._ZN4core3ptr25swap_nonoverlapping_bytes17h207030fa2b56460eE	00000106 core::ptr::swap_nonoverlapping_bytes
00000000 l    d  .text._ZN4core3ptr13read_volatile17h0bb85acd84ea1165E	00000000 .text._ZN4core3ptr13read_volatile17h0bb85acd84ea1165E
00000000 l    d  .text._ZN4core3ptr13read_volatile17hc6cda3b26eaf907eE	00000000 .text._ZN4core3ptr13read_volatile17hc6cda3b26eaf907eE
00000000 l    d  .text._ZN4core3ptr14write_volatile17h11b0a70c751486e5E	00000000 .text._ZN4core3ptr14write_volatile17h11b0a70c751486e5E
00000000 l    d  .text._ZN4core3ptr14write_volatile17h12417a29d6e904c8E	00000000 .text._ZN4core3ptr14write_volatile17h12417a29d6e904c8E
00000000 l    d  .text._ZN4core3ptr14write_volatile17h509c017d25030e84E	00000000 .text._ZN4core3ptr14write_volatile17h509c017d25030e84E
00000000 l    d  .text._ZN4core3ptr19swap_nonoverlapping17h26d7fa230e41b811E	00000000 .text._ZN4core3ptr19swap_nonoverlapping17h26d7fa230e41b811E
00000000 l    d  .text._ZN4core3ptr23swap_nonoverlapping_one17h5996d4fc0634cce3E	00000000 .text._ZN4core3ptr23swap_nonoverlapping_one17h5996d4fc0634cce3E
00000000 l    d  .text._ZN4core3ptr25swap_nonoverlapping_bytes17h207030fa2b56460eE	00000000 .text._ZN4core3ptr25swap_nonoverlapping_bytes17h207030fa2b56460eE
00000000 l    d  .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he802cbfdf9f38125E	00000000 .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he802cbfdf9f38125E
00000000 l    d  .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha2dc23dd4e3e146dE	00000000 .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha2dc23dd4e3e146dE
00000000 l    d  .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h08f85a084241b3e6E	00000000 .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h08f85a084241b3e6E
00000000 l    d  .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hf9eb0c1609d3870bE	00000000 .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hf9eb0c1609d3870bE
00000000 l    d  .text._ZN4core3ptr4read17ha5c22d5adb0fe631E	00000000 .text._ZN4core3ptr4read17ha5c22d5adb0fe631E
00000000 l    d  .text._ZN4core3ptr4read17he89ac909507700d3E	00000000 .text._ZN4core3ptr4read17he89ac909507700d3E
00000000 l    d  .text._ZN4core3ptr4read17hef95bc5fe51b9358E	00000000 .text._ZN4core3ptr4read17hef95bc5fe51b9358E
00000000 l    d  .text._ZN4core3ptr5write17h295399ff06cd9c41E	00000000 .text._ZN4core3ptr5write17h295399ff06cd9c41E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::mem::size_of
00000000         *UND*	00000000 core::mem::size_of
00000000 g     F .text._ZN4core3ptr13read_volatile17h0bb85acd84ea1165E	0000001a core::ptr::read_volatile
00000000 g     F .text._ZN4core3ptr13read_volatile17hc6cda3b26eaf907eE	0000001e core::ptr::read_volatile
00000000 g     F .text._ZN4core3ptr14write_volatile17h11b0a70c751486e5E	0000001a core::ptr::write_volatile
00000000 g     F .text._ZN4core3ptr14write_volatile17h12417a29d6e904c8E	0000001e core::ptr::write_volatile
00000000 g     F .text._ZN4core3ptr14write_volatile17h509c017d25030e84E	0000001e core::ptr::write_volatile
00000000 g     F .text._ZN4core3ptr19swap_nonoverlapping17h26d7fa230e41b811E	00000042 core::ptr::swap_nonoverlapping
00000000 g     F .text._ZN4core3ptr23swap_nonoverlapping_one17h5996d4fc0634cce3E	00000054 core::ptr::swap_nonoverlapping_one
00000000 g     F .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he802cbfdf9f38125E	00000022 core::ptr::<impl *mut T>::add
00000000 g     F .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha2dc23dd4e3e146dE	00000022 core::ptr::<impl *mut T>::offset
00000000 g     F .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h08f85a084241b3e6E	00000022 core::ptr::<impl *const T>::offset
00000000 g     F .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hf9eb0c1609d3870bE	00000024 core::ptr::<impl *const T>::offset
00000000 g     F .text._ZN4core3ptr4read17ha5c22d5adb0fe631E	00000042 core::ptr::read
00000000 g     F .text._ZN4core3ptr4read17he89ac909507700d3E	00000050 core::ptr::read
00000000 g     F .text._ZN4core3ptr4read17hef95bc5fe51b9358E	00000042 core::ptr::read
00000000 g     F .text._ZN4core3ptr5write17h295399ff06cd9c41E	00000018 core::ptr::write



Disassembly of section .text._ZN4core3ptr13read_volatile17h0bb85acd84ea1165E:

00000000 <core::ptr::read_volatile>:
_ZN4core3ptr13read_volatile17h0bb85acd84ea1165E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:872
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   6:	9802      	ldr	r0, [sp, #8]
   8:	6800      	ldr	r0, [r0, #0]
   a:	9003      	str	r0, [sp, #12]
   c:	9803      	ldr	r0, [sp, #12]
   e:	9101      	str	r1, [sp, #4]
  10:	9000      	str	r0, [sp, #0]
  12:	e7ff      	b.n	14 <core::ptr::read_volatile+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:874
  14:	9800      	ldr	r0, [sp, #0]
  16:	b004      	add	sp, #16
  18:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr13read_volatile17hc6cda3b26eaf907eE:

00000000 <core::ptr::read_volatile>:
_ZN4core3ptr13read_volatile17hc6cda3b26eaf907eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:872
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   6:	9802      	ldr	r0, [sp, #8]
   8:	7800      	ldrb	r0, [r0, #0]
   a:	f88d 000f 	strb.w	r0, [sp, #15]
   e:	f89d 000f 	ldrb.w	r0, [sp, #15]
  12:	9101      	str	r1, [sp, #4]
  14:	9000      	str	r0, [sp, #0]
  16:	e7ff      	b.n	18 <core::ptr::read_volatile+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:874
  18:	9800      	ldr	r0, [sp, #0]
  1a:	b004      	add	sp, #16
  1c:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr14write_volatile17h11b0a70c751486e5E:

00000000 <core::ptr::write_volatile>:
_ZN4core3ptr14write_volatile17h11b0a70c751486e5E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:940
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	6001      	str	r1, [r0, #0]
  10:	9201      	str	r2, [sp, #4]
  12:	9300      	str	r3, [sp, #0]
  14:	e7ff      	b.n	16 <core::ptr::write_volatile+0x16>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:942
  16:	b004      	add	sp, #16
  18:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr14write_volatile17h12417a29d6e904c8E:

00000000 <core::ptr::write_volatile>:
_ZN4core3ptr14write_volatile17h12417a29d6e904c8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:940
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	f88d 100f 	strb.w	r1, [sp, #15]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   c:	9802      	ldr	r0, [sp, #8]
   e:	f89d 100f 	ldrb.w	r1, [sp, #15]
  12:	7001      	strb	r1, [r0, #0]
  14:	9201      	str	r2, [sp, #4]
  16:	9300      	str	r3, [sp, #0]
  18:	e7ff      	b.n	1a <core::ptr::write_volatile+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:942
  1a:	b004      	add	sp, #16
  1c:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr14write_volatile17h509c017d25030e84E:

00000000 <core::ptr::write_volatile>:
_ZN4core3ptr14write_volatile17h509c017d25030e84E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:940
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	f8ad 100e 	strh.w	r1, [sp, #14]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   c:	9802      	ldr	r0, [sp, #8]
   e:	f8bd 100e 	ldrh.w	r1, [sp, #14]
  12:	8001      	strh	r1, [r0, #0]
  14:	9201      	str	r2, [sp, #4]
  16:	9300      	str	r3, [sp, #0]
  18:	e7ff      	b.n	1a <core::ptr::write_volatile+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:942
  1a:	b004      	add	sp, #16
  1c:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17h26d7fa230e41b811E:

00000000 <core::ptr::swap_nonoverlapping>:
_ZN4core3ptr19swap_nonoverlapping17h26d7fa230e41b811E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:351
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9004      	str	r0, [sp, #16]
   c:	9105      	str	r1, [sp, #20]
   e:	9206      	str	r2, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:352
  10:	9804      	ldr	r0, [sp, #16]
  12:	9007      	str	r0, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:353
  14:	9805      	ldr	r0, [sp, #20]
  16:	9008      	str	r0, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:354
  18:	9303      	str	r3, [sp, #12]
  1a:	f8cd c008 	str.w	ip, [sp, #8]
  1e:	f8cd e004 	str.w	lr, [sp, #4]
  22:	f7ff fffe 	bl	0 <core::mem::size_of>
  26:	9000      	str	r0, [sp, #0]
  28:	e7ff      	b.n	2a <core::ptr::swap_nonoverlapping+0x2a>
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9900      	ldr	r1, [sp, #0]
  2e:	4348      	muls	r0, r1
  30:	9009      	str	r0, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:355
  32:	9807      	ldr	r0, [sp, #28]
  34:	9908      	ldr	r1, [sp, #32]
  36:	9a09      	ldr	r2, [sp, #36]	; 0x24
  38:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping>
  3c:	e7ff      	b.n	3e <core::ptr::swap_nonoverlapping+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:356
  3e:	b00a      	add	sp, #40	; 0x28
  40:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17h5996d4fc0634cce3E:

00000000 <core::ptr::swap_nonoverlapping_one>:
_ZN4core3ptr23swap_nonoverlapping_one17h5996d4fc0634cce3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:359
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9003      	str	r0, [sp, #12]
   a:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:362
   c:	9202      	str	r2, [sp, #8]
   e:	9301      	str	r3, [sp, #4]
  10:	f7ff fffe 	bl	0 <core::mem::size_of>
  14:	9000      	str	r0, [sp, #0]
  16:	e7ff      	b.n	18 <core::ptr::swap_nonoverlapping_one+0x18>
  18:	9800      	ldr	r0, [sp, #0]
  1a:	281f      	cmp	r0, #31
  1c:	d811      	bhi.n	42 <core::ptr::swap_nonoverlapping_one+0x42>
  1e:	e7ff      	b.n	20 <core::ptr::swap_nonoverlapping_one+0x20>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:363
  20:	9803      	ldr	r0, [sp, #12]
  22:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  26:	9005      	str	r0, [sp, #20]
  28:	e7ff      	b.n	2a <core::ptr::swap_nonoverlapping_one+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:364
  2a:	9804      	ldr	r0, [sp, #16]
  2c:	9903      	ldr	r1, [sp, #12]
  2e:	2201      	movs	r2, #1
  30:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  34:	e7ff      	b.n	36 <core::ptr::swap_nonoverlapping_one+0x36>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:365
  36:	9804      	ldr	r0, [sp, #16]
  38:	9905      	ldr	r1, [sp, #20]
  3a:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  3e:	e7ff      	b.n	40 <core::ptr::swap_nonoverlapping_one+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:362
  40:	e006      	b.n	50 <core::ptr::swap_nonoverlapping_one+0x50>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:367
  42:	9803      	ldr	r0, [sp, #12]
  44:	9904      	ldr	r1, [sp, #16]
  46:	2201      	movs	r2, #1
  48:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  4c:	e7ff      	b.n	4e <core::ptr::swap_nonoverlapping_one+0x4e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:362
  4e:	e7ff      	b.n	50 <core::ptr::swap_nonoverlapping_one+0x50>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:369
  50:	b006      	add	sp, #24
  52:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr25swap_nonoverlapping_bytes17h207030fa2b56460eE:

00000000 <core::ptr::swap_nonoverlapping_bytes>:
_ZN4core3ptr25swap_nonoverlapping_bytes17h207030fa2b56460eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:372
   0:	b5d0      	push	{r4, r6, r7, lr}
   2:	af02      	add	r7, sp, #8
   4:	b0ac      	sub	sp, #176	; 0xb0
   6:	466c      	mov	r4, sp
   8:	f36f 0404 	bfc	r4, #0, #5
   c:	46a5      	mov	sp, r4
   e:	4613      	mov	r3, r2
  10:	468c      	mov	ip, r1
  12:	4686      	mov	lr, r0
  14:	900b      	str	r0, [sp, #44]	; 0x2c
  16:	910c      	str	r1, [sp, #48]	; 0x30
  18:	920d      	str	r2, [sp, #52]	; 0x34
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:383
  1a:	930a      	str	r3, [sp, #40]	; 0x28
  1c:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  20:	f8cd e020 	str.w	lr, [sp, #32]
  24:	f7ff fffe 	bl	0 <core::mem::size_of>
  28:	900e      	str	r0, [sp, #56]	; 0x38
  2a:	e7ff      	b.n	2c <core::ptr::swap_nonoverlapping_bytes+0x2c>
  2c:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:388
  2e:	900f      	str	r0, [sp, #60]	; 0x3c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:389
  30:	e7ff      	b.n	32 <core::ptr::swap_nonoverlapping_bytes+0x32>
  32:	980f      	ldr	r0, [sp, #60]	; 0x3c
  34:	990e      	ldr	r1, [sp, #56]	; 0x38
  36:	4408      	add	r0, r1
  38:	990d      	ldr	r1, [sp, #52]	; 0x34
  3a:	4288      	cmp	r0, r1
  3c:	d905      	bls.n	4a <core::ptr::swap_nonoverlapping_bytes+0x4a>
  3e:	e7ff      	b.n	40 <core::ptr::swap_nonoverlapping_bytes+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:405
  40:	980f      	ldr	r0, [sp, #60]	; 0x3c
  42:	990d      	ldr	r1, [sp, #52]	; 0x34
  44:	4288      	cmp	r0, r1
  46:	d32d      	bcc.n	a4 <core::ptr::swap_nonoverlapping_bytes+0xa4>
  48:	e059      	b.n	fe <core::ptr::swap_nonoverlapping_bytes+0xfe>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:392
  4a:	e7ff      	b.n	4c <core::ptr::swap_nonoverlapping_bytes+0x4c>
  4c:	a810      	add	r0, sp, #64	; 0x40
  4e:	9028      	str	r0, [sp, #160]	; 0xa0
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h3fd56275c94a6392E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  50:	9828      	ldr	r0, [sp, #160]	; 0xa0
  52:	9029      	str	r0, [sp, #164]	; 0xa4
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hfd9a193a700e020dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  54:	9829      	ldr	r0, [sp, #164]	; 0xa4
_ZN4core3ptr25swap_nonoverlapping_bytes17h207030fa2b56460eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:393
  56:	9007      	str	r0, [sp, #28]
  58:	e7ff      	b.n	5a <core::ptr::swap_nonoverlapping_bytes+0x5a>
  5a:	9807      	ldr	r0, [sp, #28]
  5c:	9019      	str	r0, [sp, #100]	; 0x64
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:394
  5e:	980b      	ldr	r0, [sp, #44]	; 0x2c
  60:	990f      	ldr	r1, [sp, #60]	; 0x3c
  62:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_bytes>
  66:	901a      	str	r0, [sp, #104]	; 0x68
  68:	e7ff      	b.n	6a <core::ptr::swap_nonoverlapping_bytes+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:395
  6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  6c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  6e:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_bytes>
  72:	901b      	str	r0, [sp, #108]	; 0x6c
  74:	e7ff      	b.n	76 <core::ptr::swap_nonoverlapping_bytes+0x76>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:399
  76:	981a      	ldr	r0, [sp, #104]	; 0x68
  78:	9919      	ldr	r1, [sp, #100]	; 0x64
  7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  7c:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  80:	e7ff      	b.n	82 <core::ptr::swap_nonoverlapping_bytes+0x82>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:400
  82:	981b      	ldr	r0, [sp, #108]	; 0x6c
  84:	991a      	ldr	r1, [sp, #104]	; 0x68
  86:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  88:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  8c:	e7ff      	b.n	8e <core::ptr::swap_nonoverlapping_bytes+0x8e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:401
  8e:	9819      	ldr	r0, [sp, #100]	; 0x64
  90:	991b      	ldr	r1, [sp, #108]	; 0x6c
  92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  94:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  98:	e7ff      	b.n	9a <core::ptr::swap_nonoverlapping_bytes+0x9a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:402
  9a:	980e      	ldr	r0, [sp, #56]	; 0x38
  9c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  9e:	4408      	add	r0, r1
  a0:	900f      	str	r0, [sp, #60]	; 0x3c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:389
  a2:	e7c6      	b.n	32 <core::ptr::swap_nonoverlapping_bytes+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:407
  a4:	e7ff      	b.n	a6 <core::ptr::swap_nonoverlapping_bytes+0xa6>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:408
  a6:	980d      	ldr	r0, [sp, #52]	; 0x34
  a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  aa:	1a40      	subs	r0, r0, r1
  ac:	9024      	str	r0, [sp, #144]	; 0x90
  ae:	a81c      	add	r0, sp, #112	; 0x70
  b0:	902a      	str	r0, [sp, #168]	; 0xa8
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hf70e7008ee4e70ceE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  b2:	982a      	ldr	r0, [sp, #168]	; 0xa8
  b4:	902b      	str	r0, [sp, #172]	; 0xac
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h5fb831b854e57639E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  b6:	982b      	ldr	r0, [sp, #172]	; 0xac
_ZN4core3ptr25swap_nonoverlapping_bytes17h207030fa2b56460eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:410
  b8:	9006      	str	r0, [sp, #24]
  ba:	e7ff      	b.n	bc <core::ptr::swap_nonoverlapping_bytes+0xbc>
  bc:	9806      	ldr	r0, [sp, #24]
  be:	9025      	str	r0, [sp, #148]	; 0x94
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:411
  c0:	980b      	ldr	r0, [sp, #44]	; 0x2c
  c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  c4:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_bytes>
  c8:	9026      	str	r0, [sp, #152]	; 0x98
  ca:	e7ff      	b.n	cc <core::ptr::swap_nonoverlapping_bytes+0xcc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:412
  cc:	980c      	ldr	r0, [sp, #48]	; 0x30
  ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
  d0:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_bytes>
  d4:	9027      	str	r0, [sp, #156]	; 0x9c
  d6:	e7ff      	b.n	d8 <core::ptr::swap_nonoverlapping_bytes+0xd8>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:414
  d8:	9826      	ldr	r0, [sp, #152]	; 0x98
  da:	9925      	ldr	r1, [sp, #148]	; 0x94
  dc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  de:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  e2:	e7ff      	b.n	e4 <core::ptr::swap_nonoverlapping_bytes+0xe4>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:415
  e4:	9827      	ldr	r0, [sp, #156]	; 0x9c
  e6:	9926      	ldr	r1, [sp, #152]	; 0x98
  e8:	9a24      	ldr	r2, [sp, #144]	; 0x90
  ea:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  ee:	e7ff      	b.n	f0 <core::ptr::swap_nonoverlapping_bytes+0xf0>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:416
  f0:	9825      	ldr	r0, [sp, #148]	; 0x94
  f2:	9927      	ldr	r1, [sp, #156]	; 0x9c
  f4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  f6:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  fa:	e7ff      	b.n	fc <core::ptr::swap_nonoverlapping_bytes+0xfc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:405
  fc:	e7ff      	b.n	fe <core::ptr::swap_nonoverlapping_bytes+0xfe>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:418
  fe:	f1a7 0408 	sub.w	r4, r7, #8
 102:	46a5      	mov	sp, r4
 104:	bdd0      	pop	{r4, r6, r7, pc}

Disassembly of section .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he802cbfdf9f38125E:

00000000 <core::ptr::<impl *mut T>::add>:
_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17he802cbfdf9f38125E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1940
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1943
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::add>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <core::ptr::<impl *mut T>::add+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1944
  1c:	9801      	ldr	r0, [sp, #4]
  1e:	b006      	add	sp, #24
  20:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha2dc23dd4e3e146dE:

00000000 <core::ptr::<impl *mut T>::offset>:
_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha2dc23dd4e3e146dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1704
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1705
   a:	9803      	ldr	r0, [sp, #12]
   c:	9904      	ldr	r1, [sp, #16]
   e:	4408      	add	r0, r1
  10:	9005      	str	r0, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
  14:	9202      	str	r2, [sp, #8]
  16:	9301      	str	r3, [sp, #4]
  18:	9000      	str	r0, [sp, #0]
  1a:	e7ff      	b.n	1c <core::ptr::<impl *mut T>::offset+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1706
  1c:	9800      	ldr	r0, [sp, #0]
  1e:	b006      	add	sp, #24
  20:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h08f85a084241b3e6E:

00000000 <core::ptr::<impl *const T>::offset>:
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h08f85a084241b3e6E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1078
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
   a:	9803      	ldr	r0, [sp, #12]
   c:	9904      	ldr	r1, [sp, #16]
   e:	4408      	add	r0, r1
  10:	9005      	str	r0, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
  14:	9202      	str	r2, [sp, #8]
  16:	9301      	str	r3, [sp, #4]
  18:	9000      	str	r0, [sp, #0]
  1a:	e7ff      	b.n	1c <core::ptr::<impl *const T>::offset+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1080
  1c:	9800      	ldr	r0, [sp, #0]
  1e:	b006      	add	sp, #24
  20:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hf9eb0c1609d3870bE:

00000000 <core::ptr::<impl *const T>::offset>:
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hf9eb0c1609d3870bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1078
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
   a:	9803      	ldr	r0, [sp, #12]
   c:	9904      	ldr	r1, [sp, #16]
   e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  12:	9005      	str	r0, [sp, #20]
  14:	9805      	ldr	r0, [sp, #20]
  16:	9202      	str	r2, [sp, #8]
  18:	9301      	str	r3, [sp, #4]
  1a:	9000      	str	r0, [sp, #0]
  1c:	e7ff      	b.n	1e <core::ptr::<impl *const T>::offset+0x1e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1080
  1e:	9800      	ldr	r0, [sp, #0]
  20:	b006      	add	sp, #24
  22:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr4read17ha5c22d5adb0fe631E:

00000000 <core::ptr::read>:
_ZN4core3ptr4read17ha5c22d5adb0fe631E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:574
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9005      	str	r0, [sp, #20]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h2a7f2585443e3e7cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:237
   8:	9807      	ldr	r0, [sp, #28]
_ZN4core3ptr4read17ha5c22d5adb0fe631E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:575
   a:	9006      	str	r0, [sp, #24]
   c:	9104      	str	r1, [sp, #16]
   e:	e7ff      	b.n	10 <core::ptr::read+0x10>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  10:	9805      	ldr	r0, [sp, #20]
  12:	a906      	add	r1, sp, #24
  14:	910a      	str	r1, [sp, #40]	; 0x28
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h2762ace29a99bf0dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  16:	990a      	ldr	r1, [sp, #40]	; 0x28
  18:	910b      	str	r1, [sp, #44]	; 0x2c
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hce98420cfb5e21abE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
_ZN4core3ptr4read17ha5c22d5adb0fe631E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  1c:	9003      	str	r0, [sp, #12]
  1e:	9102      	str	r1, [sp, #8]
  20:	e7ff      	b.n	22 <core::ptr::read+0x22>
  22:	2201      	movs	r2, #1
  24:	9803      	ldr	r0, [sp, #12]
  26:	9902      	ldr	r1, [sp, #8]
  28:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  2c:	e7ff      	b.n	2e <core::ptr::read+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  2e:	9806      	ldr	r0, [sp, #24]
  30:	9008      	str	r0, [sp, #32]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17had6860dad40ca1ccE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:410
  32:	9808      	ldr	r0, [sp, #32]
  34:	9009      	str	r0, [sp, #36]	; 0x24
_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hdd9891dccf63d785E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:85
  36:	9809      	ldr	r0, [sp, #36]	; 0x24
_ZN4core3ptr4read17ha5c22d5adb0fe631E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  38:	9001      	str	r0, [sp, #4]
  3a:	e7ff      	b.n	3c <core::ptr::read+0x3c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:578
  3c:	9801      	ldr	r0, [sp, #4]
  3e:	b00c      	add	sp, #48	; 0x30
  40:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr4read17he89ac909507700d3E:

00000000 <core::ptr::read>:
_ZN4core3ptr4read17he89ac909507700d3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:574
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4601      	mov	r1, r0
   6:	9005      	str	r0, [sp, #20]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hf804c53bdc60a955E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:237
   8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
_ZN4core3ptr4read17he89ac909507700d3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:575
   c:	f8ad 0018 	strh.w	r0, [sp, #24]
  10:	9104      	str	r1, [sp, #16]
  12:	e7ff      	b.n	14 <core::ptr::read+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  14:	9805      	ldr	r0, [sp, #20]
  16:	a906      	add	r1, sp, #24
  18:	9108      	str	r1, [sp, #32]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hc280c40cb9047c14E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  1a:	9908      	ldr	r1, [sp, #32]
  1c:	9109      	str	r1, [sp, #36]	; 0x24
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6ef6c1c78eca534fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  1e:	9909      	ldr	r1, [sp, #36]	; 0x24
_ZN4core3ptr4read17he89ac909507700d3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  20:	9003      	str	r0, [sp, #12]
  22:	9102      	str	r1, [sp, #8]
  24:	e7ff      	b.n	26 <core::ptr::read+0x26>
  26:	2201      	movs	r2, #1
  28:	9803      	ldr	r0, [sp, #12]
  2a:	9902      	ldr	r1, [sp, #8]
  2c:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  30:	e7ff      	b.n	32 <core::ptr::read+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  32:	f8bd 0018 	ldrh.w	r0, [sp, #24]
  36:	f8ad 001c 	strh.w	r0, [sp, #28]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h601a4a851abb3a61E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:410
  3a:	f8bd 001c 	ldrh.w	r0, [sp, #28]
  3e:	f8ad 001e 	strh.w	r0, [sp, #30]
_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hde0b853b039b9cc1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:85
  42:	f8bd 001e 	ldrh.w	r0, [sp, #30]
_ZN4core3ptr4read17he89ac909507700d3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  46:	9001      	str	r0, [sp, #4]
  48:	e7ff      	b.n	4a <core::ptr::read+0x4a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:578
  4a:	9801      	ldr	r0, [sp, #4]
  4c:	b00a      	add	sp, #40	; 0x28
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr4read17hef95bc5fe51b9358E:

00000000 <core::ptr::read>:
_ZN4core3ptr4read17hef95bc5fe51b9358E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:574
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9005      	str	r0, [sp, #20]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h64d9819fee6579cdE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:237
   8:	9807      	ldr	r0, [sp, #28]
_ZN4core3ptr4read17hef95bc5fe51b9358E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:575
   a:	9006      	str	r0, [sp, #24]
   c:	9104      	str	r1, [sp, #16]
   e:	e7ff      	b.n	10 <core::ptr::read+0x10>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  10:	9805      	ldr	r0, [sp, #20]
  12:	a906      	add	r1, sp, #24
  14:	910a      	str	r1, [sp, #40]	; 0x28
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hd03c3ce9dfb8c058E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  16:	990a      	ldr	r1, [sp, #40]	; 0x28
  18:	910b      	str	r1, [sp, #44]	; 0x2c
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h16343ccf8ee379dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
_ZN4core3ptr4read17hef95bc5fe51b9358E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  1c:	9003      	str	r0, [sp, #12]
  1e:	9102      	str	r1, [sp, #8]
  20:	e7ff      	b.n	22 <core::ptr::read+0x22>
  22:	2201      	movs	r2, #1
  24:	9803      	ldr	r0, [sp, #12]
  26:	9902      	ldr	r1, [sp, #8]
  28:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  2c:	e7ff      	b.n	2e <core::ptr::read+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  2e:	9806      	ldr	r0, [sp, #24]
  30:	9008      	str	r0, [sp, #32]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hf996f3338a754118E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:410
  32:	9808      	ldr	r0, [sp, #32]
  34:	9009      	str	r0, [sp, #36]	; 0x24
_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h31a2042f90223291E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:85
  36:	9809      	ldr	r0, [sp, #36]	; 0x24
_ZN4core3ptr4read17hef95bc5fe51b9358E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  38:	9001      	str	r0, [sp, #4]
  3a:	e7ff      	b.n	3c <core::ptr::read+0x3c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:578
  3c:	9801      	ldr	r0, [sp, #4]
  3e:	b00c      	add	sp, #48	; 0x30
  40:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr5write17h295399ff06cd9c41E:

00000000 <core::ptr::write>:
_ZN4core3ptr5write17h295399ff06cd9c41E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:735
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:736
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	6001      	str	r1, [r0, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:737
  10:	9201      	str	r2, [sp, #4]
  12:	9300      	str	r3, [sp, #0]
  14:	b004      	add	sp, #16
  16:	4770      	bx	lr

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.6.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.6
00000152 l       .debug_str	00000000 
00000378 l       .debug_str	00000000 
00000323 l       .debug_str	00000000 
00000314 l       .debug_str	00000000 
00000310 l       .debug_str	00000000 
000005e7 l       .debug_str	00000000 
0000030c l       .debug_str	00000000 
000005e2 l       .debug_str	00000000 
00000306 l       .debug_str	00000000 
00000302 l       .debug_str	00000000 
000002fa l       .debug_str	00000000 
000002de l       .debug_str	00000000 
000005de l       .debug_str	00000000 
00000289 l       .debug_str	00000000 
000005d9 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
000005c3 l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
00000552 l       .debug_str	00000000 
00000270 l       .debug_str	00000000 
0000054d l       .debug_str	00000000 
00000222 l       .debug_str	00000000 
00000540 l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
000004f5 l       .debug_str	00000000 
00000201 l       .debug_str	00000000 
000004ea l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000004a1 l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
00000495 l       .debug_str	00000000 
000001a7 l       .debug_str	00000000 
0000044c l       .debug_str	00000000 
00000444 l       .debug_str	00000000 
000003fe l       .debug_str	00000000 
000003f5 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
00000174 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
000003af l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.0	00000018 .Lanon.3dfdf29460ec2bf18bcc694668309108.0
00000000 l     O .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.3	00000018 .Lanon.3dfdf29460ec2bf18bcc694668309108.3
00000000 l     O .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.5	00000018 .Lanon.3dfdf29460ec2bf18bcc694668309108.5
00000000 l     O .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.6	00000018 .Lanon.3dfdf29460ec2bf18bcc694668309108.6
00000000 l     O .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.7	00000018 .Lanon.3dfdf29460ec2bf18bcc694668309108.7
00000000 l     O .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.8	00000018 .Lanon.3dfdf29460ec2bf18bcc694668309108.8
00000000 l     O .rodata.str.0	00000048 str.0
00000000 l     O .rodata.str.1	00000039 str.1
00000000 l    d  .text._ZN4core5slice14from_raw_parts17h1076a9b427fb608cE	00000000 .text._ZN4core5slice14from_raw_parts17h1076a9b427fb608cE
00000000 l    d  .text._ZN4core5slice14from_raw_parts17hb411bfe2b7735af9E	00000000 .text._ZN4core5slice14from_raw_parts17hb411bfe2b7735af9E
00000000 l    d  .text._ZN4core5slice18from_raw_parts_mut17h3dda79d5b3af37d9E	00000000 .text._ZN4core5slice18from_raw_parts_mut17h3dda79d5b3af37d9E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd3a5d02287f1ba8dE	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd3a5d02287f1ba8dE
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha22b830d3d026dd2E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha22b830d3d026dd2E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hbd5125e646b42e39E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hbd5125e646b42e39E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h1c73d7fede9788e3E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h1c73d7fede9788e3E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h849e7606020f2b5aE	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h849e7606020f2b5aE
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h27a8529a7a8d94faE	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h27a8529a7a8d94faE
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h935e4a34b56abd04E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h935e4a34b56abd04E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17he7d2bb488ae4e2c7E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17he7d2bb488ae4e2c7E
00000000 l    d  .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc9d4b9a78f0a2418E	00000000 .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc9d4b9a78f0a2418E
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.1	00000000 .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.1
00000000 l    d  .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.2	00000000 .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.2
00000000 l    d  .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.4	00000000 .rodata..Lanon.3dfdf29460ec2bf18bcc694668309108.4
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut
00000000         *UND*	00000000 core::mem::size_of
00000000         *UND*	00000000 core::mem::size_of
00000000         *UND*	00000000 core::mem::align_of
00000000         *UND*	00000000 core::mem::align_of
00000000         *UND*	00000000 .hidden core::num::<impl usize>::saturating_mul
00000000         *UND*	00000000 core::ptr::<impl *mut T>::add
00000000 g     F .text._ZN4core5slice14from_raw_parts17h1076a9b427fb608cE	000000aa core::slice::from_raw_parts
00000000 g     F .text._ZN4core5slice14from_raw_parts17hb411bfe2b7735af9E	000000aa core::slice::from_raw_parts
00000000 g     F .text._ZN4core5slice18from_raw_parts_mut17h3dda79d5b3af37d9E	000000aa core::slice::from_raw_parts_mut
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd3a5d02287f1ba8dE	00000014 core::slice::<impl [T]>::as_mut_ptr
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha22b830d3d026dd2E	0000002e core::slice::<impl [T]>::get_unchecked_mut
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hbd5125e646b42e39E	00000032 core::slice::<impl [T]>::get_unchecked_mut
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h1c73d7fede9788e3E	0000001c core::slice::<impl [T]>::len
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h849e7606020f2b5aE	0000001c core::slice::<impl [T]>::len
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h27a8529a7a8d94faE	00000014 core::slice::<impl [T]>::as_ptr
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h935e4a34b56abd04E	00000014 core::slice::<impl [T]>::as_ptr
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17he7d2bb488ae4e2c7E	00000028 core::slice::<impl [T]>::is_empty
00000000         *UND*	00000000 core::panicking::panic
00000000 g     F .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc9d4b9a78f0a2418E	00000038 <usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut



Disassembly of section .text._ZN4core5slice14from_raw_parts17h1076a9b427fb608cE:

00000000 <core::slice::from_raw_parts>:
_ZN4core5slice14from_raw_parts17h1076a9b427fb608cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5182
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
   c:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
   e:	2800      	cmp	r0, #0
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	d11b      	bne.n	4e <core::slice::from_raw_parts+0x4e>
  16:	e7ff      	b.n	18 <core::slice::from_raw_parts+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5183
  18:	9806      	ldr	r0, [sp, #24]
  1a:	9003      	str	r0, [sp, #12]
  1c:	f7ff fffe 	bl	0 <core::mem::align_of>
  20:	9002      	str	r0, [sp, #8]
  22:	e7ff      	b.n	24 <core::slice::from_raw_parts+0x24>
  24:	9802      	ldr	r0, [sp, #8]
  26:	2800      	cmp	r0, #0
  28:	d038      	beq.n	9c <core::slice::from_raw_parts+0x9c>
  2a:	e7ff      	b.n	2c <core::slice::from_raw_parts+0x2c>
  2c:	9803      	ldr	r0, [sp, #12]
  2e:	9902      	ldr	r1, [sp, #8]
  30:	fbb0 f2f1 	udiv	r2, r0, r1
  34:	fb02 0211 	mls	r2, r2, r1, r0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  38:	2a00      	cmp	r2, #0
  3a:	d007      	beq.n	4c <core::slice::from_raw_parts+0x4c>
  3c:	e7ff      	b.n	3e <core::slice::from_raw_parts+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f7ff fffe 	bl	0 <core::panicking::panic>
  4a:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  4c:	e7ff      	b.n	4e <core::slice::from_raw_parts+0x4e>
  4e:	2001      	movs	r0, #1
  50:	2800      	cmp	r0, #0
  52:	d117      	bne.n	84 <core::slice::from_raw_parts+0x84>
  54:	e7ff      	b.n	56 <core::slice::from_raw_parts+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5184
  56:	f7ff fffe 	bl	0 <core::mem::size_of>
  5a:	9001      	str	r0, [sp, #4]
  5c:	e7ff      	b.n	5e <core::slice::from_raw_parts+0x5e>
  5e:	9907      	ldr	r1, [sp, #28]
  60:	9801      	ldr	r0, [sp, #4]
  62:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  66:	9000      	str	r0, [sp, #0]
  68:	e7ff      	b.n	6a <core::slice::from_raw_parts+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  6a:	9800      	ldr	r0, [sp, #0]
  6c:	f1b0 3fff 	cmp.w	r0, #4294967295
  70:	dc07      	bgt.n	82 <core::slice::from_raw_parts+0x82>
  72:	e7ff      	b.n	74 <core::slice::from_raw_parts+0x74>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  74:	f240 0000 	movw	r0, #0
  78:	f2c0 0000 	movt	r0, #0
  7c:	f7ff fffe 	bl	0 <core::panicking::panic>
  80:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  82:	e7ff      	b.n	84 <core::slice::from_raw_parts+0x84>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5186
  84:	9806      	ldr	r0, [sp, #24]
  86:	9907      	ldr	r1, [sp, #28]
  88:	900a      	str	r0, [sp, #40]	; 0x28
  8a:	910b      	str	r1, [sp, #44]	; 0x2c
  8c:	980a      	ldr	r0, [sp, #40]	; 0x28
  8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  90:	9008      	str	r0, [sp, #32]
  92:	9109      	str	r1, [sp, #36]	; 0x24
  94:	9808      	ldr	r0, [sp, #32]
  96:	9909      	ldr	r1, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5187
  98:	b00c      	add	sp, #48	; 0x30
  9a:	bd80      	pop	{r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5183
  9c:	f240 0000 	movw	r0, #0
  a0:	f2c0 0000 	movt	r0, #0
  a4:	f7ff fffe 	bl	0 <core::panicking::panic>
  a8:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN4core5slice14from_raw_parts17hb411bfe2b7735af9E:

00000000 <core::slice::from_raw_parts>:
_ZN4core5slice14from_raw_parts17hb411bfe2b7735af9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5182
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
   c:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
   e:	2800      	cmp	r0, #0
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	d11b      	bne.n	4e <core::slice::from_raw_parts+0x4e>
  16:	e7ff      	b.n	18 <core::slice::from_raw_parts+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5183
  18:	9806      	ldr	r0, [sp, #24]
  1a:	9003      	str	r0, [sp, #12]
  1c:	f7ff fffe 	bl	0 <core::mem::align_of>
  20:	9002      	str	r0, [sp, #8]
  22:	e7ff      	b.n	24 <core::slice::from_raw_parts+0x24>
  24:	9802      	ldr	r0, [sp, #8]
  26:	2800      	cmp	r0, #0
  28:	d038      	beq.n	9c <core::slice::from_raw_parts+0x9c>
  2a:	e7ff      	b.n	2c <core::slice::from_raw_parts+0x2c>
  2c:	9803      	ldr	r0, [sp, #12]
  2e:	9902      	ldr	r1, [sp, #8]
  30:	fbb0 f2f1 	udiv	r2, r0, r1
  34:	fb02 0211 	mls	r2, r2, r1, r0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  38:	2a00      	cmp	r2, #0
  3a:	d007      	beq.n	4c <core::slice::from_raw_parts+0x4c>
  3c:	e7ff      	b.n	3e <core::slice::from_raw_parts+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f7ff fffe 	bl	0 <core::panicking::panic>
  4a:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  4c:	e7ff      	b.n	4e <core::slice::from_raw_parts+0x4e>
  4e:	2001      	movs	r0, #1
  50:	2800      	cmp	r0, #0
  52:	d117      	bne.n	84 <core::slice::from_raw_parts+0x84>
  54:	e7ff      	b.n	56 <core::slice::from_raw_parts+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5184
  56:	f7ff fffe 	bl	0 <core::mem::size_of>
  5a:	9001      	str	r0, [sp, #4]
  5c:	e7ff      	b.n	5e <core::slice::from_raw_parts+0x5e>
  5e:	9907      	ldr	r1, [sp, #28]
  60:	9801      	ldr	r0, [sp, #4]
  62:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  66:	9000      	str	r0, [sp, #0]
  68:	e7ff      	b.n	6a <core::slice::from_raw_parts+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  6a:	9800      	ldr	r0, [sp, #0]
  6c:	f1b0 3fff 	cmp.w	r0, #4294967295
  70:	dc07      	bgt.n	82 <core::slice::from_raw_parts+0x82>
  72:	e7ff      	b.n	74 <core::slice::from_raw_parts+0x74>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  74:	f240 0000 	movw	r0, #0
  78:	f2c0 0000 	movt	r0, #0
  7c:	f7ff fffe 	bl	0 <core::panicking::panic>
  80:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  82:	e7ff      	b.n	84 <core::slice::from_raw_parts+0x84>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5186
  84:	9806      	ldr	r0, [sp, #24]
  86:	9907      	ldr	r1, [sp, #28]
  88:	900a      	str	r0, [sp, #40]	; 0x28
  8a:	910b      	str	r1, [sp, #44]	; 0x2c
  8c:	980a      	ldr	r0, [sp, #40]	; 0x28
  8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  90:	9008      	str	r0, [sp, #32]
  92:	9109      	str	r1, [sp, #36]	; 0x24
  94:	9808      	ldr	r0, [sp, #32]
  96:	9909      	ldr	r1, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5187
  98:	b00c      	add	sp, #48	; 0x30
  9a:	bd80      	pop	{r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5183
  9c:	f240 0000 	movw	r0, #0
  a0:	f2c0 0000 	movt	r0, #0
  a4:	f7ff fffe 	bl	0 <core::panicking::panic>
  a8:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN4core5slice18from_raw_parts_mut17h3dda79d5b3af37d9E:

00000000 <core::slice::from_raw_parts_mut>:
_ZN4core5slice18from_raw_parts_mut17h3dda79d5b3af37d9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5203
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
   c:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
   e:	2800      	cmp	r0, #0
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	d11b      	bne.n	4e <core::slice::from_raw_parts_mut+0x4e>
  16:	e7ff      	b.n	18 <core::slice::from_raw_parts_mut+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5204
  18:	9806      	ldr	r0, [sp, #24]
  1a:	9003      	str	r0, [sp, #12]
  1c:	f7ff fffe 	bl	0 <core::mem::align_of>
  20:	9002      	str	r0, [sp, #8]
  22:	e7ff      	b.n	24 <core::slice::from_raw_parts_mut+0x24>
  24:	9802      	ldr	r0, [sp, #8]
  26:	2800      	cmp	r0, #0
  28:	d038      	beq.n	9c <core::slice::from_raw_parts_mut+0x9c>
  2a:	e7ff      	b.n	2c <core::slice::from_raw_parts_mut+0x2c>
  2c:	9803      	ldr	r0, [sp, #12]
  2e:	9902      	ldr	r1, [sp, #8]
  30:	fbb0 f2f1 	udiv	r2, r0, r1
  34:	fb02 0211 	mls	r2, r2, r1, r0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  38:	2a00      	cmp	r2, #0
  3a:	d007      	beq.n	4c <core::slice::from_raw_parts_mut+0x4c>
  3c:	e7ff      	b.n	3e <core::slice::from_raw_parts_mut+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f7ff fffe 	bl	0 <core::panicking::panic>
  4a:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  4c:	e7ff      	b.n	4e <core::slice::from_raw_parts_mut+0x4e>
  4e:	2001      	movs	r0, #1
  50:	2800      	cmp	r0, #0
  52:	d117      	bne.n	84 <core::slice::from_raw_parts_mut+0x84>
  54:	e7ff      	b.n	56 <core::slice::from_raw_parts_mut+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5205
  56:	f7ff fffe 	bl	0 <core::mem::size_of>
  5a:	9001      	str	r0, [sp, #4]
  5c:	e7ff      	b.n	5e <core::slice::from_raw_parts_mut+0x5e>
  5e:	9907      	ldr	r1, [sp, #28]
  60:	9801      	ldr	r0, [sp, #4]
  62:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  66:	9000      	str	r0, [sp, #0]
  68:	e7ff      	b.n	6a <core::slice::from_raw_parts_mut+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  6a:	9800      	ldr	r0, [sp, #0]
  6c:	f1b0 3fff 	cmp.w	r0, #4294967295
  70:	dc07      	bgt.n	82 <core::slice::from_raw_parts_mut+0x82>
  72:	e7ff      	b.n	74 <core::slice::from_raw_parts_mut+0x74>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  74:	f240 0000 	movw	r0, #0
  78:	f2c0 0000 	movt	r0, #0
  7c:	f7ff fffe 	bl	0 <core::panicking::panic>
  80:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  82:	e7ff      	b.n	84 <core::slice::from_raw_parts_mut+0x84>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5207
  84:	9806      	ldr	r0, [sp, #24]
  86:	9907      	ldr	r1, [sp, #28]
  88:	900a      	str	r0, [sp, #40]	; 0x28
  8a:	910b      	str	r1, [sp, #44]	; 0x2c
  8c:	980a      	ldr	r0, [sp, #40]	; 0x28
  8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  90:	9008      	str	r0, [sp, #32]
  92:	9109      	str	r1, [sp, #36]	; 0x24
  94:	9808      	ldr	r0, [sp, #32]
  96:	9909      	ldr	r1, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5208
  98:	b00c      	add	sp, #48	; 0x30
  9a:	bd80      	pop	{r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5204
  9c:	f240 0000 	movw	r0, #0
  a0:	f2c0 0000 	movt	r0, #0
  a4:	f7ff fffe 	bl	0 <core::panicking::panic>
  a8:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd3a5d02287f1ba8dE:

00000000 <core::slice::<impl [T]>::as_mut_ptr>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hd3a5d02287f1ba8dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:412
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:413
   a:	9802      	ldr	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:414
   c:	9201      	str	r2, [sp, #4]
   e:	9300      	str	r3, [sp, #0]
  10:	b004      	add	sp, #16
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha22b830d3d026dd2E:

00000000 <core::slice::<impl [T]>::get_unchecked_mut>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha22b830d3d026dd2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:351
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:354
  10:	9807      	ldr	r0, [sp, #28]
  12:	9905      	ldr	r1, [sp, #20]
  14:	9a06      	ldr	r2, [sp, #24]
  16:	9304      	str	r3, [sp, #16]
  18:	f8cd c00c 	str.w	ip, [sp, #12]
  1c:	f8cd e008 	str.w	lr, [sp, #8]
  20:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get_unchecked_mut>
  24:	9001      	str	r0, [sp, #4]
  26:	e7ff      	b.n	28 <core::slice::<impl [T]>::get_unchecked_mut+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:355
  28:	9801      	ldr	r0, [sp, #4]
  2a:	b008      	add	sp, #32
  2c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hbd5125e646b42e39E:

00000000 <core::slice::<impl [T]>::get_unchecked_mut>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hbd5125e646b42e39E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:351
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:354
  10:	9807      	ldr	r0, [sp, #28]
  12:	9905      	ldr	r1, [sp, #20]
  14:	9a06      	ldr	r2, [sp, #24]
  16:	9304      	str	r3, [sp, #16]
  18:	f8cd c00c 	str.w	ip, [sp, #12]
  1c:	f8cd e008 	str.w	lr, [sp, #8]
  20:	f7ff fffe 	bl	0 <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut>
  24:	9001      	str	r0, [sp, #4]
  26:	9100      	str	r1, [sp, #0]
  28:	e7ff      	b.n	2a <core::slice::<impl [T]>::get_unchecked_mut+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:355
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	9900      	ldr	r1, [sp, #0]
  2e:	b008      	add	sp, #32
  30:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h1c73d7fede9788e3E:

00000000 <core::slice::<impl [T]>::len>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h1c73d7fede9788e3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:79
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:81
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9004      	str	r0, [sp, #16]
  10:	9105      	str	r1, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:83
  14:	9201      	str	r2, [sp, #4]
  16:	9300      	str	r3, [sp, #0]
  18:	b006      	add	sp, #24
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h849e7606020f2b5aE:

00000000 <core::slice::<impl [T]>::len>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h849e7606020f2b5aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:79
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:81
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9004      	str	r0, [sp, #16]
  10:	9105      	str	r1, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:83
  14:	9201      	str	r2, [sp, #4]
  16:	9300      	str	r3, [sp, #0]
  18:	b006      	add	sp, #24
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h27a8529a7a8d94faE:

00000000 <core::slice::<impl [T]>::as_ptr>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h27a8529a7a8d94faE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:385
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:386
   a:	9802      	ldr	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:387
   c:	9201      	str	r2, [sp, #4]
   e:	9300      	str	r3, [sp, #0]
  10:	b004      	add	sp, #16
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h935e4a34b56abd04E:

00000000 <core::slice::<impl [T]>::as_ptr>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h935e4a34b56abd04E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:385
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:386
   a:	9802      	ldr	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:387
   c:	9201      	str	r2, [sp, #4]
   e:	9300      	str	r3, [sp, #0]
  10:	b004      	add	sp, #16
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17he7d2bb488ae4e2c7E:

00000000 <core::slice::<impl [T]>::is_empty>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17he7d2bb488ae4e2c7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:96
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:97
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::is_empty>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <core::slice::<impl [T]>::is_empty+0x1c>
  1c:	9801      	ldr	r0, [sp, #4]
  1e:	fab0 f180 	clz	r1, r0
  22:	0948      	lsrs	r0, r1, #5
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:98
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc9d4b9a78f0a2418E:

00000000 <<usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut>:
_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hc9d4b9a78f0a2418E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2688
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2689
  10:	9806      	ldr	r0, [sp, #24]
  12:	9907      	ldr	r1, [sp, #28]
  14:	9304      	str	r3, [sp, #16]
  16:	f8cd c00c 	str.w	ip, [sp, #12]
  1a:	f8cd e008 	str.w	lr, [sp, #8]
  1e:	f7ff fffe 	bl	0 <<usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut>
  22:	9001      	str	r0, [sp, #4]
  24:	e7ff      	b.n	26 <<usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut+0x26>
  26:	9905      	ldr	r1, [sp, #20]
  28:	9801      	ldr	r0, [sp, #4]
  2a:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::add>
  2e:	9000      	str	r0, [sp, #0]
  30:	e7ff      	b.n	32 <<usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2690
  32:	9800      	ldr	r0, [sp, #0]
  34:	b008      	add	sp, #32
  36:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.7.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.7
00000163 l       .debug_str	00000000 
00000343 l       .debug_str	00000000 
00000339 l       .debug_str	00000000 
000003c4 l       .debug_str	00000000 
000002f5 l       .debug_str	00000000 
000002e5 l       .debug_str	00000000 
0000029a l       .debug_str	00000000 
000003be l       .debug_str	00000000 
0000028c l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
000003bc l       .debug_str	00000000 
00000283 l       .debug_str	00000000 
000003ba l       .debug_str	00000000 
00000273 l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
00000228 l       .debug_str	00000000 
000003b1 l       .debug_str	00000000 
00000219 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
0000014d l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
00000158 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
000001cf l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
0000017c l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000003ac l       .debug_str	00000000 
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h0beab5037e717f08E	00000050 core::num::<impl usize>::checked_mul
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h301172f3ae519f8fE	00000052 core::num::<impl usize>::overflowing_add
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h37e61301af847416E	00000052 core::num::<impl usize>::overflowing_mul
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17hc2de42f43fb3a427E	00000006 core::num::<impl usize>::max_value
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9eade574cc9a69c1E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9eade574cc9a69c1E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h0beab5037e717f08E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h0beab5037e717f08E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hf0958b5306588f16E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hf0958b5306588f16E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h301172f3ae519f8fE	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h301172f3ae519f8fE
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h37e61301af847416E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h37e61301af847416E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17hc2de42f43fb3a427E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17hc2de42f43fb3a427E
00000000 l    d  .text._ZN4core3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h5084d5336b7da9e0E	00000000 .text._ZN4core3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h5084d5336b7da9e0E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9eade574cc9a69c1E	00000050 .hidden core::num::<impl usize>::checked_add
00000000 g     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hf0958b5306588f16E	0000003a .hidden core::num::<impl usize>::saturating_mul
00000000 g     F .text._ZN4core3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h5084d5336b7da9e0E	00000012 .hidden core::num::<impl core::convert::From<u8> for usize>::from
00000000         *UND*	00000000 core::option::Option<T>::unwrap_or



Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9eade574cc9a69c1E:

00000000 <core::num::<impl usize>::checked_add>:
_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9eade574cc9a69c1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2676
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2677
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::num::<impl usize>::checked_add>
  18:	9001      	str	r0, [sp, #4]
  1a:	9100      	str	r1, [sp, #0]
  1c:	e7ff      	b.n	1e <core::num::<impl usize>::checked_add+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	9008      	str	r0, [sp, #32]
  22:	9900      	ldr	r1, [sp, #0]
  24:	f001 0201 	and.w	r2, r1, #1
  28:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2678
  2c:	f89d 2027 	ldrb.w	r2, [sp, #39]	; 0x27
  30:	07d2      	lsls	r2, r2, #31
  32:	2a00      	cmp	r2, #0
  34:	d003      	beq.n	3e <core::num::<impl usize>::checked_add+0x3e>
  36:	e7ff      	b.n	38 <core::num::<impl usize>::checked_add+0x38>
  38:	2000      	movs	r0, #0
  3a:	9006      	str	r0, [sp, #24]
  3c:	e004      	b.n	48 <core::num::<impl usize>::checked_add+0x48>
  3e:	9808      	ldr	r0, [sp, #32]
  40:	9007      	str	r0, [sp, #28]
  42:	2001      	movs	r0, #1
  44:	9006      	str	r0, [sp, #24]
  46:	e7ff      	b.n	48 <core::num::<impl usize>::checked_add+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2679
  48:	9806      	ldr	r0, [sp, #24]
  4a:	9907      	ldr	r1, [sp, #28]
  4c:	b00a      	add	sp, #40	; 0x28
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h0beab5037e717f08E:

00000000 <core::num::<impl usize>::checked_mul>:
_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h0beab5037e717f08E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2720
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2721
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::num::<impl usize>::checked_mul>
  18:	9001      	str	r0, [sp, #4]
  1a:	9100      	str	r1, [sp, #0]
  1c:	e7ff      	b.n	1e <core::num::<impl usize>::checked_mul+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	9008      	str	r0, [sp, #32]
  22:	9900      	ldr	r1, [sp, #0]
  24:	f001 0201 	and.w	r2, r1, #1
  28:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2722
  2c:	f89d 2027 	ldrb.w	r2, [sp, #39]	; 0x27
  30:	07d2      	lsls	r2, r2, #31
  32:	2a00      	cmp	r2, #0
  34:	d003      	beq.n	3e <core::num::<impl usize>::checked_mul+0x3e>
  36:	e7ff      	b.n	38 <core::num::<impl usize>::checked_mul+0x38>
  38:	2000      	movs	r0, #0
  3a:	9006      	str	r0, [sp, #24]
  3c:	e004      	b.n	48 <core::num::<impl usize>::checked_mul+0x48>
  3e:	9808      	ldr	r0, [sp, #32]
  40:	9007      	str	r0, [sp, #28]
  42:	2001      	movs	r0, #1
  44:	9006      	str	r0, [sp, #24]
  46:	e7ff      	b.n	48 <core::num::<impl usize>::checked_mul+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2723
  48:	9806      	ldr	r0, [sp, #24]
  4a:	9907      	ldr	r1, [sp, #28]
  4c:	b00a      	add	sp, #40	; 0x28
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hf0958b5306588f16E:

00000000 <core::num::<impl usize>::saturating_mul>:
_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hf0958b5306588f16E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2997
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2998
   c:	9806      	ldr	r0, [sp, #24]
   e:	9907      	ldr	r1, [sp, #28]
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  18:	9003      	str	r0, [sp, #12]
  1a:	9102      	str	r1, [sp, #8]
  1c:	e7ff      	b.n	1e <core::num::<impl usize>::saturating_mul+0x1e>
  1e:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  22:	9001      	str	r0, [sp, #4]
  24:	e7ff      	b.n	26 <core::num::<impl usize>::saturating_mul+0x26>
  26:	9803      	ldr	r0, [sp, #12]
  28:	9902      	ldr	r1, [sp, #8]
  2a:	9a01      	ldr	r2, [sp, #4]
  2c:	f7ff fffe 	bl	0 <core::option::Option<T>::unwrap_or>
  30:	9000      	str	r0, [sp, #0]
  32:	e7ff      	b.n	34 <core::num::<impl usize>::saturating_mul+0x34>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2999
  34:	9800      	ldr	r0, [sp, #0]
  36:	b008      	add	sp, #32
  38:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h301172f3ae519f8fE:

00000000 <core::num::<impl usize>::overflowing_add>:
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h301172f3ae519f8fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3346
   0:	b08c      	sub	sp, #48	; 0x30
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
   a:	9804      	ldr	r0, [sp, #16]
   c:	9905      	ldr	r1, [sp, #20]
   e:	1840      	adds	r0, r0, r1
  10:	f04f 0100 	mov.w	r1, #0
  14:	f141 0100 	adc.w	r1, r1, #0
  18:	900a      	str	r0, [sp, #40]	; 0x28
  1a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
  1e:	980a      	ldr	r0, [sp, #40]	; 0x28
  20:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
  24:	9203      	str	r2, [sp, #12]
  26:	9302      	str	r3, [sp, #8]
  28:	9001      	str	r0, [sp, #4]
  2a:	9100      	str	r1, [sp, #0]
  2c:	e7ff      	b.n	2e <core::num::<impl usize>::overflowing_add+0x2e>
  2e:	9801      	ldr	r0, [sp, #4]
  30:	9008      	str	r0, [sp, #32]
  32:	9900      	ldr	r1, [sp, #0]
  34:	f001 0201 	and.w	r2, r1, #1
  38:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3348
  3c:	9a08      	ldr	r2, [sp, #32]
  3e:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
  42:	9206      	str	r2, [sp, #24]
  44:	f88d 301c 	strb.w	r3, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3349
  48:	9806      	ldr	r0, [sp, #24]
  4a:	f89d 101c 	ldrb.w	r1, [sp, #28]
  4e:	b00c      	add	sp, #48	; 0x30
  50:	4770      	bx	lr

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h37e61301af847416E:

00000000 <core::num::<impl usize>::overflowing_mul>:
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h37e61301af847416E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3401
   0:	b08c      	sub	sp, #48	; 0x30
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3402
   a:	9804      	ldr	r0, [sp, #16]
   c:	9905      	ldr	r1, [sp, #20]
   e:	fba0 0101 	umull	r0, r1, r0, r1
  12:	2900      	cmp	r1, #0
  14:	bf18      	it	ne
  16:	2101      	movne	r1, #1
  18:	900a      	str	r0, [sp, #40]	; 0x28
  1a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
  1e:	980a      	ldr	r0, [sp, #40]	; 0x28
  20:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
  24:	9203      	str	r2, [sp, #12]
  26:	9302      	str	r3, [sp, #8]
  28:	9001      	str	r0, [sp, #4]
  2a:	9100      	str	r1, [sp, #0]
  2c:	e7ff      	b.n	2e <core::num::<impl usize>::overflowing_mul+0x2e>
  2e:	9801      	ldr	r0, [sp, #4]
  30:	9008      	str	r0, [sp, #32]
  32:	9900      	ldr	r1, [sp, #0]
  34:	f001 0201 	and.w	r2, r1, #1
  38:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3403
  3c:	9a08      	ldr	r2, [sp, #32]
  3e:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
  42:	9206      	str	r2, [sp, #24]
  44:	f88d 301c 	strb.w	r3, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3404
  48:	9806      	ldr	r0, [sp, #24]
  4a:	f89d 101c 	ldrb.w	r1, [sp, #28]
  4e:	b00c      	add	sp, #48	; 0x30
  50:	4770      	bx	lr

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17hc2de42f43fb3a427E:

00000000 <core::num::<impl usize>::max_value>:
_ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17hc2de42f43fb3a427E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2326
   0:	f04f 30ff 	mov.w	r0, #4294967295
   4:	4770      	bx	lr

Disassembly of section .text._ZN4core3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h5084d5336b7da9e0E:

00000000 <core::num::<impl core::convert::From<u8> for usize>::from>:
_ZN4core3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h5084d5336b7da9e0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:5105
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	f88d 0007 	strb.w	r0, [sp, #7]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:5106
   8:	f89d 0007 	ldrb.w	r0, [sp, #7]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:5107
   c:	9100      	str	r1, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.8.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.8
00000349 l       .debug_str	00000000 
0000055a l       .debug_str	00000000 
000005d1 l       .debug_str	00000000 
00000551 l       .debug_str	00000000 
000005c6 l       .debug_str	00000000 
0000054c l       .debug_str	00000000 
000005bd l       .debug_str	00000000 
00000530 l       .debug_str	00000000 
000005a9 l       .debug_str	00000000 
0000050c l       .debug_str	00000000 
0000059e l       .debug_str	00000000 
000004f5 l       .debug_str	00000000 
00000584 l       .debug_str	00000000 
000004ed l       .debug_str	00000000 
000004e9 l       .debug_str	00000000 
000004cc l       .debug_str	00000000 
000004c1 l       .debug_str	00000000 
0000057a l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
00000104 l       .debug_str	00000000 
00000107 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
0000011c l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
0000012a l       .debug_str	00000000 
00000131 l       .debug_str	00000000 
00000139 l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000155 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
000001a6 l       .debug_str	00000000 
000001dc l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001e3 l       .debug_str	00000000 
00000219 l       .debug_str	00000000 
0000021b l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
00000253 l       .debug_str	00000000 
00000289 l       .debug_str	00000000 
0000028b l       .debug_str	00000000 
000002c1 l       .debug_str	00000000 
000002c3 l       .debug_str	00000000 
00000324 l       .debug_str	00000000 
00000329 l       .debug_str	00000000 
00000463 l       .debug_str	00000000 
0000034b l       .debug_str	00000000 
00000351 l       .debug_str	00000000 
00000356 l       .debug_str	00000000 
0000035b l       .debug_str	00000000 
00000361 l       .debug_str	00000000 
00000367 l       .debug_str	00000000 
0000036e l       .debug_str	00000000 
00000373 l       .debug_str	00000000 
00000379 l       .debug_str	00000000 
0000037b l       .debug_str	00000000 
00000380 l       .debug_str	00000000 
00000384 l       .debug_str	00000000 
00000392 l       .debug_str	00000000 
0000039c l       .debug_str	00000000 
000003a0 l       .debug_str	00000000 
000003a8 l       .debug_str	00000000 
000003b0 l       .debug_str	00000000 
000003c4 l       .debug_str	00000000 
000003d0 l       .debug_str	00000000 
000003db l       .debug_str	00000000 
000003e2 l       .debug_str	00000000 
000003e8 l       .debug_str	00000000 
000003ec l       .debug_str	00000000 
000003f2 l       .debug_str	00000000 
000003f8 l       .debug_str	00000000 
000003fb l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
00000411 l       .debug_str	00000000 
00000415 l       .debug_str	00000000 
0000041e l       .debug_str	00000000 
0000042a l       .debug_str	00000000 
00000443 l       .debug_str	00000000 
00000448 l       .debug_str	00000000 
00000459 l       .debug_str	00000000 
00000561 l       .debug_str	00000000 
00000000 l     O .rodata.cst4	00000004 .Lanon.b07ff27959331ac2995e2798d10ddcf2.0
00000004 l     O .rodata.cst4	00000004 .Lanon.b07ff27959331ac2995e2798d10ddcf2.1
00000000 l     O .rodata..Lanon.b07ff27959331ac2995e2798d10ddcf2.2	00000010 .Lanon.b07ff27959331ac2995e2798d10ddcf2.2
00000000 l    d  .text._ZN8cortex_m8register4apsr4Apsr4bits17hfbef55ce9a426526E	00000000 .text._ZN8cortex_m8register4apsr4Apsr4bits17hfbef55ce9a426526E
00000000 l    d  .text._ZN8cortex_m8register4apsr4Apsr1q17h99fcb1a2c97713a2E	00000000 .text._ZN8cortex_m8register4apsr4Apsr1q17h99fcb1a2c97713a2E
00000000 l    d  .text._ZN8cortex_m8register4apsr4Apsr1v17h3b0c879cec446721E	00000000 .text._ZN8cortex_m8register4apsr4Apsr1v17h3b0c879cec446721E
00000000 l    d  .text._ZN8cortex_m8register4apsr4Apsr1c17h637382dd99819804E	00000000 .text._ZN8cortex_m8register4apsr4Apsr1c17h637382dd99819804E
00000000 l    d  .text._ZN8cortex_m8register4apsr4Apsr1z17h84ebbd5bd4f9d9b8E	00000000 .text._ZN8cortex_m8register4apsr4Apsr1z17h84ebbd5bd4f9d9b8E
00000000 l    d  .text._ZN8cortex_m8register4apsr4Apsr1n17h0437fa62ffbc8434E	00000000 .text._ZN8cortex_m8register4apsr4Apsr1n17h0437fa62ffbc8434E
00000000 l    d  .text._ZN67_$LT$cortex_m..register..apsr..Apsr$u20$as$u20$core..fmt..Debug$GT$3fmt17h6a76f3662e343b50E	00000000 .text._ZN67_$LT$cortex_m..register..apsr..Apsr$u20$as$u20$core..fmt..Debug$GT$3fmt17h6a76f3662e343b50E
00000000 l    d  .rodata..Lanon.b07ff27959331ac2995e2798d10ddcf2.2	00000000 .rodata..Lanon.b07ff27959331ac2995e2798d10ddcf2.2
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::field
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_struct
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000 g     F .text._ZN67_$LT$cortex_m..register..apsr..Apsr$u20$as$u20$core..fmt..Debug$GT$3fmt17h6a76f3662e343b50E	00000072 <cortex_m::register::apsr::Apsr as core::fmt::Debug>::fmt
00000000 g     F .text._ZN8cortex_m8register4apsr4Apsr1c17h637382dd99819804E	0000002a cortex_m::register::apsr::Apsr::c
00000000 g     F .text._ZN8cortex_m8register4apsr4Apsr1n17h0437fa62ffbc8434E	0000002a cortex_m::register::apsr::Apsr::n
00000000 g     F .text._ZN8cortex_m8register4apsr4Apsr1q17h99fcb1a2c97713a2E	0000002a cortex_m::register::apsr::Apsr::q
00000000 g     F .text._ZN8cortex_m8register4apsr4Apsr1v17h3b0c879cec446721E	0000002a cortex_m::register::apsr::Apsr::v
00000000 g     F .text._ZN8cortex_m8register4apsr4Apsr1z17h84ebbd5bd4f9d9b8E	0000002a cortex_m::register::apsr::Apsr::z
00000000 g     F .text._ZN8cortex_m8register4apsr4Apsr4bits17hfbef55ce9a426526E	00000010 cortex_m::register::apsr::Apsr::bits



Disassembly of section .text._ZN8cortex_m8register4apsr4Apsr4bits17hfbef55ce9a426526E:

00000000 <cortex_m::register::apsr::Apsr::bits>:
_ZN8cortex_m8register4apsr4Apsr4bits17hfbef55ce9a426526E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:11
    bits: u32,
}

impl Apsr {
    /// Returns the contents of the register as raw bits
    pub fn bits(&self) -> u32 {
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:12
        self.bits
   6:	9801      	ldr	r0, [sp, #4]
   8:	6800      	ldr	r0, [r0, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:13
    }
   a:	9100      	str	r1, [sp, #0]
   c:	b002      	add	sp, #8
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register4apsr4Apsr1q17h99fcb1a2c97713a2E:

00000000 <cortex_m::register::apsr::Apsr::q>:
_ZN8cortex_m8register4apsr4Apsr1q17h99fcb1a2c97713a2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:16

    /// DSP overflow and saturation flag
    pub fn q(&self) -> bool {
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:17
        self.bits & (1 << 27) == (1 << 27)
   6:	9803      	ldr	r0, [sp, #12]
   8:	6800      	ldr	r0, [r0, #0]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	e7ff      	b.n	10 <cortex_m::register::apsr::Apsr::q+0x10>
  10:	9801      	ldr	r0, [sp, #4]
  12:	f000 6100 	and.w	r1, r0, #134217728	; 0x8000000
  16:	9100      	str	r1, [sp, #0]
  18:	e7ff      	b.n	1a <cortex_m::register::apsr::Apsr::q+0x1a>
  1a:	9800      	ldr	r0, [sp, #0]
  1c:	f100 4178 	add.w	r1, r0, #4160749568	; 0xf8000000
  20:	fab1 f181 	clz	r1, r1
  24:	0948      	lsrs	r0, r1, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:18
    }
  26:	b004      	add	sp, #16
  28:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register4apsr4Apsr1v17h3b0c879cec446721E:

00000000 <cortex_m::register::apsr::Apsr::v>:
_ZN8cortex_m8register4apsr4Apsr1v17h3b0c879cec446721E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:21

    /// Overflow flag
    pub fn v(&self) -> bool {
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:22
        self.bits & (1 << 28) == (1 << 28)
   6:	9803      	ldr	r0, [sp, #12]
   8:	6800      	ldr	r0, [r0, #0]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	e7ff      	b.n	10 <cortex_m::register::apsr::Apsr::v+0x10>
  10:	9801      	ldr	r0, [sp, #4]
  12:	f000 5180 	and.w	r1, r0, #268435456	; 0x10000000
  16:	9100      	str	r1, [sp, #0]
  18:	e7ff      	b.n	1a <cortex_m::register::apsr::Apsr::v+0x1a>
  1a:	9800      	ldr	r0, [sp, #0]
  1c:	f100 4170 	add.w	r1, r0, #4026531840	; 0xf0000000
  20:	fab1 f181 	clz	r1, r1
  24:	0948      	lsrs	r0, r1, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:23
    }
  26:	b004      	add	sp, #16
  28:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register4apsr4Apsr1c17h637382dd99819804E:

00000000 <cortex_m::register::apsr::Apsr::c>:
_ZN8cortex_m8register4apsr4Apsr1c17h637382dd99819804E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:26

    /// Carry or borrow flag
    pub fn c(&self) -> bool {
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:27
        self.bits & (1 << 29) == (1 << 29)
   6:	9803      	ldr	r0, [sp, #12]
   8:	6800      	ldr	r0, [r0, #0]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	e7ff      	b.n	10 <cortex_m::register::apsr::Apsr::c+0x10>
  10:	9801      	ldr	r0, [sp, #4]
  12:	f000 5100 	and.w	r1, r0, #536870912	; 0x20000000
  16:	9100      	str	r1, [sp, #0]
  18:	e7ff      	b.n	1a <cortex_m::register::apsr::Apsr::c+0x1a>
  1a:	9800      	ldr	r0, [sp, #0]
  1c:	f100 4160 	add.w	r1, r0, #3758096384	; 0xe0000000
  20:	fab1 f181 	clz	r1, r1
  24:	0948      	lsrs	r0, r1, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:28
    }
  26:	b004      	add	sp, #16
  28:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register4apsr4Apsr1z17h84ebbd5bd4f9d9b8E:

00000000 <cortex_m::register::apsr::Apsr::z>:
_ZN8cortex_m8register4apsr4Apsr1z17h84ebbd5bd4f9d9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:31

    /// Zero flag
    pub fn z(&self) -> bool {
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:32
        self.bits & (1 << 30) == (1 << 30)
   6:	9803      	ldr	r0, [sp, #12]
   8:	6800      	ldr	r0, [r0, #0]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	e7ff      	b.n	10 <cortex_m::register::apsr::Apsr::z+0x10>
  10:	9801      	ldr	r0, [sp, #4]
  12:	f000 4180 	and.w	r1, r0, #1073741824	; 0x40000000
  16:	9100      	str	r1, [sp, #0]
  18:	e7ff      	b.n	1a <cortex_m::register::apsr::Apsr::z+0x1a>
  1a:	9800      	ldr	r0, [sp, #0]
  1c:	f100 4140 	add.w	r1, r0, #3221225472	; 0xc0000000
  20:	fab1 f181 	clz	r1, r1
  24:	0948      	lsrs	r0, r1, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:33
    }
  26:	b004      	add	sp, #16
  28:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register4apsr4Apsr1n17h0437fa62ffbc8434E:

00000000 <cortex_m::register::apsr::Apsr::n>:
_ZN8cortex_m8register4apsr4Apsr1n17h0437fa62ffbc8434E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:36

    /// Negative flag
    pub fn n(&self) -> bool {
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:37
        self.bits & (1 << 31) == (1 << 31)
   6:	9803      	ldr	r0, [sp, #12]
   8:	6800      	ldr	r0, [r0, #0]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	e7ff      	b.n	10 <cortex_m::register::apsr::Apsr::n+0x10>
  10:	9801      	ldr	r0, [sp, #4]
  12:	f000 4100 	and.w	r1, r0, #2147483648	; 0x80000000
  16:	9100      	str	r1, [sp, #0]
  18:	e7ff      	b.n	1a <cortex_m::register::apsr::Apsr::n+0x1a>
  1a:	9800      	ldr	r0, [sp, #0]
  1c:	f100 4100 	add.w	r1, r0, #2147483648	; 0x80000000
  20:	fab1 f181 	clz	r1, r1
  24:	0948      	lsrs	r0, r1, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:38
    }
  26:	b004      	add	sp, #16
  28:	4770      	bx	lr

Disassembly of section .text._ZN67_$LT$cortex_m..register..apsr..Apsr$u20$as$u20$core..fmt..Debug$GT$3fmt17h6a76f3662e343b50E:

00000000 <<cortex_m::register::apsr::Apsr as core::fmt::Debug>::fmt>:
_ZN67_$LT$cortex_m..register..apsr..Apsr$u20$as$u20$core..fmt..Debug$GT$3fmt17h6a76f3662e343b50E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:4
#[derive(Clone, Copy, Debug)]
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:6
    bits: u32,
   c:	9806      	ldr	r0, [sp, #24]
   e:	9008      	str	r0, [sp, #32]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:4
#[derive(Clone, Copy, Debug)]
  10:	9907      	ldr	r1, [sp, #28]
  12:	f240 0000 	movw	r0, #0
  16:	f2c0 0000 	movt	r0, #0
  1a:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
  1e:	f04f 0e04 	mov.w	lr, #4
  22:	9005      	str	r0, [sp, #20]
  24:	4660      	mov	r0, ip
  26:	f8dd c014 	ldr.w	ip, [sp, #20]
  2a:	9204      	str	r2, [sp, #16]
  2c:	4662      	mov	r2, ip
  2e:	9303      	str	r3, [sp, #12]
  30:	4673      	mov	r3, lr
  32:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_struct>
  36:	e7ff      	b.n	38 <<cortex_m::register::apsr::Apsr as core::fmt::Debug>::fmt+0x38>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:6
    bits: u32,
  38:	9808      	ldr	r0, [sp, #32]
  3a:	900b      	str	r0, [sp, #44]	; 0x2c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.1\src\register/apsr.rs:4
#[derive(Clone, Copy, Debug)]
  3c:	f240 0000 	movw	r0, #0
  40:	f2c0 0000 	movt	r0, #0
  44:	4669      	mov	r1, sp
  46:	6008      	str	r0, [r1, #0]
  48:	f240 0100 	movw	r1, #0
  4c:	f2c0 0100 	movt	r1, #0
  50:	a809      	add	r0, sp, #36	; 0x24
  52:	2204      	movs	r2, #4
  54:	ab0b      	add	r3, sp, #44	; 0x2c
  56:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::field>
  5a:	9002      	str	r0, [sp, #8]
  5c:	e7ff      	b.n	5e <<cortex_m::register::apsr::Apsr as core::fmt::Debug>::fmt+0x5e>
  5e:	a809      	add	r0, sp, #36	; 0x24
  60:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::finish>
  64:	9001      	str	r0, [sp, #4]
  66:	e7ff      	b.n	68 <<cortex_m::register::apsr::Apsr as core::fmt::Debug>::fmt+0x68>
  68:	9801      	ldr	r0, [sp, #4]
  6a:	f000 0001 	and.w	r0, r0, #1
  6e:	b00c      	add	sp, #48	; 0x30
  70:	bd80      	pop	{r7, pc}

cortex_m-b5f36c3515e84b69.cortex_m.35dxe6xo-cgu.9.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.35dxe6xo-cgu.9
00000398 l       .debug_str	00000000 
000006d3 l       .debug_str	00000000 
00000779 l       .debug_str	00000000 
000006bc l       .debug_str	00000000 
00000777 l       .debug_str	00000000 
000006b4 l       .debug_str	00000000 
0000076c l       .debug_str	00000000 
000006b0 l       .debug_str	00000000 
0000076a l       .debug_str	00000000 
00000693 l       .debug_str	00000000 
00000765 l       .debug_str	00000000 
00000688 l       .debug_str	00000000 
0000074b l       .debug_str	00000000 
0000062a l       .debug_str	00000000 
00000741 l       .debug_str	00000000 
00000620 l       .debug_str	00000000 
00000728 l       .debug_str	00000000 
0000060f l       .debug_str	00000000 
00000721 l       .debug_str	00000000 
0000060a l       .debug_str	00000000 
00000718 l       .debug_str	00000000 
000005f1 l       .debug_str	00000000 
00000713 l       .debug_str	00000000 
000005e5 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
0000016b l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
00000177 l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
000001da l       .debug_str	00000000 
000001e4 l       .debug_str	00000000 
00000240 l       .debug_str	00000000 
0000029d l       .debug_str	00000000 
000002c3 l       .debug_str	00000000 
000002cf l       .debug_str	00000000 
000002f8 l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
00000330 l       .debug_str	00000000 
0000033d l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
00000372 l       .debug_str	00000000 
00000376 l       .debug_str	00000000 
00000390 l       .debug_str	00000000 
00000394 l       .debug_str	00000000 
000005dc l       .debug_str	00000000 
0000039c l       .debug_str	00000000 
000003a0 l       .debug_str	00000000 
000003a6 l       .debug_str	00000000 
000003cf l       .debug_str	00000000 
00000404 l       .debug_str	00000000 
0000042e l       .debug_str	00000000 
0000043c l       .debug_str	00000000 
00000466 l       .debug_str	00000000 
00000473 l       .debug_str	00000000 
000004b2 l       .debug_str	00000000 
000004c3 l       .debug_str	00000000 
000004c6 l       .debug_str	00000000 
000004cc l       .debug_str	00000000 
000004ce l       .debug_str	00000000 
0000050a l       .debug_str	00000000 
00000522 l       .debug_str	00000000 
00000527 l       .debug_str	00000000 
0000052e l       .debug_str	00000000 
00000530 l       .debug_str	00000000 
00000537 l       .debug_str	00000000 
0000053b l       .debug_str	00000000 
0000053d l       .debug_str	00000000 
00000543 l       .debug_str	00000000 
00000548 l       .debug_str	00000000 
0000054d l       .debug_str	00000000 
00000553 l       .debug_str	00000000 
00000559 l       .debug_str	00000000 
00000563 l       .debug_str	00000000 
00000567 l       .debug_str	00000000 
0000056f l       .debug_str	00000000 
00000577 l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
00000592 l       .debug_str	00000000 
0000059e l       .debug_str	00000000 
000005a9 l       .debug_str	00000000 
000005b0 l       .debug_str	00000000 
000005b6 l       .debug_str	00000000 
000005bc l       .debug_str	00000000 
000005c2 l       .debug_str	00000000 
000005d1 l       .debug_str	00000000 
000005d8 l       .debug_str	00000000 
000006f7 l       .debug_str	00000000 
00000000 l    d  .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h0deab4a673e54d9fE	00000000 .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h0deab4a673e54d9fE
00000000 l    d  .text._ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h1032eeaf2b5a1b7fE	00000000 .text._ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h1032eeaf2b5a1b7fE
00000000 l    d  .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hedc341bf371011f0E	00000000 .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hedc341bf371011f0E
00000000 l    d  .text._ZN4core3mem4swap17h41aba37b8990dc43E	00000000 .text._ZN4core3mem4swap17h41aba37b8990dc43E
00000000 l    d  .text._ZN4core3mem7size_of17h1b1108e271bd0a50E	00000000 .text._ZN4core3mem7size_of17h1b1108e271bd0a50E
00000000 l    d  .text._ZN4core3mem7size_of17h44fdf4ca55863b83E	00000000 .text._ZN4core3mem7size_of17h44fdf4ca55863b83E
00000000 l    d  .text._ZN4core3mem7size_of17h591f3293ab7ffd6fE	00000000 .text._ZN4core3mem7size_of17h591f3293ab7ffd6fE
00000000 l    d  .text._ZN4core3mem7size_of17h9aeb5e449a2ed56fE	00000000 .text._ZN4core3mem7size_of17h9aeb5e449a2ed56fE
00000000 l    d  .text._ZN4core3mem8align_of17h809a8a7477c6bd8cE	00000000 .text._ZN4core3mem8align_of17h809a8a7477c6bd8cE
00000000 l    d  .text._ZN4core3mem8align_of17h9445d600c57c2559E	00000000 .text._ZN4core3mem8align_of17h9445d600c57c2559E
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$9unwrap_or17hf165d4b2a3e45bdbE	00000000 .text._ZN4core6option15Option$LT$T$GT$9unwrap_or17hf165d4b2a3e45bdbE
00000000 l    d  .text._ZN4core6result19Result$LT$T$C$E$GT$2ok17h45b8f3fa189a96fbE	00000000 .text._ZN4core6result19Result$LT$T$C$E$GT$2ok17h45b8f3fa189a96fbE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h0deab4a673e54d9fE	00000036 .hidden <usize as core::iter::range::Step>::add_usize
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
00000000 g     F .text._ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h1032eeaf2b5a1b7fE	00000072 .hidden core::fmt::num::<impl core::fmt::Debug for u8>::fmt
00000000 g     F .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hedc341bf371011f0E	00000072 .hidden core::fmt::num::<impl core::fmt::Debug for u32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
00000000         *UND*	00000000 core::fmt::Formatter::debug_lower_hex
00000000         *UND*	00000000 core::fmt::Formatter::debug_upper_hex
00000000 g     F .text._ZN4core3mem4swap17h41aba37b8990dc43E	0000001e core::mem::swap
00000000 g     F .text._ZN4core3mem7size_of17h1b1108e271bd0a50E	00000012 core::mem::size_of
00000000 g     F .text._ZN4core3mem7size_of17h44fdf4ca55863b83E	00000012 core::mem::size_of
00000000 g     F .text._ZN4core3mem7size_of17h591f3293ab7ffd6fE	00000012 core::mem::size_of
00000000 g     F .text._ZN4core3mem7size_of17h9aeb5e449a2ed56fE	00000012 core::mem::size_of
00000000 g     F .text._ZN4core3mem8align_of17h809a8a7477c6bd8cE	00000012 core::mem::align_of
00000000 g     F .text._ZN4core3mem8align_of17h9445d600c57c2559E	00000012 core::mem::align_of
00000000         *UND*	00000000 .hidden core::num::<impl usize>::checked_add
00000000         *UND*	00000000 core::ptr::swap_nonoverlapping_one
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$9unwrap_or17hf165d4b2a3e45bdbE	00000096 core::option::Option<T>::unwrap_or
00000000 g     F .text._ZN4core6result19Result$LT$T$C$E$GT$2ok17h45b8f3fa189a96fbE	0000006e core::result::Result<T,E>::ok
00000000         *UND*	00000000 <T as core::convert::TryFrom<U>>::try_from



Disassembly of section .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h0deab4a673e54d9fE:

00000000 <<usize as core::iter::range::Step>::add_usize>:
_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h0deab4a673e54d9fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:88
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:89
   c:	9805      	ldr	r0, [sp, #20]
   e:	9203      	str	r2, [sp, #12]
  10:	9302      	str	r3, [sp, #8]
  12:	f7ff fffe 	bl	0 <<T as core::convert::TryFrom<U>>::try_from>
  16:	9006      	str	r0, [sp, #24]
  18:	e7ff      	b.n	1a <<usize as core::iter::range::Step>::add_usize+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:90
  1a:	9806      	ldr	r0, [sp, #24]
  1c:	9007      	str	r0, [sp, #28]
  1e:	9804      	ldr	r0, [sp, #16]
  20:	6800      	ldr	r0, [r0, #0]
  22:	9907      	ldr	r1, [sp, #28]
  24:	f7ff fffe 	bl	0 <core::num::<impl usize>::checked_add>
  28:	9001      	str	r0, [sp, #4]
  2a:	9100      	str	r1, [sp, #0]
  2c:	e7ff      	b.n	2e <<usize as core::iter::range::Step>::add_usize+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:93
  2e:	9801      	ldr	r0, [sp, #4]
  30:	9900      	ldr	r1, [sp, #0]
  32:	b008      	add	sp, #32
  34:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h1032eeaf2b5a1b7fE:

00000000 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt>:
_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h1032eeaf2b5a1b7fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:146
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   c:	9806      	ldr	r0, [sp, #24]
   e:	9204      	str	r2, [sp, #16]
  10:	9303      	str	r3, [sp, #12]
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
  16:	9002      	str	r0, [sp, #8]
  18:	e7ff      	b.n	1a <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x1a>
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	07c1      	lsls	r1, r0, #31
  1e:	2900      	cmp	r1, #0
  20:	d008      	beq.n	34 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x34>
  22:	e7ff      	b.n	24 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x24>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
  24:	9805      	ldr	r0, [sp, #20]
  26:	9906      	ldr	r1, [sp, #24]
  28:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt>
  2c:	f88d 001f 	strb.w	r0, [sp, #31]
  30:	e7ff      	b.n	32 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  32:	e01a      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  34:	9806      	ldr	r0, [sp, #24]
  36:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d008      	beq.n	58 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x58>
  46:	e7ff      	b.n	48 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9906      	ldr	r1, [sp, #24]
  4c:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt>
  50:	f88d 001f 	strb.w	r0, [sp, #31]
  54:	e7ff      	b.n	56 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  56:	e007      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  58:	9805      	ldr	r0, [sp, #20]
  5a:	9906      	ldr	r1, [sp, #24]
  5c:	f7ff fffe 	bl	0 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt>
  60:	f88d 001f 	strb.w	r0, [sp, #31]
  64:	e7ff      	b.n	66 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x66>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  66:	e7ff      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  68:	e7ff      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:154
  6a:	f89d 001f 	ldrb.w	r0, [sp, #31]
  6e:	b008      	add	sp, #32
  70:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hedc341bf371011f0E:

00000000 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt>:
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hedc341bf371011f0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:146
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   c:	9806      	ldr	r0, [sp, #24]
   e:	9204      	str	r2, [sp, #16]
  10:	9303      	str	r3, [sp, #12]
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
  16:	9002      	str	r0, [sp, #8]
  18:	e7ff      	b.n	1a <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x1a>
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	07c1      	lsls	r1, r0, #31
  1e:	2900      	cmp	r1, #0
  20:	d008      	beq.n	34 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x34>
  22:	e7ff      	b.n	24 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x24>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
  24:	9805      	ldr	r0, [sp, #20]
  26:	9906      	ldr	r1, [sp, #24]
  28:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt>
  2c:	f88d 001f 	strb.w	r0, [sp, #31]
  30:	e7ff      	b.n	32 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  32:	e01a      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  34:	9806      	ldr	r0, [sp, #24]
  36:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d008      	beq.n	58 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x58>
  46:	e7ff      	b.n	48 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9906      	ldr	r1, [sp, #24]
  4c:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt>
  50:	f88d 001f 	strb.w	r0, [sp, #31]
  54:	e7ff      	b.n	56 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  56:	e007      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  58:	9805      	ldr	r0, [sp, #20]
  5a:	9906      	ldr	r1, [sp, #24]
  5c:	f7ff fffe 	bl	0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
  60:	f88d 001f 	strb.w	r0, [sp, #31]
  64:	e7ff      	b.n	66 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x66>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  66:	e7ff      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  68:	e7ff      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:154
  6a:	f89d 001f 	ldrb.w	r0, [sp, #31]
  6e:	b008      	add	sp, #32
  70:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem4swap17h41aba37b8990dc43E:

00000000 <core::mem::swap>:
_ZN4core3mem4swap17h41aba37b8990dc43E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:500
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9002      	str	r0, [sp, #8]
   a:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:502
   c:	9802      	ldr	r0, [sp, #8]
   e:	9903      	ldr	r1, [sp, #12]
  10:	9201      	str	r2, [sp, #4]
  12:	9300      	str	r3, [sp, #0]
  14:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  18:	e7ff      	b.n	1a <core::mem::swap+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:504
  1a:	b004      	add	sp, #16
  1c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem7size_of17h1b1108e271bd0a50E:

00000000 <core::mem::size_of>:
_ZN4core3mem7size_of17h1b1108e271bd0a50E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:242
   0:	b082      	sub	sp, #8
   2:	2004      	movs	r0, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:243
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::size_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:244
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem7size_of17h44fdf4ca55863b83E:

00000000 <core::mem::size_of>:
_ZN4core3mem7size_of17h44fdf4ca55863b83E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:242
   0:	b082      	sub	sp, #8
   2:	2004      	movs	r0, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:243
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::size_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:244
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem7size_of17h591f3293ab7ffd6fE:

00000000 <core::mem::size_of>:
_ZN4core3mem7size_of17h591f3293ab7ffd6fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:242
   0:	b082      	sub	sp, #8
   2:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:243
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::size_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:244
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem7size_of17h9aeb5e449a2ed56fE:

00000000 <core::mem::size_of>:
_ZN4core3mem7size_of17h9aeb5e449a2ed56fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:242
   0:	b082      	sub	sp, #8
   2:	2020      	movs	r0, #32
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:243
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::size_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:244
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem8align_of17h809a8a7477c6bd8cE:

00000000 <core::mem::align_of>:
_ZN4core3mem8align_of17h809a8a7477c6bd8cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:334
   0:	b082      	sub	sp, #8
   2:	2004      	movs	r0, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:335
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::align_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:336
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem8align_of17h9445d600c57c2559E:

00000000 <core::mem::align_of>:
_ZN4core3mem8align_of17h9445d600c57c2559E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:334
   0:	b082      	sub	sp, #8
   2:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:335
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::align_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:336
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$9unwrap_or17hf165d4b2a3e45bdbE:

00000000 <core::option::Option<T>::unwrap_or>:
_ZN4core6option15Option$LT$T$GT$9unwrap_or17hf165d4b2a3e45bdbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:367
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9004      	str	r0, [sp, #16]
   c:	9105      	str	r1, [sp, #20]
   e:	9206      	str	r2, [sp, #24]
  10:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:369
  12:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  16:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  1a:	2001      	movs	r0, #1
  1c:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  20:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  24:	9804      	ldr	r0, [sp, #16]
  26:	2800      	cmp	r0, #0
  28:	9303      	str	r3, [sp, #12]
  2a:	f8cd c008 	str.w	ip, [sp, #8]
  2e:	f8cd e004 	str.w	lr, [sp, #4]
  32:	9000      	str	r0, [sp, #0]
  34:	d00d      	beq.n	52 <core::option::Option<T>::unwrap_or+0x52>
  36:	e7ff      	b.n	38 <core::option::Option<T>::unwrap_or+0x38>
  38:	9800      	ldr	r0, [sp, #0]
  3a:	2801      	cmp	r0, #1
  3c:	d001      	beq.n	42 <core::option::Option<T>::unwrap_or+0x42>
  3e:	e7ff      	b.n	40 <core::option::Option<T>::unwrap_or+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:372
  40:	defe      	udf	#254	; 0xfe
  42:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:369
  44:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9008      	str	r0, [sp, #32]
  4c:	9808      	ldr	r0, [sp, #32]
  4e:	9007      	str	r0, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:368
  50:	e00d      	b.n	6e <core::option::Option<T>::unwrap_or+0x6e>
  52:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:370
  54:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  58:	9806      	ldr	r0, [sp, #24]
  5a:	9007      	str	r0, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:368
  5c:	e007      	b.n	6e <core::option::Option<T>::unwrap_or+0x6e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:372
  5e:	9804      	ldr	r0, [sp, #16]
  60:	2801      	cmp	r0, #1
  62:	d00d      	beq.n	80 <core::option::Option<T>::unwrap_or+0x80>
  64:	e016      	b.n	94 <core::option::Option<T>::unwrap_or+0x94>
  66:	2000      	movs	r0, #0
  68:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  6c:	e7f7      	b.n	5e <core::option::Option<T>::unwrap_or+0x5e>
  6e:	f89d 0026 	ldrb.w	r0, [sp, #38]	; 0x26
  72:	07c0      	lsls	r0, r0, #31
  74:	2800      	cmp	r0, #0
  76:	d1f6      	bne.n	66 <core::option::Option<T>::unwrap_or+0x66>
  78:	e7f1      	b.n	5e <core::option::Option<T>::unwrap_or+0x5e>
  7a:	9807      	ldr	r0, [sp, #28]
  7c:	b00a      	add	sp, #40	; 0x28
  7e:	bd80      	pop	{r7, pc}
  80:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  84:	07c0      	lsls	r0, r0, #31
  86:	2800      	cmp	r0, #0
  88:	d0f7      	beq.n	7a <core::option::Option<T>::unwrap_or+0x7a>
  8a:	e7ff      	b.n	8c <core::option::Option<T>::unwrap_or+0x8c>
  8c:	2000      	movs	r0, #0
  8e:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  92:	e7f2      	b.n	7a <core::option::Option<T>::unwrap_or+0x7a>
  94:	e7f1      	b.n	7a <core::option::Option<T>::unwrap_or+0x7a>

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$2ok17h45b8f3fa189a96fbE:

00000000 <core::result::Result<T,E>::ok>:
_ZN4core6result19Result$LT$T$C$E$GT$2ok17h45b8f3fa189a96fbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:336
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	f88d 000a 	strb.w	r0, [sp, #10]
   8:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:338
   a:	f88d 000f 	strb.w	r0, [sp, #15]
   e:	2001      	movs	r0, #1
  10:	f88d 000f 	strb.w	r0, [sp, #15]
  14:	f89d 000a 	ldrb.w	r0, [sp, #10]
  18:	07c2      	lsls	r2, r0, #31
  1a:	2a00      	cmp	r2, #0
  1c:	9101      	str	r1, [sp, #4]
  1e:	9000      	str	r0, [sp, #0]
  20:	d005      	beq.n	2e <core::result::Result<T,E>::ok+0x2e>
  22:	e7ff      	b.n	24 <core::result::Result<T,E>::ok+0x24>
  24:	9800      	ldr	r0, [sp, #0]
  26:	2801      	cmp	r0, #1
  28:	d008      	beq.n	3c <core::result::Result<T,E>::ok+0x3c>
  2a:	e7ff      	b.n	2c <core::result::Result<T,E>::ok+0x2c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:341
  2c:	defe      	udf	#254	; 0xfe
  2e:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:338
  30:	f88d 000f 	strb.w	r0, [sp, #15]
  34:	2001      	movs	r0, #1
  36:	f88d 000b 	strb.w	r0, [sp, #11]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:337
  3a:	e012      	b.n	62 <core::result::Result<T,E>::ok+0x62>
  3c:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:339
  3e:	f88d 000b 	strb.w	r0, [sp, #11]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:337
  42:	e00e      	b.n	62 <core::result::Result<T,E>::ok+0x62>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:341
  44:	f89d 000b 	ldrb.w	r0, [sp, #11]
  48:	b004      	add	sp, #16
  4a:	4770      	bx	lr
  4c:	f89d 000f 	ldrb.w	r0, [sp, #15]
  50:	07c0      	lsls	r0, r0, #31
  52:	2800      	cmp	r0, #0
  54:	d0f6      	beq.n	44 <core::result::Result<T,E>::ok+0x44>
  56:	e7ff      	b.n	58 <core::result::Result<T,E>::ok+0x58>
  58:	2000      	movs	r0, #0
  5a:	f88d 000f 	strb.w	r0, [sp, #15]
  5e:	e7f1      	b.n	44 <core::result::Result<T,E>::ok+0x44>
  60:	e7f0      	b.n	44 <core::result::Result<T,E>::ok+0x44>
  62:	f89d 000a 	ldrb.w	r0, [sp, #10]
  66:	07c0      	lsls	r0, r0, #31
  68:	2800      	cmp	r0, #0
  6a:	d0ef      	beq.n	4c <core::result::Result<T,E>::ok+0x4c>
  6c:	e7f8      	b.n	60 <core::result::Result<T,E>::ok+0x60>

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.0
0000038c l       .debug_str	00000000 
00000d0a l       .debug_str	00000000 
00000ed4 l       .debug_str	00000000 
00000cf9 l       .debug_str	00000000 
00000cf1 l       .debug_str	00000000 
00000ec9 l       .debug_str	00000000 
00000ce8 l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cdd l       .debug_str	00000000 
00000ec2 l       .debug_str	00000000 
00000cd9 l       .debug_str	00000000 
00000cd5 l       .debug_str	00000000 
00000eb9 l       .debug_str	00000000 
00000cd3 l       .debug_str	00000000 
00000cd1 l       .debug_str	00000000 
00000ead l       .debug_str	00000000 
00000cc4 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca0 l       .debug_str	00000000 
00000c87 l       .debug_str	00000000 
00000ea2 l       .debug_str	00000000 
00000c82 l       .debug_str	00000000 
00000e99 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00000c42 l       .debug_str	00000000 
00000e85 l       .debug_str	00000000 
00000c2b l       .debug_str	00000000 
00000c23 l       .debug_str	00000000 
00000c06 l       .debug_str	00000000 
00000bfb l       .debug_str	00000000 
00000e7a l       .debug_str	00000000 
00000b9d l       .debug_str	00000000 
00000b93 l       .debug_str	00000000 
00000b82 l       .debug_str	00000000 
00000e74 l       .debug_str	00000000 
00000b7d l       .debug_str	00000000 
00000b64 l       .debug_str	00000000 
00000e6c l       .debug_str	00000000 
00000b58 l       .debug_str	00000000 
00000e66 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b42 l       .debug_str	00000000 
00000b3f l       .debug_str	00000000 
00000e62 l       .debug_str	00000000 
00000b39 l       .debug_str	00000000 
00000e5d l       .debug_str	00000000 
00000b33 l       .debug_str	00000000 
00000e3b l       .debug_str	00000000 
00000b2f l       .debug_str	00000000 
00000e39 l       .debug_str	00000000 
00000b29 l       .debug_str	00000000 
00000e34 l       .debug_str	00000000 
00000b22 l       .debug_str	00000000 
00000e30 l       .debug_str	00000000 
00000b17 l       .debug_str	00000000 
00000b0b l       .debug_str	00000000 
00000b03 l       .debug_str	00000000 
00000afb l       .debug_str	00000000 
00000e29 l       .debug_str	00000000 
00000af7 l       .debug_str	00000000 
00000aed l       .debug_str	00000000 
00000adf l       .debug_str	00000000 
00000ad9 l       .debug_str	00000000 
00000ad3 l       .debug_str	00000000 
00000de0 l       .debug_str	00000000 
00000ace l       .debug_str	00000000 
00000d76 l       .debug_str	00000000 
00000d74 l       .debug_str	00000000 
00000d6b l       .debug_str	00000000 
00000ac9 l       .debug_str	00000000 
00000d43 l       .debug_str	00000000 
00000d39 l       .debug_str	00000000 
00000d15 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
0000017c l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
00000183 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
0000018e l       .debug_str	00000000 
00000191 l       .debug_str	00000000 
00000194 l       .debug_str	00000000 
00000199 l       .debug_str	00000000 
0000019f l       .debug_str	00000000 
000001a6 l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001bc l       .debug_str	00000000 
000001bf l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000001d2 l       .debug_str	00000000 
000001db l       .debug_str	00000000 
000001e4 l       .debug_str	00000000 
000001e8 l       .debug_str	00000000 
000001f1 l       .debug_str	00000000 
000001f7 l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000231 l       .debug_str	00000000 
00000233 l       .debug_str	00000000 
0000027b l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002a9 l       .debug_str	00000000 
000002af l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002b9 l       .debug_str	00000000 
000002bb l       .debug_str	00000000 
00000347 l       .debug_str	00000000 
00000360 l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
0000036c l       .debug_str	00000000 
00000372 l       .debug_str	00000000 
00000376 l       .debug_str	00000000 
0000037a l       .debug_str	00000000 
00000387 l       .debug_str	00000000 
00000ac3 l       .debug_str	00000000 
0000039a l       .debug_str	00000000 
000003c3 l       .debug_str	00000000 
000003ca l       .debug_str	00000000 
00000411 l       .debug_str	00000000 
0000041e l       .debug_str	00000000 
0000046b l       .debug_str	00000000 
0000047e l       .debug_str	00000000 
000004d0 l       .debug_str	00000000 
00000540 l       .debug_str	00000000 
0000054c l       .debug_str	00000000 
000005ac l       .debug_str	00000000 
000005b4 l       .debug_str	00000000 
000005c5 l       .debug_str	00000000 
0000062a l       .debug_str	00000000 
0000065a l       .debug_str	00000000 
00000663 l       .debug_str	00000000 
0000069f l       .debug_str	00000000 
000006b3 l       .debug_str	00000000 
000006b5 l       .debug_str	00000000 
000006f0 l       .debug_str	00000000 
00000736 l       .debug_str	00000000 
00000754 l       .debug_str	00000000 
00000784 l       .debug_str	00000000 
0000078d l       .debug_str	00000000 
00000796 l       .debug_str	00000000 
000007a0 l       .debug_str	00000000 
000007a7 l       .debug_str	00000000 
000007ad l       .debug_str	00000000 
000007e7 l       .debug_str	00000000 
000007f9 l       .debug_str	00000000 
00000827 l       .debug_str	00000000 
0000082e l       .debug_str	00000000 
00000833 l       .debug_str	00000000 
00000837 l       .debug_str	00000000 
00000843 l       .debug_str	00000000 
0000084d l       .debug_str	00000000 
00000854 l       .debug_str	00000000 
00000859 l       .debug_str	00000000 
0000085e l       .debug_str	00000000 
00000869 l       .debug_str	00000000 
00000873 l       .debug_str	00000000 
00000896 l       .debug_str	00000000 
000008eb l       .debug_str	00000000 
000008ee l       .debug_str	00000000 
000008f3 l       .debug_str	00000000 
00000953 l       .debug_str	00000000 
0000095f l       .debug_str	00000000 
0000097b l       .debug_str	00000000 
000009cb l       .debug_str	00000000 
00000a2e l       .debug_str	00000000 
00000a95 l       .debug_str	00000000 
00000a9a l       .debug_str	00000000 
00000ac1 l       .debug_str	00000000 
00000d13 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.0	00000018 .Lanon.351850ed321466e86ca00fd3266732c6.0
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.10	00000018 .Lanon.351850ed321466e86ca00fd3266732c6.10
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.11	00000018 .Lanon.351850ed321466e86ca00fd3266732c6.11
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.12	00000015 .Lanon.351850ed321466e86ca00fd3266732c6.12
00000000 l     O .rodata.cst4	00000004 .Lanon.351850ed321466e86ca00fd3266732c6.13
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.14	00000010 .Lanon.351850ed321466e86ca00fd3266732c6.14
00000000 l     O .rodata.cst16	00000010 .Lanon.351850ed321466e86ca00fd3266732c6.15
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.16	0000000b .Lanon.351850ed321466e86ca00fd3266732c6.16
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.17	00000010 .Lanon.351850ed321466e86ca00fd3266732c6.17
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.2	00000008 .Lanon.351850ed321466e86ca00fd3266732c6.2
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.3	00000000 .Lanon.351850ed321466e86ca00fd3266732c6.3
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.4	00000001 .Lanon.351850ed321466e86ca00fd3266732c6.4
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.5	00000023 .Lanon.351850ed321466e86ca00fd3266732c6.5
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.6	0000002b .Lanon.351850ed321466e86ca00fd3266732c6.6
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.8	00000008 .Lanon.351850ed321466e86ca00fd3266732c6.8
00000000 l     O .rodata..Lanon.351850ed321466e86ca00fd3266732c6.9	00000018 .Lanon.351850ed321466e86ca00fd3266732c6.9
00000000 l     F .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hba148d002847db28E	0000002e <cstr_core::CStr as core::fmt::Debug>::fmt::{{closure}}
00000000 l     F .text._ZN9cstr_core21FromBytesWithNulError12interior_nul17hb036e5edc3be9674E	00000022 cstr_core::FromBytesWithNulError::interior_nul
00000000 l     F .text._ZN9cstr_core21FromBytesWithNulError18not_nul_terminated17hafe91938ee0eb380E	00000016 cstr_core::FromBytesWithNulError::not_nul_terminated
00000000 l     F .text._ZN9cstr_core4CStr17to_bytes_with_nul17hd9e7dbbe7067e67eE	00000016 cstr_core::CStr::to_bytes_with_nul
00000000 l     F .text._ZN9cstr_core4CStr29from_bytes_with_nul_unchecked17hbeb6cf99a4f11165E	00000016 cstr_core::CStr::from_bytes_with_nul_unchecked
00000000 l     F .text._ZN9cstr_core4CStr8to_bytes17h7e806a88704ec7abE	00000064 cstr_core::CStr::to_bytes
00000000 l     F .text._ZN9cstr_core6strlen17h1fa2fd67615da009E	0000004e cstr_core::strlen
00000000 l     O .rodata.str.0	00000059 str.0
00000000 l     O .rodata.str.1	0000001c str.1
00000000 l     O .rodata.str.2	00000021 str.2
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8c2ce1a14c950fafE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8c2ce1a14c950fafE
00000000 l    d  .text._ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h8f1853f5f3447585E	00000000 .text._ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h8f1853f5f3447585E
00000000 l    d  .text._ZN9cstr_core6strlen17h1fa2fd67615da009E	00000000 .text._ZN9cstr_core6strlen17h1fa2fd67615da009E
00000000 l    d  .text._ZN9cstr_core21FromBytesWithNulError12interior_nul17hb036e5edc3be9674E	00000000 .text._ZN9cstr_core21FromBytesWithNulError12interior_nul17hb036e5edc3be9674E
00000000 l    d  .text._ZN9cstr_core21FromBytesWithNulError18not_nul_terminated17hafe91938ee0eb380E	00000000 .text._ZN9cstr_core21FromBytesWithNulError18not_nul_terminated17hafe91938ee0eb380E
00000000 l    d  .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h9c469887a71f0d19E	00000000 .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h9c469887a71f0d19E
00000000 l    d  .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hba148d002847db28E	00000000 .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hba148d002847db28E
00000000 l    d  .text._ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17hd490ba1ccf20bf11E	00000000 .text._ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17hd490ba1ccf20bf11E
00000000 l    d  .text._ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h506675d69bb6084fE	00000000 .text._ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h506675d69bb6084fE
00000000 l    d  .text._ZN9cstr_core4CStr8from_ptr17hc008df96d18f5d87E	00000000 .text._ZN9cstr_core4CStr8from_ptr17hc008df96d18f5d87E
00000000 l    d  .text._ZN9cstr_core4CStr19from_bytes_with_nul17hb8e5d2bdd256b2ceE	00000000 .text._ZN9cstr_core4CStr19from_bytes_with_nul17hb8e5d2bdd256b2ceE
00000000 l    d  .text._ZN9cstr_core4CStr29from_bytes_with_nul_unchecked17hbeb6cf99a4f11165E	00000000 .text._ZN9cstr_core4CStr29from_bytes_with_nul_unchecked17hbeb6cf99a4f11165E
00000000 l    d  .text._ZN9cstr_core4CStr8to_bytes17h7e806a88704ec7abE	00000000 .text._ZN9cstr_core4CStr8to_bytes17h7e806a88704ec7abE
00000000 l    d  .text._ZN9cstr_core4CStr17to_bytes_with_nul17hd9e7dbbe7067e67eE	00000000 .text._ZN9cstr_core4CStr17to_bytes_with_nul17hd9e7dbbe7067e67eE
00000000 l    d  .text._ZN9cstr_core4CStr6to_str17h91fd1ecf6105ad70E	00000000 .text._ZN9cstr_core4CStr6to_str17h91fd1ecf6105ad70E
00000000 l    d  .text._ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h42d26c200588aef6E	00000000 .text._ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h42d26c200588aef6E
00000000 l    d  .text._ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h8de1a82b071bb4ceE	00000000 .text._ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h8de1a82b071bb4ceE
00000000 l    d  .text._ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h7b7a8404dbbca5c5E	00000000 .text._ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h7b7a8404dbbca5c5E
00000000 l    d  .text._ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdd5cd8a5ff5484dcE	00000000 .text._ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdd5cd8a5ff5484dcE
00000000 l    d  .text._ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h82aebe98e613e78fE	00000000 .text._ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h82aebe98e613e78fE
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata..Lanon.351850ed321466e86ca00fd3266732c6.1	00000000 .rodata..Lanon.351850ed321466e86ca00fd3266732c6.1
00000000 l    d  .rodata..Lanon.351850ed321466e86ca00fd3266732c6.7	00000000 .rodata..Lanon.351850ed321466e86ca00fd3266732c6.7
00000000 l    d  .rodata.str.2	00000000 .rodata.str.2
00000000 l    d  .rodata..Lanon.351850ed321466e86ca00fd3266732c6.14	00000000 .rodata..Lanon.351850ed321466e86ca00fd3266732c6.14
00000000 l    d  .rodata..Lanon.351850ed321466e86ca00fd3266732c6.17	00000000 .rodata..Lanon.351850ed321466e86ca00fd3266732c6.17
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8c2ce1a14c950fafE	00000028 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::field
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::field
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::finish
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000         *UND*	00000000 core::fmt::Formatter::debug_struct
00000000         *UND*	00000000 core::fmt::Formatter::write_fmt
00000000         *UND*	00000000 core::fmt::Formatter::write_str
00000000 g     F .text._ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h8f1853f5f3447585E	00000026 core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::ptr::<impl *const T>::offset
00000000         *UND*	00000000 core::str::from_utf8
00000000         *UND*	00000000 core::iter::traits::iterator::Iterator::flat_map
00000000         *UND*	00000000 core::slice::from_raw_parts
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000         *UND*	00000000 core::slice::<impl [T]>::iter
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000         *UND*	00000000 core::slice::<impl core::cmp::Ord for [T]>::cmp
00000000         *UND*	00000000 core::slice::<impl core::cmp::PartialOrd for [T]>::partial_cmp
00000000         *UND*	00000000 core::slice::<impl core::ops::index::Index<I> for [T]>::index
00000000         *UND*	00000000 core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 <T as core::convert::From<T>>::from
00000000 g     F .text._ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h7b7a8404dbbca5c5E	00000052 <cstr_core::CStr as core::cmp::Ord>::cmp
00000000 g     F .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h9c469887a71f0d19E	000001b0 <cstr_core::CStr as core::fmt::Debug>::fmt
00000000 g     F .text._ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h42d26c200588aef6E	00000056 <cstr_core::CStr as core::cmp::PartialEq>::eq
00000000         *UND*	00000000 <core::fmt::Formatter as core::fmt::Write>::write_char
00000000 g     F .text._ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h8de1a82b071bb4ceE	00000052 <cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp
00000000 g     F .text._ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17hd490ba1ccf20bf11E	0000002a <&cstr_core::CStr as core::default::Default>::default
00000000         *UND*	00000000 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000 g     F .text._ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdd5cd8a5ff5484dcE	00000072 <cstr_core::FromBytesWithNulError as core::fmt::Debug>::fmt
00000000         *UND*	00000000 .hidden memchr::memchr
00000000 g     F .text._ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h506675d69bb6084fE	00000174 <cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt
00000000         *UND*	00000000 <core::result::Result<T,E> as core::ops::try::Try>::from_error
00000000         *UND*	00000000 <core::result::Result<T,E> as core::ops::try::Try>::into_result
00000000 g     F .text._ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h82aebe98e613e78fE	00000094 <cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt
00000000 g     F .text._ZN9cstr_core4CStr19from_bytes_with_nul17hb8e5d2bdd256b2ceE	000000c0 cstr_core::CStr::from_bytes_with_nul
00000000 g     F .text._ZN9cstr_core4CStr6to_str17h91fd1ecf6105ad70E	00000036 cstr_core::CStr::to_str
00000000 g     F .text._ZN9cstr_core4CStr8from_ptr17hc008df96d18f5d87E	0000005c cstr_core::CStr::from_ptr
00000000         *UND*	00000000 .hidden cstr_core::ascii::escape_default



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8c2ce1a14c950fafE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8c2ce1a14c950fafE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <<&T as core::fmt::Debug>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h8f1853f5f3447585E:

00000000 <core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once>:
_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h8f1853f5f3447585E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ops/function.rs:278
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9104      	str	r1, [sp, #16]
   c:	9205      	str	r2, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ops/function.rs:279
   e:	9904      	ldr	r1, [sp, #16]
  10:	9a05      	ldr	r2, [sp, #20]
  12:	9303      	str	r3, [sp, #12]
  14:	f8cd c008 	str.w	ip, [sp, #8]
  18:	f8cd e004 	str.w	lr, [sp, #4]
  1c:	f7ff fffe 	bl	0 <core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once>
  20:	e7ff      	b.n	22 <core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ops/function.rs:280
  22:	b006      	add	sp, #24
  24:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN9cstr_core6strlen17h1fa2fd67615da009E:

00000000 <cstr_core::strlen>:
_ZN9cstr_core6strlen17h1fa2fd67615da009E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:47

/// Re-export c_char
pub use cty::c_char;

#[inline]
unsafe fn strlen(p: *const c_char) -> usize {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
   8:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:48
    let mut n = 0;
   a:	9005      	str	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:49
    while *p.offset(n as isize) != 0 {
   c:	9103      	str	r1, [sp, #12]
   e:	e7ff      	b.n	10 <cstr_core::strlen+0x10>
  10:	9804      	ldr	r0, [sp, #16]
  12:	9905      	ldr	r1, [sp, #20]
  14:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
  18:	9002      	str	r0, [sp, #8]
  1a:	e002      	b.n	22 <cstr_core::strlen+0x22>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:52
        n += 1;
    }
    n
  1c:	9805      	ldr	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:53
}
  1e:	b006      	add	sp, #24
  20:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:49
    while *p.offset(n as isize) != 0 {
  22:	9802      	ldr	r0, [sp, #8]
  24:	7801      	ldrb	r1, [r0, #0]
  26:	2900      	cmp	r1, #0
  28:	d0f8      	beq.n	1c <cstr_core::strlen+0x1c>
  2a:	e7ff      	b.n	2c <cstr_core::strlen+0x2c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:50
        n += 1;
  2c:	9805      	ldr	r0, [sp, #20]
  2e:	1c41      	adds	r1, r0, #1
  30:	460a      	mov	r2, r1
  32:	4281      	cmp	r1, r0
  34:	9201      	str	r2, [sp, #4]
  36:	d303      	bcc.n	40 <cstr_core::strlen+0x40>
  38:	e7ff      	b.n	3a <cstr_core::strlen+0x3a>
  3a:	9801      	ldr	r0, [sp, #4]
  3c:	9005      	str	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:49
    while *p.offset(n as isize) != 0 {
  3e:	e7e7      	b.n	10 <cstr_core::strlen+0x10>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:50
        n += 1;
  40:	f240 0000 	movw	r0, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	f7ff fffe 	bl	0 <core::panicking::panic>
  4c:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN9cstr_core21FromBytesWithNulError12interior_nul17hb036e5edc3be9674E:

00000000 <cstr_core::FromBytesWithNulError::interior_nul>:
_ZN9cstr_core21FromBytesWithNulError12interior_nul17hb036e5edc3be9674E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:332
    InteriorNul(usize),
    NotNulTerminated,
}

impl FromBytesWithNulError {
    fn interior_nul(pos: usize) -> FromBytesWithNulError {
   0:	b086      	sub	sp, #24
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:334
        FromBytesWithNulError {
            kind: FromBytesWithNulErrorKind::InteriorNul(pos),
   6:	9801      	ldr	r0, [sp, #4]
   8:	9005      	str	r0, [sp, #20]
   a:	2000      	movs	r0, #0
   c:	9004      	str	r0, [sp, #16]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:333
        FromBytesWithNulError {
   e:	9804      	ldr	r0, [sp, #16]
  10:	9a05      	ldr	r2, [sp, #20]
  12:	9002      	str	r0, [sp, #8]
  14:	9203      	str	r2, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:336
        }
    }
  16:	9802      	ldr	r0, [sp, #8]
  18:	9a03      	ldr	r2, [sp, #12]
  1a:	9100      	str	r1, [sp, #0]
  1c:	4611      	mov	r1, r2
  1e:	b006      	add	sp, #24
  20:	4770      	bx	lr

Disassembly of section .text._ZN9cstr_core21FromBytesWithNulError18not_nul_terminated17hafe91938ee0eb380E:

00000000 <cstr_core::FromBytesWithNulError::not_nul_terminated>:
_ZN9cstr_core21FromBytesWithNulError18not_nul_terminated17hafe91938ee0eb380E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:337
    fn not_nul_terminated() -> FromBytesWithNulError {
   0:	b084      	sub	sp, #16
   2:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:339
        FromBytesWithNulError {
            kind: FromBytesWithNulErrorKind::NotNulTerminated,
   4:	9002      	str	r0, [sp, #8]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:338
        FromBytesWithNulError {
   6:	9802      	ldr	r0, [sp, #8]
   8:	9903      	ldr	r1, [sp, #12]
   a:	9000      	str	r0, [sp, #0]
   c:	9101      	str	r1, [sp, #4]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:341
        }
    }
   e:	9800      	ldr	r0, [sp, #0]
  10:	9901      	ldr	r1, [sp, #4]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h9c469887a71f0d19E:

00000000 <<cstr_core::CStr as core::fmt::Debug>::fmt>:
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h9c469887a71f0d19E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:670
        s.into_bytes()
    }
}

impl fmt::Debug for CStr {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0c6      	sub	sp, #280	; 0x118
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9010      	str	r0, [sp, #64]	; 0x40
   c:	9111      	str	r1, [sp, #68]	; 0x44
   e:	9212      	str	r2, [sp, #72]	; 0x48
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:671
        write!(f, "\"")?;
  10:	9812      	ldr	r0, [sp, #72]	; 0x48
  12:	4669      	mov	r1, sp
  14:	2200      	movs	r2, #0
  16:	600a      	str	r2, [r1, #0]
  18:	f240 0100 	movw	r1, #0
  1c:	f2c0 0100 	movt	r1, #0
  20:	f240 0200 	movw	r2, #0
  24:	f2c0 0200 	movt	r2, #0
  28:	ac14      	add	r4, sp, #80	; 0x50
  2a:	2501      	movs	r5, #1
  2c:	900f      	str	r0, [sp, #60]	; 0x3c
  2e:	4620      	mov	r0, r4
  30:	920e      	str	r2, [sp, #56]	; 0x38
  32:	462a      	mov	r2, r5
  34:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  36:	930d      	str	r3, [sp, #52]	; 0x34
  38:	4623      	mov	r3, r4
  3a:	f8cd c030 	str.w	ip, [sp, #48]	; 0x30
  3e:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
  42:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  46:	e7ff      	b.n	48 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x48>
  48:	a914      	add	r1, sp, #80	; 0x50
  4a:	980f      	ldr	r0, [sp, #60]	; 0x3c
  4c:	f7ff fffe 	bl	0 <core::fmt::Formatter::write_fmt>
  50:	900a      	str	r0, [sp, #40]	; 0x28
  52:	e7ff      	b.n	54 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x54>
  54:	980a      	ldr	r0, [sp, #40]	; 0x28
  56:	f000 0001 	and.w	r0, r0, #1
  5a:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
  5e:	f88d 004f 	strb.w	r0, [sp, #79]	; 0x4f
  62:	e7ff      	b.n	64 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x64>
  64:	f89d 004f 	ldrb.w	r0, [sp, #79]	; 0x4f
  68:	07c1      	lsls	r1, r0, #31
  6a:	2900      	cmp	r1, #0
  6c:	9009      	str	r0, [sp, #36]	; 0x24
  6e:	d012      	beq.n	96 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x96>
  70:	e7ff      	b.n	72 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x72>
  72:	9809      	ldr	r0, [sp, #36]	; 0x24
  74:	2801      	cmp	r0, #1
  76:	d001      	beq.n	7c <<cstr_core::CStr as core::fmt::Debug>::fmt+0x7c>
  78:	e7ff      	b.n	7a <<cstr_core::CStr as core::fmt::Debug>::fmt+0x7a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:679
            .flat_map(|&b| ascii::escape_default(b))
        {
            f.write_char(byte as char)?;
        }
        write!(f, "\"")
    }
  7a:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:671
        write!(f, "\"")?;
  7c:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
  80:	e7ff      	b.n	2 <<core::result::Result<T,E> as core::ops::try::Try>::from_error+0x2>
  82:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
  86:	f88d 004e 	strb.w	r0, [sp, #78]	; 0x4e
  8a:	e7ff      	b.n	8c <<cstr_core::CStr as core::fmt::Debug>::fmt+0x8c>
  8c:	e7ff      	b.n	8e <<cstr_core::CStr as core::fmt::Debug>::fmt+0x8e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:679
    }
  8e:	f89d 004e 	ldrb.w	r0, [sp, #78]	; 0x4e
  92:	b046      	add	sp, #280	; 0x118
  94:	bdb0      	pop	{r4, r5, r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:672
        for byte in self.to_bytes()
  96:	9810      	ldr	r0, [sp, #64]	; 0x40
  98:	9911      	ldr	r1, [sp, #68]	; 0x44
  9a:	f7ff fffe 	bl	0 <<cstr_core::CStr as core::fmt::Debug>::fmt>
  9e:	9008      	str	r0, [sp, #32]
  a0:	9107      	str	r1, [sp, #28]
  a2:	e7ff      	b.n	a4 <<cstr_core::CStr as core::fmt::Debug>::fmt+0xa4>
  a4:	9808      	ldr	r0, [sp, #32]
  a6:	9907      	ldr	r1, [sp, #28]
  a8:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::iter>
  ac:	9006      	str	r0, [sp, #24]
  ae:	9105      	str	r1, [sp, #20]
  b0:	e7ff      	b.n	b2 <<cstr_core::CStr as core::fmt::Debug>::fmt+0xb2>
  b2:	a826      	add	r0, sp, #152	; 0x98
  b4:	9906      	ldr	r1, [sp, #24]
  b6:	9a05      	ldr	r2, [sp, #20]
  b8:	f7ff fffe 	bl	0 <core::iter::traits::iterator::Iterator::flat_map>
  bc:	e7ff      	b.n	be <<cstr_core::CStr as core::fmt::Debug>::fmt+0xbe>
  be:	a81c      	add	r0, sp, #112	; 0x70
  c0:	a926      	add	r1, sp, #152	; 0x98
  c2:	f7ff fffe 	bl	0 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
  c6:	e7ff      	b.n	c8 <<cstr_core::CStr as core::fmt::Debug>::fmt+0xc8>
  c8:	a81c      	add	r0, sp, #112	; 0x70
  ca:	a931      	add	r1, sp, #196	; 0xc4
  cc:	e8b0 501c 	ldmia.w	r0!, {r2, r3, r4, ip, lr}
  d0:	e8a1 501c 	stmia.w	r1!, {r2, r3, r4, ip, lr}
  d4:	e890 501c 	ldmia.w	r0, {r2, r3, r4, ip, lr}
  d8:	e881 501c 	stmia.w	r1, {r2, r3, r4, ip, lr}
  dc:	e7ff      	b.n	de <<cstr_core::CStr as core::fmt::Debug>::fmt+0xde>
  de:	a831      	add	r0, sp, #196	; 0xc4
  e0:	f7ff fffe 	bl	0 <<core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next>
  e4:	f88d 10f1 	strb.w	r1, [sp, #241]	; 0xf1
  e8:	f88d 00f0 	strb.w	r0, [sp, #240]	; 0xf0
  ec:	e7ff      	b.n	ee <<cstr_core::CStr as core::fmt::Debug>::fmt+0xee>
  ee:	f89d 00f0 	ldrb.w	r0, [sp, #240]	; 0xf0
  f2:	07c1      	lsls	r1, r0, #31
  f4:	2900      	cmp	r1, #0
  f6:	9004      	str	r0, [sp, #16]
  f8:	d017      	beq.n	12a <<cstr_core::CStr as core::fmt::Debug>::fmt+0x12a>
  fa:	e7ff      	b.n	fc <<cstr_core::CStr as core::fmt::Debug>::fmt+0xfc>
  fc:	9804      	ldr	r0, [sp, #16]
  fe:	2801      	cmp	r0, #1
 100:	d1bb      	bne.n	7a <<cstr_core::CStr as core::fmt::Debug>::fmt+0x7a>
 102:	e7ff      	b.n	104 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x104>
 104:	f89d 00f1 	ldrb.w	r0, [sp, #241]	; 0xf1
 108:	f88d 00f5 	strb.w	r0, [sp, #245]	; 0xf5
 10c:	f89d 00f5 	ldrb.w	r0, [sp, #245]	; 0xf5
 110:	f88d 00ef 	strb.w	r0, [sp, #239]	; 0xef
 114:	f89d 00ef 	ldrb.w	r0, [sp, #239]	; 0xef
 118:	f88d 00f6 	strb.w	r0, [sp, #246]	; 0xf6
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:676
            f.write_char(byte as char)?;
 11c:	9812      	ldr	r0, [sp, #72]	; 0x48
 11e:	f89d 10f6 	ldrb.w	r1, [sp, #246]	; 0xf6
 122:	f7ff fffe 	bl	0 <<core::fmt::Formatter as core::fmt::Write>::write_char>
 126:	9003      	str	r0, [sp, #12]
 128:	e003      	b.n	132 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x132>
 12a:	a831      	add	r0, sp, #196	; 0xc4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:677
        }
 12c:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
 130:	e021      	b.n	176 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x176>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:676
            f.write_char(byte as char)?;
 132:	9803      	ldr	r0, [sp, #12]
 134:	f000 0001 	and.w	r0, r0, #1
 138:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
 13c:	f88d 00f7 	strb.w	r0, [sp, #247]	; 0xf7
 140:	e7ff      	b.n	142 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x142>
 142:	f89d 00f7 	ldrb.w	r0, [sp, #247]	; 0xf7
 146:	07c1      	lsls	r1, r0, #31
 148:	2900      	cmp	r1, #0
 14a:	9002      	str	r0, [sp, #8]
 14c:	d012      	beq.n	174 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x174>
 14e:	e7ff      	b.n	150 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x150>
 150:	9802      	ldr	r0, [sp, #8]
 152:	2801      	cmp	r0, #1
 154:	f47f af91 	bne.w	7a <<cstr_core::CStr as core::fmt::Debug>::fmt+0x7a>
 158:	e7ff      	b.n	2 <<T as core::convert::From<T>>::from+0x2>
 15a:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
 15e:	e7ff      	b.n	2 <<core::result::Result<T,E> as core::ops::try::Try>::from_error+0x2>
 160:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
 164:	f88d 004e 	strb.w	r0, [sp, #78]	; 0x4e
 168:	e7ff      	b.n	16a <<cstr_core::CStr as core::fmt::Debug>::fmt+0x16a>
 16a:	a831      	add	r0, sp, #196	; 0xc4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:677
        }
 16c:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
 170:	e7ff      	b.n	172 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x172>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:676
            f.write_char(byte as char)?;
 172:	e78c      	b.n	8e <<cstr_core::CStr as core::fmt::Debug>::fmt+0x8e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:672
        for byte in self.to_bytes()
 174:	e7b3      	b.n	de <<cstr_core::CStr as core::fmt::Debug>::fmt+0xde>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:678
        write!(f, "\"")
 176:	9812      	ldr	r0, [sp, #72]	; 0x48
 178:	4669      	mov	r1, sp
 17a:	2200      	movs	r2, #0
 17c:	600a      	str	r2, [r1, #0]
 17e:	f240 0100 	movw	r1, #0
 182:	f2c0 0100 	movt	r1, #0
 186:	f240 0300 	movw	r3, #0
 18a:	f2c0 0300 	movt	r3, #0
 18e:	aa40      	add	r2, sp, #256	; 0x100
 190:	f04f 0c01 	mov.w	ip, #1
 194:	9001      	str	r0, [sp, #4]
 196:	4610      	mov	r0, r2
 198:	4662      	mov	r2, ip
 19a:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 19e:	e7ff      	b.n	1a0 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x1a0>
 1a0:	a940      	add	r1, sp, #256	; 0x100
 1a2:	9801      	ldr	r0, [sp, #4]
 1a4:	f7ff fffe 	bl	0 <core::fmt::Formatter::write_fmt>
 1a8:	f88d 004e 	strb.w	r0, [sp, #78]	; 0x4e
 1ac:	e7ff      	b.n	1ae <<cstr_core::CStr as core::fmt::Debug>::fmt+0x1ae>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:679
    }
 1ae:	e76e      	b.n	8e <<cstr_core::CStr as core::fmt::Debug>::fmt+0x8e>

Disassembly of section .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hba148d002847db28E:

00000000 <<cstr_core::CStr as core::fmt::Debug>::fmt::{{closure}}>:
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hba148d002847db28E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:674
            .flat_map(|&b| ascii::escape_default(b))
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9103      	str	r1, [sp, #12]
   c:	9204      	str	r2, [sp, #16]
   e:	9904      	ldr	r1, [sp, #16]
  10:	7809      	ldrb	r1, [r1, #0]
  12:	f88d 1017 	strb.w	r1, [sp, #23]
  16:	f89d 1017 	ldrb.w	r1, [sp, #23]
  1a:	9302      	str	r3, [sp, #8]
  1c:	f8cd c004 	str.w	ip, [sp, #4]
  20:	f8cd e000 	str.w	lr, [sp]
  24:	f7ff fffe 	bl	0 <cstr_core::ascii::escape_default>
  28:	e7ff      	b.n	2a <<cstr_core::CStr as core::fmt::Debug>::fmt::{{closure}}+0x2a>
  2a:	b006      	add	sp, #24
  2c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17hd490ba1ccf20bf11E:

00000000 <<&cstr_core::CStr as core::default::Default>::default>:
_ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17hd490ba1ccf20bf11E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:683
}

impl<'a> Default for &'a CStr {
    fn default() -> &'a CStr {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:685
        const SLICE: &'static [c_char] = &[0];
        unsafe { CStr::from_ptr(SLICE.as_ptr()) }
   4:	f240 0000 	movw	r0, #0
   8:	f2c0 0000 	movt	r0, #0
   c:	2101      	movs	r1, #1
   e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  12:	9003      	str	r0, [sp, #12]
  14:	e7ff      	b.n	16 <<&cstr_core::CStr as core::default::Default>::default+0x16>
  16:	9803      	ldr	r0, [sp, #12]
  18:	f7ff fffe 	bl	0 <<&cstr_core::CStr as core::default::Default>::default>
  1c:	9002      	str	r0, [sp, #8]
  1e:	9101      	str	r1, [sp, #4]
  20:	e7ff      	b.n	22 <<&cstr_core::CStr as core::default::Default>::default+0x22>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:686
    }
  22:	9802      	ldr	r0, [sp, #8]
  24:	9901      	ldr	r1, [sp, #4]
  26:	b004      	add	sp, #16
  28:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h506675d69bb6084fE:

00000000 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt>:
_ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h506675d69bb6084fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:820
        write!(f, "nul byte found in provided data at position: {}", self.0)
    }
}

impl fmt::Display for FromBytesWithNulError {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
   0:	b580      	push	{r7, lr}
   2:	b0a6      	sub	sp, #152	; 0x98
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	900f      	str	r0, [sp, #60]	; 0x3c
   a:	9110      	str	r1, [sp, #64]	; 0x40
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:822
        match self.kind {
            FromBytesWithNulErrorKind::InteriorNul(..) => {
   c:	980f      	ldr	r0, [sp, #60]	; 0x3c
   e:	6800      	ldr	r0, [r0, #0]
  10:	2800      	cmp	r0, #0
  12:	920e      	str	r2, [sp, #56]	; 0x38
  14:	930d      	str	r3, [sp, #52]	; 0x34
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	d005      	beq.n	26 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x26>
  1a:	e7ff      	b.n	1c <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x1c>
  1c:	980c      	ldr	r0, [sp, #48]	; 0x30
  1e:	2801      	cmp	r0, #1
  20:	d02c      	beq.n	7c <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x7c>
  22:	e7ff      	b.n	24 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x24>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:833
        }
        if let FromBytesWithNulErrorKind::InteriorNul(pos) = self.kind {
            write!(f, " at byte pos {}", pos)?;
        }
        Ok(())
    }
  24:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:823
                f.write_str("data provided contains an interior nul byte")?
  26:	9810      	ldr	r0, [sp, #64]	; 0x40
  28:	f240 0100 	movw	r1, #0
  2c:	f2c0 0100 	movt	r1, #0
  30:	222b      	movs	r2, #43	; 0x2b
  32:	f7ff fffe 	bl	0 <core::fmt::Formatter::write_str>
  36:	900b      	str	r0, [sp, #44]	; 0x2c
  38:	e7ff      	b.n	3a <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x3a>
  3a:	980b      	ldr	r0, [sp, #44]	; 0x2c
  3c:	f000 0001 	and.w	r0, r0, #1
  40:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
  44:	f88d 004b 	strb.w	r0, [sp, #75]	; 0x4b
  48:	e7ff      	b.n	4a <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x4a>
  4a:	f89d 004b 	ldrb.w	r0, [sp, #75]	; 0x4b
  4e:	07c1      	lsls	r1, r0, #31
  50:	2900      	cmp	r1, #0
  52:	900a      	str	r0, [sp, #40]	; 0x28
  54:	d011      	beq.n	7a <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x7a>
  56:	e7ff      	b.n	58 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x58>
  58:	980a      	ldr	r0, [sp, #40]	; 0x28
  5a:	2801      	cmp	r0, #1
  5c:	d1e2      	bne.n	24 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x24>
  5e:	e7ff      	b.n	60 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x60>
  60:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
  64:	e7ff      	b.n	2 <<core::result::Result<T,E> as core::ops::try::Try>::from_error+0x2>
  66:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
  6a:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
  6e:	e7ff      	b.n	70 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x70>
  70:	e7ff      	b.n	72 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x72>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:833
    }
  72:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
  76:	b026      	add	sp, #152	; 0x98
  78:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:821
        match self.kind {
  7a:	e026      	b.n	ca <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0xca>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:826
                f.write_str("data provided is not nul terminated")?
  7c:	9810      	ldr	r0, [sp, #64]	; 0x40
  7e:	f240 0100 	movw	r1, #0
  82:	f2c0 0100 	movt	r1, #0
  86:	2223      	movs	r2, #35	; 0x23
  88:	f7ff fffe 	bl	0 <core::fmt::Formatter::write_str>
  8c:	9009      	str	r0, [sp, #36]	; 0x24
  8e:	e7ff      	b.n	90 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x90>
  90:	9809      	ldr	r0, [sp, #36]	; 0x24
  92:	f000 0001 	and.w	r0, r0, #1
  96:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
  9a:	f88d 0053 	strb.w	r0, [sp, #83]	; 0x53
  9e:	e7ff      	b.n	a0 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0xa0>
  a0:	f89d 0053 	ldrb.w	r0, [sp, #83]	; 0x53
  a4:	07c1      	lsls	r1, r0, #31
  a6:	2900      	cmp	r1, #0
  a8:	9008      	str	r0, [sp, #32]
  aa:	d00d      	beq.n	c8 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0xc8>
  ac:	e7ff      	b.n	ae <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0xae>
  ae:	9808      	ldr	r0, [sp, #32]
  b0:	2801      	cmp	r0, #1
  b2:	d1b7      	bne.n	24 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x24>
  b4:	e7ff      	b.n	b6 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0xb6>
  b6:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
  ba:	e7ff      	b.n	2 <<core::result::Result<T,E> as core::ops::try::Try>::from_error+0x2>
  bc:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
  c0:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
  c4:	e7ff      	b.n	c6 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0xc6>
  c6:	e7d4      	b.n	72 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x72>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:821
        match self.kind {
  c8:	e7ff      	b.n	ca <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0xca>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:829
        if let FromBytesWithNulErrorKind::InteriorNul(pos) = self.kind {
  ca:	980f      	ldr	r0, [sp, #60]	; 0x3c
  cc:	6800      	ldr	r0, [r0, #0]
  ce:	2800      	cmp	r0, #0
  d0:	d14c      	bne.n	16c <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x16c>
  d2:	e7ff      	b.n	d4 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0xd4>
  d4:	980f      	ldr	r0, [sp, #60]	; 0x3c
  d6:	6840      	ldr	r0, [r0, #4]
  d8:	9017      	str	r0, [sp, #92]	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:830
            write!(f, " at byte pos {}", pos)?;
  da:	9810      	ldr	r0, [sp, #64]	; 0x40
  dc:	a917      	add	r1, sp, #92	; 0x5c
  de:	9121      	str	r1, [sp, #132]	; 0x84
  e0:	9921      	ldr	r1, [sp, #132]	; 0x84
  e2:	9122      	str	r1, [sp, #136]	; 0x88
  e4:	9922      	ldr	r1, [sp, #136]	; 0x88
  e6:	f240 0200 	movw	r2, #0
  ea:	f2c0 0200 	movt	r2, #0
  ee:	9007      	str	r0, [sp, #28]
  f0:	4608      	mov	r0, r1
  f2:	4611      	mov	r1, r2
  f4:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  f8:	9006      	str	r0, [sp, #24]
  fa:	9105      	str	r1, [sp, #20]
  fc:	e7ff      	b.n	fe <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0xfe>
  fe:	9806      	ldr	r0, [sp, #24]
 100:	901f      	str	r0, [sp, #124]	; 0x7c
 102:	9905      	ldr	r1, [sp, #20]
 104:	9120      	str	r1, [sp, #128]	; 0x80
 106:	466a      	mov	r2, sp
 108:	2301      	movs	r3, #1
 10a:	6013      	str	r3, [r2, #0]
 10c:	f240 0100 	movw	r1, #0
 110:	f2c0 0100 	movt	r1, #0
 114:	a819      	add	r0, sp, #100	; 0x64
 116:	aa1f      	add	r2, sp, #124	; 0x7c
 118:	9204      	str	r2, [sp, #16]
 11a:	461a      	mov	r2, r3
 11c:	9b04      	ldr	r3, [sp, #16]
 11e:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 122:	e7ff      	b.n	124 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x124>
 124:	a919      	add	r1, sp, #100	; 0x64
 126:	9807      	ldr	r0, [sp, #28]
 128:	f7ff fffe 	bl	0 <core::fmt::Formatter::write_fmt>
 12c:	9003      	str	r0, [sp, #12]
 12e:	e7ff      	b.n	130 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x130>
 130:	9803      	ldr	r0, [sp, #12]
 132:	f000 0001 	and.w	r0, r0, #1
 136:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
 13a:	f88d 0063 	strb.w	r0, [sp, #99]	; 0x63
 13e:	e7ff      	b.n	140 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x140>
 140:	f89d 0063 	ldrb.w	r0, [sp, #99]	; 0x63
 144:	07c1      	lsls	r1, r0, #31
 146:	2900      	cmp	r1, #0
 148:	9002      	str	r0, [sp, #8]
 14a:	d00e      	beq.n	16a <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x16a>
 14c:	e7ff      	b.n	14e <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x14e>
 14e:	9802      	ldr	r0, [sp, #8]
 150:	2801      	cmp	r0, #1
 152:	f47f af67 	bne.w	24 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x24>
 156:	e7ff      	b.n	2 <<T as core::convert::From<T>>::from+0x2>
 158:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
 15c:	e7ff      	b.n	2 <<core::result::Result<T,E> as core::ops::try::Try>::from_error+0x2>
 15e:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
 162:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
 166:	e7ff      	b.n	168 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x168>
 168:	e783      	b.n	72 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x72>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:829
        if let FromBytesWithNulErrorKind::InteriorNul(pos) = self.kind {
 16a:	e7ff      	b.n	16c <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x16c>
 16c:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:832
        Ok(())
 16e:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:833
    }
 172:	e77e      	b.n	72 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x72>

Disassembly of section .text._ZN9cstr_core4CStr8from_ptr17hc008df96d18f5d87E:

00000000 <cstr_core::CStr::from_ptr>:
_ZN9cstr_core4CStr8from_ptr17hc008df96d18f5d87E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:895
    ///     let slice = CStr::from_ptr(my_string());
    ///     println!("string returned: {}", slice.to_str().unwrap());
    /// }
    /// # }
    /// ```
    pub unsafe fn from_ptr<'a>(ptr: *const c_char) -> &'a CStr {
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4601      	mov	r1, r0
   6:	9007      	str	r0, [sp, #28]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:896
        let len = strlen(ptr);
   8:	9807      	ldr	r0, [sp, #28]
   a:	9106      	str	r1, [sp, #24]
   c:	f7ff fffe 	bl	0 <cstr_core::CStr::from_ptr>
  10:	9008      	str	r0, [sp, #32]
  12:	e7ff      	b.n	14 <cstr_core::CStr::from_ptr+0x14>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:897
        let ptr = ptr as *const u8;
  14:	9807      	ldr	r0, [sp, #28]
  16:	9009      	str	r0, [sp, #36]	; 0x24
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:898
        CStr::from_bytes_with_nul_unchecked(slice::from_raw_parts(ptr, len as usize + 1))
  18:	9809      	ldr	r0, [sp, #36]	; 0x24
  1a:	9908      	ldr	r1, [sp, #32]
  1c:	1c4a      	adds	r2, r1, #1
  1e:	4613      	mov	r3, r2
  20:	428a      	cmp	r2, r1
  22:	9005      	str	r0, [sp, #20]
  24:	9304      	str	r3, [sp, #16]
  26:	d312      	bcc.n	4e <cstr_core::CStr::from_ptr+0x4e>
  28:	e7ff      	b.n	2a <cstr_core::CStr::from_ptr+0x2a>
  2a:	9805      	ldr	r0, [sp, #20]
  2c:	9904      	ldr	r1, [sp, #16]
  2e:	f7ff fffe 	bl	0 <core::slice::from_raw_parts>
  32:	9003      	str	r0, [sp, #12]
  34:	9102      	str	r1, [sp, #8]
  36:	e7ff      	b.n	38 <cstr_core::CStr::from_ptr+0x38>
  38:	9803      	ldr	r0, [sp, #12]
  3a:	9902      	ldr	r1, [sp, #8]
  3c:	f7ff fffe 	bl	0 <cstr_core::CStr::from_ptr>
  40:	9001      	str	r0, [sp, #4]
  42:	9100      	str	r1, [sp, #0]
  44:	e7ff      	b.n	46 <cstr_core::CStr::from_ptr+0x46>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:899
    }
  46:	9801      	ldr	r0, [sp, #4]
  48:	9900      	ldr	r1, [sp, #0]
  4a:	b00a      	add	sp, #40	; 0x28
  4c:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:898
        CStr::from_bytes_with_nul_unchecked(slice::from_raw_parts(ptr, len as usize + 1))
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f7ff fffe 	bl	0 <core::panicking::panic>
  5a:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN9cstr_core4CStr19from_bytes_with_nul17hb8e5d2bdd256b2ceE:

00000000 <cstr_core::CStr::from_bytes_with_nul>:
_ZN9cstr_core4CStr19from_bytes_with_nul17hb8e5d2bdd256b2ceE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:933
    /// use cstr_core::CStr;
    ///
    /// let c_str = CStr::from_bytes_with_nul(b"he\0llo\0");
    /// assert!(c_str.is_err());
    /// ```
    pub fn from_bytes_with_nul(bytes: &[u8]) -> Result<&CStr, FromBytesWithNulError> {
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	910b      	str	r1, [sp, #44]	; 0x2c
   a:	920c      	str	r2, [sp, #48]	; 0x30
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:934
        let nul_pos = memchr::memchr(0, bytes);
   c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  10:	f04f 0e00 	mov.w	lr, #0
  14:	900a      	str	r0, [sp, #40]	; 0x28
  16:	4670      	mov	r0, lr
  18:	9309      	str	r3, [sp, #36]	; 0x24
  1a:	f8cd c020 	str.w	ip, [sp, #32]
  1e:	f7ff fffe 	bl	0 <memchr::memchr>
  22:	910e      	str	r1, [sp, #56]	; 0x38
  24:	900d      	str	r0, [sp, #52]	; 0x34
  26:	e7ff      	b.n	28 <cstr_core::CStr::from_bytes_with_nul+0x28>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:935
        if let Some(nul_pos) = nul_pos {
  28:	980d      	ldr	r0, [sp, #52]	; 0x34
  2a:	2801      	cmp	r0, #1
  2c:	d133      	bne.n	96 <cstr_core::CStr::from_bytes_with_nul+0x96>
  2e:	e7ff      	b.n	30 <cstr_core::CStr::from_bytes_with_nul+0x30>
  30:	980e      	ldr	r0, [sp, #56]	; 0x38
  32:	900f      	str	r0, [sp, #60]	; 0x3c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:936
            if nul_pos + 1 != bytes.len() {
  34:	980f      	ldr	r0, [sp, #60]	; 0x3c
  36:	1c41      	adds	r1, r0, #1
  38:	460a      	mov	r2, r1
  3a:	4281      	cmp	r1, r0
  3c:	9207      	str	r2, [sp, #28]
  3e:	d338      	bcc.n	b2 <cstr_core::CStr::from_bytes_with_nul+0xb2>
  40:	e7ff      	b.n	42 <cstr_core::CStr::from_bytes_with_nul+0x42>
  42:	980b      	ldr	r0, [sp, #44]	; 0x2c
  44:	990c      	ldr	r1, [sp, #48]	; 0x30
  46:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  4a:	9006      	str	r0, [sp, #24]
  4c:	e7ff      	b.n	4e <cstr_core::CStr::from_bytes_with_nul+0x4e>
  4e:	9807      	ldr	r0, [sp, #28]
  50:	9906      	ldr	r1, [sp, #24]
  52:	4288      	cmp	r0, r1
  54:	d010      	beq.n	78 <cstr_core::CStr::from_bytes_with_nul+0x78>
  56:	e7ff      	b.n	58 <cstr_core::CStr::from_bytes_with_nul+0x58>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:937
                return Err(FromBytesWithNulError::interior_nul(nul_pos));
  58:	980f      	ldr	r0, [sp, #60]	; 0x3c
  5a:	f7ff fffe 	bl	0 <cstr_core::CStr::from_bytes_with_nul>
  5e:	9005      	str	r0, [sp, #20]
  60:	9104      	str	r1, [sp, #16]
  62:	e7ff      	b.n	64 <cstr_core::CStr::from_bytes_with_nul+0x64>
  64:	9805      	ldr	r0, [sp, #20]
  66:	990a      	ldr	r1, [sp, #40]	; 0x28
  68:	6048      	str	r0, [r1, #4]
  6a:	9a04      	ldr	r2, [sp, #16]
  6c:	608a      	str	r2, [r1, #8]
  6e:	2301      	movs	r3, #1
  70:	600b      	str	r3, [r1, #0]
  72:	e7ff      	b.n	74 <cstr_core::CStr::from_bytes_with_nul+0x74>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:943
            }
            Ok(unsafe { CStr::from_bytes_with_nul_unchecked(bytes) })
        } else {
            Err(FromBytesWithNulError::not_nul_terminated())
        }
    }
  74:	b010      	add	sp, #64	; 0x40
  76:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:939
            Ok(unsafe { CStr::from_bytes_with_nul_unchecked(bytes) })
  78:	980b      	ldr	r0, [sp, #44]	; 0x2c
  7a:	990c      	ldr	r1, [sp, #48]	; 0x30
  7c:	f7ff fffe 	bl	0 <cstr_core::CStr::from_bytes_with_nul>
  80:	9003      	str	r0, [sp, #12]
  82:	9102      	str	r1, [sp, #8]
  84:	e7ff      	b.n	86 <cstr_core::CStr::from_bytes_with_nul+0x86>
  86:	9803      	ldr	r0, [sp, #12]
  88:	990a      	ldr	r1, [sp, #40]	; 0x28
  8a:	6048      	str	r0, [r1, #4]
  8c:	9a02      	ldr	r2, [sp, #8]
  8e:	608a      	str	r2, [r1, #8]
  90:	2300      	movs	r3, #0
  92:	600b      	str	r3, [r1, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:935
        if let Some(nul_pos) = nul_pos {
  94:	e00c      	b.n	b0 <cstr_core::CStr::from_bytes_with_nul+0xb0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:941
            Err(FromBytesWithNulError::not_nul_terminated())
  96:	f7ff fffe 	bl	0 <cstr_core::CStr::from_bytes_with_nul>
  9a:	9001      	str	r0, [sp, #4]
  9c:	9100      	str	r1, [sp, #0]
  9e:	e7ff      	b.n	a0 <cstr_core::CStr::from_bytes_with_nul+0xa0>
  a0:	9801      	ldr	r0, [sp, #4]
  a2:	990a      	ldr	r1, [sp, #40]	; 0x28
  a4:	6048      	str	r0, [r1, #4]
  a6:	9a00      	ldr	r2, [sp, #0]
  a8:	608a      	str	r2, [r1, #8]
  aa:	2301      	movs	r3, #1
  ac:	600b      	str	r3, [r1, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:935
        if let Some(nul_pos) = nul_pos {
  ae:	e7ff      	b.n	b0 <cstr_core::CStr::from_bytes_with_nul+0xb0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:943
    }
  b0:	e7e0      	b.n	74 <cstr_core::CStr::from_bytes_with_nul+0x74>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:936
            if nul_pos + 1 != bytes.len() {
  b2:	f240 0000 	movw	r0, #0
  b6:	f2c0 0000 	movt	r0, #0
  ba:	f7ff fffe 	bl	0 <core::panicking::panic>
  be:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN9cstr_core4CStr29from_bytes_with_nul_unchecked17hbeb6cf99a4f11165E:

00000000 <cstr_core::CStr::from_bytes_with_nul_unchecked>:
_ZN9cstr_core4CStr29from_bytes_with_nul_unchecked17hbeb6cf99a4f11165E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:963
    ///     let cstr = CStr::from_bytes_with_nul_unchecked(cstring.to_bytes_with_nul());
    ///     assert_eq!(cstr, &*cstring);
    /// }
    /// ```
    #[inline]
    pub unsafe fn from_bytes_with_nul_unchecked(bytes: &[u8]) -> &CStr {
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:964
        &*(bytes as *const [u8] as *const CStr)
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:965
    }
   e:	9201      	str	r2, [sp, #4]
  10:	9300      	str	r3, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN9cstr_core4CStr8to_bytes17h7e806a88704ec7abE:

00000000 <cstr_core::CStr::to_bytes>:
_ZN9cstr_core4CStr8to_bytes17h7e806a88704ec7abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1031
    ///
    /// let c_str = CStr::from_bytes_with_nul(b"foo\0").unwrap();
    /// assert_eq!(c_str.to_bytes(), b"foo");
    /// ```
    #[inline]
    pub fn to_bytes(&self) -> &[u8] {
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9009      	str	r0, [sp, #36]	; 0x24
   a:	910a      	str	r1, [sp, #40]	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1032
        let bytes = self.to_bytes_with_nul();
   c:	9809      	ldr	r0, [sp, #36]	; 0x24
   e:	990a      	ldr	r1, [sp, #40]	; 0x28
  10:	9208      	str	r2, [sp, #32]
  12:	9307      	str	r3, [sp, #28]
  14:	f7ff fffe 	bl	0 <cstr_core::CStr::to_bytes>
  18:	910c      	str	r1, [sp, #48]	; 0x30
  1a:	900b      	str	r0, [sp, #44]	; 0x2c
  1c:	e7ff      	b.n	1e <cstr_core::CStr::to_bytes+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
        &bytes[..bytes.len() - 1]
  1e:	980b      	ldr	r0, [sp, #44]	; 0x2c
  20:	990c      	ldr	r1, [sp, #48]	; 0x30
  22:	9006      	str	r0, [sp, #24]
  24:	9105      	str	r1, [sp, #20]
  26:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  2a:	9004      	str	r0, [sp, #16]
  2c:	e7ff      	b.n	2e <cstr_core::CStr::to_bytes+0x2e>
  2e:	9804      	ldr	r0, [sp, #16]
  30:	1e41      	subs	r1, r0, #1
  32:	2801      	cmp	r0, #1
  34:	9103      	str	r1, [sp, #12]
  36:	d30e      	bcc.n	56 <cstr_core::CStr::to_bytes+0x56>
  38:	e7ff      	b.n	3a <cstr_core::CStr::to_bytes+0x3a>
  3a:	9803      	ldr	r0, [sp, #12]
  3c:	900d      	str	r0, [sp, #52]	; 0x34
  3e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40:	9806      	ldr	r0, [sp, #24]
  42:	9905      	ldr	r1, [sp, #20]
  44:	f7ff fffe 	bl	0 <core::slice::<impl core::ops::index::Index<I> for [T]>::index>
  48:	9002      	str	r0, [sp, #8]
  4a:	9101      	str	r1, [sp, #4]
  4c:	e7ff      	b.n	4e <cstr_core::CStr::to_bytes+0x4e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1034
    }
  4e:	9802      	ldr	r0, [sp, #8]
  50:	9901      	ldr	r1, [sp, #4]
  52:	b00e      	add	sp, #56	; 0x38
  54:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
        &bytes[..bytes.len() - 1]
  56:	f240 0000 	movw	r0, #0
  5a:	f2c0 0000 	movt	r0, #0
  5e:	f7ff fffe 	bl	0 <core::panicking::panic>
  62:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN9cstr_core4CStr17to_bytes_with_nul17hd9e7dbbe7067e67eE:

00000000 <cstr_core::CStr::to_bytes_with_nul>:
_ZN9cstr_core4CStr17to_bytes_with_nul17hd9e7dbbe7067e67eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1056
    ///
    /// let c_str = CStr::from_bytes_with_nul(b"foo\0").unwrap();
    /// assert_eq!(c_str.to_bytes_with_nul(), b"foo\0");
    /// ```
    #[inline]
    pub fn to_bytes_with_nul(&self) -> &[u8] {
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1057
        unsafe { &*(&self.inner as *const [c_char] as *const [u8]) }
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1058
    }
   e:	9201      	str	r2, [sp, #4]
  10:	9300      	str	r3, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN9cstr_core4CStr6to_str17h91fd1ecf6105ad70E:

00000000 <cstr_core::CStr::to_str>:
_ZN9cstr_core4CStr6to_str17h91fd1ecf6105ad70E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1080
    /// use cstr_core::CStr;
    ///
    /// let c_str = CStr::from_bytes_with_nul(b"foo\0").unwrap();
    /// assert_eq!(c_str.to_str(), Ok("foo"));
    /// ```
    pub fn to_str(&self) -> Result<&str, Utf8Error> {
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	9106      	str	r1, [sp, #24]
   a:	9207      	str	r2, [sp, #28]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1085
        // NB: When CStr is changed to perform the length check in .to_bytes()
        // instead of in from_ptr(), it may be worth considering if this should
        // be rewritten to do the UTF-8 check inline with the length calculation
        // instead of doing it afterwards.
        str::from_utf8(self.to_bytes())
   c:	9906      	ldr	r1, [sp, #24]
   e:	9a07      	ldr	r2, [sp, #28]
  10:	9005      	str	r0, [sp, #20]
  12:	4608      	mov	r0, r1
  14:	4611      	mov	r1, r2
  16:	9304      	str	r3, [sp, #16]
  18:	f8cd c00c 	str.w	ip, [sp, #12]
  1c:	f7ff fffe 	bl	0 <cstr_core::CStr::to_str>
  20:	9002      	str	r0, [sp, #8]
  22:	9101      	str	r1, [sp, #4]
  24:	e7ff      	b.n	26 <cstr_core::CStr::to_str+0x26>
  26:	9805      	ldr	r0, [sp, #20]
  28:	9902      	ldr	r1, [sp, #8]
  2a:	9a01      	ldr	r2, [sp, #4]
  2c:	f7ff fffe 	bl	0 <core::str::from_utf8>
  30:	e7ff      	b.n	32 <cstr_core::CStr::to_str+0x32>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1086
    }
  32:	b008      	add	sp, #32
  34:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h42d26c200588aef6E:

00000000 <<cstr_core::CStr as core::cmp::PartialEq>::eq>:
_ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h42d26c200588aef6E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1156
        }
    }
}

impl PartialEq for CStr {
    fn eq(&self, other: &CStr) -> bool {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	900a      	str	r0, [sp, #40]	; 0x28
   e:	910b      	str	r1, [sp, #44]	; 0x2c
  10:	920c      	str	r2, [sp, #48]	; 0x30
  12:	930d      	str	r3, [sp, #52]	; 0x34
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1157
        self.to_bytes().eq(other.to_bytes())
  14:	980a      	ldr	r0, [sp, #40]	; 0x28
  16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  18:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  1c:	f8cd e020 	str.w	lr, [sp, #32]
  20:	9407      	str	r4, [sp, #28]
  22:	9506      	str	r5, [sp, #24]
  24:	f7ff fffe 	bl	0 <<cstr_core::CStr as core::cmp::PartialEq>::eq>
  28:	9005      	str	r0, [sp, #20]
  2a:	9104      	str	r1, [sp, #16]
  2c:	e7ff      	b.n	2e <<cstr_core::CStr as core::cmp::PartialEq>::eq+0x2e>
  2e:	980c      	ldr	r0, [sp, #48]	; 0x30
  30:	990d      	ldr	r1, [sp, #52]	; 0x34
  32:	f7ff fffe 	bl	0 <<cstr_core::CStr as core::cmp::PartialEq>::eq>
  36:	9003      	str	r0, [sp, #12]
  38:	9102      	str	r1, [sp, #8]
  3a:	e7ff      	b.n	3c <<cstr_core::CStr as core::cmp::PartialEq>::eq+0x3c>
  3c:	9805      	ldr	r0, [sp, #20]
  3e:	9904      	ldr	r1, [sp, #16]
  40:	9a03      	ldr	r2, [sp, #12]
  42:	9b02      	ldr	r3, [sp, #8]
  44:	f7ff fffe 	bl	0 <core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
  48:	9001      	str	r0, [sp, #4]
  4a:	e7ff      	b.n	4c <<cstr_core::CStr as core::cmp::PartialEq>::eq+0x4c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1158
    }
  4c:	9801      	ldr	r0, [sp, #4]
  4e:	f000 0001 	and.w	r0, r0, #1
  52:	b00e      	add	sp, #56	; 0x38
  54:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h8de1a82b071bb4ceE:

00000000 <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp>:
_ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h8de1a82b071bb4ceE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1162
}
impl Eq for CStr {}
impl PartialOrd for CStr {
    fn partial_cmp(&self, other: &CStr) -> Option<Ordering> {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9008      	str	r0, [sp, #32]
   e:	9109      	str	r1, [sp, #36]	; 0x24
  10:	920a      	str	r2, [sp, #40]	; 0x28
  12:	930b      	str	r3, [sp, #44]	; 0x2c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1163
        self.to_bytes().partial_cmp(&other.to_bytes())
  14:	9808      	ldr	r0, [sp, #32]
  16:	9909      	ldr	r1, [sp, #36]	; 0x24
  18:	f8cd c01c 	str.w	ip, [sp, #28]
  1c:	f8cd e018 	str.w	lr, [sp, #24]
  20:	9405      	str	r4, [sp, #20]
  22:	9504      	str	r5, [sp, #16]
  24:	f7ff fffe 	bl	0 <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp>
  28:	9003      	str	r0, [sp, #12]
  2a:	9102      	str	r1, [sp, #8]
  2c:	e7ff      	b.n	2e <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp+0x2e>
  2e:	980a      	ldr	r0, [sp, #40]	; 0x28
  30:	990b      	ldr	r1, [sp, #44]	; 0x2c
  32:	f7ff fffe 	bl	0 <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp>
  36:	910d      	str	r1, [sp, #52]	; 0x34
  38:	900c      	str	r0, [sp, #48]	; 0x30
  3a:	e7ff      	b.n	3c <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp+0x3c>
  3c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40:	9803      	ldr	r0, [sp, #12]
  42:	9902      	ldr	r1, [sp, #8]
  44:	f7ff fffe 	bl	0 <core::slice::<impl core::cmp::PartialOrd for [T]>::partial_cmp>
  48:	9001      	str	r0, [sp, #4]
  4a:	e7ff      	b.n	4c <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp+0x4c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1164
    }
  4c:	9801      	ldr	r0, [sp, #4]
  4e:	b00e      	add	sp, #56	; 0x38
  50:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h7b7a8404dbbca5c5E:

00000000 <<cstr_core::CStr as core::cmp::Ord>::cmp>:
_ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h7b7a8404dbbca5c5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1167
}
impl Ord for CStr {
    fn cmp(&self, other: &CStr) -> Ordering {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9008      	str	r0, [sp, #32]
   e:	9109      	str	r1, [sp, #36]	; 0x24
  10:	920a      	str	r2, [sp, #40]	; 0x28
  12:	930b      	str	r3, [sp, #44]	; 0x2c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1168
        self.to_bytes().cmp(&other.to_bytes())
  14:	9808      	ldr	r0, [sp, #32]
  16:	9909      	ldr	r1, [sp, #36]	; 0x24
  18:	f8cd c01c 	str.w	ip, [sp, #28]
  1c:	f8cd e018 	str.w	lr, [sp, #24]
  20:	9405      	str	r4, [sp, #20]
  22:	9504      	str	r5, [sp, #16]
  24:	f7ff fffe 	bl	0 <<cstr_core::CStr as core::cmp::Ord>::cmp>
  28:	9003      	str	r0, [sp, #12]
  2a:	9102      	str	r1, [sp, #8]
  2c:	e7ff      	b.n	2e <<cstr_core::CStr as core::cmp::Ord>::cmp+0x2e>
  2e:	980a      	ldr	r0, [sp, #40]	; 0x28
  30:	990b      	ldr	r1, [sp, #44]	; 0x2c
  32:	f7ff fffe 	bl	0 <<cstr_core::CStr as core::cmp::Ord>::cmp>
  36:	910d      	str	r1, [sp, #52]	; 0x34
  38:	900c      	str	r0, [sp, #48]	; 0x30
  3a:	e7ff      	b.n	3c <<cstr_core::CStr as core::cmp::Ord>::cmp+0x3c>
  3c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40:	9803      	ldr	r0, [sp, #12]
  42:	9902      	ldr	r1, [sp, #8]
  44:	f7ff fffe 	bl	0 <core::slice::<impl core::cmp::Ord for [T]>::cmp>
  48:	9001      	str	r0, [sp, #4]
  4a:	e7ff      	b.n	4c <<cstr_core::CStr as core::cmp::Ord>::cmp+0x4c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1169
    }
  4c:	9801      	ldr	r0, [sp, #4]
  4e:	b00e      	add	sp, #56	; 0x38
  50:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdd5cd8a5ff5484dcE:

00000000 <<cstr_core::FromBytesWithNulError as core::fmt::Debug>::fmt>:
_ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdd5cd8a5ff5484dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:320
#[derive(Clone, PartialEq, Eq, Debug)]
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:322
    kind: FromBytesWithNulErrorKind,
   c:	9806      	ldr	r0, [sp, #24]
   e:	9008      	str	r0, [sp, #32]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:320
#[derive(Clone, PartialEq, Eq, Debug)]
  10:	9907      	ldr	r1, [sp, #28]
  12:	f240 0000 	movw	r0, #0
  16:	f2c0 0000 	movt	r0, #0
  1a:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
  1e:	f04f 0e15 	mov.w	lr, #21
  22:	9005      	str	r0, [sp, #20]
  24:	4660      	mov	r0, ip
  26:	f8dd c014 	ldr.w	ip, [sp, #20]
  2a:	9204      	str	r2, [sp, #16]
  2c:	4662      	mov	r2, ip
  2e:	9303      	str	r3, [sp, #12]
  30:	4673      	mov	r3, lr
  32:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_struct>
  36:	e7ff      	b.n	38 <<cstr_core::FromBytesWithNulError as core::fmt::Debug>::fmt+0x38>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:322
    kind: FromBytesWithNulErrorKind,
  38:	9808      	ldr	r0, [sp, #32]
  3a:	900b      	str	r0, [sp, #44]	; 0x2c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:320
#[derive(Clone, PartialEq, Eq, Debug)]
  3c:	f240 0000 	movw	r0, #0
  40:	f2c0 0000 	movt	r0, #0
  44:	4669      	mov	r1, sp
  46:	6008      	str	r0, [r1, #0]
  48:	f240 0100 	movw	r1, #0
  4c:	f2c0 0100 	movt	r1, #0
  50:	a809      	add	r0, sp, #36	; 0x24
  52:	2204      	movs	r2, #4
  54:	ab0b      	add	r3, sp, #44	; 0x2c
  56:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::field>
  5a:	9002      	str	r0, [sp, #8]
  5c:	e7ff      	b.n	5e <<cstr_core::FromBytesWithNulError as core::fmt::Debug>::fmt+0x5e>
  5e:	a809      	add	r0, sp, #36	; 0x24
  60:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::finish>
  64:	9001      	str	r0, [sp, #4]
  66:	e7ff      	b.n	68 <<cstr_core::FromBytesWithNulError as core::fmt::Debug>::fmt+0x68>
  68:	9801      	ldr	r0, [sp, #4]
  6a:	f000 0001 	and.w	r0, r0, #1
  6e:	b00c      	add	sp, #48	; 0x30
  70:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h82aebe98e613e78fE:

00000000 <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt>:
_ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h82aebe98e613e78fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:325
#[derive(Clone, PartialEq, Eq, Debug)]
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	6800      	ldr	r0, [r0, #0]
  14:	2800      	cmp	r0, #0
  16:	9203      	str	r2, [sp, #12]
  18:	9302      	str	r3, [sp, #8]
  1a:	9001      	str	r0, [sp, #4]
  1c:	d005      	beq.n	2a <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x2a>
  1e:	e7ff      	b.n	20 <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x20>
  20:	9801      	ldr	r0, [sp, #4]
  22:	2801      	cmp	r0, #1
  24:	d021      	beq.n	6a <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x6a>
  26:	e7ff      	b.n	28 <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x28>
  28:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:327
    InteriorNul(usize),
  2a:	9807      	ldr	r0, [sp, #28]
  2c:	3004      	adds	r0, #4
  2e:	9008      	str	r0, [sp, #32]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:325
#[derive(Clone, PartialEq, Eq, Debug)]
  30:	9905      	ldr	r1, [sp, #20]
  32:	f240 0200 	movw	r2, #0
  36:	f2c0 0200 	movt	r2, #0
  3a:	a809      	add	r0, sp, #36	; 0x24
  3c:	230b      	movs	r3, #11
  3e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  42:	e7ff      	b.n	44 <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x44>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:327
    InteriorNul(usize),
  44:	9808      	ldr	r0, [sp, #32]
  46:	900c      	str	r0, [sp, #48]	; 0x30
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:325
#[derive(Clone, PartialEq, Eq, Debug)]
  48:	f240 0200 	movw	r2, #0
  4c:	f2c0 0200 	movt	r2, #0
  50:	a809      	add	r0, sp, #36	; 0x24
  52:	a90c      	add	r1, sp, #48	; 0x30
  54:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::field>
  58:	9000      	str	r0, [sp, #0]
  5a:	e7ff      	b.n	5c <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x5c>
  5c:	a809      	add	r0, sp, #36	; 0x24
  5e:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  62:	f88d 001b 	strb.w	r0, [sp, #27]
  66:	e7ff      	b.n	68 <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x68>
  68:	e010      	b.n	8c <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x8c>
  6a:	9905      	ldr	r1, [sp, #20]
  6c:	f240 0200 	movw	r2, #0
  70:	f2c0 0200 	movt	r2, #0
  74:	a80d      	add	r0, sp, #52	; 0x34
  76:	2310      	movs	r3, #16
  78:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  7c:	e7ff      	b.n	7e <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x7e>
  7e:	a80d      	add	r0, sp, #52	; 0x34
  80:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  84:	f88d 001b 	strb.w	r0, [sp, #27]
  88:	e7ff      	b.n	8a <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x8a>
  8a:	e7ff      	b.n	8c <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x8c>
  8c:	f89d 001b 	ldrb.w	r0, [sp, #27]
  90:	b010      	add	sp, #64	; 0x40
  92:	bd80      	pop	{r7, pc}

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.1.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.1
000006af l       .debug_str	00000000 
00000d70 l       .debug_str	00000000 
00000d6e l       .debug_str	00000000 
00000daa l       .debug_str	00000000 
00000d6c l       .debug_str	00000000 
00000da6 l       .debug_str	00000000 
00000d5f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000d38 l       .debug_str	00000000 
00000d95 l       .debug_str	00000000 
00000d2c l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d06 l       .debug_str	00000000 
00000d8b l       .debug_str	00000000 
00000cfd l       .debug_str	00000000 
00000d89 l       .debug_str	00000000 
00000cd7 l       .debug_str	00000000 
00000d87 l       .debug_str	00000000 
00000cd2 l       .debug_str	00000000 
00000d7c l       .debug_str	00000000 
00000cc6 l       .debug_str	00000000 
00000d7a l       .debug_str	00000000 
00000c7a l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
00000104 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
00000122 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
00000158 l       .debug_str	00000000 
00000192 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000254 l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
0000028a l       .debug_str	00000000 
000002e1 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0000036c l       .debug_str	00000000 
000003a3 l       .debug_str	00000000 
000003d4 l       .debug_str	00000000 
0000042d l       .debug_str	00000000 
0000043c l       .debug_str	00000000 
0000047f l       .debug_str	00000000 
000004c1 l       .debug_str	00000000 
00000512 l       .debug_str	00000000 
00000553 l       .debug_str	00000000 
0000058d l       .debug_str	00000000 
000005ed l       .debug_str	00000000 
0000066f l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
000006e9 l       .debug_str	00000000 
0000074b l       .debug_str	00000000 
00000751 l       .debug_str	00000000 
00000765 l       .debug_str	00000000 
00000778 l       .debug_str	00000000 
000007c4 l       .debug_str	00000000 
000007d2 l       .debug_str	00000000 
00000823 l       .debug_str	00000000 
00000835 l       .debug_str	00000000 
00000840 l       .debug_str	00000000 
00000871 l       .debug_str	00000000 
000008f3 l       .debug_str	00000000 
00000904 l       .debug_str	00000000 
0000090f l       .debug_str	00000000 
00000942 l       .debug_str	00000000 
00000994 l       .debug_str	00000000 
000009a7 l       .debug_str	00000000 
000009fa l       .debug_str	00000000 
00000a0c l       .debug_str	00000000 
00000a11 l       .debug_str	00000000 
00000a47 l       .debug_str	00000000 
00000a62 l       .debug_str	00000000 
00000a9c l       .debug_str	00000000 
00000abb l       .debug_str	00000000 
00000af7 l       .debug_str	00000000 
00000afa l       .debug_str	00000000 
00000b40 l       .debug_str	00000000 
00000b48 l       .debug_str	00000000 
00000b50 l       .debug_str	00000000 
00000b99 l       .debug_str	00000000 
00000ba4 l       .debug_str	00000000 
00000bf6 l       .debug_str	00000000 
00000c07 l       .debug_str	00000000 
00000c11 l       .debug_str	00000000 
00000d76 l       .debug_str	00000000 
00000000 l     F .text._ZN4core3ptr25swap_nonoverlapping_bytes17haea9561059c72327E	00000106 core::ptr::swap_nonoverlapping_bytes
00000000 l    d  .text._ZN4core3ptr19swap_nonoverlapping17h4352ecd5b7860646E	00000000 .text._ZN4core3ptr19swap_nonoverlapping17h4352ecd5b7860646E
00000000 l    d  .text._ZN4core3ptr23swap_nonoverlapping_one17h9a4b435a29b2077eE	00000000 .text._ZN4core3ptr23swap_nonoverlapping_one17h9a4b435a29b2077eE
00000000 l    d  .text._ZN4core3ptr25swap_nonoverlapping_bytes17haea9561059c72327E	00000000 .text._ZN4core3ptr25swap_nonoverlapping_bytes17haea9561059c72327E
00000000 l    d  .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h444475af15b7177dE	00000000 .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h444475af15b7177dE
00000000 l    d  .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8c3e9b63d0164ad4E	00000000 .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8c3e9b63d0164ad4E
00000000 l    d  .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h644d7c29f3959422E	00000000 .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h644d7c29f3959422E
00000000 l    d  .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17ha5b5a6d6228307f3E	00000000 .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17ha5b5a6d6228307f3E
00000000 l    d  .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7d5d72e646b2abd7E	00000000 .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7d5d72e646b2abd7E
00000000 l    d  .text._ZN4core3ptr4null17h94d8d37c80f6893dE	00000000 .text._ZN4core3ptr4null17h94d8d37c80f6893dE
00000000 l    d  .text._ZN4core3ptr4read17h3dc0ab1aea7723f2E	00000000 .text._ZN4core3ptr4read17h3dc0ab1aea7723f2E
00000000 l    d  .text._ZN4core3ptr5write17h4a809fc726334fe9E	00000000 .text._ZN4core3ptr5write17h4a809fc726334fe9E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::mem::size_of
00000000         *UND*	00000000 core::mem::size_of
00000000 g     F .text._ZN4core3ptr19swap_nonoverlapping17h4352ecd5b7860646E	00000042 core::ptr::swap_nonoverlapping
00000000 g     F .text._ZN4core3ptr23swap_nonoverlapping_one17h9a4b435a29b2077eE	00000054 core::ptr::swap_nonoverlapping_one
00000000 g     F .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h444475af15b7177dE	00000022 core::ptr::<impl *mut T>::add
00000000 g     F .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8c3e9b63d0164ad4E	00000022 core::ptr::<impl *mut T>::offset
00000000 g     F .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h644d7c29f3959422E	00000022 core::ptr::<impl *const T>::wrapping_add
00000000 g     F .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17ha5b5a6d6228307f3E	00000022 core::ptr::<impl *const T>::wrapping_offset
00000000 g     F .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7d5d72e646b2abd7E	00000026 core::ptr::<impl *const T>::is_null
00000000 g     F .text._ZN4core3ptr4null17h94d8d37c80f6893dE	00000004 core::ptr::null
00000000 g     F .text._ZN4core3ptr4read17h3dc0ab1aea7723f2E	00000042 core::ptr::read
00000000 g     F .text._ZN4core3ptr5write17h4a809fc726334fe9E	00000018 core::ptr::write



Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17h4352ecd5b7860646E:

00000000 <core::ptr::swap_nonoverlapping>:
_ZN4core3ptr19swap_nonoverlapping17h4352ecd5b7860646E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:351
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9004      	str	r0, [sp, #16]
   c:	9105      	str	r1, [sp, #20]
   e:	9206      	str	r2, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:352
  10:	9804      	ldr	r0, [sp, #16]
  12:	9007      	str	r0, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:353
  14:	9805      	ldr	r0, [sp, #20]
  16:	9008      	str	r0, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:354
  18:	9303      	str	r3, [sp, #12]
  1a:	f8cd c008 	str.w	ip, [sp, #8]
  1e:	f8cd e004 	str.w	lr, [sp, #4]
  22:	f7ff fffe 	bl	0 <core::mem::size_of>
  26:	9000      	str	r0, [sp, #0]
  28:	e7ff      	b.n	2a <core::ptr::swap_nonoverlapping+0x2a>
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9900      	ldr	r1, [sp, #0]
  2e:	4348      	muls	r0, r1
  30:	9009      	str	r0, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:355
  32:	9807      	ldr	r0, [sp, #28]
  34:	9908      	ldr	r1, [sp, #32]
  36:	9a09      	ldr	r2, [sp, #36]	; 0x24
  38:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping>
  3c:	e7ff      	b.n	3e <core::ptr::swap_nonoverlapping+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:356
  3e:	b00a      	add	sp, #40	; 0x28
  40:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17h9a4b435a29b2077eE:

00000000 <core::ptr::swap_nonoverlapping_one>:
_ZN4core3ptr23swap_nonoverlapping_one17h9a4b435a29b2077eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:359
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9003      	str	r0, [sp, #12]
   a:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:362
   c:	9202      	str	r2, [sp, #8]
   e:	9301      	str	r3, [sp, #4]
  10:	f7ff fffe 	bl	0 <core::mem::size_of>
  14:	9000      	str	r0, [sp, #0]
  16:	e7ff      	b.n	18 <core::ptr::swap_nonoverlapping_one+0x18>
  18:	9800      	ldr	r0, [sp, #0]
  1a:	281f      	cmp	r0, #31
  1c:	d811      	bhi.n	42 <core::ptr::swap_nonoverlapping_one+0x42>
  1e:	e7ff      	b.n	20 <core::ptr::swap_nonoverlapping_one+0x20>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:363
  20:	9803      	ldr	r0, [sp, #12]
  22:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  26:	9005      	str	r0, [sp, #20]
  28:	e7ff      	b.n	2a <core::ptr::swap_nonoverlapping_one+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:364
  2a:	9804      	ldr	r0, [sp, #16]
  2c:	9903      	ldr	r1, [sp, #12]
  2e:	2201      	movs	r2, #1
  30:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  34:	e7ff      	b.n	36 <core::ptr::swap_nonoverlapping_one+0x36>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:365
  36:	9804      	ldr	r0, [sp, #16]
  38:	9905      	ldr	r1, [sp, #20]
  3a:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  3e:	e7ff      	b.n	40 <core::ptr::swap_nonoverlapping_one+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:362
  40:	e006      	b.n	50 <core::ptr::swap_nonoverlapping_one+0x50>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:367
  42:	9803      	ldr	r0, [sp, #12]
  44:	9904      	ldr	r1, [sp, #16]
  46:	2201      	movs	r2, #1
  48:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  4c:	e7ff      	b.n	4e <core::ptr::swap_nonoverlapping_one+0x4e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:362
  4e:	e7ff      	b.n	50 <core::ptr::swap_nonoverlapping_one+0x50>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:369
  50:	b006      	add	sp, #24
  52:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr25swap_nonoverlapping_bytes17haea9561059c72327E:

00000000 <core::ptr::swap_nonoverlapping_bytes>:
_ZN4core3ptr25swap_nonoverlapping_bytes17haea9561059c72327E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:372
   0:	b5d0      	push	{r4, r6, r7, lr}
   2:	af02      	add	r7, sp, #8
   4:	b0ac      	sub	sp, #176	; 0xb0
   6:	466c      	mov	r4, sp
   8:	f36f 0404 	bfc	r4, #0, #5
   c:	46a5      	mov	sp, r4
   e:	4613      	mov	r3, r2
  10:	468c      	mov	ip, r1
  12:	4686      	mov	lr, r0
  14:	900b      	str	r0, [sp, #44]	; 0x2c
  16:	910c      	str	r1, [sp, #48]	; 0x30
  18:	920d      	str	r2, [sp, #52]	; 0x34
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:383
  1a:	930a      	str	r3, [sp, #40]	; 0x28
  1c:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  20:	f8cd e020 	str.w	lr, [sp, #32]
  24:	f7ff fffe 	bl	0 <core::mem::size_of>
  28:	900e      	str	r0, [sp, #56]	; 0x38
  2a:	e7ff      	b.n	2c <core::ptr::swap_nonoverlapping_bytes+0x2c>
  2c:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:388
  2e:	900f      	str	r0, [sp, #60]	; 0x3c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:389
  30:	e7ff      	b.n	32 <core::ptr::swap_nonoverlapping_bytes+0x32>
  32:	980f      	ldr	r0, [sp, #60]	; 0x3c
  34:	990e      	ldr	r1, [sp, #56]	; 0x38
  36:	4408      	add	r0, r1
  38:	990d      	ldr	r1, [sp, #52]	; 0x34
  3a:	4288      	cmp	r0, r1
  3c:	d905      	bls.n	4a <core::ptr::swap_nonoverlapping_bytes+0x4a>
  3e:	e7ff      	b.n	40 <core::ptr::swap_nonoverlapping_bytes+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:405
  40:	980f      	ldr	r0, [sp, #60]	; 0x3c
  42:	990d      	ldr	r1, [sp, #52]	; 0x34
  44:	4288      	cmp	r0, r1
  46:	d32d      	bcc.n	a4 <core::ptr::swap_nonoverlapping_bytes+0xa4>
  48:	e059      	b.n	fe <core::ptr::swap_nonoverlapping_bytes+0xfe>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:392
  4a:	e7ff      	b.n	4c <core::ptr::swap_nonoverlapping_bytes+0x4c>
  4c:	a810      	add	r0, sp, #64	; 0x40
  4e:	9028      	str	r0, [sp, #160]	; 0xa0
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h5fa447a0d97d6f73E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  50:	9828      	ldr	r0, [sp, #160]	; 0xa0
  52:	9029      	str	r0, [sp, #164]	; 0xa4
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h61ac549037cd23cbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  54:	9829      	ldr	r0, [sp, #164]	; 0xa4
_ZN4core3ptr25swap_nonoverlapping_bytes17haea9561059c72327E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:393
  56:	9007      	str	r0, [sp, #28]
  58:	e7ff      	b.n	5a <core::ptr::swap_nonoverlapping_bytes+0x5a>
  5a:	9807      	ldr	r0, [sp, #28]
  5c:	9019      	str	r0, [sp, #100]	; 0x64
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:394
  5e:	980b      	ldr	r0, [sp, #44]	; 0x2c
  60:	990f      	ldr	r1, [sp, #60]	; 0x3c
  62:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_bytes>
  66:	901a      	str	r0, [sp, #104]	; 0x68
  68:	e7ff      	b.n	6a <core::ptr::swap_nonoverlapping_bytes+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:395
  6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  6c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  6e:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_bytes>
  72:	901b      	str	r0, [sp, #108]	; 0x6c
  74:	e7ff      	b.n	76 <core::ptr::swap_nonoverlapping_bytes+0x76>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:399
  76:	981a      	ldr	r0, [sp, #104]	; 0x68
  78:	9919      	ldr	r1, [sp, #100]	; 0x64
  7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  7c:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  80:	e7ff      	b.n	82 <core::ptr::swap_nonoverlapping_bytes+0x82>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:400
  82:	981b      	ldr	r0, [sp, #108]	; 0x6c
  84:	991a      	ldr	r1, [sp, #104]	; 0x68
  86:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  88:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  8c:	e7ff      	b.n	8e <core::ptr::swap_nonoverlapping_bytes+0x8e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:401
  8e:	9819      	ldr	r0, [sp, #100]	; 0x64
  90:	991b      	ldr	r1, [sp, #108]	; 0x6c
  92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  94:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  98:	e7ff      	b.n	9a <core::ptr::swap_nonoverlapping_bytes+0x9a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:402
  9a:	980e      	ldr	r0, [sp, #56]	; 0x38
  9c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  9e:	4408      	add	r0, r1
  a0:	900f      	str	r0, [sp, #60]	; 0x3c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:389
  a2:	e7c6      	b.n	32 <core::ptr::swap_nonoverlapping_bytes+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:407
  a4:	e7ff      	b.n	a6 <core::ptr::swap_nonoverlapping_bytes+0xa6>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:408
  a6:	980d      	ldr	r0, [sp, #52]	; 0x34
  a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  aa:	1a40      	subs	r0, r0, r1
  ac:	9024      	str	r0, [sp, #144]	; 0x90
  ae:	a81c      	add	r0, sp, #112	; 0x70
  b0:	902a      	str	r0, [sp, #168]	; 0xa8
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hf793f603a1e32cc2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  b2:	982a      	ldr	r0, [sp, #168]	; 0xa8
  b4:	902b      	str	r0, [sp, #172]	; 0xac
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hd71a90efa0a5acceE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  b6:	982b      	ldr	r0, [sp, #172]	; 0xac
_ZN4core3ptr25swap_nonoverlapping_bytes17haea9561059c72327E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:410
  b8:	9006      	str	r0, [sp, #24]
  ba:	e7ff      	b.n	bc <core::ptr::swap_nonoverlapping_bytes+0xbc>
  bc:	9806      	ldr	r0, [sp, #24]
  be:	9025      	str	r0, [sp, #148]	; 0x94
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:411
  c0:	980b      	ldr	r0, [sp, #44]	; 0x2c
  c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  c4:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_bytes>
  c8:	9026      	str	r0, [sp, #152]	; 0x98
  ca:	e7ff      	b.n	cc <core::ptr::swap_nonoverlapping_bytes+0xcc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:412
  cc:	980c      	ldr	r0, [sp, #48]	; 0x30
  ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
  d0:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_bytes>
  d4:	9027      	str	r0, [sp, #156]	; 0x9c
  d6:	e7ff      	b.n	d8 <core::ptr::swap_nonoverlapping_bytes+0xd8>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:414
  d8:	9826      	ldr	r0, [sp, #152]	; 0x98
  da:	9925      	ldr	r1, [sp, #148]	; 0x94
  dc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  de:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  e2:	e7ff      	b.n	e4 <core::ptr::swap_nonoverlapping_bytes+0xe4>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:415
  e4:	9827      	ldr	r0, [sp, #156]	; 0x9c
  e6:	9926      	ldr	r1, [sp, #152]	; 0x98
  e8:	9a24      	ldr	r2, [sp, #144]	; 0x90
  ea:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  ee:	e7ff      	b.n	f0 <core::ptr::swap_nonoverlapping_bytes+0xf0>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:416
  f0:	9825      	ldr	r0, [sp, #148]	; 0x94
  f2:	9927      	ldr	r1, [sp, #156]	; 0x9c
  f4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  f6:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  fa:	e7ff      	b.n	fc <core::ptr::swap_nonoverlapping_bytes+0xfc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:405
  fc:	e7ff      	b.n	fe <core::ptr::swap_nonoverlapping_bytes+0xfe>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:418
  fe:	f1a7 0408 	sub.w	r4, r7, #8
 102:	46a5      	mov	sp, r4
 104:	bdd0      	pop	{r4, r6, r7, pc}

Disassembly of section .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h444475af15b7177dE:

00000000 <core::ptr::<impl *mut T>::add>:
_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h444475af15b7177dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1940
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1943
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::add>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <core::ptr::<impl *mut T>::add+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1944
  1c:	9801      	ldr	r0, [sp, #4]
  1e:	b006      	add	sp, #24
  20:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8c3e9b63d0164ad4E:

00000000 <core::ptr::<impl *mut T>::offset>:
_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8c3e9b63d0164ad4E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1704
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1705
   a:	9803      	ldr	r0, [sp, #12]
   c:	9904      	ldr	r1, [sp, #16]
   e:	4408      	add	r0, r1
  10:	9005      	str	r0, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
  14:	9202      	str	r2, [sp, #8]
  16:	9301      	str	r3, [sp, #4]
  18:	9000      	str	r0, [sp, #0]
  1a:	e7ff      	b.n	1c <core::ptr::<impl *mut T>::offset+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1706
  1c:	9800      	ldr	r0, [sp, #0]
  1e:	b006      	add	sp, #24
  20:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h644d7c29f3959422E:

00000000 <core::ptr::<impl *const T>::wrapping_add>:
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h644d7c29f3959422E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1394
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1397
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::wrapping_add>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <core::ptr::<impl *const T>::wrapping_add+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1398
  1c:	9801      	ldr	r0, [sp, #4]
  1e:	b006      	add	sp, #24
  20:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17ha5b5a6d6228307f3E:

00000000 <core::ptr::<impl *const T>::wrapping_offset>:
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17ha5b5a6d6228307f3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1122
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1124
   a:	9803      	ldr	r0, [sp, #12]
   c:	9904      	ldr	r1, [sp, #16]
   e:	4408      	add	r0, r1
  10:	9005      	str	r0, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
  14:	9202      	str	r2, [sp, #8]
  16:	9301      	str	r3, [sp, #4]
  18:	9000      	str	r0, [sp, #0]
  1a:	e7ff      	b.n	1c <core::ptr::<impl *const T>::wrapping_offset+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1126
  1c:	9800      	ldr	r0, [sp, #0]
  1e:	b006      	add	sp, #24
  20:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7d5d72e646b2abd7E:

00000000 <core::ptr::<impl *const T>::is_null>:
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7d5d72e646b2abd7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:964
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:967
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::is_null>
  12:	9000      	str	r0, [sp, #0]
  14:	e7ff      	b.n	16 <core::ptr::<impl *const T>::is_null+0x16>
  16:	9801      	ldr	r0, [sp, #4]
  18:	9900      	ldr	r1, [sp, #0]
  1a:	1a42      	subs	r2, r0, r1
  1c:	fab2 f282 	clz	r2, r2
  20:	0950      	lsrs	r0, r2, #5
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:968
  22:	b004      	add	sp, #16
  24:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr4null17h94d8d37c80f6893dE:

00000000 <core::ptr::null>:
_ZN4core3ptr4null17h94d8d37c80f6893dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:216
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr4read17h3dc0ab1aea7723f2E:

00000000 <core::ptr::read>:
_ZN4core3ptr4read17h3dc0ab1aea7723f2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:574
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9005      	str	r0, [sp, #20]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h326f3fc998948eb0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:237
   8:	9807      	ldr	r0, [sp, #28]
_ZN4core3ptr4read17h3dc0ab1aea7723f2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:575
   a:	9006      	str	r0, [sp, #24]
   c:	9104      	str	r1, [sp, #16]
   e:	e7ff      	b.n	10 <core::ptr::read+0x10>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  10:	9805      	ldr	r0, [sp, #20]
  12:	a906      	add	r1, sp, #24
  14:	910a      	str	r1, [sp, #40]	; 0x28
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hfceef60e2486e9e7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  16:	990a      	ldr	r1, [sp, #40]	; 0x28
  18:	910b      	str	r1, [sp, #44]	; 0x2c
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h8251c14a25d6745eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
_ZN4core3ptr4read17h3dc0ab1aea7723f2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  1c:	9003      	str	r0, [sp, #12]
  1e:	9102      	str	r1, [sp, #8]
  20:	e7ff      	b.n	22 <core::ptr::read+0x22>
  22:	2201      	movs	r2, #1
  24:	9803      	ldr	r0, [sp, #12]
  26:	9902      	ldr	r1, [sp, #8]
  28:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  2c:	e7ff      	b.n	2e <core::ptr::read+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  2e:	9806      	ldr	r0, [sp, #24]
  30:	9008      	str	r0, [sp, #32]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17he8949b6bae579050E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:410
  32:	9808      	ldr	r0, [sp, #32]
  34:	9009      	str	r0, [sp, #36]	; 0x24
_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb7adefce2624c833E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:85
  36:	9809      	ldr	r0, [sp, #36]	; 0x24
_ZN4core3ptr4read17h3dc0ab1aea7723f2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  38:	9001      	str	r0, [sp, #4]
  3a:	e7ff      	b.n	3c <core::ptr::read+0x3c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:578
  3c:	9801      	ldr	r0, [sp, #4]
  3e:	b00c      	add	sp, #48	; 0x30
  40:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr5write17h4a809fc726334fe9E:

00000000 <core::ptr::write>:
_ZN4core3ptr5write17h4a809fc726334fe9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:735
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:736
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	6001      	str	r1, [r0, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:737
  10:	9201      	str	r2, [sp, #4]
  12:	9300      	str	r3, [sp, #0]
  14:	b004      	add	sp, #16
  16:	4770      	bx	lr

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.10.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.10
00000247 l       .debug_str	00000000 
0000057c l       .debug_str	00000000 
000005d9 l       .debug_str	00000000 
0000057a l       .debug_str	00000000 
00000585 l       .debug_str	00000000 
00000563 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
00000107 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000111 l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011c l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
00000177 l       .debug_str	00000000 
0000017e l       .debug_str	00000000 
00000184 l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001b0 l       .debug_str	00000000 
000001b2 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d0 l       .debug_str	00000000 
000001e1 l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001f1 l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
000001fa l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
0000020b l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
00000217 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000220 l       .debug_str	00000000 
0000022e l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
0000023c l       .debug_str	00000000 
00000512 l       .debug_str	00000000 
0000024e l       .debug_str	00000000 
00000254 l       .debug_str	00000000 
00000258 l       .debug_str	00000000 
00000275 l       .debug_str	00000000 
00000279 l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
000002bc l       .debug_str	00000000 
000002d8 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e6 l       .debug_str	00000000 
000002ed l       .debug_str	00000000 
00000306 l       .debug_str	00000000 
00000310 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
00000393 l       .debug_str	00000000 
0000039a l       .debug_str	00000000 
000003a4 l       .debug_str	00000000 
000003a9 l       .debug_str	00000000 
000003b5 l       .debug_str	00000000 
000003bd l       .debug_str	00000000 
000003c6 l       .debug_str	00000000 
000003cb l       .debug_str	00000000 
000003ce l       .debug_str	00000000 
000003d7 l       .debug_str	00000000 
000003de l       .debug_str	00000000 
000003e1 l       .debug_str	00000000 
000003e7 l       .debug_str	00000000 
000003f1 l       .debug_str	00000000 
000003f9 l       .debug_str	00000000 
000003ff l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
00000413 l       .debug_str	00000000 
00000436 l       .debug_str	00000000 
00000455 l       .debug_str	00000000 
0000047c l       .debug_str	00000000 
00000486 l       .debug_str	00000000 
0000048e l       .debug_str	00000000 
00000497 l       .debug_str	00000000 
000004c8 l       .debug_str	00000000 
000004d3 l       .debug_str	00000000 
00000505 l       .debug_str	00000000 
0000050c l       .debug_str	00000000 
00000583 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17h6ea763c643c2b6e0E	00000000 .text._ZN4core3fmt10ArgumentV13new17h6ea763c643c2b6e0E
00000000 l    d  .text._ZN4core3fmt9Arguments6new_v117h14e48a239fcc59a5E	00000000 .text._ZN4core3fmt9Arguments6new_v117h14e48a239fcc59a5E
00000000 l    d  .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbc76c690140a635fE	00000000 .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbc76c690140a635fE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17h6ea763c643c2b6e0E	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt9Arguments6new_v117h14e48a239fcc59a5E	0000004c .hidden core::fmt::Arguments::new_v1
00000000 g     F .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbc76c690140a635fE	00000006 <T as core::convert::From<T>>::from



Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h6ea763c643c2b6e0E:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17h6ea763c643c2b6e0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt9Arguments6new_v117h14e48a239fcc59a5E:

00000000 <core::fmt::Arguments::new_v1>:
_ZN4core3fmt9Arguments6new_v117h14e48a239fcc59a5E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:314
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	9104      	str	r1, [sp, #16]
  12:	9205      	str	r2, [sp, #20]
  14:	9306      	str	r3, [sp, #24]
  16:	f8cd c01c 	str.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:317
  1a:	9904      	ldr	r1, [sp, #16]
  1c:	9a05      	ldr	r2, [sp, #20]
  1e:	2300      	movs	r3, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:318
  20:	9309      	str	r3, [sp, #36]	; 0x24
  22:	9308      	str	r3, [sp, #32]
  24:	9308      	str	r3, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:319
  26:	9b06      	ldr	r3, [sp, #24]
  28:	f8dd c01c 	ldr.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  2c:	6001      	str	r1, [r0, #0]
  2e:	6042      	str	r2, [r0, #4]
  30:	9908      	ldr	r1, [sp, #32]
  32:	9a09      	ldr	r2, [sp, #36]	; 0x24
  34:	6081      	str	r1, [r0, #8]
  36:	60c2      	str	r2, [r0, #12]
  38:	6103      	str	r3, [r0, #16]
  3a:	f8c0 c014 	str.w	ip, [r0, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:321
  3e:	f8cd e00c 	str.w	lr, [sp, #12]
  42:	9402      	str	r4, [sp, #8]
  44:	9501      	str	r5, [sp, #4]
  46:	9600      	str	r6, [sp, #0]
  48:	b00a      	add	sp, #40	; 0x28
  4a:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbc76c690140a635fE:

00000000 <<T as core::convert::From<T>>::from>:
_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbc76c690140a635fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:547
   0:	b081      	sub	sp, #4
   2:	b001      	add	sp, #4
   4:	4770      	bx	lr

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.11.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.11
00000151 l       .debug_str	00000000 
000002e9 l       .debug_str	00000000 
00000311 l       .debug_str	00000000 
00000279 l       .debug_str	00000000 
0000030f l       .debug_str	00000000 
00000259 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
00000107 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
00000111 l       .debug_str	00000000 
00000113 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
000001ea l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000196 l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
000001c1 l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000001cf l       .debug_str	00000000 
000001dd l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001e4 l       .debug_str	00000000 
0000030a l       .debug_str	00000000 
00000000 l    d  .text._ZN4core6result19Result$LT$T$C$E$GT$2ok17hcfeb9744c476d220E	00000000 .text._ZN4core6result19Result$LT$T$C$E$GT$2ok17hcfeb9744c476d220E
00000000 l    d  .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hd28e1560dd764a41E	00000000 .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hd28e1560dd764a41E
00000000 l    d  .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h49c6a922655d836fE	00000000 .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h49c6a922655d836fE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core6result19Result$LT$T$C$E$GT$2ok17hcfeb9744c476d220E	00000064 core::result::Result<T,E>::ok
00000000 g     F .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hd28e1560dd764a41E	00000010 <core::result::Result<T,E> as core::ops::try::Try>::from_error
00000000 g     F .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h49c6a922655d836fE	00000012 <core::result::Result<T,E> as core::ops::try::Try>::into_result



Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$2ok17hcfeb9744c476d220E:

00000000 <core::result::Result<T,E>::ok>:
_ZN4core6result19Result$LT$T$C$E$GT$2ok17hcfeb9744c476d220E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:336
   0:	b086      	sub	sp, #24
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:338
   8:	f88d 0017 	strb.w	r0, [sp, #23]
   c:	2001      	movs	r0, #1
   e:	f88d 0017 	strb.w	r0, [sp, #23]
  12:	2800      	cmp	r0, #0
  14:	9100      	str	r1, [sp, #0]
  16:	d105      	bne.n	24 <core::result::Result<T,E>::ok+0x24>
  18:	e7ff      	b.n	1a <core::result::Result<T,E>::ok+0x1a>
  1a:	2000      	movs	r0, #0
  1c:	2800      	cmp	r0, #0
  1e:	d10b      	bne.n	38 <core::result::Result<T,E>::ok+0x38>
  20:	e7ff      	b.n	22 <core::result::Result<T,E>::ok+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:341
  22:	defe      	udf	#254	; 0xfe
  24:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:338
  26:	f88d 0017 	strb.w	r0, [sp, #23]
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	9004      	str	r0, [sp, #16]
  2e:	9804      	ldr	r0, [sp, #16]
  30:	9003      	str	r0, [sp, #12]
  32:	2001      	movs	r0, #1
  34:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:337
  36:	e011      	b.n	5c <core::result::Result<T,E>::ok+0x5c>
  38:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:339
  3a:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:337
  3c:	e00e      	b.n	5c <core::result::Result<T,E>::ok+0x5c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:341
  3e:	9802      	ldr	r0, [sp, #8]
  40:	9903      	ldr	r1, [sp, #12]
  42:	b006      	add	sp, #24
  44:	4770      	bx	lr
  46:	f89d 0017 	ldrb.w	r0, [sp, #23]
  4a:	07c0      	lsls	r0, r0, #31
  4c:	2800      	cmp	r0, #0
  4e:	d0f6      	beq.n	3e <core::result::Result<T,E>::ok+0x3e>
  50:	e7ff      	b.n	52 <core::result::Result<T,E>::ok+0x52>
  52:	2000      	movs	r0, #0
  54:	f88d 0017 	strb.w	r0, [sp, #23]
  58:	e7f1      	b.n	3e <core::result::Result<T,E>::ok+0x3e>
  5a:	e7f0      	b.n	3e <core::result::Result<T,E>::ok+0x3e>
  5c:	2001      	movs	r0, #1
  5e:	2800      	cmp	r0, #0
  60:	d1f1      	bne.n	46 <core::result::Result<T,E>::ok+0x46>
  62:	e7fa      	b.n	5a <core::result::Result<T,E>::ok+0x5a>

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hd28e1560dd764a41E:

00000000 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>:
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hd28e1560dd764a41E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1292
   0:	b081      	sub	sp, #4
   2:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1293
   4:	f88d 0003 	strb.w	r0, [sp, #3]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1294
   8:	f89d 0003 	ldrb.w	r0, [sp, #3]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h49c6a922655d836fE:

00000000 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>:
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h49c6a922655d836fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1282
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	f88d 0007 	strb.w	r0, [sp, #7]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
   8:	f89d 0007 	ldrb.w	r0, [sp, #7]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1284
   c:	9100      	str	r1, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.12.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.12
00000239 l       .debug_str	00000000 
000005fe l       .debug_str	00000000 
000005f9 l       .debug_str	00000000 
000006c2 l       .debug_str	00000000 
00000592 l       .debug_str	00000000 
00000697 l       .debug_str	00000000 
00000577 l       .debug_str	00000000 
0000062a l       .debug_str	00000000 
00000542 l       .debug_str	00000000 
00000624 l       .debug_str	00000000 
0000053b l       .debug_str	00000000 
00000619 l       .debug_str	00000000 
00000501 l       .debug_str	00000000 
000004cc l       .debug_str	00000000 
00000615 l       .debug_str	00000000 
000004a6 l       .debug_str	00000000 
00000608 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
00000111 l       .debug_str	00000000 
00000117 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
00000174 l       .debug_str	00000000 
00000176 l       .debug_str	00000000 
000001b4 l       .debug_str	00000000 
000001cf l       .debug_str	00000000 
000001d4 l       .debug_str	00000000 
000001dd l       .debug_str	00000000 
000001e5 l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001f1 l       .debug_str	00000000 
000001f4 l       .debug_str	00000000 
000001fe l       .debug_str	00000000 
00000202 l       .debug_str	00000000 
0000020a l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
00000215 l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
0000022f l       .debug_str	00000000 
00000231 l       .debug_str	00000000 
0000048c l       .debug_str	00000000 
0000023b l       .debug_str	00000000 
0000023d l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
0000026b l       .debug_str	00000000 
00000272 l       .debug_str	00000000 
00000276 l       .debug_str	00000000 
0000027b l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
0000028b l       .debug_str	00000000 
00000291 l       .debug_str	00000000 
00000297 l       .debug_str	00000000 
0000029b l       .debug_str	00000000 
000002a8 l       .debug_str	00000000 
000002ad l       .debug_str	00000000 
000002c1 l       .debug_str	00000000 
000002cf l       .debug_str	00000000 
000002d4 l       .debug_str	00000000 
000002d8 l       .debug_str	00000000 
00000300 l       .debug_str	00000000 
00000309 l       .debug_str	00000000 
0000030b l       .debug_str	00000000 
00000375 l       .debug_str	00000000 
000003be l       .debug_str	00000000 
000003f3 l       .debug_str	00000000 
0000046f l       .debug_str	00000000 
0000047b l       .debug_str	00000000 
00000604 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.2159a95c4616c0f67346716e46523292.0	00000018 .Lanon.2159a95c4616c0f67346716e46523292.0
00000000 l     O .rodata.str.0	00000048 str.0
00000000 l     O .rodata.str.1	00000021 str.1
00000000 l    d  .text._ZN47_$LT$usize$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc0c3dac2837ee473E	00000000 .text._ZN47_$LT$usize$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc0c3dac2837ee473E
00000000 l    d  .text._ZN4core10intrinsics19copy_nonoverlapping17hd07f3a150618ce6bE	00000000 .text._ZN4core10intrinsics19copy_nonoverlapping17hd07f3a150618ce6bE
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h01de8618ce9eacf0E	00000000 .text._ZN4core3ptr18real_drop_in_place17h01de8618ce9eacf0E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17ha174589a643f1eeeE	00000000 .text._ZN4core3ptr18real_drop_in_place17ha174589a643f1eeeE
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17ha4f1d1b27f43f20fE	00000000 .text._ZN4core3ptr18real_drop_in_place17ha4f1d1b27f43f20fE
00000000 l    d  .text._ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2c8cea23083d1a5aE	00000000 .text._ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2c8cea23083d1a5aE
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN47_$LT$usize$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc0c3dac2837ee473E	00000034 .hidden <usize as core::ops::arith::Sub>::sub
00000000 g     F .text._ZN4core10intrinsics19copy_nonoverlapping17hd07f3a150618ce6bE	0000002c core::intrinsics::copy_nonoverlapping
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17h01de8618ce9eacf0E	0000000c .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17ha174589a643f1eeeE	0000000c .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17ha4f1d1b27f43f20fE	0000000c .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2c8cea23083d1a5aE	00000010 .hidden core::clone::impls::<impl core::clone::Clone for usize>::clone
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 __aeabi_memcpy4



Disassembly of section .text._ZN47_$LT$usize$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc0c3dac2837ee473E:

00000000 <<usize as core::ops::arith::Sub>::sub>:
_ZN47_$LT$usize$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc0c3dac2837ee473E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ops/arith.rs:198
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
   a:	9804      	ldr	r0, [sp, #16]
   c:	9905      	ldr	r1, [sp, #20]
   e:	eba0 0c01 	sub.w	ip, r0, r1
  12:	4288      	cmp	r0, r1
  14:	9203      	str	r2, [sp, #12]
  16:	9302      	str	r3, [sp, #8]
  18:	f8cd c004 	str.w	ip, [sp, #4]
  1c:	d303      	bcc.n	26 <<usize as core::ops::arith::Sub>::sub+0x26>
  1e:	e7ff      	b.n	20 <<usize as core::ops::arith::Sub>::sub+0x20>
  20:	9801      	ldr	r0, [sp, #4]
  22:	b006      	add	sp, #24
  24:	4770      	bx	lr
  26:	f240 0000 	movw	r0, #0
  2a:	f2c0 0000 	movt	r0, #0
  2e:	f7ff fffe 	bl	0 <core::panicking::panic>
  32:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17hd07f3a150618ce6bE:

00000000 <core::intrinsics::copy_nonoverlapping>:
_ZN4core10intrinsics19copy_nonoverlapping17hd07f3a150618ce6bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1411
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9003      	str	r0, [sp, #12]
   c:	9104      	str	r1, [sp, #16]
   e:	9205      	str	r2, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  10:	9903      	ldr	r1, [sp, #12]
  12:	9804      	ldr	r0, [sp, #16]
  14:	9a05      	ldr	r2, [sp, #20]
  16:	0092      	lsls	r2, r2, #2
  18:	9302      	str	r3, [sp, #8]
  1a:	f8cd c004 	str.w	ip, [sp, #4]
  1e:	f8cd e000 	str.w	lr, [sp]
  22:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  26:	e7ff      	b.n	28 <core::intrinsics::copy_nonoverlapping+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1413
  28:	b006      	add	sp, #24
  2a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h01de8618ce9eacf0E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h01de8618ce9eacf0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17ha174589a643f1eeeE:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17ha174589a643f1eeeE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17ha4f1d1b27f43f20fE:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17ha4f1d1b27f43f20fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2c8cea23083d1a5aE:

00000000 <core::clone::impls::<impl core::clone::Clone for usize>::clone>:
_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h2c8cea23083d1a5aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/clone.rs:167
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/clone.rs:168
   6:	9801      	ldr	r0, [sp, #4]
   8:	6800      	ldr	r0, [r0, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/clone.rs:169
   a:	9100      	str	r1, [sp, #0]
   c:	b002      	add	sp, #8
   e:	4770      	bx	lr

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.13.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.13
000001c3 l       .debug_str	00000000 
00000323 l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
0000031f l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000107 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
00000127 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000147 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
00000155 l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
00000182 l       .debug_str	00000000 
0000031a l       .debug_str	00000000 
000001e6 l       .debug_str	00000000 
000001f0 l       .debug_str	00000000 
000001f6 l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
00000200 l       .debug_str	00000000 
00000206 l       .debug_str	00000000 
0000020c l       .debug_str	00000000 
00000210 l       .debug_str	00000000 
0000021d l       .debug_str	00000000 
00000222 l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
00000244 l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
000002c6 l       .debug_str	00000000 
0000030a l       .debug_str	00000000 
00000311 l       .debug_str	00000000 
00000315 l       .debug_str	00000000 
0000034b l       .debug_str	00000000 
00000000 l    d  .text._ZN4core4iter8adapters16Map$LT$I$C$F$GT$3new17h7e252103f0443e1dE	00000000 .text._ZN4core4iter8adapters16Map$LT$I$C$F$GT$3new17h7e252103f0443e1dE
00000000 l    d  .text._ZN97_$LT$core..iter..adapters..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4144992cdce936c7E	00000000 .text._ZN97_$LT$core..iter..adapters..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4144992cdce936c7E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core4iter8adapters16Map$LT$I$C$F$GT$3new17h7e252103f0443e1dE	0000001e core::iter::adapters::Map<I,F>::new
00000000         *UND*	00000000 core::option::Option<T>::map
00000000         *UND*	00000000 <core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next
00000000 g     F .text._ZN97_$LT$core..iter..adapters..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4144992cdce936c7E	00000028 <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::next



Disassembly of section .text._ZN4core4iter8adapters16Map$LT$I$C$F$GT$3new17h7e252103f0443e1dE:

00000000 <core::iter::adapters::Map<I,F>::new>:
_ZN4core4iter8adapters16Map$LT$I$C$F$GT$3new17h7e252103f0443e1dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/mod.rs:550
   0:	b087      	sub	sp, #28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/mod.rs:551
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9005      	str	r0, [sp, #20]
  10:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/mod.rs:552
  12:	9805      	ldr	r0, [sp, #20]
  14:	9906      	ldr	r1, [sp, #24]
  16:	9201      	str	r2, [sp, #4]
  18:	9300      	str	r3, [sp, #0]
  1a:	b007      	add	sp, #28
  1c:	4770      	bx	lr

Disassembly of section .text._ZN97_$LT$core..iter..adapters..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4144992cdce936c7E:

00000000 <<core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::next>:
_ZN97_$LT$core..iter..adapters..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4144992cdce936c7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/mod.rs:569
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	460a      	mov	r2, r1
   6:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/mod.rs:570
   8:	9903      	ldr	r1, [sp, #12]
   a:	9002      	str	r0, [sp, #8]
   c:	4608      	mov	r0, r1
   e:	9201      	str	r2, [sp, #4]
  10:	f7ff fffe 	bl	0 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next>
  14:	9000      	str	r0, [sp, #0]
  16:	e7ff      	b.n	18 <<core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::next+0x18>
  18:	9a03      	ldr	r2, [sp, #12]
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	9900      	ldr	r1, [sp, #0]
  1e:	f7ff fffe 	bl	0 <core::option::Option<T>::map>
  22:	e7ff      	b.n	24 <<core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::next+0x24>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/mod.rs:571
  24:	b004      	add	sp, #16
  26:	bd80      	pop	{r7, pc}

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.14.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.14
000001bc l       .debug_str	00000000 
00000269 l       .debug_str	00000000 
00000283 l       .debug_str	00000000 
0000025f l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
00000256 l       .debug_str	00000000 
00000276 l       .debug_str	00000000 
00000252 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000152 l       .debug_str	00000000 
00000178 l       .debug_str	00000000 
00000184 l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
0000021d l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001da l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001e2 l       .debug_str	00000000 
000001e6 l       .debug_str	00000000 
000001ea l       .debug_str	00000000 
000001ee l       .debug_str	00000000 
000001f4 l       .debug_str	00000000 
00000270 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3mem11size_of_val17hca08981e6a5eb08cE	00000000 .text._ZN4core3mem11size_of_val17hca08981e6a5eb08cE
00000000 l    d  .text._ZN4core3mem4swap17ha215299b395665f3E	00000000 .text._ZN4core3mem4swap17ha215299b395665f3E
00000000 l    d  .text._ZN4core3mem7size_of17h52ebf8b7386d8e01E	00000000 .text._ZN4core3mem7size_of17h52ebf8b7386d8e01E
00000000 l    d  .text._ZN4core3mem7size_of17hcafb567766d3ad6aE	00000000 .text._ZN4core3mem7size_of17hcafb567766d3ad6aE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3mem11size_of_val17hca08981e6a5eb08cE	0000001e core::mem::size_of_val
00000000 g     F .text._ZN4core3mem4swap17ha215299b395665f3E	0000001e core::mem::swap
00000000 g     F .text._ZN4core3mem7size_of17h52ebf8b7386d8e01E	00000012 core::mem::size_of
00000000 g     F .text._ZN4core3mem7size_of17hcafb567766d3ad6aE	00000012 core::mem::size_of
00000000         *UND*	00000000 core::ptr::swap_nonoverlapping_one



Disassembly of section .text._ZN4core3mem11size_of_val17hca08981e6a5eb08cE:

00000000 <core::mem::size_of_val>:
_ZN4core3mem11size_of_val17hca08981e6a5eb08cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:268
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:269
   a:	9804      	ldr	r0, [sp, #16]
   c:	9005      	str	r0, [sp, #20]
   e:	9805      	ldr	r0, [sp, #20]
  10:	9202      	str	r2, [sp, #8]
  12:	9301      	str	r3, [sp, #4]
  14:	9000      	str	r0, [sp, #0]
  16:	e7ff      	b.n	18 <core::mem::size_of_val+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:270
  18:	9800      	ldr	r0, [sp, #0]
  1a:	b006      	add	sp, #24
  1c:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem4swap17ha215299b395665f3E:

00000000 <core::mem::swap>:
_ZN4core3mem4swap17ha215299b395665f3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:500
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9002      	str	r0, [sp, #8]
   a:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:502
   c:	9802      	ldr	r0, [sp, #8]
   e:	9903      	ldr	r1, [sp, #12]
  10:	9201      	str	r2, [sp, #4]
  12:	9300      	str	r3, [sp, #0]
  14:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  18:	e7ff      	b.n	1a <core::mem::swap+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:504
  1a:	b004      	add	sp, #16
  1c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem7size_of17h52ebf8b7386d8e01E:

00000000 <core::mem::size_of>:
_ZN4core3mem7size_of17h52ebf8b7386d8e01E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:242
   0:	b082      	sub	sp, #8
   2:	2004      	movs	r0, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:243
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::size_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:244
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem7size_of17hcafb567766d3ad6aE:

00000000 <core::mem::size_of>:
_ZN4core3mem7size_of17hcafb567766d3ad6aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:242
   0:	b082      	sub	sp, #8
   2:	2020      	movs	r0, #32
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:243
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::size_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:244
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.15.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.15
0000016a l       .debug_str	00000000 
00000303 l       .debug_str	00000000 
00000336 l       .debug_str	00000000 
000002da l       .debug_str	00000000 
00000330 l       .debug_str	00000000 
000002d8 l       .debug_str	00000000 
0000032b l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
00000107 l       .debug_str	00000000 
00000131 l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
0000014d l       .debug_str	00000000 
00000152 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
000002ca l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
0000017c l       .debug_str	00000000 
00000186 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
00000193 l       .debug_str	00000000 
000001e4 l       .debug_str	00000000 
000001f0 l       .debug_str	00000000 
000001f2 l       .debug_str	00000000 
00000243 l       .debug_str	00000000 
00000255 l       .debug_str	00000000 
000002ad l       .debug_str	00000000 
000002c3 l       .debug_str	00000000 
00000329 l       .debug_str	00000000 
00000000 l    d  .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h551cb65250c7c91bE	00000000 .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h551cb65250c7c91bE
00000000 l    d  .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h802ebe02decf163eE	00000000 .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h802ebe02decf163eE
00000000 l    d  .text._ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h7c80ae12d7aabdd0E	00000000 .text._ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h7c80ae12d7aabdd0E
00000000 l    d  .text._ZN6memchr6memchr17hf0ab51d57b446c84E	00000000 .text._ZN6memchr6memchr17hf0ab51d57b446c84E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::slice::<impl [T]>::is_empty
00000000 g     F .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h551cb65250c7c91bE	0000000e <T as core::convert::From<T>>::from
00000000 g     F .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h802ebe02decf163eE	0000001a <T as core::convert::Into<U>>::into
00000000 g     F .text._ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h7c80ae12d7aabdd0E	0000001e <T as core::convert::TryFrom<U>>::try_from
00000000 g     F .text._ZN6memchr6memchr17hf0ab51d57b446c84E	00000064 .hidden memchr::memchr
00000000         *UND*	00000000 memchr::fallback::memchr



Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h551cb65250c7c91bE:

00000000 <<T as core::convert::From<T>>::from>:
_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h551cb65250c7c91bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:547
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9100      	str	r1, [sp, #0]
   a:	b002      	add	sp, #8
   c:	4770      	bx	lr

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h802ebe02decf163eE:

00000000 <<T as core::convert::Into<U>>::into>:
_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h802ebe02decf163eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:539
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:540
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <<T as core::convert::Into<U>>::into>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <<T as core::convert::Into<U>>::into+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:541
  14:	9801      	ldr	r0, [sp, #4]
  16:	b004      	add	sp, #16
  18:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h7c80ae12d7aabdd0E:

00000000 <<T as core::convert::TryFrom<U>>::try_from>:
_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h7c80ae12d7aabdd0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:568
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:569
   8:	9802      	ldr	r0, [sp, #8]
   a:	9101      	str	r1, [sp, #4]
   c:	f7ff fffe 	bl	0 <<T as core::convert::TryFrom<U>>::try_from>
  10:	9000      	str	r0, [sp, #0]
  12:	e7ff      	b.n	14 <<T as core::convert::TryFrom<U>>::try_from+0x14>
  14:	9800      	ldr	r0, [sp, #0]
  16:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:570
  18:	9803      	ldr	r0, [sp, #12]
  1a:	b004      	add	sp, #16
  1c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6memchr6memchr17hf0ab51d57b446c84E:

00000000 <memchr::memchr>:
_ZN6memchr6memchr17hf0ab51d57b446c84E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:131
///
/// let haystack = b"the quick brown fox";
/// assert_eq!(memchr(b'k', haystack), Some(8));
/// ```
#[inline]
pub fn memchr(needle: u8, haystack: &[u8]) -> Option<usize> {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	f88d 0013 	strb.w	r0, [sp, #19]
   e:	9105      	str	r1, [sp, #20]
  10:	9206      	str	r2, [sp, #24]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:156
    #[inline(always)]
    fn imp(n1: u8, haystack: &[u8]) -> Option<usize> {
        fallback::memchr(n1, haystack)
    }

    if haystack.is_empty() {
  12:	9805      	ldr	r0, [sp, #20]
  14:	9906      	ldr	r1, [sp, #24]
  16:	9303      	str	r3, [sp, #12]
  18:	f8cd c008 	str.w	ip, [sp, #8]
  1c:	f8cd e004 	str.w	lr, [sp, #4]
  20:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::is_empty>
  24:	9000      	str	r0, [sp, #0]
  26:	e7ff      	b.n	28 <memchr::memchr+0x28>
  28:	9800      	ldr	r0, [sp, #0]
  2a:	07c1      	lsls	r1, r0, #31
  2c:	2900      	cmp	r1, #0
  2e:	d003      	beq.n	38 <memchr::memchr+0x38>
  30:	e7ff      	b.n	32 <memchr::memchr+0x32>
  32:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:157
        None
  34:	9007      	str	r0, [sp, #28]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:156
    if haystack.is_empty() {
  36:	e011      	b.n	5c <memchr::memchr+0x5c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:159
    } else {
        imp(needle, haystack)
  38:	f89d 0013 	ldrb.w	r0, [sp, #19]
  3c:	9905      	ldr	r1, [sp, #20]
  3e:	9a06      	ldr	r2, [sp, #24]
  40:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  44:	910a      	str	r1, [sp, #40]	; 0x28
  46:	920b      	str	r2, [sp, #44]	; 0x2c
_ZN6memchr6memchr3imp17h4b09b82f8ce34b8cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:153
        fallback::memchr(n1, haystack)
  48:	990a      	ldr	r1, [sp, #40]	; 0x28
  4a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4c:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  50:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
_ZN6memchr6memchr17hf0ab51d57b446c84E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:159
        imp(needle, haystack)
  54:	9108      	str	r1, [sp, #32]
  56:	9007      	str	r0, [sp, #28]
  58:	e7ff      	b.n	5a <memchr::memchr+0x5a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:156
    if haystack.is_empty() {
  5a:	e7ff      	b.n	5c <memchr::memchr+0x5c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:161
    }
}
  5c:	9807      	ldr	r0, [sp, #28]
  5e:	9908      	ldr	r1, [sp, #32]
  60:	b00c      	add	sp, #48	; 0x30
  62:	bd80      	pop	{r7, pc}

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.2.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.2
00000238 l       .debug_str	00000000 
0000082d l       .debug_str	00000000 
000009c6 l       .debug_str	00000000 
000007cb l       .debug_str	00000000 
000009c2 l       .debug_str	00000000 
000007c1 l       .debug_str	00000000 
000009bc l       .debug_str	00000000 
00000748 l       .debug_str	00000000 
000009b6 l       .debug_str	00000000 
00000746 l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
000009b0 l       .debug_str	00000000 
00000739 l       .debug_str	00000000 
000009a4 l       .debug_str	00000000 
00000730 l       .debug_str	00000000 
0000099b l       .debug_str	00000000 
00000705 l       .debug_str	00000000 
00000927 l       .debug_str	00000000 
00000690 l       .debug_str	00000000 
00000913 l       .debug_str	00000000 
00000681 l       .debug_str	00000000 
000008a3 l       .debug_str	00000000 
00000665 l       .debug_str	00000000 
00000899 l       .debug_str	00000000 
00000655 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
00000117 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000127 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000136 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015c l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
0000017a l       .debug_str	00000000 
00000183 l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001d8 l       .debug_str	00000000 
000001dd l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
00000209 l       .debug_str	00000000 
0000020e l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
0000021e l       .debug_str	00000000 
00000224 l       .debug_str	00000000 
00000228 l       .debug_str	00000000 
0000022e l       .debug_str	00000000 
00000234 l       .debug_str	00000000 
000005e4 l       .debug_str	00000000 
00000245 l       .debug_str	00000000 
0000024a l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
0000026c l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
00000276 l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
000002b7 l       .debug_str	00000000 
000002fa l       .debug_str	00000000 
00000303 l       .debug_str	00000000 
00000305 l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
0000032b l       .debug_str	00000000 
0000032d l       .debug_str	00000000 
00000371 l       .debug_str	00000000 
000003b9 l       .debug_str	00000000 
000003c1 l       .debug_str	00000000 
000003c7 l       .debug_str	00000000 
000003d1 l       .debug_str	00000000 
000003d8 l       .debug_str	00000000 
000003dc l       .debug_str	00000000 
000003e1 l       .debug_str	00000000 
000003e6 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
00000412 l       .debug_str	00000000 
0000041b l       .debug_str	00000000 
00000485 l       .debug_str	00000000 
000004ce l       .debug_str	00000000 
00000515 l       .debug_str	00000000 
0000051e l       .debug_str	00000000 
00000569 l       .debug_str	00000000 
00000576 l       .debug_str	00000000 
0000057b l       .debug_str	00000000 
000005dc l       .debug_str	00000000 
00000835 l       .debug_str	00000000 
00000000 l     F .text._ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17hab9bc7bc2db93c43E	000000be <[u8] as core::slice::SliceOrd<u8>>::compare
00000000 l    d  .text._ZN4core4iter6traits8iterator8Iterator3map17h4abb396f931b684eE	00000000 .text._ZN4core4iter6traits8iterator8Iterator3map17h4abb396f931b684eE
00000000 l    d  .text._ZN4core4iter6traits8iterator8Iterator8flat_map17h569f3a38ebb58c8cE	00000000 .text._ZN4core4iter6traits8iterator8Iterator8flat_map17h569f3a38ebb58c8cE
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hab6a825e9f048b3bE	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hab6a825e9f048b3bE
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hc0a4f81800ef25e1E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hc0a4f81800ef25e1E
00000000 l    d  .text._ZN4core5slice56_$LT$impl$u20$core..cmp..Ord$u20$for$u20$$u5b$T$u5d$$GT$3cmp17h05b318d5275d5c43E	00000000 .text._ZN4core5slice56_$LT$impl$u20$core..cmp..Ord$u20$for$u20$$u5b$T$u5d$$GT$3cmp17h05b318d5275d5c43E
00000000 l    d  .text._ZN4core5slice63_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$$u5b$T$u5d$$GT$11partial_cmp17h7685310c5266ffdbE	00000000 .text._ZN4core5slice63_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$$u5b$T$u5d$$GT$11partial_cmp17h7685310c5266ffdbE
00000000 l    d  .text._ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2a7d7bfdd0696926E	00000000 .text._ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2a7d7bfdd0696926E
00000000 l    d  .text._ZN4core5slice81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe066f69d728c186E	00000000 .text._ZN4core5slice81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe066f69d728c186E
00000000 l    d  .text._ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17hab9bc7bc2db93c43E	00000000 .text._ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17hab9bc7bc2db93c43E
00000000 l    d  .text._ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h057cde8b8b4c63d0E	00000000 .text._ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h057cde8b8b4c63d0E
00000000 l    d  .text._ZN69_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialOrd$LT$A$GT$$GT$15partial_compare17h6ba743bedcd0f803E	00000000 .text._ZN69_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialOrd$LT$A$GT$$GT$15partial_compare17h6ba743bedcd0f803E
00000000 l    d  .text._ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5b03571f561305fbE	00000000 .text._ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5b03571f561305fbE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index
00000000         *UND*	00000000 core::cmp::min
00000000         *UND*	00000000 .hidden core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
00000000         *UND*	00000000 core::mem::size_of_val
00000000         *UND*	00000000 core::mem::size_of
00000000         *UND*	00000000 core::ptr::<impl *const T>::wrapping_add
00000000         *UND*	00000000 core::ptr::<impl *const T>::wrapping_offset
00000000         *UND*	00000000 core::ptr::<impl *const T>::add
00000000         *UND*	00000000 core::ptr::<impl *const T>::offset
00000000         *UND*	00000000 core::ptr::<impl *const T>::is_null
00000000 g     F .text._ZN4core4iter6traits8iterator8Iterator3map17h4abb396f931b684eE	00000026 core::iter::traits::iterator::Iterator::map
00000000 g     F .text._ZN4core4iter6traits8iterator8Iterator8flat_map17h569f3a38ebb58c8cE	00000026 core::iter::traits::iterator::Iterator::flat_map
00000000         *UND*	00000000 core::iter::adapters::Map<I,F>::new
00000000         *UND*	00000000 core::iter::adapters::flatten::FlatMap<I,U,F>::new
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hab6a825e9f048b3bE	00000090 core::slice::<impl [T]>::iter
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hc0a4f81800ef25e1E	00000028 core::slice::<impl [T]>::is_empty
00000000 g     F .text._ZN4core5slice56_$LT$impl$u20$core..cmp..Ord$u20$for$u20$$u5b$T$u5d$$GT$3cmp17h05b318d5275d5c43E	00000036 core::slice::<impl core::cmp::Ord for [T]>::cmp
00000000 g     F .text._ZN4core5slice63_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$$u5b$T$u5d$$GT$11partial_cmp17h7685310c5266ffdbE	00000036 core::slice::<impl core::cmp::PartialOrd for [T]>::partial_cmp
00000000 g     F .text._ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2a7d7bfdd0696926E	00000032 core::slice::<impl core::ops::index::Index<I> for [T]>::index
00000000 g     F .text._ZN4core5slice81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe066f69d728c186E	0000003a core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq
00000000 g     F .text._ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h057cde8b8b4c63d0E	000000bc <[A] as core::slice::SlicePartialEq<A>>::equal
00000000 g     F .text._ZN69_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialOrd$LT$A$GT$$GT$15partial_compare17h6ba743bedcd0f803E	0000003e <[A] as core::slice::SlicePartialOrd<A>>::partial_compare
00000000 g     F .text._ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5b03571f561305fbE	000000a0 <core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next
00000000         *UND*	00000000 memcmp



Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator3map17h4abb396f931b684eE:

00000000 <core::iter::traits::iterator::Iterator::map>:
_ZN4core4iter6traits8iterator8Iterator3map17h4abb396f931b684eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/iterator.rs:558
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/iterator.rs:561
   c:	9805      	ldr	r0, [sp, #20]
   e:	9906      	ldr	r1, [sp, #24]
  10:	9204      	str	r2, [sp, #16]
  12:	9303      	str	r3, [sp, #12]
  14:	f7ff fffe 	bl	0 <core::iter::adapters::Map<I,F>::new>
  18:	9002      	str	r0, [sp, #8]
  1a:	9101      	str	r1, [sp, #4]
  1c:	e7ff      	b.n	1e <core::iter::traits::iterator::Iterator::map+0x1e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/iterator.rs:562
  1e:	9802      	ldr	r0, [sp, #8]
  20:	9901      	ldr	r1, [sp, #4]
  22:	b008      	add	sp, #32
  24:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core4iter6traits8iterator8Iterator8flat_map17h569f3a38ebb58c8cE:

00000000 <core::iter::traits::iterator::Iterator::flat_map>:
_ZN4core4iter6traits8iterator8Iterator8flat_map17h569f3a38ebb58c8cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/iterator.rs:1096
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9103      	str	r1, [sp, #12]
   c:	9204      	str	r2, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/iterator.rs:1099
   e:	9903      	ldr	r1, [sp, #12]
  10:	9a04      	ldr	r2, [sp, #16]
  12:	9302      	str	r3, [sp, #8]
  14:	f8cd c004 	str.w	ip, [sp, #4]
  18:	f8cd e000 	str.w	lr, [sp]
  1c:	f7ff fffe 	bl	0 <core::iter::adapters::flatten::FlatMap<I,U,F>::new>
  20:	e7ff      	b.n	22 <core::iter::traits::iterator::Iterator::flat_map+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/iterator.rs:1100
  22:	b006      	add	sp, #24
  24:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hab6a825e9f048b3bE:

00000000 <core::slice::<impl [T]>::iter>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hab6a825e9f048b3bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:535
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9009      	str	r0, [sp, #36]	; 0x24
   a:	910a      	str	r1, [sp, #40]	; 0x28
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:537
   c:	9809      	ldr	r0, [sp, #36]	; 0x24
   e:	990a      	ldr	r1, [sp, #40]	; 0x28
  10:	9208      	str	r2, [sp, #32]
  12:	9307      	str	r3, [sp, #28]
  14:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  18:	900d      	str	r0, [sp, #52]	; 0x34
  1a:	e7ff      	b.n	1c <core::slice::<impl [T]>::iter+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:538
  1c:	980d      	ldr	r0, [sp, #52]	; 0x34
  1e:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::is_null>
  22:	9006      	str	r0, [sp, #24]
  24:	e7ff      	b.n	26 <core::slice::<impl [T]>::iter+0x26>
  26:	e7ff      	b.n	28 <core::slice::<impl [T]>::iter+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:540
  28:	f7ff fffe 	bl	0 <core::mem::size_of>
  2c:	9005      	str	r0, [sp, #20]
  2e:	e7ff      	b.n	30 <core::slice::<impl [T]>::iter+0x30>
  30:	9805      	ldr	r0, [sp, #20]
  32:	2800      	cmp	r0, #0
  34:	d113      	bne.n	5e <core::slice::<impl [T]>::iter+0x5e>
  36:	e7ff      	b.n	38 <core::slice::<impl [T]>::iter+0x38>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:541
  38:	980d      	ldr	r0, [sp, #52]	; 0x34
  3a:	9909      	ldr	r1, [sp, #36]	; 0x24
  3c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  3e:	9004      	str	r0, [sp, #16]
  40:	4608      	mov	r0, r1
  42:	4611      	mov	r1, r2
  44:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  48:	9003      	str	r0, [sp, #12]
  4a:	e7ff      	b.n	4c <core::slice::<impl [T]>::iter+0x4c>
  4c:	9804      	ldr	r0, [sp, #16]
  4e:	9903      	ldr	r1, [sp, #12]
  50:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::wrapping_add>
  54:	9002      	str	r0, [sp, #8]
  56:	e7ff      	b.n	58 <core::slice::<impl [T]>::iter+0x58>
  58:	9802      	ldr	r0, [sp, #8]
  5a:	900e      	str	r0, [sp, #56]	; 0x38
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:540
  5c:	e010      	b.n	80 <core::slice::<impl [T]>::iter+0x80>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:543
  5e:	980d      	ldr	r0, [sp, #52]	; 0x34
  60:	9909      	ldr	r1, [sp, #36]	; 0x24
  62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  64:	9001      	str	r0, [sp, #4]
  66:	4608      	mov	r0, r1
  68:	4611      	mov	r1, r2
  6a:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  6e:	9000      	str	r0, [sp, #0]
  70:	e7ff      	b.n	72 <core::slice::<impl [T]>::iter+0x72>
  72:	9801      	ldr	r0, [sp, #4]
  74:	9900      	ldr	r1, [sp, #0]
  76:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::add>
  7a:	900e      	str	r0, [sp, #56]	; 0x38
  7c:	e7ff      	b.n	7e <core::slice::<impl [T]>::iter+0x7e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:540
  7e:	e7ff      	b.n	80 <core::slice::<impl [T]>::iter+0x80>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:547
  80:	980d      	ldr	r0, [sp, #52]	; 0x34
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:548
  82:	990e      	ldr	r1, [sp, #56]	; 0x38
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:546
  84:	900b      	str	r0, [sp, #44]	; 0x2c
  86:	910c      	str	r1, [sp, #48]	; 0x30
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:552
  88:	980b      	ldr	r0, [sp, #44]	; 0x2c
  8a:	990c      	ldr	r1, [sp, #48]	; 0x30
  8c:	b010      	add	sp, #64	; 0x40
  8e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hc0a4f81800ef25e1E:

00000000 <core::slice::<impl [T]>::is_empty>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hc0a4f81800ef25e1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:96
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:97
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <core::slice::<impl [T]>::is_empty+0x1c>
  1c:	9801      	ldr	r0, [sp, #4]
  1e:	fab0 f180 	clz	r1, r0
  22:	0948      	lsrs	r0, r1, #5
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:98
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core5slice56_$LT$impl$u20$core..cmp..Ord$u20$for$u20$$u5b$T$u5d$$GT$3cmp17h05b318d5275d5c43E:

00000000 <core::slice::<impl core::cmp::Ord for [T]>::cmp>:
_ZN4core5slice56_$LT$impl$u20$core..cmp..Ord$u20$for$u20$$u5b$T$u5d$$GT$3cmp17h05b318d5275d5c43E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5267
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9006      	str	r0, [sp, #24]
   e:	9107      	str	r1, [sp, #28]
  10:	9208      	str	r2, [sp, #32]
  12:	9309      	str	r3, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5268
  14:	9806      	ldr	r0, [sp, #24]
  16:	9907      	ldr	r1, [sp, #28]
  18:	9a08      	ldr	r2, [sp, #32]
  1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  1c:	f8cd c014 	str.w	ip, [sp, #20]
  20:	f8cd e010 	str.w	lr, [sp, #16]
  24:	9403      	str	r4, [sp, #12]
  26:	9502      	str	r5, [sp, #8]
  28:	f7ff fffe 	bl	0 <core::slice::<impl core::cmp::Ord for [T]>::cmp>
  2c:	9001      	str	r0, [sp, #4]
  2e:	e7ff      	b.n	30 <core::slice::<impl core::cmp::Ord for [T]>::cmp+0x30>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5269
  30:	9801      	ldr	r0, [sp, #4]
  32:	b00a      	add	sp, #40	; 0x28
  34:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN4core5slice63_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$$u5b$T$u5d$$GT$11partial_cmp17h7685310c5266ffdbE:

00000000 <core::slice::<impl core::cmp::PartialOrd for [T]>::partial_cmp>:
_ZN4core5slice63_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$$u5b$T$u5d$$GT$11partial_cmp17h7685310c5266ffdbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5275
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9006      	str	r0, [sp, #24]
   e:	9107      	str	r1, [sp, #28]
  10:	9208      	str	r2, [sp, #32]
  12:	9309      	str	r3, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5276
  14:	9806      	ldr	r0, [sp, #24]
  16:	9907      	ldr	r1, [sp, #28]
  18:	9a08      	ldr	r2, [sp, #32]
  1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  1c:	f8cd c014 	str.w	ip, [sp, #20]
  20:	f8cd e010 	str.w	lr, [sp, #16]
  24:	9403      	str	r4, [sp, #12]
  26:	9502      	str	r5, [sp, #8]
  28:	f7ff fffe 	bl	0 <core::slice::<impl core::cmp::PartialOrd for [T]>::partial_cmp>
  2c:	9001      	str	r0, [sp, #4]
  2e:	e7ff      	b.n	30 <core::slice::<impl core::cmp::PartialOrd for [T]>::partial_cmp+0x30>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5277
  30:	9801      	ldr	r0, [sp, #4]
  32:	b00a      	add	sp, #40	; 0x28
  34:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2a7d7bfdd0696926E:

00000000 <core::slice::<impl core::ops::index::Index<I> for [T]>::index>:
_ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h2a7d7bfdd0696926E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2551
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2552
  10:	9807      	ldr	r0, [sp, #28]
  12:	9905      	ldr	r1, [sp, #20]
  14:	9a06      	ldr	r2, [sp, #24]
  16:	9304      	str	r3, [sp, #16]
  18:	f8cd c00c 	str.w	ip, [sp, #12]
  1c:	f8cd e008 	str.w	lr, [sp, #8]
  20:	f7ff fffe 	bl	0 <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index>
  24:	9001      	str	r0, [sp, #4]
  26:	9100      	str	r1, [sp, #0]
  28:	e7ff      	b.n	2a <core::slice::<impl core::ops::index::Index<I> for [T]>::index+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2553
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	9900      	ldr	r1, [sp, #0]
  2e:	b008      	add	sp, #32
  30:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core5slice81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe066f69d728c186E:

00000000 <core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq>:
_ZN4core5slice81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17hbe066f69d728c186E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5252
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9006      	str	r0, [sp, #24]
   e:	9107      	str	r1, [sp, #28]
  10:	9208      	str	r2, [sp, #32]
  12:	9309      	str	r3, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5253
  14:	9806      	ldr	r0, [sp, #24]
  16:	9907      	ldr	r1, [sp, #28]
  18:	9a08      	ldr	r2, [sp, #32]
  1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  1c:	f8cd c014 	str.w	ip, [sp, #20]
  20:	f8cd e010 	str.w	lr, [sp, #16]
  24:	9403      	str	r4, [sp, #12]
  26:	9502      	str	r5, [sp, #8]
  28:	f7ff fffe 	bl	0 <core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
  2c:	9001      	str	r0, [sp, #4]
  2e:	e7ff      	b.n	30 <core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq+0x30>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5254
  30:	9801      	ldr	r0, [sp, #4]
  32:	f000 0001 	and.w	r0, r0, #1
  36:	b00a      	add	sp, #40	; 0x28
  38:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17hab9bc7bc2db93c43E:

00000000 <<[u8] as core::slice::SliceOrd<u8>>::compare>:
_ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17hab9bc7bc2db93c43E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5394
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b092      	sub	sp, #72	; 0x48
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	900a      	str	r0, [sp, #40]	; 0x28
   e:	910b      	str	r1, [sp, #44]	; 0x2c
  10:	920c      	str	r2, [sp, #48]	; 0x30
  12:	930d      	str	r3, [sp, #52]	; 0x34
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5396
  14:	980a      	ldr	r0, [sp, #40]	; 0x28
  16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  18:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  1c:	f8cd e020 	str.w	lr, [sp, #32]
  20:	9407      	str	r4, [sp, #28]
  22:	9506      	str	r5, [sp, #24]
  24:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  28:	9005      	str	r0, [sp, #20]
  2a:	e7ff      	b.n	2c <<[u8] as core::slice::SliceOrd<u8>>::compare+0x2c>
  2c:	980c      	ldr	r0, [sp, #48]	; 0x30
  2e:	990d      	ldr	r1, [sp, #52]	; 0x34
  30:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  34:	9004      	str	r0, [sp, #16]
  36:	e7ff      	b.n	38 <<[u8] as core::slice::SliceOrd<u8>>::compare+0x38>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5397
  38:	980a      	ldr	r0, [sp, #40]	; 0x28
  3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  3c:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  40:	9003      	str	r0, [sp, #12]
  42:	e7ff      	b.n	44 <<[u8] as core::slice::SliceOrd<u8>>::compare+0x44>
  44:	980c      	ldr	r0, [sp, #48]	; 0x30
  46:	990d      	ldr	r1, [sp, #52]	; 0x34
  48:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  4c:	9002      	str	r0, [sp, #8]
  4e:	e7ff      	b.n	50 <<[u8] as core::slice::SliceOrd<u8>>::compare+0x50>
  50:	9803      	ldr	r0, [sp, #12]
  52:	9902      	ldr	r1, [sp, #8]
  54:	f7ff fffe 	bl	0 <core::cmp::min>
  58:	9001      	str	r0, [sp, #4]
  5a:	e7ff      	b.n	5c <<[u8] as core::slice::SliceOrd<u8>>::compare+0x5c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5396
  5c:	9805      	ldr	r0, [sp, #20]
  5e:	9904      	ldr	r1, [sp, #16]
  60:	9a01      	ldr	r2, [sp, #4]
  62:	f7ff fffe 	bl	0 <memcmp>
  66:	900f      	str	r0, [sp, #60]	; 0x3c
  68:	e7ff      	b.n	6a <<[u8] as core::slice::SliceOrd<u8>>::compare+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5399
  6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
  6c:	2800      	cmp	r0, #0
  6e:	d114      	bne.n	9a <<[u8] as core::slice::SliceOrd<u8>>::compare+0x9a>
  70:	e7ff      	b.n	72 <<[u8] as core::slice::SliceOrd<u8>>::compare+0x72>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5400
  72:	980a      	ldr	r0, [sp, #40]	; 0x28
  74:	990b      	ldr	r1, [sp, #44]	; 0x2c
  76:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  7a:	9010      	str	r0, [sp, #64]	; 0x40
  7c:	e7ff      	b.n	7e <<[u8] as core::slice::SliceOrd<u8>>::compare+0x7e>
  7e:	980c      	ldr	r0, [sp, #48]	; 0x30
  80:	990d      	ldr	r1, [sp, #52]	; 0x34
  82:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  86:	9011      	str	r0, [sp, #68]	; 0x44
  88:	e7ff      	b.n	8a <<[u8] as core::slice::SliceOrd<u8>>::compare+0x8a>
  8a:	a810      	add	r0, sp, #64	; 0x40
  8c:	a911      	add	r1, sp, #68	; 0x44
  8e:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp>
  92:	f88d 003b 	strb.w	r0, [sp, #59]	; 0x3b
  96:	e7ff      	b.n	98 <<[u8] as core::slice::SliceOrd<u8>>::compare+0x98>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5399
  98:	e00d      	b.n	b6 <<[u8] as core::slice::SliceOrd<u8>>::compare+0xb6>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5401
  9a:	980f      	ldr	r0, [sp, #60]	; 0x3c
  9c:	f1b0 3fff 	cmp.w	r0, #4294967295
  a0:	dc04      	bgt.n	ac <<[u8] as core::slice::SliceOrd<u8>>::compare+0xac>
  a2:	e7ff      	b.n	a4 <<[u8] as core::slice::SliceOrd<u8>>::compare+0xa4>
  a4:	20ff      	movs	r0, #255	; 0xff
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5402
  a6:	f88d 003b 	strb.w	r0, [sp, #59]	; 0x3b
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5401
  aa:	e003      	b.n	b4 <<[u8] as core::slice::SliceOrd<u8>>::compare+0xb4>
  ac:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5404
  ae:	f88d 003b 	strb.w	r0, [sp, #59]	; 0x3b
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5401
  b2:	e7ff      	b.n	b4 <<[u8] as core::slice::SliceOrd<u8>>::compare+0xb4>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5399
  b4:	e7ff      	b.n	b6 <<[u8] as core::slice::SliceOrd<u8>>::compare+0xb6>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5406
  b6:	f89d 003b 	ldrb.w	r0, [sp, #59]	; 0x3b
  ba:	b012      	add	sp, #72	; 0x48
  bc:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h057cde8b8b4c63d0E:

00000000 <<[A] as core::slice::SlicePartialEq<A>>::equal>:
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h057cde8b8b4c63d0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5311
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b092      	sub	sp, #72	; 0x48
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	900c      	str	r0, [sp, #48]	; 0x30
   e:	910d      	str	r1, [sp, #52]	; 0x34
  10:	920e      	str	r2, [sp, #56]	; 0x38
  12:	930f      	str	r3, [sp, #60]	; 0x3c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5312
  14:	980c      	ldr	r0, [sp, #48]	; 0x30
  16:	990d      	ldr	r1, [sp, #52]	; 0x34
  18:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
  1c:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
  20:	9409      	str	r4, [sp, #36]	; 0x24
  22:	9508      	str	r5, [sp, #32]
  24:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  28:	9007      	str	r0, [sp, #28]
  2a:	e7ff      	b.n	2c <<[A] as core::slice::SlicePartialEq<A>>::equal+0x2c>
  2c:	980e      	ldr	r0, [sp, #56]	; 0x38
  2e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  30:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  34:	9006      	str	r0, [sp, #24]
  36:	e7ff      	b.n	38 <<[A] as core::slice::SlicePartialEq<A>>::equal+0x38>
  38:	9807      	ldr	r0, [sp, #28]
  3a:	9906      	ldr	r1, [sp, #24]
  3c:	4288      	cmp	r0, r1
  3e:	d008      	beq.n	52 <<[A] as core::slice::SlicePartialEq<A>>::equal+0x52>
  40:	e7ff      	b.n	42 <<[A] as core::slice::SlicePartialEq<A>>::equal+0x42>
  42:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5313
  44:	f88d 0043 	strb.w	r0, [sp, #67]	; 0x43
  48:	e7ff      	b.n	4a <<[A] as core::slice::SlicePartialEq<A>>::equal+0x4a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5323
  4a:	f89d 0043 	ldrb.w	r0, [sp, #67]	; 0x43
  4e:	b012      	add	sp, #72	; 0x48
  50:	bdb0      	pop	{r4, r5, r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  52:	980c      	ldr	r0, [sp, #48]	; 0x30
  54:	990d      	ldr	r1, [sp, #52]	; 0x34
  56:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  5a:	9005      	str	r0, [sp, #20]
  5c:	e7ff      	b.n	5e <<[A] as core::slice::SlicePartialEq<A>>::equal+0x5e>
  5e:	980e      	ldr	r0, [sp, #56]	; 0x38
  60:	990f      	ldr	r1, [sp, #60]	; 0x3c
  62:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  66:	9004      	str	r0, [sp, #16]
  68:	e7ff      	b.n	6a <<[A] as core::slice::SlicePartialEq<A>>::equal+0x6a>
  6a:	9805      	ldr	r0, [sp, #20]
  6c:	9904      	ldr	r1, [sp, #16]
  6e:	4288      	cmp	r0, r1
  70:	d104      	bne.n	7c <<[A] as core::slice::SlicePartialEq<A>>::equal+0x7c>
  72:	e7ff      	b.n	74 <<[A] as core::slice::SlicePartialEq<A>>::equal+0x74>
  74:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5316
  76:	f88d 0043 	strb.w	r0, [sp, #67]	; 0x43
  7a:	e7e6      	b.n	4a <<[A] as core::slice::SlicePartialEq<A>>::equal+0x4a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5319
  7c:	980c      	ldr	r0, [sp, #48]	; 0x30
  7e:	990d      	ldr	r1, [sp, #52]	; 0x34
  80:	f7ff fffe 	bl	0 <core::mem::size_of_val>
  84:	9011      	str	r0, [sp, #68]	; 0x44
  86:	e7ff      	b.n	88 <<[A] as core::slice::SlicePartialEq<A>>::equal+0x88>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  88:	980c      	ldr	r0, [sp, #48]	; 0x30
  8a:	990d      	ldr	r1, [sp, #52]	; 0x34
  8c:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  90:	9003      	str	r0, [sp, #12]
  92:	e7ff      	b.n	94 <<[A] as core::slice::SlicePartialEq<A>>::equal+0x94>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5321
  94:	980e      	ldr	r0, [sp, #56]	; 0x38
  96:	990f      	ldr	r1, [sp, #60]	; 0x3c
  98:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  9c:	9002      	str	r0, [sp, #8]
  9e:	e7ff      	b.n	a0 <<[A] as core::slice::SlicePartialEq<A>>::equal+0xa0>
  a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  a2:	9803      	ldr	r0, [sp, #12]
  a4:	9902      	ldr	r1, [sp, #8]
  a6:	f7ff fffe 	bl	0 <memcmp>
  aa:	9001      	str	r0, [sp, #4]
  ac:	e7ff      	b.n	ae <<[A] as core::slice::SlicePartialEq<A>>::equal+0xae>
  ae:	9801      	ldr	r0, [sp, #4]
  b0:	fab0 f180 	clz	r1, r0
  b4:	0949      	lsrs	r1, r1, #5
  b6:	f88d 1043 	strb.w	r1, [sp, #67]	; 0x43
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5323
  ba:	e7c6      	b.n	4a <<[A] as core::slice::SlicePartialEq<A>>::equal+0x4a>

Disassembly of section .text._ZN69_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialOrd$LT$A$GT$$GT$15partial_compare17h6ba743bedcd0f803E:

00000000 <<[A] as core::slice::SlicePartialOrd<A>>::partial_compare>:
_ZN69_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialOrd$LT$A$GT$$GT$15partial_compare17h6ba743bedcd0f803E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5357
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9005      	str	r0, [sp, #20]
   e:	9106      	str	r1, [sp, #24]
  10:	9207      	str	r2, [sp, #28]
  12:	9308      	str	r3, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5358
  14:	9805      	ldr	r0, [sp, #20]
  16:	9906      	ldr	r1, [sp, #24]
  18:	9a07      	ldr	r2, [sp, #28]
  1a:	9b08      	ldr	r3, [sp, #32]
  1c:	f8cd c010 	str.w	ip, [sp, #16]
  20:	f8cd e00c 	str.w	lr, [sp, #12]
  24:	9402      	str	r4, [sp, #8]
  26:	9501      	str	r5, [sp, #4]
  28:	f7ff fffe 	bl	0 <<[A] as core::slice::SlicePartialOrd<A>>::partial_compare>
  2c:	9000      	str	r0, [sp, #0]
  2e:	e7ff      	b.n	30 <<[A] as core::slice::SlicePartialOrd<A>>::partial_compare+0x30>
  30:	9800      	ldr	r0, [sp, #0]
  32:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5359
  36:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  3a:	b00a      	add	sp, #40	; 0x28
  3c:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5b03571f561305fbE:

00000000 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next>:
_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5b03571f561305fbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3079
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9006      	str	r0, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3082
   8:	9806      	ldr	r0, [sp, #24]
   a:	6800      	ldr	r0, [r0, #0]
   c:	9105      	str	r1, [sp, #20]
   e:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::is_null>
  12:	9004      	str	r0, [sp, #16]
  14:	e7ff      	b.n	16 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x16>
  16:	e7ff      	b.n	18 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3083
  18:	f7ff fffe 	bl	0 <core::mem::size_of>
  1c:	9003      	str	r0, [sp, #12]
  1e:	e7ff      	b.n	20 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x20>
  20:	9803      	ldr	r0, [sp, #12]
  22:	2800      	cmp	r0, #0
  24:	d008      	beq.n	38 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x38>
  26:	e7ff      	b.n	28 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3084
  28:	9806      	ldr	r0, [sp, #24]
  2a:	6840      	ldr	r0, [r0, #4]
  2c:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::is_null>
  30:	9002      	str	r0, [sp, #8]
  32:	e7ff      	b.n	34 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x34>
  34:	e7ff      	b.n	36 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x36>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3083
  36:	e7ff      	b.n	38 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x38>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2996
  38:	9806      	ldr	r0, [sp, #24]
  3a:	6801      	ldr	r1, [r0, #0]
  3c:	6840      	ldr	r0, [r0, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3086
  3e:	4281      	cmp	r1, r0
  40:	d103      	bne.n	4a <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x4a>
  42:	e7ff      	b.n	44 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x44>
  44:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3087
  46:	9007      	str	r0, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3086
  48:	e027      	b.n	9a <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x9a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3089
  4a:	9806      	ldr	r0, [sp, #24]
  4c:	9008      	str	r0, [sp, #32]
  4e:	2001      	movs	r0, #1
  50:	9009      	str	r0, [sp, #36]	; 0x24
_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17h8173d75d391cb595E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3035
  52:	f7ff fffe 	bl	0 <core::mem::size_of>
  56:	2800      	cmp	r0, #0
  58:	d10c      	bne.n	74 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x74>
  5a:	e7ff      	b.n	5c <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x5c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3037
  5c:	9808      	ldr	r0, [sp, #32]
  5e:	6840      	ldr	r0, [r0, #4]
  60:	9909      	ldr	r1, [sp, #36]	; 0x24
  62:	4249      	negs	r1, r1
  64:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::wrapping_offset>
  68:	9908      	ldr	r1, [sp, #32]
  6a:	6048      	str	r0, [r1, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3038
  6c:	9808      	ldr	r0, [sp, #32]
  6e:	6800      	ldr	r0, [r0, #0]
  70:	900a      	str	r0, [sp, #40]	; 0x28
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3035
  72:	e00c      	b.n	8e <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x8e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3040
  74:	9808      	ldr	r0, [sp, #32]
  76:	6800      	ldr	r0, [r0, #0]
  78:	900b      	str	r0, [sp, #44]	; 0x2c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3041
  7a:	9808      	ldr	r0, [sp, #32]
  7c:	6800      	ldr	r0, [r0, #0]
  7e:	9909      	ldr	r1, [sp, #36]	; 0x24
  80:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
  84:	9908      	ldr	r1, [sp, #32]
  86:	6008      	str	r0, [r1, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3042
  88:	980b      	ldr	r0, [sp, #44]	; 0x2c
  8a:	900a      	str	r0, [sp, #40]	; 0x28
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3035
  8c:	e7ff      	b.n	8e <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x8e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3044
  8e:	980a      	ldr	r0, [sp, #40]	; 0x28
_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5b03571f561305fbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3089
  90:	9001      	str	r0, [sp, #4]
  92:	e7ff      	b.n	94 <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x94>
  94:	9801      	ldr	r0, [sp, #4]
  96:	9007      	str	r0, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3086
  98:	e7ff      	b.n	9a <<core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next+0x9a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3092
  9a:	9807      	ldr	r0, [sp, #28]
  9c:	b00c      	add	sp, #48	; 0x30
  9e:	bd80      	pop	{r7, pc}

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.3.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.3
0000014a l       .debug_str	00000000 
00000467 l       .debug_str	00000000 
0000060c l       .debug_str	00000000 
00000463 l       .debug_str	00000000 
00000459 l       .debug_str	00000000 
0000060a l       .debug_str	00000000 
000003db l       .debug_str	00000000 
000003cf l       .debug_str	00000000 
00000338 l       .debug_str	00000000 
0000032d l       .debug_str	00000000 
000005e5 l       .debug_str	00000000 
00000329 l       .debug_str	00000000 
000005e3 l       .debug_str	00000000 
00000324 l       .debug_str	00000000 
00000322 l       .debug_str	00000000 
000005df l       .debug_str	00000000 
0000031d l       .debug_str	00000000 
000005dd l       .debug_str	00000000 
00000316 l       .debug_str	00000000 
000005d8 l       .debug_str	00000000 
0000029d l       .debug_str	00000000 
00000296 l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
0000052c l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
0000049e l       .debug_str	00000000 
000001f4 l       .debug_str	00000000 
00000479 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011c l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
00000191 l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
00000158 l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
0000046b l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.0	00000018 .Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.0
00000000 l     O .rodata..Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.1	00000018 .Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.1
00000000 l     O .rodata..Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.2	00000018 .Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.2
00000000 l     O .rodata..Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.3	00000010 .Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.3
00000000 l     O .rodata..Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.4	00000010 .Lanon.7aeed1aa4ab66d2384df09c04d3c0bf5.4
00000000 l     F .text._ZN9cstr_core5ascii14escape_default6hexify17h4fd1a5ce1438404aE	00000098 cstr_core::ascii::escape_default::hexify
00000000 l     O .rodata.str.0	00000059 str.0
00000000 l     O .rodata.str.1	0000001c str.1
00000000 l     O .rodata.str.2	00000021 str.2
00000000 l    d  .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdfc278e66f12109eE	00000000 .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdfc278e66f12109eE
00000000 l    d  .text._ZN9cstr_core5ascii14escape_default17haf4fc2c6bbc21c94E	00000000 .text._ZN9cstr_core5ascii14escape_default17haf4fc2c6bbc21c94E
00000000 l    d  .text._ZN9cstr_core5ascii14escape_default6hexify17h4fd1a5ce1438404aE	00000000 .text._ZN9cstr_core5ascii14escape_default6hexify17h4fd1a5ce1438404aE
00000000 l    d  .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he502a57363e9784cE	00000000 .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he502a57363e9784cE
00000000 l    d  .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17ha8f568982775176eE	00000000 .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17ha8f568982775176eE
00000000 l    d  .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hf1330d20ece1dcf2E	00000000 .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hf1330d20ece1dcf2E
00000000 l    d  .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h01722c302ac0692dE	00000000 .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h01722c302ac0692dE
00000000 l    d  .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h84b2d10969ac6b8dE	00000000 .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h84b2d10969ac6b8dE
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata.str.2	00000000 .rodata.str.2
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h01722c302ac0692dE	00000036 <cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
00000000 g     F .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h84b2d10969ac6b8dE	00000038 .hidden <cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
00000000         *UND*	00000000 core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
00000000         *UND*	00000000 core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint
00000000         *UND*	00000000 core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
00000000         *UND*	00000000 core::option::Option<T>::map
00000000         *UND*	00000000 core::option::Option<T>::map
00000000         *UND*	00000000 core::panicking::panic_bounds_check
00000000         *UND*	00000000 core::panicking::panic
00000000 g     F .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdfc278e66f12109eE	00000024 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000 g     F .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he502a57363e9784cE	00000036 <cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next
00000000 g     F .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17ha8f568982775176eE	00000038 .hidden <cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::{{closure}}
00000000 g     F .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hf1330d20ece1dcf2E	0000001a <cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::size_hint
00000000 g     F .text._ZN9cstr_core5ascii14escape_default17haf4fc2c6bbc21c94E	000001ac .hidden cstr_core::ascii::escape_default



Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdfc278e66f12109eE:

00000000 <<I as core::iter::traits::collect::IntoIterator>::into_iter>:
_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdfc278e66f12109eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:245
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:246
   8:	f8d1 c000 	ldr.w	ip, [r1]
   c:	f8d1 e004 	ldr.w	lr, [r1, #4]
  10:	6889      	ldr	r1, [r1, #8]
  12:	6081      	str	r1, [r0, #8]
  14:	f8c0 e004 	str.w	lr, [r0, #4]
  18:	f8c0 c000 	str.w	ip, [r0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:247
  1c:	9201      	str	r2, [sp, #4]
  1e:	9300      	str	r3, [sp, #0]
  20:	b002      	add	sp, #8
  22:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN9cstr_core5ascii14escape_default17haf4fc2c6bbc21c94E:

00000000 <cstr_core::ascii::escape_default>:
_ZN9cstr_core5ascii14escape_default17haf4fc2c6bbc21c94E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:126
    /// assert_eq!(b'\\', escaped.next().unwrap());
    /// assert_eq!(b'x', escaped.next().unwrap());
    /// assert_eq!(b'9', escaped.next().unwrap());
    /// assert_eq!(b'd', escaped.next().unwrap());
    /// ```
    pub fn escape_default(c: u8) -> EscapeDefault {
   0:	b580      	push	{r7, lr}
   2:	b096      	sub	sp, #88	; 0x58
   4:	460a      	mov	r2, r1
   6:	f88d 101b 	strb.w	r1, [sp, #27]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:128
        let (data, len) = match c {
            b'\t' => ([b'\\', b't', 0, 0], 2),
   a:	f89d 101b 	ldrb.w	r1, [sp, #27]
   e:	460b      	mov	r3, r1
  10:	2909      	cmp	r1, #9
  12:	9205      	str	r2, [sp, #20]
  14:	9004      	str	r0, [sp, #16]
  16:	9303      	str	r3, [sp, #12]
  18:	d038      	beq.n	8c <cstr_core::ascii::escape_default+0x8c>
  1a:	e7ff      	b.n	1c <cstr_core::ascii::escape_default+0x1c>
  1c:	9803      	ldr	r0, [sp, #12]
  1e:	b2c1      	uxtb	r1, r0
  20:	290a      	cmp	r1, #10
  22:	d053      	beq.n	cc <cstr_core::ascii::escape_default+0xcc>
  24:	e7ff      	b.n	26 <cstr_core::ascii::escape_default+0x26>
  26:	9803      	ldr	r0, [sp, #12]
  28:	b2c1      	uxtb	r1, r0
  2a:	290d      	cmp	r1, #13
  2c:	d03e      	beq.n	ac <cstr_core::ascii::escape_default+0xac>
  2e:	e7ff      	b.n	30 <cstr_core::ascii::escape_default+0x30>
  30:	9803      	ldr	r0, [sp, #12]
  32:	b2c1      	uxtb	r1, r0
  34:	2922      	cmp	r1, #34	; 0x22
  36:	d078      	beq.n	12a <cstr_core::ascii::escape_default+0x12a>
  38:	e7ff      	b.n	3a <cstr_core::ascii::escape_default+0x3a>
  3a:	9803      	ldr	r0, [sp, #12]
  3c:	b2c1      	uxtb	r1, r0
  3e:	2927      	cmp	r1, #39	; 0x27
  40:	d063      	beq.n	10a <cstr_core::ascii::escape_default+0x10a>
  42:	e7ff      	b.n	44 <cstr_core::ascii::escape_default+0x44>
  44:	9803      	ldr	r0, [sp, #12]
  46:	b2c1      	uxtb	r1, r0
  48:	295c      	cmp	r1, #92	; 0x5c
  4a:	d04f      	beq.n	ec <cstr_core::ascii::escape_default+0xec>
  4c:	e014      	b.n	78 <cstr_core::ascii::escape_default+0x78>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:134
            b'\r' => ([b'\\', b'r', 0, 0], 2),
            b'\n' => ([b'\\', b'n', 0, 0], 2),
            b'\\' => ([b'\\', b'\\', 0, 0], 2),
            b'\'' => ([b'\\', b'\'', 0, 0], 2),
            b'"' => ([b'\\', b'"', 0, 0], 2),
            b'\x20'...b'\x7e' => ([c, 0, 0, 0], 1),
  4e:	f89d 001b 	ldrb.w	r0, [sp, #27]
  52:	f88d 0044 	strb.w	r0, [sp, #68]	; 0x44
  56:	2000      	movs	r0, #0
  58:	f88d 0045 	strb.w	r0, [sp, #69]	; 0x45
  5c:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
  60:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
  64:	9811      	ldr	r0, [sp, #68]	; 0x44
  66:	9009      	str	r0, [sp, #36]	; 0x24
  68:	2001      	movs	r0, #1
  6a:	900a      	str	r0, [sp, #40]	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:127
        let (data, len) = match c {
  6c:	e08b      	b.n	186 <cstr_core::ascii::escape_default+0x186>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:135
            _ => ([b'\\', b'x', hexify(c >> 4), hexify(c & 0xf)], 4),
  6e:	f89d 001b 	ldrb.w	r0, [sp, #27]
  72:	0900      	lsrs	r0, r0, #4
  74:	9002      	str	r0, [sp, #8]
  76:	e068      	b.n	14a <cstr_core::ascii::escape_default+0x14a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:134
            b'\x20'...b'\x7e' => ([c, 0, 0, 0], 1),
  78:	f89d 001b 	ldrb.w	r0, [sp, #27]
  7c:	2820      	cmp	r0, #32
  7e:	d3f6      	bcc.n	6e <cstr_core::ascii::escape_default+0x6e>
  80:	e7ff      	b.n	82 <cstr_core::ascii::escape_default+0x82>
  82:	f89d 001b 	ldrb.w	r0, [sp, #27]
  86:	287f      	cmp	r0, #127	; 0x7f
  88:	d3e1      	bcc.n	4e <cstr_core::ascii::escape_default+0x4e>
  8a:	e7f0      	b.n	6e <cstr_core::ascii::escape_default+0x6e>
  8c:	205c      	movs	r0, #92	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:128
            b'\t' => ([b'\\', b't', 0, 0], 2),
  8e:	f88d 002c 	strb.w	r0, [sp, #44]	; 0x2c
  92:	2074      	movs	r0, #116	; 0x74
  94:	f88d 002d 	strb.w	r0, [sp, #45]	; 0x2d
  98:	2000      	movs	r0, #0
  9a:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  9e:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
  a4:	9009      	str	r0, [sp, #36]	; 0x24
  a6:	2002      	movs	r0, #2
  a8:	900a      	str	r0, [sp, #40]	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:127
        let (data, len) = match c {
  aa:	e06c      	b.n	186 <cstr_core::ascii::escape_default+0x186>
  ac:	205c      	movs	r0, #92	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:129
            b'\r' => ([b'\\', b'r', 0, 0], 2),
  ae:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
  b2:	2072      	movs	r0, #114	; 0x72
  b4:	f88d 0031 	strb.w	r0, [sp, #49]	; 0x31
  b8:	2000      	movs	r0, #0
  ba:	f88d 0032 	strb.w	r0, [sp, #50]	; 0x32
  be:	f88d 0033 	strb.w	r0, [sp, #51]	; 0x33
  c2:	980c      	ldr	r0, [sp, #48]	; 0x30
  c4:	9009      	str	r0, [sp, #36]	; 0x24
  c6:	2002      	movs	r0, #2
  c8:	900a      	str	r0, [sp, #40]	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:127
        let (data, len) = match c {
  ca:	e05c      	b.n	186 <cstr_core::ascii::escape_default+0x186>
  cc:	205c      	movs	r0, #92	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:130
            b'\n' => ([b'\\', b'n', 0, 0], 2),
  ce:	f88d 0034 	strb.w	r0, [sp, #52]	; 0x34
  d2:	206e      	movs	r0, #110	; 0x6e
  d4:	f88d 0035 	strb.w	r0, [sp, #53]	; 0x35
  d8:	2000      	movs	r0, #0
  da:	f88d 0036 	strb.w	r0, [sp, #54]	; 0x36
  de:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  e2:	980d      	ldr	r0, [sp, #52]	; 0x34
  e4:	9009      	str	r0, [sp, #36]	; 0x24
  e6:	2002      	movs	r0, #2
  e8:	900a      	str	r0, [sp, #40]	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:127
        let (data, len) = match c {
  ea:	e04c      	b.n	186 <cstr_core::ascii::escape_default+0x186>
  ec:	205c      	movs	r0, #92	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:131
            b'\\' => ([b'\\', b'\\', 0, 0], 2),
  ee:	f88d 0038 	strb.w	r0, [sp, #56]	; 0x38
  f2:	f88d 0039 	strb.w	r0, [sp, #57]	; 0x39
  f6:	2000      	movs	r0, #0
  f8:	f88d 003a 	strb.w	r0, [sp, #58]	; 0x3a
  fc:	f88d 003b 	strb.w	r0, [sp, #59]	; 0x3b
 100:	980e      	ldr	r0, [sp, #56]	; 0x38
 102:	9009      	str	r0, [sp, #36]	; 0x24
 104:	2002      	movs	r0, #2
 106:	900a      	str	r0, [sp, #40]	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:127
        let (data, len) = match c {
 108:	e03d      	b.n	186 <cstr_core::ascii::escape_default+0x186>
 10a:	205c      	movs	r0, #92	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:132
            b'\'' => ([b'\\', b'\'', 0, 0], 2),
 10c:	f88d 003c 	strb.w	r0, [sp, #60]	; 0x3c
 110:	2027      	movs	r0, #39	; 0x27
 112:	f88d 003d 	strb.w	r0, [sp, #61]	; 0x3d
 116:	2000      	movs	r0, #0
 118:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
 11c:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
 120:	980f      	ldr	r0, [sp, #60]	; 0x3c
 122:	9009      	str	r0, [sp, #36]	; 0x24
 124:	2002      	movs	r0, #2
 126:	900a      	str	r0, [sp, #40]	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:127
        let (data, len) = match c {
 128:	e02d      	b.n	186 <cstr_core::ascii::escape_default+0x186>
 12a:	205c      	movs	r0, #92	; 0x5c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:133
            b'"' => ([b'\\', b'"', 0, 0], 2),
 12c:	f88d 0040 	strb.w	r0, [sp, #64]	; 0x40
 130:	2022      	movs	r0, #34	; 0x22
 132:	f88d 0041 	strb.w	r0, [sp, #65]	; 0x41
 136:	2000      	movs	r0, #0
 138:	f88d 0042 	strb.w	r0, [sp, #66]	; 0x42
 13c:	f88d 0043 	strb.w	r0, [sp, #67]	; 0x43
 140:	9810      	ldr	r0, [sp, #64]	; 0x40
 142:	9009      	str	r0, [sp, #36]	; 0x24
 144:	2002      	movs	r0, #2
 146:	900a      	str	r0, [sp, #40]	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:127
        let (data, len) = match c {
 148:	e01d      	b.n	186 <cstr_core::ascii::escape_default+0x186>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:135
            _ => ([b'\\', b'x', hexify(c >> 4), hexify(c & 0xf)], 4),
 14a:	9802      	ldr	r0, [sp, #8]
 14c:	f7ff fffe 	bl	0 <cstr_core::ascii::escape_default>
 150:	9001      	str	r0, [sp, #4]
 152:	e7ff      	b.n	154 <cstr_core::ascii::escape_default+0x154>
 154:	f89d 001b 	ldrb.w	r0, [sp, #27]
 158:	f000 000f 	and.w	r0, r0, #15
 15c:	f7ff fffe 	bl	0 <cstr_core::ascii::escape_default>
 160:	9000      	str	r0, [sp, #0]
 162:	e7ff      	b.n	164 <cstr_core::ascii::escape_default+0x164>
 164:	205c      	movs	r0, #92	; 0x5c
 166:	f88d 0048 	strb.w	r0, [sp, #72]	; 0x48
 16a:	2078      	movs	r0, #120	; 0x78
 16c:	f88d 0049 	strb.w	r0, [sp, #73]	; 0x49
 170:	9801      	ldr	r0, [sp, #4]
 172:	f88d 004a 	strb.w	r0, [sp, #74]	; 0x4a
 176:	9900      	ldr	r1, [sp, #0]
 178:	f88d 104b 	strb.w	r1, [sp, #75]	; 0x4b
 17c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 17e:	9209      	str	r2, [sp, #36]	; 0x24
 180:	2204      	movs	r2, #4
 182:	920a      	str	r2, [sp, #40]	; 0x28
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:127
        let (data, len) = match c {
 184:	e7ff      	b.n	186 <cstr_core::ascii::escape_default+0x186>
 186:	9809      	ldr	r0, [sp, #36]	; 0x24
 188:	9007      	str	r0, [sp, #28]
 18a:	980a      	ldr	r0, [sp, #40]	; 0x28
 18c:	9008      	str	r0, [sp, #32]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:139
        };

        return EscapeDefault {
            range: (0..len),
 18e:	9808      	ldr	r0, [sp, #32]
 190:	2100      	movs	r1, #0
 192:	9113      	str	r1, [sp, #76]	; 0x4c
 194:	9014      	str	r0, [sp, #80]	; 0x50
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:140
            data: data,
 196:	9807      	ldr	r0, [sp, #28]
 198:	9015      	str	r0, [sp, #84]	; 0x54
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:138
        return EscapeDefault {
 19a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 19c:	9914      	ldr	r1, [sp, #80]	; 0x50
 19e:	9a04      	ldr	r2, [sp, #16]
 1a0:	6010      	str	r0, [r2, #0]
 1a2:	6051      	str	r1, [r2, #4]
 1a4:	9815      	ldr	r0, [sp, #84]	; 0x54
 1a6:	6090      	str	r0, [r2, #8]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:149
            match b {
                0...9 => b'0' + b,
                _ => b'a' + b - 10,
            }
        }
    }
 1a8:	b016      	add	sp, #88	; 0x58
 1aa:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN9cstr_core5ascii14escape_default6hexify17h4fd1a5ce1438404aE:

00000000 <cstr_core::ascii::escape_default::hexify>:
_ZN9cstr_core5ascii14escape_default6hexify17h4fd1a5ce1438404aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:143
        fn hexify(b: u8) -> u8 {
   0:	b086      	sub	sp, #24
   2:	4601      	mov	r1, r0
   4:	f88d 0016 	strb.w	r0, [sp, #22]
   8:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:145
                0...9 => b'0' + b,
   a:	2800      	cmp	r0, #0
   c:	9104      	str	r1, [sp, #16]
   e:	d109      	bne.n	24 <cstr_core::ascii::escape_default::hexify+0x24>
  10:	e011      	b.n	36 <cstr_core::ascii::escape_default::hexify+0x36>
  12:	f89d 0016 	ldrb.w	r0, [sp, #22]
  16:	3030      	adds	r0, #48	; 0x30
  18:	b2c1      	uxtb	r1, r0
  1a:	4602      	mov	r2, r0
  1c:	4281      	cmp	r1, r0
  1e:	9203      	str	r2, [sp, #12]
  20:	d125      	bne.n	6e <cstr_core::ascii::escape_default::hexify+0x6e>
  22:	e004      	b.n	2e <cstr_core::ascii::escape_default::hexify+0x2e>
  24:	f89d 0016 	ldrb.w	r0, [sp, #22]
  28:	280a      	cmp	r0, #10
  2a:	d3f2      	bcc.n	12 <cstr_core::ascii::escape_default::hexify+0x12>
  2c:	e003      	b.n	36 <cstr_core::ascii::escape_default::hexify+0x36>
  2e:	9803      	ldr	r0, [sp, #12]
  30:	f88d 0017 	strb.w	r0, [sp, #23]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:144
            match b {
  34:	e017      	b.n	66 <cstr_core::ascii::escape_default::hexify+0x66>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:146
                _ => b'a' + b - 10,
  36:	f89d 0016 	ldrb.w	r0, [sp, #22]
  3a:	3061      	adds	r0, #97	; 0x61
  3c:	b2c1      	uxtb	r1, r0
  3e:	4602      	mov	r2, r0
  40:	4281      	cmp	r1, r0
  42:	9202      	str	r2, [sp, #8]
  44:	d11a      	bne.n	7c <cstr_core::ascii::escape_default::hexify+0x7c>
  46:	e7ff      	b.n	48 <cstr_core::ascii::escape_default::hexify+0x48>
  48:	f06f 0009 	mvn.w	r0, #9
  4c:	9902      	ldr	r1, [sp, #8]
  4e:	fa50 f081 	uxtab	r0, r0, r1
  52:	b2c2      	uxtb	r2, r0
  54:	4603      	mov	r3, r0
  56:	4282      	cmp	r2, r0
  58:	9301      	str	r3, [sp, #4]
  5a:	d116      	bne.n	8a <cstr_core::ascii::escape_default::hexify+0x8a>
  5c:	e7ff      	b.n	5e <cstr_core::ascii::escape_default::hexify+0x5e>
  5e:	9801      	ldr	r0, [sp, #4]
  60:	f88d 0017 	strb.w	r0, [sp, #23]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:144
            match b {
  64:	e7ff      	b.n	66 <cstr_core::ascii::escape_default::hexify+0x66>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:148
        }
  66:	f89d 0017 	ldrb.w	r0, [sp, #23]
  6a:	b006      	add	sp, #24
  6c:	4770      	bx	lr
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:145
                0...9 => b'0' + b,
  6e:	f240 0000 	movw	r0, #0
  72:	f2c0 0000 	movt	r0, #0
  76:	f7ff fffe 	bl	0 <core::panicking::panic>
  7a:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:146
                _ => b'a' + b - 10,
  7c:	f240 0000 	movw	r0, #0
  80:	f2c0 0000 	movt	r0, #0
  84:	f7ff fffe 	bl	0 <core::panicking::panic>
  88:	defe      	udf	#254	; 0xfe
  8a:	f240 0000 	movw	r0, #0
  8e:	f2c0 0000 	movt	r0, #0
  92:	f7ff fffe 	bl	0 <core::panicking::panic>
  96:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he502a57363e9784cE:

00000000 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next>:
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he502a57363e9784cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:153

    impl Iterator for EscapeDefault {
        type Item = u8;
        fn next(&mut self) -> Option<u8> {
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4601      	mov	r1, r0
   6:	9006      	str	r0, [sp, #24]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:154
            self.range.next().map(|i| self.data[i])
   8:	9806      	ldr	r0, [sp, #24]
   a:	9105      	str	r1, [sp, #20]
   c:	f7ff fffe 	bl	0 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next>
  10:	9004      	str	r0, [sp, #16]
  12:	9103      	str	r1, [sp, #12]
  14:	e7ff      	b.n	16 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next+0x16>
  16:	a806      	add	r0, sp, #24
  18:	9007      	str	r0, [sp, #28]
  1a:	9a07      	ldr	r2, [sp, #28]
  1c:	9804      	ldr	r0, [sp, #16]
  1e:	9903      	ldr	r1, [sp, #12]
  20:	f7ff fffe 	bl	0 <core::option::Option<T>::map>
  24:	9002      	str	r0, [sp, #8]
  26:	9101      	str	r1, [sp, #4]
  28:	e7ff      	b.n	2a <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next+0x2a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:155
        }
  2a:	9802      	ldr	r0, [sp, #8]
  2c:	f000 0001 	and.w	r0, r0, #1
  30:	9901      	ldr	r1, [sp, #4]
  32:	b008      	add	sp, #32
  34:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17ha8f568982775176eE:

00000000 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::{{closure}}>:
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17ha8f568982775176eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:154
            self.range.next().map(|i| self.data[i])
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
   a:	9805      	ldr	r0, [sp, #20]
   c:	2803      	cmp	r0, #3
   e:	9203      	str	r2, [sp, #12]
  10:	9302      	str	r3, [sp, #8]
  12:	9001      	str	r0, [sp, #4]
  14:	d807      	bhi.n	26 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::{{closure}}+0x26>
  16:	e7ff      	b.n	18 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::{{closure}}+0x18>
  18:	9804      	ldr	r0, [sp, #16]
  1a:	6800      	ldr	r0, [r0, #0]
  1c:	9901      	ldr	r1, [sp, #4]
  1e:	4408      	add	r0, r1
  20:	7a00      	ldrb	r0, [r0, #8]
  22:	b006      	add	sp, #24
  24:	4770      	bx	lr
  26:	f240 0000 	movw	r0, #0
  2a:	f2c0 0000 	movt	r0, #0
  2e:	2204      	movs	r2, #4
  30:	9901      	ldr	r1, [sp, #4]
  32:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
  36:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hf1330d20ece1dcf2E:

00000000 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::size_hint>:
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hf1330d20ece1dcf2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:156
        fn size_hint(&self) -> (usize, Option<usize>) {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9103      	str	r1, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:157
            self.range.size_hint()
   a:	9903      	ldr	r1, [sp, #12]
   c:	9202      	str	r2, [sp, #8]
   e:	9301      	str	r3, [sp, #4]
  10:	f7ff fffe 	bl	0 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint>
  14:	e7ff      	b.n	16 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::size_hint+0x16>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:158
        }
  16:	b004      	add	sp, #16
  18:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h01722c302ac0692dE:

00000000 <<cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back>:
_ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h01722c302ac0692dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:161
    }
    impl DoubleEndedIterator for EscapeDefault {
        fn next_back(&mut self) -> Option<u8> {
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4601      	mov	r1, r0
   6:	9006      	str	r0, [sp, #24]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:162
            self.range.next_back().map(|i| self.data[i])
   8:	9806      	ldr	r0, [sp, #24]
   a:	9105      	str	r1, [sp, #20]
   c:	f7ff fffe 	bl	0 <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back>
  10:	9004      	str	r0, [sp, #16]
  12:	9103      	str	r1, [sp, #12]
  14:	e7ff      	b.n	16 <<cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back+0x16>
  16:	a806      	add	r0, sp, #24
  18:	9007      	str	r0, [sp, #28]
  1a:	9a07      	ldr	r2, [sp, #28]
  1c:	9804      	ldr	r0, [sp, #16]
  1e:	9903      	ldr	r1, [sp, #12]
  20:	f7ff fffe 	bl	0 <core::option::Option<T>::map>
  24:	9002      	str	r0, [sp, #8]
  26:	9101      	str	r1, [sp, #4]
  28:	e7ff      	b.n	2a <<cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back+0x2a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:163
        }
  2a:	9802      	ldr	r0, [sp, #8]
  2c:	f000 0001 	and.w	r0, r0, #1
  30:	9901      	ldr	r1, [sp, #4]
  32:	b008      	add	sp, #32
  34:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h84b2d10969ac6b8dE:

00000000 <<cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}>:
_ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h84b2d10969ac6b8dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:162
            self.range.next_back().map(|i| self.data[i])
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
   a:	9805      	ldr	r0, [sp, #20]
   c:	2803      	cmp	r0, #3
   e:	9203      	str	r2, [sp, #12]
  10:	9302      	str	r3, [sp, #8]
  12:	9001      	str	r0, [sp, #4]
  14:	d807      	bhi.n	26 <<cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}+0x26>
  16:	e7ff      	b.n	18 <<cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}+0x18>
  18:	9804      	ldr	r0, [sp, #16]
  1a:	6800      	ldr	r0, [r0, #0]
  1c:	9901      	ldr	r1, [sp, #4]
  1e:	4408      	add	r0, r1
  20:	7a00      	ldrb	r0, [r0, #8]
  22:	b006      	add	sp, #24
  24:	4770      	bx	lr
  26:	f240 0000 	movw	r0, #0
  2a:	f2c0 0000 	movt	r0, #0
  2e:	2204      	movs	r2, #4
  30:	9901      	ldr	r1, [sp, #4]
  32:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
  36:	defe      	udf	#254	; 0xfe

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.4.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.4
00000155 l       .debug_str	00000000 
000003ac l       .debug_str	00000000 
0000042d l       .debug_str	00000000 
00000384 l       .debug_str	00000000 
0000042b l       .debug_str	00000000 
00000348 l       .debug_str	00000000 
00000429 l       .debug_str	00000000 
0000030f l       .debug_str	00000000 
00000424 l       .debug_str	00000000 
00000304 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000108 l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
00000111 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
00000131 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
00000147 l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
000002ee l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
0000016b l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001da l       .debug_str	00000000 
00000207 l       .debug_str	00000000 
00000209 l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
0000021e l       .debug_str	00000000 
00000220 l       .debug_str	00000000 
00000259 l       .debug_str	00000000 
0000028f l       .debug_str	00000000 
000002b5 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$3map17h1c88a8b06ac8a532E	00000000 .text._ZN4core6option15Option$LT$T$GT$3map17h1c88a8b06ac8a532E
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$3map17h3e6cd78091198138E	00000000 .text._ZN4core6option15Option$LT$T$GT$3map17h3e6cd78091198138E
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$3map17he1300604eb3dfff8E	00000000 .text._ZN4core6option15Option$LT$T$GT$3map17he1300604eb3dfff8E
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$6as_mut17h9d6985ad4fcc64c5E	00000000 .text._ZN4core6option15Option$LT$T$GT$6as_mut17h9d6985ad4fcc64c5E
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$8and_then17h313aeda502b1d13aE	00000000 .text._ZN4core6option15Option$LT$T$GT$8and_then17h313aeda502b1d13aE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 .hidden <cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
00000000         *UND*	00000000 <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next::{{closure}}
00000000         *UND*	00000000 core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$3map17h1c88a8b06ac8a532E	000000b4 core::option::Option<T>::map
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$3map17h3e6cd78091198138E	000000b4 core::option::Option<T>::map
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$3map17he1300604eb3dfff8E	000000b4 core::option::Option<T>::map
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$6as_mut17h9d6985ad4fcc64c5E	00000036 core::option::Option<T>::as_mut
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$8and_then17h313aeda502b1d13aE	000000a4 core::option::Option<T>::and_then
00000000         *UND*	00000000 .hidden <cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::{{closure}}



Disassembly of section .text._ZN4core6option15Option$LT$T$GT$3map17h1c88a8b06ac8a532E:

00000000 <core::option::Option<T>::map>:
_ZN4core6option15Option$LT$T$GT$3map17h1c88a8b06ac8a532E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:414
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	9104      	str	r1, [sp, #16]
   a:	9205      	str	r2, [sp, #20]
   c:	2100      	movs	r1, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:416
   e:	f88d 102e 	strb.w	r1, [sp, #46]	; 0x2e
  12:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  16:	2101      	movs	r1, #1
  18:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
  1c:	f88d 102e 	strb.w	r1, [sp, #46]	; 0x2e
  20:	9904      	ldr	r1, [sp, #16]
  22:	2900      	cmp	r1, #0
  24:	460a      	mov	r2, r1
  26:	bf18      	it	ne
  28:	2201      	movne	r2, #1
  2a:	2900      	cmp	r1, #0
  2c:	9303      	str	r3, [sp, #12]
  2e:	f8cd c008 	str.w	ip, [sp, #8]
  32:	9001      	str	r0, [sp, #4]
  34:	9200      	str	r2, [sp, #0]
  36:	d01e      	beq.n	76 <core::option::Option<T>::map+0x76>
  38:	e7ff      	b.n	3a <core::option::Option<T>::map+0x3a>
  3a:	9800      	ldr	r0, [sp, #0]
  3c:	2801      	cmp	r0, #1
  3e:	d001      	beq.n	44 <core::option::Option<T>::map+0x44>
  40:	e7ff      	b.n	42 <core::option::Option<T>::map+0x42>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:419
  42:	defe      	udf	#254	; 0xfe
  44:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:416
  46:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  4a:	9904      	ldr	r1, [sp, #16]
  4c:	9106      	str	r1, [sp, #24]
  4e:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  52:	9905      	ldr	r1, [sp, #20]
  54:	9806      	ldr	r0, [sp, #24]
  56:	900a      	str	r0, [sp, #40]	; 0x28
  58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  5a:	a807      	add	r0, sp, #28
  5c:	f7ff fffe 	bl	0 <core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once>
  60:	e7ff      	b.n	62 <core::option::Option<T>::map+0x62>
  62:	9807      	ldr	r0, [sp, #28]
  64:	9908      	ldr	r1, [sp, #32]
  66:	9a09      	ldr	r2, [sp, #36]	; 0x24
  68:	9b01      	ldr	r3, [sp, #4]
  6a:	60da      	str	r2, [r3, #12]
  6c:	6099      	str	r1, [r3, #8]
  6e:	6058      	str	r0, [r3, #4]
  70:	2001      	movs	r0, #1
  72:	6018      	str	r0, [r3, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:415
  74:	e00b      	b.n	8e <core::option::Option<T>::map+0x8e>
  76:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:417
  78:	9901      	ldr	r1, [sp, #4]
  7a:	6008      	str	r0, [r1, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:415
  7c:	e007      	b.n	8e <core::option::Option<T>::map+0x8e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:419
  7e:	9804      	ldr	r0, [sp, #16]
  80:	2800      	cmp	r0, #0
  82:	d10c      	bne.n	9e <core::option::Option<T>::map+0x9e>
  84:	e015      	b.n	b2 <core::option::Option<T>::map+0xb2>
  86:	2000      	movs	r0, #0
  88:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  8c:	e7f7      	b.n	7e <core::option::Option<T>::map+0x7e>
  8e:	f89d 002e 	ldrb.w	r0, [sp, #46]	; 0x2e
  92:	07c0      	lsls	r0, r0, #31
  94:	2800      	cmp	r0, #0
  96:	d1f6      	bne.n	86 <core::option::Option<T>::map+0x86>
  98:	e7f1      	b.n	7e <core::option::Option<T>::map+0x7e>
  9a:	b00c      	add	sp, #48	; 0x30
  9c:	bd80      	pop	{r7, pc}
  9e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
  a2:	07c0      	lsls	r0, r0, #31
  a4:	2800      	cmp	r0, #0
  a6:	d0f8      	beq.n	9a <core::option::Option<T>::map+0x9a>
  a8:	e7ff      	b.n	aa <core::option::Option<T>::map+0xaa>
  aa:	2000      	movs	r0, #0
  ac:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  b0:	e7f3      	b.n	9a <core::option::Option<T>::map+0x9a>
  b2:	e7f2      	b.n	9a <core::option::Option<T>::map+0x9a>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$3map17h3e6cd78091198138E:

00000000 <core::option::Option<T>::map>:
_ZN4core6option15Option$LT$T$GT$3map17h3e6cd78091198138E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:414
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
  10:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:416
  12:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  16:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  1a:	2001      	movs	r0, #1
  1c:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  20:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  24:	9805      	ldr	r0, [sp, #20]
  26:	2800      	cmp	r0, #0
  28:	9304      	str	r3, [sp, #16]
  2a:	f8cd c00c 	str.w	ip, [sp, #12]
  2e:	f8cd e008 	str.w	lr, [sp, #8]
  32:	9001      	str	r0, [sp, #4]
  34:	d01b      	beq.n	6e <core::option::Option<T>::map+0x6e>
  36:	e7ff      	b.n	38 <core::option::Option<T>::map+0x38>
  38:	9801      	ldr	r0, [sp, #4]
  3a:	2801      	cmp	r0, #1
  3c:	d001      	beq.n	42 <core::option::Option<T>::map+0x42>
  3e:	e7ff      	b.n	40 <core::option::Option<T>::map+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:419
  40:	defe      	udf	#254	; 0xfe
  42:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:416
  44:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  48:	9906      	ldr	r1, [sp, #24]
  4a:	9109      	str	r1, [sp, #36]	; 0x24
  4c:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  50:	9807      	ldr	r0, [sp, #28]
  52:	9909      	ldr	r1, [sp, #36]	; 0x24
  54:	910a      	str	r1, [sp, #40]	; 0x28
  56:	990a      	ldr	r1, [sp, #40]	; 0x28
  58:	f7ff fffe 	bl	0 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::{{closure}}>
  5c:	9000      	str	r0, [sp, #0]
  5e:	e7ff      	b.n	60 <core::option::Option<T>::map+0x60>
  60:	9800      	ldr	r0, [sp, #0]
  62:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
  66:	2101      	movs	r1, #1
  68:	f88d 1020 	strb.w	r1, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:415
  6c:	e00b      	b.n	86 <core::option::Option<T>::map+0x86>
  6e:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:417
  70:	f88d 0020 	strb.w	r0, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:415
  74:	e007      	b.n	86 <core::option::Option<T>::map+0x86>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:419
  76:	9805      	ldr	r0, [sp, #20]
  78:	2801      	cmp	r0, #1
  7a:	d010      	beq.n	9e <core::option::Option<T>::map+0x9e>
  7c:	e019      	b.n	b2 <core::option::Option<T>::map+0xb2>
  7e:	2000      	movs	r0, #0
  80:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  84:	e7f7      	b.n	76 <core::option::Option<T>::map+0x76>
  86:	f89d 002e 	ldrb.w	r0, [sp, #46]	; 0x2e
  8a:	07c0      	lsls	r0, r0, #31
  8c:	2800      	cmp	r0, #0
  8e:	d1f6      	bne.n	7e <core::option::Option<T>::map+0x7e>
  90:	e7f1      	b.n	76 <core::option::Option<T>::map+0x76>
  92:	f89d 0020 	ldrb.w	r0, [sp, #32]
  96:	f89d 1021 	ldrb.w	r1, [sp, #33]	; 0x21
  9a:	b00c      	add	sp, #48	; 0x30
  9c:	bd80      	pop	{r7, pc}
  9e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
  a2:	07c0      	lsls	r0, r0, #31
  a4:	2800      	cmp	r0, #0
  a6:	d0f4      	beq.n	92 <core::option::Option<T>::map+0x92>
  a8:	e7ff      	b.n	aa <core::option::Option<T>::map+0xaa>
  aa:	2000      	movs	r0, #0
  ac:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  b0:	e7ef      	b.n	92 <core::option::Option<T>::map+0x92>
  b2:	e7ee      	b.n	92 <core::option::Option<T>::map+0x92>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$3map17he1300604eb3dfff8E:

00000000 <core::option::Option<T>::map>:
_ZN4core6option15Option$LT$T$GT$3map17he1300604eb3dfff8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:414
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
  10:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:416
  12:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  16:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  1a:	2001      	movs	r0, #1
  1c:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  20:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  24:	9805      	ldr	r0, [sp, #20]
  26:	2800      	cmp	r0, #0
  28:	9304      	str	r3, [sp, #16]
  2a:	f8cd c00c 	str.w	ip, [sp, #12]
  2e:	f8cd e008 	str.w	lr, [sp, #8]
  32:	9001      	str	r0, [sp, #4]
  34:	d01b      	beq.n	6e <core::option::Option<T>::map+0x6e>
  36:	e7ff      	b.n	38 <core::option::Option<T>::map+0x38>
  38:	9801      	ldr	r0, [sp, #4]
  3a:	2801      	cmp	r0, #1
  3c:	d001      	beq.n	42 <core::option::Option<T>::map+0x42>
  3e:	e7ff      	b.n	40 <core::option::Option<T>::map+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:419
  40:	defe      	udf	#254	; 0xfe
  42:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:416
  44:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  48:	9906      	ldr	r1, [sp, #24]
  4a:	9109      	str	r1, [sp, #36]	; 0x24
  4c:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  50:	9807      	ldr	r0, [sp, #28]
  52:	9909      	ldr	r1, [sp, #36]	; 0x24
  54:	910a      	str	r1, [sp, #40]	; 0x28
  56:	990a      	ldr	r1, [sp, #40]	; 0x28
  58:	f7ff fffe 	bl	0 <<cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}>
  5c:	9000      	str	r0, [sp, #0]
  5e:	e7ff      	b.n	60 <core::option::Option<T>::map+0x60>
  60:	9800      	ldr	r0, [sp, #0]
  62:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
  66:	2101      	movs	r1, #1
  68:	f88d 1020 	strb.w	r1, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:415
  6c:	e00b      	b.n	86 <core::option::Option<T>::map+0x86>
  6e:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:417
  70:	f88d 0020 	strb.w	r0, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:415
  74:	e007      	b.n	86 <core::option::Option<T>::map+0x86>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:419
  76:	9805      	ldr	r0, [sp, #20]
  78:	2801      	cmp	r0, #1
  7a:	d010      	beq.n	9e <core::option::Option<T>::map+0x9e>
  7c:	e019      	b.n	b2 <core::option::Option<T>::map+0xb2>
  7e:	2000      	movs	r0, #0
  80:	f88d 002e 	strb.w	r0, [sp, #46]	; 0x2e
  84:	e7f7      	b.n	76 <core::option::Option<T>::map+0x76>
  86:	f89d 002e 	ldrb.w	r0, [sp, #46]	; 0x2e
  8a:	07c0      	lsls	r0, r0, #31
  8c:	2800      	cmp	r0, #0
  8e:	d1f6      	bne.n	7e <core::option::Option<T>::map+0x7e>
  90:	e7f1      	b.n	76 <core::option::Option<T>::map+0x76>
  92:	f89d 0020 	ldrb.w	r0, [sp, #32]
  96:	f89d 1021 	ldrb.w	r1, [sp, #33]	; 0x21
  9a:	b00c      	add	sp, #48	; 0x30
  9c:	bd80      	pop	{r7, pc}
  9e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
  a2:	07c0      	lsls	r0, r0, #31
  a4:	2800      	cmp	r0, #0
  a6:	d0f4      	beq.n	92 <core::option::Option<T>::map+0x92>
  a8:	e7ff      	b.n	aa <core::option::Option<T>::map+0xaa>
  aa:	2000      	movs	r0, #0
  ac:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
  b0:	e7ef      	b.n	92 <core::option::Option<T>::map+0x92>
  b2:	e7ee      	b.n	92 <core::option::Option<T>::map+0x92>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6as_mut17h9d6985ad4fcc64c5E:

00000000 <core::option::Option<T>::as_mut>:
_ZN4core6option15Option$LT$T$GT$6as_mut17h9d6985ad4fcc64c5E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:258
   0:	b085      	sub	sp, #20
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:260
   6:	9802      	ldr	r0, [sp, #8]
   8:	6800      	ldr	r0, [r0, #0]
   a:	2800      	cmp	r0, #0
   c:	9101      	str	r1, [sp, #4]
   e:	9000      	str	r0, [sp, #0]
  10:	d00b      	beq.n	2a <core::option::Option<T>::as_mut+0x2a>
  12:	e7ff      	b.n	14 <core::option::Option<T>::as_mut+0x14>
  14:	9800      	ldr	r0, [sp, #0]
  16:	2801      	cmp	r0, #1
  18:	d001      	beq.n	1e <core::option::Option<T>::as_mut+0x1e>
  1a:	e7ff      	b.n	1c <core::option::Option<T>::as_mut+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:263
  1c:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:260
  1e:	9802      	ldr	r0, [sp, #8]
  20:	3004      	adds	r0, #4
  22:	9004      	str	r0, [sp, #16]
  24:	9804      	ldr	r0, [sp, #16]
  26:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:259
  28:	e002      	b.n	30 <core::option::Option<T>::as_mut+0x30>
  2a:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:261
  2c:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:259
  2e:	e7ff      	b.n	30 <core::option::Option<T>::as_mut+0x30>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:263
  30:	9803      	ldr	r0, [sp, #12]
  32:	b005      	add	sp, #20
  34:	4770      	bx	lr

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$8and_then17h313aeda502b1d13aE:

00000000 <core::option::Option<T>::and_then>:
_ZN4core6option15Option$LT$T$GT$8and_then17h313aeda502b1d13aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:622
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4601      	mov	r1, r0
   6:	9002      	str	r0, [sp, #8]
   8:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:624
   a:	f88d 001f 	strb.w	r0, [sp, #31]
   e:	f88d 001e 	strb.w	r0, [sp, #30]
  12:	2001      	movs	r0, #1
  14:	f88d 001f 	strb.w	r0, [sp, #31]
  18:	f88d 001e 	strb.w	r0, [sp, #30]
  1c:	9802      	ldr	r0, [sp, #8]
  1e:	2800      	cmp	r0, #0
  20:	4602      	mov	r2, r0
  22:	bf18      	it	ne
  24:	2201      	movne	r2, #1
  26:	2800      	cmp	r0, #0
  28:	9101      	str	r1, [sp, #4]
  2a:	9200      	str	r2, [sp, #0]
  2c:	d017      	beq.n	5e <core::option::Option<T>::and_then+0x5e>
  2e:	e7ff      	b.n	30 <core::option::Option<T>::and_then+0x30>
  30:	9800      	ldr	r0, [sp, #0]
  32:	2801      	cmp	r0, #1
  34:	d001      	beq.n	3a <core::option::Option<T>::and_then+0x3a>
  36:	e7ff      	b.n	38 <core::option::Option<T>::and_then+0x38>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:627
  38:	defe      	udf	#254	; 0xfe
  3a:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:624
  3c:	f88d 001f 	strb.w	r0, [sp, #31]
  40:	9902      	ldr	r1, [sp, #8]
  42:	9105      	str	r1, [sp, #20]
  44:	f88d 001e 	strb.w	r0, [sp, #30]
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9006      	str	r0, [sp, #24]
  4c:	9806      	ldr	r0, [sp, #24]
  4e:	f7ff fffe 	bl	0 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next::{{closure}}>
  52:	f88d 1011 	strb.w	r1, [sp, #17]
  56:	f88d 0010 	strb.w	r0, [sp, #16]
  5a:	e7ff      	b.n	5c <core::option::Option<T>::and_then+0x5c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:623
  5c:	e00b      	b.n	76 <core::option::Option<T>::and_then+0x76>
  5e:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:625
  60:	f88d 0010 	strb.w	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:623
  64:	e007      	b.n	76 <core::option::Option<T>::and_then+0x76>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:627
  66:	9802      	ldr	r0, [sp, #8]
  68:	2800      	cmp	r0, #0
  6a:	d110      	bne.n	8e <core::option::Option<T>::and_then+0x8e>
  6c:	e019      	b.n	a2 <core::option::Option<T>::and_then+0xa2>
  6e:	2000      	movs	r0, #0
  70:	f88d 001e 	strb.w	r0, [sp, #30]
  74:	e7f7      	b.n	66 <core::option::Option<T>::and_then+0x66>
  76:	f89d 001e 	ldrb.w	r0, [sp, #30]
  7a:	07c0      	lsls	r0, r0, #31
  7c:	2800      	cmp	r0, #0
  7e:	d1f6      	bne.n	6e <core::option::Option<T>::and_then+0x6e>
  80:	e7f1      	b.n	66 <core::option::Option<T>::and_then+0x66>
  82:	f89d 0010 	ldrb.w	r0, [sp, #16]
  86:	f89d 1011 	ldrb.w	r1, [sp, #17]
  8a:	b008      	add	sp, #32
  8c:	bd80      	pop	{r7, pc}
  8e:	f89d 001f 	ldrb.w	r0, [sp, #31]
  92:	07c0      	lsls	r0, r0, #31
  94:	2800      	cmp	r0, #0
  96:	d0f4      	beq.n	82 <core::option::Option<T>::and_then+0x82>
  98:	e7ff      	b.n	9a <core::option::Option<T>::and_then+0x9a>
  9a:	2000      	movs	r0, #0
  9c:	f88d 001f 	strb.w	r0, [sp, #31]
  a0:	e7ef      	b.n	82 <core::option::Option<T>::and_then+0x82>
  a2:	e7ee      	b.n	82 <core::option::Option<T>::and_then+0x82>

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.5.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.5
00000267 l       .debug_str	00000000 
00000442 l       .debug_str	00000000 
00000495 l       .debug_str	00000000 
0000043c l       .debug_str	00000000 
00000475 l       .debug_str	00000000 
0000042d l       .debug_str	00000000 
00000473 l       .debug_str	00000000 
00000429 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f5 l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000194 l       .debug_str	00000000 
0000019e l       .debug_str	00000000 
000001a7 l       .debug_str	00000000 
000001b1 l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001be l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001c6 l       .debug_str	00000000 
0000025b l       .debug_str	00000000 
00000425 l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
00000272 l       .debug_str	00000000 
00000277 l       .debug_str	00000000 
0000027c l       .debug_str	00000000 
00000280 l       .debug_str	00000000 
0000028e l       .debug_str	00000000 
00000328 l       .debug_str	00000000 
00000339 l       .debug_str	00000000 
0000033d l       .debug_str	00000000 
00000362 l       .debug_str	00000000 
0000040b l       .debug_str	00000000 
0000041c l       .debug_str	00000000 
00000421 l       .debug_str	00000000 
0000044f l       .debug_str	00000000 
00000000 l    d  .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h09d6bc11f80df4b3E	00000000 .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h09d6bc11f80df4b3E
00000000 l    d  .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h0f755ebc716ea79fE	00000000 .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h0f755ebc716ea79fE
00000000 l    d  .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17h8f21c3e591d13cdcE	00000000 .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17h8f21c3e591d13cdcE
00000000 l    d  .text._ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h0dfa654ff08cd179E	00000000 .text._ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h0dfa654ff08cd179E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h09d6bc11f80df4b3E	00000046 <core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index
00000000         *UND*	00000000 .hidden <usize as core::iter::range::Step>::steps_between
00000000         *UND*	00000000 .hidden <usize as core::iter::range::Step>::sub_one
00000000         *UND*	00000000 .hidden <usize as core::iter::range::Step>::add_usize
00000000         *UND*	00000000 .hidden core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
00000000         *UND*	00000000 core::mem::swap
00000000 g     F .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h0f755ebc716ea79fE	0000009a core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
00000000 g     F .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17h8f21c3e591d13cdcE	00000066 core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint
00000000 g     F .text._ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h0dfa654ff08cd179E	0000005a core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
00000000         *UND*	00000000 .hidden core::clone::impls::<impl core::clone::Clone for usize>::clone
00000000         *UND*	00000000 <core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index



Disassembly of section .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h09d6bc11f80df4b3E:

00000000 <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index>:
_ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h09d6bc11f80df4b3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2791
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9007      	str	r0, [sp, #28]
   c:	9108      	str	r1, [sp, #32]
   e:	9209      	str	r2, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2792
  10:	9807      	ldr	r0, [sp, #28]
  12:	2100      	movs	r1, #0
  14:	910a      	str	r1, [sp, #40]	; 0x28
  16:	900b      	str	r0, [sp, #44]	; 0x2c
  18:	9a08      	ldr	r2, [sp, #32]
  1a:	9809      	ldr	r0, [sp, #36]	; 0x24
  1c:	990a      	ldr	r1, [sp, #40]	; 0x28
  1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  20:	9006      	str	r0, [sp, #24]
  22:	4608      	mov	r0, r1
  24:	4621      	mov	r1, r4
  26:	9c06      	ldr	r4, [sp, #24]
  28:	9305      	str	r3, [sp, #20]
  2a:	4623      	mov	r3, r4
  2c:	f8cd c010 	str.w	ip, [sp, #16]
  30:	f8cd e00c 	str.w	lr, [sp, #12]
  34:	f7ff fffe 	bl	0 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index>
  38:	9002      	str	r0, [sp, #8]
  3a:	9101      	str	r1, [sp, #4]
  3c:	e7ff      	b.n	3e <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2793
  3e:	9802      	ldr	r0, [sp, #8]
  40:	9901      	ldr	r1, [sp, #4]
  42:	b00c      	add	sp, #48	; 0x30
  44:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h0f755ebc716ea79fE:

00000000 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next>:
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h0f755ebc716ea79fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:205
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
   8:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
   a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
   e:	9803      	ldr	r0, [sp, #12]
  10:	1d02      	adds	r2, r0, #4
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	07c1      	lsls	r1, r0, #31
  22:	2900      	cmp	r1, #0
  24:	d01f      	beq.n	66 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x66>
  26:	e7ff      	b.n	28 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:211
  28:	9803      	ldr	r0, [sp, #12]
  2a:	2101      	movs	r1, #1
  2c:	f88d 1027 	strb.w	r1, [sp, #39]	; 0x27
  30:	f7ff fffe 	bl	0 <<usize as core::iter::range::Step>::add_usize>
  34:	9107      	str	r1, [sp, #28]
  36:	9006      	str	r0, [sp, #24]
  38:	e7ff      	b.n	3a <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x3a>
  3a:	9806      	ldr	r0, [sp, #24]
  3c:	2801      	cmp	r0, #1
  3e:	d10f      	bne.n	60 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x60>
  40:	e7ff      	b.n	42 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x42>
  42:	2000      	movs	r0, #0
  44:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9008      	str	r0, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:212
  4c:	9903      	ldr	r1, [sp, #12]
  4e:	a808      	add	r0, sp, #32
  50:	f7ff fffe 	bl	0 <core::mem::swap>
  54:	e7ff      	b.n	56 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:213
  56:	9808      	ldr	r0, [sp, #32]
  58:	9005      	str	r0, [sp, #20]
  5a:	2001      	movs	r0, #1
  5c:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:211
  5e:	e018      	b.n	92 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x92>
  60:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:215
  62:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:211
  64:	e015      	b.n	92 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x92>
  66:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:218
  68:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  6a:	e7ff      	b.n	6c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x6c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:220
  6c:	9804      	ldr	r0, [sp, #16]
  6e:	9905      	ldr	r1, [sp, #20]
  70:	b00a      	add	sp, #40	; 0x28
  72:	bd80      	pop	{r7, pc}
  74:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:217
  76:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  7a:	e7f7      	b.n	6c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x6c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:217
  7c:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  80:	07c0      	lsls	r0, r0, #31
  82:	2800      	cmp	r0, #0
  84:	d0f6      	beq.n	74 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x74>
  86:	e7ff      	b.n	88 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x88>
  88:	2000      	movs	r0, #0
  8a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  8e:	e7f1      	b.n	74 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x74>
  90:	e7f0      	b.n	74 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x74>
  92:	9806      	ldr	r0, [sp, #24]
  94:	2801      	cmp	r0, #1
  96:	d0f1      	beq.n	7c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x7c>
  98:	e7fa      	b.n	90 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x90>

Disassembly of section .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17h8f21c3e591d13cdcE:

00000000 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint>:
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17h8f21c3e591d13cdcE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:223
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:224
   8:	9904      	ldr	r1, [sp, #16]
   a:	1d0b      	adds	r3, r1, #4
   c:	9003      	str	r0, [sp, #12]
   e:	4608      	mov	r0, r1
  10:	4619      	mov	r1, r3
  12:	9202      	str	r2, [sp, #8]
  14:	f7ff fffe 	bl	0 <<usize as core::iter::range::Step>::steps_between>
  18:	9106      	str	r1, [sp, #24]
  1a:	9005      	str	r0, [sp, #20]
  1c:	e7ff      	b.n	1e <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint+0x1e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:225
  1e:	9805      	ldr	r0, [sp, #20]
  20:	2800      	cmp	r0, #0
  22:	9001      	str	r0, [sp, #4]
  24:	d012      	beq.n	4c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint+0x4c>
  26:	e7ff      	b.n	28 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint+0x28>
  28:	9801      	ldr	r0, [sp, #4]
  2a:	2801      	cmp	r0, #1
  2c:	d001      	beq.n	32 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint+0x32>
  2e:	e7ff      	b.n	30 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint+0x30>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:228
  30:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:225
  32:	9806      	ldr	r0, [sp, #24]
  34:	9007      	str	r0, [sp, #28]
  36:	9807      	ldr	r0, [sp, #28]
  38:	9009      	str	r0, [sp, #36]	; 0x24
  3a:	2101      	movs	r1, #1
  3c:	9108      	str	r1, [sp, #32]
  3e:	9903      	ldr	r1, [sp, #12]
  40:	6008      	str	r0, [r1, #0]
  42:	9808      	ldr	r0, [sp, #32]
  44:	9a09      	ldr	r2, [sp, #36]	; 0x24
  46:	6048      	str	r0, [r1, #4]
  48:	608a      	str	r2, [r1, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:224
  4a:	e00a      	b.n	62 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint+0x62>
  4c:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:226
  4e:	900a      	str	r0, [sp, #40]	; 0x28
  50:	f04f 30ff 	mov.w	r0, #4294967295
  54:	9903      	ldr	r1, [sp, #12]
  56:	6008      	str	r0, [r1, #0]
  58:	980a      	ldr	r0, [sp, #40]	; 0x28
  5a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  5c:	6048      	str	r0, [r1, #4]
  5e:	608a      	str	r2, [r1, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:224
  60:	e7ff      	b.n	62 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint+0x62>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:228
  62:	b00c      	add	sp, #48	; 0x30
  64:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h0dfa654ff08cd179E:

00000000 <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back>:
_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h0dfa654ff08cd179E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:276
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4601      	mov	r1, r0
   6:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:277
   8:	9804      	ldr	r0, [sp, #16]
   a:	1d02      	adds	r2, r0, #4
   c:	9103      	str	r1, [sp, #12]
   e:	4611      	mov	r1, r2
  10:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt>
  14:	9002      	str	r0, [sp, #8]
  16:	e7ff      	b.n	18 <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back+0x18>
  18:	9802      	ldr	r0, [sp, #8]
  1a:	07c1      	lsls	r1, r0, #31
  1c:	2900      	cmp	r1, #0
  1e:	d00c      	beq.n	3a <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back+0x3a>
  20:	e7ff      	b.n	22 <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:278
  22:	9804      	ldr	r0, [sp, #16]
  24:	3004      	adds	r0, #4
  26:	f7ff fffe 	bl	0 <<usize as core::iter::range::Step>::sub_one>
  2a:	9001      	str	r0, [sp, #4]
  2c:	e7ff      	b.n	2e <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back+0x2e>
  2e:	e00b      	b.n	48 <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:279
  30:	9807      	ldr	r0, [sp, #28]
  32:	9006      	str	r0, [sp, #24]
  34:	2001      	movs	r0, #1
  36:	9005      	str	r0, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:277
  38:	e002      	b.n	40 <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back+0x40>
  3a:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:281
  3c:	9005      	str	r0, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:277
  3e:	e7ff      	b.n	40 <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:283
  40:	9805      	ldr	r0, [sp, #20]
  42:	9906      	ldr	r1, [sp, #24]
  44:	b008      	add	sp, #32
  46:	bd80      	pop	{r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:278
  48:	9804      	ldr	r0, [sp, #16]
  4a:	9901      	ldr	r1, [sp, #4]
  4c:	6041      	str	r1, [r0, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:279
  4e:	9804      	ldr	r0, [sp, #16]
  50:	3004      	adds	r0, #4
  52:	f7ff fffe 	bl	0 <core::clone::impls::<impl core::clone::Clone for usize>::clone>
  56:	9007      	str	r0, [sp, #28]
  58:	e7ea      	b.n	30 <core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back+0x30>

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.6.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.6
000001b9 l       .debug_str	00000000 
000007a2 l       .debug_str	00000000 
0000093e l       .debug_str	00000000 
0000073f l       .debug_str	00000000 
0000093a l       .debug_str	00000000 
000006e0 l       .debug_str	00000000 
00000915 l       .debug_str	00000000 
0000068d l       .debug_str	00000000 
00000887 l       .debug_str	00000000 
0000064a l       .debug_str	00000000 
0000081a l       .debug_str	00000000 
000005f9 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000113 l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
00000147 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
00000195 l       .debug_str	00000000 
0000019f l       .debug_str	00000000 
000001a6 l       .debug_str	00000000 
000001aa l       .debug_str	00000000 
000001af l       .debug_str	00000000 
00000592 l       .debug_str	00000000 
000001bf l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001cf l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001d9 l       .debug_str	00000000 
000001e6 l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
0000020d l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
00000216 l       .debug_str	00000000 
0000023e l       .debug_str	00000000 
00000247 l       .debug_str	00000000 
00000249 l       .debug_str	00000000 
000002b3 l       .debug_str	00000000 
000002fc l       .debug_str	00000000 
00000303 l       .debug_str	00000000 
0000030b l       .debug_str	00000000 
0000039d l       .debug_str	00000000 
000003e1 l       .debug_str	00000000 
000003ec l       .debug_str	00000000 
00000480 l       .debug_str	00000000 
000004e0 l       .debug_str	00000000 
00000815 l       .debug_str	00000000 
00000000 l    d  .text._ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd49d6f1b3bb63157E	00000000 .text._ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd49d6f1b3bb63157E
00000000 l    d  .text._ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h351f7a85ef0bdb51E	00000000 .text._ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h351f7a85ef0bdb51E
00000000 l    d  .text._ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h03bd39060821560dE	00000000 .text._ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h03bd39060821560dE
00000000 l    d  .text._ZN4core4iter8adapters7flatten24FlatMap$LT$I$C$U$C$F$GT$3new17h09691f1e591736b0E	00000000 .text._ZN4core4iter8adapters7flatten24FlatMap$LT$I$C$U$C$F$GT$3new17h09691f1e591736b0E
00000000 l    d  .text._ZN4core4iter8adapters7flatten26FlattenCompat$LT$I$C$U$GT$3new17hde8b5399a17091caE	00000000 .text._ZN4core4iter8adapters7flatten26FlattenCompat$LT$I$C$U$GT$3new17hde8b5399a17091caE
00000000 l    d  .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h246744cb0222fea7E	00000000 .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h246744cb0222fea7E
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd49d6f1b3bb63157E	00000022 <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next
00000000 g     F .text._ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h351f7a85ef0bdb51E	000000fe <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next
00000000 g     F .text._ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h03bd39060821560dE	00000022 <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next::{{closure}}
00000000         *UND*	00000000 core::iter::traits::iterator::Iterator::map
00000000 g     F .text._ZN4core4iter8adapters7flatten24FlatMap$LT$I$C$U$C$F$GT$3new17h09691f1e591736b0E	0000004a core::iter::adapters::flatten::FlatMap<I,U,F>::new
00000000 g     F .text._ZN4core4iter8adapters7flatten26FlattenCompat$LT$I$C$U$GT$3new17hde8b5399a17091caE	0000004a core::iter::adapters::flatten::FlattenCompat<I,U>::new
00000000         *UND*	00000000 core::option::Option<T>::as_mut
00000000         *UND*	00000000 core::option::Option<T>::and_then
00000000 g     F .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h246744cb0222fea7E	00000020 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000         *UND*	00000000 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000         *UND*	00000000 <cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next
00000000         *UND*	00000000 <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::next



Disassembly of section .text._ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd49d6f1b3bb63157E:

00000000 <<core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next>:
_ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd49d6f1b3bb63157E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:49
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <<core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next>
  10:	9001      	str	r0, [sp, #4]
  12:	9100      	str	r1, [sp, #0]
  14:	e7ff      	b.n	16 <<core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next+0x16>
  16:	9801      	ldr	r0, [sp, #4]
  18:	f000 0001 	and.w	r0, r0, #1
  1c:	9900      	ldr	r1, [sp, #0]
  1e:	b004      	add	sp, #16
  20:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h351f7a85ef0bdb51E:

00000000 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next>:
_ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h351f7a85ef0bdb51E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:214
   0:	b580      	push	{r7, lr}
   2:	b09a      	sub	sp, #104	; 0x68
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9102      	str	r1, [sp, #8]
   a:	e7ff      	b.n	c <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:216
   c:	9803      	ldr	r0, [sp, #12]
   e:	6880      	ldr	r0, [r0, #8]
  10:	2801      	cmp	r0, #1
  12:	d12a      	bne.n	6a <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x6a>
  14:	e7ff      	b.n	16 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x16>
  16:	9803      	ldr	r0, [sp, #12]
  18:	300c      	adds	r0, #12
  1a:	9005      	str	r0, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:217
  1c:	9805      	ldr	r0, [sp, #20]
  1e:	f7ff fffe 	bl	0 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next>
  22:	f88d 1019 	strb.w	r1, [sp, #25]
  26:	f88d 0018 	strb.w	r0, [sp, #24]
  2a:	e7ff      	b.n	2c <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x2c>
  2c:	f89d 0018 	ldrb.w	r0, [sp, #24]
  30:	07c0      	lsls	r0, r0, #31
  32:	2800      	cmp	r0, #0
  34:	d017      	beq.n	66 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x66>
  36:	e7ff      	b.n	38 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x38>
  38:	f89d 0018 	ldrb.w	r0, [sp, #24]
  3c:	f89d 1019 	ldrb.w	r1, [sp, #25]
  40:	f88d 001c 	strb.w	r0, [sp, #28]
  44:	f88d 101d 	strb.w	r1, [sp, #29]
  48:	f89d 001c 	ldrb.w	r0, [sp, #28]
  4c:	f89d 101d 	ldrb.w	r1, [sp, #29]
  50:	f88d 0010 	strb.w	r0, [sp, #16]
  54:	f88d 1011 	strb.w	r1, [sp, #17]
  58:	e7ff      	b.n	5a <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x5a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:224
  5a:	f89d 0010 	ldrb.w	r0, [sp, #16]
  5e:	f89d 1011 	ldrb.w	r1, [sp, #17]
  62:	b01a      	add	sp, #104	; 0x68
  64:	bd80      	pop	{r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:218
  66:	e7ff      	b.n	68 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:216
  68:	e7ff      	b.n	6a <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:219
  6a:	9903      	ldr	r1, [sp, #12]
  6c:	a808      	add	r0, sp, #32
  6e:	f7ff fffe 	bl	0 <<core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::next>
  72:	e7ff      	b.n	74 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x74>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:220
  74:	9808      	ldr	r0, [sp, #32]
  76:	2800      	cmp	r0, #0
  78:	9001      	str	r0, [sp, #4]
  7a:	d005      	beq.n	88 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x88>
  7c:	e7ff      	b.n	7e <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x7e>
  7e:	9801      	ldr	r0, [sp, #4]
  80:	2801      	cmp	r0, #1
  82:	d011      	beq.n	a8 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xa8>
  84:	e7ff      	b.n	86 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x86>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:224
  86:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:220
  88:	9803      	ldr	r0, [sp, #12]
  8a:	3018      	adds	r0, #24
  8c:	f7ff fffe 	bl	0 <core::option::Option<T>::as_mut>
  90:	9000      	str	r0, [sp, #0]
  92:	e7ff      	b.n	94 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x94>
  94:	9800      	ldr	r0, [sp, #0]
  96:	f7ff fffe 	bl	0 <core::option::Option<T>::and_then>
  9a:	f88d 1011 	strb.w	r1, [sp, #17]
  9e:	f88d 0010 	strb.w	r0, [sp, #16]
  a2:	e7ff      	b.n	a4 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xa4>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:223
  a4:	e7ff      	b.n	a6 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xa6>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:220
  a6:	e7d8      	b.n	5a <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0x5a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:221
  a8:	9809      	ldr	r0, [sp, #36]	; 0x24
  aa:	990a      	ldr	r1, [sp, #40]	; 0x28
  ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  ae:	920f      	str	r2, [sp, #60]	; 0x3c
  b0:	910e      	str	r1, [sp, #56]	; 0x38
  b2:	900d      	str	r0, [sp, #52]	; 0x34
  b4:	980d      	ldr	r0, [sp, #52]	; 0x34
  b6:	990e      	ldr	r1, [sp, #56]	; 0x38
  b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  ba:	9219      	str	r2, [sp, #100]	; 0x64
  bc:	9118      	str	r1, [sp, #96]	; 0x60
  be:	9017      	str	r0, [sp, #92]	; 0x5c
  c0:	a814      	add	r0, sp, #80	; 0x50
  c2:	a917      	add	r1, sp, #92	; 0x5c
  c4:	f7ff fffe 	bl	0 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
  c8:	e7ff      	b.n	ca <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xca>
  ca:	9814      	ldr	r0, [sp, #80]	; 0x50
  cc:	9915      	ldr	r1, [sp, #84]	; 0x54
  ce:	9a16      	ldr	r2, [sp, #88]	; 0x58
  d0:	9213      	str	r2, [sp, #76]	; 0x4c
  d2:	9112      	str	r1, [sp, #72]	; 0x48
  d4:	9011      	str	r0, [sp, #68]	; 0x44
  d6:	2001      	movs	r0, #1
  d8:	9010      	str	r0, [sp, #64]	; 0x40
  da:	e7ff      	b.n	dc <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xdc>
  dc:	9803      	ldr	r0, [sp, #12]
  de:	9910      	ldr	r1, [sp, #64]	; 0x40
  e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  e4:	f8dd c04c 	ldr.w	ip, [sp, #76]	; 0x4c
  e8:	f8c0 c014 	str.w	ip, [r0, #20]
  ec:	6103      	str	r3, [r0, #16]
  ee:	60c2      	str	r2, [r0, #12]
  f0:	6081      	str	r1, [r0, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:223
  f2:	9808      	ldr	r0, [sp, #32]
  f4:	2801      	cmp	r0, #1
  f6:	d101      	bne.n	fc <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xfc>
  f8:	e7ff      	b.n	fa <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xfa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:215
  fa:	e787      	b.n	c <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:223
  fc:	e7fd      	b.n	fa <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next+0xfa>

Disassembly of section .text._ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h03bd39060821560dE:

00000000 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next::{{closure}}>:
_ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h03bd39060821560dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:220
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4601      	mov	r1, r0
   6:	9005      	str	r0, [sp, #20]
   8:	9805      	ldr	r0, [sp, #20]
   a:	9103      	str	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next>
  10:	9002      	str	r0, [sp, #8]
  12:	9101      	str	r1, [sp, #4]
  14:	e7ff      	b.n	16 <<core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next::{{closure}}+0x16>
  16:	9802      	ldr	r0, [sp, #8]
  18:	f000 0001 	and.w	r0, r0, #1
  1c:	9901      	ldr	r1, [sp, #4]
  1e:	b006      	add	sp, #24
  20:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core4iter8adapters7flatten24FlatMap$LT$I$C$U$C$F$GT$3new17h09691f1e591736b0E:

00000000 <core::iter::adapters::flatten::FlatMap<I,U,F>::new>:
_ZN4core4iter8adapters7flatten24FlatMap$LT$I$C$U$C$F$GT$3new17h09691f1e591736b0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:21
   0:	b510      	push	{r4, lr}
   2:	b092      	sub	sp, #72	; 0x48
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	9105      	str	r1, [sp, #20]
   a:	9206      	str	r2, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:22
   c:	9905      	ldr	r1, [sp, #20]
   e:	9a06      	ldr	r2, [sp, #24]
  10:	9004      	str	r0, [sp, #16]
  12:	4608      	mov	r0, r1
  14:	4611      	mov	r1, r2
  16:	9303      	str	r3, [sp, #12]
  18:	f8cd c008 	str.w	ip, [sp, #8]
  1c:	f7ff fffe 	bl	0 <core::iter::traits::iterator::Iterator::map>
  20:	9001      	str	r0, [sp, #4]
  22:	9100      	str	r1, [sp, #0]
  24:	e7ff      	b.n	26 <core::iter::adapters::flatten::FlatMap<I,U,F>::new+0x26>
  26:	a808      	add	r0, sp, #32
  28:	9901      	ldr	r1, [sp, #4]
  2a:	9a00      	ldr	r2, [sp, #0]
  2c:	f7ff fffe 	bl	0 <core::iter::adapters::flatten::FlatMap<I,U,F>::new>
  30:	e7ff      	b.n	32 <core::iter::adapters::flatten::FlatMap<I,U,F>::new+0x32>
  32:	a808      	add	r0, sp, #32
  34:	9904      	ldr	r1, [sp, #16]
  36:	e8b0 501c 	ldmia.w	r0!, {r2, r3, r4, ip, lr}
  3a:	e8a1 501c 	stmia.w	r1!, {r2, r3, r4, ip, lr}
  3e:	e890 501c 	ldmia.w	r0, {r2, r3, r4, ip, lr}
  42:	e881 501c 	stmia.w	r1, {r2, r3, r4, ip, lr}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:23
  46:	b012      	add	sp, #72	; 0x48
  48:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN4core4iter8adapters7flatten26FlattenCompat$LT$I$C$U$GT$3new17hde8b5399a17091caE:

00000000 <core::iter::adapters::flatten::FlattenCompat<I,U>::new>:
_ZN4core4iter8adapters7flatten26FlattenCompat$LT$I$C$U$GT$3new17hde8b5399a17091caE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:202
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08d      	sub	sp, #52	; 0x34
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9103      	str	r1, [sp, #12]
   c:	9204      	str	r2, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:203
   e:	9903      	ldr	r1, [sp, #12]
  10:	9a04      	ldr	r2, [sp, #16]
  12:	2400      	movs	r4, #0
  14:	9405      	str	r4, [sp, #20]
  16:	9409      	str	r4, [sp, #36]	; 0x24
  18:	6001      	str	r1, [r0, #0]
  1a:	6042      	str	r2, [r0, #4]
  1c:	9905      	ldr	r1, [sp, #20]
  1e:	9a06      	ldr	r2, [sp, #24]
  20:	9c07      	ldr	r4, [sp, #28]
  22:	9d08      	ldr	r5, [sp, #32]
  24:	6145      	str	r5, [r0, #20]
  26:	6104      	str	r4, [r0, #16]
  28:	60c2      	str	r2, [r0, #12]
  2a:	6081      	str	r1, [r0, #8]
  2c:	9909      	ldr	r1, [sp, #36]	; 0x24
  2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  30:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  32:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  34:	6245      	str	r5, [r0, #36]	; 0x24
  36:	6204      	str	r4, [r0, #32]
  38:	61c2      	str	r2, [r0, #28]
  3a:	6181      	str	r1, [r0, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:204
  3c:	9302      	str	r3, [sp, #8]
  3e:	f8cd c004 	str.w	ip, [sp, #4]
  42:	f8cd e000 	str.w	lr, [sp]
  46:	b00d      	add	sp, #52	; 0x34
  48:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h246744cb0222fea7E:

00000000 <<I as core::iter::traits::collect::IntoIterator>::into_iter>:
_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h246744cb0222fea7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:245
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b082      	sub	sp, #8
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:246
   8:	e8b1 5070 	ldmia.w	r1!, {r4, r5, r6, ip, lr}
   c:	e8a0 5070 	stmia.w	r0!, {r4, r5, r6, ip, lr}
  10:	e891 5070 	ldmia.w	r1, {r4, r5, r6, ip, lr}
  14:	e880 5070 	stmia.w	r0, {r4, r5, r6, ip, lr}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:247
  18:	9201      	str	r2, [sp, #4]
  1a:	9300      	str	r3, [sp, #0]
  1c:	b002      	add	sp, #8
  1e:	bd70      	pop	{r4, r5, r6, pc}

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.7.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.7
00000165 l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
000001f0 l       .debug_str	00000000 
000001fb l       .debug_str	00000000 
000001e2 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
0000014f l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
000001dd l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
0000016c l       .debug_str	00000000 
00000170 l       .debug_str	00000000 
0000017e l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001d9 l       .debug_str	00000000 
000001f9 l       .debug_str	00000000 
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hd120bde4938f3d3eE	00000052 core::num::<impl usize>::overflowing_add
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9d9fb88919d8e73fE	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9d9fb88919d8e73fE
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hd120bde4938f3d3eE	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hd120bde4938f3d3eE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9d9fb88919d8e73fE	00000050 .hidden core::num::<impl usize>::checked_add



Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9d9fb88919d8e73fE:

00000000 <core::num::<impl usize>::checked_add>:
_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9d9fb88919d8e73fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2676
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2677
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::num::<impl usize>::checked_add>
  18:	9001      	str	r0, [sp, #4]
  1a:	9100      	str	r1, [sp, #0]
  1c:	e7ff      	b.n	1e <core::num::<impl usize>::checked_add+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	9008      	str	r0, [sp, #32]
  22:	9900      	ldr	r1, [sp, #0]
  24:	f001 0201 	and.w	r2, r1, #1
  28:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2678
  2c:	f89d 2027 	ldrb.w	r2, [sp, #39]	; 0x27
  30:	07d2      	lsls	r2, r2, #31
  32:	2a00      	cmp	r2, #0
  34:	d003      	beq.n	3e <core::num::<impl usize>::checked_add+0x3e>
  36:	e7ff      	b.n	38 <core::num::<impl usize>::checked_add+0x38>
  38:	2000      	movs	r0, #0
  3a:	9006      	str	r0, [sp, #24]
  3c:	e004      	b.n	48 <core::num::<impl usize>::checked_add+0x48>
  3e:	9808      	ldr	r0, [sp, #32]
  40:	9007      	str	r0, [sp, #28]
  42:	2001      	movs	r0, #1
  44:	9006      	str	r0, [sp, #24]
  46:	e7ff      	b.n	48 <core::num::<impl usize>::checked_add+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2679
  48:	9806      	ldr	r0, [sp, #24]
  4a:	9907      	ldr	r1, [sp, #28]
  4c:	b00a      	add	sp, #40	; 0x28
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hd120bde4938f3d3eE:

00000000 <core::num::<impl usize>::overflowing_add>:
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hd120bde4938f3d3eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3346
   0:	b08c      	sub	sp, #48	; 0x30
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
   a:	9804      	ldr	r0, [sp, #16]
   c:	9905      	ldr	r1, [sp, #20]
   e:	1840      	adds	r0, r0, r1
  10:	f04f 0100 	mov.w	r1, #0
  14:	f141 0100 	adc.w	r1, r1, #0
  18:	900a      	str	r0, [sp, #40]	; 0x28
  1a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
  1e:	980a      	ldr	r0, [sp, #40]	; 0x28
  20:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
  24:	9203      	str	r2, [sp, #12]
  26:	9302      	str	r3, [sp, #8]
  28:	9001      	str	r0, [sp, #4]
  2a:	9100      	str	r1, [sp, #0]
  2c:	e7ff      	b.n	2e <core::num::<impl usize>::overflowing_add+0x2e>
  2e:	9801      	ldr	r0, [sp, #4]
  30:	9008      	str	r0, [sp, #32]
  32:	9900      	ldr	r1, [sp, #0]
  34:	f001 0201 	and.w	r2, r1, #1
  38:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3348
  3c:	9a08      	ldr	r2, [sp, #32]
  3e:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
  42:	9206      	str	r2, [sp, #24]
  44:	f88d 301c 	strb.w	r3, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3349
  48:	9806      	ldr	r0, [sp, #24]
  4a:	f89d 101c 	ldrb.w	r1, [sp, #28]
  4e:	b00c      	add	sp, #48	; 0x30
  50:	4770      	bx	lr

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.8.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.8
00000181 l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
0000026c l       .debug_str	00000000 
0000025a l       .debug_str	00000000 
0000026a l       .debug_str	00000000 
00000254 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
0000016b l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
00000176 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
0000024a l       .debug_str	00000000 
00000183 l       .debug_str	00000000 
00000188 l       .debug_str	00000000 
0000018c l       .debug_str	00000000 
0000019a l       .debug_str	00000000 
000001ed l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
00000265 l       .debug_str	00000000 
00000000 l    d  .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17hb0e913530462a3aaE	00000000 .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17hb0e913530462a3aaE
00000000 l    d  .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$7sub_one17h2d96d4a30eaf0019E	00000000 .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$7sub_one17h2d96d4a30eaf0019E
00000000 l    d  .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17ha357325b6c2f1c37E	00000000 .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17ha357325b6c2f1c37E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 .hidden <usize as core::ops::arith::Sub>::sub
00000000 g     F .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17hb0e913530462a3aaE	00000050 .hidden <usize as core::iter::range::Step>::steps_between
00000000 g     F .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$7sub_one17h2d96d4a30eaf0019E	00000020 .hidden <usize as core::iter::range::Step>::sub_one
00000000 g     F .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17ha357325b6c2f1c37E	00000036 .hidden <usize as core::iter::range::Step>::add_usize
00000000         *UND*	00000000 .hidden core::num::<impl usize>::checked_add
00000000         *UND*	00000000 core::result::Result<T,E>::ok
00000000         *UND*	00000000 <T as core::convert::TryFrom<U>>::try_from



Disassembly of section .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17hb0e913530462a3aaE:

00000000 <<usize as core::iter::range::Step>::steps_between>:
_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17hb0e913530462a3aaE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:78
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:79
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	6809      	ldr	r1, [r1, #0]
  14:	4288      	cmp	r0, r1
  16:	9203      	str	r2, [sp, #12]
  18:	9302      	str	r3, [sp, #8]
  1a:	d210      	bcs.n	3e <<usize as core::iter::range::Step>::steps_between+0x3e>
  1c:	e7ff      	b.n	1e <<usize as core::iter::range::Step>::steps_between+0x1e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:80
  1e:	9805      	ldr	r0, [sp, #20]
  20:	6800      	ldr	r0, [r0, #0]
  22:	9904      	ldr	r1, [sp, #16]
  24:	6809      	ldr	r1, [r1, #0]
  26:	1a40      	subs	r0, r0, r1
  28:	f7ff fffe 	bl	0 <<T as core::convert::TryFrom<U>>::try_from>
  2c:	9001      	str	r0, [sp, #4]
  2e:	e7ff      	b.n	30 <<usize as core::iter::range::Step>::steps_between+0x30>
  30:	9801      	ldr	r0, [sp, #4]
  32:	f7ff fffe 	bl	0 <core::result::Result<T,E>::ok>
  36:	9107      	str	r1, [sp, #28]
  38:	9006      	str	r0, [sp, #24]
  3a:	e7ff      	b.n	3c <<usize as core::iter::range::Step>::steps_between+0x3c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:79
  3c:	e004      	b.n	48 <<usize as core::iter::range::Step>::steps_between+0x48>
  3e:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:82
  40:	9007      	str	r0, [sp, #28]
  42:	2001      	movs	r0, #1
  44:	9006      	str	r0, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:79
  46:	e7ff      	b.n	48 <<usize as core::iter::range::Step>::steps_between+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:84
  48:	9806      	ldr	r0, [sp, #24]
  4a:	9907      	ldr	r1, [sp, #28]
  4c:	b008      	add	sp, #32
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$7sub_one17h2d96d4a30eaf0019E:

00000000 <<usize as core::iter::range::Step>::sub_one>:
_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$7sub_one17h2d96d4a30eaf0019E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:65
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:66
   8:	9803      	ldr	r0, [sp, #12]
   a:	6800      	ldr	r0, [r0, #0]
   c:	2201      	movs	r2, #1
   e:	9102      	str	r1, [sp, #8]
  10:	4611      	mov	r1, r2
  12:	f7ff fffe 	bl	0 <<usize as core::ops::arith::Sub>::sub>
  16:	9001      	str	r0, [sp, #4]
  18:	e7ff      	b.n	1a <<usize as core::iter::range::Step>::sub_one+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:67
  1a:	9801      	ldr	r0, [sp, #4]
  1c:	b004      	add	sp, #16
  1e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17ha357325b6c2f1c37E:

00000000 <<usize as core::iter::range::Step>::add_usize>:
_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17ha357325b6c2f1c37E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:88
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:89
   c:	9805      	ldr	r0, [sp, #20]
   e:	9203      	str	r2, [sp, #12]
  10:	9302      	str	r3, [sp, #8]
  12:	f7ff fffe 	bl	0 <<T as core::convert::TryFrom<U>>::try_from>
  16:	9006      	str	r0, [sp, #24]
  18:	e7ff      	b.n	1a <<usize as core::iter::range::Step>::add_usize+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:90
  1a:	9806      	ldr	r0, [sp, #24]
  1c:	9007      	str	r0, [sp, #28]
  1e:	9804      	ldr	r0, [sp, #16]
  20:	6800      	ldr	r0, [r0, #0]
  22:	9907      	ldr	r1, [sp, #28]
  24:	f7ff fffe 	bl	0 <core::num::<impl usize>::checked_add>
  28:	9001      	str	r0, [sp, #4]
  2a:	9100      	str	r1, [sp, #0]
  2c:	e7ff      	b.n	2e <<usize as core::iter::range::Step>::add_usize+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:93
  2e:	9801      	ldr	r0, [sp, #4]
  30:	9900      	ldr	r1, [sp, #0]
  32:	b008      	add	sp, #32
  34:	bd80      	pop	{r7, pc}

cstr_core-b3c2bc6096021210.cstr_core.abfp6oo7-cgu.9.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.abfp6oo7-cgu.9
00000112 l       .debug_str	00000000 
000001f2 l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
000001ed l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
000001e8 l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
000001e5 l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h536f5bd14bf01003E	00000000 .text._ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h536f5bd14bf01003E
00000000 l    d  .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h390f3c86002de84aE	00000000 .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h390f3c86002de84aE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h536f5bd14bf01003E	0000004c .hidden core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
00000000 g     F .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h390f3c86002de84aE	00000028 .hidden core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt



Disassembly of section .text._ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h536f5bd14bf01003E:

00000000 <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp>:
_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h536f5bd14bf01003E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:986
   0:	b085      	sub	sp, #20
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:987
   a:	9802      	ldr	r0, [sp, #8]
   c:	6800      	ldr	r0, [r0, #0]
   e:	9903      	ldr	r1, [sp, #12]
  10:	6809      	ldr	r1, [r1, #0]
  12:	4288      	cmp	r0, r1
  14:	9201      	str	r2, [sp, #4]
  16:	9300      	str	r3, [sp, #0]
  18:	d104      	bne.n	24 <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp+0x24>
  1a:	e7ff      	b.n	1c <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp+0x1c>
  1c:	2000      	movs	r0, #0
  1e:	f88d 0013 	strb.w	r0, [sp, #19]
  22:	e00f      	b.n	44 <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp+0x44>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:988
  24:	9802      	ldr	r0, [sp, #8]
  26:	6800      	ldr	r0, [r0, #0]
  28:	9903      	ldr	r1, [sp, #12]
  2a:	6809      	ldr	r1, [r1, #0]
  2c:	4288      	cmp	r0, r1
  2e:	d204      	bcs.n	3a <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp+0x3a>
  30:	e7ff      	b.n	32 <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp+0x32>
  32:	20ff      	movs	r0, #255	; 0xff
  34:	f88d 0013 	strb.w	r0, [sp, #19]
  38:	e003      	b.n	42 <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp+0x42>
  3a:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:989
  3c:	f88d 0013 	strb.w	r0, [sp, #19]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:988
  40:	e7ff      	b.n	42 <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp+0x42>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:987
  42:	e7ff      	b.n	44 <core::cmp::impls::<impl core::cmp::Ord for usize>::cmp+0x44>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:990
  44:	f89d 0013 	ldrb.w	r0, [sp, #19]
  48:	b005      	add	sp, #20
  4a:	4770      	bx	lr

Disassembly of section .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h390f3c86002de84aE:

00000000 <core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt>:
_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h390f3c86002de84aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:974
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
   a:	9802      	ldr	r0, [sp, #8]
   c:	6800      	ldr	r0, [r0, #0]
   e:	9903      	ldr	r1, [sp, #12]
  10:	6809      	ldr	r1, [r1, #0]
  12:	f04f 0c00 	mov.w	ip, #0
  16:	4288      	cmp	r0, r1
  18:	bf38      	it	cc
  1a:	f04f 0c01 	movcc.w	ip, #1
  1e:	4660      	mov	r0, ip
  20:	9201      	str	r2, [sp, #4]
  22:	9300      	str	r3, [sp, #0]
  24:	b004      	add	sp, #16
  26:	4770      	bx	lr

cty-b28fb416ad100d0b.cty.43ts863a-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cty.43ts863a-cgu.0



cty-d9215b5d79654925.cty.78k08lve-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cty.78k08lve-cgu.0



generic_array-4247821d0b5909af.generic_array.8vkwza56-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 generic_array.8vkwza56-cgu.0
0000011e l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
00000000 l     O .rodata.cst16	00000010 .Lanon.1ee8599ba372fa39657c0a88d72fe0dd.0
00000010 l     O .rodata.cst16	00000010 .Lanon.1ee8599ba372fa39657c0a88d72fe0dd.1
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     O .rodata._ZN13generic_array3hex11LOWER_CHARS17h4ab6e29369677acbE	00000008 generic_array::hex::LOWER_CHARS
00000000 g     O .rodata._ZN13generic_array3hex11UPPER_CHARS17h7bce543bf2d27adcE	00000008 generic_array::hex::UPPER_CHARS



generic_array-4247821d0b5909af.generic_array.8vkwza56-cgu.1.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 generic_array.8vkwza56-cgu.1
00000242 l       .debug_str	00000000 
00000507 l       .debug_str	00000000 
00000510 l       .debug_str	00000000 
00000505 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000111 l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
0000014e l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000168 l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
00000188 l       .debug_str	00000000 
0000018e l       .debug_str	00000000 
000001a2 l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
000001bc l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001da l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
000001fb l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
00000204 l       .debug_str	00000000 
00000209 l       .debug_str	00000000 
0000020f l       .debug_str	00000000 
00000215 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000221 l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
0000022a l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
000004fe l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
00000258 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000262 l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
00000283 l       .debug_str	00000000 
0000028b l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000002c6 l       .debug_str	00000000 
000002e2 l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002f0 l       .debug_str	00000000 
000002f7 l       .debug_str	00000000 
00000310 l       .debug_str	00000000 
0000031a l       .debug_str	00000000 
00000334 l       .debug_str	00000000 
00000392 l       .debug_str	00000000 
0000039d l       .debug_str	00000000 
000003a4 l       .debug_str	00000000 
000003ae l       .debug_str	00000000 
000003b3 l       .debug_str	00000000 
000003bf l       .debug_str	00000000 
000003c7 l       .debug_str	00000000 
000003d0 l       .debug_str	00000000 
000003d5 l       .debug_str	00000000 
000003d8 l       .debug_str	00000000 
000003e1 l       .debug_str	00000000 
000003e8 l       .debug_str	00000000 
000003eb l       .debug_str	00000000 
000003f1 l       .debug_str	00000000 
000003fb l       .debug_str	00000000 
00000403 l       .debug_str	00000000 
00000409 l       .debug_str	00000000 
00000414 l       .debug_str	00000000 
0000041d l       .debug_str	00000000 
00000440 l       .debug_str	00000000 
0000045f l       .debug_str	00000000 
00000486 l       .debug_str	00000000 
00000490 l       .debug_str	00000000 
000004c1 l       .debug_str	00000000 
000004cc l       .debug_str	00000000 
0000050e l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17h9ee29b8e393c1ff5E	00000000 .text._ZN4core3fmt10ArgumentV13new17h9ee29b8e393c1ff5E
00000000 l    d  .text._ZN4core3fmt9Arguments6new_v117hb95b36e501df06b6E	00000000 .text._ZN4core3fmt9Arguments6new_v117hb95b36e501df06b6E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17h9ee29b8e393c1ff5E	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt9Arguments6new_v117hb95b36e501df06b6E	0000004c .hidden core::fmt::Arguments::new_v1



Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h9ee29b8e393c1ff5E:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17h9ee29b8e393c1ff5E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt9Arguments6new_v117hb95b36e501df06b6E:

00000000 <core::fmt::Arguments::new_v1>:
_ZN4core3fmt9Arguments6new_v117hb95b36e501df06b6E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:314
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	9104      	str	r1, [sp, #16]
  12:	9205      	str	r2, [sp, #20]
  14:	9306      	str	r3, [sp, #24]
  16:	f8cd c01c 	str.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:317
  1a:	9904      	ldr	r1, [sp, #16]
  1c:	9a05      	ldr	r2, [sp, #20]
  1e:	2300      	movs	r3, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:318
  20:	9309      	str	r3, [sp, #36]	; 0x24
  22:	9308      	str	r3, [sp, #32]
  24:	9308      	str	r3, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:319
  26:	9b06      	ldr	r3, [sp, #24]
  28:	f8dd c01c 	ldr.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  2c:	6001      	str	r1, [r0, #0]
  2e:	6042      	str	r2, [r0, #4]
  30:	9908      	ldr	r1, [sp, #32]
  32:	9a09      	ldr	r2, [sp, #36]	; 0x24
  34:	6081      	str	r1, [r0, #8]
  36:	60c2      	str	r2, [r0, #12]
  38:	6103      	str	r3, [r0, #16]
  3a:	f8c0 c014 	str.w	ip, [r0, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:321
  3e:	f8cd e00c 	str.w	lr, [sp, #12]
  42:	9402      	str	r4, [sp, #8]
  44:	9501      	str	r5, [sp, #4]
  46:	9600      	str	r6, [sp, #0]
  48:	b00a      	add	sp, #40	; 0x28
  4a:	bd70      	pop	{r4, r5, r6, pc}

generic_array-4247821d0b5909af.generic_array.8vkwza56-cgu.2.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 generic_array.8vkwza56-cgu.2
00000140 l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
00000158 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
0000017a l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.f9b86d12abbb35ac201f11f1108c0b00.2	00000010 .Lanon.f9b86d12abbb35ac201f11f1108c0b00.2
00000000 l     O .rodata..Lanon.f9b86d12abbb35ac201f11f1108c0b00.4	00000010 .Lanon.f9b86d12abbb35ac201f11f1108c0b00.4
00000000 l    d  .text._ZN13generic_array21from_iter_length_fail17h2b06105581ecf346E	00000000 .text._ZN13generic_array21from_iter_length_fail17h2b06105581ecf346E
00000000 l    d  .rodata..Lanon.f9b86d12abbb35ac201f11f1108c0b00.0	00000000 .rodata..Lanon.f9b86d12abbb35ac201f11f1108c0b00.0
00000000 l    d  .rodata..Lanon.f9b86d12abbb35ac201f11f1108c0b00.1	00000000 .rodata..Lanon.f9b86d12abbb35ac201f11f1108c0b00.1
00000000 l    d  .rodata..Lanon.f9b86d12abbb35ac201f11f1108c0b00.3	00000000 .rodata..Lanon.f9b86d12abbb35ac201f11f1108c0b00.3
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN13generic_array21from_iter_length_fail17h2b06105581ecf346E	00000084 generic_array::from_iter_length_fail
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 core::panicking::panic_fmt



Disassembly of section .text._ZN13generic_array21from_iter_length_fail17h2b06105581ecf346E:

00000000 <generic_array::from_iter_length_fail>:
_ZN13generic_array21from_iter_length_fail17h2b06105581ecf346E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\generic-array-0.12.0\src/lib.rs:319
    }
}

#[inline(never)]
#[cold]
fn from_iter_length_fail(length: usize, expected: usize) -> ! {
   0:	b098      	sub	sp, #96	; 0x60
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9008      	str	r0, [sp, #32]
   8:	9109      	str	r1, [sp, #36]	; 0x24
   a:	a808      	add	r0, sp, #32
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\generic-array-0.12.0\src/lib.rs:320
    panic!(
   c:	9014      	str	r0, [sp, #80]	; 0x50
   e:	a809      	add	r0, sp, #36	; 0x24
  10:	9015      	str	r0, [sp, #84]	; 0x54
  12:	9814      	ldr	r0, [sp, #80]	; 0x50
  14:	9016      	str	r0, [sp, #88]	; 0x58
  16:	9815      	ldr	r0, [sp, #84]	; 0x54
  18:	9017      	str	r0, [sp, #92]	; 0x5c
  1a:	9816      	ldr	r0, [sp, #88]	; 0x58
  1c:	f240 0100 	movw	r1, #0
  20:	f2c0 0100 	movt	r1, #0
  24:	9207      	str	r2, [sp, #28]
  26:	9306      	str	r3, [sp, #24]
  28:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  2c:	9005      	str	r0, [sp, #20]
  2e:	9104      	str	r1, [sp, #16]
  30:	e7ff      	b.n	32 <generic_array::from_iter_length_fail+0x32>
  32:	9817      	ldr	r0, [sp, #92]	; 0x5c
  34:	f240 0100 	movw	r1, #0
  38:	f2c0 0100 	movt	r1, #0
  3c:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  40:	9003      	str	r0, [sp, #12]
  42:	9102      	str	r1, [sp, #8]
  44:	e7ff      	b.n	46 <generic_array::from_iter_length_fail+0x46>
  46:	9805      	ldr	r0, [sp, #20]
  48:	9010      	str	r0, [sp, #64]	; 0x40
  4a:	9904      	ldr	r1, [sp, #16]
  4c:	9111      	str	r1, [sp, #68]	; 0x44
  4e:	9a03      	ldr	r2, [sp, #12]
  50:	9212      	str	r2, [sp, #72]	; 0x48
  52:	9b02      	ldr	r3, [sp, #8]
  54:	9313      	str	r3, [sp, #76]	; 0x4c
  56:	46ec      	mov	ip, sp
  58:	f04f 0e02 	mov.w	lr, #2
  5c:	f8cc e000 	str.w	lr, [ip]
  60:	f240 0100 	movw	r1, #0
  64:	f2c0 0100 	movt	r1, #0
  68:	a80a      	add	r0, sp, #40	; 0x28
  6a:	ab10      	add	r3, sp, #64	; 0x40
  6c:	4672      	mov	r2, lr
  6e:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  72:	e7ff      	b.n	2 <generic_array::from_iter_length_fail+0x2>
  74:	f240 0100 	movw	r1, #0
  78:	f2c0 0100 	movt	r1, #0
  7c:	a80a      	add	r0, sp, #40	; 0x28
  7e:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  82:	defe      	udf	#254	; 0xfe

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.0
0000023f l       .debug_str	00000000 
0000055e l       .debug_str	00000000 
0000056a l       .debug_str	00000000 
00000559 l       .debug_str	00000000 
00000568 l       .debug_str	00000000 
00000552 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000108 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
00000110 l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000125 l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000138 l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
00000147 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000161 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
0000017a l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
00000187 l       .debug_str	00000000 
0000019b l       .debug_str	00000000 
000001a7 l       .debug_str	00000000 
000001b3 l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001d3 l       .debug_str	00000000 
000001e4 l       .debug_str	00000000 
000001ee l       .debug_str	00000000 
000001f4 l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
000001fd l       .debug_str	00000000 
00000202 l       .debug_str	00000000 
00000208 l       .debug_str	00000000 
0000020e l       .debug_str	00000000 
00000215 l       .debug_str	00000000 
0000021a l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000223 l       .debug_str	00000000 
00000231 l       .debug_str	00000000 
0000023b l       .debug_str	00000000 
00000520 l       .debug_str	00000000 
0000024a l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
0000025b l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
0000027c l       .debug_str	00000000 
00000284 l       .debug_str	00000000 
0000029b l       .debug_str	00000000 
000002bf l       .debug_str	00000000 
000002db l       .debug_str	00000000 
000002e0 l       .debug_str	00000000 
000002e9 l       .debug_str	00000000 
000002f0 l       .debug_str	00000000 
00000309 l       .debug_str	00000000 
00000313 l       .debug_str	00000000 
0000032d l       .debug_str	00000000 
0000038b l       .debug_str	00000000 
00000396 l       .debug_str	00000000 
0000039d l       .debug_str	00000000 
000003a7 l       .debug_str	00000000 
000003ac l       .debug_str	00000000 
000003b8 l       .debug_str	00000000 
000003c0 l       .debug_str	00000000 
000003c9 l       .debug_str	00000000 
000003ce l       .debug_str	00000000 
000003d1 l       .debug_str	00000000 
000003da l       .debug_str	00000000 
000003e1 l       .debug_str	00000000 
000003e4 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
000003f4 l       .debug_str	00000000 
000003fc l       .debug_str	00000000 
00000402 l       .debug_str	00000000 
0000040d l       .debug_str	00000000 
00000416 l       .debug_str	00000000 
00000439 l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
0000047f l       .debug_str	00000000 
00000489 l       .debug_str	00000000 
000004d1 l       .debug_str	00000000 
000004dc l       .debug_str	00000000 
000004e3 l       .debug_str	00000000 
00000514 l       .debug_str	00000000 
00000566 l       .debug_str	00000000 
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8e167aafd3bdcdafE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8e167aafd3bdcdafE
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17h5864edecdd47206aE	00000000 .text._ZN4core3fmt10ArgumentV13new17h5864edecdd47206aE
00000000 l    d  .text._ZN4core3fmt9Arguments6new_v117hdb544469a66bbd2dE	00000000 .text._ZN4core3fmt9Arguments6new_v117hdb544469a66bbd2dE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8e167aafd3bdcdafE	00000028 <&T as core::fmt::Debug>::fmt
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17h5864edecdd47206aE	00000032 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::num::<impl core::fmt::Debug for usize>::fmt
00000000 g     F .text._ZN4core3fmt9Arguments6new_v117hdb544469a66bbd2dE	0000004c .hidden core::fmt::Arguments::new_v1



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8e167aafd3bdcdafE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8e167aafd3bdcdafE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h5864edecdd47206aE:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17h5864edecdd47206aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt9Arguments6new_v117hdb544469a66bbd2dE:

00000000 <core::fmt::Arguments::new_v1>:
_ZN4core3fmt9Arguments6new_v117hdb544469a66bbd2dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:314
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	9104      	str	r1, [sp, #16]
  12:	9205      	str	r2, [sp, #20]
  14:	9306      	str	r3, [sp, #24]
  16:	f8cd c01c 	str.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:317
  1a:	9904      	ldr	r1, [sp, #16]
  1c:	9a05      	ldr	r2, [sp, #20]
  1e:	2300      	movs	r3, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:318
  20:	9309      	str	r3, [sp, #36]	; 0x24
  22:	9308      	str	r3, [sp, #32]
  24:	9308      	str	r3, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:319
  26:	9b06      	ldr	r3, [sp, #24]
  28:	f8dd c01c 	ldr.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  2c:	6001      	str	r1, [r0, #0]
  2e:	6042      	str	r2, [r0, #4]
  30:	9908      	ldr	r1, [sp, #32]
  32:	9a09      	ldr	r2, [sp, #36]	; 0x24
  34:	6081      	str	r1, [r0, #8]
  36:	60c2      	str	r2, [r0, #12]
  38:	6103      	str	r3, [r0, #16]
  3a:	f8c0 c014 	str.w	ip, [r0, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:321
  3e:	f8cd e00c 	str.w	lr, [sp, #12]
  42:	9402      	str	r4, [sp, #8]
  44:	9501      	str	r5, [sp, #4]
  46:	9600      	str	r6, [sp, #0]
  48:	b00a      	add	sp, #40	; 0x28
  4a:	bd70      	pop	{r4, r5, r6, pc}

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.1.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.1
00000161 l       .debug_str	00000000 
00000174 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17h8c6a1ff28b6f695aE	00000000 .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17h8c6a1ff28b6f695aE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17h8c6a1ff28b6f695aE	00000028 .hidden core::cmp::impls::<impl core::cmp::PartialOrd for usize>::le



Disassembly of section .text._ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17h8c6a1ff28b6f695aE:

00000000 <core::cmp::impls::<impl core::cmp::PartialOrd for usize>::le>:
_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2le17h8c6a1ff28b6f695aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:976
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
   a:	9802      	ldr	r0, [sp, #8]
   c:	6800      	ldr	r0, [r0, #0]
   e:	9903      	ldr	r1, [sp, #12]
  10:	6809      	ldr	r1, [r1, #0]
  12:	f04f 0c00 	mov.w	ip, #0
  16:	4288      	cmp	r0, r1
  18:	bf98      	it	ls
  1a:	f04f 0c01 	movls.w	ip, #1
  1e:	4660      	mov	r0, ip
  20:	9201      	str	r2, [sp, #4]
  22:	9300      	str	r3, [sp, #0]
  24:	b004      	add	sp, #16
  26:	4770      	bx	lr

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.10.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.10
000000f0 l       .debug_str	00000000 
00000127 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f2 l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3mem7size_of17he296f163b70ee57fE	00000000 .text._ZN4core3mem7size_of17he296f163b70ee57fE
00000000 l    d  .text._ZN4core3mem8align_of17h7ba3878fe1d1633bE	00000000 .text._ZN4core3mem8align_of17h7ba3878fe1d1633bE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3mem7size_of17he296f163b70ee57fE	00000012 core::mem::size_of
00000000 g     F .text._ZN4core3mem8align_of17h7ba3878fe1d1633bE	00000012 core::mem::align_of



Disassembly of section .text._ZN4core3mem7size_of17he296f163b70ee57fE:

00000000 <core::mem::size_of>:
_ZN4core3mem7size_of17he296f163b70ee57fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:242
   0:	b082      	sub	sp, #8
   2:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:243
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::size_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:244
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem8align_of17h7ba3878fe1d1633bE:

00000000 <core::mem::align_of>:
_ZN4core3mem8align_of17h7ba3878fe1d1633bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:334
   0:	b082      	sub	sp, #8
   2:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:335
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::align_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:336
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.11.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.11
000001a6 l       .debug_str	00000000 
00000387 l       .debug_str	00000000 
0000033d l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
00000330 l       .debug_str	00000000 
000002e8 l       .debug_str	00000000 
00000456 l       .debug_str	00000000 
000002da l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
00000452 l       .debug_str	00000000 
000002d3 l       .debug_str	00000000 
0000044d l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
000002c8 l       .debug_str	00000000 
000002c4 l       .debug_str	00000000 
00000443 l       .debug_str	00000000 
000002bd l       .debug_str	00000000 
000003ff l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
0000026a l       .debug_str	00000000 
000003f1 l       .debug_str	00000000 
00000260 l       .debug_str	00000000 
000003e1 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000199 l       .debug_str	00000000 
0000020e l       .debug_str	00000000 
000001f1 l       .debug_str	00000000 
00000201 l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
00000209 l       .debug_str	00000000 
00000396 l       .debug_str	00000000 
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_add17h9b60cb46edf7c599E	00000022 core::num::<impl isize>::wrapping_add
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$isize$GT$15overflowing_neg17hcbb1cae3867488a2E	00000044 core::num::<impl isize>::overflowing_neg
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$isize$GT$9min_value17hd808d8da2434d806E	00000006 core::num::<impl isize>::min_value
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h2741645da802328aE	00000050 core::num::<impl usize>::checked_mul
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h03f00c48c7235368E	00000052 core::num::<impl usize>::overflowing_mul
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17h7a5b6f3abe90a7e8E	00000006 core::num::<impl usize>::max_value
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_add17h9b60cb46edf7c599E	00000000 .text._ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_add17h9b60cb46edf7c599E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17h3d1a3a3a0df11c06E	00000000 .text._ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17h3d1a3a3a0df11c06E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$isize$GT$15overflowing_neg17hcbb1cae3867488a2E	00000000 .text._ZN4core3num23_$LT$impl$u20$isize$GT$15overflowing_neg17hcbb1cae3867488a2E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$isize$GT$9min_value17hd808d8da2434d806E	00000000 .text._ZN4core3num23_$LT$impl$u20$isize$GT$9min_value17hd808d8da2434d806E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h2741645da802328aE	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h2741645da802328aE
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hd923343b16ddbc65E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hd923343b16ddbc65E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hbe82c44ecd7a99faE	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hbe82c44ecd7a99faE
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h03f00c48c7235368E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h03f00c48c7235368E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17h7a5b6f3abe90a7e8E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17h7a5b6f3abe90a7e8E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17h3d1a3a3a0df11c06E	0000001c .hidden core::num::<impl isize>::wrapping_neg
00000000 g     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hd923343b16ddbc65E	00000022 .hidden core::num::<impl usize>::wrapping_sub
00000000 g     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hbe82c44ecd7a99faE	0000003a .hidden core::num::<impl usize>::saturating_mul
00000000         *UND*	00000000 core::option::Option<T>::unwrap_or



Disassembly of section .text._ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_add17h9b60cb46edf7c599E:

00000000 <core::num::<impl isize>::wrapping_add>:
_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_add17h9b60cb46edf7c599E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:1116
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:1117
   a:	9803      	ldr	r0, [sp, #12]
   c:	9904      	ldr	r1, [sp, #16]
   e:	4408      	add	r0, r1
  10:	9005      	str	r0, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
  14:	9202      	str	r2, [sp, #8]
  16:	9301      	str	r3, [sp, #4]
  18:	9000      	str	r0, [sp, #0]
  1a:	e7ff      	b.n	1c <core::num::<impl isize>::wrapping_add+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:1118
  1c:	9800      	ldr	r0, [sp, #0]
  1e:	b006      	add	sp, #24
  20:	4770      	bx	lr

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17h3d1a3a3a0df11c06E:

00000000 <core::num::<impl isize>::wrapping_neg>:
_ZN4core3num23_$LT$impl$u20$isize$GT$12wrapping_neg17h3d1a3a3a0df11c06E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:1305
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:1306
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <core::num::<impl isize>::wrapping_neg>
  10:	9101      	str	r1, [sp, #4]
  12:	9000      	str	r0, [sp, #0]
  14:	e7ff      	b.n	16 <core::num::<impl isize>::wrapping_neg+0x16>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:1307
  16:	9800      	ldr	r0, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$isize$GT$15overflowing_neg17hcbb1cae3867488a2E:

00000000 <core::num::<impl isize>::overflowing_neg>:
_ZN4core3num23_$LT$impl$u20$isize$GT$15overflowing_neg17hcbb1cae3867488a2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:1679
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4601      	mov	r1, r0
   6:	9005      	str	r0, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:1680
   8:	9805      	ldr	r0, [sp, #20]
   a:	43c0      	mvns	r0, r0
   c:	2201      	movs	r2, #1
   e:	9104      	str	r1, [sp, #16]
  10:	4611      	mov	r1, r2
  12:	f7ff fffe 	bl	0 <core::num::<impl isize>::overflowing_neg>
  16:	9003      	str	r0, [sp, #12]
  18:	e7ff      	b.n	1a <core::num::<impl isize>::overflowing_neg+0x1a>
  1a:	9805      	ldr	r0, [sp, #20]
  1c:	9002      	str	r0, [sp, #8]
  1e:	f7ff fffe 	bl	0 <core::num::<impl isize>::overflowing_neg>
  22:	9001      	str	r0, [sp, #4]
  24:	e7ff      	b.n	26 <core::num::<impl isize>::overflowing_neg+0x26>
  26:	9802      	ldr	r0, [sp, #8]
  28:	9901      	ldr	r1, [sp, #4]
  2a:	1a42      	subs	r2, r0, r1
  2c:	fab2 f282 	clz	r2, r2
  30:	0952      	lsrs	r2, r2, #5
  32:	9b03      	ldr	r3, [sp, #12]
  34:	9306      	str	r3, [sp, #24]
  36:	f88d 201c 	strb.w	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:1681
  3a:	9806      	ldr	r0, [sp, #24]
  3c:	f89d 101c 	ldrb.w	r1, [sp, #28]
  40:	b008      	add	sp, #32
  42:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$isize$GT$9min_value17hd808d8da2434d806E:

00000000 <core::num::<impl isize>::min_value>:
_ZN4core3num23_$LT$impl$u20$isize$GT$9min_value17hd808d8da2434d806E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:257
   0:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:259
   4:	4770      	bx	lr

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h2741645da802328aE:

00000000 <core::num::<impl usize>::checked_mul>:
_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h2741645da802328aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2720
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2721
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::num::<impl usize>::checked_mul>
  18:	9001      	str	r0, [sp, #4]
  1a:	9100      	str	r1, [sp, #0]
  1c:	e7ff      	b.n	1e <core::num::<impl usize>::checked_mul+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	9008      	str	r0, [sp, #32]
  22:	9900      	ldr	r1, [sp, #0]
  24:	f001 0201 	and.w	r2, r1, #1
  28:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2722
  2c:	f89d 2027 	ldrb.w	r2, [sp, #39]	; 0x27
  30:	07d2      	lsls	r2, r2, #31
  32:	2a00      	cmp	r2, #0
  34:	d003      	beq.n	3e <core::num::<impl usize>::checked_mul+0x3e>
  36:	e7ff      	b.n	38 <core::num::<impl usize>::checked_mul+0x38>
  38:	2000      	movs	r0, #0
  3a:	9006      	str	r0, [sp, #24]
  3c:	e004      	b.n	48 <core::num::<impl usize>::checked_mul+0x48>
  3e:	9808      	ldr	r0, [sp, #32]
  40:	9007      	str	r0, [sp, #28]
  42:	2001      	movs	r0, #1
  44:	9006      	str	r0, [sp, #24]
  46:	e7ff      	b.n	48 <core::num::<impl usize>::checked_mul+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2723
  48:	9806      	ldr	r0, [sp, #24]
  4a:	9907      	ldr	r1, [sp, #28]
  4c:	b00a      	add	sp, #40	; 0x28
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hd923343b16ddbc65E:

00000000 <core::num::<impl usize>::wrapping_sub>:
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hd923343b16ddbc65E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3068
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
   a:	9803      	ldr	r0, [sp, #12]
   c:	9904      	ldr	r1, [sp, #16]
   e:	1a40      	subs	r0, r0, r1
  10:	9005      	str	r0, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
  14:	9202      	str	r2, [sp, #8]
  16:	9301      	str	r3, [sp, #4]
  18:	9000      	str	r0, [sp, #0]
  1a:	e7ff      	b.n	1c <core::num::<impl usize>::wrapping_sub+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3070
  1c:	9800      	ldr	r0, [sp, #0]
  1e:	b006      	add	sp, #24
  20:	4770      	bx	lr

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hbe82c44ecd7a99faE:

00000000 <core::num::<impl usize>::saturating_mul>:
_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17hbe82c44ecd7a99faE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2997
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2998
   c:	9806      	ldr	r0, [sp, #24]
   e:	9907      	ldr	r1, [sp, #28]
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  18:	9003      	str	r0, [sp, #12]
  1a:	9102      	str	r1, [sp, #8]
  1c:	e7ff      	b.n	1e <core::num::<impl usize>::saturating_mul+0x1e>
  1e:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  22:	9001      	str	r0, [sp, #4]
  24:	e7ff      	b.n	26 <core::num::<impl usize>::saturating_mul+0x26>
  26:	9803      	ldr	r0, [sp, #12]
  28:	9902      	ldr	r1, [sp, #8]
  2a:	9a01      	ldr	r2, [sp, #4]
  2c:	f7ff fffe 	bl	0 <core::option::Option<T>::unwrap_or>
  30:	9000      	str	r0, [sp, #0]
  32:	e7ff      	b.n	34 <core::num::<impl usize>::saturating_mul+0x34>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2999
  34:	9800      	ldr	r0, [sp, #0]
  36:	b008      	add	sp, #32
  38:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h03f00c48c7235368E:

00000000 <core::num::<impl usize>::overflowing_mul>:
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h03f00c48c7235368E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3401
   0:	b08c      	sub	sp, #48	; 0x30
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3402
   a:	9804      	ldr	r0, [sp, #16]
   c:	9905      	ldr	r1, [sp, #20]
   e:	fba0 0101 	umull	r0, r1, r0, r1
  12:	2900      	cmp	r1, #0
  14:	bf18      	it	ne
  16:	2101      	movne	r1, #1
  18:	900a      	str	r0, [sp, #40]	; 0x28
  1a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
  1e:	980a      	ldr	r0, [sp, #40]	; 0x28
  20:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
  24:	9203      	str	r2, [sp, #12]
  26:	9302      	str	r3, [sp, #8]
  28:	9001      	str	r0, [sp, #4]
  2a:	9100      	str	r1, [sp, #0]
  2c:	e7ff      	b.n	2e <core::num::<impl usize>::overflowing_mul+0x2e>
  2e:	9801      	ldr	r0, [sp, #4]
  30:	9008      	str	r0, [sp, #32]
  32:	9900      	ldr	r1, [sp, #0]
  34:	f001 0201 	and.w	r2, r1, #1
  38:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3403
  3c:	9a08      	ldr	r2, [sp, #32]
  3e:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
  42:	9206      	str	r2, [sp, #24]
  44:	f88d 301c 	strb.w	r3, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3404
  48:	9806      	ldr	r0, [sp, #24]
  4a:	f89d 101c 	ldrb.w	r1, [sp, #28]
  4e:	b00c      	add	sp, #48	; 0x30
  50:	4770      	bx	lr

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17h7a5b6f3abe90a7e8E:

00000000 <core::num::<impl usize>::max_value>:
_ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17h7a5b6f3abe90a7e8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2326
   0:	f04f 30ff 	mov.w	r0, #4294967295
   4:	4770      	bx	lr

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.2.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.2
00000143 l       .debug_str	00000000 
000001b0 l       .debug_str	00000000 
000001bc l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
00000155 l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf0106c7b78f17716E	00000000 .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf0106c7b78f17716E
00000000 l    d  .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h2dd721d17ad3d086E	00000000 .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h2dd721d17ad3d086E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf0106c7b78f17716E	00000022 core::ptr::<impl *const T>::add
00000000 g     F .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h2dd721d17ad3d086E	00000022 core::ptr::<impl *const T>::offset



Disassembly of section .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf0106c7b78f17716E:

00000000 <core::ptr::<impl *const T>::add>:
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf0106c7b78f17716E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1296
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1299
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::add>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <core::ptr::<impl *const T>::add+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1300
  1c:	9801      	ldr	r0, [sp, #4]
  1e:	b006      	add	sp, #24
  20:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h2dd721d17ad3d086E:

00000000 <core::ptr::<impl *const T>::offset>:
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h2dd721d17ad3d086E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1078
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
   a:	9803      	ldr	r0, [sp, #12]
   c:	9904      	ldr	r1, [sp, #16]
   e:	4408      	add	r0, r1
  10:	9005      	str	r0, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
  14:	9202      	str	r2, [sp, #8]
  16:	9301      	str	r3, [sp, #4]
  18:	9000      	str	r0, [sp, #0]
  1a:	e7ff      	b.n	1c <core::ptr::<impl *const T>::offset+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1080
  1c:	9800      	ldr	r0, [sp, #0]
  1e:	b006      	add	sp, #24
  20:	4770      	bx	lr

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.3.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.3
000001fe l       .debug_str	00000000 
000003e3 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000108 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
00000110 l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000125 l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
0000019b l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001a6 l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001b9 l       .debug_str	00000000 
000001be l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001cf l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001db l       .debug_str	00000000 
000001dd l       .debug_str	00000000 
000001e2 l       .debug_str	00000000 
000001e6 l       .debug_str	00000000 
000001f4 l       .debug_str	00000000 
000003ca l       .debug_str	00000000 
00000202 l       .debug_str	00000000 
0000020a l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
00000219 l       .debug_str	00000000 
0000022d l       .debug_str	00000000 
00000239 l       .debug_str	00000000 
00000244 l       .debug_str	00000000 
0000024b l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
00000255 l       .debug_str	00000000 
0000025b l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
00000264 l       .debug_str	00000000 
00000273 l       .debug_str	00000000 
0000027a l       .debug_str	00000000 
0000027e l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
00000293 l       .debug_str	00000000 
000002ac l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
00000335 l       .debug_str	00000000 
00000352 l       .debug_str	00000000 
00000356 l       .debug_str	00000000 
0000035e l       .debug_str	00000000 
00000375 l       .debug_str	00000000 
00000399 l       .debug_str	00000000 
000003b5 l       .debug_str	00000000 
000003ba l       .debug_str	00000000 
000003c3 l       .debug_str	00000000 
000003ed l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hb6030de3e7f5cbeeE	00000000 .text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hb6030de3e7f5cbeeE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
00000000 g     F .text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hb6030de3e7f5cbeeE	00000072 .hidden core::fmt::num::<impl core::fmt::Debug for usize>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
00000000         *UND*	00000000 core::fmt::Formatter::debug_lower_hex
00000000         *UND*	00000000 core::fmt::Formatter::debug_upper_hex



Disassembly of section .text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hb6030de3e7f5cbeeE:

00000000 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>:
_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hb6030de3e7f5cbeeE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:146
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   c:	9806      	ldr	r0, [sp, #24]
   e:	9204      	str	r2, [sp, #16]
  10:	9303      	str	r3, [sp, #12]
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
  16:	9002      	str	r0, [sp, #8]
  18:	e7ff      	b.n	1a <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x1a>
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	07c1      	lsls	r1, r0, #31
  1e:	2900      	cmp	r1, #0
  20:	d008      	beq.n	34 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x34>
  22:	e7ff      	b.n	24 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x24>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
  24:	9805      	ldr	r0, [sp, #20]
  26:	9906      	ldr	r1, [sp, #24]
  28:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt>
  2c:	f88d 001f 	strb.w	r0, [sp, #31]
  30:	e7ff      	b.n	32 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  32:	e01a      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  34:	9806      	ldr	r0, [sp, #24]
  36:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d008      	beq.n	58 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x58>
  46:	e7ff      	b.n	48 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9906      	ldr	r1, [sp, #24]
  4c:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt>
  50:	f88d 001f 	strb.w	r0, [sp, #31]
  54:	e7ff      	b.n	56 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  56:	e007      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  58:	9805      	ldr	r0, [sp, #20]
  5a:	9906      	ldr	r1, [sp, #24]
  5c:	f7ff fffe 	bl	0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt>
  60:	f88d 001f 	strb.w	r0, [sp, #31]
  64:	e7ff      	b.n	66 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x66>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  66:	e7ff      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  68:	e7ff      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:154
  6a:	f89d 001f 	ldrb.w	r0, [sp, #31]
  6e:	b008      	add	sp, #32
  70:	bd80      	pop	{r7, pc}

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.4.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.4
000001a2 l       .debug_str	00000000 
000002eb l       .debug_str	00000000 
00000304 l       .debug_str	00000000 
000002e5 l       .debug_str	00000000 
00000300 l       .debug_str	00000000 
000002df l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
000002db l       .debug_str	00000000 
000001a9 l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
00000241 l       .debug_str	00000000 
00000253 l       .debug_str	00000000 
000002d6 l       .debug_str	00000000 
000002ef l       .debug_str	00000000 
00000000 l    d  .text._ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7c4131d17e152cdbE	00000000 .text._ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7c4131d17e152cdbE
00000000 l    d  .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb3c2d3aafc886577E	00000000 .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb3c2d3aafc886577E
00000000 l    d  .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h1976541396165bb2E	00000000 .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h1976541396165bb2E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7c4131d17e152cdbE	00000050 <core::ops::range::RangeFrom<usize> as core::slice::SliceIndex<[T]>>::index
00000000         *UND*	00000000 core::ptr::<impl *const T>::add
00000000         *UND*	00000000 core::slice::from_raw_parts
00000000         *UND*	00000000 core::slice::slice_index_len_fail
00000000         *UND*	00000000 core::slice::slice_index_order_fail
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000 g     F .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb3c2d3aafc886577E	00000052 <core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked
00000000 g     F .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h1976541396165bb2E	0000008a <core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index



Disassembly of section .text._ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7c4131d17e152cdbE:

00000000 <<core::ops::range::RangeFrom<usize> as core::slice::SliceIndex<[T]>>::index>:
_ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7c4131d17e152cdbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2826
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9007      	str	r0, [sp, #28]
   c:	9108      	str	r1, [sp, #32]
   e:	9209      	str	r2, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2827
  10:	9807      	ldr	r0, [sp, #28]
  12:	9908      	ldr	r1, [sp, #32]
  14:	9a09      	ldr	r2, [sp, #36]	; 0x24
  16:	9006      	str	r0, [sp, #24]
  18:	4608      	mov	r0, r1
  1a:	4611      	mov	r1, r2
  1c:	9305      	str	r3, [sp, #20]
  1e:	f8cd c010 	str.w	ip, [sp, #16]
  22:	f8cd e00c 	str.w	lr, [sp, #12]
  26:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  2a:	9002      	str	r0, [sp, #8]
  2c:	e7ff      	b.n	2e <<core::ops::range::RangeFrom<usize> as core::slice::SliceIndex<[T]>>::index+0x2e>
  2e:	9806      	ldr	r0, [sp, #24]
  30:	900a      	str	r0, [sp, #40]	; 0x28
  32:	9902      	ldr	r1, [sp, #8]
  34:	910b      	str	r1, [sp, #44]	; 0x2c
  36:	9a08      	ldr	r2, [sp, #32]
  38:	9b09      	ldr	r3, [sp, #36]	; 0x24
  3a:	980a      	ldr	r0, [sp, #40]	; 0x28
  3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  3e:	f7ff fffe 	bl	0 <<core::ops::range::RangeFrom<usize> as core::slice::SliceIndex<[T]>>::index>
  42:	9001      	str	r0, [sp, #4]
  44:	9100      	str	r1, [sp, #0]
  46:	e7ff      	b.n	48 <<core::ops::range::RangeFrom<usize> as core::slice::SliceIndex<[T]>>::index+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2828
  48:	9801      	ldr	r0, [sp, #4]
  4a:	9900      	ldr	r1, [sp, #0]
  4c:	b00c      	add	sp, #48	; 0x30
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb3c2d3aafc886577E:

00000000 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked>:
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb3c2d3aafc886577E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2732
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9008      	str	r0, [sp, #32]
   e:	9109      	str	r1, [sp, #36]	; 0x24
  10:	920a      	str	r2, [sp, #40]	; 0x28
  12:	930b      	str	r3, [sp, #44]	; 0x2c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2733
  14:	980a      	ldr	r0, [sp, #40]	; 0x28
  16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  18:	f8cd c01c 	str.w	ip, [sp, #28]
  1c:	f8cd e018 	str.w	lr, [sp, #24]
  20:	9405      	str	r4, [sp, #20]
  22:	9504      	str	r5, [sp, #16]
  24:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  28:	9003      	str	r0, [sp, #12]
  2a:	e7ff      	b.n	2c <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked+0x2c>
  2c:	9908      	ldr	r1, [sp, #32]
  2e:	9803      	ldr	r0, [sp, #12]
  30:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::add>
  34:	9002      	str	r0, [sp, #8]
  36:	e7ff      	b.n	38 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked+0x38>
  38:	9808      	ldr	r0, [sp, #32]
  3a:	9909      	ldr	r1, [sp, #36]	; 0x24
  3c:	1a09      	subs	r1, r1, r0
  3e:	9802      	ldr	r0, [sp, #8]
  40:	f7ff fffe 	bl	0 <core::slice::from_raw_parts>
  44:	9001      	str	r0, [sp, #4]
  46:	9100      	str	r1, [sp, #0]
  48:	e7ff      	b.n	4a <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked+0x4a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2734
  4a:	9801      	ldr	r0, [sp, #4]
  4c:	9900      	ldr	r1, [sp, #0]
  4e:	b00c      	add	sp, #48	; 0x30
  50:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h1976541396165bb2E:

00000000 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index>:
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h1976541396165bb2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2742
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	900a      	str	r0, [sp, #40]	; 0x28
   e:	910b      	str	r1, [sp, #44]	; 0x2c
  10:	920c      	str	r2, [sp, #48]	; 0x30
  12:	930d      	str	r3, [sp, #52]	; 0x34
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2743
  14:	980a      	ldr	r0, [sp, #40]	; 0x28
  16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  18:	4288      	cmp	r0, r1
  1a:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  1e:	f8cd e020 	str.w	lr, [sp, #32]
  22:	9407      	str	r4, [sp, #28]
  24:	9506      	str	r5, [sp, #24]
  26:	d905      	bls.n	34 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index+0x34>
  28:	e7ff      	b.n	2a <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2744
  2a:	980a      	ldr	r0, [sp, #40]	; 0x28
  2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  2e:	f7ff fffe 	bl	0 <core::slice::slice_index_order_fail>
  32:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2745
  34:	980b      	ldr	r0, [sp, #44]	; 0x2c
  36:	990c      	ldr	r1, [sp, #48]	; 0x30
  38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  3a:	9005      	str	r0, [sp, #20]
  3c:	4608      	mov	r0, r1
  3e:	4611      	mov	r1, r2
  40:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  44:	9004      	str	r0, [sp, #16]
  46:	e7ff      	b.n	48 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index+0x48>
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9904      	ldr	r1, [sp, #16]
  4c:	4288      	cmp	r0, r1
  4e:	d90f      	bls.n	70 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index+0x70>
  50:	e7ff      	b.n	52 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index+0x52>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2746
  52:	980b      	ldr	r0, [sp, #44]	; 0x2c
  54:	990c      	ldr	r1, [sp, #48]	; 0x30
  56:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  58:	9003      	str	r0, [sp, #12]
  5a:	4608      	mov	r0, r1
  5c:	4611      	mov	r1, r2
  5e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  62:	9002      	str	r0, [sp, #8]
  64:	e7ff      	b.n	66 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index+0x66>
  66:	9803      	ldr	r0, [sp, #12]
  68:	9902      	ldr	r1, [sp, #8]
  6a:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
  6e:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2749
  70:	980a      	ldr	r0, [sp, #40]	; 0x28
  72:	990b      	ldr	r1, [sp, #44]	; 0x2c
  74:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  78:	f7ff fffe 	bl	0 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index>
  7c:	9001      	str	r0, [sp, #4]
  7e:	9100      	str	r1, [sp, #0]
  80:	e7ff      	b.n	82 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index+0x82>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2751
  82:	9801      	ldr	r0, [sp, #4]
  84:	9900      	ldr	r1, [sp, #0]
  86:	b00e      	add	sp, #56	; 0x38
  88:	bdb0      	pop	{r4, r5, r7, pc}

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.5.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.5
00000041 l       .debug_str	00000000 
00000771 l       .debug_str	00000000 
0000075c l       .debug_str	00000000 
0000071e l       .debug_str	00000000 
00000716 l       .debug_str	00000000 
000006e6 l       .debug_str	00000000 
000006de l       .debug_str	00000000 
000006ae l       .debug_str	00000000 
0000065f l       .debug_str	00000000 
0000062e l       .debug_str	00000000 
000005df l       .debug_str	00000000 
000005ae l       .debug_str	00000000 
00000560 l       .debug_str	00000000 
00000530 l       .debug_str	00000000 
000004e2 l       .debug_str	00000000 
000004b2 l       .debug_str	00000000 
00000464 l       .debug_str	00000000 
00000836 l       .debug_str	00000000 
00000434 l       .debug_str	00000000 
00000832 l       .debug_str	00000000 
00000428 l       .debug_str	00000000 
000003db l       .debug_str	00000000 
000003ac l       .debug_str	00000000 
000003a3 l       .debug_str	00000000 
0000036b l       .debug_str	00000000 
00000362 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
0000082e l       .debug_str	00000000 
00000322 l       .debug_str	00000000 
0000082a l       .debug_str	00000000 
0000030a l       .debug_str	00000000 
000002d2 l       .debug_str	00000000 
000002ca l       .debug_str	00000000 
00000292 l       .debug_str	00000000 
0000028e l       .debug_str	00000000 
00000286 l       .debug_str	00000000 
0000024e l       .debug_str	00000000 
00000827 l       .debug_str	00000000 
0000024a l       .debug_str	00000000 
00000823 l       .debug_str	00000000 
00000248 l       .debug_str	00000000 
00000243 l       .debug_str	00000000 
00000230 l       .debug_str	00000000 
000001f4 l       .debug_str	00000000 
000001ec l       .debug_str	00000000 
000001e8 l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001cc l       .debug_str	00000000 
0000081f l       .debug_str	00000000 
000001be l       .debug_str	00000000 
0000081b l       .debug_str	00000000 
000001b9 l       .debug_str	00000000 
000001b7 l       .debug_str	00000000 
000001b2 l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001a7 l       .debug_str	00000000 
00000818 l       .debug_str	00000000 
000001a2 l       .debug_str	00000000 
00000813 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
00000152 l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
0000080f l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
0000080b l       .debug_str	00000000 
0000013d l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000809 l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000804 l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000007fc l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
000007f7 l       .debug_str	00000000 
0000079d l       .debug_str	00000000 
000007ed l       .debug_str	00000000 
000007a1 l       .debug_str	00000000 
000007e6 l       .debug_str	00000000 
000007dd l       .debug_str	00000000 
000007d7 l       .debug_str	00000000 
000007d1 l       .debug_str	00000000 
000007c7 l       .debug_str	00000000 
000007c3 l       .debug_str	00000000 
000007bd l       .debug_str	00000000 
000007b6 l       .debug_str	00000000 
000007ad l       .debug_str	00000000 
000007a4 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.0	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.0
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.1	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.1
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.12	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.12
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.13	00000010 .Lanon.95b1762e67c7da7e6dad270b39b8152a.13
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.14	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.14
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.15	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.15
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.16	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.16
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.17	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.17
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.18	00000010 .Lanon.95b1762e67c7da7e6dad270b39b8152a.18
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.19	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.19
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.2	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.2
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.20	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.20
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.21	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.21
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.22	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.22
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.23	00000010 .Lanon.95b1762e67c7da7e6dad270b39b8152a.23
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.24	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.24
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.26	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.26
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.27	00000010 .Lanon.95b1762e67c7da7e6dad270b39b8152a.27
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.28	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.28
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.29	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.29
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.30	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.30
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.31	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.31
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.32	00000010 .Lanon.95b1762e67c7da7e6dad270b39b8152a.32
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.33	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.33
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.34	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.34
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.35	00000010 .Lanon.95b1762e67c7da7e6dad270b39b8152a.35
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.37	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.37
00000000 l     O .rodata.cst32	00000020 .Lanon.95b1762e67c7da7e6dad270b39b8152a.38
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.39	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.39
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.40	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.40
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.41	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.41
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.43	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.43
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.44	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.44
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.46	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.46
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.47	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.47
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.5	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.5
00000000 l     O .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.7	00000018 .Lanon.95b1762e67c7da7e6dad270b39b8152a.7
00000000 l     O .rodata.cst4	00000004 .Lanon.95b1762e67c7da7e6dad270b39b8152a.8
00000000 l     F .text._ZN6memchr8fallback20read_unaligned_usize17hae6fe6a9efa4cadbE	00000024 memchr::fallback::read_unaligned_usize
00000000 l     F .text._ZN6memchr8fallback3sub17h0f15317396f7d7b6E	00000052 memchr::fallback::sub
00000000 l     F .text._ZN6memchr8fallback6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h1b12d30bbab3e3f3E	00000026 memchr::fallback::memchr::{{closure}}
00000000 l     F .text._ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17h7c18db72216e016aE	00000048 memchr::fallback::memchr2::{{closure}}
00000000 l     F .text._ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17h0062600ec7f40f81E	00000074 memchr::fallback::memchr3::{{closure}}
00000000 l     F .text._ZN6memchr8fallback7memrchr28_$u7b$$u7b$closure$u7d$$u7d$17h3604ea4dcfe15117E	00000026 memchr::fallback::memrchr::{{closure}}
00000000 l     F .text._ZN6memchr8fallback7ptr_add17haeb9f9da0ab6beb0E	00000046 memchr::fallback::ptr_add
00000000 l     F .text._ZN6memchr8fallback7ptr_sub17h30ccf1ee126942f9E	00000056 memchr::fallback::ptr_sub
00000000 l     F .text._ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h08d540f371c3fc98E	00000048 memchr::fallback::memrchr2::{{closure}}
00000000 l     F .text._ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h03db7765599d3dceE	00000074 memchr::fallback::memrchr3::{{closure}}
00000000 l     O .rodata.str.0	0000005b str.0
00000000 l     O .rodata.str.1	00000021 str.1
00000000 l     O .rodata.str.2	00000021 str.2
00000000 l    d  .text._ZN6memchr8fallback6memchr17h268dcf9bdace5be3E	00000000 .text._ZN6memchr8fallback6memchr17h268dcf9bdace5be3E
00000000 l    d  .text._ZN6memchr8fallback6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h1b12d30bbab3e3f3E	00000000 .text._ZN6memchr8fallback6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h1b12d30bbab3e3f3E
00000000 l    d  .text._ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE	00000000 .text._ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE
00000000 l    d  .text._ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17h7c18db72216e016aE	00000000 .text._ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17h7c18db72216e016aE
00000000 l    d  .text._ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE	00000000 .text._ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE
00000000 l    d  .text._ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17h0062600ec7f40f81E	00000000 .text._ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17h0062600ec7f40f81E
00000000 l    d  .text._ZN6memchr8fallback7memrchr17h36db488819deab65E	00000000 .text._ZN6memchr8fallback7memrchr17h36db488819deab65E
00000000 l    d  .text._ZN6memchr8fallback7memrchr28_$u7b$$u7b$closure$u7d$$u7d$17h3604ea4dcfe15117E	00000000 .text._ZN6memchr8fallback7memrchr28_$u7b$$u7b$closure$u7d$$u7d$17h3604ea4dcfe15117E
00000000 l    d  .text._ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E	00000000 .text._ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E
00000000 l    d  .text._ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h08d540f371c3fc98E	00000000 .text._ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h08d540f371c3fc98E
00000000 l    d  .text._ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE	00000000 .text._ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE
00000000 l    d  .text._ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h03db7765599d3dceE	00000000 .text._ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h03db7765599d3dceE
00000000 l    d  .text._ZN6memchr8fallback7ptr_add17haeb9f9da0ab6beb0E	00000000 .text._ZN6memchr8fallback7ptr_add17haeb9f9da0ab6beb0E
00000000 l    d  .text._ZN6memchr8fallback7ptr_sub17h30ccf1ee126942f9E	00000000 .text._ZN6memchr8fallback7ptr_sub17h30ccf1ee126942f9E
00000000 l    d  .text._ZN6memchr8fallback20read_unaligned_usize17hae6fe6a9efa4cadbE	00000000 .text._ZN6memchr8fallback20read_unaligned_usize17hae6fe6a9efa4cadbE
00000000 l    d  .text._ZN6memchr8fallback3sub17h0f15317396f7d7b6E	00000000 .text._ZN6memchr8fallback3sub17h0f15317396f7d7b6E
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata.str.2	00000000 .rodata.str.2
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.3	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.3
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.4	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.4
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.6	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.6
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.9	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.9
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.10	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.10
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.11	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.11
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.25	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.25
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.36	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.36
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.42	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.42
00000000 l    d  .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.45	00000000 .rodata..Lanon.95b1762e67c7da7e6dad270b39b8152a.45
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::cmp::min
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 .hidden core::num::<impl isize>::wrapping_neg
00000000         *UND*	00000000 .hidden core::num::<impl usize>::wrapping_sub
00000000         *UND*	00000000 core::ptr::<impl *const T>::offset
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000         *UND*	00000000 core::slice::<impl core::ops::index::Index<I> for [T]>::index
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000 g     F .text._ZN6memchr8fallback6memchr17h268dcf9bdace5be3E	000004fe memchr::fallback::memchr
00000000 g     F .text._ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE	0000054e memchr::fallback::memchr2
00000000 g     F .text._ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE	0000062c memchr::fallback::memchr3
00000000 g     F .text._ZN6memchr8fallback7memrchr17h36db488819deab65E	00000528 memchr::fallback::memrchr
00000000 g     F .text._ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E	00000534 memchr::fallback::memrchr2
00000000 g     F .text._ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE	00000612 memchr::fallback::memrchr3



Disassembly of section .text._ZN6memchr8fallback6memchr17h268dcf9bdace5be3E:

00000000 <memchr::fallback::memchr>:
_ZN6memchr8fallback6memchr17h268dcf9bdace5be3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:45
#[inline(always)]
fn repeat_byte(b: u8) -> usize {
    (b as usize) * (usize::MAX / 255)
}

pub fn memchr(n1: u8, haystack: &[u8]) -> Option<usize> {
   0:	b580      	push	{r7, lr}
   2:	b0da      	sub	sp, #360	; 0x168
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	f88d 006f 	strb.w	r0, [sp, #111]	; 0x6f
   e:	911c      	str	r1, [sp, #112]	; 0x70
  10:	921d      	str	r2, [sp, #116]	; 0x74
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:46
    let vn1 = repeat_byte(n1);
  12:	f89d 006f 	ldrb.w	r0, [sp, #111]	; 0x6f
  16:	f88d 0107 	strb.w	r0, [sp, #263]	; 0x107
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  1a:	f89d 0107 	ldrb.w	r0, [sp, #263]	; 0x107
  1e:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  22:	fba0 0101 	umull	r0, r1, r0, r1
  26:	2900      	cmp	r1, #0
  28:	931a      	str	r3, [sp, #104]	; 0x68
  2a:	f8cd c064 	str.w	ip, [sp, #100]	; 0x64
  2e:	f8cd e060 	str.w	lr, [sp, #96]	; 0x60
  32:	9017      	str	r0, [sp, #92]	; 0x5c
  34:	d007      	beq.n	46 <memchr::fallback::memchr+0x46>
  36:	e7ff      	b.n	38 <memchr::fallback::memchr+0x38>
  38:	f240 0000 	movw	r0, #0
  3c:	f2c0 0000 	movt	r0, #0
  40:	f7ff fffe 	bl	0 <core::panicking::panic>
  44:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback6memchr17h268dcf9bdace5be3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:46
    let vn1 = repeat_byte(n1);
  46:	9817      	ldr	r0, [sp, #92]	; 0x5c
  48:	9020      	str	r0, [sp, #128]	; 0x80
  4a:	e7ff      	b.n	4c <memchr::fallback::memchr+0x4c>
  4c:	f10d 006f 	add.w	r0, sp, #111	; 0x6f
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:47
    let confirm = |byte| byte == n1;
  50:	9021      	str	r0, [sp, #132]	; 0x84
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:48
    let loop_size = cmp::min(LOOP_SIZE, haystack.len());
  52:	981c      	ldr	r0, [sp, #112]	; 0x70
  54:	991d      	ldr	r1, [sp, #116]	; 0x74
  56:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  5a:	9016      	str	r0, [sp, #88]	; 0x58
  5c:	e7ff      	b.n	5e <memchr::fallback::memchr+0x5e>
  5e:	2008      	movs	r0, #8
  60:	9916      	ldr	r1, [sp, #88]	; 0x58
  62:	f7ff fffe 	bl	0 <core::cmp::min>
  66:	9022      	str	r0, [sp, #136]	; 0x88
  68:	e7ff      	b.n	6a <memchr::fallback::memchr+0x6a>
  6a:	2004      	movs	r0, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:49
    let align = USIZE_BYTES - 1;
  6c:	1e41      	subs	r1, r0, #1
  6e:	2801      	cmp	r0, #1
  70:	9115      	str	r1, [sp, #84]	; 0x54
  72:	f0c0 8236 	bcc.w	4e2 <memchr::fallback::memchr+0x4e2>
  76:	e7ff      	b.n	78 <memchr::fallback::memchr+0x78>
  78:	9815      	ldr	r0, [sp, #84]	; 0x54
  7a:	9023      	str	r0, [sp, #140]	; 0x8c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:50
    let start_ptr = haystack.as_ptr();
  7c:	981c      	ldr	r0, [sp, #112]	; 0x70
  7e:	991d      	ldr	r1, [sp, #116]	; 0x74
  80:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  84:	9024      	str	r0, [sp, #144]	; 0x90
  86:	e7ff      	b.n	88 <memchr::fallback::memchr+0x88>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:51
    let end_ptr = haystack[haystack.len()..].as_ptr();
  88:	981c      	ldr	r0, [sp, #112]	; 0x70
  8a:	991d      	ldr	r1, [sp, #116]	; 0x74
  8c:	9014      	str	r0, [sp, #80]	; 0x50
  8e:	9113      	str	r1, [sp, #76]	; 0x4c
  90:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  94:	9012      	str	r0, [sp, #72]	; 0x48
  96:	e7ff      	b.n	98 <memchr::fallback::memchr+0x98>
  98:	9812      	ldr	r0, [sp, #72]	; 0x48
  9a:	9026      	str	r0, [sp, #152]	; 0x98
  9c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  9e:	9814      	ldr	r0, [sp, #80]	; 0x50
  a0:	9913      	ldr	r1, [sp, #76]	; 0x4c
  a2:	f7ff fffe 	bl	0 <core::slice::<impl core::ops::index::Index<I> for [T]>::index>
  a6:	9011      	str	r0, [sp, #68]	; 0x44
  a8:	9110      	str	r1, [sp, #64]	; 0x40
  aa:	e7ff      	b.n	ac <memchr::fallback::memchr+0xac>
  ac:	9811      	ldr	r0, [sp, #68]	; 0x44
  ae:	9910      	ldr	r1, [sp, #64]	; 0x40
  b0:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  b4:	9025      	str	r0, [sp, #148]	; 0x94
  b6:	e7ff      	b.n	b8 <memchr::fallback::memchr+0xb8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:52
    let mut ptr = start_ptr;
  b8:	9824      	ldr	r0, [sp, #144]	; 0x90
  ba:	9027      	str	r0, [sp, #156]	; 0x9c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:55

    unsafe {
        if haystack.len() < USIZE_BYTES {
  bc:	981c      	ldr	r0, [sp, #112]	; 0x70
  be:	991d      	ldr	r1, [sp, #116]	; 0x74
  c0:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  c4:	900f      	str	r0, [sp, #60]	; 0x3c
  c6:	e7ff      	b.n	c8 <memchr::fallback::memchr+0xc8>
  c8:	980f      	ldr	r0, [sp, #60]	; 0x3c
  ca:	2803      	cmp	r0, #3
  cc:	d84e      	bhi.n	16c <memchr::fallback::memchr+0x16c>
  ce:	e7ff      	b.n	d0 <memchr::fallback::memchr+0xd0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:56
            return forward_search(start_ptr, end_ptr, ptr, confirm);
  d0:	9824      	ldr	r0, [sp, #144]	; 0x90
  d2:	9925      	ldr	r1, [sp, #148]	; 0x94
  d4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  d6:	9b21      	ldr	r3, [sp, #132]	; 0x84
  d8:	9042      	str	r0, [sp, #264]	; 0x108
  da:	9143      	str	r1, [sp, #268]	; 0x10c
  dc:	9244      	str	r2, [sp, #272]	; 0x110
  de:	9345      	str	r3, [sp, #276]	; 0x114
_ZN6memchr8fallback14forward_search17h70180b15367ea47eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:292
    start_ptr: *const u8,
    end_ptr: *const u8,
    mut ptr: *const u8,
    confirm: F,
) -> Option<usize> {
    debug_assert!(start_ptr <= ptr);
  e0:	9842      	ldr	r0, [sp, #264]	; 0x108
  e2:	9944      	ldr	r1, [sp, #272]	; 0x110
  e4:	4288      	cmp	r0, r1
  e6:	d907      	bls.n	f8 <memchr::fallback::memchr+0xf8>
  e8:	e7ff      	b.n	ea <memchr::fallback::memchr+0xea>
  ea:	f240 0000 	movw	r0, #0
  ee:	f2c0 0000 	movt	r0, #0
  f2:	f7ff fffe 	bl	0 <core::panicking::panic>
  f6:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:293
    debug_assert!(ptr <= end_ptr);
  f8:	9844      	ldr	r0, [sp, #272]	; 0x110
  fa:	9943      	ldr	r1, [sp, #268]	; 0x10c
  fc:	4288      	cmp	r0, r1
  fe:	d907      	bls.n	110 <memchr::fallback::memchr+0x110>
 100:	e7ff      	b.n	102 <memchr::fallback::memchr+0x102>
 102:	f240 0000 	movw	r0, #0
 106:	f2c0 0000 	movt	r0, #0
 10a:	f7ff fffe 	bl	0 <core::panicking::panic>
 10e:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295

    while ptr < end_ptr {
 110:	e7ff      	b.n	112 <memchr::fallback::memchr+0x112>
 112:	9844      	ldr	r0, [sp, #272]	; 0x110
 114:	9943      	ldr	r1, [sp, #268]	; 0x10c
 116:	4288      	cmp	r0, r1
 118:	d303      	bcc.n	122 <memchr::fallback::memchr+0x122>
 11a:	e7ff      	b.n	11c <memchr::fallback::memchr+0x11c>
 11c:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:301
        if confirm(*ptr) {
            return Some(sub(ptr, start_ptr));
        }
        ptr = ptr.offset(1);
    }
    None
 11e:	9046      	str	r0, [sp, #280]	; 0x118
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 120:	e019      	b.n	156 <memchr::fallback::memchr+0x156>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 122:	9844      	ldr	r0, [sp, #272]	; 0x110
 124:	7800      	ldrb	r0, [r0, #0]
 126:	f88d 0123 	strb.w	r0, [sp, #291]	; 0x123
 12a:	f89d 1123 	ldrb.w	r1, [sp, #291]	; 0x123
 12e:	a845      	add	r0, sp, #276	; 0x114
 130:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 134:	2800      	cmp	r0, #0
 136:	d008      	beq.n	14a <memchr::fallback::memchr+0x14a>
 138:	e7ff      	b.n	13a <memchr::fallback::memchr+0x13a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:297
            return Some(sub(ptr, start_ptr));
 13a:	9844      	ldr	r0, [sp, #272]	; 0x110
 13c:	9942      	ldr	r1, [sp, #264]	; 0x108
 13e:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 142:	9047      	str	r0, [sp, #284]	; 0x11c
 144:	2001      	movs	r0, #1
 146:	9046      	str	r0, [sp, #280]	; 0x118
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 148:	e005      	b.n	156 <memchr::fallback::memchr+0x156>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:299
        ptr = ptr.offset(1);
 14a:	9844      	ldr	r0, [sp, #272]	; 0x110
 14c:	2101      	movs	r1, #1
 14e:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 152:	9044      	str	r0, [sp, #272]	; 0x110
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 154:	e7dd      	b.n	112 <memchr::fallback::memchr+0x112>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 156:	9846      	ldr	r0, [sp, #280]	; 0x118
 158:	9947      	ldr	r1, [sp, #284]	; 0x11c
_ZN6memchr8fallback6memchr17h268dcf9bdace5be3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:56
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 15a:	911f      	str	r1, [sp, #124]	; 0x7c
 15c:	901e      	str	r0, [sp, #120]	; 0x78
 15e:	e7ff      	b.n	160 <memchr::fallback::memchr+0x160>
 160:	e003      	b.n	16a <memchr::fallback::memchr+0x16a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:81
}
 162:	981e      	ldr	r0, [sp, #120]	; 0x78
 164:	991f      	ldr	r1, [sp, #124]	; 0x7c
 166:	b05a      	add	sp, #360	; 0x168
 168:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:56
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 16a:	e7fa      	b.n	162 <memchr::fallback::memchr+0x162>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:59
        let chunk = read_unaligned_usize(ptr);
 16c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 16e:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 172:	9028      	str	r0, [sp, #160]	; 0xa0
 174:	e7ff      	b.n	176 <memchr::fallback::memchr+0x176>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:60
        if contains_zero_byte(chunk ^ vn1) {
 176:	9828      	ldr	r0, [sp, #160]	; 0xa0
 178:	9920      	ldr	r1, [sp, #128]	; 0x80
 17a:	4048      	eors	r0, r1
 17c:	9049      	str	r0, [sp, #292]	; 0x124
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 17e:	9849      	ldr	r0, [sp, #292]	; 0x124
 180:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 184:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 188:	9949      	ldr	r1, [sp, #292]	; 0x124
 18a:	4388      	bics	r0, r1
 18c:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 190:	2800      	cmp	r0, #0
 192:	bf18      	it	ne
 194:	2001      	movne	r0, #1
_ZN6memchr8fallback6memchr17h268dcf9bdace5be3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:60
        if contains_zero_byte(chunk ^ vn1) {
 196:	900e      	str	r0, [sp, #56]	; 0x38
 198:	e7ff      	b.n	19a <memchr::fallback::memchr+0x19a>
 19a:	980e      	ldr	r0, [sp, #56]	; 0x38
 19c:	07c1      	lsls	r1, r0, #31
 19e:	2900      	cmp	r1, #0
 1a0:	d049      	beq.n	236 <memchr::fallback::memchr+0x236>
 1a2:	e7ff      	b.n	1a4 <memchr::fallback::memchr+0x1a4>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:61
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 1a4:	9824      	ldr	r0, [sp, #144]	; 0x90
 1a6:	9925      	ldr	r1, [sp, #148]	; 0x94
 1a8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 1aa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 1ac:	904a      	str	r0, [sp, #296]	; 0x128
 1ae:	914b      	str	r1, [sp, #300]	; 0x12c
 1b0:	924c      	str	r2, [sp, #304]	; 0x130
 1b2:	934d      	str	r3, [sp, #308]	; 0x134
_ZN6memchr8fallback14forward_search17h70180b15367ea47eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:292
    debug_assert!(start_ptr <= ptr);
 1b4:	984a      	ldr	r0, [sp, #296]	; 0x128
 1b6:	994c      	ldr	r1, [sp, #304]	; 0x130
 1b8:	4288      	cmp	r0, r1
 1ba:	d907      	bls.n	1cc <memchr::fallback::memchr+0x1cc>
 1bc:	e7ff      	b.n	1be <memchr::fallback::memchr+0x1be>
 1be:	f240 0000 	movw	r0, #0
 1c2:	f2c0 0000 	movt	r0, #0
 1c6:	f7ff fffe 	bl	0 <core::panicking::panic>
 1ca:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:293
    debug_assert!(ptr <= end_ptr);
 1cc:	984c      	ldr	r0, [sp, #304]	; 0x130
 1ce:	994b      	ldr	r1, [sp, #300]	; 0x12c
 1d0:	4288      	cmp	r0, r1
 1d2:	d907      	bls.n	1e4 <memchr::fallback::memchr+0x1e4>
 1d4:	e7ff      	b.n	1d6 <memchr::fallback::memchr+0x1d6>
 1d6:	f240 0000 	movw	r0, #0
 1da:	f2c0 0000 	movt	r0, #0
 1de:	f7ff fffe 	bl	0 <core::panicking::panic>
 1e2:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 1e4:	e7ff      	b.n	1e6 <memchr::fallback::memchr+0x1e6>
 1e6:	984c      	ldr	r0, [sp, #304]	; 0x130
 1e8:	994b      	ldr	r1, [sp, #300]	; 0x12c
 1ea:	4288      	cmp	r0, r1
 1ec:	d303      	bcc.n	1f6 <memchr::fallback::memchr+0x1f6>
 1ee:	e7ff      	b.n	1f0 <memchr::fallback::memchr+0x1f0>
 1f0:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:301
    None
 1f2:	904e      	str	r0, [sp, #312]	; 0x138
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 1f4:	e019      	b.n	22a <memchr::fallback::memchr+0x22a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 1f6:	984c      	ldr	r0, [sp, #304]	; 0x130
 1f8:	7800      	ldrb	r0, [r0, #0]
 1fa:	f88d 0143 	strb.w	r0, [sp, #323]	; 0x143
 1fe:	f89d 1143 	ldrb.w	r1, [sp, #323]	; 0x143
 202:	a84d      	add	r0, sp, #308	; 0x134
 204:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 208:	2800      	cmp	r0, #0
 20a:	d008      	beq.n	21e <memchr::fallback::memchr+0x21e>
 20c:	e7ff      	b.n	20e <memchr::fallback::memchr+0x20e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:297
            return Some(sub(ptr, start_ptr));
 20e:	984c      	ldr	r0, [sp, #304]	; 0x130
 210:	994a      	ldr	r1, [sp, #296]	; 0x128
 212:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 216:	904f      	str	r0, [sp, #316]	; 0x13c
 218:	2001      	movs	r0, #1
 21a:	904e      	str	r0, [sp, #312]	; 0x138
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 21c:	e005      	b.n	22a <memchr::fallback::memchr+0x22a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:299
        ptr = ptr.offset(1);
 21e:	984c      	ldr	r0, [sp, #304]	; 0x130
 220:	2101      	movs	r1, #1
 222:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 226:	904c      	str	r0, [sp, #304]	; 0x130
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 228:	e7dd      	b.n	1e6 <memchr::fallback::memchr+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 22a:	984e      	ldr	r0, [sp, #312]	; 0x138
 22c:	994f      	ldr	r1, [sp, #316]	; 0x13c
_ZN6memchr8fallback6memchr17h268dcf9bdace5be3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:61
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 22e:	911f      	str	r1, [sp, #124]	; 0x7c
 230:	901e      	str	r0, [sp, #120]	; 0x78
 232:	e7ff      	b.n	234 <memchr::fallback::memchr+0x234>
 234:	e799      	b.n	16a <memchr::fallback::memchr+0x16a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:64
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
 236:	9827      	ldr	r0, [sp, #156]	; 0x9c
 238:	9924      	ldr	r1, [sp, #144]	; 0x90
 23a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 23c:	4011      	ands	r1, r2
 23e:	f1c1 0204 	rsb	r2, r1, #4
 242:	2304      	movs	r3, #4
 244:	428b      	cmp	r3, r1
 246:	900d      	str	r0, [sp, #52]	; 0x34
 248:	920c      	str	r2, [sp, #48]	; 0x30
 24a:	f0c0 8151 	bcc.w	4f0 <memchr::fallback::memchr+0x4f0>
 24e:	e7ff      	b.n	250 <memchr::fallback::memchr+0x250>
 250:	980d      	ldr	r0, [sp, #52]	; 0x34
 252:	990c      	ldr	r1, [sp, #48]	; 0x30
 254:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 258:	900b      	str	r0, [sp, #44]	; 0x2c
 25a:	e7ff      	b.n	25c <memchr::fallback::memchr+0x25c>
 25c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 25e:	9027      	str	r0, [sp, #156]	; 0x9c
 260:	2100      	movs	r1, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:65
        debug_assert!(ptr > start_ptr);
 262:	2900      	cmp	r1, #0
 264:	d10d      	bne.n	282 <memchr::fallback::memchr+0x282>
 266:	e7ff      	b.n	268 <memchr::fallback::memchr+0x268>
 268:	9827      	ldr	r0, [sp, #156]	; 0x9c
 26a:	9924      	ldr	r1, [sp, #144]	; 0x90
 26c:	4288      	cmp	r0, r1
 26e:	d807      	bhi.n	280 <memchr::fallback::memchr+0x280>
 270:	e7ff      	b.n	272 <memchr::fallback::memchr+0x272>
 272:	f240 0000 	movw	r0, #0
 276:	f2c0 0000 	movt	r0, #0
 27a:	f7ff fffe 	bl	0 <core::panicking::panic>
 27e:	defe      	udf	#254	; 0xfe
 280:	e7ff      	b.n	282 <memchr::fallback::memchr+0x282>
 282:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:66
        debug_assert!(ptr_sub(end_ptr, USIZE_BYTES) >= start_ptr);
 284:	2800      	cmp	r0, #0
 286:	d113      	bne.n	2b0 <memchr::fallback::memchr+0x2b0>
 288:	e7ff      	b.n	28a <memchr::fallback::memchr+0x28a>
 28a:	9825      	ldr	r0, [sp, #148]	; 0x94
 28c:	2104      	movs	r1, #4
 28e:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 292:	900a      	str	r0, [sp, #40]	; 0x28
 294:	e7ff      	b.n	296 <memchr::fallback::memchr+0x296>
 296:	9824      	ldr	r0, [sp, #144]	; 0x90
 298:	990a      	ldr	r1, [sp, #40]	; 0x28
 29a:	4281      	cmp	r1, r0
 29c:	d207      	bcs.n	2ae <memchr::fallback::memchr+0x2ae>
 29e:	e7ff      	b.n	2a0 <memchr::fallback::memchr+0x2a0>
 2a0:	f240 0000 	movw	r0, #0
 2a4:	f2c0 0000 	movt	r0, #0
 2a8:	f7ff fffe 	bl	0 <core::panicking::panic>
 2ac:	defe      	udf	#254	; 0xfe
 2ae:	e7ff      	b.n	2b0 <memchr::fallback::memchr+0x2b0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:67
        while loop_size == LOOP_SIZE && ptr <= ptr_sub(end_ptr, loop_size) {
 2b0:	e7ff      	b.n	2b2 <memchr::fallback::memchr+0x2b2>
 2b2:	9822      	ldr	r0, [sp, #136]	; 0x88
 2b4:	2808      	cmp	r0, #8
 2b6:	d04c      	beq.n	352 <memchr::fallback::memchr+0x352>
 2b8:	e047      	b.n	34a <memchr::fallback::memchr+0x34a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:79
        forward_search(start_ptr, end_ptr, ptr, confirm)
 2ba:	9824      	ldr	r0, [sp, #144]	; 0x90
 2bc:	9925      	ldr	r1, [sp, #148]	; 0x94
 2be:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 2c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 2c2:	9051      	str	r0, [sp, #324]	; 0x144
 2c4:	9152      	str	r1, [sp, #328]	; 0x148
 2c6:	9253      	str	r2, [sp, #332]	; 0x14c
 2c8:	9354      	str	r3, [sp, #336]	; 0x150
_ZN6memchr8fallback14forward_search17h70180b15367ea47eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:292
    debug_assert!(start_ptr <= ptr);
 2ca:	9851      	ldr	r0, [sp, #324]	; 0x144
 2cc:	9953      	ldr	r1, [sp, #332]	; 0x14c
 2ce:	4288      	cmp	r0, r1
 2d0:	d907      	bls.n	2e2 <memchr::fallback::memchr+0x2e2>
 2d2:	e7ff      	b.n	2d4 <memchr::fallback::memchr+0x2d4>
 2d4:	f240 0000 	movw	r0, #0
 2d8:	f2c0 0000 	movt	r0, #0
 2dc:	f7ff fffe 	bl	0 <core::panicking::panic>
 2e0:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:293
    debug_assert!(ptr <= end_ptr);
 2e2:	9853      	ldr	r0, [sp, #332]	; 0x14c
 2e4:	9952      	ldr	r1, [sp, #328]	; 0x148
 2e6:	4288      	cmp	r0, r1
 2e8:	d907      	bls.n	2fa <memchr::fallback::memchr+0x2fa>
 2ea:	e7ff      	b.n	2ec <memchr::fallback::memchr+0x2ec>
 2ec:	f240 0000 	movw	r0, #0
 2f0:	f2c0 0000 	movt	r0, #0
 2f4:	f7ff fffe 	bl	0 <core::panicking::panic>
 2f8:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 2fa:	e7ff      	b.n	2fc <memchr::fallback::memchr+0x2fc>
 2fc:	9853      	ldr	r0, [sp, #332]	; 0x14c
 2fe:	9952      	ldr	r1, [sp, #328]	; 0x148
 300:	4288      	cmp	r0, r1
 302:	d303      	bcc.n	30c <memchr::fallback::memchr+0x30c>
 304:	e7ff      	b.n	306 <memchr::fallback::memchr+0x306>
 306:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:301
    None
 308:	9055      	str	r0, [sp, #340]	; 0x154
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 30a:	e019      	b.n	340 <memchr::fallback::memchr+0x340>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 30c:	9853      	ldr	r0, [sp, #332]	; 0x14c
 30e:	7800      	ldrb	r0, [r0, #0]
 310:	f88d 015f 	strb.w	r0, [sp, #351]	; 0x15f
 314:	f89d 115f 	ldrb.w	r1, [sp, #351]	; 0x15f
 318:	a854      	add	r0, sp, #336	; 0x150
 31a:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 31e:	2800      	cmp	r0, #0
 320:	d008      	beq.n	334 <memchr::fallback::memchr+0x334>
 322:	e7ff      	b.n	324 <memchr::fallback::memchr+0x324>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:297
            return Some(sub(ptr, start_ptr));
 324:	9853      	ldr	r0, [sp, #332]	; 0x14c
 326:	9951      	ldr	r1, [sp, #324]	; 0x144
 328:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 32c:	9056      	str	r0, [sp, #344]	; 0x158
 32e:	2001      	movs	r0, #1
 330:	9055      	str	r0, [sp, #340]	; 0x154
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 332:	e005      	b.n	340 <memchr::fallback::memchr+0x340>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:299
        ptr = ptr.offset(1);
 334:	9853      	ldr	r0, [sp, #332]	; 0x14c
 336:	2101      	movs	r1, #1
 338:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 33c:	9053      	str	r0, [sp, #332]	; 0x14c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 33e:	e7dd      	b.n	2fc <memchr::fallback::memchr+0x2fc>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 340:	9855      	ldr	r0, [sp, #340]	; 0x154
 342:	9956      	ldr	r1, [sp, #344]	; 0x158
_ZN6memchr8fallback6memchr17h268dcf9bdace5be3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:79
        forward_search(start_ptr, end_ptr, ptr, confirm)
 344:	911f      	str	r1, [sp, #124]	; 0x7c
 346:	901e      	str	r0, [sp, #120]	; 0x78
 348:	e0ca      	b.n	4e0 <memchr::fallback::memchr+0x4e0>
 34a:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:67
        while loop_size == LOOP_SIZE && ptr <= ptr_sub(end_ptr, loop_size) {
 34c:	f88d 00a7 	strb.w	r0, [sp, #167]	; 0xa7
 350:	e009      	b.n	366 <memchr::fallback::memchr+0x366>
 352:	9827      	ldr	r0, [sp, #156]	; 0x9c
 354:	9925      	ldr	r1, [sp, #148]	; 0x94
 356:	9a22      	ldr	r2, [sp, #136]	; 0x88
 358:	9009      	str	r0, [sp, #36]	; 0x24
 35a:	4608      	mov	r0, r1
 35c:	4611      	mov	r1, r2
 35e:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 362:	9008      	str	r0, [sp, #32]
 364:	e005      	b.n	372 <memchr::fallback::memchr+0x372>
 366:	f89d 00a7 	ldrb.w	r0, [sp, #167]	; 0xa7
 36a:	07c0      	lsls	r0, r0, #31
 36c:	2800      	cmp	r0, #0
 36e:	d109      	bne.n	384 <memchr::fallback::memchr+0x384>
 370:	e7a3      	b.n	2ba <memchr::fallback::memchr+0x2ba>
 372:	2000      	movs	r0, #0
 374:	9909      	ldr	r1, [sp, #36]	; 0x24
 376:	9a08      	ldr	r2, [sp, #32]
 378:	4291      	cmp	r1, r2
 37a:	bf98      	it	ls
 37c:	2001      	movls	r0, #1
 37e:	f88d 00a7 	strb.w	r0, [sp, #167]	; 0xa7
 382:	e7f0      	b.n	366 <memchr::fallback::memchr+0x366>
 384:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:68
            debug_assert_eq!(0, (ptr as usize) % USIZE_BYTES);
 386:	2800      	cmp	r0, #0
 388:	d159      	bne.n	43e <memchr::fallback::memchr+0x43e>
 38a:	e7ff      	b.n	38c <memchr::fallback::memchr+0x38c>
 38c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 38e:	9007      	str	r0, [sp, #28]
 390:	e7ff      	b.n	392 <memchr::fallback::memchr+0x392>
 392:	9807      	ldr	r0, [sp, #28]
 394:	f000 0103 	and.w	r1, r0, #3
 398:	912c      	str	r1, [sp, #176]	; 0xb0
 39a:	f240 0100 	movw	r1, #0
 39e:	f2c0 0100 	movt	r1, #0
 3a2:	912a      	str	r1, [sp, #168]	; 0xa8
 3a4:	a92c      	add	r1, sp, #176	; 0xb0
 3a6:	912b      	str	r1, [sp, #172]	; 0xac
 3a8:	992a      	ldr	r1, [sp, #168]	; 0xa8
 3aa:	912d      	str	r1, [sp, #180]	; 0xb4
 3ac:	992b      	ldr	r1, [sp, #172]	; 0xac
 3ae:	912e      	str	r1, [sp, #184]	; 0xb8
 3b0:	992d      	ldr	r1, [sp, #180]	; 0xb4
 3b2:	6809      	ldr	r1, [r1, #0]
 3b4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 3b6:	6812      	ldr	r2, [r2, #0]
 3b8:	4291      	cmp	r1, r2
 3ba:	d016      	beq.n	3ea <memchr::fallback::memchr+0x3ea>
 3bc:	e7ff      	b.n	3be <memchr::fallback::memchr+0x3be>
 3be:	982d      	ldr	r0, [sp, #180]	; 0xb4
 3c0:	903b      	str	r0, [sp, #236]	; 0xec
 3c2:	982e      	ldr	r0, [sp, #184]	; 0xb8
 3c4:	903c      	str	r0, [sp, #240]	; 0xf0
 3c6:	a83b      	add	r0, sp, #236	; 0xec
 3c8:	9039      	str	r0, [sp, #228]	; 0xe4
 3ca:	a83c      	add	r0, sp, #240	; 0xf0
 3cc:	903a      	str	r0, [sp, #232]	; 0xe8
 3ce:	9839      	ldr	r0, [sp, #228]	; 0xe4
 3d0:	903d      	str	r0, [sp, #244]	; 0xf4
 3d2:	983a      	ldr	r0, [sp, #232]	; 0xe8
 3d4:	903e      	str	r0, [sp, #248]	; 0xf8
 3d6:	983d      	ldr	r0, [sp, #244]	; 0xf4
 3d8:	f240 0100 	movw	r1, #0
 3dc:	f2c0 0100 	movt	r1, #0
 3e0:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 3e4:	9006      	str	r0, [sp, #24]
 3e6:	9105      	str	r1, [sp, #20]
 3e8:	e000      	b.n	3ec <memchr::fallback::memchr+0x3ec>
 3ea:	e028      	b.n	43e <memchr::fallback::memchr+0x43e>
 3ec:	983e      	ldr	r0, [sp, #248]	; 0xf8
 3ee:	f240 0100 	movw	r1, #0
 3f2:	f2c0 0100 	movt	r1, #0
 3f6:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 3fa:	9004      	str	r0, [sp, #16]
 3fc:	9103      	str	r1, [sp, #12]
 3fe:	e7ff      	b.n	400 <memchr::fallback::memchr+0x400>
 400:	9806      	ldr	r0, [sp, #24]
 402:	9035      	str	r0, [sp, #212]	; 0xd4
 404:	9905      	ldr	r1, [sp, #20]
 406:	9136      	str	r1, [sp, #216]	; 0xd8
 408:	9a04      	ldr	r2, [sp, #16]
 40a:	9237      	str	r2, [sp, #220]	; 0xdc
 40c:	9b03      	ldr	r3, [sp, #12]
 40e:	9338      	str	r3, [sp, #224]	; 0xe0
 410:	46ec      	mov	ip, sp
 412:	f04f 0e02 	mov.w	lr, #2
 416:	f8cc e000 	str.w	lr, [ip]
 41a:	f240 0100 	movw	r1, #0
 41e:	f2c0 0100 	movt	r1, #0
 422:	a82f      	add	r0, sp, #188	; 0xbc
 424:	2203      	movs	r2, #3
 426:	ab35      	add	r3, sp, #212	; 0xd4
 428:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 42c:	e7ff      	b.n	2 <memchr::fallback::memchr+0x2>
 42e:	f240 0100 	movw	r1, #0
 432:	f2c0 0100 	movt	r1, #0
 436:	a82f      	add	r0, sp, #188	; 0xbc
 438:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 43c:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:70
            let a = *(ptr as *const usize);
 43e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 440:	6800      	ldr	r0, [r0, #0]
 442:	903f      	str	r0, [sp, #252]	; 0xfc
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:71
            let b = *(ptr_add(ptr, USIZE_BYTES) as *const usize);
 444:	9827      	ldr	r0, [sp, #156]	; 0x9c
 446:	2104      	movs	r1, #4
 448:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 44c:	9002      	str	r0, [sp, #8]
 44e:	e7ff      	b.n	450 <memchr::fallback::memchr+0x450>
 450:	9802      	ldr	r0, [sp, #8]
 452:	6801      	ldr	r1, [r0, #0]
 454:	9140      	str	r1, [sp, #256]	; 0x100
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:72
            let eqa = contains_zero_byte(a ^ vn1);
 456:	993f      	ldr	r1, [sp, #252]	; 0xfc
 458:	9a20      	ldr	r2, [sp, #128]	; 0x80
 45a:	4051      	eors	r1, r2
 45c:	9158      	str	r1, [sp, #352]	; 0x160
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 45e:	9858      	ldr	r0, [sp, #352]	; 0x160
 460:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 464:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 468:	9958      	ldr	r1, [sp, #352]	; 0x160
 46a:	4388      	bics	r0, r1
 46c:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 470:	2800      	cmp	r0, #0
 472:	bf18      	it	ne
 474:	2001      	movne	r0, #1
_ZN6memchr8fallback6memchr17h268dcf9bdace5be3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:72
            let eqa = contains_zero_byte(a ^ vn1);
 476:	f88d 0104 	strb.w	r0, [sp, #260]	; 0x104
 47a:	e7ff      	b.n	47c <memchr::fallback::memchr+0x47c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:73
            let eqb = contains_zero_byte(b ^ vn1);
 47c:	9840      	ldr	r0, [sp, #256]	; 0x100
 47e:	9920      	ldr	r1, [sp, #128]	; 0x80
 480:	4048      	eors	r0, r1
 482:	9059      	str	r0, [sp, #356]	; 0x164
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 484:	9859      	ldr	r0, [sp, #356]	; 0x164
 486:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 48a:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 48e:	9959      	ldr	r1, [sp, #356]	; 0x164
 490:	4388      	bics	r0, r1
 492:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 496:	2800      	cmp	r0, #0
 498:	bf18      	it	ne
 49a:	2001      	movne	r0, #1
_ZN6memchr8fallback6memchr17h268dcf9bdace5be3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:73
            let eqb = contains_zero_byte(b ^ vn1);
 49c:	f88d 0105 	strb.w	r0, [sp, #261]	; 0x105
 4a0:	e7ff      	b.n	4a2 <memchr::fallback::memchr+0x4a2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:74
            if eqa || eqb {
 4a2:	f89d 0104 	ldrb.w	r0, [sp, #260]	; 0x104
 4a6:	07c0      	lsls	r0, r0, #31
 4a8:	2800      	cmp	r0, #0
 4aa:	d004      	beq.n	4b6 <memchr::fallback::memchr+0x4b6>
 4ac:	e7ff      	b.n	4ae <memchr::fallback::memchr+0x4ae>
 4ae:	2001      	movs	r0, #1
 4b0:	f88d 0106 	strb.w	r0, [sp, #262]	; 0x106
 4b4:	e004      	b.n	4c0 <memchr::fallback::memchr+0x4c0>
 4b6:	f89d 0105 	ldrb.w	r0, [sp, #261]	; 0x105
 4ba:	f88d 0106 	strb.w	r0, [sp, #262]	; 0x106
 4be:	e7ff      	b.n	4c0 <memchr::fallback::memchr+0x4c0>
 4c0:	f89d 0106 	ldrb.w	r0, [sp, #262]	; 0x106
 4c4:	07c0      	lsls	r0, r0, #31
 4c6:	2800      	cmp	r0, #0
 4c8:	d001      	beq.n	4ce <memchr::fallback::memchr+0x4ce>
 4ca:	e7ff      	b.n	4cc <memchr::fallback::memchr+0x4cc>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:75
                break;
 4cc:	e6f5      	b.n	2ba <memchr::fallback::memchr+0x2ba>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:77
            ptr = ptr_add(ptr, LOOP_SIZE);
 4ce:	9827      	ldr	r0, [sp, #156]	; 0x9c
 4d0:	2108      	movs	r1, #8
 4d2:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
 4d6:	9001      	str	r0, [sp, #4]
 4d8:	e7ff      	b.n	4da <memchr::fallback::memchr+0x4da>
 4da:	9801      	ldr	r0, [sp, #4]
 4dc:	9027      	str	r0, [sp, #156]	; 0x9c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:67
        while loop_size == LOOP_SIZE && ptr <= ptr_sub(end_ptr, loop_size) {
 4de:	e6e8      	b.n	2b2 <memchr::fallback::memchr+0x2b2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:81
}
 4e0:	e63f      	b.n	162 <memchr::fallback::memchr+0x162>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:49
    let align = USIZE_BYTES - 1;
 4e2:	f240 0000 	movw	r0, #0
 4e6:	f2c0 0000 	movt	r0, #0
 4ea:	f7ff fffe 	bl	0 <core::panicking::panic>
 4ee:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:64
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
 4f0:	f240 0000 	movw	r0, #0
 4f4:	f2c0 0000 	movt	r0, #0
 4f8:	f7ff fffe 	bl	0 <core::panicking::panic>
 4fc:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6memchr8fallback6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h1b12d30bbab3e3f3E:

00000000 <memchr::fallback::memchr::{{closure}}>:
_ZN6memchr8fallback6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h1b12d30bbab3e3f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:47
    let confirm = |byte| byte == n1;
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	f88d 100f 	strb.w	r1, [sp, #15]
   c:	f89d 000f 	ldrb.w	r0, [sp, #15]
  10:	9902      	ldr	r1, [sp, #8]
  12:	6809      	ldr	r1, [r1, #0]
  14:	7809      	ldrb	r1, [r1, #0]
  16:	1a40      	subs	r0, r0, r1
  18:	fab0 f080 	clz	r0, r0
  1c:	0940      	lsrs	r0, r0, #5
  1e:	9201      	str	r2, [sp, #4]
  20:	9300      	str	r3, [sp, #0]
  22:	b004      	add	sp, #16
  24:	4770      	bx	lr

Disassembly of section .text._ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE:

00000000 <memchr::fallback::memchr2>:
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:84
pub fn memchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0de      	sub	sp, #376	; 0x178
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	f88d 006a 	strb.w	r0, [sp, #106]	; 0x6a
  10:	f88d 106b 	strb.w	r1, [sp, #107]	; 0x6b
  14:	921b      	str	r2, [sp, #108]	; 0x6c
  16:	931c      	str	r3, [sp, #112]	; 0x70
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:85
    let vn1 = repeat_byte(n1);
  18:	f89d 006a 	ldrb.w	r0, [sp, #106]	; 0x6a
  1c:	f88d 0106 	strb.w	r0, [sp, #262]	; 0x106
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  20:	f89d 0106 	ldrb.w	r0, [sp, #262]	; 0x106
  24:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  28:	fba0 0101 	umull	r0, r1, r0, r1
  2c:	2900      	cmp	r1, #0
  2e:	f8cd c064 	str.w	ip, [sp, #100]	; 0x64
  32:	f8cd e060 	str.w	lr, [sp, #96]	; 0x60
  36:	9417      	str	r4, [sp, #92]	; 0x5c
  38:	9516      	str	r5, [sp, #88]	; 0x58
  3a:	9015      	str	r0, [sp, #84]	; 0x54
  3c:	d007      	beq.n	4e <memchr::fallback::memchr2+0x4e>
  3e:	e7ff      	b.n	40 <memchr::fallback::memchr2+0x40>
  40:	f240 0000 	movw	r0, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	f7ff fffe 	bl	0 <core::panicking::panic>
  4c:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:85
    let vn1 = repeat_byte(n1);
  4e:	9815      	ldr	r0, [sp, #84]	; 0x54
  50:	901f      	str	r0, [sp, #124]	; 0x7c
  52:	e7ff      	b.n	54 <memchr::fallback::memchr2+0x54>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:86
    let vn2 = repeat_byte(n2);
  54:	f89d 006b 	ldrb.w	r0, [sp, #107]	; 0x6b
  58:	f88d 0107 	strb.w	r0, [sp, #263]	; 0x107
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  5c:	f89d 0107 	ldrb.w	r0, [sp, #263]	; 0x107
  60:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  64:	fba0 0101 	umull	r0, r1, r0, r1
  68:	2900      	cmp	r1, #0
  6a:	9014      	str	r0, [sp, #80]	; 0x50
  6c:	d007      	beq.n	7e <memchr::fallback::memchr2+0x7e>
  6e:	e7ff      	b.n	70 <memchr::fallback::memchr2+0x70>
  70:	f240 0000 	movw	r0, #0
  74:	f2c0 0000 	movt	r0, #0
  78:	f7ff fffe 	bl	0 <core::panicking::panic>
  7c:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:86
    let vn2 = repeat_byte(n2);
  7e:	9814      	ldr	r0, [sp, #80]	; 0x50
  80:	9020      	str	r0, [sp, #128]	; 0x80
  82:	e7ff      	b.n	84 <memchr::fallback::memchr2+0x84>
  84:	f10d 006a 	add.w	r0, sp, #106	; 0x6a
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  88:	9021      	str	r0, [sp, #132]	; 0x84
  8a:	f10d 006b 	add.w	r0, sp, #107	; 0x6b
  8e:	9022      	str	r0, [sp, #136]	; 0x88
  90:	2004      	movs	r0, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:88
    let align = USIZE_BYTES - 1;
  92:	1e41      	subs	r1, r0, #1
  94:	2801      	cmp	r0, #1
  96:	9113      	str	r1, [sp, #76]	; 0x4c
  98:	f0c0 824b 	bcc.w	532 <memchr::fallback::memchr2+0x532>
  9c:	e7ff      	b.n	9e <memchr::fallback::memchr2+0x9e>
  9e:	9813      	ldr	r0, [sp, #76]	; 0x4c
  a0:	9023      	str	r0, [sp, #140]	; 0x8c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:89
    let start_ptr = haystack.as_ptr();
  a2:	981b      	ldr	r0, [sp, #108]	; 0x6c
  a4:	991c      	ldr	r1, [sp, #112]	; 0x70
  a6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  aa:	9024      	str	r0, [sp, #144]	; 0x90
  ac:	e7ff      	b.n	ae <memchr::fallback::memchr2+0xae>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:90
    let end_ptr = haystack[haystack.len()..].as_ptr();
  ae:	981b      	ldr	r0, [sp, #108]	; 0x6c
  b0:	991c      	ldr	r1, [sp, #112]	; 0x70
  b2:	9012      	str	r0, [sp, #72]	; 0x48
  b4:	9111      	str	r1, [sp, #68]	; 0x44
  b6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  ba:	9010      	str	r0, [sp, #64]	; 0x40
  bc:	e7ff      	b.n	be <memchr::fallback::memchr2+0xbe>
  be:	9810      	ldr	r0, [sp, #64]	; 0x40
  c0:	9026      	str	r0, [sp, #152]	; 0x98
  c2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  c4:	9812      	ldr	r0, [sp, #72]	; 0x48
  c6:	9911      	ldr	r1, [sp, #68]	; 0x44
  c8:	f7ff fffe 	bl	0 <core::slice::<impl core::ops::index::Index<I> for [T]>::index>
  cc:	900f      	str	r0, [sp, #60]	; 0x3c
  ce:	910e      	str	r1, [sp, #56]	; 0x38
  d0:	e7ff      	b.n	d2 <memchr::fallback::memchr2+0xd2>
  d2:	980f      	ldr	r0, [sp, #60]	; 0x3c
  d4:	990e      	ldr	r1, [sp, #56]	; 0x38
  d6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  da:	9025      	str	r0, [sp, #148]	; 0x94
  dc:	e7ff      	b.n	de <memchr::fallback::memchr2+0xde>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:91
    let mut ptr = start_ptr;
  de:	9824      	ldr	r0, [sp, #144]	; 0x90
  e0:	9027      	str	r0, [sp, #156]	; 0x9c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:94
        if haystack.len() < USIZE_BYTES {
  e2:	981b      	ldr	r0, [sp, #108]	; 0x6c
  e4:	991c      	ldr	r1, [sp, #112]	; 0x70
  e6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  ea:	900d      	str	r0, [sp, #52]	; 0x34
  ec:	e7ff      	b.n	ee <memchr::fallback::memchr2+0xee>
  ee:	980d      	ldr	r0, [sp, #52]	; 0x34
  f0:	2803      	cmp	r0, #3
  f2:	d852      	bhi.n	19a <memchr::fallback::memchr2+0x19a>
  f4:	e7ff      	b.n	f6 <memchr::fallback::memchr2+0xf6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:95
            return forward_search(start_ptr, end_ptr, ptr, confirm);
  f6:	9824      	ldr	r0, [sp, #144]	; 0x90
  f8:	9925      	ldr	r1, [sp, #148]	; 0x94
  fa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
  fe:	f8dd c088 	ldr.w	ip, [sp, #136]	; 0x88
 102:	9042      	str	r0, [sp, #264]	; 0x108
 104:	9143      	str	r1, [sp, #268]	; 0x10c
 106:	9244      	str	r2, [sp, #272]	; 0x110
 108:	9345      	str	r3, [sp, #276]	; 0x114
 10a:	f8cd c118 	str.w	ip, [sp, #280]	; 0x118
_ZN6memchr8fallback14forward_search17hd10fa709f4c65690E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:292
    debug_assert!(start_ptr <= ptr);
 10e:	9842      	ldr	r0, [sp, #264]	; 0x108
 110:	9944      	ldr	r1, [sp, #272]	; 0x110
 112:	4288      	cmp	r0, r1
 114:	d907      	bls.n	126 <memchr::fallback::memchr2+0x126>
 116:	e7ff      	b.n	118 <memchr::fallback::memchr2+0x118>
 118:	f240 0000 	movw	r0, #0
 11c:	f2c0 0000 	movt	r0, #0
 120:	f7ff fffe 	bl	0 <core::panicking::panic>
 124:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:293
    debug_assert!(ptr <= end_ptr);
 126:	9844      	ldr	r0, [sp, #272]	; 0x110
 128:	9943      	ldr	r1, [sp, #268]	; 0x10c
 12a:	4288      	cmp	r0, r1
 12c:	d907      	bls.n	13e <memchr::fallback::memchr2+0x13e>
 12e:	e7ff      	b.n	130 <memchr::fallback::memchr2+0x130>
 130:	f240 0000 	movw	r0, #0
 134:	f2c0 0000 	movt	r0, #0
 138:	f7ff fffe 	bl	0 <core::panicking::panic>
 13c:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 13e:	e7ff      	b.n	140 <memchr::fallback::memchr2+0x140>
 140:	9844      	ldr	r0, [sp, #272]	; 0x110
 142:	9943      	ldr	r1, [sp, #268]	; 0x10c
 144:	4288      	cmp	r0, r1
 146:	d303      	bcc.n	150 <memchr::fallback::memchr2+0x150>
 148:	e7ff      	b.n	14a <memchr::fallback::memchr2+0x14a>
 14a:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:301
    None
 14c:	9047      	str	r0, [sp, #284]	; 0x11c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 14e:	e019      	b.n	184 <memchr::fallback::memchr2+0x184>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 150:	9844      	ldr	r0, [sp, #272]	; 0x110
 152:	7800      	ldrb	r0, [r0, #0]
 154:	f88d 0127 	strb.w	r0, [sp, #295]	; 0x127
 158:	f89d 1127 	ldrb.w	r1, [sp, #295]	; 0x127
 15c:	a845      	add	r0, sp, #276	; 0x114
 15e:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 162:	2800      	cmp	r0, #0
 164:	d008      	beq.n	178 <memchr::fallback::memchr2+0x178>
 166:	e7ff      	b.n	168 <memchr::fallback::memchr2+0x168>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:297
            return Some(sub(ptr, start_ptr));
 168:	9844      	ldr	r0, [sp, #272]	; 0x110
 16a:	9942      	ldr	r1, [sp, #264]	; 0x108
 16c:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 170:	9048      	str	r0, [sp, #288]	; 0x120
 172:	2001      	movs	r0, #1
 174:	9047      	str	r0, [sp, #284]	; 0x11c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 176:	e005      	b.n	184 <memchr::fallback::memchr2+0x184>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:299
        ptr = ptr.offset(1);
 178:	9844      	ldr	r0, [sp, #272]	; 0x110
 17a:	2101      	movs	r1, #1
 17c:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 180:	9044      	str	r0, [sp, #272]	; 0x110
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 182:	e7dd      	b.n	140 <memchr::fallback::memchr2+0x140>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 184:	9847      	ldr	r0, [sp, #284]	; 0x11c
 186:	9948      	ldr	r1, [sp, #288]	; 0x120
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:95
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 188:	911e      	str	r1, [sp, #120]	; 0x78
 18a:	901d      	str	r0, [sp, #116]	; 0x74
 18c:	e7ff      	b.n	18e <memchr::fallback::memchr2+0x18e>
 18e:	e003      	b.n	198 <memchr::fallback::memchr2+0x198>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:121
}
 190:	981d      	ldr	r0, [sp, #116]	; 0x74
 192:	991e      	ldr	r1, [sp, #120]	; 0x78
 194:	b05e      	add	sp, #376	; 0x178
 196:	bdb0      	pop	{r4, r5, r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:95
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 198:	e7fa      	b.n	190 <memchr::fallback::memchr2+0x190>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:98
        let chunk = read_unaligned_usize(ptr);
 19a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 19c:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 1a0:	9028      	str	r0, [sp, #160]	; 0xa0
 1a2:	e7ff      	b.n	1a4 <memchr::fallback::memchr2+0x1a4>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:99
        let eq1 = contains_zero_byte(chunk ^ vn1);
 1a4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 1a6:	991f      	ldr	r1, [sp, #124]	; 0x7c
 1a8:	4048      	eors	r0, r1
 1aa:	904a      	str	r0, [sp, #296]	; 0x128
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 1ac:	984a      	ldr	r0, [sp, #296]	; 0x128
 1ae:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 1b2:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 1b6:	994a      	ldr	r1, [sp, #296]	; 0x128
 1b8:	4388      	bics	r0, r1
 1ba:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 1be:	2800      	cmp	r0, #0
 1c0:	bf18      	it	ne
 1c2:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:99
        let eq1 = contains_zero_byte(chunk ^ vn1);
 1c4:	f88d 00a5 	strb.w	r0, [sp, #165]	; 0xa5
 1c8:	e7ff      	b.n	1ca <memchr::fallback::memchr2+0x1ca>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:100
        let eq2 = contains_zero_byte(chunk ^ vn2);
 1ca:	9828      	ldr	r0, [sp, #160]	; 0xa0
 1cc:	9920      	ldr	r1, [sp, #128]	; 0x80
 1ce:	4048      	eors	r0, r1
 1d0:	904b      	str	r0, [sp, #300]	; 0x12c
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 1d2:	984b      	ldr	r0, [sp, #300]	; 0x12c
 1d4:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 1d8:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 1dc:	994b      	ldr	r1, [sp, #300]	; 0x12c
 1de:	4388      	bics	r0, r1
 1e0:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 1e4:	2800      	cmp	r0, #0
 1e6:	bf18      	it	ne
 1e8:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:100
        let eq2 = contains_zero_byte(chunk ^ vn2);
 1ea:	f88d 00a6 	strb.w	r0, [sp, #166]	; 0xa6
 1ee:	e7ff      	b.n	1f0 <memchr::fallback::memchr2+0x1f0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:101
        if eq1 || eq2 {
 1f0:	f89d 00a5 	ldrb.w	r0, [sp, #165]	; 0xa5
 1f4:	07c0      	lsls	r0, r0, #31
 1f6:	2800      	cmp	r0, #0
 1f8:	d004      	beq.n	204 <memchr::fallback::memchr2+0x204>
 1fa:	e7ff      	b.n	1fc <memchr::fallback::memchr2+0x1fc>
 1fc:	2001      	movs	r0, #1
 1fe:	f88d 00a7 	strb.w	r0, [sp, #167]	; 0xa7
 202:	e004      	b.n	20e <memchr::fallback::memchr2+0x20e>
 204:	f89d 00a6 	ldrb.w	r0, [sp, #166]	; 0xa6
 208:	f88d 00a7 	strb.w	r0, [sp, #167]	; 0xa7
 20c:	e7ff      	b.n	20e <memchr::fallback::memchr2+0x20e>
 20e:	f89d 00a7 	ldrb.w	r0, [sp, #167]	; 0xa7
 212:	07c0      	lsls	r0, r0, #31
 214:	2800      	cmp	r0, #0
 216:	d04d      	beq.n	2b4 <memchr::fallback::memchr2+0x2b4>
 218:	e7ff      	b.n	21a <memchr::fallback::memchr2+0x21a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:102
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 21a:	9824      	ldr	r0, [sp, #144]	; 0x90
 21c:	9925      	ldr	r1, [sp, #148]	; 0x94
 21e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 220:	9b21      	ldr	r3, [sp, #132]	; 0x84
 222:	f8dd c088 	ldr.w	ip, [sp, #136]	; 0x88
 226:	904c      	str	r0, [sp, #304]	; 0x130
 228:	914d      	str	r1, [sp, #308]	; 0x134
 22a:	924e      	str	r2, [sp, #312]	; 0x138
 22c:	934f      	str	r3, [sp, #316]	; 0x13c
 22e:	f8cd c140 	str.w	ip, [sp, #320]	; 0x140
_ZN6memchr8fallback14forward_search17hd10fa709f4c65690E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:292
    debug_assert!(start_ptr <= ptr);
 232:	984c      	ldr	r0, [sp, #304]	; 0x130
 234:	994e      	ldr	r1, [sp, #312]	; 0x138
 236:	4288      	cmp	r0, r1
 238:	d907      	bls.n	24a <memchr::fallback::memchr2+0x24a>
 23a:	e7ff      	b.n	23c <memchr::fallback::memchr2+0x23c>
 23c:	f240 0000 	movw	r0, #0
 240:	f2c0 0000 	movt	r0, #0
 244:	f7ff fffe 	bl	0 <core::panicking::panic>
 248:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:293
    debug_assert!(ptr <= end_ptr);
 24a:	984e      	ldr	r0, [sp, #312]	; 0x138
 24c:	994d      	ldr	r1, [sp, #308]	; 0x134
 24e:	4288      	cmp	r0, r1
 250:	d907      	bls.n	262 <memchr::fallback::memchr2+0x262>
 252:	e7ff      	b.n	254 <memchr::fallback::memchr2+0x254>
 254:	f240 0000 	movw	r0, #0
 258:	f2c0 0000 	movt	r0, #0
 25c:	f7ff fffe 	bl	0 <core::panicking::panic>
 260:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 262:	e7ff      	b.n	264 <memchr::fallback::memchr2+0x264>
 264:	984e      	ldr	r0, [sp, #312]	; 0x138
 266:	994d      	ldr	r1, [sp, #308]	; 0x134
 268:	4288      	cmp	r0, r1
 26a:	d303      	bcc.n	274 <memchr::fallback::memchr2+0x274>
 26c:	e7ff      	b.n	26e <memchr::fallback::memchr2+0x26e>
 26e:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:301
    None
 270:	9051      	str	r0, [sp, #324]	; 0x144
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 272:	e019      	b.n	2a8 <memchr::fallback::memchr2+0x2a8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 274:	984e      	ldr	r0, [sp, #312]	; 0x138
 276:	7800      	ldrb	r0, [r0, #0]
 278:	f88d 014f 	strb.w	r0, [sp, #335]	; 0x14f
 27c:	f89d 114f 	ldrb.w	r1, [sp, #335]	; 0x14f
 280:	a84f      	add	r0, sp, #316	; 0x13c
 282:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 286:	2800      	cmp	r0, #0
 288:	d008      	beq.n	29c <memchr::fallback::memchr2+0x29c>
 28a:	e7ff      	b.n	28c <memchr::fallback::memchr2+0x28c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:297
            return Some(sub(ptr, start_ptr));
 28c:	984e      	ldr	r0, [sp, #312]	; 0x138
 28e:	994c      	ldr	r1, [sp, #304]	; 0x130
 290:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 294:	9052      	str	r0, [sp, #328]	; 0x148
 296:	2001      	movs	r0, #1
 298:	9051      	str	r0, [sp, #324]	; 0x144
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 29a:	e005      	b.n	2a8 <memchr::fallback::memchr2+0x2a8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:299
        ptr = ptr.offset(1);
 29c:	984e      	ldr	r0, [sp, #312]	; 0x138
 29e:	2101      	movs	r1, #1
 2a0:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 2a4:	904e      	str	r0, [sp, #312]	; 0x138
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 2a6:	e7dd      	b.n	264 <memchr::fallback::memchr2+0x264>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 2a8:	9851      	ldr	r0, [sp, #324]	; 0x144
 2aa:	9952      	ldr	r1, [sp, #328]	; 0x148
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:102
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 2ac:	911e      	str	r1, [sp, #120]	; 0x78
 2ae:	901d      	str	r0, [sp, #116]	; 0x74
 2b0:	e7ff      	b.n	2b2 <memchr::fallback::memchr2+0x2b2>
 2b2:	e771      	b.n	198 <memchr::fallback::memchr2+0x198>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:105
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
 2b4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 2b6:	9924      	ldr	r1, [sp, #144]	; 0x90
 2b8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 2ba:	4011      	ands	r1, r2
 2bc:	f1c1 0204 	rsb	r2, r1, #4
 2c0:	2304      	movs	r3, #4
 2c2:	428b      	cmp	r3, r1
 2c4:	900c      	str	r0, [sp, #48]	; 0x30
 2c6:	920b      	str	r2, [sp, #44]	; 0x2c
 2c8:	f0c0 813a 	bcc.w	540 <memchr::fallback::memchr2+0x540>
 2cc:	e7ff      	b.n	2ce <memchr::fallback::memchr2+0x2ce>
 2ce:	980c      	ldr	r0, [sp, #48]	; 0x30
 2d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 2d2:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 2d6:	900a      	str	r0, [sp, #40]	; 0x28
 2d8:	e7ff      	b.n	2da <memchr::fallback::memchr2+0x2da>
 2da:	980a      	ldr	r0, [sp, #40]	; 0x28
 2dc:	9027      	str	r0, [sp, #156]	; 0x9c
 2de:	2100      	movs	r1, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:106
        debug_assert!(ptr > start_ptr);
 2e0:	2900      	cmp	r1, #0
 2e2:	d10d      	bne.n	300 <memchr::fallback::memchr2+0x300>
 2e4:	e7ff      	b.n	2e6 <memchr::fallback::memchr2+0x2e6>
 2e6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 2e8:	9924      	ldr	r1, [sp, #144]	; 0x90
 2ea:	4288      	cmp	r0, r1
 2ec:	d807      	bhi.n	2fe <memchr::fallback::memchr2+0x2fe>
 2ee:	e7ff      	b.n	2f0 <memchr::fallback::memchr2+0x2f0>
 2f0:	f240 0000 	movw	r0, #0
 2f4:	f2c0 0000 	movt	r0, #0
 2f8:	f7ff fffe 	bl	0 <core::panicking::panic>
 2fc:	defe      	udf	#254	; 0xfe
 2fe:	e7ff      	b.n	300 <memchr::fallback::memchr2+0x300>
 300:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:107
        debug_assert!(ptr_sub(end_ptr, USIZE_BYTES) >= start_ptr);
 302:	2800      	cmp	r0, #0
 304:	d113      	bne.n	32e <memchr::fallback::memchr2+0x32e>
 306:	e7ff      	b.n	308 <memchr::fallback::memchr2+0x308>
 308:	9825      	ldr	r0, [sp, #148]	; 0x94
 30a:	2104      	movs	r1, #4
 30c:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 310:	9009      	str	r0, [sp, #36]	; 0x24
 312:	e7ff      	b.n	314 <memchr::fallback::memchr2+0x314>
 314:	9824      	ldr	r0, [sp, #144]	; 0x90
 316:	9909      	ldr	r1, [sp, #36]	; 0x24
 318:	4281      	cmp	r1, r0
 31a:	d207      	bcs.n	32c <memchr::fallback::memchr2+0x32c>
 31c:	e7ff      	b.n	31e <memchr::fallback::memchr2+0x31e>
 31e:	f240 0000 	movw	r0, #0
 322:	f2c0 0000 	movt	r0, #0
 326:	f7ff fffe 	bl	0 <core::panicking::panic>
 32a:	defe      	udf	#254	; 0xfe
 32c:	e7ff      	b.n	32e <memchr::fallback::memchr2+0x32e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:108
        while ptr <= ptr_sub(end_ptr, USIZE_BYTES) {
 32e:	e7ff      	b.n	330 <memchr::fallback::memchr2+0x330>
 330:	9827      	ldr	r0, [sp, #156]	; 0x9c
 332:	9925      	ldr	r1, [sp, #148]	; 0x94
 334:	2204      	movs	r2, #4
 336:	9008      	str	r0, [sp, #32]
 338:	4608      	mov	r0, r1
 33a:	4611      	mov	r1, r2
 33c:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 340:	9007      	str	r0, [sp, #28]
 342:	e04b      	b.n	3dc <memchr::fallback::memchr2+0x3dc>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:119
        forward_search(start_ptr, end_ptr, ptr, confirm)
 344:	9824      	ldr	r0, [sp, #144]	; 0x90
 346:	9925      	ldr	r1, [sp, #148]	; 0x94
 348:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 34a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 34c:	f8dd c088 	ldr.w	ip, [sp, #136]	; 0x88
 350:	9054      	str	r0, [sp, #336]	; 0x150
 352:	9155      	str	r1, [sp, #340]	; 0x154
 354:	9256      	str	r2, [sp, #344]	; 0x158
 356:	9357      	str	r3, [sp, #348]	; 0x15c
 358:	f8cd c160 	str.w	ip, [sp, #352]	; 0x160
_ZN6memchr8fallback14forward_search17hd10fa709f4c65690E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:292
    debug_assert!(start_ptr <= ptr);
 35c:	9854      	ldr	r0, [sp, #336]	; 0x150
 35e:	9956      	ldr	r1, [sp, #344]	; 0x158
 360:	4288      	cmp	r0, r1
 362:	d907      	bls.n	374 <memchr::fallback::memchr2+0x374>
 364:	e7ff      	b.n	366 <memchr::fallback::memchr2+0x366>
 366:	f240 0000 	movw	r0, #0
 36a:	f2c0 0000 	movt	r0, #0
 36e:	f7ff fffe 	bl	0 <core::panicking::panic>
 372:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:293
    debug_assert!(ptr <= end_ptr);
 374:	9856      	ldr	r0, [sp, #344]	; 0x158
 376:	9955      	ldr	r1, [sp, #340]	; 0x154
 378:	4288      	cmp	r0, r1
 37a:	d907      	bls.n	38c <memchr::fallback::memchr2+0x38c>
 37c:	e7ff      	b.n	37e <memchr::fallback::memchr2+0x37e>
 37e:	f240 0000 	movw	r0, #0
 382:	f2c0 0000 	movt	r0, #0
 386:	f7ff fffe 	bl	0 <core::panicking::panic>
 38a:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 38c:	e7ff      	b.n	38e <memchr::fallback::memchr2+0x38e>
 38e:	9856      	ldr	r0, [sp, #344]	; 0x158
 390:	9955      	ldr	r1, [sp, #340]	; 0x154
 392:	4288      	cmp	r0, r1
 394:	d303      	bcc.n	39e <memchr::fallback::memchr2+0x39e>
 396:	e7ff      	b.n	398 <memchr::fallback::memchr2+0x398>
 398:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:301
    None
 39a:	9059      	str	r0, [sp, #356]	; 0x164
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 39c:	e019      	b.n	3d2 <memchr::fallback::memchr2+0x3d2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 39e:	9856      	ldr	r0, [sp, #344]	; 0x158
 3a0:	7800      	ldrb	r0, [r0, #0]
 3a2:	f88d 016f 	strb.w	r0, [sp, #367]	; 0x16f
 3a6:	f89d 116f 	ldrb.w	r1, [sp, #367]	; 0x16f
 3aa:	a857      	add	r0, sp, #348	; 0x15c
 3ac:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 3b0:	2800      	cmp	r0, #0
 3b2:	d008      	beq.n	3c6 <memchr::fallback::memchr2+0x3c6>
 3b4:	e7ff      	b.n	3b6 <memchr::fallback::memchr2+0x3b6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:297
            return Some(sub(ptr, start_ptr));
 3b6:	9856      	ldr	r0, [sp, #344]	; 0x158
 3b8:	9954      	ldr	r1, [sp, #336]	; 0x150
 3ba:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 3be:	905a      	str	r0, [sp, #360]	; 0x168
 3c0:	2001      	movs	r0, #1
 3c2:	9059      	str	r0, [sp, #356]	; 0x164
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 3c4:	e005      	b.n	3d2 <memchr::fallback::memchr2+0x3d2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:299
        ptr = ptr.offset(1);
 3c6:	9856      	ldr	r0, [sp, #344]	; 0x158
 3c8:	2101      	movs	r1, #1
 3ca:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 3ce:	9056      	str	r0, [sp, #344]	; 0x158
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 3d0:	e7dd      	b.n	38e <memchr::fallback::memchr2+0x38e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 3d2:	9859      	ldr	r0, [sp, #356]	; 0x164
 3d4:	995a      	ldr	r1, [sp, #360]	; 0x168
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:119
        forward_search(start_ptr, end_ptr, ptr, confirm)
 3d6:	911e      	str	r1, [sp, #120]	; 0x78
 3d8:	901d      	str	r0, [sp, #116]	; 0x74
 3da:	e0a9      	b.n	530 <memchr::fallback::memchr2+0x530>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:108
        while ptr <= ptr_sub(end_ptr, USIZE_BYTES) {
 3dc:	9808      	ldr	r0, [sp, #32]
 3de:	9907      	ldr	r1, [sp, #28]
 3e0:	4288      	cmp	r0, r1
 3e2:	d8af      	bhi.n	344 <memchr::fallback::memchr2+0x344>
 3e4:	e7ff      	b.n	3e6 <memchr::fallback::memchr2+0x3e6>
 3e6:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:109
            debug_assert_eq!(0, (ptr as usize) % USIZE_BYTES);
 3e8:	2800      	cmp	r0, #0
 3ea:	d159      	bne.n	4a0 <memchr::fallback::memchr2+0x4a0>
 3ec:	e7ff      	b.n	3ee <memchr::fallback::memchr2+0x3ee>
 3ee:	9827      	ldr	r0, [sp, #156]	; 0x9c
 3f0:	9006      	str	r0, [sp, #24]
 3f2:	e7ff      	b.n	3f4 <memchr::fallback::memchr2+0x3f4>
 3f4:	9806      	ldr	r0, [sp, #24]
 3f6:	f000 0103 	and.w	r1, r0, #3
 3fa:	912c      	str	r1, [sp, #176]	; 0xb0
 3fc:	f240 0100 	movw	r1, #0
 400:	f2c0 0100 	movt	r1, #0
 404:	912a      	str	r1, [sp, #168]	; 0xa8
 406:	a92c      	add	r1, sp, #176	; 0xb0
 408:	912b      	str	r1, [sp, #172]	; 0xac
 40a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 40c:	912d      	str	r1, [sp, #180]	; 0xb4
 40e:	992b      	ldr	r1, [sp, #172]	; 0xac
 410:	912e      	str	r1, [sp, #184]	; 0xb8
 412:	992d      	ldr	r1, [sp, #180]	; 0xb4
 414:	6809      	ldr	r1, [r1, #0]
 416:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 418:	6812      	ldr	r2, [r2, #0]
 41a:	4291      	cmp	r1, r2
 41c:	d016      	beq.n	44c <memchr::fallback::memchr2+0x44c>
 41e:	e7ff      	b.n	420 <memchr::fallback::memchr2+0x420>
 420:	982d      	ldr	r0, [sp, #180]	; 0xb4
 422:	903b      	str	r0, [sp, #236]	; 0xec
 424:	982e      	ldr	r0, [sp, #184]	; 0xb8
 426:	903c      	str	r0, [sp, #240]	; 0xf0
 428:	a83b      	add	r0, sp, #236	; 0xec
 42a:	9039      	str	r0, [sp, #228]	; 0xe4
 42c:	a83c      	add	r0, sp, #240	; 0xf0
 42e:	903a      	str	r0, [sp, #232]	; 0xe8
 430:	9839      	ldr	r0, [sp, #228]	; 0xe4
 432:	903d      	str	r0, [sp, #244]	; 0xf4
 434:	983a      	ldr	r0, [sp, #232]	; 0xe8
 436:	903e      	str	r0, [sp, #248]	; 0xf8
 438:	983d      	ldr	r0, [sp, #244]	; 0xf4
 43a:	f240 0100 	movw	r1, #0
 43e:	f2c0 0100 	movt	r1, #0
 442:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 446:	9005      	str	r0, [sp, #20]
 448:	9104      	str	r1, [sp, #16]
 44a:	e000      	b.n	44e <memchr::fallback::memchr2+0x44e>
 44c:	e028      	b.n	4a0 <memchr::fallback::memchr2+0x4a0>
 44e:	983e      	ldr	r0, [sp, #248]	; 0xf8
 450:	f240 0100 	movw	r1, #0
 454:	f2c0 0100 	movt	r1, #0
 458:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 45c:	9003      	str	r0, [sp, #12]
 45e:	9102      	str	r1, [sp, #8]
 460:	e7ff      	b.n	462 <memchr::fallback::memchr2+0x462>
 462:	9805      	ldr	r0, [sp, #20]
 464:	9035      	str	r0, [sp, #212]	; 0xd4
 466:	9904      	ldr	r1, [sp, #16]
 468:	9136      	str	r1, [sp, #216]	; 0xd8
 46a:	9a03      	ldr	r2, [sp, #12]
 46c:	9237      	str	r2, [sp, #220]	; 0xdc
 46e:	9b02      	ldr	r3, [sp, #8]
 470:	9338      	str	r3, [sp, #224]	; 0xe0
 472:	46ec      	mov	ip, sp
 474:	f04f 0e02 	mov.w	lr, #2
 478:	f8cc e000 	str.w	lr, [ip]
 47c:	f240 0100 	movw	r1, #0
 480:	f2c0 0100 	movt	r1, #0
 484:	a82f      	add	r0, sp, #188	; 0xbc
 486:	2203      	movs	r2, #3
 488:	ab35      	add	r3, sp, #212	; 0xd4
 48a:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 48e:	e7ff      	b.n	2 <memchr::fallback::memchr2+0x2>
 490:	f240 0100 	movw	r1, #0
 494:	f2c0 0100 	movt	r1, #0
 498:	a82f      	add	r0, sp, #188	; 0xbc
 49a:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 49e:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:111
            let chunk = *(ptr as *const usize);
 4a0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 4a2:	6800      	ldr	r0, [r0, #0]
 4a4:	903f      	str	r0, [sp, #252]	; 0xfc
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:112
            let eq1 = contains_zero_byte(chunk ^ vn1);
 4a6:	983f      	ldr	r0, [sp, #252]	; 0xfc
 4a8:	991f      	ldr	r1, [sp, #124]	; 0x7c
 4aa:	4048      	eors	r0, r1
 4ac:	905c      	str	r0, [sp, #368]	; 0x170
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 4ae:	985c      	ldr	r0, [sp, #368]	; 0x170
 4b0:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 4b4:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 4b8:	995c      	ldr	r1, [sp, #368]	; 0x170
 4ba:	4388      	bics	r0, r1
 4bc:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 4c0:	2800      	cmp	r0, #0
 4c2:	bf18      	it	ne
 4c4:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:112
            let eq1 = contains_zero_byte(chunk ^ vn1);
 4c6:	f88d 0103 	strb.w	r0, [sp, #259]	; 0x103
 4ca:	e7ff      	b.n	4cc <memchr::fallback::memchr2+0x4cc>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:113
            let eq2 = contains_zero_byte(chunk ^ vn2);
 4cc:	983f      	ldr	r0, [sp, #252]	; 0xfc
 4ce:	9920      	ldr	r1, [sp, #128]	; 0x80
 4d0:	4048      	eors	r0, r1
 4d2:	905d      	str	r0, [sp, #372]	; 0x174
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 4d4:	985d      	ldr	r0, [sp, #372]	; 0x174
 4d6:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 4da:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 4de:	995d      	ldr	r1, [sp, #372]	; 0x174
 4e0:	4388      	bics	r0, r1
 4e2:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 4e6:	2800      	cmp	r0, #0
 4e8:	bf18      	it	ne
 4ea:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr217he2ecec3a6fa00dfdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:113
            let eq2 = contains_zero_byte(chunk ^ vn2);
 4ec:	f88d 0104 	strb.w	r0, [sp, #260]	; 0x104
 4f0:	e7ff      	b.n	4f2 <memchr::fallback::memchr2+0x4f2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:114
            if eq1 || eq2 {
 4f2:	f89d 0103 	ldrb.w	r0, [sp, #259]	; 0x103
 4f6:	07c0      	lsls	r0, r0, #31
 4f8:	2800      	cmp	r0, #0
 4fa:	d004      	beq.n	506 <memchr::fallback::memchr2+0x506>
 4fc:	e7ff      	b.n	4fe <memchr::fallback::memchr2+0x4fe>
 4fe:	2001      	movs	r0, #1
 500:	f88d 0105 	strb.w	r0, [sp, #261]	; 0x105
 504:	e004      	b.n	510 <memchr::fallback::memchr2+0x510>
 506:	f89d 0104 	ldrb.w	r0, [sp, #260]	; 0x104
 50a:	f88d 0105 	strb.w	r0, [sp, #261]	; 0x105
 50e:	e7ff      	b.n	510 <memchr::fallback::memchr2+0x510>
 510:	f89d 0105 	ldrb.w	r0, [sp, #261]	; 0x105
 514:	07c0      	lsls	r0, r0, #31
 516:	2800      	cmp	r0, #0
 518:	d001      	beq.n	51e <memchr::fallback::memchr2+0x51e>
 51a:	e7ff      	b.n	51c <memchr::fallback::memchr2+0x51c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:115
                break;
 51c:	e712      	b.n	344 <memchr::fallback::memchr2+0x344>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:117
            ptr = ptr_add(ptr, USIZE_BYTES);
 51e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 520:	2104      	movs	r1, #4
 522:	f7ff fffe 	bl	0 <memchr::fallback::memchr2>
 526:	9001      	str	r0, [sp, #4]
 528:	e7ff      	b.n	52a <memchr::fallback::memchr2+0x52a>
 52a:	9801      	ldr	r0, [sp, #4]
 52c:	9027      	str	r0, [sp, #156]	; 0x9c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:108
        while ptr <= ptr_sub(end_ptr, USIZE_BYTES) {
 52e:	e6ff      	b.n	330 <memchr::fallback::memchr2+0x330>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:121
}
 530:	e62e      	b.n	190 <memchr::fallback::memchr2+0x190>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:88
    let align = USIZE_BYTES - 1;
 532:	f240 0000 	movw	r0, #0
 536:	f2c0 0000 	movt	r0, #0
 53a:	f7ff fffe 	bl	0 <core::panicking::panic>
 53e:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:105
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
 540:	f240 0000 	movw	r0, #0
 544:	f2c0 0000 	movt	r0, #0
 548:	f7ff fffe 	bl	0 <core::panicking::panic>
 54c:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17h7c18db72216e016aE:

00000000 <memchr::fallback::memchr2::{{closure}}>:
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17h7c18db72216e016aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	f88d 100e 	strb.w	r1, [sp, #14]
   c:	f89d 000e 	ldrb.w	r0, [sp, #14]
  10:	9902      	ldr	r1, [sp, #8]
  12:	6809      	ldr	r1, [r1, #0]
  14:	7809      	ldrb	r1, [r1, #0]
  16:	4288      	cmp	r0, r1
  18:	9201      	str	r2, [sp, #4]
  1a:	9300      	str	r3, [sp, #0]
  1c:	d104      	bne.n	28 <memchr::fallback::memchr2::{{closure}}+0x28>
  1e:	e7ff      	b.n	20 <memchr::fallback::memchr2::{{closure}}+0x20>
  20:	2001      	movs	r0, #1
  22:	f88d 000f 	strb.w	r0, [sp, #15]
  26:	e00b      	b.n	40 <memchr::fallback::memchr2::{{closure}}+0x40>
  28:	f89d 000e 	ldrb.w	r0, [sp, #14]
  2c:	9902      	ldr	r1, [sp, #8]
  2e:	6849      	ldr	r1, [r1, #4]
  30:	7809      	ldrb	r1, [r1, #0]
  32:	1a40      	subs	r0, r0, r1
  34:	fab0 f080 	clz	r0, r0
  38:	0940      	lsrs	r0, r0, #5
  3a:	f88d 000f 	strb.w	r0, [sp, #15]
  3e:	e7ff      	b.n	40 <memchr::fallback::memchr2::{{closure}}+0x40>
  40:	f89d 000f 	ldrb.w	r0, [sp, #15]
  44:	b004      	add	sp, #16
  46:	4770      	bx	lr

Disassembly of section .text._ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE:

00000000 <memchr::fallback::memchr3>:
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:124
pub fn memchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b0e8      	sub	sp, #416	; 0x1a0
   4:	f8dd c1b0 	ldr.w	ip, [sp, #432]	; 0x1b0
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	f88d 006d 	strb.w	r0, [sp, #109]	; 0x6d
  14:	f88d 106e 	strb.w	r1, [sp, #110]	; 0x6e
  18:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  1c:	931c      	str	r3, [sp, #112]	; 0x70
  1e:	f8cd c074 	str.w	ip, [sp, #116]	; 0x74
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:125
    let vn1 = repeat_byte(n1);
  22:	f89d 006d 	ldrb.w	r0, [sp, #109]	; 0x6d
  26:	f88d 013d 	strb.w	r0, [sp, #317]	; 0x13d
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  2a:	f89d 013d 	ldrb.w	r0, [sp, #317]	; 0x13d
  2e:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  32:	fba0 0101 	umull	r0, r1, r0, r1
  36:	2900      	cmp	r1, #0
  38:	f8cd e068 	str.w	lr, [sp, #104]	; 0x68
  3c:	9419      	str	r4, [sp, #100]	; 0x64
  3e:	9518      	str	r5, [sp, #96]	; 0x60
  40:	9617      	str	r6, [sp, #92]	; 0x5c
  42:	9016      	str	r0, [sp, #88]	; 0x58
  44:	d007      	beq.n	56 <memchr::fallback::memchr3+0x56>
  46:	e7ff      	b.n	48 <memchr::fallback::memchr3+0x48>
  48:	f240 0000 	movw	r0, #0
  4c:	f2c0 0000 	movt	r0, #0
  50:	f7ff fffe 	bl	0 <core::panicking::panic>
  54:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:125
    let vn1 = repeat_byte(n1);
  56:	9816      	ldr	r0, [sp, #88]	; 0x58
  58:	9020      	str	r0, [sp, #128]	; 0x80
  5a:	e7ff      	b.n	5c <memchr::fallback::memchr3+0x5c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:126
    let vn2 = repeat_byte(n2);
  5c:	f89d 006e 	ldrb.w	r0, [sp, #110]	; 0x6e
  60:	f88d 013e 	strb.w	r0, [sp, #318]	; 0x13e
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  64:	f89d 013e 	ldrb.w	r0, [sp, #318]	; 0x13e
  68:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  6c:	fba0 0101 	umull	r0, r1, r0, r1
  70:	2900      	cmp	r1, #0
  72:	9015      	str	r0, [sp, #84]	; 0x54
  74:	d007      	beq.n	86 <memchr::fallback::memchr3+0x86>
  76:	e7ff      	b.n	78 <memchr::fallback::memchr3+0x78>
  78:	f240 0000 	movw	r0, #0
  7c:	f2c0 0000 	movt	r0, #0
  80:	f7ff fffe 	bl	0 <core::panicking::panic>
  84:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:126
    let vn2 = repeat_byte(n2);
  86:	9815      	ldr	r0, [sp, #84]	; 0x54
  88:	9021      	str	r0, [sp, #132]	; 0x84
  8a:	e7ff      	b.n	8c <memchr::fallback::memchr3+0x8c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:127
    let vn3 = repeat_byte(n3);
  8c:	f89d 006f 	ldrb.w	r0, [sp, #111]	; 0x6f
  90:	f88d 013f 	strb.w	r0, [sp, #319]	; 0x13f
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  94:	f89d 013f 	ldrb.w	r0, [sp, #319]	; 0x13f
  98:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  9c:	fba0 0101 	umull	r0, r1, r0, r1
  a0:	2900      	cmp	r1, #0
  a2:	9014      	str	r0, [sp, #80]	; 0x50
  a4:	d007      	beq.n	b6 <memchr::fallback::memchr3+0xb6>
  a6:	e7ff      	b.n	a8 <memchr::fallback::memchr3+0xa8>
  a8:	f240 0000 	movw	r0, #0
  ac:	f2c0 0000 	movt	r0, #0
  b0:	f7ff fffe 	bl	0 <core::panicking::panic>
  b4:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:127
    let vn3 = repeat_byte(n3);
  b6:	9814      	ldr	r0, [sp, #80]	; 0x50
  b8:	9022      	str	r0, [sp, #136]	; 0x88
  ba:	e7ff      	b.n	bc <memchr::fallback::memchr3+0xbc>
  bc:	f10d 006d 	add.w	r0, sp, #109	; 0x6d
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  c0:	9023      	str	r0, [sp, #140]	; 0x8c
  c2:	f10d 006e 	add.w	r0, sp, #110	; 0x6e
  c6:	9024      	str	r0, [sp, #144]	; 0x90
  c8:	f10d 006f 	add.w	r0, sp, #111	; 0x6f
  cc:	9025      	str	r0, [sp, #148]	; 0x94
  ce:	2004      	movs	r0, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:129
    let align = USIZE_BYTES - 1;
  d0:	1e41      	subs	r1, r0, #1
  d2:	2801      	cmp	r0, #1
  d4:	9113      	str	r1, [sp, #76]	; 0x4c
  d6:	f0c0 829b 	bcc.w	610 <memchr::fallback::memchr3+0x610>
  da:	e7ff      	b.n	dc <memchr::fallback::memchr3+0xdc>
  dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
  de:	9026      	str	r0, [sp, #152]	; 0x98
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:130
    let start_ptr = haystack.as_ptr();
  e0:	981c      	ldr	r0, [sp, #112]	; 0x70
  e2:	991d      	ldr	r1, [sp, #116]	; 0x74
  e4:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  e8:	9027      	str	r0, [sp, #156]	; 0x9c
  ea:	e7ff      	b.n	ec <memchr::fallback::memchr3+0xec>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:131
    let end_ptr = haystack[haystack.len()..].as_ptr();
  ec:	981c      	ldr	r0, [sp, #112]	; 0x70
  ee:	991d      	ldr	r1, [sp, #116]	; 0x74
  f0:	9012      	str	r0, [sp, #72]	; 0x48
  f2:	9111      	str	r1, [sp, #68]	; 0x44
  f4:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  f8:	9010      	str	r0, [sp, #64]	; 0x40
  fa:	e7ff      	b.n	fc <memchr::fallback::memchr3+0xfc>
  fc:	9810      	ldr	r0, [sp, #64]	; 0x40
  fe:	9029      	str	r0, [sp, #164]	; 0xa4
 100:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 102:	9812      	ldr	r0, [sp, #72]	; 0x48
 104:	9911      	ldr	r1, [sp, #68]	; 0x44
 106:	f7ff fffe 	bl	0 <core::slice::<impl core::ops::index::Index<I> for [T]>::index>
 10a:	900f      	str	r0, [sp, #60]	; 0x3c
 10c:	910e      	str	r1, [sp, #56]	; 0x38
 10e:	e7ff      	b.n	110 <memchr::fallback::memchr3+0x110>
 110:	980f      	ldr	r0, [sp, #60]	; 0x3c
 112:	990e      	ldr	r1, [sp, #56]	; 0x38
 114:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
 118:	9028      	str	r0, [sp, #160]	; 0xa0
 11a:	e7ff      	b.n	11c <memchr::fallback::memchr3+0x11c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:132
    let mut ptr = start_ptr;
 11c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 11e:	902a      	str	r0, [sp, #168]	; 0xa8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:135
        if haystack.len() < USIZE_BYTES {
 120:	981c      	ldr	r0, [sp, #112]	; 0x70
 122:	991d      	ldr	r1, [sp, #116]	; 0x74
 124:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
 128:	900d      	str	r0, [sp, #52]	; 0x34
 12a:	e7ff      	b.n	12c <memchr::fallback::memchr3+0x12c>
 12c:	980d      	ldr	r0, [sp, #52]	; 0x34
 12e:	2803      	cmp	r0, #3
 130:	d856      	bhi.n	1e0 <memchr::fallback::memchr3+0x1e0>
 132:	e7ff      	b.n	134 <memchr::fallback::memchr3+0x134>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:136
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 134:	9827      	ldr	r0, [sp, #156]	; 0x9c
 136:	9928      	ldr	r1, [sp, #160]	; 0xa0
 138:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 13a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 13c:	f8dd c090 	ldr.w	ip, [sp, #144]	; 0x90
 140:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
 144:	f8cd e0b4 	str.w	lr, [sp, #180]	; 0xb4
 148:	f8cd c0b0 	str.w	ip, [sp, #176]	; 0xb0
 14c:	932b      	str	r3, [sp, #172]	; 0xac
 14e:	9050      	str	r0, [sp, #320]	; 0x140
 150:	9151      	str	r1, [sp, #324]	; 0x144
 152:	9252      	str	r2, [sp, #328]	; 0x148
_ZN6memchr8fallback14forward_search17hbd09fb02fef854cdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:292
    debug_assert!(start_ptr <= ptr);
 154:	9850      	ldr	r0, [sp, #320]	; 0x140
 156:	9952      	ldr	r1, [sp, #328]	; 0x148
 158:	4288      	cmp	r0, r1
 15a:	d907      	bls.n	16c <memchr::fallback::memchr3+0x16c>
 15c:	e7ff      	b.n	15e <memchr::fallback::memchr3+0x15e>
 15e:	f240 0000 	movw	r0, #0
 162:	f2c0 0000 	movt	r0, #0
 166:	f7ff fffe 	bl	0 <core::panicking::panic>
 16a:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:293
    debug_assert!(ptr <= end_ptr);
 16c:	9852      	ldr	r0, [sp, #328]	; 0x148
 16e:	9951      	ldr	r1, [sp, #324]	; 0x144
 170:	4288      	cmp	r0, r1
 172:	d907      	bls.n	184 <memchr::fallback::memchr3+0x184>
 174:	e7ff      	b.n	176 <memchr::fallback::memchr3+0x176>
 176:	f240 0000 	movw	r0, #0
 17a:	f2c0 0000 	movt	r0, #0
 17e:	f7ff fffe 	bl	0 <core::panicking::panic>
 182:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 184:	e7ff      	b.n	186 <memchr::fallback::memchr3+0x186>
 186:	9852      	ldr	r0, [sp, #328]	; 0x148
 188:	9951      	ldr	r1, [sp, #324]	; 0x144
 18a:	4288      	cmp	r0, r1
 18c:	d303      	bcc.n	196 <memchr::fallback::memchr3+0x196>
 18e:	e7ff      	b.n	190 <memchr::fallback::memchr3+0x190>
 190:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:301
    None
 192:	9053      	str	r0, [sp, #332]	; 0x14c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 194:	e019      	b.n	1ca <memchr::fallback::memchr3+0x1ca>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 196:	9852      	ldr	r0, [sp, #328]	; 0x148
 198:	7800      	ldrb	r0, [r0, #0]
 19a:	f88d 0157 	strb.w	r0, [sp, #343]	; 0x157
 19e:	f89d 1157 	ldrb.w	r1, [sp, #343]	; 0x157
 1a2:	a82b      	add	r0, sp, #172	; 0xac
 1a4:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 1a8:	2800      	cmp	r0, #0
 1aa:	d008      	beq.n	1be <memchr::fallback::memchr3+0x1be>
 1ac:	e7ff      	b.n	1ae <memchr::fallback::memchr3+0x1ae>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:297
            return Some(sub(ptr, start_ptr));
 1ae:	9852      	ldr	r0, [sp, #328]	; 0x148
 1b0:	9950      	ldr	r1, [sp, #320]	; 0x140
 1b2:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 1b6:	9054      	str	r0, [sp, #336]	; 0x150
 1b8:	2001      	movs	r0, #1
 1ba:	9053      	str	r0, [sp, #332]	; 0x14c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 1bc:	e005      	b.n	1ca <memchr::fallback::memchr3+0x1ca>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:299
        ptr = ptr.offset(1);
 1be:	9852      	ldr	r0, [sp, #328]	; 0x148
 1c0:	2101      	movs	r1, #1
 1c2:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 1c6:	9052      	str	r0, [sp, #328]	; 0x148
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 1c8:	e7dd      	b.n	186 <memchr::fallback::memchr3+0x186>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 1ca:	9853      	ldr	r0, [sp, #332]	; 0x14c
 1cc:	9954      	ldr	r1, [sp, #336]	; 0x150
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:136
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 1ce:	911f      	str	r1, [sp, #124]	; 0x7c
 1d0:	901e      	str	r0, [sp, #120]	; 0x78
 1d2:	e7ff      	b.n	1d4 <memchr::fallback::memchr3+0x1d4>
 1d4:	e003      	b.n	1de <memchr::fallback::memchr3+0x1de>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:164
}
 1d6:	981e      	ldr	r0, [sp, #120]	; 0x78
 1d8:	991f      	ldr	r1, [sp, #124]	; 0x7c
 1da:	b068      	add	sp, #416	; 0x1a0
 1dc:	bd70      	pop	{r4, r5, r6, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:136
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 1de:	e7fa      	b.n	1d6 <memchr::fallback::memchr3+0x1d6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:139
        let chunk = read_unaligned_usize(ptr);
 1e0:	982a      	ldr	r0, [sp, #168]	; 0xa8
 1e2:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 1e6:	902e      	str	r0, [sp, #184]	; 0xb8
 1e8:	e7ff      	b.n	1ea <memchr::fallback::memchr3+0x1ea>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:140
        let eq1 = contains_zero_byte(chunk ^ vn1);
 1ea:	982e      	ldr	r0, [sp, #184]	; 0xb8
 1ec:	9920      	ldr	r1, [sp, #128]	; 0x80
 1ee:	4048      	eors	r0, r1
 1f0:	9056      	str	r0, [sp, #344]	; 0x158
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 1f2:	9856      	ldr	r0, [sp, #344]	; 0x158
 1f4:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 1f8:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 1fc:	9956      	ldr	r1, [sp, #344]	; 0x158
 1fe:	4388      	bics	r0, r1
 200:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 204:	2800      	cmp	r0, #0
 206:	bf18      	it	ne
 208:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:140
        let eq1 = contains_zero_byte(chunk ^ vn1);
 20a:	f88d 00bf 	strb.w	r0, [sp, #191]	; 0xbf
 20e:	e7ff      	b.n	210 <memchr::fallback::memchr3+0x210>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:141
        let eq2 = contains_zero_byte(chunk ^ vn2);
 210:	982e      	ldr	r0, [sp, #184]	; 0xb8
 212:	9921      	ldr	r1, [sp, #132]	; 0x84
 214:	4048      	eors	r0, r1
 216:	9057      	str	r0, [sp, #348]	; 0x15c
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 218:	9857      	ldr	r0, [sp, #348]	; 0x15c
 21a:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 21e:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 222:	9957      	ldr	r1, [sp, #348]	; 0x15c
 224:	4388      	bics	r0, r1
 226:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 22a:	2800      	cmp	r0, #0
 22c:	bf18      	it	ne
 22e:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:141
        let eq2 = contains_zero_byte(chunk ^ vn2);
 230:	f88d 00c0 	strb.w	r0, [sp, #192]	; 0xc0
 234:	e7ff      	b.n	236 <memchr::fallback::memchr3+0x236>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:142
        let eq3 = contains_zero_byte(chunk ^ vn3);
 236:	982e      	ldr	r0, [sp, #184]	; 0xb8
 238:	9922      	ldr	r1, [sp, #136]	; 0x88
 23a:	4048      	eors	r0, r1
 23c:	9058      	str	r0, [sp, #352]	; 0x160
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 23e:	9858      	ldr	r0, [sp, #352]	; 0x160
 240:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 244:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 248:	9958      	ldr	r1, [sp, #352]	; 0x160
 24a:	4388      	bics	r0, r1
 24c:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 250:	2800      	cmp	r0, #0
 252:	bf18      	it	ne
 254:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:142
        let eq3 = contains_zero_byte(chunk ^ vn3);
 256:	f88d 00c1 	strb.w	r0, [sp, #193]	; 0xc1
 25a:	e7ff      	b.n	25c <memchr::fallback::memchr3+0x25c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:143
        if eq1 || eq2 || eq3 {
 25c:	f89d 00bf 	ldrb.w	r0, [sp, #191]	; 0xbf
 260:	07c0      	lsls	r0, r0, #31
 262:	2800      	cmp	r0, #0
 264:	d10f      	bne.n	286 <memchr::fallback::memchr3+0x286>
 266:	e012      	b.n	28e <memchr::fallback::memchr3+0x28e>
 268:	2001      	movs	r0, #1
 26a:	f88d 00c2 	strb.w	r0, [sp, #194]	; 0xc2
 26e:	e004      	b.n	27a <memchr::fallback::memchr3+0x27a>
 270:	f89d 00c1 	ldrb.w	r0, [sp, #193]	; 0xc1
 274:	f88d 00c2 	strb.w	r0, [sp, #194]	; 0xc2
 278:	e7ff      	b.n	27a <memchr::fallback::memchr3+0x27a>
 27a:	f89d 00c2 	ldrb.w	r0, [sp, #194]	; 0xc2
 27e:	07c0      	lsls	r0, r0, #31
 280:	2800      	cmp	r0, #0
 282:	d10f      	bne.n	2a4 <memchr::fallback::memchr3+0x2a4>
 284:	e05f      	b.n	346 <memchr::fallback::memchr3+0x346>
 286:	2001      	movs	r0, #1
 288:	f88d 00c3 	strb.w	r0, [sp, #195]	; 0xc3
 28c:	e004      	b.n	298 <memchr::fallback::memchr3+0x298>
 28e:	f89d 00c0 	ldrb.w	r0, [sp, #192]	; 0xc0
 292:	f88d 00c3 	strb.w	r0, [sp, #195]	; 0xc3
 296:	e7ff      	b.n	298 <memchr::fallback::memchr3+0x298>
 298:	f89d 00c3 	ldrb.w	r0, [sp, #195]	; 0xc3
 29c:	07c0      	lsls	r0, r0, #31
 29e:	2800      	cmp	r0, #0
 2a0:	d1e2      	bne.n	268 <memchr::fallback::memchr3+0x268>
 2a2:	e7e5      	b.n	270 <memchr::fallback::memchr3+0x270>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:144
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 2a4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 2a6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 2a8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 2aa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 2ac:	f8dd c090 	ldr.w	ip, [sp, #144]	; 0x90
 2b0:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
 2b4:	f8cd e0cc 	str.w	lr, [sp, #204]	; 0xcc
 2b8:	f8cd c0c8 	str.w	ip, [sp, #200]	; 0xc8
 2bc:	9331      	str	r3, [sp, #196]	; 0xc4
 2be:	9059      	str	r0, [sp, #356]	; 0x164
 2c0:	915a      	str	r1, [sp, #360]	; 0x168
 2c2:	925b      	str	r2, [sp, #364]	; 0x16c
_ZN6memchr8fallback14forward_search17hbd09fb02fef854cdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:292
    debug_assert!(start_ptr <= ptr);
 2c4:	9859      	ldr	r0, [sp, #356]	; 0x164
 2c6:	995b      	ldr	r1, [sp, #364]	; 0x16c
 2c8:	4288      	cmp	r0, r1
 2ca:	d907      	bls.n	2dc <memchr::fallback::memchr3+0x2dc>
 2cc:	e7ff      	b.n	2ce <memchr::fallback::memchr3+0x2ce>
 2ce:	f240 0000 	movw	r0, #0
 2d2:	f2c0 0000 	movt	r0, #0
 2d6:	f7ff fffe 	bl	0 <core::panicking::panic>
 2da:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:293
    debug_assert!(ptr <= end_ptr);
 2dc:	985b      	ldr	r0, [sp, #364]	; 0x16c
 2de:	995a      	ldr	r1, [sp, #360]	; 0x168
 2e0:	4288      	cmp	r0, r1
 2e2:	d907      	bls.n	2f4 <memchr::fallback::memchr3+0x2f4>
 2e4:	e7ff      	b.n	2e6 <memchr::fallback::memchr3+0x2e6>
 2e6:	f240 0000 	movw	r0, #0
 2ea:	f2c0 0000 	movt	r0, #0
 2ee:	f7ff fffe 	bl	0 <core::panicking::panic>
 2f2:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 2f4:	e7ff      	b.n	2f6 <memchr::fallback::memchr3+0x2f6>
 2f6:	985b      	ldr	r0, [sp, #364]	; 0x16c
 2f8:	995a      	ldr	r1, [sp, #360]	; 0x168
 2fa:	4288      	cmp	r0, r1
 2fc:	d303      	bcc.n	306 <memchr::fallback::memchr3+0x306>
 2fe:	e7ff      	b.n	300 <memchr::fallback::memchr3+0x300>
 300:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:301
    None
 302:	905c      	str	r0, [sp, #368]	; 0x170
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 304:	e019      	b.n	33a <memchr::fallback::memchr3+0x33a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 306:	985b      	ldr	r0, [sp, #364]	; 0x16c
 308:	7800      	ldrb	r0, [r0, #0]
 30a:	f88d 017b 	strb.w	r0, [sp, #379]	; 0x17b
 30e:	f89d 117b 	ldrb.w	r1, [sp, #379]	; 0x17b
 312:	a831      	add	r0, sp, #196	; 0xc4
 314:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 318:	2800      	cmp	r0, #0
 31a:	d008      	beq.n	32e <memchr::fallback::memchr3+0x32e>
 31c:	e7ff      	b.n	31e <memchr::fallback::memchr3+0x31e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:297
            return Some(sub(ptr, start_ptr));
 31e:	985b      	ldr	r0, [sp, #364]	; 0x16c
 320:	9959      	ldr	r1, [sp, #356]	; 0x164
 322:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 326:	905d      	str	r0, [sp, #372]	; 0x174
 328:	2001      	movs	r0, #1
 32a:	905c      	str	r0, [sp, #368]	; 0x170
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 32c:	e005      	b.n	33a <memchr::fallback::memchr3+0x33a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:299
        ptr = ptr.offset(1);
 32e:	985b      	ldr	r0, [sp, #364]	; 0x16c
 330:	2101      	movs	r1, #1
 332:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 336:	905b      	str	r0, [sp, #364]	; 0x16c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 338:	e7dd      	b.n	2f6 <memchr::fallback::memchr3+0x2f6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 33a:	985c      	ldr	r0, [sp, #368]	; 0x170
 33c:	995d      	ldr	r1, [sp, #372]	; 0x174
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:144
            return forward_search(start_ptr, end_ptr, ptr, confirm);
 33e:	911f      	str	r1, [sp, #124]	; 0x7c
 340:	901e      	str	r0, [sp, #120]	; 0x78
 342:	e7ff      	b.n	344 <memchr::fallback::memchr3+0x344>
 344:	e74b      	b.n	1de <memchr::fallback::memchr3+0x1de>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:147
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
 346:	982a      	ldr	r0, [sp, #168]	; 0xa8
 348:	9927      	ldr	r1, [sp, #156]	; 0x9c
 34a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 34c:	4011      	ands	r1, r2
 34e:	f1c1 0204 	rsb	r2, r1, #4
 352:	2304      	movs	r3, #4
 354:	428b      	cmp	r3, r1
 356:	900c      	str	r0, [sp, #48]	; 0x30
 358:	920b      	str	r2, [sp, #44]	; 0x2c
 35a:	f0c0 8160 	bcc.w	61e <memchr::fallback::memchr3+0x61e>
 35e:	e7ff      	b.n	360 <memchr::fallback::memchr3+0x360>
 360:	980c      	ldr	r0, [sp, #48]	; 0x30
 362:	990b      	ldr	r1, [sp, #44]	; 0x2c
 364:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 368:	900a      	str	r0, [sp, #40]	; 0x28
 36a:	e7ff      	b.n	36c <memchr::fallback::memchr3+0x36c>
 36c:	980a      	ldr	r0, [sp, #40]	; 0x28
 36e:	902a      	str	r0, [sp, #168]	; 0xa8
 370:	2100      	movs	r1, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:148
        debug_assert!(ptr > start_ptr);
 372:	2900      	cmp	r1, #0
 374:	d10d      	bne.n	392 <memchr::fallback::memchr3+0x392>
 376:	e7ff      	b.n	378 <memchr::fallback::memchr3+0x378>
 378:	982a      	ldr	r0, [sp, #168]	; 0xa8
 37a:	9927      	ldr	r1, [sp, #156]	; 0x9c
 37c:	4288      	cmp	r0, r1
 37e:	d807      	bhi.n	390 <memchr::fallback::memchr3+0x390>
 380:	e7ff      	b.n	382 <memchr::fallback::memchr3+0x382>
 382:	f240 0000 	movw	r0, #0
 386:	f2c0 0000 	movt	r0, #0
 38a:	f7ff fffe 	bl	0 <core::panicking::panic>
 38e:	defe      	udf	#254	; 0xfe
 390:	e7ff      	b.n	392 <memchr::fallback::memchr3+0x392>
 392:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:149
        debug_assert!(ptr_sub(end_ptr, USIZE_BYTES) >= start_ptr);
 394:	2800      	cmp	r0, #0
 396:	d113      	bne.n	3c0 <memchr::fallback::memchr3+0x3c0>
 398:	e7ff      	b.n	39a <memchr::fallback::memchr3+0x39a>
 39a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 39c:	2104      	movs	r1, #4
 39e:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 3a2:	9009      	str	r0, [sp, #36]	; 0x24
 3a4:	e7ff      	b.n	3a6 <memchr::fallback::memchr3+0x3a6>
 3a6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 3a8:	9909      	ldr	r1, [sp, #36]	; 0x24
 3aa:	4281      	cmp	r1, r0
 3ac:	d207      	bcs.n	3be <memchr::fallback::memchr3+0x3be>
 3ae:	e7ff      	b.n	3b0 <memchr::fallback::memchr3+0x3b0>
 3b0:	f240 0000 	movw	r0, #0
 3b4:	f2c0 0000 	movt	r0, #0
 3b8:	f7ff fffe 	bl	0 <core::panicking::panic>
 3bc:	defe      	udf	#254	; 0xfe
 3be:	e7ff      	b.n	3c0 <memchr::fallback::memchr3+0x3c0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:150
        while ptr <= ptr_sub(end_ptr, USIZE_BYTES) {
 3c0:	e7ff      	b.n	3c2 <memchr::fallback::memchr3+0x3c2>
 3c2:	982a      	ldr	r0, [sp, #168]	; 0xa8
 3c4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 3c6:	2204      	movs	r2, #4
 3c8:	9008      	str	r0, [sp, #32]
 3ca:	4608      	mov	r0, r1
 3cc:	4611      	mov	r1, r2
 3ce:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 3d2:	9007      	str	r0, [sp, #28]
 3d4:	e04f      	b.n	476 <memchr::fallback::memchr3+0x476>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:162
        forward_search(start_ptr, end_ptr, ptr, confirm)
 3d6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 3d8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 3da:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 3dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 3de:	f8dd c090 	ldr.w	ip, [sp, #144]	; 0x90
 3e2:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
 3e6:	f8cd e138 	str.w	lr, [sp, #312]	; 0x138
 3ea:	f8cd c134 	str.w	ip, [sp, #308]	; 0x134
 3ee:	934c      	str	r3, [sp, #304]	; 0x130
 3f0:	905f      	str	r0, [sp, #380]	; 0x17c
 3f2:	9160      	str	r1, [sp, #384]	; 0x180
 3f4:	9261      	str	r2, [sp, #388]	; 0x184
_ZN6memchr8fallback14forward_search17hbd09fb02fef854cdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:292
    debug_assert!(start_ptr <= ptr);
 3f6:	985f      	ldr	r0, [sp, #380]	; 0x17c
 3f8:	9961      	ldr	r1, [sp, #388]	; 0x184
 3fa:	4288      	cmp	r0, r1
 3fc:	d907      	bls.n	40e <memchr::fallback::memchr3+0x40e>
 3fe:	e7ff      	b.n	400 <memchr::fallback::memchr3+0x400>
 400:	f240 0000 	movw	r0, #0
 404:	f2c0 0000 	movt	r0, #0
 408:	f7ff fffe 	bl	0 <core::panicking::panic>
 40c:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:293
    debug_assert!(ptr <= end_ptr);
 40e:	9861      	ldr	r0, [sp, #388]	; 0x184
 410:	9960      	ldr	r1, [sp, #384]	; 0x180
 412:	4288      	cmp	r0, r1
 414:	d907      	bls.n	426 <memchr::fallback::memchr3+0x426>
 416:	e7ff      	b.n	418 <memchr::fallback::memchr3+0x418>
 418:	f240 0000 	movw	r0, #0
 41c:	f2c0 0000 	movt	r0, #0
 420:	f7ff fffe 	bl	0 <core::panicking::panic>
 424:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 426:	e7ff      	b.n	428 <memchr::fallback::memchr3+0x428>
 428:	9861      	ldr	r0, [sp, #388]	; 0x184
 42a:	9960      	ldr	r1, [sp, #384]	; 0x180
 42c:	4288      	cmp	r0, r1
 42e:	d303      	bcc.n	438 <memchr::fallback::memchr3+0x438>
 430:	e7ff      	b.n	432 <memchr::fallback::memchr3+0x432>
 432:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:301
    None
 434:	9062      	str	r0, [sp, #392]	; 0x188
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 436:	e019      	b.n	46c <memchr::fallback::memchr3+0x46c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 438:	9861      	ldr	r0, [sp, #388]	; 0x184
 43a:	7800      	ldrb	r0, [r0, #0]
 43c:	f88d 0193 	strb.w	r0, [sp, #403]	; 0x193
 440:	f89d 1193 	ldrb.w	r1, [sp, #403]	; 0x193
 444:	a84c      	add	r0, sp, #304	; 0x130
 446:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 44a:	2800      	cmp	r0, #0
 44c:	d008      	beq.n	460 <memchr::fallback::memchr3+0x460>
 44e:	e7ff      	b.n	450 <memchr::fallback::memchr3+0x450>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:297
            return Some(sub(ptr, start_ptr));
 450:	9861      	ldr	r0, [sp, #388]	; 0x184
 452:	995f      	ldr	r1, [sp, #380]	; 0x17c
 454:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 458:	9063      	str	r0, [sp, #396]	; 0x18c
 45a:	2001      	movs	r0, #1
 45c:	9062      	str	r0, [sp, #392]	; 0x188
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 45e:	e005      	b.n	46c <memchr::fallback::memchr3+0x46c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:299
        ptr = ptr.offset(1);
 460:	9861      	ldr	r0, [sp, #388]	; 0x184
 462:	2101      	movs	r1, #1
 464:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 468:	9061      	str	r0, [sp, #388]	; 0x184
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 46a:	e7dd      	b.n	428 <memchr::fallback::memchr3+0x428>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:302
}
 46c:	9862      	ldr	r0, [sp, #392]	; 0x188
 46e:	9963      	ldr	r1, [sp, #396]	; 0x18c
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:162
        forward_search(start_ptr, end_ptr, ptr, confirm)
 470:	911f      	str	r1, [sp, #124]	; 0x7c
 472:	901e      	str	r0, [sp, #120]	; 0x78
 474:	e0cb      	b.n	60e <memchr::fallback::memchr3+0x60e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:150
        while ptr <= ptr_sub(end_ptr, USIZE_BYTES) {
 476:	9808      	ldr	r0, [sp, #32]
 478:	9907      	ldr	r1, [sp, #28]
 47a:	4288      	cmp	r0, r1
 47c:	d8ab      	bhi.n	3d6 <memchr::fallback::memchr3+0x3d6>
 47e:	e7ff      	b.n	480 <memchr::fallback::memchr3+0x480>
 480:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:151
            debug_assert_eq!(0, (ptr as usize) % USIZE_BYTES);
 482:	2800      	cmp	r0, #0
 484:	d159      	bne.n	53a <memchr::fallback::memchr3+0x53a>
 486:	e7ff      	b.n	488 <memchr::fallback::memchr3+0x488>
 488:	982a      	ldr	r0, [sp, #168]	; 0xa8
 48a:	9006      	str	r0, [sp, #24]
 48c:	e7ff      	b.n	48e <memchr::fallback::memchr3+0x48e>
 48e:	9806      	ldr	r0, [sp, #24]
 490:	f000 0103 	and.w	r1, r0, #3
 494:	9136      	str	r1, [sp, #216]	; 0xd8
 496:	f240 0100 	movw	r1, #0
 49a:	f2c0 0100 	movt	r1, #0
 49e:	9134      	str	r1, [sp, #208]	; 0xd0
 4a0:	a936      	add	r1, sp, #216	; 0xd8
 4a2:	9135      	str	r1, [sp, #212]	; 0xd4
 4a4:	9934      	ldr	r1, [sp, #208]	; 0xd0
 4a6:	9137      	str	r1, [sp, #220]	; 0xdc
 4a8:	9935      	ldr	r1, [sp, #212]	; 0xd4
 4aa:	9138      	str	r1, [sp, #224]	; 0xe0
 4ac:	9937      	ldr	r1, [sp, #220]	; 0xdc
 4ae:	6809      	ldr	r1, [r1, #0]
 4b0:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 4b2:	6812      	ldr	r2, [r2, #0]
 4b4:	4291      	cmp	r1, r2
 4b6:	d016      	beq.n	4e6 <memchr::fallback::memchr3+0x4e6>
 4b8:	e7ff      	b.n	4ba <memchr::fallback::memchr3+0x4ba>
 4ba:	9837      	ldr	r0, [sp, #220]	; 0xdc
 4bc:	9045      	str	r0, [sp, #276]	; 0x114
 4be:	9838      	ldr	r0, [sp, #224]	; 0xe0
 4c0:	9046      	str	r0, [sp, #280]	; 0x118
 4c2:	a845      	add	r0, sp, #276	; 0x114
 4c4:	9043      	str	r0, [sp, #268]	; 0x10c
 4c6:	a846      	add	r0, sp, #280	; 0x118
 4c8:	9044      	str	r0, [sp, #272]	; 0x110
 4ca:	9843      	ldr	r0, [sp, #268]	; 0x10c
 4cc:	9047      	str	r0, [sp, #284]	; 0x11c
 4ce:	9844      	ldr	r0, [sp, #272]	; 0x110
 4d0:	9048      	str	r0, [sp, #288]	; 0x120
 4d2:	9847      	ldr	r0, [sp, #284]	; 0x11c
 4d4:	f240 0100 	movw	r1, #0
 4d8:	f2c0 0100 	movt	r1, #0
 4dc:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 4e0:	9005      	str	r0, [sp, #20]
 4e2:	9104      	str	r1, [sp, #16]
 4e4:	e000      	b.n	4e8 <memchr::fallback::memchr3+0x4e8>
 4e6:	e028      	b.n	53a <memchr::fallback::memchr3+0x53a>
 4e8:	9848      	ldr	r0, [sp, #288]	; 0x120
 4ea:	f240 0100 	movw	r1, #0
 4ee:	f2c0 0100 	movt	r1, #0
 4f2:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 4f6:	9003      	str	r0, [sp, #12]
 4f8:	9102      	str	r1, [sp, #8]
 4fa:	e7ff      	b.n	4fc <memchr::fallback::memchr3+0x4fc>
 4fc:	9805      	ldr	r0, [sp, #20]
 4fe:	903f      	str	r0, [sp, #252]	; 0xfc
 500:	9904      	ldr	r1, [sp, #16]
 502:	9140      	str	r1, [sp, #256]	; 0x100
 504:	9a03      	ldr	r2, [sp, #12]
 506:	9241      	str	r2, [sp, #260]	; 0x104
 508:	9b02      	ldr	r3, [sp, #8]
 50a:	9342      	str	r3, [sp, #264]	; 0x108
 50c:	46ec      	mov	ip, sp
 50e:	f04f 0e02 	mov.w	lr, #2
 512:	f8cc e000 	str.w	lr, [ip]
 516:	f240 0100 	movw	r1, #0
 51a:	f2c0 0100 	movt	r1, #0
 51e:	a839      	add	r0, sp, #228	; 0xe4
 520:	2203      	movs	r2, #3
 522:	ab3f      	add	r3, sp, #252	; 0xfc
 524:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 528:	e7ff      	b.n	2 <memchr::fallback::memchr3+0x2>
 52a:	f240 0100 	movw	r1, #0
 52e:	f2c0 0100 	movt	r1, #0
 532:	a839      	add	r0, sp, #228	; 0xe4
 534:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 538:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:153
            let chunk = *(ptr as *const usize);
 53a:	982a      	ldr	r0, [sp, #168]	; 0xa8
 53c:	6800      	ldr	r0, [r0, #0]
 53e:	9049      	str	r0, [sp, #292]	; 0x124
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:154
            let eq1 = contains_zero_byte(chunk ^ vn1);
 540:	9849      	ldr	r0, [sp, #292]	; 0x124
 542:	9920      	ldr	r1, [sp, #128]	; 0x80
 544:	4048      	eors	r0, r1
 546:	9065      	str	r0, [sp, #404]	; 0x194
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 548:	9865      	ldr	r0, [sp, #404]	; 0x194
 54a:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 54e:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 552:	9965      	ldr	r1, [sp, #404]	; 0x194
 554:	4388      	bics	r0, r1
 556:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 55a:	2800      	cmp	r0, #0
 55c:	bf18      	it	ne
 55e:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:154
            let eq1 = contains_zero_byte(chunk ^ vn1);
 560:	f88d 012b 	strb.w	r0, [sp, #299]	; 0x12b
 564:	e7ff      	b.n	566 <memchr::fallback::memchr3+0x566>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:155
            let eq2 = contains_zero_byte(chunk ^ vn2);
 566:	9849      	ldr	r0, [sp, #292]	; 0x124
 568:	9921      	ldr	r1, [sp, #132]	; 0x84
 56a:	4048      	eors	r0, r1
 56c:	9066      	str	r0, [sp, #408]	; 0x198
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 56e:	9866      	ldr	r0, [sp, #408]	; 0x198
 570:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 574:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 578:	9966      	ldr	r1, [sp, #408]	; 0x198
 57a:	4388      	bics	r0, r1
 57c:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 580:	2800      	cmp	r0, #0
 582:	bf18      	it	ne
 584:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:155
            let eq2 = contains_zero_byte(chunk ^ vn2);
 586:	f88d 012c 	strb.w	r0, [sp, #300]	; 0x12c
 58a:	e7ff      	b.n	58c <memchr::fallback::memchr3+0x58c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:156
            let eq3 = contains_zero_byte(chunk ^ vn3);
 58c:	9849      	ldr	r0, [sp, #292]	; 0x124
 58e:	9922      	ldr	r1, [sp, #136]	; 0x88
 590:	4048      	eors	r0, r1
 592:	9067      	str	r0, [sp, #412]	; 0x19c
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 594:	9867      	ldr	r0, [sp, #412]	; 0x19c
 596:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 59a:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 59e:	9967      	ldr	r1, [sp, #412]	; 0x19c
 5a0:	4388      	bics	r0, r1
 5a2:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 5a6:	2800      	cmp	r0, #0
 5a8:	bf18      	it	ne
 5aa:	2001      	movne	r0, #1
_ZN6memchr8fallback7memchr317h2d27ecd6a8b6a9bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:156
            let eq3 = contains_zero_byte(chunk ^ vn3);
 5ac:	f88d 012d 	strb.w	r0, [sp, #301]	; 0x12d
 5b0:	e7ff      	b.n	5b2 <memchr::fallback::memchr3+0x5b2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:157
            if eq1 || eq2 || eq3 {
 5b2:	f89d 012b 	ldrb.w	r0, [sp, #299]	; 0x12b
 5b6:	07c0      	lsls	r0, r0, #31
 5b8:	2800      	cmp	r0, #0
 5ba:	d10f      	bne.n	5dc <memchr::fallback::memchr3+0x5dc>
 5bc:	e012      	b.n	5e4 <memchr::fallback::memchr3+0x5e4>
 5be:	2001      	movs	r0, #1
 5c0:	f88d 012e 	strb.w	r0, [sp, #302]	; 0x12e
 5c4:	e004      	b.n	5d0 <memchr::fallback::memchr3+0x5d0>
 5c6:	f89d 012d 	ldrb.w	r0, [sp, #301]	; 0x12d
 5ca:	f88d 012e 	strb.w	r0, [sp, #302]	; 0x12e
 5ce:	e7ff      	b.n	5d0 <memchr::fallback::memchr3+0x5d0>
 5d0:	f89d 012e 	ldrb.w	r0, [sp, #302]	; 0x12e
 5d4:	07c0      	lsls	r0, r0, #31
 5d6:	2800      	cmp	r0, #0
 5d8:	d10f      	bne.n	5fa <memchr::fallback::memchr3+0x5fa>
 5da:	e00f      	b.n	5fc <memchr::fallback::memchr3+0x5fc>
 5dc:	2001      	movs	r0, #1
 5de:	f88d 012f 	strb.w	r0, [sp, #303]	; 0x12f
 5e2:	e004      	b.n	5ee <memchr::fallback::memchr3+0x5ee>
 5e4:	f89d 012c 	ldrb.w	r0, [sp, #300]	; 0x12c
 5e8:	f88d 012f 	strb.w	r0, [sp, #303]	; 0x12f
 5ec:	e7ff      	b.n	5ee <memchr::fallback::memchr3+0x5ee>
 5ee:	f89d 012f 	ldrb.w	r0, [sp, #303]	; 0x12f
 5f2:	07c0      	lsls	r0, r0, #31
 5f4:	2800      	cmp	r0, #0
 5f6:	d1e2      	bne.n	5be <memchr::fallback::memchr3+0x5be>
 5f8:	e7e5      	b.n	5c6 <memchr::fallback::memchr3+0x5c6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:158
                break;
 5fa:	e6ec      	b.n	3d6 <memchr::fallback::memchr3+0x3d6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:160
            ptr = ptr_add(ptr, USIZE_BYTES);
 5fc:	982a      	ldr	r0, [sp, #168]	; 0xa8
 5fe:	2104      	movs	r1, #4
 600:	f7ff fffe 	bl	0 <memchr::fallback::memchr3>
 604:	9001      	str	r0, [sp, #4]
 606:	e7ff      	b.n	608 <memchr::fallback::memchr3+0x608>
 608:	9801      	ldr	r0, [sp, #4]
 60a:	902a      	str	r0, [sp, #168]	; 0xa8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:150
        while ptr <= ptr_sub(end_ptr, USIZE_BYTES) {
 60c:	e6d9      	b.n	3c2 <memchr::fallback::memchr3+0x3c2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:164
}
 60e:	e5e2      	b.n	1d6 <memchr::fallback::memchr3+0x1d6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:129
    let align = USIZE_BYTES - 1;
 610:	f240 0000 	movw	r0, #0
 614:	f2c0 0000 	movt	r0, #0
 618:	f7ff fffe 	bl	0 <core::panicking::panic>
 61c:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:147
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
 61e:	f240 0000 	movw	r0, #0
 622:	f2c0 0000 	movt	r0, #0
 626:	f7ff fffe 	bl	0 <core::panicking::panic>
 62a:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17h0062600ec7f40f81E:

00000000 <memchr::fallback::memchr3::{{closure}}>:
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17h0062600ec7f40f81E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	f88d 100d 	strb.w	r1, [sp, #13]
   c:	f89d 000d 	ldrb.w	r0, [sp, #13]
  10:	9902      	ldr	r1, [sp, #8]
  12:	6809      	ldr	r1, [r1, #0]
  14:	7809      	ldrb	r1, [r1, #0]
  16:	4288      	cmp	r0, r1
  18:	9201      	str	r2, [sp, #4]
  1a:	9300      	str	r3, [sp, #0]
  1c:	d014      	beq.n	48 <memchr::fallback::memchr3::{{closure}}+0x48>
  1e:	e017      	b.n	50 <memchr::fallback::memchr3::{{closure}}+0x50>
  20:	2001      	movs	r0, #1
  22:	f88d 000e 	strb.w	r0, [sp, #14]
  26:	e00b      	b.n	40 <memchr::fallback::memchr3::{{closure}}+0x40>
  28:	f89d 000d 	ldrb.w	r0, [sp, #13]
  2c:	9902      	ldr	r1, [sp, #8]
  2e:	6889      	ldr	r1, [r1, #8]
  30:	7809      	ldrb	r1, [r1, #0]
  32:	1a40      	subs	r0, r0, r1
  34:	fab0 f080 	clz	r0, r0
  38:	0940      	lsrs	r0, r0, #5
  3a:	f88d 000e 	strb.w	r0, [sp, #14]
  3e:	e7ff      	b.n	40 <memchr::fallback::memchr3::{{closure}}+0x40>
  40:	f89d 000e 	ldrb.w	r0, [sp, #14]
  44:	b004      	add	sp, #16
  46:	4770      	bx	lr
  48:	2001      	movs	r0, #1
  4a:	f88d 000f 	strb.w	r0, [sp, #15]
  4e:	e00b      	b.n	68 <memchr::fallback::memchr3::{{closure}}+0x68>
  50:	f89d 000d 	ldrb.w	r0, [sp, #13]
  54:	9902      	ldr	r1, [sp, #8]
  56:	6849      	ldr	r1, [r1, #4]
  58:	7809      	ldrb	r1, [r1, #0]
  5a:	1a40      	subs	r0, r0, r1
  5c:	fab0 f080 	clz	r0, r0
  60:	0940      	lsrs	r0, r0, #5
  62:	f88d 000f 	strb.w	r0, [sp, #15]
  66:	e7ff      	b.n	68 <memchr::fallback::memchr3::{{closure}}+0x68>
  68:	f89d 000f 	ldrb.w	r0, [sp, #15]
  6c:	07c0      	lsls	r0, r0, #31
  6e:	2800      	cmp	r0, #0
  70:	d1d6      	bne.n	20 <memchr::fallback::memchr3::{{closure}}+0x20>
  72:	e7d9      	b.n	28 <memchr::fallback::memchr3::{{closure}}+0x28>

Disassembly of section .text._ZN6memchr8fallback7memrchr17h36db488819deab65E:

00000000 <memchr::fallback::memrchr>:
_ZN6memchr8fallback7memrchr17h36db488819deab65E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:167
pub fn memrchr(n1: u8, haystack: &[u8]) -> Option<usize> {
   0:	b580      	push	{r7, lr}
   2:	b0dc      	sub	sp, #368	; 0x170
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	f88d 0077 	strb.w	r0, [sp, #119]	; 0x77
   e:	911e      	str	r1, [sp, #120]	; 0x78
  10:	921f      	str	r2, [sp, #124]	; 0x7c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:168
    let vn1 = repeat_byte(n1);
  12:	f89d 0077 	ldrb.w	r0, [sp, #119]	; 0x77
  16:	f88d 010f 	strb.w	r0, [sp, #271]	; 0x10f
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  1a:	f89d 010f 	ldrb.w	r0, [sp, #271]	; 0x10f
  1e:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  22:	fba0 0101 	umull	r0, r1, r0, r1
  26:	2900      	cmp	r1, #0
  28:	931c      	str	r3, [sp, #112]	; 0x70
  2a:	f8cd c06c 	str.w	ip, [sp, #108]	; 0x6c
  2e:	f8cd e068 	str.w	lr, [sp, #104]	; 0x68
  32:	9019      	str	r0, [sp, #100]	; 0x64
  34:	d007      	beq.n	46 <memchr::fallback::memrchr+0x46>
  36:	e7ff      	b.n	38 <memchr::fallback::memrchr+0x38>
  38:	f240 0000 	movw	r0, #0
  3c:	f2c0 0000 	movt	r0, #0
  40:	f7ff fffe 	bl	0 <core::panicking::panic>
  44:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback7memrchr17h36db488819deab65E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:168
    let vn1 = repeat_byte(n1);
  46:	9819      	ldr	r0, [sp, #100]	; 0x64
  48:	9022      	str	r0, [sp, #136]	; 0x88
  4a:	e7ff      	b.n	4c <memchr::fallback::memrchr+0x4c>
  4c:	f10d 0077 	add.w	r0, sp, #119	; 0x77
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:169
    let confirm = |byte| byte == n1;
  50:	9023      	str	r0, [sp, #140]	; 0x8c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:170
    let loop_size = cmp::min(LOOP_SIZE, haystack.len());
  52:	981e      	ldr	r0, [sp, #120]	; 0x78
  54:	991f      	ldr	r1, [sp, #124]	; 0x7c
  56:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  5a:	9018      	str	r0, [sp, #96]	; 0x60
  5c:	e7ff      	b.n	5e <memchr::fallback::memrchr+0x5e>
  5e:	2008      	movs	r0, #8
  60:	9918      	ldr	r1, [sp, #96]	; 0x60
  62:	f7ff fffe 	bl	0 <core::cmp::min>
  66:	9024      	str	r0, [sp, #144]	; 0x90
  68:	e7ff      	b.n	6a <memchr::fallback::memrchr+0x6a>
  6a:	2004      	movs	r0, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:171
    let align = USIZE_BYTES - 1;
  6c:	1e41      	subs	r1, r0, #1
  6e:	2801      	cmp	r0, #1
  70:	9117      	str	r1, [sp, #92]	; 0x5c
  72:	f0c0 8244 	bcc.w	4fe <memchr::fallback::memrchr+0x4fe>
  76:	e7ff      	b.n	78 <memchr::fallback::memrchr+0x78>
  78:	9817      	ldr	r0, [sp, #92]	; 0x5c
  7a:	9025      	str	r0, [sp, #148]	; 0x94
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:172
    let start_ptr = haystack.as_ptr();
  7c:	981e      	ldr	r0, [sp, #120]	; 0x78
  7e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  80:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  84:	9026      	str	r0, [sp, #152]	; 0x98
  86:	e7ff      	b.n	88 <memchr::fallback::memrchr+0x88>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:173
    let end_ptr = haystack[haystack.len()..].as_ptr();
  88:	981e      	ldr	r0, [sp, #120]	; 0x78
  8a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  8c:	9016      	str	r0, [sp, #88]	; 0x58
  8e:	9115      	str	r1, [sp, #84]	; 0x54
  90:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  94:	9014      	str	r0, [sp, #80]	; 0x50
  96:	e7ff      	b.n	98 <memchr::fallback::memrchr+0x98>
  98:	9814      	ldr	r0, [sp, #80]	; 0x50
  9a:	9028      	str	r0, [sp, #160]	; 0xa0
  9c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  9e:	9816      	ldr	r0, [sp, #88]	; 0x58
  a0:	9915      	ldr	r1, [sp, #84]	; 0x54
  a2:	f7ff fffe 	bl	0 <core::slice::<impl core::ops::index::Index<I> for [T]>::index>
  a6:	9013      	str	r0, [sp, #76]	; 0x4c
  a8:	9112      	str	r1, [sp, #72]	; 0x48
  aa:	e7ff      	b.n	ac <memchr::fallback::memrchr+0xac>
  ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
  ae:	9912      	ldr	r1, [sp, #72]	; 0x48
  b0:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  b4:	9027      	str	r0, [sp, #156]	; 0x9c
  b6:	e7ff      	b.n	b8 <memchr::fallback::memrchr+0xb8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:174
    let mut ptr = end_ptr;
  b8:	9827      	ldr	r0, [sp, #156]	; 0x9c
  ba:	9029      	str	r0, [sp, #164]	; 0xa4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:177
        if haystack.len() < USIZE_BYTES {
  bc:	981e      	ldr	r0, [sp, #120]	; 0x78
  be:	991f      	ldr	r1, [sp, #124]	; 0x7c
  c0:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  c4:	9011      	str	r0, [sp, #68]	; 0x44
  c6:	e7ff      	b.n	c8 <memchr::fallback::memrchr+0xc8>
  c8:	9811      	ldr	r0, [sp, #68]	; 0x44
  ca:	2803      	cmp	r0, #3
  cc:	d84f      	bhi.n	16e <memchr::fallback::memrchr+0x16e>
  ce:	e7ff      	b.n	d0 <memchr::fallback::memrchr+0xd0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:178
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
  d0:	9826      	ldr	r0, [sp, #152]	; 0x98
  d2:	9927      	ldr	r1, [sp, #156]	; 0x9c
  d4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
  d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  d8:	9044      	str	r0, [sp, #272]	; 0x110
  da:	9145      	str	r1, [sp, #276]	; 0x114
  dc:	9246      	str	r2, [sp, #280]	; 0x118
  de:	9347      	str	r3, [sp, #284]	; 0x11c
_ZN6memchr8fallback14reverse_search17hb2cb2b9d02b9a600E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:311
    start_ptr: *const u8,
    end_ptr: *const u8,
    mut ptr: *const u8,
    confirm: F,
) -> Option<usize> {
    debug_assert!(start_ptr <= ptr);
  e0:	9844      	ldr	r0, [sp, #272]	; 0x110
  e2:	9946      	ldr	r1, [sp, #280]	; 0x118
  e4:	4288      	cmp	r0, r1
  e6:	d907      	bls.n	f8 <memchr::fallback::memrchr+0xf8>
  e8:	e7ff      	b.n	ea <memchr::fallback::memrchr+0xea>
  ea:	f240 0000 	movw	r0, #0
  ee:	f2c0 0000 	movt	r0, #0
  f2:	f7ff fffe 	bl	0 <core::panicking::panic>
  f6:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:312
    debug_assert!(ptr <= end_ptr);
  f8:	9846      	ldr	r0, [sp, #280]	; 0x118
  fa:	9945      	ldr	r1, [sp, #276]	; 0x114
  fc:	4288      	cmp	r0, r1
  fe:	d907      	bls.n	110 <memchr::fallback::memrchr+0x110>
 100:	e7ff      	b.n	102 <memchr::fallback::memrchr+0x102>
 102:	f240 0000 	movw	r0, #0
 106:	f2c0 0000 	movt	r0, #0
 10a:	f7ff fffe 	bl	0 <core::panicking::panic>
 10e:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314

    while ptr > start_ptr {
 110:	e7ff      	b.n	112 <memchr::fallback::memrchr+0x112>
 112:	9846      	ldr	r0, [sp, #280]	; 0x118
 114:	9944      	ldr	r1, [sp, #272]	; 0x110
 116:	4288      	cmp	r0, r1
 118:	d803      	bhi.n	122 <memchr::fallback::memrchr+0x122>
 11a:	e7ff      	b.n	11c <memchr::fallback::memrchr+0x11c>
 11c:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:320
        ptr = ptr.offset(-1);
        if confirm(*ptr) {
            return Some(sub(ptr, start_ptr));
        }
    }
    None
 11e:	9048      	str	r0, [sp, #288]	; 0x120
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 120:	e01a      	b.n	158 <memchr::fallback::memrchr+0x158>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:315
        ptr = ptr.offset(-1);
 122:	9846      	ldr	r0, [sp, #280]	; 0x118
 124:	f04f 31ff 	mov.w	r1, #4294967295
 128:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 12c:	9046      	str	r0, [sp, #280]	; 0x118
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 12e:	9846      	ldr	r0, [sp, #280]	; 0x118
 130:	7800      	ldrb	r0, [r0, #0]
 132:	f88d 012b 	strb.w	r0, [sp, #299]	; 0x12b
 136:	f89d 112b 	ldrb.w	r1, [sp, #299]	; 0x12b
 13a:	a847      	add	r0, sp, #284	; 0x11c
 13c:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 140:	2800      	cmp	r0, #0
 142:	d008      	beq.n	156 <memchr::fallback::memrchr+0x156>
 144:	e7ff      	b.n	146 <memchr::fallback::memrchr+0x146>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:317
            return Some(sub(ptr, start_ptr));
 146:	9846      	ldr	r0, [sp, #280]	; 0x118
 148:	9944      	ldr	r1, [sp, #272]	; 0x110
 14a:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 14e:	9049      	str	r0, [sp, #292]	; 0x124
 150:	2001      	movs	r0, #1
 152:	9048      	str	r0, [sp, #288]	; 0x120
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 154:	e000      	b.n	158 <memchr::fallback::memrchr+0x158>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 156:	e7dc      	b.n	112 <memchr::fallback::memrchr+0x112>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 158:	9848      	ldr	r0, [sp, #288]	; 0x120
 15a:	9949      	ldr	r1, [sp, #292]	; 0x124
_ZN6memchr8fallback7memrchr17h36db488819deab65E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:178
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 15c:	9121      	str	r1, [sp, #132]	; 0x84
 15e:	9020      	str	r0, [sp, #128]	; 0x80
 160:	e7ff      	b.n	162 <memchr::fallback::memrchr+0x162>
 162:	e003      	b.n	16c <memchr::fallback::memrchr+0x16c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:202
}
 164:	9820      	ldr	r0, [sp, #128]	; 0x80
 166:	9921      	ldr	r1, [sp, #132]	; 0x84
 168:	b05c      	add	sp, #368	; 0x170
 16a:	bd80      	pop	{r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:178
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 16c:	e7fa      	b.n	164 <memchr::fallback::memrchr+0x164>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:181
        let chunk = read_unaligned_usize(ptr_sub(ptr, USIZE_BYTES));
 16e:	9829      	ldr	r0, [sp, #164]	; 0xa4
 170:	2104      	movs	r1, #4
 172:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 176:	9010      	str	r0, [sp, #64]	; 0x40
 178:	e7ff      	b.n	17a <memchr::fallback::memrchr+0x17a>
 17a:	9810      	ldr	r0, [sp, #64]	; 0x40
 17c:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 180:	902a      	str	r0, [sp, #168]	; 0xa8
 182:	e7ff      	b.n	184 <memchr::fallback::memrchr+0x184>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:182
        if contains_zero_byte(chunk ^ vn1) {
 184:	982a      	ldr	r0, [sp, #168]	; 0xa8
 186:	9922      	ldr	r1, [sp, #136]	; 0x88
 188:	4048      	eors	r0, r1
 18a:	904b      	str	r0, [sp, #300]	; 0x12c
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 18c:	984b      	ldr	r0, [sp, #300]	; 0x12c
 18e:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 192:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 196:	994b      	ldr	r1, [sp, #300]	; 0x12c
 198:	4388      	bics	r0, r1
 19a:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 19e:	2800      	cmp	r0, #0
 1a0:	bf18      	it	ne
 1a2:	2001      	movne	r0, #1
_ZN6memchr8fallback7memrchr17h36db488819deab65E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:182
        if contains_zero_byte(chunk ^ vn1) {
 1a4:	900f      	str	r0, [sp, #60]	; 0x3c
 1a6:	e7ff      	b.n	1a8 <memchr::fallback::memrchr+0x1a8>
 1a8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 1aa:	07c1      	lsls	r1, r0, #31
 1ac:	2900      	cmp	r1, #0
 1ae:	d04a      	beq.n	246 <memchr::fallback::memrchr+0x246>
 1b0:	e7ff      	b.n	1b2 <memchr::fallback::memrchr+0x1b2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:183
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 1b2:	9826      	ldr	r0, [sp, #152]	; 0x98
 1b4:	9927      	ldr	r1, [sp, #156]	; 0x9c
 1b6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 1b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 1ba:	904c      	str	r0, [sp, #304]	; 0x130
 1bc:	914d      	str	r1, [sp, #308]	; 0x134
 1be:	924e      	str	r2, [sp, #312]	; 0x138
 1c0:	934f      	str	r3, [sp, #316]	; 0x13c
_ZN6memchr8fallback14reverse_search17hb2cb2b9d02b9a600E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:311
    debug_assert!(start_ptr <= ptr);
 1c2:	984c      	ldr	r0, [sp, #304]	; 0x130
 1c4:	994e      	ldr	r1, [sp, #312]	; 0x138
 1c6:	4288      	cmp	r0, r1
 1c8:	d907      	bls.n	1da <memchr::fallback::memrchr+0x1da>
 1ca:	e7ff      	b.n	1cc <memchr::fallback::memrchr+0x1cc>
 1cc:	f240 0000 	movw	r0, #0
 1d0:	f2c0 0000 	movt	r0, #0
 1d4:	f7ff fffe 	bl	0 <core::panicking::panic>
 1d8:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:312
    debug_assert!(ptr <= end_ptr);
 1da:	984e      	ldr	r0, [sp, #312]	; 0x138
 1dc:	994d      	ldr	r1, [sp, #308]	; 0x134
 1de:	4288      	cmp	r0, r1
 1e0:	d907      	bls.n	1f2 <memchr::fallback::memrchr+0x1f2>
 1e2:	e7ff      	b.n	1e4 <memchr::fallback::memrchr+0x1e4>
 1e4:	f240 0000 	movw	r0, #0
 1e8:	f2c0 0000 	movt	r0, #0
 1ec:	f7ff fffe 	bl	0 <core::panicking::panic>
 1f0:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 1f2:	e7ff      	b.n	1f4 <memchr::fallback::memrchr+0x1f4>
 1f4:	984e      	ldr	r0, [sp, #312]	; 0x138
 1f6:	994c      	ldr	r1, [sp, #304]	; 0x130
 1f8:	4288      	cmp	r0, r1
 1fa:	d803      	bhi.n	204 <memchr::fallback::memrchr+0x204>
 1fc:	e7ff      	b.n	1fe <memchr::fallback::memrchr+0x1fe>
 1fe:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:320
    None
 200:	9050      	str	r0, [sp, #320]	; 0x140
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 202:	e01a      	b.n	23a <memchr::fallback::memrchr+0x23a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:315
        ptr = ptr.offset(-1);
 204:	984e      	ldr	r0, [sp, #312]	; 0x138
 206:	f04f 31ff 	mov.w	r1, #4294967295
 20a:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 20e:	904e      	str	r0, [sp, #312]	; 0x138
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 210:	984e      	ldr	r0, [sp, #312]	; 0x138
 212:	7800      	ldrb	r0, [r0, #0]
 214:	f88d 014b 	strb.w	r0, [sp, #331]	; 0x14b
 218:	f89d 114b 	ldrb.w	r1, [sp, #331]	; 0x14b
 21c:	a84f      	add	r0, sp, #316	; 0x13c
 21e:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 222:	2800      	cmp	r0, #0
 224:	d008      	beq.n	238 <memchr::fallback::memrchr+0x238>
 226:	e7ff      	b.n	228 <memchr::fallback::memrchr+0x228>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:317
            return Some(sub(ptr, start_ptr));
 228:	984e      	ldr	r0, [sp, #312]	; 0x138
 22a:	994c      	ldr	r1, [sp, #304]	; 0x130
 22c:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 230:	9051      	str	r0, [sp, #324]	; 0x144
 232:	2001      	movs	r0, #1
 234:	9050      	str	r0, [sp, #320]	; 0x140
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 236:	e000      	b.n	23a <memchr::fallback::memrchr+0x23a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 238:	e7dc      	b.n	1f4 <memchr::fallback::memrchr+0x1f4>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 23a:	9850      	ldr	r0, [sp, #320]	; 0x140
 23c:	9951      	ldr	r1, [sp, #324]	; 0x144
_ZN6memchr8fallback7memrchr17h36db488819deab65E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:183
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 23e:	9121      	str	r1, [sp, #132]	; 0x84
 240:	9020      	str	r0, [sp, #128]	; 0x80
 242:	e7ff      	b.n	244 <memchr::fallback::memrchr+0x244>
 244:	e792      	b.n	16c <memchr::fallback::memrchr+0x16c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:186
        ptr = (end_ptr as usize & !align) as *const u8;
 246:	9827      	ldr	r0, [sp, #156]	; 0x9c
 248:	9925      	ldr	r1, [sp, #148]	; 0x94
 24a:	4388      	bics	r0, r1
 24c:	9029      	str	r0, [sp, #164]	; 0xa4
 24e:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:187
        debug_assert!(start_ptr <= ptr && ptr <= end_ptr);
 250:	2800      	cmp	r0, #0
 252:	d120      	bne.n	296 <memchr::fallback::memrchr+0x296>
 254:	e7ff      	b.n	256 <memchr::fallback::memrchr+0x256>
 256:	9826      	ldr	r0, [sp, #152]	; 0x98
 258:	9929      	ldr	r1, [sp, #164]	; 0xa4
 25a:	4288      	cmp	r0, r1
 25c:	d904      	bls.n	268 <memchr::fallback::memrchr+0x268>
 25e:	e7ff      	b.n	260 <memchr::fallback::memrchr+0x260>
 260:	2000      	movs	r0, #0
 262:	f88d 00ae 	strb.w	r0, [sp, #174]	; 0xae
 266:	e008      	b.n	27a <memchr::fallback::memrchr+0x27a>
 268:	9829      	ldr	r0, [sp, #164]	; 0xa4
 26a:	9927      	ldr	r1, [sp, #156]	; 0x9c
 26c:	2200      	movs	r2, #0
 26e:	4288      	cmp	r0, r1
 270:	bf98      	it	ls
 272:	2201      	movls	r2, #1
 274:	f88d 20ae 	strb.w	r2, [sp, #174]	; 0xae
 278:	e7ff      	b.n	27a <memchr::fallback::memrchr+0x27a>
 27a:	f89d 00ae 	ldrb.w	r0, [sp, #174]	; 0xae
 27e:	07c0      	lsls	r0, r0, #31
 280:	2800      	cmp	r0, #0
 282:	d107      	bne.n	294 <memchr::fallback::memrchr+0x294>
 284:	e7ff      	b.n	286 <memchr::fallback::memrchr+0x286>
 286:	f240 0000 	movw	r0, #0
 28a:	f2c0 0000 	movt	r0, #0
 28e:	f7ff fffe 	bl	0 <core::panicking::panic>
 292:	defe      	udf	#254	; 0xfe
 294:	e7ff      	b.n	296 <memchr::fallback::memrchr+0x296>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:188
        while loop_size == LOOP_SIZE && ptr >= ptr_add(start_ptr, loop_size) {
 296:	e7ff      	b.n	298 <memchr::fallback::memrchr+0x298>
 298:	9824      	ldr	r0, [sp, #144]	; 0x90
 29a:	2808      	cmp	r0, #8
 29c:	d04d      	beq.n	33a <memchr::fallback::memrchr+0x33a>
 29e:	e048      	b.n	332 <memchr::fallback::memrchr+0x332>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:200
        reverse_search(start_ptr, end_ptr, ptr, confirm)
 2a0:	9826      	ldr	r0, [sp, #152]	; 0x98
 2a2:	9927      	ldr	r1, [sp, #156]	; 0x9c
 2a4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 2a6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 2a8:	9053      	str	r0, [sp, #332]	; 0x14c
 2aa:	9154      	str	r1, [sp, #336]	; 0x150
 2ac:	9255      	str	r2, [sp, #340]	; 0x154
 2ae:	9356      	str	r3, [sp, #344]	; 0x158
_ZN6memchr8fallback14reverse_search17hb2cb2b9d02b9a600E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:311
    debug_assert!(start_ptr <= ptr);
 2b0:	9853      	ldr	r0, [sp, #332]	; 0x14c
 2b2:	9955      	ldr	r1, [sp, #340]	; 0x154
 2b4:	4288      	cmp	r0, r1
 2b6:	d907      	bls.n	2c8 <memchr::fallback::memrchr+0x2c8>
 2b8:	e7ff      	b.n	2ba <memchr::fallback::memrchr+0x2ba>
 2ba:	f240 0000 	movw	r0, #0
 2be:	f2c0 0000 	movt	r0, #0
 2c2:	f7ff fffe 	bl	0 <core::panicking::panic>
 2c6:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:312
    debug_assert!(ptr <= end_ptr);
 2c8:	9855      	ldr	r0, [sp, #340]	; 0x154
 2ca:	9954      	ldr	r1, [sp, #336]	; 0x150
 2cc:	4288      	cmp	r0, r1
 2ce:	d907      	bls.n	2e0 <memchr::fallback::memrchr+0x2e0>
 2d0:	e7ff      	b.n	2d2 <memchr::fallback::memrchr+0x2d2>
 2d2:	f240 0000 	movw	r0, #0
 2d6:	f2c0 0000 	movt	r0, #0
 2da:	f7ff fffe 	bl	0 <core::panicking::panic>
 2de:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 2e0:	e7ff      	b.n	2e2 <memchr::fallback::memrchr+0x2e2>
 2e2:	9855      	ldr	r0, [sp, #340]	; 0x154
 2e4:	9953      	ldr	r1, [sp, #332]	; 0x14c
 2e6:	4288      	cmp	r0, r1
 2e8:	d803      	bhi.n	2f2 <memchr::fallback::memrchr+0x2f2>
 2ea:	e7ff      	b.n	2ec <memchr::fallback::memrchr+0x2ec>
 2ec:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:320
    None
 2ee:	9057      	str	r0, [sp, #348]	; 0x15c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 2f0:	e01a      	b.n	328 <memchr::fallback::memrchr+0x328>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:315
        ptr = ptr.offset(-1);
 2f2:	9855      	ldr	r0, [sp, #340]	; 0x154
 2f4:	f04f 31ff 	mov.w	r1, #4294967295
 2f8:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 2fc:	9055      	str	r0, [sp, #340]	; 0x154
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 2fe:	9855      	ldr	r0, [sp, #340]	; 0x154
 300:	7800      	ldrb	r0, [r0, #0]
 302:	f88d 0167 	strb.w	r0, [sp, #359]	; 0x167
 306:	f89d 1167 	ldrb.w	r1, [sp, #359]	; 0x167
 30a:	a856      	add	r0, sp, #344	; 0x158
 30c:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 310:	2800      	cmp	r0, #0
 312:	d008      	beq.n	326 <memchr::fallback::memrchr+0x326>
 314:	e7ff      	b.n	316 <memchr::fallback::memrchr+0x316>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:317
            return Some(sub(ptr, start_ptr));
 316:	9855      	ldr	r0, [sp, #340]	; 0x154
 318:	9953      	ldr	r1, [sp, #332]	; 0x14c
 31a:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 31e:	9058      	str	r0, [sp, #352]	; 0x160
 320:	2001      	movs	r0, #1
 322:	9057      	str	r0, [sp, #348]	; 0x15c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 324:	e000      	b.n	328 <memchr::fallback::memrchr+0x328>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 326:	e7dc      	b.n	2e2 <memchr::fallback::memrchr+0x2e2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 328:	9857      	ldr	r0, [sp, #348]	; 0x15c
 32a:	9958      	ldr	r1, [sp, #352]	; 0x160
_ZN6memchr8fallback7memrchr17h36db488819deab65E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:200
        reverse_search(start_ptr, end_ptr, ptr, confirm)
 32c:	9121      	str	r1, [sp, #132]	; 0x84
 32e:	9020      	str	r0, [sp, #128]	; 0x80
 330:	e0e4      	b.n	4fc <memchr::fallback::memrchr+0x4fc>
 332:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:188
        while loop_size == LOOP_SIZE && ptr >= ptr_add(start_ptr, loop_size) {
 334:	f88d 00af 	strb.w	r0, [sp, #175]	; 0xaf
 338:	e009      	b.n	34e <memchr::fallback::memrchr+0x34e>
 33a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 33c:	9926      	ldr	r1, [sp, #152]	; 0x98
 33e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 340:	900e      	str	r0, [sp, #56]	; 0x38
 342:	4608      	mov	r0, r1
 344:	4611      	mov	r1, r2
 346:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 34a:	900d      	str	r0, [sp, #52]	; 0x34
 34c:	e005      	b.n	35a <memchr::fallback::memrchr+0x35a>
 34e:	f89d 00af 	ldrb.w	r0, [sp, #175]	; 0xaf
 352:	07c0      	lsls	r0, r0, #31
 354:	2800      	cmp	r0, #0
 356:	d109      	bne.n	36c <memchr::fallback::memrchr+0x36c>
 358:	e7a2      	b.n	2a0 <memchr::fallback::memrchr+0x2a0>
 35a:	2000      	movs	r0, #0
 35c:	990e      	ldr	r1, [sp, #56]	; 0x38
 35e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 360:	4291      	cmp	r1, r2
 362:	bf28      	it	cs
 364:	2001      	movcs	r0, #1
 366:	f88d 00af 	strb.w	r0, [sp, #175]	; 0xaf
 36a:	e7f0      	b.n	34e <memchr::fallback::memrchr+0x34e>
 36c:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:189
            debug_assert_eq!(0, (ptr as usize) % USIZE_BYTES);
 36e:	2800      	cmp	r0, #0
 370:	d159      	bne.n	426 <memchr::fallback::memrchr+0x426>
 372:	e7ff      	b.n	374 <memchr::fallback::memrchr+0x374>
 374:	9829      	ldr	r0, [sp, #164]	; 0xa4
 376:	900c      	str	r0, [sp, #48]	; 0x30
 378:	e7ff      	b.n	37a <memchr::fallback::memrchr+0x37a>
 37a:	980c      	ldr	r0, [sp, #48]	; 0x30
 37c:	f000 0103 	and.w	r1, r0, #3
 380:	912e      	str	r1, [sp, #184]	; 0xb8
 382:	f240 0100 	movw	r1, #0
 386:	f2c0 0100 	movt	r1, #0
 38a:	912c      	str	r1, [sp, #176]	; 0xb0
 38c:	a92e      	add	r1, sp, #184	; 0xb8
 38e:	912d      	str	r1, [sp, #180]	; 0xb4
 390:	992c      	ldr	r1, [sp, #176]	; 0xb0
 392:	912f      	str	r1, [sp, #188]	; 0xbc
 394:	992d      	ldr	r1, [sp, #180]	; 0xb4
 396:	9130      	str	r1, [sp, #192]	; 0xc0
 398:	992f      	ldr	r1, [sp, #188]	; 0xbc
 39a:	6809      	ldr	r1, [r1, #0]
 39c:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 39e:	6812      	ldr	r2, [r2, #0]
 3a0:	4291      	cmp	r1, r2
 3a2:	d016      	beq.n	3d2 <memchr::fallback::memrchr+0x3d2>
 3a4:	e7ff      	b.n	3a6 <memchr::fallback::memrchr+0x3a6>
 3a6:	982f      	ldr	r0, [sp, #188]	; 0xbc
 3a8:	903d      	str	r0, [sp, #244]	; 0xf4
 3aa:	9830      	ldr	r0, [sp, #192]	; 0xc0
 3ac:	903e      	str	r0, [sp, #248]	; 0xf8
 3ae:	a83d      	add	r0, sp, #244	; 0xf4
 3b0:	903b      	str	r0, [sp, #236]	; 0xec
 3b2:	a83e      	add	r0, sp, #248	; 0xf8
 3b4:	903c      	str	r0, [sp, #240]	; 0xf0
 3b6:	983b      	ldr	r0, [sp, #236]	; 0xec
 3b8:	903f      	str	r0, [sp, #252]	; 0xfc
 3ba:	983c      	ldr	r0, [sp, #240]	; 0xf0
 3bc:	9040      	str	r0, [sp, #256]	; 0x100
 3be:	983f      	ldr	r0, [sp, #252]	; 0xfc
 3c0:	f240 0100 	movw	r1, #0
 3c4:	f2c0 0100 	movt	r1, #0
 3c8:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 3cc:	900b      	str	r0, [sp, #44]	; 0x2c
 3ce:	910a      	str	r1, [sp, #40]	; 0x28
 3d0:	e000      	b.n	3d4 <memchr::fallback::memrchr+0x3d4>
 3d2:	e028      	b.n	426 <memchr::fallback::memrchr+0x426>
 3d4:	9840      	ldr	r0, [sp, #256]	; 0x100
 3d6:	f240 0100 	movw	r1, #0
 3da:	f2c0 0100 	movt	r1, #0
 3de:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 3e2:	9009      	str	r0, [sp, #36]	; 0x24
 3e4:	9108      	str	r1, [sp, #32]
 3e6:	e7ff      	b.n	3e8 <memchr::fallback::memrchr+0x3e8>
 3e8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 3ea:	9037      	str	r0, [sp, #220]	; 0xdc
 3ec:	990a      	ldr	r1, [sp, #40]	; 0x28
 3ee:	9138      	str	r1, [sp, #224]	; 0xe0
 3f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 3f2:	9239      	str	r2, [sp, #228]	; 0xe4
 3f4:	9b08      	ldr	r3, [sp, #32]
 3f6:	933a      	str	r3, [sp, #232]	; 0xe8
 3f8:	46ec      	mov	ip, sp
 3fa:	f04f 0e02 	mov.w	lr, #2
 3fe:	f8cc e000 	str.w	lr, [ip]
 402:	f240 0100 	movw	r1, #0
 406:	f2c0 0100 	movt	r1, #0
 40a:	a831      	add	r0, sp, #196	; 0xc4
 40c:	2203      	movs	r2, #3
 40e:	ab37      	add	r3, sp, #220	; 0xdc
 410:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 414:	e7ff      	b.n	2 <memchr::fallback::memrchr+0x2>
 416:	f240 0100 	movw	r1, #0
 41a:	f2c0 0100 	movt	r1, #0
 41e:	a831      	add	r0, sp, #196	; 0xc4
 420:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 424:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:191
            let a = *(ptr_sub(ptr, 2 * USIZE_BYTES) as *const usize);
 426:	9829      	ldr	r0, [sp, #164]	; 0xa4
 428:	2104      	movs	r1, #4
 42a:	2202      	movs	r2, #2
 42c:	fba2 1201 	umull	r1, r2, r2, r1
 430:	2a00      	cmp	r2, #0
 432:	9007      	str	r0, [sp, #28]
 434:	9106      	str	r1, [sp, #24]
 436:	d169      	bne.n	50c <memchr::fallback::memrchr+0x50c>
 438:	e7ff      	b.n	43a <memchr::fallback::memrchr+0x43a>
 43a:	9807      	ldr	r0, [sp, #28]
 43c:	9906      	ldr	r1, [sp, #24]
 43e:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 442:	9005      	str	r0, [sp, #20]
 444:	e7ff      	b.n	446 <memchr::fallback::memrchr+0x446>
 446:	9805      	ldr	r0, [sp, #20]
 448:	6801      	ldr	r1, [r0, #0]
 44a:	9141      	str	r1, [sp, #260]	; 0x104
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:192
            let b = *(ptr_sub(ptr, 1 * USIZE_BYTES) as *const usize);
 44c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 44e:	2104      	movs	r1, #4
 450:	2201      	movs	r2, #1
 452:	fba2 1201 	umull	r1, r2, r2, r1
 456:	2a00      	cmp	r2, #0
 458:	9004      	str	r0, [sp, #16]
 45a:	9103      	str	r1, [sp, #12]
 45c:	d15d      	bne.n	51a <memchr::fallback::memrchr+0x51a>
 45e:	e7ff      	b.n	460 <memchr::fallback::memrchr+0x460>
 460:	9804      	ldr	r0, [sp, #16]
 462:	9903      	ldr	r1, [sp, #12]
 464:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 468:	9002      	str	r0, [sp, #8]
 46a:	e7ff      	b.n	46c <memchr::fallback::memrchr+0x46c>
 46c:	9802      	ldr	r0, [sp, #8]
 46e:	6801      	ldr	r1, [r0, #0]
 470:	9142      	str	r1, [sp, #264]	; 0x108
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:193
            let eqa = contains_zero_byte(a ^ vn1);
 472:	9941      	ldr	r1, [sp, #260]	; 0x104
 474:	9a22      	ldr	r2, [sp, #136]	; 0x88
 476:	4051      	eors	r1, r2
 478:	915a      	str	r1, [sp, #360]	; 0x168
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 47a:	985a      	ldr	r0, [sp, #360]	; 0x168
 47c:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 480:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 484:	995a      	ldr	r1, [sp, #360]	; 0x168
 486:	4388      	bics	r0, r1
 488:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 48c:	2800      	cmp	r0, #0
 48e:	bf18      	it	ne
 490:	2001      	movne	r0, #1
_ZN6memchr8fallback7memrchr17h36db488819deab65E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:193
            let eqa = contains_zero_byte(a ^ vn1);
 492:	f88d 010c 	strb.w	r0, [sp, #268]	; 0x10c
 496:	e7ff      	b.n	498 <memchr::fallback::memrchr+0x498>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:194
            let eqb = contains_zero_byte(b ^ vn1);
 498:	9842      	ldr	r0, [sp, #264]	; 0x108
 49a:	9922      	ldr	r1, [sp, #136]	; 0x88
 49c:	4048      	eors	r0, r1
 49e:	905b      	str	r0, [sp, #364]	; 0x16c
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 4a0:	985b      	ldr	r0, [sp, #364]	; 0x16c
 4a2:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 4a6:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 4aa:	995b      	ldr	r1, [sp, #364]	; 0x16c
 4ac:	4388      	bics	r0, r1
 4ae:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 4b2:	2800      	cmp	r0, #0
 4b4:	bf18      	it	ne
 4b6:	2001      	movne	r0, #1
_ZN6memchr8fallback7memrchr17h36db488819deab65E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:194
            let eqb = contains_zero_byte(b ^ vn1);
 4b8:	f88d 010d 	strb.w	r0, [sp, #269]	; 0x10d
 4bc:	e7ff      	b.n	4be <memchr::fallback::memrchr+0x4be>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:195
            if eqa || eqb {
 4be:	f89d 010c 	ldrb.w	r0, [sp, #268]	; 0x10c
 4c2:	07c0      	lsls	r0, r0, #31
 4c4:	2800      	cmp	r0, #0
 4c6:	d004      	beq.n	4d2 <memchr::fallback::memrchr+0x4d2>
 4c8:	e7ff      	b.n	4ca <memchr::fallback::memrchr+0x4ca>
 4ca:	2001      	movs	r0, #1
 4cc:	f88d 010e 	strb.w	r0, [sp, #270]	; 0x10e
 4d0:	e004      	b.n	4dc <memchr::fallback::memrchr+0x4dc>
 4d2:	f89d 010d 	ldrb.w	r0, [sp, #269]	; 0x10d
 4d6:	f88d 010e 	strb.w	r0, [sp, #270]	; 0x10e
 4da:	e7ff      	b.n	4dc <memchr::fallback::memrchr+0x4dc>
 4dc:	f89d 010e 	ldrb.w	r0, [sp, #270]	; 0x10e
 4e0:	07c0      	lsls	r0, r0, #31
 4e2:	2800      	cmp	r0, #0
 4e4:	d001      	beq.n	4ea <memchr::fallback::memrchr+0x4ea>
 4e6:	e7ff      	b.n	4e8 <memchr::fallback::memrchr+0x4e8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:196
                break;
 4e8:	e6da      	b.n	2a0 <memchr::fallback::memrchr+0x2a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:198
            ptr = ptr_sub(ptr, loop_size);
 4ea:	9829      	ldr	r0, [sp, #164]	; 0xa4
 4ec:	9924      	ldr	r1, [sp, #144]	; 0x90
 4ee:	f7ff fffe 	bl	0 <memchr::fallback::memrchr>
 4f2:	9001      	str	r0, [sp, #4]
 4f4:	e7ff      	b.n	4f6 <memchr::fallback::memrchr+0x4f6>
 4f6:	9801      	ldr	r0, [sp, #4]
 4f8:	9029      	str	r0, [sp, #164]	; 0xa4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:188
        while loop_size == LOOP_SIZE && ptr >= ptr_add(start_ptr, loop_size) {
 4fa:	e6cd      	b.n	298 <memchr::fallback::memrchr+0x298>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:202
}
 4fc:	e632      	b.n	164 <memchr::fallback::memrchr+0x164>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:171
    let align = USIZE_BYTES - 1;
 4fe:	f240 0000 	movw	r0, #0
 502:	f2c0 0000 	movt	r0, #0
 506:	f7ff fffe 	bl	0 <core::panicking::panic>
 50a:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:191
            let a = *(ptr_sub(ptr, 2 * USIZE_BYTES) as *const usize);
 50c:	f240 0000 	movw	r0, #0
 510:	f2c0 0000 	movt	r0, #0
 514:	f7ff fffe 	bl	0 <core::panicking::panic>
 518:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:192
            let b = *(ptr_sub(ptr, 1 * USIZE_BYTES) as *const usize);
 51a:	f240 0000 	movw	r0, #0
 51e:	f2c0 0000 	movt	r0, #0
 522:	f7ff fffe 	bl	0 <core::panicking::panic>
 526:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6memchr8fallback7memrchr28_$u7b$$u7b$closure$u7d$$u7d$17h3604ea4dcfe15117E:

00000000 <memchr::fallback::memrchr::{{closure}}>:
_ZN6memchr8fallback7memrchr28_$u7b$$u7b$closure$u7d$$u7d$17h3604ea4dcfe15117E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:169
    let confirm = |byte| byte == n1;
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	f88d 100f 	strb.w	r1, [sp, #15]
   c:	f89d 000f 	ldrb.w	r0, [sp, #15]
  10:	9902      	ldr	r1, [sp, #8]
  12:	6809      	ldr	r1, [r1, #0]
  14:	7809      	ldrb	r1, [r1, #0]
  16:	1a40      	subs	r0, r0, r1
  18:	fab0 f080 	clz	r0, r0
  1c:	0940      	lsrs	r0, r0, #5
  1e:	9201      	str	r2, [sp, #4]
  20:	9300      	str	r3, [sp, #0]
  22:	b004      	add	sp, #16
  24:	4770      	bx	lr

Disassembly of section .text._ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E:

00000000 <memchr::fallback::memrchr2>:
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:205
pub fn memrchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0dc      	sub	sp, #368	; 0x170
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
  10:	f88d 1063 	strb.w	r1, [sp, #99]	; 0x63
  14:	9219      	str	r2, [sp, #100]	; 0x64
  16:	931a      	str	r3, [sp, #104]	; 0x68
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:206
    let vn1 = repeat_byte(n1);
  18:	f89d 0062 	ldrb.w	r0, [sp, #98]	; 0x62
  1c:	f88d 00fe 	strb.w	r0, [sp, #254]	; 0xfe
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  20:	f89d 00fe 	ldrb.w	r0, [sp, #254]	; 0xfe
  24:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  28:	fba0 0101 	umull	r0, r1, r0, r1
  2c:	2900      	cmp	r1, #0
  2e:	f8cd c05c 	str.w	ip, [sp, #92]	; 0x5c
  32:	f8cd e058 	str.w	lr, [sp, #88]	; 0x58
  36:	9415      	str	r4, [sp, #84]	; 0x54
  38:	9514      	str	r5, [sp, #80]	; 0x50
  3a:	9013      	str	r0, [sp, #76]	; 0x4c
  3c:	d007      	beq.n	4e <memchr::fallback::memrchr2+0x4e>
  3e:	e7ff      	b.n	40 <memchr::fallback::memrchr2+0x40>
  40:	f240 0000 	movw	r0, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	f7ff fffe 	bl	0 <core::panicking::panic>
  4c:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:206
    let vn1 = repeat_byte(n1);
  4e:	9813      	ldr	r0, [sp, #76]	; 0x4c
  50:	901d      	str	r0, [sp, #116]	; 0x74
  52:	e7ff      	b.n	54 <memchr::fallback::memrchr2+0x54>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:207
    let vn2 = repeat_byte(n2);
  54:	f89d 0063 	ldrb.w	r0, [sp, #99]	; 0x63
  58:	f88d 00ff 	strb.w	r0, [sp, #255]	; 0xff
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  5c:	f89d 00ff 	ldrb.w	r0, [sp, #255]	; 0xff
  60:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  64:	fba0 0101 	umull	r0, r1, r0, r1
  68:	2900      	cmp	r1, #0
  6a:	9012      	str	r0, [sp, #72]	; 0x48
  6c:	d007      	beq.n	7e <memchr::fallback::memrchr2+0x7e>
  6e:	e7ff      	b.n	70 <memchr::fallback::memrchr2+0x70>
  70:	f240 0000 	movw	r0, #0
  74:	f2c0 0000 	movt	r0, #0
  78:	f7ff fffe 	bl	0 <core::panicking::panic>
  7c:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:207
    let vn2 = repeat_byte(n2);
  7e:	9812      	ldr	r0, [sp, #72]	; 0x48
  80:	901e      	str	r0, [sp, #120]	; 0x78
  82:	e7ff      	b.n	84 <memchr::fallback::memrchr2+0x84>
  84:	f10d 0062 	add.w	r0, sp, #98	; 0x62
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
  88:	901f      	str	r0, [sp, #124]	; 0x7c
  8a:	f10d 0063 	add.w	r0, sp, #99	; 0x63
  8e:	9020      	str	r0, [sp, #128]	; 0x80
  90:	2004      	movs	r0, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:209
    let align = USIZE_BYTES - 1;
  92:	1e41      	subs	r1, r0, #1
  94:	2801      	cmp	r0, #1
  96:	9111      	str	r1, [sp, #68]	; 0x44
  98:	f0c0 8245 	bcc.w	526 <memchr::fallback::memrchr2+0x526>
  9c:	e7ff      	b.n	9e <memchr::fallback::memrchr2+0x9e>
  9e:	9811      	ldr	r0, [sp, #68]	; 0x44
  a0:	9021      	str	r0, [sp, #132]	; 0x84
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:210
    let start_ptr = haystack.as_ptr();
  a2:	9819      	ldr	r0, [sp, #100]	; 0x64
  a4:	991a      	ldr	r1, [sp, #104]	; 0x68
  a6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  aa:	9022      	str	r0, [sp, #136]	; 0x88
  ac:	e7ff      	b.n	ae <memchr::fallback::memrchr2+0xae>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:211
    let end_ptr = haystack[haystack.len()..].as_ptr();
  ae:	9819      	ldr	r0, [sp, #100]	; 0x64
  b0:	991a      	ldr	r1, [sp, #104]	; 0x68
  b2:	9010      	str	r0, [sp, #64]	; 0x40
  b4:	910f      	str	r1, [sp, #60]	; 0x3c
  b6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  ba:	900e      	str	r0, [sp, #56]	; 0x38
  bc:	e7ff      	b.n	be <memchr::fallback::memrchr2+0xbe>
  be:	980e      	ldr	r0, [sp, #56]	; 0x38
  c0:	9024      	str	r0, [sp, #144]	; 0x90
  c2:	9a24      	ldr	r2, [sp, #144]	; 0x90
  c4:	9810      	ldr	r0, [sp, #64]	; 0x40
  c6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  c8:	f7ff fffe 	bl	0 <core::slice::<impl core::ops::index::Index<I> for [T]>::index>
  cc:	900d      	str	r0, [sp, #52]	; 0x34
  ce:	910c      	str	r1, [sp, #48]	; 0x30
  d0:	e7ff      	b.n	d2 <memchr::fallback::memrchr2+0xd2>
  d2:	980d      	ldr	r0, [sp, #52]	; 0x34
  d4:	990c      	ldr	r1, [sp, #48]	; 0x30
  d6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  da:	9023      	str	r0, [sp, #140]	; 0x8c
  dc:	e7ff      	b.n	de <memchr::fallback::memrchr2+0xde>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:212
    let mut ptr = end_ptr;
  de:	9823      	ldr	r0, [sp, #140]	; 0x8c
  e0:	9025      	str	r0, [sp, #148]	; 0x94
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:215
        if haystack.len() < USIZE_BYTES {
  e2:	9819      	ldr	r0, [sp, #100]	; 0x64
  e4:	991a      	ldr	r1, [sp, #104]	; 0x68
  e6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  ea:	900b      	str	r0, [sp, #44]	; 0x2c
  ec:	e7ff      	b.n	ee <memchr::fallback::memrchr2+0xee>
  ee:	980b      	ldr	r0, [sp, #44]	; 0x2c
  f0:	2803      	cmp	r0, #3
  f2:	d853      	bhi.n	19c <memchr::fallback::memrchr2+0x19c>
  f4:	e7ff      	b.n	f6 <memchr::fallback::memrchr2+0xf6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:216
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
  f6:	9822      	ldr	r0, [sp, #136]	; 0x88
  f8:	9923      	ldr	r1, [sp, #140]	; 0x8c
  fa:	9a25      	ldr	r2, [sp, #148]	; 0x94
  fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  fe:	f8dd c080 	ldr.w	ip, [sp, #128]	; 0x80
 102:	9040      	str	r0, [sp, #256]	; 0x100
 104:	9141      	str	r1, [sp, #260]	; 0x104
 106:	9242      	str	r2, [sp, #264]	; 0x108
 108:	9343      	str	r3, [sp, #268]	; 0x10c
 10a:	f8cd c110 	str.w	ip, [sp, #272]	; 0x110
_ZN6memchr8fallback14reverse_search17hb4aef49f80f4bb32E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:311
    debug_assert!(start_ptr <= ptr);
 10e:	9840      	ldr	r0, [sp, #256]	; 0x100
 110:	9942      	ldr	r1, [sp, #264]	; 0x108
 112:	4288      	cmp	r0, r1
 114:	d907      	bls.n	126 <memchr::fallback::memrchr2+0x126>
 116:	e7ff      	b.n	118 <memchr::fallback::memrchr2+0x118>
 118:	f240 0000 	movw	r0, #0
 11c:	f2c0 0000 	movt	r0, #0
 120:	f7ff fffe 	bl	0 <core::panicking::panic>
 124:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:312
    debug_assert!(ptr <= end_ptr);
 126:	9842      	ldr	r0, [sp, #264]	; 0x108
 128:	9941      	ldr	r1, [sp, #260]	; 0x104
 12a:	4288      	cmp	r0, r1
 12c:	d907      	bls.n	13e <memchr::fallback::memrchr2+0x13e>
 12e:	e7ff      	b.n	130 <memchr::fallback::memrchr2+0x130>
 130:	f240 0000 	movw	r0, #0
 134:	f2c0 0000 	movt	r0, #0
 138:	f7ff fffe 	bl	0 <core::panicking::panic>
 13c:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 13e:	e7ff      	b.n	140 <memchr::fallback::memrchr2+0x140>
 140:	9842      	ldr	r0, [sp, #264]	; 0x108
 142:	9940      	ldr	r1, [sp, #256]	; 0x100
 144:	4288      	cmp	r0, r1
 146:	d803      	bhi.n	150 <memchr::fallback::memrchr2+0x150>
 148:	e7ff      	b.n	14a <memchr::fallback::memrchr2+0x14a>
 14a:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:320
    None
 14c:	9045      	str	r0, [sp, #276]	; 0x114
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 14e:	e01a      	b.n	186 <memchr::fallback::memrchr2+0x186>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:315
        ptr = ptr.offset(-1);
 150:	9842      	ldr	r0, [sp, #264]	; 0x108
 152:	f04f 31ff 	mov.w	r1, #4294967295
 156:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 15a:	9042      	str	r0, [sp, #264]	; 0x108
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 15c:	9842      	ldr	r0, [sp, #264]	; 0x108
 15e:	7800      	ldrb	r0, [r0, #0]
 160:	f88d 011f 	strb.w	r0, [sp, #287]	; 0x11f
 164:	f89d 111f 	ldrb.w	r1, [sp, #287]	; 0x11f
 168:	a843      	add	r0, sp, #268	; 0x10c
 16a:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 16e:	2800      	cmp	r0, #0
 170:	d008      	beq.n	184 <memchr::fallback::memrchr2+0x184>
 172:	e7ff      	b.n	174 <memchr::fallback::memrchr2+0x174>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:317
            return Some(sub(ptr, start_ptr));
 174:	9842      	ldr	r0, [sp, #264]	; 0x108
 176:	9940      	ldr	r1, [sp, #256]	; 0x100
 178:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 17c:	9046      	str	r0, [sp, #280]	; 0x118
 17e:	2001      	movs	r0, #1
 180:	9045      	str	r0, [sp, #276]	; 0x114
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 182:	e000      	b.n	186 <memchr::fallback::memrchr2+0x186>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 184:	e7dc      	b.n	140 <memchr::fallback::memrchr2+0x140>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 186:	9845      	ldr	r0, [sp, #276]	; 0x114
 188:	9946      	ldr	r1, [sp, #280]	; 0x118
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:216
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 18a:	911c      	str	r1, [sp, #112]	; 0x70
 18c:	901b      	str	r0, [sp, #108]	; 0x6c
 18e:	e7ff      	b.n	190 <memchr::fallback::memrchr2+0x190>
 190:	e003      	b.n	19a <memchr::fallback::memrchr2+0x19a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:241
}
 192:	981b      	ldr	r0, [sp, #108]	; 0x6c
 194:	991c      	ldr	r1, [sp, #112]	; 0x70
 196:	b05c      	add	sp, #368	; 0x170
 198:	bdb0      	pop	{r4, r5, r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:216
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 19a:	e7fa      	b.n	192 <memchr::fallback::memrchr2+0x192>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:219
        let chunk = read_unaligned_usize(ptr_sub(ptr, USIZE_BYTES));
 19c:	9825      	ldr	r0, [sp, #148]	; 0x94
 19e:	2104      	movs	r1, #4
 1a0:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 1a4:	900a      	str	r0, [sp, #40]	; 0x28
 1a6:	e7ff      	b.n	1a8 <memchr::fallback::memrchr2+0x1a8>
 1a8:	980a      	ldr	r0, [sp, #40]	; 0x28
 1aa:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 1ae:	9026      	str	r0, [sp, #152]	; 0x98
 1b0:	e7ff      	b.n	1b2 <memchr::fallback::memrchr2+0x1b2>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:220
        let eq1 = contains_zero_byte(chunk ^ vn1);
 1b2:	9826      	ldr	r0, [sp, #152]	; 0x98
 1b4:	991d      	ldr	r1, [sp, #116]	; 0x74
 1b6:	4048      	eors	r0, r1
 1b8:	9048      	str	r0, [sp, #288]	; 0x120
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 1ba:	9848      	ldr	r0, [sp, #288]	; 0x120
 1bc:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 1c0:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 1c4:	9948      	ldr	r1, [sp, #288]	; 0x120
 1c6:	4388      	bics	r0, r1
 1c8:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 1cc:	2800      	cmp	r0, #0
 1ce:	bf18      	it	ne
 1d0:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:220
        let eq1 = contains_zero_byte(chunk ^ vn1);
 1d2:	f88d 009c 	strb.w	r0, [sp, #156]	; 0x9c
 1d6:	e7ff      	b.n	1d8 <memchr::fallback::memrchr2+0x1d8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:221
        let eq2 = contains_zero_byte(chunk ^ vn2);
 1d8:	9826      	ldr	r0, [sp, #152]	; 0x98
 1da:	991e      	ldr	r1, [sp, #120]	; 0x78
 1dc:	4048      	eors	r0, r1
 1de:	9049      	str	r0, [sp, #292]	; 0x124
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 1e0:	9849      	ldr	r0, [sp, #292]	; 0x124
 1e2:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 1e6:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 1ea:	9949      	ldr	r1, [sp, #292]	; 0x124
 1ec:	4388      	bics	r0, r1
 1ee:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 1f2:	2800      	cmp	r0, #0
 1f4:	bf18      	it	ne
 1f6:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:221
        let eq2 = contains_zero_byte(chunk ^ vn2);
 1f8:	f88d 009d 	strb.w	r0, [sp, #157]	; 0x9d
 1fc:	e7ff      	b.n	1fe <memchr::fallback::memrchr2+0x1fe>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:222
        if eq1 || eq2 {
 1fe:	f89d 009c 	ldrb.w	r0, [sp, #156]	; 0x9c
 202:	07c0      	lsls	r0, r0, #31
 204:	2800      	cmp	r0, #0
 206:	d004      	beq.n	212 <memchr::fallback::memrchr2+0x212>
 208:	e7ff      	b.n	20a <memchr::fallback::memrchr2+0x20a>
 20a:	2001      	movs	r0, #1
 20c:	f88d 009e 	strb.w	r0, [sp, #158]	; 0x9e
 210:	e004      	b.n	21c <memchr::fallback::memrchr2+0x21c>
 212:	f89d 009d 	ldrb.w	r0, [sp, #157]	; 0x9d
 216:	f88d 009e 	strb.w	r0, [sp, #158]	; 0x9e
 21a:	e7ff      	b.n	21c <memchr::fallback::memrchr2+0x21c>
 21c:	f89d 009e 	ldrb.w	r0, [sp, #158]	; 0x9e
 220:	07c0      	lsls	r0, r0, #31
 222:	2800      	cmp	r0, #0
 224:	d04e      	beq.n	2c4 <memchr::fallback::memrchr2+0x2c4>
 226:	e7ff      	b.n	228 <memchr::fallback::memrchr2+0x228>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:223
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 228:	9822      	ldr	r0, [sp, #136]	; 0x88
 22a:	9923      	ldr	r1, [sp, #140]	; 0x8c
 22c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 22e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 230:	f8dd c080 	ldr.w	ip, [sp, #128]	; 0x80
 234:	904a      	str	r0, [sp, #296]	; 0x128
 236:	914b      	str	r1, [sp, #300]	; 0x12c
 238:	924c      	str	r2, [sp, #304]	; 0x130
 23a:	934d      	str	r3, [sp, #308]	; 0x134
 23c:	f8cd c138 	str.w	ip, [sp, #312]	; 0x138
_ZN6memchr8fallback14reverse_search17hb4aef49f80f4bb32E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:311
    debug_assert!(start_ptr <= ptr);
 240:	984a      	ldr	r0, [sp, #296]	; 0x128
 242:	994c      	ldr	r1, [sp, #304]	; 0x130
 244:	4288      	cmp	r0, r1
 246:	d907      	bls.n	258 <memchr::fallback::memrchr2+0x258>
 248:	e7ff      	b.n	24a <memchr::fallback::memrchr2+0x24a>
 24a:	f240 0000 	movw	r0, #0
 24e:	f2c0 0000 	movt	r0, #0
 252:	f7ff fffe 	bl	0 <core::panicking::panic>
 256:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:312
    debug_assert!(ptr <= end_ptr);
 258:	984c      	ldr	r0, [sp, #304]	; 0x130
 25a:	994b      	ldr	r1, [sp, #300]	; 0x12c
 25c:	4288      	cmp	r0, r1
 25e:	d907      	bls.n	270 <memchr::fallback::memrchr2+0x270>
 260:	e7ff      	b.n	262 <memchr::fallback::memrchr2+0x262>
 262:	f240 0000 	movw	r0, #0
 266:	f2c0 0000 	movt	r0, #0
 26a:	f7ff fffe 	bl	0 <core::panicking::panic>
 26e:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 270:	e7ff      	b.n	272 <memchr::fallback::memrchr2+0x272>
 272:	984c      	ldr	r0, [sp, #304]	; 0x130
 274:	994a      	ldr	r1, [sp, #296]	; 0x128
 276:	4288      	cmp	r0, r1
 278:	d803      	bhi.n	282 <memchr::fallback::memrchr2+0x282>
 27a:	e7ff      	b.n	27c <memchr::fallback::memrchr2+0x27c>
 27c:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:320
    None
 27e:	904f      	str	r0, [sp, #316]	; 0x13c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 280:	e01a      	b.n	2b8 <memchr::fallback::memrchr2+0x2b8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:315
        ptr = ptr.offset(-1);
 282:	984c      	ldr	r0, [sp, #304]	; 0x130
 284:	f04f 31ff 	mov.w	r1, #4294967295
 288:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 28c:	904c      	str	r0, [sp, #304]	; 0x130
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 28e:	984c      	ldr	r0, [sp, #304]	; 0x130
 290:	7800      	ldrb	r0, [r0, #0]
 292:	f88d 0147 	strb.w	r0, [sp, #327]	; 0x147
 296:	f89d 1147 	ldrb.w	r1, [sp, #327]	; 0x147
 29a:	a84d      	add	r0, sp, #308	; 0x134
 29c:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 2a0:	2800      	cmp	r0, #0
 2a2:	d008      	beq.n	2b6 <memchr::fallback::memrchr2+0x2b6>
 2a4:	e7ff      	b.n	2a6 <memchr::fallback::memrchr2+0x2a6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:317
            return Some(sub(ptr, start_ptr));
 2a6:	984c      	ldr	r0, [sp, #304]	; 0x130
 2a8:	994a      	ldr	r1, [sp, #296]	; 0x128
 2aa:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 2ae:	9050      	str	r0, [sp, #320]	; 0x140
 2b0:	2001      	movs	r0, #1
 2b2:	904f      	str	r0, [sp, #316]	; 0x13c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 2b4:	e000      	b.n	2b8 <memchr::fallback::memrchr2+0x2b8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 2b6:	e7dc      	b.n	272 <memchr::fallback::memrchr2+0x272>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 2b8:	984f      	ldr	r0, [sp, #316]	; 0x13c
 2ba:	9950      	ldr	r1, [sp, #320]	; 0x140
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:223
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 2bc:	911c      	str	r1, [sp, #112]	; 0x70
 2be:	901b      	str	r0, [sp, #108]	; 0x6c
 2c0:	e7ff      	b.n	2c2 <memchr::fallback::memrchr2+0x2c2>
 2c2:	e76a      	b.n	19a <memchr::fallback::memrchr2+0x19a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:226
        ptr = (end_ptr as usize & !align) as *const u8;
 2c4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 2c6:	9921      	ldr	r1, [sp, #132]	; 0x84
 2c8:	4388      	bics	r0, r1
 2ca:	9025      	str	r0, [sp, #148]	; 0x94
 2cc:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:227
        debug_assert!(start_ptr <= ptr && ptr <= end_ptr);
 2ce:	2800      	cmp	r0, #0
 2d0:	d120      	bne.n	314 <memchr::fallback::memrchr2+0x314>
 2d2:	e7ff      	b.n	2d4 <memchr::fallback::memrchr2+0x2d4>
 2d4:	9822      	ldr	r0, [sp, #136]	; 0x88
 2d6:	9925      	ldr	r1, [sp, #148]	; 0x94
 2d8:	4288      	cmp	r0, r1
 2da:	d904      	bls.n	2e6 <memchr::fallback::memrchr2+0x2e6>
 2dc:	e7ff      	b.n	2de <memchr::fallback::memrchr2+0x2de>
 2de:	2000      	movs	r0, #0
 2e0:	f88d 009f 	strb.w	r0, [sp, #159]	; 0x9f
 2e4:	e008      	b.n	2f8 <memchr::fallback::memrchr2+0x2f8>
 2e6:	9825      	ldr	r0, [sp, #148]	; 0x94
 2e8:	9923      	ldr	r1, [sp, #140]	; 0x8c
 2ea:	2200      	movs	r2, #0
 2ec:	4288      	cmp	r0, r1
 2ee:	bf98      	it	ls
 2f0:	2201      	movls	r2, #1
 2f2:	f88d 209f 	strb.w	r2, [sp, #159]	; 0x9f
 2f6:	e7ff      	b.n	2f8 <memchr::fallback::memrchr2+0x2f8>
 2f8:	f89d 009f 	ldrb.w	r0, [sp, #159]	; 0x9f
 2fc:	07c0      	lsls	r0, r0, #31
 2fe:	2800      	cmp	r0, #0
 300:	d107      	bne.n	312 <memchr::fallback::memrchr2+0x312>
 302:	e7ff      	b.n	304 <memchr::fallback::memrchr2+0x304>
 304:	f240 0000 	movw	r0, #0
 308:	f2c0 0000 	movt	r0, #0
 30c:	f7ff fffe 	bl	0 <core::panicking::panic>
 310:	defe      	udf	#254	; 0xfe
 312:	e7ff      	b.n	314 <memchr::fallback::memrchr2+0x314>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:228
        while ptr >= ptr_add(start_ptr, USIZE_BYTES) {
 314:	e7ff      	b.n	316 <memchr::fallback::memrchr2+0x316>
 316:	9825      	ldr	r0, [sp, #148]	; 0x94
 318:	9922      	ldr	r1, [sp, #136]	; 0x88
 31a:	2204      	movs	r2, #4
 31c:	9009      	str	r0, [sp, #36]	; 0x24
 31e:	4608      	mov	r0, r1
 320:	4611      	mov	r1, r2
 322:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 326:	9008      	str	r0, [sp, #32]
 328:	e04c      	b.n	3c4 <memchr::fallback::memrchr2+0x3c4>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:239
        reverse_search(start_ptr, end_ptr, ptr, confirm)
 32a:	9822      	ldr	r0, [sp, #136]	; 0x88
 32c:	9923      	ldr	r1, [sp, #140]	; 0x8c
 32e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 330:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 332:	f8dd c080 	ldr.w	ip, [sp, #128]	; 0x80
 336:	9052      	str	r0, [sp, #328]	; 0x148
 338:	9153      	str	r1, [sp, #332]	; 0x14c
 33a:	9254      	str	r2, [sp, #336]	; 0x150
 33c:	9355      	str	r3, [sp, #340]	; 0x154
 33e:	f8cd c158 	str.w	ip, [sp, #344]	; 0x158
_ZN6memchr8fallback14reverse_search17hb4aef49f80f4bb32E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:311
    debug_assert!(start_ptr <= ptr);
 342:	9852      	ldr	r0, [sp, #328]	; 0x148
 344:	9954      	ldr	r1, [sp, #336]	; 0x150
 346:	4288      	cmp	r0, r1
 348:	d907      	bls.n	35a <memchr::fallback::memrchr2+0x35a>
 34a:	e7ff      	b.n	34c <memchr::fallback::memrchr2+0x34c>
 34c:	f240 0000 	movw	r0, #0
 350:	f2c0 0000 	movt	r0, #0
 354:	f7ff fffe 	bl	0 <core::panicking::panic>
 358:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:312
    debug_assert!(ptr <= end_ptr);
 35a:	9854      	ldr	r0, [sp, #336]	; 0x150
 35c:	9953      	ldr	r1, [sp, #332]	; 0x14c
 35e:	4288      	cmp	r0, r1
 360:	d907      	bls.n	372 <memchr::fallback::memrchr2+0x372>
 362:	e7ff      	b.n	364 <memchr::fallback::memrchr2+0x364>
 364:	f240 0000 	movw	r0, #0
 368:	f2c0 0000 	movt	r0, #0
 36c:	f7ff fffe 	bl	0 <core::panicking::panic>
 370:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 372:	e7ff      	b.n	374 <memchr::fallback::memrchr2+0x374>
 374:	9854      	ldr	r0, [sp, #336]	; 0x150
 376:	9952      	ldr	r1, [sp, #328]	; 0x148
 378:	4288      	cmp	r0, r1
 37a:	d803      	bhi.n	384 <memchr::fallback::memrchr2+0x384>
 37c:	e7ff      	b.n	37e <memchr::fallback::memrchr2+0x37e>
 37e:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:320
    None
 380:	9057      	str	r0, [sp, #348]	; 0x15c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 382:	e01a      	b.n	3ba <memchr::fallback::memrchr2+0x3ba>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:315
        ptr = ptr.offset(-1);
 384:	9854      	ldr	r0, [sp, #336]	; 0x150
 386:	f04f 31ff 	mov.w	r1, #4294967295
 38a:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 38e:	9054      	str	r0, [sp, #336]	; 0x150
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 390:	9854      	ldr	r0, [sp, #336]	; 0x150
 392:	7800      	ldrb	r0, [r0, #0]
 394:	f88d 0167 	strb.w	r0, [sp, #359]	; 0x167
 398:	f89d 1167 	ldrb.w	r1, [sp, #359]	; 0x167
 39c:	a855      	add	r0, sp, #340	; 0x154
 39e:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 3a2:	2800      	cmp	r0, #0
 3a4:	d008      	beq.n	3b8 <memchr::fallback::memrchr2+0x3b8>
 3a6:	e7ff      	b.n	3a8 <memchr::fallback::memrchr2+0x3a8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:317
            return Some(sub(ptr, start_ptr));
 3a8:	9854      	ldr	r0, [sp, #336]	; 0x150
 3aa:	9952      	ldr	r1, [sp, #328]	; 0x148
 3ac:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 3b0:	9058      	str	r0, [sp, #352]	; 0x160
 3b2:	2001      	movs	r0, #1
 3b4:	9057      	str	r0, [sp, #348]	; 0x15c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 3b6:	e000      	b.n	3ba <memchr::fallback::memrchr2+0x3ba>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 3b8:	e7dc      	b.n	374 <memchr::fallback::memrchr2+0x374>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 3ba:	9857      	ldr	r0, [sp, #348]	; 0x15c
 3bc:	9958      	ldr	r1, [sp, #352]	; 0x160
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:239
        reverse_search(start_ptr, end_ptr, ptr, confirm)
 3be:	911c      	str	r1, [sp, #112]	; 0x70
 3c0:	901b      	str	r0, [sp, #108]	; 0x6c
 3c2:	e0af      	b.n	524 <memchr::fallback::memrchr2+0x524>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:228
        while ptr >= ptr_add(start_ptr, USIZE_BYTES) {
 3c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 3c6:	9908      	ldr	r1, [sp, #32]
 3c8:	4288      	cmp	r0, r1
 3ca:	d3ae      	bcc.n	32a <memchr::fallback::memrchr2+0x32a>
 3cc:	e7ff      	b.n	3ce <memchr::fallback::memrchr2+0x3ce>
 3ce:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:229
            debug_assert_eq!(0, (ptr as usize) % USIZE_BYTES);
 3d0:	2800      	cmp	r0, #0
 3d2:	d159      	bne.n	488 <memchr::fallback::memrchr2+0x488>
 3d4:	e7ff      	b.n	3d6 <memchr::fallback::memrchr2+0x3d6>
 3d6:	9825      	ldr	r0, [sp, #148]	; 0x94
 3d8:	9007      	str	r0, [sp, #28]
 3da:	e7ff      	b.n	3dc <memchr::fallback::memrchr2+0x3dc>
 3dc:	9807      	ldr	r0, [sp, #28]
 3de:	f000 0103 	and.w	r1, r0, #3
 3e2:	912a      	str	r1, [sp, #168]	; 0xa8
 3e4:	f240 0100 	movw	r1, #0
 3e8:	f2c0 0100 	movt	r1, #0
 3ec:	9128      	str	r1, [sp, #160]	; 0xa0
 3ee:	a92a      	add	r1, sp, #168	; 0xa8
 3f0:	9129      	str	r1, [sp, #164]	; 0xa4
 3f2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 3f4:	912b      	str	r1, [sp, #172]	; 0xac
 3f6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 3f8:	912c      	str	r1, [sp, #176]	; 0xb0
 3fa:	992b      	ldr	r1, [sp, #172]	; 0xac
 3fc:	6809      	ldr	r1, [r1, #0]
 3fe:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 400:	6812      	ldr	r2, [r2, #0]
 402:	4291      	cmp	r1, r2
 404:	d016      	beq.n	434 <memchr::fallback::memrchr2+0x434>
 406:	e7ff      	b.n	408 <memchr::fallback::memrchr2+0x408>
 408:	982b      	ldr	r0, [sp, #172]	; 0xac
 40a:	9039      	str	r0, [sp, #228]	; 0xe4
 40c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 40e:	903a      	str	r0, [sp, #232]	; 0xe8
 410:	a839      	add	r0, sp, #228	; 0xe4
 412:	9037      	str	r0, [sp, #220]	; 0xdc
 414:	a83a      	add	r0, sp, #232	; 0xe8
 416:	9038      	str	r0, [sp, #224]	; 0xe0
 418:	9837      	ldr	r0, [sp, #220]	; 0xdc
 41a:	903b      	str	r0, [sp, #236]	; 0xec
 41c:	9838      	ldr	r0, [sp, #224]	; 0xe0
 41e:	903c      	str	r0, [sp, #240]	; 0xf0
 420:	983b      	ldr	r0, [sp, #236]	; 0xec
 422:	f240 0100 	movw	r1, #0
 426:	f2c0 0100 	movt	r1, #0
 42a:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 42e:	9006      	str	r0, [sp, #24]
 430:	9105      	str	r1, [sp, #20]
 432:	e000      	b.n	436 <memchr::fallback::memrchr2+0x436>
 434:	e028      	b.n	488 <memchr::fallback::memrchr2+0x488>
 436:	983c      	ldr	r0, [sp, #240]	; 0xf0
 438:	f240 0100 	movw	r1, #0
 43c:	f2c0 0100 	movt	r1, #0
 440:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 444:	9004      	str	r0, [sp, #16]
 446:	9103      	str	r1, [sp, #12]
 448:	e7ff      	b.n	44a <memchr::fallback::memrchr2+0x44a>
 44a:	9806      	ldr	r0, [sp, #24]
 44c:	9033      	str	r0, [sp, #204]	; 0xcc
 44e:	9905      	ldr	r1, [sp, #20]
 450:	9134      	str	r1, [sp, #208]	; 0xd0
 452:	9a04      	ldr	r2, [sp, #16]
 454:	9235      	str	r2, [sp, #212]	; 0xd4
 456:	9b03      	ldr	r3, [sp, #12]
 458:	9336      	str	r3, [sp, #216]	; 0xd8
 45a:	46ec      	mov	ip, sp
 45c:	f04f 0e02 	mov.w	lr, #2
 460:	f8cc e000 	str.w	lr, [ip]
 464:	f240 0100 	movw	r1, #0
 468:	f2c0 0100 	movt	r1, #0
 46c:	a82d      	add	r0, sp, #180	; 0xb4
 46e:	2203      	movs	r2, #3
 470:	ab33      	add	r3, sp, #204	; 0xcc
 472:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 476:	e7ff      	b.n	2 <memchr::fallback::memrchr2+0x2>
 478:	f240 0100 	movw	r1, #0
 47c:	f2c0 0100 	movt	r1, #0
 480:	a82d      	add	r0, sp, #180	; 0xb4
 482:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 486:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:231
            let chunk = *(ptr_sub(ptr, USIZE_BYTES) as *const usize);
 488:	9825      	ldr	r0, [sp, #148]	; 0x94
 48a:	2104      	movs	r1, #4
 48c:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 490:	9002      	str	r0, [sp, #8]
 492:	e7ff      	b.n	494 <memchr::fallback::memrchr2+0x494>
 494:	9802      	ldr	r0, [sp, #8]
 496:	6801      	ldr	r1, [r0, #0]
 498:	913d      	str	r1, [sp, #244]	; 0xf4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:232
            let eq1 = contains_zero_byte(chunk ^ vn1);
 49a:	993d      	ldr	r1, [sp, #244]	; 0xf4
 49c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 49e:	4051      	eors	r1, r2
 4a0:	915a      	str	r1, [sp, #360]	; 0x168
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 4a2:	985a      	ldr	r0, [sp, #360]	; 0x168
 4a4:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 4a8:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 4ac:	995a      	ldr	r1, [sp, #360]	; 0x168
 4ae:	4388      	bics	r0, r1
 4b0:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 4b4:	2800      	cmp	r0, #0
 4b6:	bf18      	it	ne
 4b8:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:232
            let eq1 = contains_zero_byte(chunk ^ vn1);
 4ba:	f88d 00fb 	strb.w	r0, [sp, #251]	; 0xfb
 4be:	e7ff      	b.n	4c0 <memchr::fallback::memrchr2+0x4c0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:233
            let eq2 = contains_zero_byte(chunk ^ vn2);
 4c0:	983d      	ldr	r0, [sp, #244]	; 0xf4
 4c2:	991e      	ldr	r1, [sp, #120]	; 0x78
 4c4:	4048      	eors	r0, r1
 4c6:	905b      	str	r0, [sp, #364]	; 0x16c
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 4c8:	985b      	ldr	r0, [sp, #364]	; 0x16c
 4ca:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 4ce:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 4d2:	995b      	ldr	r1, [sp, #364]	; 0x16c
 4d4:	4388      	bics	r0, r1
 4d6:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 4da:	2800      	cmp	r0, #0
 4dc:	bf18      	it	ne
 4de:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr217hc6c5bb49ccabb9b8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:233
            let eq2 = contains_zero_byte(chunk ^ vn2);
 4e0:	f88d 00fc 	strb.w	r0, [sp, #252]	; 0xfc
 4e4:	e7ff      	b.n	4e6 <memchr::fallback::memrchr2+0x4e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:234
            if eq1 || eq2 {
 4e6:	f89d 00fb 	ldrb.w	r0, [sp, #251]	; 0xfb
 4ea:	07c0      	lsls	r0, r0, #31
 4ec:	2800      	cmp	r0, #0
 4ee:	d004      	beq.n	4fa <memchr::fallback::memrchr2+0x4fa>
 4f0:	e7ff      	b.n	4f2 <memchr::fallback::memrchr2+0x4f2>
 4f2:	2001      	movs	r0, #1
 4f4:	f88d 00fd 	strb.w	r0, [sp, #253]	; 0xfd
 4f8:	e004      	b.n	504 <memchr::fallback::memrchr2+0x504>
 4fa:	f89d 00fc 	ldrb.w	r0, [sp, #252]	; 0xfc
 4fe:	f88d 00fd 	strb.w	r0, [sp, #253]	; 0xfd
 502:	e7ff      	b.n	504 <memchr::fallback::memrchr2+0x504>
 504:	f89d 00fd 	ldrb.w	r0, [sp, #253]	; 0xfd
 508:	07c0      	lsls	r0, r0, #31
 50a:	2800      	cmp	r0, #0
 50c:	d001      	beq.n	512 <memchr::fallback::memrchr2+0x512>
 50e:	e7ff      	b.n	510 <memchr::fallback::memrchr2+0x510>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:235
                break;
 510:	e70b      	b.n	32a <memchr::fallback::memrchr2+0x32a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:237
            ptr = ptr_sub(ptr, USIZE_BYTES);
 512:	9825      	ldr	r0, [sp, #148]	; 0x94
 514:	2104      	movs	r1, #4
 516:	f7ff fffe 	bl	0 <memchr::fallback::memrchr2>
 51a:	9001      	str	r0, [sp, #4]
 51c:	e7ff      	b.n	51e <memchr::fallback::memrchr2+0x51e>
 51e:	9801      	ldr	r0, [sp, #4]
 520:	9025      	str	r0, [sp, #148]	; 0x94
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:228
        while ptr >= ptr_add(start_ptr, USIZE_BYTES) {
 522:	e6f8      	b.n	316 <memchr::fallback::memrchr2+0x316>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:241
}
 524:	e635      	b.n	192 <memchr::fallback::memrchr2+0x192>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:209
    let align = USIZE_BYTES - 1;
 526:	f240 0000 	movw	r0, #0
 52a:	f2c0 0000 	movt	r0, #0
 52e:	f7ff fffe 	bl	0 <core::panicking::panic>
 532:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h08d540f371c3fc98E:

00000000 <memchr::fallback::memrchr2::{{closure}}>:
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h08d540f371c3fc98E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	f88d 100e 	strb.w	r1, [sp, #14]
   c:	f89d 000e 	ldrb.w	r0, [sp, #14]
  10:	9902      	ldr	r1, [sp, #8]
  12:	6809      	ldr	r1, [r1, #0]
  14:	7809      	ldrb	r1, [r1, #0]
  16:	4288      	cmp	r0, r1
  18:	9201      	str	r2, [sp, #4]
  1a:	9300      	str	r3, [sp, #0]
  1c:	d104      	bne.n	28 <memchr::fallback::memrchr2::{{closure}}+0x28>
  1e:	e7ff      	b.n	20 <memchr::fallback::memrchr2::{{closure}}+0x20>
  20:	2001      	movs	r0, #1
  22:	f88d 000f 	strb.w	r0, [sp, #15]
  26:	e00b      	b.n	40 <memchr::fallback::memrchr2::{{closure}}+0x40>
  28:	f89d 000e 	ldrb.w	r0, [sp, #14]
  2c:	9902      	ldr	r1, [sp, #8]
  2e:	6849      	ldr	r1, [r1, #4]
  30:	7809      	ldrb	r1, [r1, #0]
  32:	1a40      	subs	r0, r0, r1
  34:	fab0 f080 	clz	r0, r0
  38:	0940      	lsrs	r0, r0, #5
  3a:	f88d 000f 	strb.w	r0, [sp, #15]
  3e:	e7ff      	b.n	40 <memchr::fallback::memrchr2::{{closure}}+0x40>
  40:	f89d 000f 	ldrb.w	r0, [sp, #15]
  44:	b004      	add	sp, #16
  46:	4770      	bx	lr

Disassembly of section .text._ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE:

00000000 <memchr::fallback::memrchr3>:
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:244
pub fn memrchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b0e8      	sub	sp, #416	; 0x1a0
   4:	f8dd c1b0 	ldr.w	ip, [sp, #432]	; 0x1b0
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	f88d 0069 	strb.w	r0, [sp, #105]	; 0x69
  14:	f88d 106a 	strb.w	r1, [sp, #106]	; 0x6a
  18:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
  1c:	931b      	str	r3, [sp, #108]	; 0x6c
  1e:	f8cd c070 	str.w	ip, [sp, #112]	; 0x70
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:245
    let vn1 = repeat_byte(n1);
  22:	f89d 0069 	ldrb.w	r0, [sp, #105]	; 0x69
  26:	f88d 013d 	strb.w	r0, [sp, #317]	; 0x13d
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  2a:	f89d 013d 	ldrb.w	r0, [sp, #317]	; 0x13d
  2e:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  32:	fba0 0101 	umull	r0, r1, r0, r1
  36:	2900      	cmp	r1, #0
  38:	f8cd e064 	str.w	lr, [sp, #100]	; 0x64
  3c:	9418      	str	r4, [sp, #96]	; 0x60
  3e:	9517      	str	r5, [sp, #92]	; 0x5c
  40:	9616      	str	r6, [sp, #88]	; 0x58
  42:	9015      	str	r0, [sp, #84]	; 0x54
  44:	d007      	beq.n	56 <memchr::fallback::memrchr3+0x56>
  46:	e7ff      	b.n	48 <memchr::fallback::memrchr3+0x48>
  48:	f240 0000 	movw	r0, #0
  4c:	f2c0 0000 	movt	r0, #0
  50:	f7ff fffe 	bl	0 <core::panicking::panic>
  54:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:245
    let vn1 = repeat_byte(n1);
  56:	9815      	ldr	r0, [sp, #84]	; 0x54
  58:	901f      	str	r0, [sp, #124]	; 0x7c
  5a:	e7ff      	b.n	5c <memchr::fallback::memrchr3+0x5c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:246
    let vn2 = repeat_byte(n2);
  5c:	f89d 006a 	ldrb.w	r0, [sp, #106]	; 0x6a
  60:	f88d 013e 	strb.w	r0, [sp, #318]	; 0x13e
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  64:	f89d 013e 	ldrb.w	r0, [sp, #318]	; 0x13e
  68:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  6c:	fba0 0101 	umull	r0, r1, r0, r1
  70:	2900      	cmp	r1, #0
  72:	9014      	str	r0, [sp, #80]	; 0x50
  74:	d007      	beq.n	86 <memchr::fallback::memrchr3+0x86>
  76:	e7ff      	b.n	78 <memchr::fallback::memrchr3+0x78>
  78:	f240 0000 	movw	r0, #0
  7c:	f2c0 0000 	movt	r0, #0
  80:	f7ff fffe 	bl	0 <core::panicking::panic>
  84:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:246
    let vn2 = repeat_byte(n2);
  86:	9814      	ldr	r0, [sp, #80]	; 0x50
  88:	9020      	str	r0, [sp, #128]	; 0x80
  8a:	e7ff      	b.n	8c <memchr::fallback::memrchr3+0x8c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:247
    let vn3 = repeat_byte(n3);
  8c:	f89d 006b 	ldrb.w	r0, [sp, #107]	; 0x6b
  90:	f88d 013f 	strb.w	r0, [sp, #319]	; 0x13f
_ZN6memchr8fallback11repeat_byte17h2310b3326cf8ce5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
  94:	f89d 013f 	ldrb.w	r0, [sp, #319]	; 0x13f
  98:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  9c:	fba0 0101 	umull	r0, r1, r0, r1
  a0:	2900      	cmp	r1, #0
  a2:	9013      	str	r0, [sp, #76]	; 0x4c
  a4:	d007      	beq.n	b6 <memchr::fallback::memrchr3+0xb6>
  a6:	e7ff      	b.n	a8 <memchr::fallback::memrchr3+0xa8>
  a8:	f240 0000 	movw	r0, #0
  ac:	f2c0 0000 	movt	r0, #0
  b0:	f7ff fffe 	bl	0 <core::panicking::panic>
  b4:	defe      	udf	#254	; 0xfe
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:247
    let vn3 = repeat_byte(n3);
  b6:	9813      	ldr	r0, [sp, #76]	; 0x4c
  b8:	9021      	str	r0, [sp, #132]	; 0x84
  ba:	e7ff      	b.n	bc <memchr::fallback::memrchr3+0xbc>
  bc:	f10d 0069 	add.w	r0, sp, #105	; 0x69
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  c0:	9022      	str	r0, [sp, #136]	; 0x88
  c2:	f10d 006a 	add.w	r0, sp, #106	; 0x6a
  c6:	9023      	str	r0, [sp, #140]	; 0x8c
  c8:	f10d 006b 	add.w	r0, sp, #107	; 0x6b
  cc:	9024      	str	r0, [sp, #144]	; 0x90
  ce:	2004      	movs	r0, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:249
    let align = USIZE_BYTES - 1;
  d0:	1e41      	subs	r1, r0, #1
  d2:	2801      	cmp	r0, #1
  d4:	9112      	str	r1, [sp, #72]	; 0x48
  d6:	f0c0 8295 	bcc.w	604 <memchr::fallback::memrchr3+0x604>
  da:	e7ff      	b.n	dc <memchr::fallback::memrchr3+0xdc>
  dc:	9812      	ldr	r0, [sp, #72]	; 0x48
  de:	9025      	str	r0, [sp, #148]	; 0x94
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:250
    let start_ptr = haystack.as_ptr();
  e0:	981b      	ldr	r0, [sp, #108]	; 0x6c
  e2:	991c      	ldr	r1, [sp, #112]	; 0x70
  e4:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  e8:	9026      	str	r0, [sp, #152]	; 0x98
  ea:	e7ff      	b.n	ec <memchr::fallback::memrchr3+0xec>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:251
    let end_ptr = haystack[haystack.len()..].as_ptr();
  ec:	981b      	ldr	r0, [sp, #108]	; 0x6c
  ee:	991c      	ldr	r1, [sp, #112]	; 0x70
  f0:	9011      	str	r0, [sp, #68]	; 0x44
  f2:	9110      	str	r1, [sp, #64]	; 0x40
  f4:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  f8:	900f      	str	r0, [sp, #60]	; 0x3c
  fa:	e7ff      	b.n	fc <memchr::fallback::memrchr3+0xfc>
  fc:	980f      	ldr	r0, [sp, #60]	; 0x3c
  fe:	9028      	str	r0, [sp, #160]	; 0xa0
 100:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 102:	9811      	ldr	r0, [sp, #68]	; 0x44
 104:	9910      	ldr	r1, [sp, #64]	; 0x40
 106:	f7ff fffe 	bl	0 <core::slice::<impl core::ops::index::Index<I> for [T]>::index>
 10a:	900e      	str	r0, [sp, #56]	; 0x38
 10c:	910d      	str	r1, [sp, #52]	; 0x34
 10e:	e7ff      	b.n	110 <memchr::fallback::memrchr3+0x110>
 110:	980e      	ldr	r0, [sp, #56]	; 0x38
 112:	990d      	ldr	r1, [sp, #52]	; 0x34
 114:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
 118:	9027      	str	r0, [sp, #156]	; 0x9c
 11a:	e7ff      	b.n	11c <memchr::fallback::memrchr3+0x11c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:252
    let mut ptr = end_ptr;
 11c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 11e:	9029      	str	r0, [sp, #164]	; 0xa4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:255
        if haystack.len() < USIZE_BYTES {
 120:	981b      	ldr	r0, [sp, #108]	; 0x6c
 122:	991c      	ldr	r1, [sp, #112]	; 0x70
 124:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
 128:	900c      	str	r0, [sp, #48]	; 0x30
 12a:	e7ff      	b.n	12c <memchr::fallback::memrchr3+0x12c>
 12c:	980c      	ldr	r0, [sp, #48]	; 0x30
 12e:	2803      	cmp	r0, #3
 130:	d857      	bhi.n	1e2 <memchr::fallback::memrchr3+0x1e2>
 132:	e7ff      	b.n	134 <memchr::fallback::memrchr3+0x134>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:256
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 134:	9826      	ldr	r0, [sp, #152]	; 0x98
 136:	9927      	ldr	r1, [sp, #156]	; 0x9c
 138:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 13a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 13c:	f8dd c08c 	ldr.w	ip, [sp, #140]	; 0x8c
 140:	f8dd e090 	ldr.w	lr, [sp, #144]	; 0x90
 144:	f8cd e0b0 	str.w	lr, [sp, #176]	; 0xb0
 148:	f8cd c0ac 	str.w	ip, [sp, #172]	; 0xac
 14c:	932a      	str	r3, [sp, #168]	; 0xa8
 14e:	9050      	str	r0, [sp, #320]	; 0x140
 150:	9151      	str	r1, [sp, #324]	; 0x144
 152:	9252      	str	r2, [sp, #328]	; 0x148
_ZN6memchr8fallback14reverse_search17h2c0a2d3e6170d735E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:311
    debug_assert!(start_ptr <= ptr);
 154:	9850      	ldr	r0, [sp, #320]	; 0x140
 156:	9952      	ldr	r1, [sp, #328]	; 0x148
 158:	4288      	cmp	r0, r1
 15a:	d907      	bls.n	16c <memchr::fallback::memrchr3+0x16c>
 15c:	e7ff      	b.n	15e <memchr::fallback::memrchr3+0x15e>
 15e:	f240 0000 	movw	r0, #0
 162:	f2c0 0000 	movt	r0, #0
 166:	f7ff fffe 	bl	0 <core::panicking::panic>
 16a:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:312
    debug_assert!(ptr <= end_ptr);
 16c:	9852      	ldr	r0, [sp, #328]	; 0x148
 16e:	9951      	ldr	r1, [sp, #324]	; 0x144
 170:	4288      	cmp	r0, r1
 172:	d907      	bls.n	184 <memchr::fallback::memrchr3+0x184>
 174:	e7ff      	b.n	176 <memchr::fallback::memrchr3+0x176>
 176:	f240 0000 	movw	r0, #0
 17a:	f2c0 0000 	movt	r0, #0
 17e:	f7ff fffe 	bl	0 <core::panicking::panic>
 182:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 184:	e7ff      	b.n	186 <memchr::fallback::memrchr3+0x186>
 186:	9852      	ldr	r0, [sp, #328]	; 0x148
 188:	9950      	ldr	r1, [sp, #320]	; 0x140
 18a:	4288      	cmp	r0, r1
 18c:	d803      	bhi.n	196 <memchr::fallback::memrchr3+0x196>
 18e:	e7ff      	b.n	190 <memchr::fallback::memrchr3+0x190>
 190:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:320
    None
 192:	9053      	str	r0, [sp, #332]	; 0x14c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 194:	e01a      	b.n	1cc <memchr::fallback::memrchr3+0x1cc>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:315
        ptr = ptr.offset(-1);
 196:	9852      	ldr	r0, [sp, #328]	; 0x148
 198:	f04f 31ff 	mov.w	r1, #4294967295
 19c:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 1a0:	9052      	str	r0, [sp, #328]	; 0x148
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 1a2:	9852      	ldr	r0, [sp, #328]	; 0x148
 1a4:	7800      	ldrb	r0, [r0, #0]
 1a6:	f88d 0157 	strb.w	r0, [sp, #343]	; 0x157
 1aa:	f89d 1157 	ldrb.w	r1, [sp, #343]	; 0x157
 1ae:	a82a      	add	r0, sp, #168	; 0xa8
 1b0:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 1b4:	2800      	cmp	r0, #0
 1b6:	d008      	beq.n	1ca <memchr::fallback::memrchr3+0x1ca>
 1b8:	e7ff      	b.n	1ba <memchr::fallback::memrchr3+0x1ba>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:317
            return Some(sub(ptr, start_ptr));
 1ba:	9852      	ldr	r0, [sp, #328]	; 0x148
 1bc:	9950      	ldr	r1, [sp, #320]	; 0x140
 1be:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 1c2:	9054      	str	r0, [sp, #336]	; 0x150
 1c4:	2001      	movs	r0, #1
 1c6:	9053      	str	r0, [sp, #332]	; 0x14c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 1c8:	e000      	b.n	1cc <memchr::fallback::memrchr3+0x1cc>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 1ca:	e7dc      	b.n	186 <memchr::fallback::memrchr3+0x186>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 1cc:	9853      	ldr	r0, [sp, #332]	; 0x14c
 1ce:	9954      	ldr	r1, [sp, #336]	; 0x150
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:256
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 1d0:	911e      	str	r1, [sp, #120]	; 0x78
 1d2:	901d      	str	r0, [sp, #116]	; 0x74
 1d4:	e7ff      	b.n	1d6 <memchr::fallback::memrchr3+0x1d6>
 1d6:	e003      	b.n	1e0 <memchr::fallback::memrchr3+0x1e0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:283
}
 1d8:	981d      	ldr	r0, [sp, #116]	; 0x74
 1da:	991e      	ldr	r1, [sp, #120]	; 0x78
 1dc:	b068      	add	sp, #416	; 0x1a0
 1de:	bd70      	pop	{r4, r5, r6, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:256
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 1e0:	e7fa      	b.n	1d8 <memchr::fallback::memrchr3+0x1d8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:259
        let chunk = read_unaligned_usize(ptr_sub(ptr, USIZE_BYTES));
 1e2:	9829      	ldr	r0, [sp, #164]	; 0xa4
 1e4:	2104      	movs	r1, #4
 1e6:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 1ea:	900b      	str	r0, [sp, #44]	; 0x2c
 1ec:	e7ff      	b.n	1ee <memchr::fallback::memrchr3+0x1ee>
 1ee:	980b      	ldr	r0, [sp, #44]	; 0x2c
 1f0:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 1f4:	902d      	str	r0, [sp, #180]	; 0xb4
 1f6:	e7ff      	b.n	1f8 <memchr::fallback::memrchr3+0x1f8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:260
        let eq1 = contains_zero_byte(chunk ^ vn1);
 1f8:	982d      	ldr	r0, [sp, #180]	; 0xb4
 1fa:	991f      	ldr	r1, [sp, #124]	; 0x7c
 1fc:	4048      	eors	r0, r1
 1fe:	9056      	str	r0, [sp, #344]	; 0x158
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 200:	9856      	ldr	r0, [sp, #344]	; 0x158
 202:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 206:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 20a:	9956      	ldr	r1, [sp, #344]	; 0x158
 20c:	4388      	bics	r0, r1
 20e:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 212:	2800      	cmp	r0, #0
 214:	bf18      	it	ne
 216:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:260
        let eq1 = contains_zero_byte(chunk ^ vn1);
 218:	f88d 00bb 	strb.w	r0, [sp, #187]	; 0xbb
 21c:	e7ff      	b.n	21e <memchr::fallback::memrchr3+0x21e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:261
        let eq2 = contains_zero_byte(chunk ^ vn2);
 21e:	982d      	ldr	r0, [sp, #180]	; 0xb4
 220:	9920      	ldr	r1, [sp, #128]	; 0x80
 222:	4048      	eors	r0, r1
 224:	9057      	str	r0, [sp, #348]	; 0x15c
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 226:	9857      	ldr	r0, [sp, #348]	; 0x15c
 228:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 22c:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 230:	9957      	ldr	r1, [sp, #348]	; 0x15c
 232:	4388      	bics	r0, r1
 234:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 238:	2800      	cmp	r0, #0
 23a:	bf18      	it	ne
 23c:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:261
        let eq2 = contains_zero_byte(chunk ^ vn2);
 23e:	f88d 00bc 	strb.w	r0, [sp, #188]	; 0xbc
 242:	e7ff      	b.n	244 <memchr::fallback::memrchr3+0x244>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:262
        let eq3 = contains_zero_byte(chunk ^ vn3);
 244:	982d      	ldr	r0, [sp, #180]	; 0xb4
 246:	9921      	ldr	r1, [sp, #132]	; 0x84
 248:	4048      	eors	r0, r1
 24a:	9058      	str	r0, [sp, #352]	; 0x160
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 24c:	9858      	ldr	r0, [sp, #352]	; 0x160
 24e:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 252:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 256:	9958      	ldr	r1, [sp, #352]	; 0x160
 258:	4388      	bics	r0, r1
 25a:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 25e:	2800      	cmp	r0, #0
 260:	bf18      	it	ne
 262:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:262
        let eq3 = contains_zero_byte(chunk ^ vn3);
 264:	f88d 00bd 	strb.w	r0, [sp, #189]	; 0xbd
 268:	e7ff      	b.n	26a <memchr::fallback::memrchr3+0x26a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:263
        if eq1 || eq2 || eq3 {
 26a:	f89d 00bb 	ldrb.w	r0, [sp, #187]	; 0xbb
 26e:	07c0      	lsls	r0, r0, #31
 270:	2800      	cmp	r0, #0
 272:	d10f      	bne.n	294 <memchr::fallback::memrchr3+0x294>
 274:	e012      	b.n	29c <memchr::fallback::memrchr3+0x29c>
 276:	2001      	movs	r0, #1
 278:	f88d 00be 	strb.w	r0, [sp, #190]	; 0xbe
 27c:	e004      	b.n	288 <memchr::fallback::memrchr3+0x288>
 27e:	f89d 00bd 	ldrb.w	r0, [sp, #189]	; 0xbd
 282:	f88d 00be 	strb.w	r0, [sp, #190]	; 0xbe
 286:	e7ff      	b.n	288 <memchr::fallback::memrchr3+0x288>
 288:	f89d 00be 	ldrb.w	r0, [sp, #190]	; 0xbe
 28c:	07c0      	lsls	r0, r0, #31
 28e:	2800      	cmp	r0, #0
 290:	d10f      	bne.n	2b2 <memchr::fallback::memrchr3+0x2b2>
 292:	e060      	b.n	356 <memchr::fallback::memrchr3+0x356>
 294:	2001      	movs	r0, #1
 296:	f88d 00bf 	strb.w	r0, [sp, #191]	; 0xbf
 29a:	e004      	b.n	2a6 <memchr::fallback::memrchr3+0x2a6>
 29c:	f89d 00bc 	ldrb.w	r0, [sp, #188]	; 0xbc
 2a0:	f88d 00bf 	strb.w	r0, [sp, #191]	; 0xbf
 2a4:	e7ff      	b.n	2a6 <memchr::fallback::memrchr3+0x2a6>
 2a6:	f89d 00bf 	ldrb.w	r0, [sp, #191]	; 0xbf
 2aa:	07c0      	lsls	r0, r0, #31
 2ac:	2800      	cmp	r0, #0
 2ae:	d1e2      	bne.n	276 <memchr::fallback::memrchr3+0x276>
 2b0:	e7e5      	b.n	27e <memchr::fallback::memrchr3+0x27e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:264
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 2b2:	9826      	ldr	r0, [sp, #152]	; 0x98
 2b4:	9927      	ldr	r1, [sp, #156]	; 0x9c
 2b6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 2b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 2ba:	f8dd c08c 	ldr.w	ip, [sp, #140]	; 0x8c
 2be:	f8dd e090 	ldr.w	lr, [sp, #144]	; 0x90
 2c2:	f8cd e0c8 	str.w	lr, [sp, #200]	; 0xc8
 2c6:	f8cd c0c4 	str.w	ip, [sp, #196]	; 0xc4
 2ca:	9330      	str	r3, [sp, #192]	; 0xc0
 2cc:	9059      	str	r0, [sp, #356]	; 0x164
 2ce:	915a      	str	r1, [sp, #360]	; 0x168
 2d0:	925b      	str	r2, [sp, #364]	; 0x16c
_ZN6memchr8fallback14reverse_search17h2c0a2d3e6170d735E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:311
    debug_assert!(start_ptr <= ptr);
 2d2:	9859      	ldr	r0, [sp, #356]	; 0x164
 2d4:	995b      	ldr	r1, [sp, #364]	; 0x16c
 2d6:	4288      	cmp	r0, r1
 2d8:	d907      	bls.n	2ea <memchr::fallback::memrchr3+0x2ea>
 2da:	e7ff      	b.n	2dc <memchr::fallback::memrchr3+0x2dc>
 2dc:	f240 0000 	movw	r0, #0
 2e0:	f2c0 0000 	movt	r0, #0
 2e4:	f7ff fffe 	bl	0 <core::panicking::panic>
 2e8:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:312
    debug_assert!(ptr <= end_ptr);
 2ea:	985b      	ldr	r0, [sp, #364]	; 0x16c
 2ec:	995a      	ldr	r1, [sp, #360]	; 0x168
 2ee:	4288      	cmp	r0, r1
 2f0:	d907      	bls.n	302 <memchr::fallback::memrchr3+0x302>
 2f2:	e7ff      	b.n	2f4 <memchr::fallback::memrchr3+0x2f4>
 2f4:	f240 0000 	movw	r0, #0
 2f8:	f2c0 0000 	movt	r0, #0
 2fc:	f7ff fffe 	bl	0 <core::panicking::panic>
 300:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 302:	e7ff      	b.n	304 <memchr::fallback::memrchr3+0x304>
 304:	985b      	ldr	r0, [sp, #364]	; 0x16c
 306:	9959      	ldr	r1, [sp, #356]	; 0x164
 308:	4288      	cmp	r0, r1
 30a:	d803      	bhi.n	314 <memchr::fallback::memrchr3+0x314>
 30c:	e7ff      	b.n	30e <memchr::fallback::memrchr3+0x30e>
 30e:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:320
    None
 310:	905c      	str	r0, [sp, #368]	; 0x170
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 312:	e01a      	b.n	34a <memchr::fallback::memrchr3+0x34a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:315
        ptr = ptr.offset(-1);
 314:	985b      	ldr	r0, [sp, #364]	; 0x16c
 316:	f04f 31ff 	mov.w	r1, #4294967295
 31a:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 31e:	905b      	str	r0, [sp, #364]	; 0x16c
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 320:	985b      	ldr	r0, [sp, #364]	; 0x16c
 322:	7800      	ldrb	r0, [r0, #0]
 324:	f88d 017b 	strb.w	r0, [sp, #379]	; 0x17b
 328:	f89d 117b 	ldrb.w	r1, [sp, #379]	; 0x17b
 32c:	a830      	add	r0, sp, #192	; 0xc0
 32e:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 332:	2800      	cmp	r0, #0
 334:	d008      	beq.n	348 <memchr::fallback::memrchr3+0x348>
 336:	e7ff      	b.n	338 <memchr::fallback::memrchr3+0x338>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:317
            return Some(sub(ptr, start_ptr));
 338:	985b      	ldr	r0, [sp, #364]	; 0x16c
 33a:	9959      	ldr	r1, [sp, #356]	; 0x164
 33c:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 340:	905d      	str	r0, [sp, #372]	; 0x174
 342:	2001      	movs	r0, #1
 344:	905c      	str	r0, [sp, #368]	; 0x170
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 346:	e000      	b.n	34a <memchr::fallback::memrchr3+0x34a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 348:	e7dc      	b.n	304 <memchr::fallback::memrchr3+0x304>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 34a:	985c      	ldr	r0, [sp, #368]	; 0x170
 34c:	995d      	ldr	r1, [sp, #372]	; 0x174
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:264
            return reverse_search(start_ptr, end_ptr, ptr, confirm);
 34e:	911e      	str	r1, [sp, #120]	; 0x78
 350:	901d      	str	r0, [sp, #116]	; 0x74
 352:	e7ff      	b.n	354 <memchr::fallback::memrchr3+0x354>
 354:	e744      	b.n	1e0 <memchr::fallback::memrchr3+0x1e0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:267
        ptr = (end_ptr as usize & !align) as *const u8;
 356:	9827      	ldr	r0, [sp, #156]	; 0x9c
 358:	9925      	ldr	r1, [sp, #148]	; 0x94
 35a:	4388      	bics	r0, r1
 35c:	9029      	str	r0, [sp, #164]	; 0xa4
 35e:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:268
        debug_assert!(start_ptr <= ptr && ptr <= end_ptr);
 360:	2800      	cmp	r0, #0
 362:	d120      	bne.n	3a6 <memchr::fallback::memrchr3+0x3a6>
 364:	e7ff      	b.n	366 <memchr::fallback::memrchr3+0x366>
 366:	9826      	ldr	r0, [sp, #152]	; 0x98
 368:	9929      	ldr	r1, [sp, #164]	; 0xa4
 36a:	4288      	cmp	r0, r1
 36c:	d904      	bls.n	378 <memchr::fallback::memrchr3+0x378>
 36e:	e7ff      	b.n	370 <memchr::fallback::memrchr3+0x370>
 370:	2000      	movs	r0, #0
 372:	f88d 00cf 	strb.w	r0, [sp, #207]	; 0xcf
 376:	e008      	b.n	38a <memchr::fallback::memrchr3+0x38a>
 378:	9829      	ldr	r0, [sp, #164]	; 0xa4
 37a:	9927      	ldr	r1, [sp, #156]	; 0x9c
 37c:	2200      	movs	r2, #0
 37e:	4288      	cmp	r0, r1
 380:	bf98      	it	ls
 382:	2201      	movls	r2, #1
 384:	f88d 20cf 	strb.w	r2, [sp, #207]	; 0xcf
 388:	e7ff      	b.n	38a <memchr::fallback::memrchr3+0x38a>
 38a:	f89d 00cf 	ldrb.w	r0, [sp, #207]	; 0xcf
 38e:	07c0      	lsls	r0, r0, #31
 390:	2800      	cmp	r0, #0
 392:	d107      	bne.n	3a4 <memchr::fallback::memrchr3+0x3a4>
 394:	e7ff      	b.n	396 <memchr::fallback::memrchr3+0x396>
 396:	f240 0000 	movw	r0, #0
 39a:	f2c0 0000 	movt	r0, #0
 39e:	f7ff fffe 	bl	0 <core::panicking::panic>
 3a2:	defe      	udf	#254	; 0xfe
 3a4:	e7ff      	b.n	3a6 <memchr::fallback::memrchr3+0x3a6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:269
        while ptr >= ptr_add(start_ptr, USIZE_BYTES) {
 3a6:	e7ff      	b.n	3a8 <memchr::fallback::memrchr3+0x3a8>
 3a8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 3aa:	9926      	ldr	r1, [sp, #152]	; 0x98
 3ac:	2204      	movs	r2, #4
 3ae:	900a      	str	r0, [sp, #40]	; 0x28
 3b0:	4608      	mov	r0, r1
 3b2:	4611      	mov	r1, r2
 3b4:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 3b8:	9009      	str	r0, [sp, #36]	; 0x24
 3ba:	e050      	b.n	45e <memchr::fallback::memrchr3+0x45e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:281
        reverse_search(start_ptr, end_ptr, ptr, confirm)
 3bc:	9826      	ldr	r0, [sp, #152]	; 0x98
 3be:	9927      	ldr	r1, [sp, #156]	; 0x9c
 3c0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 3c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 3c4:	f8dd c08c 	ldr.w	ip, [sp, #140]	; 0x8c
 3c8:	f8dd e090 	ldr.w	lr, [sp, #144]	; 0x90
 3cc:	f8cd e138 	str.w	lr, [sp, #312]	; 0x138
 3d0:	f8cd c134 	str.w	ip, [sp, #308]	; 0x134
 3d4:	934c      	str	r3, [sp, #304]	; 0x130
 3d6:	905f      	str	r0, [sp, #380]	; 0x17c
 3d8:	9160      	str	r1, [sp, #384]	; 0x180
 3da:	9261      	str	r2, [sp, #388]	; 0x184
_ZN6memchr8fallback14reverse_search17h2c0a2d3e6170d735E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:311
    debug_assert!(start_ptr <= ptr);
 3dc:	985f      	ldr	r0, [sp, #380]	; 0x17c
 3de:	9961      	ldr	r1, [sp, #388]	; 0x184
 3e0:	4288      	cmp	r0, r1
 3e2:	d907      	bls.n	3f4 <memchr::fallback::memrchr3+0x3f4>
 3e4:	e7ff      	b.n	3e6 <memchr::fallback::memrchr3+0x3e6>
 3e6:	f240 0000 	movw	r0, #0
 3ea:	f2c0 0000 	movt	r0, #0
 3ee:	f7ff fffe 	bl	0 <core::panicking::panic>
 3f2:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:312
    debug_assert!(ptr <= end_ptr);
 3f4:	9861      	ldr	r0, [sp, #388]	; 0x184
 3f6:	9960      	ldr	r1, [sp, #384]	; 0x180
 3f8:	4288      	cmp	r0, r1
 3fa:	d907      	bls.n	40c <memchr::fallback::memrchr3+0x40c>
 3fc:	e7ff      	b.n	3fe <memchr::fallback::memrchr3+0x3fe>
 3fe:	f240 0000 	movw	r0, #0
 402:	f2c0 0000 	movt	r0, #0
 406:	f7ff fffe 	bl	0 <core::panicking::panic>
 40a:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 40c:	e7ff      	b.n	40e <memchr::fallback::memrchr3+0x40e>
 40e:	9861      	ldr	r0, [sp, #388]	; 0x184
 410:	995f      	ldr	r1, [sp, #380]	; 0x17c
 412:	4288      	cmp	r0, r1
 414:	d803      	bhi.n	41e <memchr::fallback::memrchr3+0x41e>
 416:	e7ff      	b.n	418 <memchr::fallback::memrchr3+0x418>
 418:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:320
    None
 41a:	9062      	str	r0, [sp, #392]	; 0x188
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 41c:	e01a      	b.n	454 <memchr::fallback::memrchr3+0x454>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:315
        ptr = ptr.offset(-1);
 41e:	9861      	ldr	r0, [sp, #388]	; 0x184
 420:	f04f 31ff 	mov.w	r1, #4294967295
 424:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
 428:	9061      	str	r0, [sp, #388]	; 0x184
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 42a:	9861      	ldr	r0, [sp, #388]	; 0x184
 42c:	7800      	ldrb	r0, [r0, #0]
 42e:	f88d 0193 	strb.w	r0, [sp, #403]	; 0x193
 432:	f89d 1193 	ldrb.w	r1, [sp, #403]	; 0x193
 436:	a84c      	add	r0, sp, #304	; 0x130
 438:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 43c:	2800      	cmp	r0, #0
 43e:	d008      	beq.n	452 <memchr::fallback::memrchr3+0x452>
 440:	e7ff      	b.n	442 <memchr::fallback::memrchr3+0x442>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:317
            return Some(sub(ptr, start_ptr));
 442:	9861      	ldr	r0, [sp, #388]	; 0x184
 444:	995f      	ldr	r1, [sp, #380]	; 0x17c
 446:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 44a:	9063      	str	r0, [sp, #396]	; 0x18c
 44c:	2001      	movs	r0, #1
 44e:	9062      	str	r0, [sp, #392]	; 0x188
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 450:	e000      	b.n	454 <memchr::fallback::memrchr3+0x454>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 452:	e7dc      	b.n	40e <memchr::fallback::memrchr3+0x40e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:321
}
 454:	9862      	ldr	r0, [sp, #392]	; 0x188
 456:	9963      	ldr	r1, [sp, #396]	; 0x18c
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:281
        reverse_search(start_ptr, end_ptr, ptr, confirm)
 458:	911e      	str	r1, [sp, #120]	; 0x78
 45a:	901d      	str	r0, [sp, #116]	; 0x74
 45c:	e0d1      	b.n	602 <memchr::fallback::memrchr3+0x602>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:269
        while ptr >= ptr_add(start_ptr, USIZE_BYTES) {
 45e:	980a      	ldr	r0, [sp, #40]	; 0x28
 460:	9909      	ldr	r1, [sp, #36]	; 0x24
 462:	4288      	cmp	r0, r1
 464:	d3aa      	bcc.n	3bc <memchr::fallback::memrchr3+0x3bc>
 466:	e7ff      	b.n	468 <memchr::fallback::memrchr3+0x468>
 468:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:270
            debug_assert_eq!(0, (ptr as usize) % USIZE_BYTES);
 46a:	2800      	cmp	r0, #0
 46c:	d159      	bne.n	522 <memchr::fallback::memrchr3+0x522>
 46e:	e7ff      	b.n	470 <memchr::fallback::memrchr3+0x470>
 470:	9829      	ldr	r0, [sp, #164]	; 0xa4
 472:	9008      	str	r0, [sp, #32]
 474:	e7ff      	b.n	476 <memchr::fallback::memrchr3+0x476>
 476:	9808      	ldr	r0, [sp, #32]
 478:	f000 0103 	and.w	r1, r0, #3
 47c:	9136      	str	r1, [sp, #216]	; 0xd8
 47e:	f240 0100 	movw	r1, #0
 482:	f2c0 0100 	movt	r1, #0
 486:	9134      	str	r1, [sp, #208]	; 0xd0
 488:	a936      	add	r1, sp, #216	; 0xd8
 48a:	9135      	str	r1, [sp, #212]	; 0xd4
 48c:	9934      	ldr	r1, [sp, #208]	; 0xd0
 48e:	9137      	str	r1, [sp, #220]	; 0xdc
 490:	9935      	ldr	r1, [sp, #212]	; 0xd4
 492:	9138      	str	r1, [sp, #224]	; 0xe0
 494:	9937      	ldr	r1, [sp, #220]	; 0xdc
 496:	6809      	ldr	r1, [r1, #0]
 498:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 49a:	6812      	ldr	r2, [r2, #0]
 49c:	4291      	cmp	r1, r2
 49e:	d016      	beq.n	4ce <memchr::fallback::memrchr3+0x4ce>
 4a0:	e7ff      	b.n	4a2 <memchr::fallback::memrchr3+0x4a2>
 4a2:	9837      	ldr	r0, [sp, #220]	; 0xdc
 4a4:	9045      	str	r0, [sp, #276]	; 0x114
 4a6:	9838      	ldr	r0, [sp, #224]	; 0xe0
 4a8:	9046      	str	r0, [sp, #280]	; 0x118
 4aa:	a845      	add	r0, sp, #276	; 0x114
 4ac:	9043      	str	r0, [sp, #268]	; 0x10c
 4ae:	a846      	add	r0, sp, #280	; 0x118
 4b0:	9044      	str	r0, [sp, #272]	; 0x110
 4b2:	9843      	ldr	r0, [sp, #268]	; 0x10c
 4b4:	9047      	str	r0, [sp, #284]	; 0x11c
 4b6:	9844      	ldr	r0, [sp, #272]	; 0x110
 4b8:	9048      	str	r0, [sp, #288]	; 0x120
 4ba:	9847      	ldr	r0, [sp, #284]	; 0x11c
 4bc:	f240 0100 	movw	r1, #0
 4c0:	f2c0 0100 	movt	r1, #0
 4c4:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 4c8:	9007      	str	r0, [sp, #28]
 4ca:	9106      	str	r1, [sp, #24]
 4cc:	e000      	b.n	4d0 <memchr::fallback::memrchr3+0x4d0>
 4ce:	e028      	b.n	522 <memchr::fallback::memrchr3+0x522>
 4d0:	9848      	ldr	r0, [sp, #288]	; 0x120
 4d2:	f240 0100 	movw	r1, #0
 4d6:	f2c0 0100 	movt	r1, #0
 4da:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 4de:	9005      	str	r0, [sp, #20]
 4e0:	9104      	str	r1, [sp, #16]
 4e2:	e7ff      	b.n	4e4 <memchr::fallback::memrchr3+0x4e4>
 4e4:	9807      	ldr	r0, [sp, #28]
 4e6:	903f      	str	r0, [sp, #252]	; 0xfc
 4e8:	9906      	ldr	r1, [sp, #24]
 4ea:	9140      	str	r1, [sp, #256]	; 0x100
 4ec:	9a05      	ldr	r2, [sp, #20]
 4ee:	9241      	str	r2, [sp, #260]	; 0x104
 4f0:	9b04      	ldr	r3, [sp, #16]
 4f2:	9342      	str	r3, [sp, #264]	; 0x108
 4f4:	46ec      	mov	ip, sp
 4f6:	f04f 0e02 	mov.w	lr, #2
 4fa:	f8cc e000 	str.w	lr, [ip]
 4fe:	f240 0100 	movw	r1, #0
 502:	f2c0 0100 	movt	r1, #0
 506:	a839      	add	r0, sp, #228	; 0xe4
 508:	2203      	movs	r2, #3
 50a:	ab3f      	add	r3, sp, #252	; 0xfc
 50c:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 510:	e7ff      	b.n	2 <memchr::fallback::memrchr3+0x2>
 512:	f240 0100 	movw	r1, #0
 516:	f2c0 0100 	movt	r1, #0
 51a:	a839      	add	r0, sp, #228	; 0xe4
 51c:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 520:	defe      	udf	#254	; 0xfe
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:272
            let chunk = *(ptr_sub(ptr, USIZE_BYTES) as *const usize);
 522:	9829      	ldr	r0, [sp, #164]	; 0xa4
 524:	2104      	movs	r1, #4
 526:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 52a:	9003      	str	r0, [sp, #12]
 52c:	e7ff      	b.n	52e <memchr::fallback::memrchr3+0x52e>
 52e:	9803      	ldr	r0, [sp, #12]
 530:	6801      	ldr	r1, [r0, #0]
 532:	9149      	str	r1, [sp, #292]	; 0x124
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:273
            let eq1 = contains_zero_byte(chunk ^ vn1);
 534:	9949      	ldr	r1, [sp, #292]	; 0x124
 536:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 538:	4051      	eors	r1, r2
 53a:	9165      	str	r1, [sp, #404]	; 0x194
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 53c:	9865      	ldr	r0, [sp, #404]	; 0x194
 53e:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 542:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 546:	9965      	ldr	r1, [sp, #404]	; 0x194
 548:	4388      	bics	r0, r1
 54a:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 54e:	2800      	cmp	r0, #0
 550:	bf18      	it	ne
 552:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:273
            let eq1 = contains_zero_byte(chunk ^ vn1);
 554:	f88d 012b 	strb.w	r0, [sp, #299]	; 0x12b
 558:	e7ff      	b.n	55a <memchr::fallback::memrchr3+0x55a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:274
            let eq2 = contains_zero_byte(chunk ^ vn2);
 55a:	9849      	ldr	r0, [sp, #292]	; 0x124
 55c:	9920      	ldr	r1, [sp, #128]	; 0x80
 55e:	4048      	eors	r0, r1
 560:	9066      	str	r0, [sp, #408]	; 0x198
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 562:	9866      	ldr	r0, [sp, #408]	; 0x198
 564:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 568:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 56c:	9966      	ldr	r1, [sp, #408]	; 0x198
 56e:	4388      	bics	r0, r1
 570:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 574:	2800      	cmp	r0, #0
 576:	bf18      	it	ne
 578:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:274
            let eq2 = contains_zero_byte(chunk ^ vn2);
 57a:	f88d 012c 	strb.w	r0, [sp, #300]	; 0x12c
 57e:	e7ff      	b.n	580 <memchr::fallback::memrchr3+0x580>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:275
            let eq3 = contains_zero_byte(chunk ^ vn3);
 580:	9849      	ldr	r0, [sp, #292]	; 0x124
 582:	9921      	ldr	r1, [sp, #132]	; 0x84
 584:	4048      	eors	r0, r1
 586:	9067      	str	r0, [sp, #412]	; 0x19c
_ZN6memchr8fallback18contains_zero_byte17hd202c64039c2b62fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 588:	9867      	ldr	r0, [sp, #412]	; 0x19c
 58a:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
 58e:	f7ff fffe 	bl	0 <core::num::<impl usize>::wrapping_sub>
 592:	9967      	ldr	r1, [sp, #412]	; 0x19c
 594:	4388      	bics	r0, r1
 596:	f020 307f 	bic.w	r0, r0, #2139062143	; 0x7f7f7f7f
 59a:	2800      	cmp	r0, #0
 59c:	bf18      	it	ne
 59e:	2001      	movne	r0, #1
_ZN6memchr8fallback8memrchr317h6b9b6603fd2d48fbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:275
            let eq3 = contains_zero_byte(chunk ^ vn3);
 5a0:	f88d 012d 	strb.w	r0, [sp, #301]	; 0x12d
 5a4:	e7ff      	b.n	5a6 <memchr::fallback::memrchr3+0x5a6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:276
            if eq1 || eq2 || eq3 {
 5a6:	f89d 012b 	ldrb.w	r0, [sp, #299]	; 0x12b
 5aa:	07c0      	lsls	r0, r0, #31
 5ac:	2800      	cmp	r0, #0
 5ae:	d10f      	bne.n	5d0 <memchr::fallback::memrchr3+0x5d0>
 5b0:	e012      	b.n	5d8 <memchr::fallback::memrchr3+0x5d8>
 5b2:	2001      	movs	r0, #1
 5b4:	f88d 012e 	strb.w	r0, [sp, #302]	; 0x12e
 5b8:	e004      	b.n	5c4 <memchr::fallback::memrchr3+0x5c4>
 5ba:	f89d 012d 	ldrb.w	r0, [sp, #301]	; 0x12d
 5be:	f88d 012e 	strb.w	r0, [sp, #302]	; 0x12e
 5c2:	e7ff      	b.n	5c4 <memchr::fallback::memrchr3+0x5c4>
 5c4:	f89d 012e 	ldrb.w	r0, [sp, #302]	; 0x12e
 5c8:	07c0      	lsls	r0, r0, #31
 5ca:	2800      	cmp	r0, #0
 5cc:	d10f      	bne.n	5ee <memchr::fallback::memrchr3+0x5ee>
 5ce:	e00f      	b.n	5f0 <memchr::fallback::memrchr3+0x5f0>
 5d0:	2001      	movs	r0, #1
 5d2:	f88d 012f 	strb.w	r0, [sp, #303]	; 0x12f
 5d6:	e004      	b.n	5e2 <memchr::fallback::memrchr3+0x5e2>
 5d8:	f89d 012c 	ldrb.w	r0, [sp, #300]	; 0x12c
 5dc:	f88d 012f 	strb.w	r0, [sp, #303]	; 0x12f
 5e0:	e7ff      	b.n	5e2 <memchr::fallback::memrchr3+0x5e2>
 5e2:	f89d 012f 	ldrb.w	r0, [sp, #303]	; 0x12f
 5e6:	07c0      	lsls	r0, r0, #31
 5e8:	2800      	cmp	r0, #0
 5ea:	d1e2      	bne.n	5b2 <memchr::fallback::memrchr3+0x5b2>
 5ec:	e7e5      	b.n	5ba <memchr::fallback::memrchr3+0x5ba>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:277
                break;
 5ee:	e6e5      	b.n	3bc <memchr::fallback::memrchr3+0x3bc>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:279
            ptr = ptr_sub(ptr, USIZE_BYTES);
 5f0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 5f2:	2104      	movs	r1, #4
 5f4:	f7ff fffe 	bl	0 <memchr::fallback::memrchr3>
 5f8:	9002      	str	r0, [sp, #8]
 5fa:	e7ff      	b.n	5fc <memchr::fallback::memrchr3+0x5fc>
 5fc:	9802      	ldr	r0, [sp, #8]
 5fe:	9029      	str	r0, [sp, #164]	; 0xa4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:269
        while ptr >= ptr_add(start_ptr, USIZE_BYTES) {
 600:	e6d2      	b.n	3a8 <memchr::fallback::memrchr3+0x3a8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:283
}
 602:	e5e9      	b.n	1d8 <memchr::fallback::memrchr3+0x1d8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:249
    let align = USIZE_BYTES - 1;
 604:	f240 0000 	movw	r0, #0
 608:	f2c0 0000 	movt	r0, #0
 60c:	f7ff fffe 	bl	0 <core::panicking::panic>
 610:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h03db7765599d3dceE:

00000000 <memchr::fallback::memrchr3::{{closure}}>:
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h03db7765599d3dceE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	f88d 100d 	strb.w	r1, [sp, #13]
   c:	f89d 000d 	ldrb.w	r0, [sp, #13]
  10:	9902      	ldr	r1, [sp, #8]
  12:	6809      	ldr	r1, [r1, #0]
  14:	7809      	ldrb	r1, [r1, #0]
  16:	4288      	cmp	r0, r1
  18:	9201      	str	r2, [sp, #4]
  1a:	9300      	str	r3, [sp, #0]
  1c:	d014      	beq.n	48 <memchr::fallback::memrchr3::{{closure}}+0x48>
  1e:	e017      	b.n	50 <memchr::fallback::memrchr3::{{closure}}+0x50>
  20:	2001      	movs	r0, #1
  22:	f88d 000e 	strb.w	r0, [sp, #14]
  26:	e00b      	b.n	40 <memchr::fallback::memrchr3::{{closure}}+0x40>
  28:	f89d 000d 	ldrb.w	r0, [sp, #13]
  2c:	9902      	ldr	r1, [sp, #8]
  2e:	6889      	ldr	r1, [r1, #8]
  30:	7809      	ldrb	r1, [r1, #0]
  32:	1a40      	subs	r0, r0, r1
  34:	fab0 f080 	clz	r0, r0
  38:	0940      	lsrs	r0, r0, #5
  3a:	f88d 000e 	strb.w	r0, [sp, #14]
  3e:	e7ff      	b.n	40 <memchr::fallback::memrchr3::{{closure}}+0x40>
  40:	f89d 000e 	ldrb.w	r0, [sp, #14]
  44:	b004      	add	sp, #16
  46:	4770      	bx	lr
  48:	2001      	movs	r0, #1
  4a:	f88d 000f 	strb.w	r0, [sp, #15]
  4e:	e00b      	b.n	68 <memchr::fallback::memrchr3::{{closure}}+0x68>
  50:	f89d 000d 	ldrb.w	r0, [sp, #13]
  54:	9902      	ldr	r1, [sp, #8]
  56:	6849      	ldr	r1, [r1, #4]
  58:	7809      	ldrb	r1, [r1, #0]
  5a:	1a40      	subs	r0, r0, r1
  5c:	fab0 f080 	clz	r0, r0
  60:	0940      	lsrs	r0, r0, #5
  62:	f88d 000f 	strb.w	r0, [sp, #15]
  66:	e7ff      	b.n	68 <memchr::fallback::memrchr3::{{closure}}+0x68>
  68:	f89d 000f 	ldrb.w	r0, [sp, #15]
  6c:	07c0      	lsls	r0, r0, #31
  6e:	2800      	cmp	r0, #0
  70:	d1d6      	bne.n	20 <memchr::fallback::memrchr3::{{closure}}+0x20>
  72:	e7d9      	b.n	28 <memchr::fallback::memrchr3::{{closure}}+0x28>

Disassembly of section .text._ZN6memchr8fallback7ptr_add17haeb9f9da0ab6beb0E:

00000000 <memchr::fallback::ptr_add>:
_ZN6memchr8fallback7ptr_add17haeb9f9da0ab6beb0E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:324

/// Increment the given pointer by the given amount.
unsafe fn ptr_add(ptr: *const u8, amt: usize) -> *const u8 {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:325
    debug_assert!(amt < ::core::isize::MAX as usize);
   e:	2800      	cmp	r0, #0
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	d10e      	bne.n	34 <memchr::fallback::ptr_add+0x34>
  16:	e7ff      	b.n	18 <memchr::fallback::ptr_add+0x18>
  18:	9805      	ldr	r0, [sp, #20]
  1a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  1e:	4288      	cmp	r0, r1
  20:	d307      	bcc.n	32 <memchr::fallback::ptr_add+0x32>
  22:	e7ff      	b.n	24 <memchr::fallback::ptr_add+0x24>
  24:	f240 0000 	movw	r0, #0
  28:	f2c0 0000 	movt	r0, #0
  2c:	f7ff fffe 	bl	0 <core::panicking::panic>
  30:	defe      	udf	#254	; 0xfe
  32:	e7ff      	b.n	34 <memchr::fallback::ptr_add+0x34>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:326
    ptr.offset(amt as isize)
  34:	9804      	ldr	r0, [sp, #16]
  36:	9905      	ldr	r1, [sp, #20]
  38:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
  3c:	9001      	str	r0, [sp, #4]
  3e:	e7ff      	b.n	40 <memchr::fallback::ptr_add+0x40>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:327
}
  40:	9801      	ldr	r0, [sp, #4]
  42:	b006      	add	sp, #24
  44:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6memchr8fallback7ptr_sub17h30ccf1ee126942f9E:

00000000 <memchr::fallback::ptr_sub>:
_ZN6memchr8fallback7ptr_sub17h30ccf1ee126942f9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:330

/// Decrement the given pointer by the given amount.
unsafe fn ptr_sub(ptr: *const u8, amt: usize) -> *const u8 {
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
   c:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:331
    debug_assert!(amt < ::core::isize::MAX as usize);
   e:	2800      	cmp	r0, #0
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	d10e      	bne.n	34 <memchr::fallback::ptr_sub+0x34>
  16:	e7ff      	b.n	18 <memchr::fallback::ptr_sub+0x18>
  18:	9807      	ldr	r0, [sp, #28]
  1a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  1e:	4288      	cmp	r0, r1
  20:	d307      	bcc.n	32 <memchr::fallback::ptr_sub+0x32>
  22:	e7ff      	b.n	24 <memchr::fallback::ptr_sub+0x24>
  24:	f240 0000 	movw	r0, #0
  28:	f2c0 0000 	movt	r0, #0
  2c:	f7ff fffe 	bl	0 <core::panicking::panic>
  30:	defe      	udf	#254	; 0xfe
  32:	e7ff      	b.n	34 <memchr::fallback::ptr_sub+0x34>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:332
    ptr.offset((amt as isize).wrapping_neg())
  34:	9806      	ldr	r0, [sp, #24]
  36:	9907      	ldr	r1, [sp, #28]
  38:	9003      	str	r0, [sp, #12]
  3a:	4608      	mov	r0, r1
  3c:	f7ff fffe 	bl	0 <core::num::<impl isize>::wrapping_neg>
  40:	9002      	str	r0, [sp, #8]
  42:	e7ff      	b.n	44 <memchr::fallback::ptr_sub+0x44>
  44:	9803      	ldr	r0, [sp, #12]
  46:	9902      	ldr	r1, [sp, #8]
  48:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::offset>
  4c:	9001      	str	r0, [sp, #4]
  4e:	e7ff      	b.n	50 <memchr::fallback::ptr_sub+0x50>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:333
}
  50:	9801      	ldr	r0, [sp, #4]
  52:	b008      	add	sp, #32
  54:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6memchr8fallback20read_unaligned_usize17hae6fe6a9efa4cadbE:

00000000 <memchr::fallback::read_unaligned_usize>:
_ZN6memchr8fallback20read_unaligned_usize17hae6fe6a9efa4cadbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:335

unsafe fn read_unaligned_usize(ptr: *const u8) -> usize {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9002      	str	r0, [sp, #8]
   8:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:336
    let mut n: usize = 0;
   a:	9003      	str	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:337
    ptr::copy_nonoverlapping(ptr, &mut n as *mut _ as *mut u8, USIZE_BYTES);
   c:	9802      	ldr	r0, [sp, #8]
   e:	aa03      	add	r2, sp, #12
  10:	2304      	movs	r3, #4
  12:	9101      	str	r1, [sp, #4]
  14:	4611      	mov	r1, r2
  16:	461a      	mov	r2, r3
  18:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  1c:	e7ff      	b.n	1e <memchr::fallback::read_unaligned_usize+0x1e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:338
    n
  1e:	9803      	ldr	r0, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:339
}
  20:	b004      	add	sp, #16
  22:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6memchr8fallback3sub17h0f15317396f7d7b6E:

00000000 <memchr::fallback::sub>:
_ZN6memchr8fallback3sub17h0f15317396f7d7b6E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:343

/// Subtract `b` from `a` and return the difference. `a` should be greater than
/// or equal to `b`.
fn sub(a: *const u8, b: *const u8) -> usize {
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
   a:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:344
    debug_assert!(a >= b);
   c:	2800      	cmp	r0, #0
   e:	9203      	str	r2, [sp, #12]
  10:	9302      	str	r3, [sp, #8]
  12:	d10d      	bne.n	30 <memchr::fallback::sub+0x30>
  14:	e7ff      	b.n	16 <memchr::fallback::sub+0x16>
  16:	9804      	ldr	r0, [sp, #16]
  18:	9905      	ldr	r1, [sp, #20]
  1a:	4288      	cmp	r0, r1
  1c:	d207      	bcs.n	2e <memchr::fallback::sub+0x2e>
  1e:	e7ff      	b.n	20 <memchr::fallback::sub+0x20>
  20:	f240 0000 	movw	r0, #0
  24:	f2c0 0000 	movt	r0, #0
  28:	f7ff fffe 	bl	0 <core::panicking::panic>
  2c:	defe      	udf	#254	; 0xfe
  2e:	e7ff      	b.n	30 <memchr::fallback::sub+0x30>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:345
    (a as usize) - (b as usize)
  30:	9804      	ldr	r0, [sp, #16]
  32:	9905      	ldr	r1, [sp, #20]
  34:	1a42      	subs	r2, r0, r1
  36:	4288      	cmp	r0, r1
  38:	9201      	str	r2, [sp, #4]
  3a:	d303      	bcc.n	44 <memchr::fallback::sub+0x44>
  3c:	e7ff      	b.n	3e <memchr::fallback::sub+0x3e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:346
}
  3e:	9801      	ldr	r0, [sp, #4]
  40:	b006      	add	sp, #24
  42:	4770      	bx	lr
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:345
    (a as usize) - (b as usize)
  44:	f240 0000 	movw	r0, #0
  48:	f2c0 0000 	movt	r0, #0
  4c:	f7ff fffe 	bl	0 <core::panicking::panic>
  50:	defe      	udf	#254	; 0xfe

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.6.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.6
00000101 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
00000168 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$9unwrap_or17h7d57ffc5ebfd5af5E	00000000 .text._ZN4core6option15Option$LT$T$GT$9unwrap_or17h7d57ffc5ebfd5af5E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$9unwrap_or17h7d57ffc5ebfd5af5E	00000096 core::option::Option<T>::unwrap_or



Disassembly of section .text._ZN4core6option15Option$LT$T$GT$9unwrap_or17h7d57ffc5ebfd5af5E:

00000000 <core::option::Option<T>::unwrap_or>:
_ZN4core6option15Option$LT$T$GT$9unwrap_or17h7d57ffc5ebfd5af5E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:367
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9004      	str	r0, [sp, #16]
   c:	9105      	str	r1, [sp, #20]
   e:	9206      	str	r2, [sp, #24]
  10:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:369
  12:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  16:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  1a:	2001      	movs	r0, #1
  1c:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  20:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  24:	9804      	ldr	r0, [sp, #16]
  26:	2800      	cmp	r0, #0
  28:	9303      	str	r3, [sp, #12]
  2a:	f8cd c008 	str.w	ip, [sp, #8]
  2e:	f8cd e004 	str.w	lr, [sp, #4]
  32:	9000      	str	r0, [sp, #0]
  34:	d00d      	beq.n	52 <core::option::Option<T>::unwrap_or+0x52>
  36:	e7ff      	b.n	38 <core::option::Option<T>::unwrap_or+0x38>
  38:	9800      	ldr	r0, [sp, #0]
  3a:	2801      	cmp	r0, #1
  3c:	d001      	beq.n	42 <core::option::Option<T>::unwrap_or+0x42>
  3e:	e7ff      	b.n	40 <core::option::Option<T>::unwrap_or+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:372
  40:	defe      	udf	#254	; 0xfe
  42:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:369
  44:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9008      	str	r0, [sp, #32]
  4c:	9808      	ldr	r0, [sp, #32]
  4e:	9007      	str	r0, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:368
  50:	e00d      	b.n	6e <core::option::Option<T>::unwrap_or+0x6e>
  52:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:370
  54:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  58:	9806      	ldr	r0, [sp, #24]
  5a:	9007      	str	r0, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:368
  5c:	e007      	b.n	6e <core::option::Option<T>::unwrap_or+0x6e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:372
  5e:	9804      	ldr	r0, [sp, #16]
  60:	2801      	cmp	r0, #1
  62:	d00d      	beq.n	80 <core::option::Option<T>::unwrap_or+0x80>
  64:	e016      	b.n	94 <core::option::Option<T>::unwrap_or+0x94>
  66:	2000      	movs	r0, #0
  68:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  6c:	e7f7      	b.n	5e <core::option::Option<T>::unwrap_or+0x5e>
  6e:	f89d 0026 	ldrb.w	r0, [sp, #38]	; 0x26
  72:	07c0      	lsls	r0, r0, #31
  74:	2800      	cmp	r0, #0
  76:	d1f6      	bne.n	66 <core::option::Option<T>::unwrap_or+0x66>
  78:	e7f1      	b.n	5e <core::option::Option<T>::unwrap_or+0x5e>
  7a:	9807      	ldr	r0, [sp, #28]
  7c:	b00a      	add	sp, #40	; 0x28
  7e:	bd80      	pop	{r7, pc}
  80:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  84:	07c0      	lsls	r0, r0, #31
  86:	2800      	cmp	r0, #0
  88:	d0f7      	beq.n	7a <core::option::Option<T>::unwrap_or+0x7a>
  8a:	e7ff      	b.n	8c <core::option::Option<T>::unwrap_or+0x8c>
  8c:	2000      	movs	r0, #0
  8e:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  92:	e7f2      	b.n	7a <core::option::Option<T>::unwrap_or+0x7a>
  94:	e7f1      	b.n	7a <core::option::Option<T>::unwrap_or+0x7a>

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.7.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.7
00000130 l       .debug_str	00000000 
00000215 l       .debug_str	00000000 
0000020f l       .debug_str	00000000 
0000020b l       .debug_str	00000000 
00000200 l       .debug_str	00000000 
000002e2 l       .debug_str	00000000 
000001b7 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000002d9 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
000002d4 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
000002a7 l       .debug_str	00000000 
00000232 l       .debug_str	00000000 
00000230 l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
0000021b l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.0	00000018 .Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.0
00000000 l     O .rodata..Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.3	00000018 .Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.3
00000000 l     O .rodata..Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.5	00000018 .Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.5
00000000 l     O .rodata.str.0	00000048 str.0
00000000 l     O .rodata.str.1	00000039 str.1
00000000 l    d  .text._ZN4core5slice14from_raw_parts17hbb8c9512bf767a95E	00000000 .text._ZN4core5slice14from_raw_parts17hbb8c9512bf767a95E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h12b66ceea47b68d2E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h12b66ceea47b68d2E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hdef04f6d8168bdb2E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hdef04f6d8168bdb2E
00000000 l    d  .text._ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h5413cb9eaab57682E	00000000 .text._ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h5413cb9eaab57682E
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata..Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.1	00000000 .rodata..Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.1
00000000 l    d  .rodata..Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.2	00000000 .rodata..Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.2
00000000 l    d  .rodata..Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.4	00000000 .rodata..Lanon.87416d54b9a3b1b8f00c65f4da6fc1db.4
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <core::ops::range::RangeFrom<usize> as core::slice::SliceIndex<[T]>>::index
00000000         *UND*	00000000 core::mem::size_of
00000000         *UND*	00000000 core::mem::align_of
00000000         *UND*	00000000 .hidden core::num::<impl usize>::saturating_mul
00000000 g     F .text._ZN4core5slice14from_raw_parts17hbb8c9512bf767a95E	000000aa core::slice::from_raw_parts
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h12b66ceea47b68d2E	0000001c core::slice::<impl [T]>::len
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hdef04f6d8168bdb2E	00000014 core::slice::<impl [T]>::as_ptr
00000000 g     F .text._ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h5413cb9eaab57682E	00000032 core::slice::<impl core::ops::index::Index<I> for [T]>::index
00000000         *UND*	00000000 core::panicking::panic



Disassembly of section .text._ZN4core5slice14from_raw_parts17hbb8c9512bf767a95E:

00000000 <core::slice::from_raw_parts>:
_ZN4core5slice14from_raw_parts17hbb8c9512bf767a95E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5182
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
   c:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
   e:	2800      	cmp	r0, #0
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	d11b      	bne.n	4e <core::slice::from_raw_parts+0x4e>
  16:	e7ff      	b.n	18 <core::slice::from_raw_parts+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5183
  18:	9806      	ldr	r0, [sp, #24]
  1a:	9003      	str	r0, [sp, #12]
  1c:	f7ff fffe 	bl	0 <core::mem::align_of>
  20:	9002      	str	r0, [sp, #8]
  22:	e7ff      	b.n	24 <core::slice::from_raw_parts+0x24>
  24:	9802      	ldr	r0, [sp, #8]
  26:	2800      	cmp	r0, #0
  28:	d038      	beq.n	9c <core::slice::from_raw_parts+0x9c>
  2a:	e7ff      	b.n	2c <core::slice::from_raw_parts+0x2c>
  2c:	9803      	ldr	r0, [sp, #12]
  2e:	9902      	ldr	r1, [sp, #8]
  30:	fbb0 f2f1 	udiv	r2, r0, r1
  34:	fb02 0211 	mls	r2, r2, r1, r0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  38:	2a00      	cmp	r2, #0
  3a:	d007      	beq.n	4c <core::slice::from_raw_parts+0x4c>
  3c:	e7ff      	b.n	3e <core::slice::from_raw_parts+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f7ff fffe 	bl	0 <core::panicking::panic>
  4a:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  4c:	e7ff      	b.n	4e <core::slice::from_raw_parts+0x4e>
  4e:	2001      	movs	r0, #1
  50:	2800      	cmp	r0, #0
  52:	d117      	bne.n	84 <core::slice::from_raw_parts+0x84>
  54:	e7ff      	b.n	56 <core::slice::from_raw_parts+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5184
  56:	f7ff fffe 	bl	0 <core::mem::size_of>
  5a:	9001      	str	r0, [sp, #4]
  5c:	e7ff      	b.n	5e <core::slice::from_raw_parts+0x5e>
  5e:	9907      	ldr	r1, [sp, #28]
  60:	9801      	ldr	r0, [sp, #4]
  62:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  66:	9000      	str	r0, [sp, #0]
  68:	e7ff      	b.n	6a <core::slice::from_raw_parts+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  6a:	9800      	ldr	r0, [sp, #0]
  6c:	f1b0 3fff 	cmp.w	r0, #4294967295
  70:	dc07      	bgt.n	82 <core::slice::from_raw_parts+0x82>
  72:	e7ff      	b.n	74 <core::slice::from_raw_parts+0x74>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  74:	f240 0000 	movw	r0, #0
  78:	f2c0 0000 	movt	r0, #0
  7c:	f7ff fffe 	bl	0 <core::panicking::panic>
  80:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  82:	e7ff      	b.n	84 <core::slice::from_raw_parts+0x84>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5186
  84:	9806      	ldr	r0, [sp, #24]
  86:	9907      	ldr	r1, [sp, #28]
  88:	900a      	str	r0, [sp, #40]	; 0x28
  8a:	910b      	str	r1, [sp, #44]	; 0x2c
  8c:	980a      	ldr	r0, [sp, #40]	; 0x28
  8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  90:	9008      	str	r0, [sp, #32]
  92:	9109      	str	r1, [sp, #36]	; 0x24
  94:	9808      	ldr	r0, [sp, #32]
  96:	9909      	ldr	r1, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5187
  98:	b00c      	add	sp, #48	; 0x30
  9a:	bd80      	pop	{r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5183
  9c:	f240 0000 	movw	r0, #0
  a0:	f2c0 0000 	movt	r0, #0
  a4:	f7ff fffe 	bl	0 <core::panicking::panic>
  a8:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h12b66ceea47b68d2E:

00000000 <core::slice::<impl [T]>::len>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h12b66ceea47b68d2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:79
   0:	b086      	sub	sp, #24
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:81
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9004      	str	r0, [sp, #16]
  10:	9105      	str	r1, [sp, #20]
  12:	9805      	ldr	r0, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:83
  14:	9201      	str	r2, [sp, #4]
  16:	9300      	str	r3, [sp, #0]
  18:	b006      	add	sp, #24
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hdef04f6d8168bdb2E:

00000000 <core::slice::<impl [T]>::as_ptr>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hdef04f6d8168bdb2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:385
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:386
   a:	9802      	ldr	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:387
   c:	9201      	str	r2, [sp, #4]
   e:	9300      	str	r3, [sp, #0]
  10:	b004      	add	sp, #16
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h5413cb9eaab57682E:

00000000 <core::slice::<impl core::ops::index::Index<I> for [T]>::index>:
_ZN4core5slice74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h5413cb9eaab57682E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2551
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2552
  10:	9807      	ldr	r0, [sp, #28]
  12:	9905      	ldr	r1, [sp, #20]
  14:	9a06      	ldr	r2, [sp, #24]
  16:	9304      	str	r3, [sp, #16]
  18:	f8cd c00c 	str.w	ip, [sp, #12]
  1c:	f8cd e008 	str.w	lr, [sp, #8]
  20:	f7ff fffe 	bl	0 <<core::ops::range::RangeFrom<usize> as core::slice::SliceIndex<[T]>>::index>
  24:	9001      	str	r0, [sp, #4]
  26:	9100      	str	r1, [sp, #0]
  28:	e7ff      	b.n	2a <core::slice::<impl core::ops::index::Index<I> for [T]>::index+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2553
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	9900      	ldr	r1, [sp, #0]
  2e:	b008      	add	sp, #32
  30:	bd80      	pop	{r7, pc}

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.8.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.8
000000fc l       .debug_str	00000000 
0000015c l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
00000132 l       .debug_str	00000000 
00000125 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3cmp3Ord3min17hd15da0712581b357E	00000000 .text._ZN4core3cmp3Ord3min17hd15da0712581b357E
00000000 l    d  .text._ZN4core3cmp3min17hec392ef6f3a78fccE	00000000 .text._ZN4core3cmp3min17hec392ef6f3a78fccE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3cmp3Ord3min17hd15da0712581b357E	00000080 core::cmp::Ord::min
00000000 g     F .text._ZN4core3cmp3min17hec392ef6f3a78fccE	00000022 core::cmp::min
00000000         *UND*	00000000 .hidden core::cmp::impls::<impl core::cmp::PartialOrd for usize>::le



Disassembly of section .text._ZN4core3cmp3Ord3min17hd15da0712581b357E:

00000000 <core::cmp::Ord::min>:
_ZN4core3cmp3Ord3min17hd15da0712581b357E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:566
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:568
   e:	f88d 001f 	strb.w	r0, [sp, #31]
  12:	f88d 001e 	strb.w	r0, [sp, #30]
  16:	2001      	movs	r0, #1
  18:	f88d 001f 	strb.w	r0, [sp, #31]
  1c:	f88d 001e 	strb.w	r0, [sp, #30]
  20:	a804      	add	r0, sp, #16
  22:	a905      	add	r1, sp, #20
  24:	9203      	str	r2, [sp, #12]
  26:	9302      	str	r3, [sp, #8]
  28:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialOrd for usize>::le>
  2c:	9001      	str	r0, [sp, #4]
  2e:	e7ff      	b.n	30 <core::cmp::Ord::min+0x30>
  30:	9801      	ldr	r0, [sp, #4]
  32:	07c1      	lsls	r1, r0, #31
  34:	2900      	cmp	r1, #0
  36:	d006      	beq.n	46 <core::cmp::Ord::min+0x46>
  38:	e7ff      	b.n	3a <core::cmp::Ord::min+0x3a>
  3a:	2000      	movs	r0, #0
  3c:	f88d 001f 	strb.w	r0, [sp, #31]
  40:	9804      	ldr	r0, [sp, #16]
  42:	9006      	str	r0, [sp, #24]
  44:	e005      	b.n	52 <core::cmp::Ord::min+0x52>
  46:	2000      	movs	r0, #0
  48:	f88d 001e 	strb.w	r0, [sp, #30]
  4c:	9805      	ldr	r0, [sp, #20]
  4e:	9006      	str	r0, [sp, #24]
  50:	e7ff      	b.n	52 <core::cmp::Ord::min+0x52>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:569
  52:	f89d 001e 	ldrb.w	r0, [sp, #30]
  56:	07c0      	lsls	r0, r0, #31
  58:	2800      	cmp	r0, #0
  5a:	d109      	bne.n	70 <core::cmp::Ord::min+0x70>
  5c:	e7ff      	b.n	5e <core::cmp::Ord::min+0x5e>
  5e:	f89d 001f 	ldrb.w	r0, [sp, #31]
  62:	07c0      	lsls	r0, r0, #31
  64:	2800      	cmp	r0, #0
  66:	d107      	bne.n	78 <core::cmp::Ord::min+0x78>
  68:	e7ff      	b.n	6a <core::cmp::Ord::min+0x6a>
  6a:	9806      	ldr	r0, [sp, #24]
  6c:	b008      	add	sp, #32
  6e:	bd80      	pop	{r7, pc}
  70:	2000      	movs	r0, #0
  72:	f88d 001e 	strb.w	r0, [sp, #30]
  76:	e7f2      	b.n	5e <core::cmp::Ord::min+0x5e>
  78:	2000      	movs	r0, #0
  7a:	f88d 001f 	strb.w	r0, [sp, #31]
  7e:	e7f4      	b.n	6a <core::cmp::Ord::min+0x6a>

Disassembly of section .text._ZN4core3cmp3min17hec392ef6f3a78fccE:

00000000 <core::cmp::min>:
_ZN4core3cmp3min17hec392ef6f3a78fccE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:861
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:862
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::cmp::min>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <core::cmp::min+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:863
  1c:	9801      	ldr	r0, [sp, #4]
  1e:	b006      	add	sp, #24
  20:	bd80      	pop	{r7, pc}

memchr-388fff94aade23cd.memchr.c0kozxyb-cgu.9.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.c0kozxyb-cgu.9
00000137 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
00000161 l       .debug_str	00000000 
0000014f l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
00000000 l    d  .text._ZN4core10intrinsics19copy_nonoverlapping17h85f5927901ef278dE	00000000 .text._ZN4core10intrinsics19copy_nonoverlapping17h85f5927901ef278dE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core10intrinsics19copy_nonoverlapping17h85f5927901ef278dE	0000002c core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 __aeabi_memcpy



Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h85f5927901ef278dE:

00000000 <core::intrinsics::copy_nonoverlapping>:
_ZN4core10intrinsics19copy_nonoverlapping17h85f5927901ef278dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1411
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  10:	9905      	ldr	r1, [sp, #20]
  12:	9806      	ldr	r0, [sp, #24]
  14:	9a07      	ldr	r2, [sp, #28]
  16:	9304      	str	r3, [sp, #16]
  18:	f8cd c00c 	str.w	ip, [sp, #12]
  1c:	f8cd e008 	str.w	lr, [sp, #8]
  20:	f7ff fffe 	bl	0 <__aeabi_memcpy>
  24:	9001      	str	r0, [sp, #4]
  26:	e7ff      	b.n	28 <core::intrinsics::copy_nonoverlapping+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1413
  28:	b008      	add	sp, #32
  2a:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.10toxg5k4b691363.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 10toxg5k4b691363
000006af l       .debug_str	00000000 
00000f75 l       .debug_str	00000000 
000014c8 l       .debug_str	00000000 
00000f71 l       .debug_str	00000000 
0000144a l       .debug_str	00000000 
00000f6d l       .debug_str	00000000 
000013cc l       .debug_str	00000000 
00000f53 l       .debug_str	00000000 
0000135b l       .debug_str	00000000 
00000f4d l       .debug_str	00000000 
000012dc l       .debug_str	00000000 
00000f35 l       .debug_str	00000000 
0000124e l       .debug_str	00000000 
00000f25 l       .debug_str	00000000 
000011c0 l       .debug_str	00000000 
00000f0b l       .debug_str	00000000 
00001132 l       .debug_str	00000000 
00000ef9 l       .debug_str	00000000 
000010a4 l       .debug_str	00000000 
00000ee0 l       .debug_str	00000000 
00001016 l       .debug_str	00000000 
00000ecf l       .debug_str	00000000 
00000fed l       .debug_str	00000000 
00000eb6 l       .debug_str	00000000 
00000fe6 l       .debug_str	00000000 
00000ea5 l       .debug_str	00000000 
00000fe1 l       .debug_str	00000000 
00000ea0 l       .debug_str	00000000 
00000fb6 l       .debug_str	00000000 
00000e86 l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000e6b l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a7 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b5 l       .debug_str	00000000 
000000be l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
00000152 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
0000016c l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
00000183 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
0000018e l       .debug_str	00000000 
00000195 l       .debug_str	00000000 
00000197 l       .debug_str	00000000 
0000019b l       .debug_str	00000000 
000001a2 l       .debug_str	00000000 
000001a6 l       .debug_str	00000000 
000001a8 l       .debug_str	00000000 
000001b9 l       .debug_str	00000000 
000001d2 l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001d9 l       .debug_str	00000000 
000001ea l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
00000207 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000239 l       .debug_str	00000000 
00000243 l       .debug_str	00000000 
0000028f l       .debug_str	00000000 
000002e3 l       .debug_str	00000000 
000002f7 l       .debug_str	00000000 
0000030b l       .debug_str	00000000 
00000324 l       .debug_str	00000000 
0000032f l       .debug_str	00000000 
00000357 l       .debug_str	00000000 
00000384 l       .debug_str	00000000 
000003ab l       .debug_str	00000000 
00000428 l       .debug_str	00000000 
00000497 l       .debug_str	00000000 
00000508 l       .debug_str	00000000 
00000511 l       .debug_str	00000000 
00000518 l       .debug_str	00000000 
0000051c l       .debug_str	00000000 
00000521 l       .debug_str	00000000 
00000525 l       .debug_str	00000000 
0000053c l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
00000583 l       .debug_str	00000000 
000005cd l       .debug_str	00000000 
000005d4 l       .debug_str	00000000 
000005e0 l       .debug_str	00000000 
000005e8 l       .debug_str	00000000 
000005ee l       .debug_str	00000000 
000005f6 l       .debug_str	00000000 
000005fc l       .debug_str	00000000 
0000061f l       .debug_str	00000000 
0000062d l       .debug_str	00000000 
0000063a l       .debug_str	00000000 
000006aa l       .debug_str	00000000 
00000e58 l       .debug_str	00000000 
000006b5 l       .debug_str	00000000 
000006b9 l       .debug_str	00000000 
000006c5 l       .debug_str	00000000 
00000753 l       .debug_str	00000000 
0000075b l       .debug_str	00000000 
00000765 l       .debug_str	00000000 
0000076b l       .debug_str	00000000 
00000770 l       .debug_str	00000000 
00000778 l       .debug_str	00000000 
00000781 l       .debug_str	00000000 
00000797 l       .debug_str	00000000 
000007b5 l       .debug_str	00000000 
000007be l       .debug_str	00000000 
000007c7 l       .debug_str	00000000 
000007dd l       .debug_str	00000000 
000007fb l       .debug_str	00000000 
00000800 l       .debug_str	00000000 
00000804 l       .debug_str	00000000 
0000080d l       .debug_str	00000000 
00000823 l       .debug_str	00000000 
00000841 l       .debug_str	00000000 
00000848 l       .debug_str	00000000 
00000850 l       .debug_str	00000000 
00000855 l       .debug_str	00000000 
0000085f l       .debug_str	00000000 
00000876 l       .debug_str	00000000 
00000895 l       .debug_str	00000000 
0000089f l       .debug_str	00000000 
000008a5 l       .debug_str	00000000 
000008b2 l       .debug_str	00000000 
000008b6 l       .debug_str	00000000 
000008be l       .debug_str	00000000 
0000090c l       .debug_str	00000000 
00000962 l       .debug_str	00000000 
0000096a l       .debug_str	00000000 
0000096f l       .debug_str	00000000 
00000975 l       .debug_str	00000000 
0000097e l       .debug_str	00000000 
000009a7 l       .debug_str	00000000 
000009f5 l       .debug_str	00000000 
00000a4b l       .debug_str	00000000 
00000a54 l       .debug_str	00000000 
00000a7d l       .debug_str	00000000 
00000acb l       .debug_str	00000000 
00000b21 l       .debug_str	00000000 
00000b2b l       .debug_str	00000000 
00000b54 l       .debug_str	00000000 
00000ba2 l       .debug_str	00000000 
00000bf8 l       .debug_str	00000000 
00000bfe l       .debug_str	00000000 
00000c27 l       .debug_str	00000000 
00000c75 l       .debug_str	00000000 
00000ccb l       .debug_str	00000000 
00000cd4 l       .debug_str	00000000 
00000cfd l       .debug_str	00000000 
00000d4b l       .debug_str	00000000 
00000da1 l       .debug_str	00000000 
00000dbc l       .debug_str	00000000 
00000dc2 l       .debug_str	00000000 
00000dcb l       .debug_str	00000000 
00000dd2 l       .debug_str	00000000 
00000ddf l       .debug_str	00000000 
00000e11 l       .debug_str	00000000 
00000e4b l       .debug_str	00000000 
00000e52 l       .debug_str	00000000 
00000fa0 l       .debug_str	00000000 
00000000 l    d  .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h320c9286b4d08ec3E	00000000 .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h320c9286b4d08ec3E
00000000 l    d  .text._ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd88949a78a1d181dE	00000000 .text._ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd88949a78a1d181dE
00000000 l    d  .text._ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17h68f641f4733d141cE	00000000 .text._ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17h68f641f4733d141cE
00000000 l    d  .text._ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17h404b028471df68b4E	00000000 .text._ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17h404b028471df68b4E
00000000 l    d  .text._ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17haed53e799530f88dE	00000000 .text._ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17haed53e799530f88dE
00000000 l    d  .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h753db713188bb37bE	00000000 .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h753db713188bb37bE
00000000 l    d  .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hf9e834f3448ef4d9E	00000000 .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hf9e834f3448ef4d9E
00000000 l    d  .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17h9b00ca955cafcbefE	00000000 .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17h9b00ca955cafcbefE
00000000 l    d  .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc48ad41f85d33324E	00000000 .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc48ad41f85d33324E
00000000 l    d  .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_5$u20$as$u20$core..default..Default$GT$7default17haa53ba96f06ace6aE	00000000 .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_5$u20$as$u20$core..default..Default$GT$7default17haa53ba96f06ace6aE
00000000 l    d  .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_6$u20$as$u20$core..default..Default$GT$7default17h8c563500825b6592E	00000000 .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_6$u20$as$u20$core..default..Default$GT$7default17h8c563500825b6592E
00000000 l    d  .text._ZN93_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h93bc229584cfee2aE	00000000 .text._ZN93_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h93bc229584cfee2aE
00000000 l    d  .text._ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h8711a0fa7730468fE	00000000 .text._ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h8711a0fa7730468fE
00000000 l    d  .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h51b9d79859d5b21bE	00000000 .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h51b9d79859d5b21bE
00000000 l    d  .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hc49974f650a26f1dE	00000000 .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hc49974f650a26f1dE
00000000 l    d  .text._ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h562303a67745e9a8E	00000000 .text._ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h562303a67745e9a8E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h320c9286b4d08ec3E	00000016 <mynewt::encoding::json::json_value__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h753db713188bb37bE	00000012 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hf9e834f3448ef4d9E	00000012 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17h9b00ca955cafcbefE	00000016 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc48ad41f85d33324E	00000016 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_4 as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_5$u20$as$u20$core..default..Default$GT$7default17haa53ba96f06ace6aE	00000016 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_5 as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_6$u20$as$u20$core..default..Default$GT$7default17h8c563500825b6592E	00000016 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_6 as core::default::Default>::default
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000 g     F .text._ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17h68f641f4733d141cE	00000012 <mynewt::encoding::json::json_value as core::default::Default>::default
00000000 g     F .text._ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h562303a67745e9a8E	00000012 <mynewt::encoding::json::json_attr_t as core::default::Default>::default
00000000 g     F .text._ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17haed53e799530f88dE	0000001a <mynewt::encoding::json::json_enum_t as core::default::Default>::default
00000000 g     F .text._ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h8711a0fa7730468fE	00000012 <mynewt::encoding::json::json_array_t as core::default::Default>::default
00000000 g     F .text._ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17h404b028471df68b4E	00000012 <mynewt::encoding::json::json_encoder as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd88949a78a1d181dE	00000012 <mynewt::encoding::json::json_value__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h51b9d79859d5b21bE	00000012 <mynewt::encoding::json::json_attr_t__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hc49974f650a26f1dE	00000012 <mynewt::encoding::json::json_attr_t__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN93_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h93bc229584cfee2aE	00000012 <mynewt::encoding::json::json_array_t__bindgen_ty_1 as core::default::Default>::default



Disassembly of section .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h320c9286b4d08ec3E:

00000000 <<mynewt::encoding::json::json_value__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default>:
_ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h320c9286b4d08ec3E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:186
pub struct json_value__bindgen_ty_1__bindgen_ty_1 {
    pub keys: *mut *mut ::cty::c_char,
    pub values: *mut *mut json_value,
}
impl Default for json_value__bindgen_ty_1__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:187
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_value__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:188
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd88949a78a1d181dE:

00000000 <<mynewt::encoding::json::json_value__bindgen_ty_1 as core::default::Default>::default>:
_ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd88949a78a1d181dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:191
}
impl Default for json_value__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:192
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_value__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:193
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17h68f641f4733d141cE:

00000000 <<mynewt::encoding::json::json_value as core::default::Default>::default>:
_ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17h68f641f4733d141cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:196
}
impl Default for json_value {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:197
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_value as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:198
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17h404b028471df68b4E:

00000000 <<mynewt::encoding::json::json_encoder as core::default::Default>::default>:
_ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17h404b028471df68b4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:215
    pub je_arg: *mut ::cty::c_void,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub je_encode_buf: [::cty::c_char; 64usize],
}
impl Default for json_encoder {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:216
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_encoder as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:217
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17haed53e799530f88dE:

00000000 <<mynewt::encoding::json::json_enum_t as core::default::Default>::default>:
_ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17haed53e799530f88dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:297
pub struct json_enum_t {
    pub name: *mut ::cty::c_char,
    pub value: ::cty::c_longlong,
}
impl Default for json_enum_t {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:298
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9003      	str	r0, [sp, #12]
   a:	9202      	str	r2, [sp, #8]
   c:	9101      	str	r1, [sp, #4]
   e:	e7ff      	b.n	10 <<mynewt::encoding::json::json_enum_t as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:299
    }
  10:	9803      	ldr	r0, [sp, #12]
  12:	9901      	ldr	r1, [sp, #4]
  14:	9a02      	ldr	r2, [sp, #8]
  16:	b004      	add	sp, #16
  18:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h753db713188bb37bE:

00000000 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default>:
_ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h753db713188bb37bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:325
    pub subtype: *const json_attr_t,
    pub base: *mut ::cty::c_char,
    pub stride: usize,
}
impl Default for json_array_t__bindgen_ty_1__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:326
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:327
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hf9e834f3448ef4d9E:

00000000 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_2 as core::default::Default>::default>:
_ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hf9e834f3448ef4d9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:336
    pub ptrs: *mut *mut ::cty::c_char,
    pub store: *mut ::cty::c_char,
    pub storelen: ::cty::c_int,
}
impl Default for json_array_t__bindgen_ty_1__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:337
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_2 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:338
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17h9b00ca955cafcbefE:

00000000 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_3 as core::default::Default>::default>:
_ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17h9b00ca955cafcbefE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:345
#[repr(C)]
pub struct json_array_t__bindgen_ty_1__bindgen_ty_3 {
    pub store: *mut ::cty::c_longlong,
}
impl Default for json_array_t__bindgen_ty_1__bindgen_ty_3 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:346
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_3 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:347
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc48ad41f85d33324E:

00000000 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_4 as core::default::Default>::default>:
_ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc48ad41f85d33324E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:354
#[repr(C)]
pub struct json_array_t__bindgen_ty_1__bindgen_ty_4 {
    pub store: *mut ::cty::c_ulonglong,
}
impl Default for json_array_t__bindgen_ty_1__bindgen_ty_4 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:355
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_4 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:356
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_5$u20$as$u20$core..default..Default$GT$7default17haa53ba96f06ace6aE:

00000000 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_5 as core::default::Default>::default>:
_ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_5$u20$as$u20$core..default..Default$GT$7default17haa53ba96f06ace6aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:363
#[repr(C)]
pub struct json_array_t__bindgen_ty_1__bindgen_ty_5 {
    pub store: *mut f64,
}
impl Default for json_array_t__bindgen_ty_1__bindgen_ty_5 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:364
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_5 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:365
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_6$u20$as$u20$core..default..Default$GT$7default17h8c563500825b6592E:

00000000 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_6 as core::default::Default>::default>:
_ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_6$u20$as$u20$core..default..Default$GT$7default17h8c563500825b6592E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:372
#[repr(C)]
pub struct json_array_t__bindgen_ty_1__bindgen_ty_6 {
    pub store: *mut bool,
}
impl Default for json_array_t__bindgen_ty_1__bindgen_ty_6 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:373
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_6 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:374
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN93_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h93bc229584cfee2aE:

00000000 <<mynewt::encoding::json::json_array_t__bindgen_ty_1 as core::default::Default>::default>:
_ZN93_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h93bc229584cfee2aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:377
}
impl Default for json_array_t__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:378
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_array_t__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:379
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h8711a0fa7730468fE:

00000000 <<mynewt::encoding::json::json_array_t as core::default::Default>::default>:
_ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h8711a0fa7730468fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:382
}
impl Default for json_array_t {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:383
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_array_t as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:384
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h51b9d79859d5b21bE:

00000000 <<mynewt::encoding::json::json_attr_t__bindgen_ty_1 as core::default::Default>::default>:
_ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h51b9d79859d5b21bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:409
    pub array: __BindgenUnionField<json_array_t>,
    pub offset: __BindgenUnionField<usize>,
    pub bindgen_union_field: [u64; 6usize],
}
impl Default for json_attr_t__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:410
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_attr_t__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:411
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hc49974f650a26f1dE:

00000000 <<mynewt::encoding::json::json_attr_t__bindgen_ty_2 as core::default::Default>::default>:
_ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hc49974f650a26f1dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:424
    pub character: __BindgenUnionField<::cty::c_char>,
    pub check: __BindgenUnionField<*mut ::cty::c_char>,
    pub bindgen_union_field: u64,
}
impl Default for json_attr_t__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:425
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_attr_t__bindgen_ty_2 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:426
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h562303a67745e9a8E:

00000000 <<mynewt::encoding::json::json_attr_t as core::default::Default>::default>:
_ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h562303a67745e9a8E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:429
}
impl Default for json_attr_t {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:430
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::json::json_attr_t as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:431
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.16u36whw6bnrjd6f.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 16u36whw6bnrjd6f
00000087 l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
0000008c l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17hd0e47e9ad3c69e0eE	00000000 .text._ZN4core3ptr18real_drop_in_place17hd0e47e9ad3c69e0eE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17hd0e47e9ad3c69e0eE	0000000c .hidden core::ptr::real_drop_in_place



Disassembly of section .text._ZN4core3ptr18real_drop_in_place17hd0e47e9ad3c69e0eE:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17hd0e47e9ad3c69e0eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

mynewt-d7fd96264f78b961.16y7fbhd38nhrshp.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 16y7fbhd38nhrshp
000003ef l       .debug_str	00000000 
00000ade l       .debug_str	00000000 
00000b29 l       .debug_str	00000000 
00000ad7 l       .debug_str	00000000 
00000b23 l       .debug_str	00000000 
00000a65 l       .debug_str	00000000 
00000b1d l       .debug_str	00000000 
00000a5a l       .debug_str	00000000 
00000b13 l       .debug_str	00000000 
00000a56 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a7 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b9 l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000017d l       .debug_str	00000000 
00000187 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001e5 l       .debug_str	00000000 
000001e9 l       .debug_str	00000000 
00000248 l       .debug_str	00000000 
0000024d l       .debug_str	00000000 
00000255 l       .debug_str	00000000 
000002aa l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
00000314 l       .debug_str	00000000 
00000344 l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
000003bc l       .debug_str	00000000 
000003c5 l       .debug_str	00000000 
000003dc l       .debug_str	00000000 
000003e4 l       .debug_str	00000000 
00000a21 l       .debug_str	00000000 
00000463 l       .debug_str	00000000 
0000046a l       .debug_str	00000000 
0000046e l       .debug_str	00000000 
000004d0 l       .debug_str	00000000 
0000053a l       .debug_str	00000000 
00000548 l       .debug_str	00000000 
0000055c l       .debug_str	00000000 
00000591 l       .debug_str	00000000 
0000059c l       .debug_str	00000000 
000005a2 l       .debug_str	00000000 
000005a8 l       .debug_str	00000000 
000005b4 l       .debug_str	00000000 
00000627 l       .debug_str	00000000 
00000629 l       .debug_str	00000000 
0000062e l       .debug_str	00000000 
00000684 l       .debug_str	00000000 
000006e2 l       .debug_str	00000000 
000006e8 l       .debug_str	00000000 
000006ec l       .debug_str	00000000 
00000743 l       .debug_str	00000000 
000007a2 l       .debug_str	00000000 
000007a8 l       .debug_str	00000000 
000007ff l       .debug_str	00000000 
0000085e l       .debug_str	00000000 
00000864 l       .debug_str	00000000 
00000868 l       .debug_str	00000000 
000008bf l       .debug_str	00000000 
0000091e l       .debug_str	00000000 
00000922 l       .debug_str	00000000 
0000098b l       .debug_str	00000000 
000009fc l       .debug_str	00000000 
00000a00 l       .debug_str	00000000 
00000a0d l       .debug_str	00000000 
00000b0c l       .debug_str	00000000 
00000000 l    d  .text._ZN75_$LT$mynewt..encoding..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h7bd0a1d3d77fb5d7E	00000000 .text._ZN75_$LT$mynewt..encoding..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h7bd0a1d3d77fb5d7E
00000000 l    d  .text._ZN81_$LT$mynewt..encoding..tinycbor..cbor_iovec$u20$as$u20$core..default..Default$GT$7default17hb9ac2da65312824aE	00000000 .text._ZN81_$LT$mynewt..encoding..tinycbor..cbor_iovec$u20$as$u20$core..default..Default$GT$7default17hb9ac2da65312824aE
00000000 l    d  .text._ZN82_$LT$mynewt..encoding..tinycbor..CborEncoder$u20$as$u20$core..default..Default$GT$7default17hc73dfffec78fb40dE	00000000 .text._ZN82_$LT$mynewt..encoding..tinycbor..CborEncoder$u20$as$u20$core..default..Default$GT$7default17hc73dfffec78fb40dE
00000000 l    d  .text._ZN81_$LT$mynewt..encoding..tinycbor..CborParser$u20$as$u20$core..default..Default$GT$7default17h2ea41e9370a8e5d5E	00000000 .text._ZN81_$LT$mynewt..encoding..tinycbor..CborParser$u20$as$u20$core..default..Default$GT$7default17h2ea41e9370a8e5d5E
00000000 l    d  .text._ZN80_$LT$mynewt..encoding..tinycbor..CborValue$u20$as$u20$core..default..Default$GT$7default17h026812d4591f952dE	00000000 .text._ZN80_$LT$mynewt..encoding..tinycbor..CborValue$u20$as$u20$core..default..Default$GT$7default17h026812d4591f952dE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000 g     F .text._ZN75_$LT$mynewt..encoding..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h7bd0a1d3d77fb5d7E	00000016 <mynewt::encoding::tinycbor::File as core::default::Default>::default
00000000 g     F .text._ZN80_$LT$mynewt..encoding..tinycbor..CborValue$u20$as$u20$core..default..Default$GT$7default17h026812d4591f952dE	00000012 <mynewt::encoding::tinycbor::CborValue as core::default::Default>::default
00000000 g     F .text._ZN81_$LT$mynewt..encoding..tinycbor..CborParser$u20$as$u20$core..default..Default$GT$7default17h2ea41e9370a8e5d5E	00000012 <mynewt::encoding::tinycbor::CborParser as core::default::Default>::default
00000000 g     F .text._ZN81_$LT$mynewt..encoding..tinycbor..cbor_iovec$u20$as$u20$core..default..Default$GT$7default17hb9ac2da65312824aE	00000016 <mynewt::encoding::tinycbor::cbor_iovec as core::default::Default>::default
00000000 g     F .text._ZN82_$LT$mynewt..encoding..tinycbor..CborEncoder$u20$as$u20$core..default..Default$GT$7default17hc73dfffec78fb40dE	00000012 <mynewt::encoding::tinycbor::CborEncoder as core::default::Default>::default



Disassembly of section .text._ZN75_$LT$mynewt..encoding..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h7bd0a1d3d77fb5d7E:

00000000 <<mynewt::encoding::tinycbor::File as core::default::Default>::default>:
_ZN75_$LT$mynewt..encoding..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h7bd0a1d3d77fb5d7E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:31
#[repr(C)]
pub struct File {
    pub vmt: *const File_methods,
}
impl Default for File {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:32
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::encoding::tinycbor::File as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:33
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN81_$LT$mynewt..encoding..tinycbor..cbor_iovec$u20$as$u20$core..default..Default$GT$7default17hb9ac2da65312824aE:

00000000 <<mynewt::encoding::tinycbor::cbor_iovec as core::default::Default>::default>:
_ZN81_$LT$mynewt..encoding..tinycbor..cbor_iovec$u20$as$u20$core..default..Default$GT$7default17hb9ac2da65312824aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:117
pub struct cbor_iovec {
    pub iov_base: *mut ::cty::c_void,
    pub iov_len: usize,
}
impl Default for cbor_iovec {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:118
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::encoding::tinycbor::cbor_iovec as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:119
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN82_$LT$mynewt..encoding..tinycbor..CborEncoder$u20$as$u20$core..default..Default$GT$7default17hc73dfffec78fb40dE:

00000000 <<mynewt::encoding::tinycbor::CborEncoder as core::default::Default>::default>:
_ZN82_$LT$mynewt..encoding..tinycbor..CborEncoder$u20$as$u20$core..default..Default$GT$7default17hc73dfffec78fb40dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:129
    pub writer_arg: *mut ::cty::c_void,
    pub added: usize,
    pub flags: ::cty::c_int,
}
impl Default for CborEncoder {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:130
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::tinycbor::CborEncoder as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:131
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN81_$LT$mynewt..encoding..tinycbor..CborParser$u20$as$u20$core..default..Default$GT$7default17h2ea41e9370a8e5d5E:

00000000 <<mynewt::encoding::tinycbor::CborParser as core::default::Default>::default>:
_ZN81_$LT$mynewt..encoding..tinycbor..CborParser$u20$as$u20$core..default..Default$GT$7default17h2ea41e9370a8e5d5E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:357
    pub d: *mut cbor_decoder_reader,
    pub end: ::cty::c_int,
    pub flags: ::cty::c_int,
}
impl Default for CborParser {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:358
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::tinycbor::CborParser as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:359
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN80_$LT$mynewt..encoding..tinycbor..CborValue$u20$as$u20$core..default..Default$GT$7default17h026812d4591f952dE:

00000000 <<mynewt::encoding::tinycbor::CborValue as core::default::Default>::default>:
_ZN80_$LT$mynewt..encoding..tinycbor..CborValue$u20$as$u20$core..default..Default$GT$7default17h026812d4591f952dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:371
    pub extra: u16,
    pub type_: u8,
    pub flags: u8,
}
impl Default for CborValue {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:372
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::encoding::tinycbor::CborValue as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/tinycbor.rs:373
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.1779vvhsy04tg7x0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 1779vvhsy04tg7x0
000000f3 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000174 l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
0000008f l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
0000015b l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000170 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h996d81c265015a00E	00000000 .text._ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h996d81c265015a00E
00000000 l    d  .text._ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17h61db27facad99196E	00000000 .text._ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17h61db27facad99196E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h996d81c265015a00E	00000022 .hidden core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
00000000 g     F .text._ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17h61db27facad99196E	00000028 .hidden core::cmp::impls::<impl core::cmp::PartialOrd for u32>::lt



Disassembly of section .text._ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h996d81c265015a00E:

00000000 <core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq>:
_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h996d81c265015a00E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:894
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
   a:	9802      	ldr	r0, [sp, #8]
   c:	7800      	ldrb	r0, [r0, #0]
   e:	9903      	ldr	r1, [sp, #12]
  10:	7809      	ldrb	r1, [r1, #0]
  12:	1a40      	subs	r0, r0, r1
  14:	fab0 f080 	clz	r0, r0
  18:	0940      	lsrs	r0, r0, #5
  1a:	9201      	str	r2, [sp, #4]
  1c:	9300      	str	r3, [sp, #0]
  1e:	b004      	add	sp, #16
  20:	4770      	bx	lr

Disassembly of section .text._ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17h61db27facad99196E:

00000000 <core::cmp::impls::<impl core::cmp::PartialOrd for u32>::lt>:
_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u32$GT$2lt17h61db27facad99196E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:974
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
   a:	9802      	ldr	r0, [sp, #8]
   c:	6800      	ldr	r0, [r0, #0]
   e:	9903      	ldr	r1, [sp, #12]
  10:	6809      	ldr	r1, [r1, #0]
  12:	f04f 0c00 	mov.w	ip, #0
  16:	4288      	cmp	r0, r1
  18:	bf38      	it	cc
  1a:	f04f 0c01 	movcc.w	ip, #1
  1e:	4660      	mov	r0, ip
  20:	9201      	str	r2, [sp, #4]
  22:	9300      	str	r3, [sp, #0]
  24:	b004      	add	sp, #16
  26:	4770      	bx	lr

mynewt-d7fd96264f78b961.1ioit3lac41doadt.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 1ioit3lac41doadt
000003fa l       .debug_str	00000000 
00000d43 l       .debug_str	00000000 
00000f77 l       .debug_str	00000000 
00000d3c l       .debug_str	00000000 
00000d31 l       .debug_str	00000000 
00000d2d l       .debug_str	00000000 
00000d1f l       .debug_str	00000000 
00000f6c l       .debug_str	00000000 
00000d15 l       .debug_str	00000000 
00000d04 l       .debug_str	00000000 
00000cff l       .debug_str	00000000 
00000f65 l       .debug_str	00000000 
00000ce6 l       .debug_str	00000000 
00000cda l       .debug_str	00000000 
00000f5c l       .debug_str	00000000 
00000cce l       .debug_str	00000000 
00000f48 l       .debug_str	00000000 
00000cc7 l       .debug_str	00000000 
00000cbf l       .debug_str	00000000 
00000cb7 l       .debug_str	00000000 
00000cae l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000c94 l       .debug_str	00000000 
00000c91 l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000c8b l       .debug_str	00000000 
00000c86 l       .debug_str	00000000 
00000c5f l       .debug_str	00000000 
00000c40 l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000c1d l       .debug_str	00000000 
00000c14 l       .debug_str	00000000 
00000c09 l       .debug_str	00000000 
00000c03 l       .debug_str	00000000 
00000bfd l       .debug_str	00000000 
00000bf5 l       .debug_str	00000000 
00000f35 l       .debug_str	00000000 
00000beb l       .debug_str	00000000 
00000be5 l       .debug_str	00000000 
00000be2 l       .debug_str	00000000 
00000bd8 l       .debug_str	00000000 
00000f2b l       .debug_str	00000000 
00000bd2 l       .debug_str	00000000 
00000f25 l       .debug_str	00000000 
00000bcd l       .debug_str	00000000 
00000f1f l       .debug_str	00000000 
00000bc8 l       .debug_str	00000000 
00000eee l       .debug_str	00000000 
00000bc1 l       .debug_str	00000000 
00000ec2 l       .debug_str	00000000 
00000bb8 l       .debug_str	00000000 
00000e97 l       .debug_str	00000000 
00000bb5 l       .debug_str	00000000 
00000bb0 l       .debug_str	00000000 
00000ba7 l       .debug_str	00000000 
00000e93 l       .debug_str	00000000 
00000e7d l       .debug_str	00000000 
00000e73 l       .debug_str	00000000 
00000e5a l       .debug_str	00000000 
00000e3d l       .debug_str	00000000 
00000b9f l       .debug_str	00000000 
00000e32 l       .debug_str	00000000 
00000dd4 l       .debug_str	00000000 
00000b93 l       .debug_str	00000000 
00000dba l       .debug_str	00000000 
00000db0 l       .debug_str	00000000 
00000d94 l       .debug_str	00000000 
00000b8c l       .debug_str	00000000 
00000b87 l       .debug_str	00000000 
00000b82 l       .debug_str	00000000 
00000d70 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d51 l       .debug_str	00000000 
00000d4d l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000087 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
000000a1 l       .debug_str	00000000 
000000ac l       .debug_str	00000000 
000000af l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
000000d0 l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
0000012e l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d0 l       .debug_str	00000000 
000001d4 l       .debug_str	00000000 
0000023e l       .debug_str	00000000 
0000024c l       .debug_str	00000000 
00000260 l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
000002a0 l       .debug_str	00000000 
000002a4 l       .debug_str	00000000 
000002af l       .debug_str	00000000 
000002ba l       .debug_str	00000000 
000002c1 l       .debug_str	00000000 
000002d8 l       .debug_str	00000000 
000002de l       .debug_str	00000000 
000002e4 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
000002f6 l       .debug_str	00000000 
0000033b l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
0000038e l       .debug_str	00000000 
00000392 l       .debug_str	00000000 
00000395 l       .debug_str	00000000 
00000398 l       .debug_str	00000000 
0000039d l       .debug_str	00000000 
000003a3 l       .debug_str	00000000 
000003aa l       .debug_str	00000000 
000003b2 l       .debug_str	00000000 
000003bc l       .debug_str	00000000 
000003c3 l       .debug_str	00000000 
000003c6 l       .debug_str	00000000 
000003ca l       .debug_str	00000000 
000003d1 l       .debug_str	00000000 
000003d4 l       .debug_str	00000000 
000003e3 l       .debug_str	00000000 
000003ed l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
00000b77 l       .debug_str	00000000 
0000043b l       .debug_str	00000000 
00000444 l       .debug_str	00000000 
0000044d l       .debug_str	00000000 
00000454 l       .debug_str	00000000 
0000045a l       .debug_str	00000000 
0000045f l       .debug_str	00000000 
00000464 l       .debug_str	00000000 
000004bd l       .debug_str	00000000 
000004d2 l       .debug_str	00000000 
00000522 l       .debug_str	00000000 
0000052e l       .debug_str	00000000 
00000580 l       .debug_str	00000000 
0000058e l       .debug_str	00000000 
000005da l       .debug_str	00000000 
000005e3 l       .debug_str	00000000 
00000636 l       .debug_str	00000000 
00000645 l       .debug_str	00000000 
00000672 l       .debug_str	00000000 
000006c2 l       .debug_str	00000000 
000006ce l       .debug_str	00000000 
00000719 l       .debug_str	00000000 
00000721 l       .debug_str	00000000 
00000772 l       .debug_str	00000000 
0000077f l       .debug_str	00000000 
000007c7 l       .debug_str	00000000 
000007cc l       .debug_str	00000000 
0000081c l       .debug_str	00000000 
00000828 l       .debug_str	00000000 
000008ad l       .debug_str	00000000 
000008c3 l       .debug_str	00000000 
0000093f l       .debug_str	00000000 
000009bf l       .debug_str	00000000 
00000a2e l       .debug_str	00000000 
00000a31 l       .debug_str	00000000 
00000a36 l       .debug_str	00000000 
00000aa2 l       .debug_str	00000000 
00000ad3 l       .debug_str	00000000 
00000ad7 l       .debug_str	00000000 
00000adb l       .debug_str	00000000 
00000ae3 l       .debug_str	00000000 
00000ae8 l       .debug_str	00000000 
00000af0 l       .debug_str	00000000 
00000af5 l       .debug_str	00000000 
00000b03 l       .debug_str	00000000 
00000b09 l       .debug_str	00000000 
00000b12 l       .debug_str	00000000 
00000b15 l       .debug_str	00000000 
00000b1a l       .debug_str	00000000 
00000b25 l       .debug_str	00000000 
00000b27 l       .debug_str	00000000 
00000b54 l       .debug_str	00000000 
00000b5b l       .debug_str	00000000 
00000b5f l       .debug_str	00000000 
00000b68 l       .debug_str	00000000 
00000b6d l       .debug_str	00000000 
00000d49 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.0	00000001 .Lanon.6928d29324494ed5d408eac1b4368687.0
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.1	00000004 .Lanon.6928d29324494ed5d408eac1b4368687.1
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.10	0000000d .Lanon.6928d29324494ed5d408eac1b4368687.10
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.11	00000001 .Lanon.6928d29324494ed5d408eac1b4368687.11
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.14	00000010 .Lanon.6928d29324494ed5d408eac1b4368687.14
00000000 l     O .rodata.cst4	00000004 .Lanon.6928d29324494ed5d408eac1b4368687.15
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.16	00000010 .Lanon.6928d29324494ed5d408eac1b4368687.16
00000000 l     O .rodata.cst16	00000010 .Lanon.6928d29324494ed5d408eac1b4368687.17
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.18	00000018 .Lanon.6928d29324494ed5d408eac1b4368687.18
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.19	00000009 .Lanon.6928d29324494ed5d408eac1b4368687.19
00000004 l     O .rodata.cst4	00000004 .Lanon.6928d29324494ed5d408eac1b4368687.20
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.21	00000010 .Lanon.6928d29324494ed5d408eac1b4368687.21
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.23	00000018 .Lanon.6928d29324494ed5d408eac1b4368687.23
00000008 l     O .rodata.cst4	00000004 .Lanon.6928d29324494ed5d408eac1b4368687.24
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.28	00000018 .Lanon.6928d29324494ed5d408eac1b4368687.28
00000000 l     O .rodata.cst8	00000008 .Lanon.6928d29324494ed5d408eac1b4368687.29
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.30	00000008 .Lanon.6928d29324494ed5d408eac1b4368687.30
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.31	00000000 .Lanon.6928d29324494ed5d408eac1b4368687.31
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.32	00000010 .Lanon.6928d29324494ed5d408eac1b4368687.32
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.33	00000010 .Lanon.6928d29324494ed5d408eac1b4368687.33
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.34	0000000e .Lanon.6928d29324494ed5d408eac1b4368687.34
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.35	00000002 .Lanon.6928d29324494ed5d408eac1b4368687.35
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.4	00000018 .Lanon.6928d29324494ed5d408eac1b4368687.4
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.5	00000010 .Lanon.6928d29324494ed5d408eac1b4368687.5
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.7	00000018 .Lanon.6928d29324494ed5d408eac1b4368687.7
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.8	00000010 .Lanon.6928d29324494ed5d408eac1b4368687.8
00000000 l     O .rodata..Lanon.6928d29324494ed5d408eac1b4368687.9	00000018 .Lanon.6928d29324494ed5d408eac1b4368687.9
00000000 l     O .bss._ZN6mynewt8encoding12coap_context13cbor_encoder017hc6cabff904e48800E	00000010 mynewt::encoding::coap_context::cbor_encoder0
00000000 l     O .bss._ZN6mynewt8encoding12coap_context13cbor_encoder117h67d58175ac69b691E	00000010 mynewt::encoding::coap_context::cbor_encoder1
00000000 l     F .text._ZN82_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6da722bd75e9643bE	00000068 <mynewt::encoding::coap_context::CoapError as core::cmp::PartialEq>::eq
00000000 l     O .rodata.str.0	00000028 str.0
00000000 l     O .rodata.str.1	00000021 str.1
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext20json_set_text_string17h9e175e462a901a28E	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext20json_set_text_string17h9e175e462a901a28E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h8c654d4708d2c2d0E	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h8c654d4708d2c2d0E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h159023eafb6861b2E	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h159023eafb6861b2E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17h95aa4ad96318c24fE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17h95aa4ad96318c24fE
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17h04f0935abcdee981E	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17h04f0935abcdee981E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17h21a2351b9d697997E	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17h21a2351b9d697997E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext7encoder17hccb40b4ab5328050E	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext7encoder17hccb40b4ab5328050E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext12check_result17hf744195ddedbc25eE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext12check_result17hf744195ddedbc25eE
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext4fail17h060d8a703f8f2c9bE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext4fail17h060d8a703f8f2c9bE
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h69d954fe1672413fE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h69d954fe1672413fE
00000000 l    d  .text._ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17he322045163dc43dcE	00000000 .text._ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17he322045163dc43dcE
00000000 l    d  .text._ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17hb05d971bf5bb80b5E	00000000 .text._ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17hb05d971bf5bb80b5E
00000000 l    d  .text._ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h751057fbbd44e2dcE	00000000 .text._ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h751057fbbd44e2dcE
00000000 l    d  .text._ZN82_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6da722bd75e9643bE	00000000 .text._ZN82_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6da722bd75e9643bE
00000000 l    d  .text._ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17h06dcdae20cda8b1dE	00000000 .text._ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17h06dcdae20cda8b1dE
00000000 l    d  .bss._ZN6mynewt8encoding12coap_context13cbor_encoder017hc6cabff904e48800E	00000000 .bss._ZN6mynewt8encoding12coap_context13cbor_encoder017hc6cabff904e48800E
00000000 l    d  .bss._ZN6mynewt8encoding12coap_context13cbor_encoder117h67d58175ac69b691E	00000000 .bss._ZN6mynewt8encoding12coap_context13cbor_encoder117h67d58175ac69b691E
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.0	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.0
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.2	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.2
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.3	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.3
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.6	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.6
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.12	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.12
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.13	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.13
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.22	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.22
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.25	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.25
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.26	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.26
00000000 l    d  .rodata..Lanon.6928d29324494ed5d408eac1b4368687.27	00000000 .rodata..Lanon.6928d29324494ed5d408eac1b4368687.27
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000         *UND*	00000000 core::slice::<impl [T]>::copy_from_slice
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000         *UND*	00000000 core::slice::<impl [T]>::last
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000         *UND*	00000000 core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
00000000         *UND*	00000000 core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq
00000000         *UND*	00000000 core::panicking::panic_bounds_check
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <core::fmt::Arguments as core::fmt::Display>::fmt
00000000         *UND*	00000000 mynewt::sys::console::print
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h8c654d4708d2c2d0E	000000ea mynewt::encoding::coap_context::CoapContext::key_to_cstr
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17h21a2351b9d697997E	000000f4 mynewt::encoding::coap_context::CoapContext::new_encoder
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h69d954fe1672413fE	00000012 mynewt::encoding::coap_context::CoapContext::to_void_ptr
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext12check_result17hf744195ddedbc25eE	000000fe mynewt::encoding::coap_context::CoapContext::check_result
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h159023eafb6861b2E	000000f2 mynewt::encoding::coap_context::CoapContext::value_to_cstr
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17h04f0935abcdee981E	00000014 mynewt::encoding::coap_context::CoapContext::global_encoder
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext20json_set_text_string17h9e175e462a901a28E	000000b2 mynewt::encoding::coap_context::CoapContext::json_set_text_string
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext4fail17h060d8a703f8f2c9bE	0000010a mynewt::encoding::coap_context::CoapContext::fail
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext7encoder17hccb40b4ab5328050E	0000012e mynewt::encoding::coap_context::CoapContext::encoder
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17h95aa4ad96318c24fE	00000082 mynewt::encoding::coap_context::CoapContext::cstr_len
00000000 g     O .bss._ZN6mynewt8encoding12coap_context12COAP_CONTEXT17hf9d4811f16d70562E	00000040 mynewt::encoding::coap_context::COAP_CONTEXT
00000000         *UND*	00000000 <core::option::Option<T> as core::cmp::PartialEq>::eq
00000000 g     F .text._ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17hb05d971bf5bb80b5E	00000030 <str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000 g     F .text._ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17h06dcdae20cda8b1dE	00000078 <mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt
00000000 g     F .text._ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h751057fbbd44e2dcE	0000002c <&str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000 g     F .text._ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17he322045163dc43dcE	00000016 <[u8] as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000         *UND*	00000000 g_encoder
00000000         *UND*	00000000 json_helper_set_text_string
00000000         *UND*	00000000 root_map



Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext20json_set_text_string17h9e175e462a901a28E:

00000000 <mynewt::encoding::coap_context::CoapContext::json_set_text_string>:
_ZN6mynewt8encoding12coap_context11CoapContext20json_set_text_string17h9e175e462a901a28E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:35
static mut cbor_encoder1: CborEncoder = fill_zero!(CborEncoder);

impl CoapContext {

    ///  Encode a text value into the current JSON document with the specified key
    pub fn json_set_text_string(&mut self, key: &Strn, value: &Strn) {
   0:	b580      	push	{r7, lr}
   2:	b092      	sub	sp, #72	; 0x48
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9007      	str	r0, [sp, #28]
   c:	9108      	str	r1, [sp, #32]
   e:	9209      	str	r2, [sp, #36]	; 0x24
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:39
        //  Convert the key to C string.
        let key_cstr: *const u8 =
            match key.rep {
                StrnRep::ByteStr(bs) => { self.key_to_cstr(bs) }
  10:	9808      	ldr	r0, [sp, #32]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	07c1      	lsls	r1, r0, #31
  16:	2900      	cmp	r1, #0
  18:	9306      	str	r3, [sp, #24]
  1a:	f8cd c014 	str.w	ip, [sp, #20]
  1e:	f8cd e010 	str.w	lr, [sp, #16]
  22:	9003      	str	r0, [sp, #12]
  24:	d006      	beq.n	34 <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x34>
  26:	e7ff      	b.n	28 <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x28>
  28:	9803      	ldr	r0, [sp, #12]
  2a:	b2c1      	uxtb	r1, r0
  2c:	2901      	cmp	r1, #1
  2e:	d00e      	beq.n	4e <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x4e>
  30:	e7ff      	b.n	32 <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x32>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:56
                self.to_void_ptr(),
                key_cstr as *const c_char,
                value_cstr as *const c_char
            )
        };
    }
  32:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:39
                StrnRep::ByteStr(bs) => { self.key_to_cstr(bs) }
  34:	9808      	ldr	r0, [sp, #32]
  36:	6841      	ldr	r1, [r0, #4]
  38:	6880      	ldr	r0, [r0, #8]
  3a:	910b      	str	r1, [sp, #44]	; 0x2c
  3c:	900c      	str	r0, [sp, #48]	; 0x30
  3e:	9807      	ldr	r0, [sp, #28]
  40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  42:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  44:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::json_set_text_string>
  48:	900a      	str	r0, [sp, #40]	; 0x28
  4a:	e7ff      	b.n	4c <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x4c>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:38
            match key.rep {
  4c:	e005      	b.n	5a <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x5a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:40
                StrnRep::CStr(cstr)  => { cstr }
  4e:	9808      	ldr	r0, [sp, #32]
  50:	6840      	ldr	r0, [r0, #4]
  52:	900d      	str	r0, [sp, #52]	; 0x34
  54:	980d      	ldr	r0, [sp, #52]	; 0x34
  56:	900a      	str	r0, [sp, #40]	; 0x28
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:38
            match key.rep {
  58:	e7ff      	b.n	5a <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x5a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:45
                StrnRep::ByteStr(bs) => { self.value_to_cstr(bs) }
  5a:	9809      	ldr	r0, [sp, #36]	; 0x24
  5c:	7800      	ldrb	r0, [r0, #0]
  5e:	07c1      	lsls	r1, r0, #31
  60:	2900      	cmp	r1, #0
  62:	9002      	str	r0, [sp, #8]
  64:	d005      	beq.n	72 <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x72>
  66:	e7ff      	b.n	68 <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x68>
  68:	9802      	ldr	r0, [sp, #8]
  6a:	b2c1      	uxtb	r1, r0
  6c:	2901      	cmp	r1, #1
  6e:	d00d      	beq.n	8c <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x8c>
  70:	e7df      	b.n	32 <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x32>
  72:	9809      	ldr	r0, [sp, #36]	; 0x24
  74:	6841      	ldr	r1, [r0, #4]
  76:	6880      	ldr	r0, [r0, #8]
  78:	910f      	str	r1, [sp, #60]	; 0x3c
  7a:	9010      	str	r0, [sp, #64]	; 0x40
  7c:	9807      	ldr	r0, [sp, #28]
  7e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  80:	9a10      	ldr	r2, [sp, #64]	; 0x40
  82:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::json_set_text_string>
  86:	900e      	str	r0, [sp, #56]	; 0x38
  88:	e7ff      	b.n	8a <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x8a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:44
            match value.rep {
  8a:	e005      	b.n	98 <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x98>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:46
                StrnRep::CStr(cstr)  => { cstr }
  8c:	9809      	ldr	r0, [sp, #36]	; 0x24
  8e:	6840      	ldr	r0, [r0, #4]
  90:	9011      	str	r0, [sp, #68]	; 0x44
  92:	9811      	ldr	r0, [sp, #68]	; 0x44
  94:	900e      	str	r0, [sp, #56]	; 0x38
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:44
            match value.rep {
  96:	e7ff      	b.n	98 <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0x98>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:51
                self.to_void_ptr(),
  98:	9807      	ldr	r0, [sp, #28]
  9a:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::json_set_text_string>
  9e:	9001      	str	r0, [sp, #4]
  a0:	e7ff      	b.n	a2 <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0xa2>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:52
                key_cstr as *const c_char,
  a2:	990a      	ldr	r1, [sp, #40]	; 0x28
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:53
                value_cstr as *const c_char
  a4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:50
            crate::libs::mynewt_rust::json_helper_set_text_string(
  a6:	9801      	ldr	r0, [sp, #4]
  a8:	f7ff fffe 	bl	0 <json_helper_set_text_string>
  ac:	e7ff      	b.n	ae <mynewt::encoding::coap_context::CoapContext::json_set_text_string+0xae>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:56
    }
  ae:	b012      	add	sp, #72	; 0x48
  b0:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h8c654d4708d2c2d0E:

00000000 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>:
_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h8c654d4708d2c2d0E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:61

    /// Given a key `s`, return a `*char` pointer that is null-terminated. Used for encoding COAP keys.
    /// If `s` is null-terminated, return it as a pointer. Else copy `s` to the static buffer,
    /// append null and return the buffer as a pointer.
    pub fn key_to_cstr(&mut self, s: &[u8]) -> *const u8 {                
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	900a      	str	r0, [sp, #40]	; 0x28
   c:	910b      	str	r1, [sp, #44]	; 0x2c
   e:	920c      	str	r2, [sp, #48]	; 0x30
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:63
        //  If null-terminated, return as pointer.
        if s.last() == Some(&0) { return s.as_ptr() as *const u8; }
  10:	980b      	ldr	r0, [sp, #44]	; 0x2c
  12:	990c      	ldr	r1, [sp, #48]	; 0x30
  14:	9309      	str	r3, [sp, #36]	; 0x24
  16:	f8cd c020 	str.w	ip, [sp, #32]
  1a:	f8cd e01c 	str.w	lr, [sp, #28]
  1e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  22:	900e      	str	r0, [sp, #56]	; 0x38
  24:	e7ff      	b.n	26 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x26>
  26:	f240 0100 	movw	r1, #0
  2a:	f2c0 0100 	movt	r1, #0
  2e:	a80e      	add	r0, sp, #56	; 0x38
  30:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::cmp::PartialEq>::eq>
  34:	9006      	str	r0, [sp, #24]
  36:	e7ff      	b.n	38 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x38>
  38:	9806      	ldr	r0, [sp, #24]
  3a:	07c1      	lsls	r1, r0, #31
  3c:	2900      	cmp	r1, #0
  3e:	d00a      	beq.n	56 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x56>
  40:	e7ff      	b.n	42 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x42>
  42:	980b      	ldr	r0, [sp, #44]	; 0x2c
  44:	990c      	ldr	r1, [sp, #48]	; 0x30
  46:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  4a:	900d      	str	r0, [sp, #52]	; 0x34
  4c:	e7ff      	b.n	4e <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x4e>
  4e:	e7ff      	b.n	50 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x50>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:69
        //  Else copy into static key buffer and return pointer to buffer.
        assert!(s.len() < COAP_KEY_SIZE, "big key");  //  Key too long
        self.key_buffer[..s.len()].copy_from_slice(s);
        self.key_buffer[s.len()] = 0;
        self.key_buffer.as_ptr() as *const u8
    }
  50:	980d      	ldr	r0, [sp, #52]	; 0x34
  52:	b010      	add	sp, #64	; 0x40
  54:	bd80      	pop	{r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:65
        assert!(s.len() < COAP_KEY_SIZE, "big key");  //  Key too long
  56:	980b      	ldr	r0, [sp, #44]	; 0x2c
  58:	990c      	ldr	r1, [sp, #48]	; 0x30
  5a:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  5e:	9005      	str	r0, [sp, #20]
  60:	e7ff      	b.n	62 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x62>
  62:	9805      	ldr	r0, [sp, #20]
  64:	2820      	cmp	r0, #32
  66:	d307      	bcc.n	78 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x78>
  68:	e7ff      	b.n	6a <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x6a>
  6a:	f240 0000 	movw	r0, #0
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <core::panicking::panic>
  76:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:66
        self.key_buffer[..s.len()].copy_from_slice(s);
  78:	980a      	ldr	r0, [sp, #40]	; 0x28
  7a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  7c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  7e:	9004      	str	r0, [sp, #16]
  80:	4608      	mov	r0, r1
  82:	4611      	mov	r1, r2
  84:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  88:	9003      	str	r0, [sp, #12]
  8a:	e7ff      	b.n	8c <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x8c>
  8c:	9803      	ldr	r0, [sp, #12]
  8e:	900f      	str	r0, [sp, #60]	; 0x3c
  90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  92:	2120      	movs	r1, #32
  94:	9804      	ldr	r0, [sp, #16]
  96:	f7ff fffe 	bl	0 <core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut>
  9a:	9002      	str	r0, [sp, #8]
  9c:	9101      	str	r1, [sp, #4]
  9e:	e7ff      	b.n	a0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0xa0>
  a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  a4:	9802      	ldr	r0, [sp, #8]
  a6:	9901      	ldr	r1, [sp, #4]
  a8:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::copy_from_slice>
  ac:	e7ff      	b.n	ae <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0xae>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:67
        self.key_buffer[s.len()] = 0;
  ae:	980b      	ldr	r0, [sp, #44]	; 0x2c
  b0:	990c      	ldr	r1, [sp, #48]	; 0x30
  b2:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  b6:	9000      	str	r0, [sp, #0]
  b8:	e7ff      	b.n	ba <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0xba>
  ba:	9800      	ldr	r0, [sp, #0]
  bc:	281f      	cmp	r0, #31
  be:	d80b      	bhi.n	d8 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0xd8>
  c0:	e7ff      	b.n	c2 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0xc2>
  c2:	980a      	ldr	r0, [sp, #40]	; 0x28
  c4:	2100      	movs	r1, #0
  c6:	9a00      	ldr	r2, [sp, #0]
  c8:	5481      	strb	r1, [r0, r2]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:68
        self.key_buffer.as_ptr() as *const u8
  ca:	980a      	ldr	r0, [sp, #40]	; 0x28
  cc:	2120      	movs	r1, #32
  ce:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  d2:	900d      	str	r0, [sp, #52]	; 0x34
  d4:	e7ff      	b.n	d6 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0xd6>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:69
    }
  d6:	e7bb      	b.n	50 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x50>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:67
        self.key_buffer[s.len()] = 0;
  d8:	f240 0000 	movw	r0, #0
  dc:	f2c0 0000 	movt	r0, #0
  e0:	2220      	movs	r2, #32
  e2:	9900      	ldr	r1, [sp, #0]
  e4:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
  e8:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h159023eafb6861b2E:

00000000 <mynewt::encoding::coap_context::CoapContext::value_to_cstr>:
_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h159023eafb6861b2E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:74

    /// Given a value `s`, return a `*char` pointer that is null-terminated. Used for encoding COAP values.
    /// If `s` is null-terminated, return it as a pointer. Else copy `s` to the static buffer,
    /// append null and return the buffer as a pointer.
    pub fn value_to_cstr(&mut self, s: &[u8]) -> *const u8 {
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	900a      	str	r0, [sp, #40]	; 0x28
   c:	910b      	str	r1, [sp, #44]	; 0x2c
   e:	920c      	str	r2, [sp, #48]	; 0x30
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:76
        //  If null-terminated, return as pointer.
        if s.last() == Some(&0) { return s.as_ptr() as *const u8; }
  10:	980b      	ldr	r0, [sp, #44]	; 0x2c
  12:	990c      	ldr	r1, [sp, #48]	; 0x30
  14:	9309      	str	r3, [sp, #36]	; 0x24
  16:	f8cd c020 	str.w	ip, [sp, #32]
  1a:	f8cd e01c 	str.w	lr, [sp, #28]
  1e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  22:	900e      	str	r0, [sp, #56]	; 0x38
  24:	e7ff      	b.n	26 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x26>
  26:	f240 0100 	movw	r1, #0
  2a:	f2c0 0100 	movt	r1, #0
  2e:	a80e      	add	r0, sp, #56	; 0x38
  30:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::cmp::PartialEq>::eq>
  34:	9006      	str	r0, [sp, #24]
  36:	e7ff      	b.n	38 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x38>
  38:	9806      	ldr	r0, [sp, #24]
  3a:	07c1      	lsls	r1, r0, #31
  3c:	2900      	cmp	r1, #0
  3e:	d00a      	beq.n	56 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x56>
  40:	e7ff      	b.n	42 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x42>
  42:	980b      	ldr	r0, [sp, #44]	; 0x2c
  44:	990c      	ldr	r1, [sp, #48]	; 0x30
  46:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  4a:	900d      	str	r0, [sp, #52]	; 0x34
  4c:	e7ff      	b.n	4e <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x4e>
  4e:	e7ff      	b.n	50 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x50>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:82
        //  Else copy into static value buffer and return pointer to buffer.
        assert!(s.len() < COAP_VALUE_SIZE, "big value");  //  Value too long
        self.value_buffer[..s.len()].copy_from_slice(s);
        self.value_buffer[s.len()] = 0;
        self.value_buffer.as_ptr() as *const u8
    }
  50:	980d      	ldr	r0, [sp, #52]	; 0x34
  52:	b010      	add	sp, #64	; 0x40
  54:	bd80      	pop	{r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:78
        assert!(s.len() < COAP_VALUE_SIZE, "big value");  //  Value too long
  56:	980b      	ldr	r0, [sp, #44]	; 0x2c
  58:	990c      	ldr	r1, [sp, #48]	; 0x30
  5a:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  5e:	9005      	str	r0, [sp, #20]
  60:	e7ff      	b.n	62 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x62>
  62:	9805      	ldr	r0, [sp, #20]
  64:	2820      	cmp	r0, #32
  66:	d307      	bcc.n	78 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x78>
  68:	e7ff      	b.n	6a <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x6a>
  6a:	f240 0000 	movw	r0, #0
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <core::panicking::panic>
  76:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:79
        self.value_buffer[..s.len()].copy_from_slice(s);
  78:	980a      	ldr	r0, [sp, #40]	; 0x28
  7a:	3020      	adds	r0, #32
  7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  80:	9004      	str	r0, [sp, #16]
  82:	4608      	mov	r0, r1
  84:	4611      	mov	r1, r2
  86:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  8a:	9003      	str	r0, [sp, #12]
  8c:	e7ff      	b.n	8e <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x8e>
  8e:	9803      	ldr	r0, [sp, #12]
  90:	900f      	str	r0, [sp, #60]	; 0x3c
  92:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  94:	2120      	movs	r1, #32
  96:	9804      	ldr	r0, [sp, #16]
  98:	f7ff fffe 	bl	0 <core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut>
  9c:	9002      	str	r0, [sp, #8]
  9e:	9101      	str	r1, [sp, #4]
  a0:	e7ff      	b.n	a2 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0xa2>
  a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  a6:	9802      	ldr	r0, [sp, #8]
  a8:	9901      	ldr	r1, [sp, #4]
  aa:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::copy_from_slice>
  ae:	e7ff      	b.n	b0 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0xb0>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:80
        self.value_buffer[s.len()] = 0;
  b0:	980b      	ldr	r0, [sp, #44]	; 0x2c
  b2:	990c      	ldr	r1, [sp, #48]	; 0x30
  b4:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  b8:	9000      	str	r0, [sp, #0]
  ba:	e7ff      	b.n	bc <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0xbc>
  bc:	9800      	ldr	r0, [sp, #0]
  be:	281f      	cmp	r0, #31
  c0:	d80e      	bhi.n	e0 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0xe0>
  c2:	e7ff      	b.n	c4 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0xc4>
  c4:	980a      	ldr	r0, [sp, #40]	; 0x28
  c6:	9900      	ldr	r1, [sp, #0]
  c8:	4408      	add	r0, r1
  ca:	2200      	movs	r2, #0
  cc:	f880 2020 	strb.w	r2, [r0, #32]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:81
        self.value_buffer.as_ptr() as *const u8
  d0:	980a      	ldr	r0, [sp, #40]	; 0x28
  d2:	3020      	adds	r0, #32
  d4:	2120      	movs	r1, #32
  d6:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  da:	900d      	str	r0, [sp, #52]	; 0x34
  dc:	e7ff      	b.n	de <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0xde>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:82
    }
  de:	e7b7      	b.n	50 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x50>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:80
        self.value_buffer[s.len()] = 0;
  e0:	f240 0000 	movw	r0, #0
  e4:	f2c0 0000 	movt	r0, #0
  e8:	2220      	movs	r2, #32
  ea:	9900      	ldr	r1, [sp, #0]
  ec:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
  f0:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17h95aa4ad96318c24fE:

00000000 <mynewt::encoding::coap_context::CoapContext::cstr_len>:
_ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17h95aa4ad96318c24fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:86

    /// Compute the byte length of the string in `s`.
    /// If `s` is null-terminated, return length of `s` - 1. Else return length of `s`.
    pub fn cstr_len(&self, s: &[u8]) -> usize {
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9007      	str	r0, [sp, #28]
   c:	9108      	str	r1, [sp, #32]
   e:	9209      	str	r2, [sp, #36]	; 0x24
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:88
        //  If null-terminated, return length - 1.
        if s.last() == Some(&0) { return s.len() - 1; }
  10:	9808      	ldr	r0, [sp, #32]
  12:	9909      	ldr	r1, [sp, #36]	; 0x24
  14:	9306      	str	r3, [sp, #24]
  16:	f8cd c014 	str.w	ip, [sp, #20]
  1a:	f8cd e010 	str.w	lr, [sp, #16]
  1e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	e7ff      	b.n	26 <mynewt::encoding::coap_context::CoapContext::cstr_len+0x26>
  26:	f240 0100 	movw	r1, #0
  2a:	f2c0 0100 	movt	r1, #0
  2e:	a80b      	add	r0, sp, #44	; 0x2c
  30:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::cmp::PartialEq>::eq>
  34:	9003      	str	r0, [sp, #12]
  36:	e7ff      	b.n	38 <mynewt::encoding::coap_context::CoapContext::cstr_len+0x38>
  38:	9803      	ldr	r0, [sp, #12]
  3a:	07c1      	lsls	r1, r0, #31
  3c:	2900      	cmp	r1, #0
  3e:	d012      	beq.n	66 <mynewt::encoding::coap_context::CoapContext::cstr_len+0x66>
  40:	e7ff      	b.n	42 <mynewt::encoding::coap_context::CoapContext::cstr_len+0x42>
  42:	9808      	ldr	r0, [sp, #32]
  44:	9909      	ldr	r1, [sp, #36]	; 0x24
  46:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  4a:	9002      	str	r0, [sp, #8]
  4c:	e7ff      	b.n	4e <mynewt::encoding::coap_context::CoapContext::cstr_len+0x4e>
  4e:	9802      	ldr	r0, [sp, #8]
  50:	1e41      	subs	r1, r0, #1
  52:	2801      	cmp	r0, #1
  54:	9101      	str	r1, [sp, #4]
  56:	d30d      	bcc.n	74 <mynewt::encoding::coap_context::CoapContext::cstr_len+0x74>
  58:	e7ff      	b.n	5a <mynewt::encoding::coap_context::CoapContext::cstr_len+0x5a>
  5a:	9801      	ldr	r0, [sp, #4]
  5c:	900a      	str	r0, [sp, #40]	; 0x28
  5e:	e7ff      	b.n	60 <mynewt::encoding::coap_context::CoapContext::cstr_len+0x60>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:90
        s.len()
    }
  60:	980a      	ldr	r0, [sp, #40]	; 0x28
  62:	b00c      	add	sp, #48	; 0x30
  64:	bd80      	pop	{r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:89
        s.len()
  66:	9808      	ldr	r0, [sp, #32]
  68:	9909      	ldr	r1, [sp, #36]	; 0x24
  6a:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  6e:	900a      	str	r0, [sp, #40]	; 0x28
  70:	e7ff      	b.n	72 <mynewt::encoding::coap_context::CoapContext::cstr_len+0x72>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:90
    }
  72:	e7f5      	b.n	60 <mynewt::encoding::coap_context::CoapContext::cstr_len+0x60>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:88
        if s.last() == Some(&0) { return s.len() - 1; }
  74:	f240 0000 	movw	r0, #0
  78:	f2c0 0000 	movt	r0, #0
  7c:	f7ff fffe 	bl	0 <core::panicking::panic>
  80:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17h04f0935abcdee981E:

00000000 <mynewt::encoding::coap_context::CoapContext::global_encoder>:
_ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17h04f0935abcdee981E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:93

    /// Return the global CBOR encoder
    pub fn global_encoder(&self) -> *mut super::tinycbor::CborEncoder {
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:95
        unsafe { &mut super::g_encoder }
    }
   6:	f240 0000 	movw	r0, #0
   a:	f2c0 0000 	movt	r0, #0
   e:	9100      	str	r1, [sp, #0]
  10:	b002      	add	sp, #8
  12:	4770      	bx	lr

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17h21a2351b9d697997E:

00000000 <mynewt::encoding::coap_context::CoapContext::new_encoder>:
_ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17h21a2351b9d697997E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:98

    /// Create a new CBOR encoder for the current map or array, e.g. `key=root, suffix=_map` 
    pub fn new_encoder(&self, key: &str, suffix: &str) -> *mut super::tinycbor::CborEncoder {
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b094      	sub	sp, #80	; 0x50
   4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	9006      	str	r0, [sp, #24]
  12:	9107      	str	r1, [sp, #28]
  14:	9208      	str	r2, [sp, #32]
  16:	9309      	str	r3, [sp, #36]	; 0x24
  18:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:99
        console::print("new_encoder: "); console::print(key); console::print(suffix); console::print("\n");
  1c:	f240 0000 	movw	r0, #0
  20:	f2c0 0000 	movt	r0, #0
  24:	210d      	movs	r1, #13
  26:	f8cd e014 	str.w	lr, [sp, #20]
  2a:	9404      	str	r4, [sp, #16]
  2c:	9503      	str	r5, [sp, #12]
  2e:	9602      	str	r6, [sp, #8]
  30:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  34:	e7ff      	b.n	36 <mynewt::encoding::coap_context::CoapContext::new_encoder+0x36>
  36:	9807      	ldr	r0, [sp, #28]
  38:	9908      	ldr	r1, [sp, #32]
  3a:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  3e:	e7ff      	b.n	40 <mynewt::encoding::coap_context::CoapContext::new_encoder+0x40>
  40:	9809      	ldr	r0, [sp, #36]	; 0x24
  42:	990a      	ldr	r1, [sp, #40]	; 0x28
  44:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  48:	e7ff      	b.n	2 <mynewt::encoding::coap_context::CoapContext::new_encoder+0x2>
  4a:	f240 0000 	movw	r0, #0
  4e:	f2c0 0000 	movt	r0, #0
  52:	2101      	movs	r1, #1
  54:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  58:	e7ff      	b.n	5a <mynewt::encoding::coap_context::CoapContext::new_encoder+0x5a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:101
        //  TODO: Allow multiple keys
        if (key, suffix)      == ("values", _ARRAY) { unsafe { &mut cbor_encoder0 } }
  5a:	9807      	ldr	r0, [sp, #28]
  5c:	9908      	ldr	r1, [sp, #32]
  5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  62:	900c      	str	r0, [sp, #48]	; 0x30
  64:	910d      	str	r1, [sp, #52]	; 0x34
  66:	920e      	str	r2, [sp, #56]	; 0x38
  68:	930f      	str	r3, [sp, #60]	; 0x3c
  6a:	f240 0100 	movw	r1, #0
  6e:	f2c0 0100 	movt	r1, #0
  72:	a80c      	add	r0, sp, #48	; 0x30
  74:	f7ff fffe 	bl	0 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq>
  78:	9001      	str	r0, [sp, #4]
  7a:	e7ff      	b.n	7c <mynewt::encoding::coap_context::CoapContext::new_encoder+0x7c>
  7c:	9801      	ldr	r0, [sp, #4]
  7e:	07c1      	lsls	r1, r0, #31
  80:	2900      	cmp	r1, #0
  82:	d006      	beq.n	92 <mynewt::encoding::coap_context::CoapContext::new_encoder+0x92>
  84:	e7ff      	b.n	86 <mynewt::encoding::coap_context::CoapContext::new_encoder+0x86>
  86:	f240 0000 	movw	r0, #0
  8a:	f2c0 0000 	movt	r0, #0
  8e:	900b      	str	r0, [sp, #44]	; 0x2c
  90:	e02d      	b.n	ee <mynewt::encoding::coap_context::CoapContext::new_encoder+0xee>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:102
        else if (key, suffix) == ("values", _MAP)   { unsafe { &mut cbor_encoder1 } }
  92:	9807      	ldr	r0, [sp, #28]
  94:	9908      	ldr	r1, [sp, #32]
  96:	9a09      	ldr	r2, [sp, #36]	; 0x24
  98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  9a:	9010      	str	r0, [sp, #64]	; 0x40
  9c:	9111      	str	r1, [sp, #68]	; 0x44
  9e:	9212      	str	r2, [sp, #72]	; 0x48
  a0:	9313      	str	r3, [sp, #76]	; 0x4c
  a2:	f240 0100 	movw	r1, #0
  a6:	f2c0 0100 	movt	r1, #0
  aa:	a810      	add	r0, sp, #64	; 0x40
  ac:	f7ff fffe 	bl	0 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq>
  b0:	9000      	str	r0, [sp, #0]
  b2:	e7ff      	b.n	b4 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xb4>
  b4:	9800      	ldr	r0, [sp, #0]
  b6:	07c1      	lsls	r1, r0, #31
  b8:	2900      	cmp	r1, #0
  ba:	d006      	beq.n	ca <mynewt::encoding::coap_context::CoapContext::new_encoder+0xca>
  bc:	e7ff      	b.n	be <mynewt::encoding::coap_context::CoapContext::new_encoder+0xbe>
  be:	f240 0000 	movw	r0, #0
  c2:	f2c0 0000 	movt	r0, #0
  c6:	900b      	str	r0, [sp, #44]	; 0x2c
  c8:	e010      	b.n	ec <mynewt::encoding::coap_context::CoapContext::new_encoder+0xec>
  ca:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:104
        else {
            assert!(false, "new_encoder fail");  //  TODO: No such encoder.
  cc:	2800      	cmp	r0, #0
  ce:	d107      	bne.n	e0 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xe0>
  d0:	e7ff      	b.n	d2 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xd2>
  d2:	f240 0000 	movw	r0, #0
  d6:	f2c0 0000 	movt	r0, #0
  da:	f7ff fffe 	bl	0 <core::panicking::panic>
  de:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:105
            unsafe { &mut super::root_map }
  e0:	f240 0000 	movw	r0, #0
  e4:	f2c0 0000 	movt	r0, #0
  e8:	900b      	str	r0, [sp, #44]	; 0x2c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:102
        else if (key, suffix) == ("values", _MAP)   { unsafe { &mut cbor_encoder1 } }
  ea:	e7ff      	b.n	ec <mynewt::encoding::coap_context::CoapContext::new_encoder+0xec>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:101
        if (key, suffix)      == ("values", _ARRAY) { unsafe { &mut cbor_encoder0 } }
  ec:	e7ff      	b.n	ee <mynewt::encoding::coap_context::CoapContext::new_encoder+0xee>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:107
        }        
    }
  ee:	980b      	ldr	r0, [sp, #44]	; 0x2c
  f0:	b014      	add	sp, #80	; 0x50
  f2:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext7encoder17hccb40b4ab5328050E:

00000000 <mynewt::encoding::coap_context::CoapContext::encoder>:
_ZN6mynewt8encoding12coap_context11CoapContext7encoder17hccb40b4ab5328050E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:110

    /// Return the CBOR encoder for the current map or array, e.g. `key=root, suffix=_map` 
    pub fn encoder(&self, key: &str, suffix: &str) -> *mut super::tinycbor::CborEncoder {
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b09a      	sub	sp, #104	; 0x68
   4:	f8dd c078 	ldr.w	ip, [sp, #120]	; 0x78
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	9008      	str	r0, [sp, #32]
  12:	9109      	str	r1, [sp, #36]	; 0x24
  14:	920a      	str	r2, [sp, #40]	; 0x28
  16:	930b      	str	r3, [sp, #44]	; 0x2c
  18:	f8cd c030 	str.w	ip, [sp, #48]	; 0x30
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:111
        console::print("encoder: "); console::print(key); console::print(suffix); console::print("\n");
  1c:	f240 0000 	movw	r0, #0
  20:	f2c0 0000 	movt	r0, #0
  24:	2109      	movs	r1, #9
  26:	f8cd e01c 	str.w	lr, [sp, #28]
  2a:	9406      	str	r4, [sp, #24]
  2c:	9505      	str	r5, [sp, #20]
  2e:	9604      	str	r6, [sp, #16]
  30:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  34:	e7ff      	b.n	36 <mynewt::encoding::coap_context::CoapContext::encoder+0x36>
  36:	9809      	ldr	r0, [sp, #36]	; 0x24
  38:	990a      	ldr	r1, [sp, #40]	; 0x28
  3a:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  3e:	e7ff      	b.n	40 <mynewt::encoding::coap_context::CoapContext::encoder+0x40>
  40:	980b      	ldr	r0, [sp, #44]	; 0x2c
  42:	990c      	ldr	r1, [sp, #48]	; 0x30
  44:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  48:	e7ff      	b.n	2 <mynewt::encoding::coap_context::CoapContext::encoder+0x2>
  4a:	f240 0000 	movw	r0, #0
  4e:	f2c0 0000 	movt	r0, #0
  52:	2101      	movs	r1, #1
  54:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  58:	e7ff      	b.n	5a <mynewt::encoding::coap_context::CoapContext::encoder+0x5a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:113
        //  TODO: Allow multiple keys
        if (key, suffix)      == ("root", "_map")   { unsafe { &mut super::root_map } }
  5a:	9809      	ldr	r0, [sp, #36]	; 0x24
  5c:	990a      	ldr	r1, [sp, #40]	; 0x28
  5e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  62:	900e      	str	r0, [sp, #56]	; 0x38
  64:	910f      	str	r1, [sp, #60]	; 0x3c
  66:	9210      	str	r2, [sp, #64]	; 0x40
  68:	9311      	str	r3, [sp, #68]	; 0x44
  6a:	f240 0100 	movw	r1, #0
  6e:	f2c0 0100 	movt	r1, #0
  72:	a80e      	add	r0, sp, #56	; 0x38
  74:	f7ff fffe 	bl	0 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq>
  78:	9003      	str	r0, [sp, #12]
  7a:	e7ff      	b.n	7c <mynewt::encoding::coap_context::CoapContext::encoder+0x7c>
  7c:	9803      	ldr	r0, [sp, #12]
  7e:	07c1      	lsls	r1, r0, #31
  80:	2900      	cmp	r1, #0
  82:	d006      	beq.n	92 <mynewt::encoding::coap_context::CoapContext::encoder+0x92>
  84:	e7ff      	b.n	86 <mynewt::encoding::coap_context::CoapContext::encoder+0x86>
  86:	f240 0000 	movw	r0, #0
  8a:	f2c0 0000 	movt	r0, #0
  8e:	900d      	str	r0, [sp, #52]	; 0x34
  90:	e04a      	b.n	128 <mynewt::encoding::coap_context::CoapContext::encoder+0x128>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:114
        else if (key, suffix) == ("values", _ARRAY) { unsafe { &mut cbor_encoder0 } }
  92:	9809      	ldr	r0, [sp, #36]	; 0x24
  94:	990a      	ldr	r1, [sp, #40]	; 0x28
  96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  9a:	9012      	str	r0, [sp, #72]	; 0x48
  9c:	9113      	str	r1, [sp, #76]	; 0x4c
  9e:	9214      	str	r2, [sp, #80]	; 0x50
  a0:	9315      	str	r3, [sp, #84]	; 0x54
  a2:	f240 0100 	movw	r1, #0
  a6:	f2c0 0100 	movt	r1, #0
  aa:	a812      	add	r0, sp, #72	; 0x48
  ac:	f7ff fffe 	bl	0 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq>
  b0:	9002      	str	r0, [sp, #8]
  b2:	e7ff      	b.n	b4 <mynewt::encoding::coap_context::CoapContext::encoder+0xb4>
  b4:	9802      	ldr	r0, [sp, #8]
  b6:	07c1      	lsls	r1, r0, #31
  b8:	2900      	cmp	r1, #0
  ba:	d006      	beq.n	ca <mynewt::encoding::coap_context::CoapContext::encoder+0xca>
  bc:	e7ff      	b.n	be <mynewt::encoding::coap_context::CoapContext::encoder+0xbe>
  be:	f240 0000 	movw	r0, #0
  c2:	f2c0 0000 	movt	r0, #0
  c6:	900d      	str	r0, [sp, #52]	; 0x34
  c8:	e02d      	b.n	126 <mynewt::encoding::coap_context::CoapContext::encoder+0x126>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:115
        else if (key, suffix) == ("values", _MAP)   { unsafe { &mut cbor_encoder1 } }
  ca:	9809      	ldr	r0, [sp, #36]	; 0x24
  cc:	990a      	ldr	r1, [sp, #40]	; 0x28
  ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  d2:	9016      	str	r0, [sp, #88]	; 0x58
  d4:	9117      	str	r1, [sp, #92]	; 0x5c
  d6:	9218      	str	r2, [sp, #96]	; 0x60
  d8:	9319      	str	r3, [sp, #100]	; 0x64
  da:	f240 0100 	movw	r1, #0
  de:	f2c0 0100 	movt	r1, #0
  e2:	a816      	add	r0, sp, #88	; 0x58
  e4:	f7ff fffe 	bl	0 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq>
  e8:	9001      	str	r0, [sp, #4]
  ea:	e7ff      	b.n	ec <mynewt::encoding::coap_context::CoapContext::encoder+0xec>
  ec:	9801      	ldr	r0, [sp, #4]
  ee:	07c1      	lsls	r1, r0, #31
  f0:	2900      	cmp	r1, #0
  f2:	d006      	beq.n	102 <mynewt::encoding::coap_context::CoapContext::encoder+0x102>
  f4:	e7ff      	b.n	f6 <mynewt::encoding::coap_context::CoapContext::encoder+0xf6>
  f6:	f240 0000 	movw	r0, #0
  fa:	f2c0 0000 	movt	r0, #0
  fe:	900d      	str	r0, [sp, #52]	; 0x34
 100:	e010      	b.n	124 <mynewt::encoding::coap_context::CoapContext::encoder+0x124>
 102:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:117
        else {
            assert!(false, "encoder fail");  //  TODO: No such encoder.
 104:	2800      	cmp	r0, #0
 106:	d107      	bne.n	118 <mynewt::encoding::coap_context::CoapContext::encoder+0x118>
 108:	e7ff      	b.n	10a <mynewt::encoding::coap_context::CoapContext::encoder+0x10a>
 10a:	f240 0000 	movw	r0, #0
 10e:	f2c0 0000 	movt	r0, #0
 112:	f7ff fffe 	bl	0 <core::panicking::panic>
 116:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:118
            unsafe { &mut super::root_map }
 118:	f240 0000 	movw	r0, #0
 11c:	f2c0 0000 	movt	r0, #0
 120:	900d      	str	r0, [sp, #52]	; 0x34
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:115
        else if (key, suffix) == ("values", _MAP)   { unsafe { &mut cbor_encoder1 } }
 122:	e7ff      	b.n	124 <mynewt::encoding::coap_context::CoapContext::encoder+0x124>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:114
        else if (key, suffix) == ("values", _ARRAY) { unsafe { &mut cbor_encoder0 } }
 124:	e7ff      	b.n	126 <mynewt::encoding::coap_context::CoapContext::encoder+0x126>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:113
        if (key, suffix)      == ("root", "_map")   { unsafe { &mut super::root_map } }
 126:	e7ff      	b.n	128 <mynewt::encoding::coap_context::CoapContext::encoder+0x128>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:120
        }        
    }
 128:	980d      	ldr	r0, [sp, #52]	; 0x34
 12a:	b01a      	add	sp, #104	; 0x68
 12c:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext12check_result17hf744195ddedbc25eE:

00000000 <mynewt::encoding::coap_context::CoapContext::check_result>:
_ZN6mynewt8encoding12coap_context11CoapContext12check_result17hf744195ddedbc25eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:123

    /// Fail the encoding with an error if `res` is non-zero.
    pub fn check_result(&self, res: u32) {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0aa      	sub	sp, #168	; 0xa8
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	900a      	str	r0, [sp, #40]	; 0x28
   a:	910b      	str	r1, [sp, #44]	; 0x2c
   c:	a80b      	add	r0, sp, #44	; 0x2c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:124
        assert_eq!(res, 0, "enc fail");
   e:	900c      	str	r0, [sp, #48]	; 0x30
  10:	f240 0000 	movw	r0, #0
  14:	f2c0 0000 	movt	r0, #0
  18:	900d      	str	r0, [sp, #52]	; 0x34
  1a:	980c      	ldr	r0, [sp, #48]	; 0x30
  1c:	900e      	str	r0, [sp, #56]	; 0x38
  1e:	980d      	ldr	r0, [sp, #52]	; 0x34
  20:	900f      	str	r0, [sp, #60]	; 0x3c
  22:	980e      	ldr	r0, [sp, #56]	; 0x38
  24:	6800      	ldr	r0, [r0, #0]
  26:	990f      	ldr	r1, [sp, #60]	; 0x3c
  28:	6809      	ldr	r1, [r1, #0]
  2a:	4288      	cmp	r0, r1
  2c:	9209      	str	r2, [sp, #36]	; 0x24
  2e:	9308      	str	r3, [sp, #32]
  30:	d014      	beq.n	5c <mynewt::encoding::coap_context::CoapContext::check_result+0x5c>
  32:	e7ff      	b.n	34 <mynewt::encoding::coap_context::CoapContext::check_result+0x34>
  34:	980e      	ldr	r0, [sp, #56]	; 0x38
  36:	901f      	str	r0, [sp, #124]	; 0x7c
  38:	980f      	ldr	r0, [sp, #60]	; 0x3c
  3a:	9020      	str	r0, [sp, #128]	; 0x80
  3c:	4668      	mov	r0, sp
  3e:	2100      	movs	r1, #0
  40:	6001      	str	r1, [r0, #0]
  42:	f240 0100 	movw	r1, #0
  46:	f2c0 0100 	movt	r1, #0
  4a:	f240 0300 	movw	r3, #0
  4e:	f2c0 0300 	movt	r3, #0
  52:	a821      	add	r0, sp, #132	; 0x84
  54:	2201      	movs	r2, #1
  56:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  5a:	e001      	b.n	60 <mynewt::encoding::coap_context::CoapContext::check_result+0x60>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:125
    }
  5c:	b02a      	add	sp, #168	; 0xa8
  5e:	bdb0      	pop	{r4, r5, r7, pc}
  60:	a81f      	add	r0, sp, #124	; 0x7c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:124
        assert_eq!(res, 0, "enc fail");
  62:	901c      	str	r0, [sp, #112]	; 0x70
  64:	a820      	add	r0, sp, #128	; 0x80
  66:	901d      	str	r0, [sp, #116]	; 0x74
  68:	a821      	add	r0, sp, #132	; 0x84
  6a:	901e      	str	r0, [sp, #120]	; 0x78
  6c:	981c      	ldr	r0, [sp, #112]	; 0x70
  6e:	9027      	str	r0, [sp, #156]	; 0x9c
  70:	981d      	ldr	r0, [sp, #116]	; 0x74
  72:	9028      	str	r0, [sp, #160]	; 0xa0
  74:	981e      	ldr	r0, [sp, #120]	; 0x78
  76:	9029      	str	r0, [sp, #164]	; 0xa4
  78:	9827      	ldr	r0, [sp, #156]	; 0x9c
  7a:	f240 0100 	movw	r1, #0
  7e:	f2c0 0100 	movt	r1, #0
  82:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  86:	9007      	str	r0, [sp, #28]
  88:	9106      	str	r1, [sp, #24]
  8a:	e7ff      	b.n	8c <mynewt::encoding::coap_context::CoapContext::check_result+0x8c>
  8c:	9828      	ldr	r0, [sp, #160]	; 0xa0
  8e:	f240 0100 	movw	r1, #0
  92:	f2c0 0100 	movt	r1, #0
  96:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  9a:	9005      	str	r0, [sp, #20]
  9c:	9104      	str	r1, [sp, #16]
  9e:	e7ff      	b.n	a0 <mynewt::encoding::coap_context::CoapContext::check_result+0xa0>
  a0:	9829      	ldr	r0, [sp, #164]	; 0xa4
  a2:	f240 0100 	movw	r1, #0
  a6:	f2c0 0100 	movt	r1, #0
  aa:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  ae:	9003      	str	r0, [sp, #12]
  b0:	9102      	str	r1, [sp, #8]
  b2:	e7ff      	b.n	b4 <mynewt::encoding::coap_context::CoapContext::check_result+0xb4>
  b4:	9807      	ldr	r0, [sp, #28]
  b6:	9016      	str	r0, [sp, #88]	; 0x58
  b8:	9906      	ldr	r1, [sp, #24]
  ba:	9117      	str	r1, [sp, #92]	; 0x5c
  bc:	9a05      	ldr	r2, [sp, #20]
  be:	9218      	str	r2, [sp, #96]	; 0x60
  c0:	9b04      	ldr	r3, [sp, #16]
  c2:	9319      	str	r3, [sp, #100]	; 0x64
  c4:	f8dd c00c 	ldr.w	ip, [sp, #12]
  c8:	f8cd c068 	str.w	ip, [sp, #104]	; 0x68
  cc:	f8dd e008 	ldr.w	lr, [sp, #8]
  d0:	f8cd e06c 	str.w	lr, [sp, #108]	; 0x6c
  d4:	466c      	mov	r4, sp
  d6:	2503      	movs	r5, #3
  d8:	6025      	str	r5, [r4, #0]
  da:	f240 0100 	movw	r1, #0
  de:	f2c0 0100 	movt	r1, #0
  e2:	a810      	add	r0, sp, #64	; 0x40
  e4:	ab16      	add	r3, sp, #88	; 0x58
  e6:	462a      	mov	r2, r5
  e8:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  ec:	e7ff      	b.n	2 <mynewt::encoding::coap_context::CoapContext::check_result+0x2>
  ee:	f240 0100 	movw	r1, #0
  f2:	f2c0 0100 	movt	r1, #0
  f6:	a810      	add	r0, sp, #64	; 0x40
  f8:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  fc:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext4fail17h060d8a703f8f2c9bE:

00000000 <mynewt::encoding::coap_context::CoapContext::fail>:
_ZN6mynewt8encoding12coap_context11CoapContext4fail17h060d8a703f8f2c9bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:128

    /// Fail the encoding with an error
    pub fn fail(&mut self, err: CoapError) {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0aa      	sub	sp, #168	; 0xa8
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	900a      	str	r0, [sp, #40]	; 0x28
   a:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
   e:	f10d 002f 	add.w	r0, sp, #47	; 0x2f
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:129
        assert_eq!(err, CoapError::OK, "enc fail");
  12:	900c      	str	r0, [sp, #48]	; 0x30
  14:	f240 0000 	movw	r0, #0
  18:	f2c0 0000 	movt	r0, #0
  1c:	900d      	str	r0, [sp, #52]	; 0x34
  1e:	980c      	ldr	r0, [sp, #48]	; 0x30
  20:	900e      	str	r0, [sp, #56]	; 0x38
  22:	980d      	ldr	r0, [sp, #52]	; 0x34
  24:	900f      	str	r0, [sp, #60]	; 0x3c
  26:	980e      	ldr	r0, [sp, #56]	; 0x38
  28:	990f      	ldr	r1, [sp, #60]	; 0x3c
  2a:	9209      	str	r2, [sp, #36]	; 0x24
  2c:	9308      	str	r3, [sp, #32]
  2e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::fail>
  32:	9007      	str	r0, [sp, #28]
  34:	e7ff      	b.n	36 <mynewt::encoding::coap_context::CoapContext::fail+0x36>
  36:	9807      	ldr	r0, [sp, #28]
  38:	07c1      	lsls	r1, r0, #31
  3a:	2900      	cmp	r1, #0
  3c:	d163      	bne.n	106 <mynewt::encoding::coap_context::CoapContext::fail+0x106>
  3e:	e7ff      	b.n	40 <mynewt::encoding::coap_context::CoapContext::fail+0x40>
  40:	980e      	ldr	r0, [sp, #56]	; 0x38
  42:	901f      	str	r0, [sp, #124]	; 0x7c
  44:	980f      	ldr	r0, [sp, #60]	; 0x3c
  46:	9020      	str	r0, [sp, #128]	; 0x80
  48:	4668      	mov	r0, sp
  4a:	2100      	movs	r1, #0
  4c:	6001      	str	r1, [r0, #0]
  4e:	f240 0100 	movw	r1, #0
  52:	f2c0 0100 	movt	r1, #0
  56:	f240 0300 	movw	r3, #0
  5a:	f2c0 0300 	movt	r3, #0
  5e:	a821      	add	r0, sp, #132	; 0x84
  60:	2201      	movs	r2, #1
  62:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  66:	e7ff      	b.n	68 <mynewt::encoding::coap_context::CoapContext::fail+0x68>
  68:	a81f      	add	r0, sp, #124	; 0x7c
  6a:	901c      	str	r0, [sp, #112]	; 0x70
  6c:	a820      	add	r0, sp, #128	; 0x80
  6e:	901d      	str	r0, [sp, #116]	; 0x74
  70:	a821      	add	r0, sp, #132	; 0x84
  72:	901e      	str	r0, [sp, #120]	; 0x78
  74:	981c      	ldr	r0, [sp, #112]	; 0x70
  76:	9027      	str	r0, [sp, #156]	; 0x9c
  78:	981d      	ldr	r0, [sp, #116]	; 0x74
  7a:	9028      	str	r0, [sp, #160]	; 0xa0
  7c:	981e      	ldr	r0, [sp, #120]	; 0x78
  7e:	9029      	str	r0, [sp, #164]	; 0xa4
  80:	9827      	ldr	r0, [sp, #156]	; 0x9c
  82:	f240 0100 	movw	r1, #0
  86:	f2c0 0100 	movt	r1, #0
  8a:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  8e:	9006      	str	r0, [sp, #24]
  90:	9105      	str	r1, [sp, #20]
  92:	e7ff      	b.n	94 <mynewt::encoding::coap_context::CoapContext::fail+0x94>
  94:	9828      	ldr	r0, [sp, #160]	; 0xa0
  96:	f240 0100 	movw	r1, #0
  9a:	f2c0 0100 	movt	r1, #0
  9e:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  a2:	9004      	str	r0, [sp, #16]
  a4:	9103      	str	r1, [sp, #12]
  a6:	e7ff      	b.n	a8 <mynewt::encoding::coap_context::CoapContext::fail+0xa8>
  a8:	9829      	ldr	r0, [sp, #164]	; 0xa4
  aa:	f240 0100 	movw	r1, #0
  ae:	f2c0 0100 	movt	r1, #0
  b2:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  b6:	9002      	str	r0, [sp, #8]
  b8:	9101      	str	r1, [sp, #4]
  ba:	e7ff      	b.n	bc <mynewt::encoding::coap_context::CoapContext::fail+0xbc>
  bc:	9806      	ldr	r0, [sp, #24]
  be:	9016      	str	r0, [sp, #88]	; 0x58
  c0:	9905      	ldr	r1, [sp, #20]
  c2:	9117      	str	r1, [sp, #92]	; 0x5c
  c4:	9a04      	ldr	r2, [sp, #16]
  c6:	9218      	str	r2, [sp, #96]	; 0x60
  c8:	9b03      	ldr	r3, [sp, #12]
  ca:	9319      	str	r3, [sp, #100]	; 0x64
  cc:	f8dd c008 	ldr.w	ip, [sp, #8]
  d0:	f8cd c068 	str.w	ip, [sp, #104]	; 0x68
  d4:	f8dd e004 	ldr.w	lr, [sp, #4]
  d8:	f8cd e06c 	str.w	lr, [sp, #108]	; 0x6c
  dc:	466c      	mov	r4, sp
  de:	2503      	movs	r5, #3
  e0:	6025      	str	r5, [r4, #0]
  e2:	f240 0100 	movw	r1, #0
  e6:	f2c0 0100 	movt	r1, #0
  ea:	a810      	add	r0, sp, #64	; 0x40
  ec:	ab16      	add	r3, sp, #88	; 0x58
  ee:	462a      	mov	r2, r5
  f0:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  f4:	e7ff      	b.n	2 <mynewt::encoding::coap_context::CoapContext::fail+0x2>
  f6:	f240 0100 	movw	r1, #0
  fa:	f2c0 0100 	movt	r1, #0
  fe:	a810      	add	r0, sp, #64	; 0x40
 100:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 104:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:130
    }
 106:	b02a      	add	sp, #168	; 0xa8
 108:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h69d954fe1672413fE:

00000000 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>:
_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h69d954fe1672413fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:133

    /// Cast itself as a `*mut c_void`
    pub fn to_void_ptr(&mut self) -> *mut c_void {
   0:	b083      	sub	sp, #12
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:134
        let ptr: *mut CoapContext = self;
   6:	9801      	ldr	r0, [sp, #4]
   8:	9002      	str	r0, [sp, #8]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:135
        ptr as *mut c_void
   a:	9802      	ldr	r0, [sp, #8]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:136
    }
   c:	9100      	str	r1, [sp, #0]
   e:	b003      	add	sp, #12
  10:	4770      	bx	lr

Disassembly of section .text._ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17he322045163dc43dcE:

00000000 <<[u8] as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>:
_ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17he322045163dc43dcE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:157
}

/// Convert the type to array of bytes that may or may not end with null
impl ToBytesOptionalNull for [u8] {
    /// Convert the type to array of bytes that may or may not end with null
    fn to_bytes_optional_nul(&self) -> &[u8] {
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:158
        self
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:159
    }
   e:	9201      	str	r2, [sp, #4]
  10:	9300      	str	r3, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17hb05d971bf5bb80b5E:

00000000 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>:
_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17hb05d971bf5bb80b5E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:165
}

/// Convert the type to array of bytes that may or may not end with null
impl ToBytesOptionalNull for str {
    /// Convert the type to array of bytes that may or may not end with null
    fn to_bytes_optional_nul(&self) -> &[u8] {
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:166
        self.as_bytes()
   a:	9804      	ldr	r0, [sp, #16]
   c:	9905      	ldr	r1, [sp, #20]
   e:	9006      	str	r0, [sp, #24]
  10:	9107      	str	r1, [sp, #28]
_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h63ffb0f526205321E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2143
  12:	9806      	ldr	r0, [sp, #24]
  14:	9907      	ldr	r1, [sp, #28]
  16:	9008      	str	r0, [sp, #32]
  18:	9109      	str	r1, [sp, #36]	; 0x24
  1a:	9808      	ldr	r0, [sp, #32]
  1c:	9909      	ldr	r1, [sp, #36]	; 0x24
_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17hb05d971bf5bb80b5E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:166
  1e:	9203      	str	r2, [sp, #12]
  20:	9302      	str	r3, [sp, #8]
  22:	9001      	str	r0, [sp, #4]
  24:	9100      	str	r1, [sp, #0]
  26:	e7ff      	b.n	28 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x28>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:167
    }
  28:	9801      	ldr	r0, [sp, #4]
  2a:	9900      	ldr	r1, [sp, #0]
  2c:	b00a      	add	sp, #40	; 0x28
  2e:	4770      	bx	lr

Disassembly of section .text._ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h751057fbbd44e2dcE:

00000000 <<&str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>:
_ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h751057fbbd44e2dcE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:173
}

/// Convert the type to array of bytes that may or may not end with null
impl ToBytesOptionalNull for &str {
    /// Convert the type to array of bytes that may or may not end with null
    fn to_bytes_optional_nul(&self) -> &[u8] {
   0:	b088      	sub	sp, #32
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:174
        self.as_bytes()
   6:	9803      	ldr	r0, [sp, #12]
   8:	6802      	ldr	r2, [r0, #0]
   a:	6840      	ldr	r0, [r0, #4]
   c:	9204      	str	r2, [sp, #16]
   e:	9005      	str	r0, [sp, #20]
_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h63ffb0f526205321E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2143
  10:	9804      	ldr	r0, [sp, #16]
  12:	9a05      	ldr	r2, [sp, #20]
  14:	9006      	str	r0, [sp, #24]
  16:	9207      	str	r2, [sp, #28]
  18:	9806      	ldr	r0, [sp, #24]
  1a:	9a07      	ldr	r2, [sp, #28]
_ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h751057fbbd44e2dcE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:174
  1c:	9102      	str	r1, [sp, #8]
  1e:	9001      	str	r0, [sp, #4]
  20:	9200      	str	r2, [sp, #0]
  22:	e7ff      	b.n	24 <<&str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x24>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:175
    }
  24:	9801      	ldr	r0, [sp, #4]
  26:	9900      	ldr	r1, [sp, #0]
  28:	b008      	add	sp, #32
  2a:	4770      	bx	lr

Disassembly of section .text._ZN82_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6da722bd75e9643bE:

00000000 <<mynewt::encoding::coap_context::CoapError as core::cmp::PartialEq>::eq>:
_ZN82_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..cmp..PartialEq$GT$2eq17h6da722bd75e9643bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:140
#[derive(Debug, PartialEq)]
   0:	b092      	sub	sp, #72	; 0x48
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9007      	str	r0, [sp, #28]
   8:	9108      	str	r1, [sp, #32]
   a:	9807      	ldr	r0, [sp, #28]
   c:	7800      	ldrb	r0, [r0, #0]
   e:	2100      	movs	r1, #0
  10:	910f      	str	r1, [sp, #60]	; 0x3c
  12:	900e      	str	r0, [sp, #56]	; 0x38
  14:	980e      	ldr	r0, [sp, #56]	; 0x38
  16:	990f      	ldr	r1, [sp, #60]	; 0x3c
  18:	9206      	str	r2, [sp, #24]
  1a:	9305      	str	r3, [sp, #20]
  1c:	9004      	str	r0, [sp, #16]
  1e:	9103      	str	r1, [sp, #12]
  20:	e7ff      	b.n	22 <<mynewt::encoding::coap_context::CoapError as core::cmp::PartialEq>::eq+0x22>
  22:	9804      	ldr	r0, [sp, #16]
  24:	900a      	str	r0, [sp, #40]	; 0x28
  26:	9908      	ldr	r1, [sp, #32]
  28:	7809      	ldrb	r1, [r1, #0]
  2a:	2200      	movs	r2, #0
  2c:	9211      	str	r2, [sp, #68]	; 0x44
  2e:	9110      	str	r1, [sp, #64]	; 0x40
  30:	9910      	ldr	r1, [sp, #64]	; 0x40
  32:	9a11      	ldr	r2, [sp, #68]	; 0x44
  34:	9102      	str	r1, [sp, #8]
  36:	9201      	str	r2, [sp, #4]
  38:	e7ff      	b.n	3a <<mynewt::encoding::coap_context::CoapError as core::cmp::PartialEq>::eq+0x3a>
  3a:	9802      	ldr	r0, [sp, #8]
  3c:	900b      	str	r0, [sp, #44]	; 0x2c
  3e:	990a      	ldr	r1, [sp, #40]	; 0x28
  40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  42:	4291      	cmp	r1, r2
  44:	d108      	bne.n	58 <<mynewt::encoding::coap_context::CoapError as core::cmp::PartialEq>::eq+0x58>
  46:	e7ff      	b.n	48 <<mynewt::encoding::coap_context::CoapError as core::cmp::PartialEq>::eq+0x48>
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9908      	ldr	r1, [sp, #32]
  4c:	900c      	str	r0, [sp, #48]	; 0x30
  4e:	910d      	str	r1, [sp, #52]	; 0x34
  50:	2001      	movs	r0, #1
  52:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  56:	e003      	b.n	60 <<mynewt::encoding::coap_context::CoapError as core::cmp::PartialEq>::eq+0x60>
  58:	2000      	movs	r0, #0
  5a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  5e:	e7ff      	b.n	60 <<mynewt::encoding::coap_context::CoapError as core::cmp::PartialEq>::eq+0x60>
  60:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  64:	b012      	add	sp, #72	; 0x48
  66:	4770      	bx	lr

Disassembly of section .text._ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17h06dcdae20cda8b1dE:

00000000 <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt>:
_ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17h06dcdae20cda8b1dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:140
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	7800      	ldrb	r0, [r0, #0]
  14:	07c1      	lsls	r1, r0, #31
  16:	2900      	cmp	r1, #0
  18:	9203      	str	r2, [sp, #12]
  1a:	9302      	str	r3, [sp, #8]
  1c:	9001      	str	r0, [sp, #4]
  1e:	d005      	beq.n	2c <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x2c>
  20:	e7ff      	b.n	22 <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x22>
  22:	9801      	ldr	r0, [sp, #4]
  24:	2801      	cmp	r0, #1
  26:	d012      	beq.n	4e <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x4e>
  28:	e7ff      	b.n	2a <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x2a>
  2a:	defe      	udf	#254	; 0xfe
  2c:	9905      	ldr	r1, [sp, #20]
  2e:	f240 0200 	movw	r2, #0
  32:	f2c0 0200 	movt	r2, #0
  36:	a808      	add	r0, sp, #32
  38:	2302      	movs	r3, #2
  3a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  3e:	e7ff      	b.n	40 <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x40>
  40:	a808      	add	r0, sp, #32
  42:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  46:	f88d 001b 	strb.w	r0, [sp, #27]
  4a:	e7ff      	b.n	4c <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x4c>
  4c:	e010      	b.n	70 <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x70>
  4e:	9905      	ldr	r1, [sp, #20]
  50:	f240 0200 	movw	r2, #0
  54:	f2c0 0200 	movt	r2, #0
  58:	a80b      	add	r0, sp, #44	; 0x2c
  5a:	230e      	movs	r3, #14
  5c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  60:	e7ff      	b.n	62 <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x62>
  62:	a80b      	add	r0, sp, #44	; 0x2c
  64:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  68:	f88d 001b 	strb.w	r0, [sp, #27]
  6c:	e7ff      	b.n	6e <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x6e>
  6e:	e7ff      	b.n	70 <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x70>
  70:	f89d 001b 	ldrb.w	r0, [sp, #27]
  74:	b00e      	add	sp, #56	; 0x38
  76:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.1mcd3vje3zvwnje.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 1mcd3vje3zvwnje
000000f8 l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000087 l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
000000e3 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
00000104 l       .debug_str	00000000 
00000108 l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000000 l    d  .text._ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$9add_usize17he588ae2aecfa2f7eE	00000000 .text._ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$9add_usize17he588ae2aecfa2f7eE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$9add_usize17he588ae2aecfa2f7eE	00000054 .hidden <u32 as core::iter::range::Step>::add_usize
00000000         *UND*	00000000 .hidden core::num::ptr_try_from_impls::<impl core::convert::TryFrom<usize> for u32>::try_from
00000000         *UND*	00000000 .hidden core::num::<impl u32>::checked_add



Disassembly of section .text._ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$9add_usize17he588ae2aecfa2f7eE:

00000000 <<u32 as core::iter::range::Step>::add_usize>:
_ZN47_$LT$u32$u20$as$u20$core..iter..range..Step$GT$9add_usize17he588ae2aecfa2f7eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:88
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9003      	str	r0, [sp, #12]
   a:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:89
   c:	9804      	ldr	r0, [sp, #16]
   e:	9202      	str	r2, [sp, #8]
  10:	9301      	str	r3, [sp, #4]
  12:	f7ff fffe 	bl	0 <core::num::ptr_try_from_impls::<impl core::convert::TryFrom<usize> for u32>::try_from>
  16:	9108      	str	r1, [sp, #32]
  18:	9007      	str	r0, [sp, #28]
  1a:	e7ff      	b.n	1c <<u32 as core::iter::range::Step>::add_usize+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:90
  1c:	9807      	ldr	r0, [sp, #28]
  1e:	2800      	cmp	r0, #0
  20:	9000      	str	r0, [sp, #0]
  22:	d005      	beq.n	30 <<u32 as core::iter::range::Step>::add_usize+0x30>
  24:	e7ff      	b.n	26 <<u32 as core::iter::range::Step>::add_usize+0x26>
  26:	9800      	ldr	r0, [sp, #0]
  28:	2801      	cmp	r0, #1
  2a:	d00c      	beq.n	46 <<u32 as core::iter::range::Step>::add_usize+0x46>
  2c:	e7ff      	b.n	2e <<u32 as core::iter::range::Step>::add_usize+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:93
  2e:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:90
  30:	9808      	ldr	r0, [sp, #32]
  32:	9009      	str	r0, [sp, #36]	; 0x24
  34:	9803      	ldr	r0, [sp, #12]
  36:	6800      	ldr	r0, [r0, #0]
  38:	9909      	ldr	r1, [sp, #36]	; 0x24
  3a:	f7ff fffe 	bl	0 <core::num::<impl u32>::checked_add>
  3e:	9106      	str	r1, [sp, #24]
  40:	9005      	str	r0, [sp, #20]
  42:	e7ff      	b.n	44 <<u32 as core::iter::range::Step>::add_usize+0x44>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:89
  44:	e002      	b.n	4c <<u32 as core::iter::range::Step>::add_usize+0x4c>
  46:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:91
  48:	9005      	str	r0, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:89
  4a:	e7ff      	b.n	4c <<u32 as core::iter::range::Step>::add_usize+0x4c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:93
  4c:	9805      	ldr	r0, [sp, #20]
  4e:	9906      	ldr	r1, [sp, #24]
  50:	b00a      	add	sp, #40	; 0x28
  52:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.208map9ucpri05fl.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 208map9ucpri05fl
000010eb l       .debug_str	00000000 
0000237f l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
000000be l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000cd l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000d7 l       .debug_str	00000000 
000000e3 l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000f2 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
00000170 l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
00000177 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
000001dd l       .debug_str	00000000 
000001e8 l       .debug_str	00000000 
0000022f l       .debug_str	00000000 
0000027e l       .debug_str	00000000 
00000288 l       .debug_str	00000000 
000002c5 l       .debug_str	00000000 
0000030a l       .debug_str	00000000 
00000313 l       .debug_str	00000000 
00000323 l       .debug_str	00000000 
0000032b l       .debug_str	00000000 
00000380 l       .debug_str	00000000 
000003dd l       .debug_str	00000000 
000003e9 l       .debug_str	00000000 
000003f2 l       .debug_str	00000000 
000003fe l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
00000413 l       .debug_str	00000000 
0000041b l       .debug_str	00000000 
00000425 l       .debug_str	00000000 
0000042d l       .debug_str	00000000 
00000437 l       .debug_str	00000000 
0000044c l       .debug_str	00000000 
00000453 l       .debug_str	00000000 
00000473 l       .debug_str	00000000 
0000047a l       .debug_str	00000000 
00000482 l       .debug_str	00000000 
0000048c l       .debug_str	00000000 
00000497 l       .debug_str	00000000 
000004a0 l       .debug_str	00000000 
000004ab l       .debug_str	00000000 
000004b7 l       .debug_str	00000000 
000004bb l       .debug_str	00000000 
000004c4 l       .debug_str	00000000 
000004cb l       .debug_str	00000000 
000004d3 l       .debug_str	00000000 
000004db l       .debug_str	00000000 
000004e5 l       .debug_str	00000000 
000004eb l       .debug_str	00000000 
000004f2 l       .debug_str	00000000 
000004f9 l       .debug_str	00000000 
00000526 l       .debug_str	00000000 
0000055b l       .debug_str	00000000 
00000561 l       .debug_str	00000000 
00000567 l       .debug_str	00000000 
00000576 l       .debug_str	00000000 
00000586 l       .debug_str	00000000 
00000596 l       .debug_str	00000000 
0000059e l       .debug_str	00000000 
000005c7 l       .debug_str	00000000 
00000625 l       .debug_str	00000000 
0000068b l       .debug_str	00000000 
00000692 l       .debug_str	00000000 
0000069a l       .debug_str	00000000 
000006a3 l       .debug_str	00000000 
000006c1 l       .debug_str	00000000 
000006d1 l       .debug_str	00000000 
000006df l       .debug_str	00000000 
000006ea l       .debug_str	00000000 
000006f7 l       .debug_str	00000000 
00000706 l       .debug_str	00000000 
0000071c l       .debug_str	00000000 
00000726 l       .debug_str	00000000 
0000072f l       .debug_str	00000000 
00000738 l       .debug_str	00000000 
0000075e l       .debug_str	00000000 
00000774 l       .debug_str	00000000 
0000077f l       .debug_str	00000000 
00000795 l       .debug_str	00000000 
0000079d l       .debug_str	00000000 
000007be l       .debug_str	00000000 
000007d5 l       .debug_str	00000000 
000007da l       .debug_str	00000000 
000007e2 l       .debug_str	00000000 
000007eb l       .debug_str	00000000 
000007f4 l       .debug_str	00000000 
000007fd l       .debug_str	00000000 
00000805 l       .debug_str	00000000 
00000809 l       .debug_str	00000000 
00000810 l       .debug_str	00000000 
0000081c l       .debug_str	00000000 
00000827 l       .debug_str	00000000 
0000082f l       .debug_str	00000000 
00000837 l       .debug_str	00000000 
00000861 l       .debug_str	00000000 
000008dd l       .debug_str	00000000 
00000961 l       .debug_str	00000000 
00000a5d l       .debug_str	00000000 
00000b61 l       .debug_str	00000000 
00000b6f l       .debug_str	00000000 
00000b7a l       .debug_str	00000000 
00000b84 l       .debug_str	00000000 
00000b98 l       .debug_str	00000000 
00000ba3 l       .debug_str	00000000 
00000bd1 l       .debug_str	00000000 
00000c4c l       .debug_str	00000000 
00000ccf l       .debug_str	00000000 
00000cdd l       .debug_str	00000000 
00000d3c l       .debug_str	00000000 
00000da3 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000dc9 l       .debug_str	00000000 
00000dd8 l       .debug_str	00000000 
00000ddc l       .debug_str	00000000 
00000de3 l       .debug_str	00000000 
00000de9 l       .debug_str	00000000 
00000ded l       .debug_str	00000000 
00000df3 l       .debug_str	00000000 
00000df9 l       .debug_str	00000000 
00000e05 l       .debug_str	00000000 
00000e0d l       .debug_str	00000000 
00000e13 l       .debug_str	00000000 
00000e1b l       .debug_str	00000000 
00000e21 l       .debug_str	00000000 
00000e44 l       .debug_str	00000000 
00000e54 l       .debug_str	00000000 
00000e87 l       .debug_str	00000000 
00000ec7 l       .debug_str	00000000 
00000f0f l       .debug_str	00000000 
00000f13 l       .debug_str	00000000 
00000f19 l       .debug_str	00000000 
00000f1f l       .debug_str	00000000 
00000f25 l       .debug_str	00000000 
00000f37 l       .debug_str	00000000 
00000f6c l       .debug_str	00000000 
00000fae l       .debug_str	00000000 
00000ff8 l       .debug_str	00000000 
00000ffc l       .debug_str	00000000 
00001002 l       .debug_str	00000000 
00001008 l       .debug_str	00000000 
0000100e l       .debug_str	00000000 
00001020 l       .debug_str	00000000 
00001055 l       .debug_str	00000000 
00001097 l       .debug_str	00000000 
000010e1 l       .debug_str	00000000 
000010e5 l       .debug_str	00000000 
00002351 l       .debug_str	00000000 
000010f1 l       .debug_str	00000000 
000010f7 l       .debug_str	00000000 
000010fd l       .debug_str	00000000 
0000110e l       .debug_str	00000000 
00001142 l       .debug_str	00000000 
00001183 l       .debug_str	00000000 
000011cc l       .debug_str	00000000 
000011d1 l       .debug_str	00000000 
000011d6 l       .debug_str	00000000 
000011da l       .debug_str	00000000 
000011e0 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000011ec l       .debug_str	00000000 
000011fd l       .debug_str	00000000 
00001231 l       .debug_str	00000000 
00001272 l       .debug_str	00000000 
000012bb l       .debug_str	00000000 
000012bf l       .debug_str	00000000 
000012c8 l       .debug_str	00000000 
000012d9 l       .debug_str	00000000 
0000130d l       .debug_str	00000000 
0000134e l       .debug_str	00000000 
00001397 l       .debug_str	00000000 
0000139c l       .debug_str	00000000 
000013a0 l       .debug_str	00000000 
000013a9 l       .debug_str	00000000 
000013b0 l       .debug_str	00000000 
000013b8 l       .debug_str	00000000 
000013ca l       .debug_str	00000000 
000013ff l       .debug_str	00000000 
00001441 l       .debug_str	00000000 
0000148b l       .debug_str	00000000 
0000148f l       .debug_str	00000000 
00001495 l       .debug_str	00000000 
0000149b l       .debug_str	00000000 
000014a1 l       .debug_str	00000000 
000014a7 l       .debug_str	00000000 
000014af l       .debug_str	00000000 
000014bd l       .debug_str	00000000 
000014cc l       .debug_str	00000000 
000014dd l       .debug_str	00000000 
000014e8 l       .debug_str	00000000 
000014f3 l       .debug_str	00000000 
000014fe l       .debug_str	00000000 
00001505 l       .debug_str	00000000 
00001528 l       .debug_str	00000000 
0000153a l       .debug_str	00000000 
0000156f l       .debug_str	00000000 
000015b1 l       .debug_str	00000000 
000015fb l       .debug_str	00000000 
000015ff l       .debug_str	00000000 
00001609 l       .debug_str	00000000 
0000161b l       .debug_str	00000000 
00001650 l       .debug_str	00000000 
00001692 l       .debug_str	00000000 
000016dc l       .debug_str	00000000 
000016e1 l       .debug_str	00000000 
000016eb l       .debug_str	00000000 
000016fd l       .debug_str	00000000 
00001732 l       .debug_str	00000000 
00001774 l       .debug_str	00000000 
000017be l       .debug_str	00000000 
000017d2 l       .debug_str	00000000 
000017d6 l       .debug_str	00000000 
000017e4 l       .debug_str	00000000 
000017f4 l       .debug_str	00000000 
000017fd l       .debug_str	00000000 
00001808 l       .debug_str	00000000 
00001817 l       .debug_str	00000000 
0000182c l       .debug_str	00000000 
0000185d l       .debug_str	00000000 
000018fa l       .debug_str	00000000 
0000199f l       .debug_str	00000000 
000019aa l       .debug_str	00000000 
000019b3 l       .debug_str	00000000 
000019d4 l       .debug_str	00000000 
000019e7 l       .debug_str	00000000 
00001a1d l       .debug_str	00000000 
00001aa0 l       .debug_str	00000000 
00001b2b l       .debug_str	00000000 
00001b47 l       .debug_str	00000000 
00001b93 l       .debug_str	00000000 
00001be7 l       .debug_str	00000000 
00001c04 l       .debug_str	00000000 
00001c18 l       .debug_str	00000000 
00001c64 l       .debug_str	00000000 
00001cb8 l       .debug_str	00000000 
00001cce l       .debug_str	00000000 
00001ce2 l       .debug_str	00000000 
00001d29 l       .debug_str	00000000 
00001d78 l       .debug_str	00000000 
00001d81 l       .debug_str	00000000 
00001d8f l       .debug_str	00000000 
00001dc0 l       .debug_str	00000000 
00001dc6 l       .debug_str	00000000 
00001dce l       .debug_str	00000000 
00001dd5 l       .debug_str	00000000 
00001ddd l       .debug_str	00000000 
00001de8 l       .debug_str	00000000 
00001df0 l       .debug_str	00000000 
00001dff l       .debug_str	00000000 
00001e03 l       .debug_str	00000000 
00001e0e l       .debug_str	00000000 
00001e1a l       .debug_str	00000000 
00001e25 l       .debug_str	00000000 
00001e36 l       .debug_str	00000000 
00001e3c l       .debug_str	00000000 
00001e44 l       .debug_str	00000000 
00001e4b l       .debug_str	00000000 
00001e55 l       .debug_str	00000000 
00001e5d l       .debug_str	00000000 
00001e65 l       .debug_str	00000000 
00001e87 l       .debug_str	00000000 
00001e92 l       .debug_str	00000000 
00001e9e l       .debug_str	00000000 
00001ea6 l       .debug_str	00000000 
00001eaf l       .debug_str	00000000 
00001eba l       .debug_str	00000000 
00001ec1 l       .debug_str	00000000 
00001ecc l       .debug_str	00000000 
00001ed7 l       .debug_str	00000000 
00001ee7 l       .debug_str	00000000 
00001ef1 l       .debug_str	00000000 
00001ef7 l       .debug_str	00000000 
00001f19 l       .debug_str	00000000 
00001f51 l       .debug_str	00000000 
00001f91 l       .debug_str	00000000 
00001f98 l       .debug_str	00000000 
00001fa0 l       .debug_str	00000000 
00001fb7 l       .debug_str	00000000 
00001fc0 l       .debug_str	00000000 
00001fd0 l       .debug_str	00000000 
00001fdf l       .debug_str	00000000 
00001fe7 l       .debug_str	00000000 
00001fee l       .debug_str	00000000 
00001ff6 l       .debug_str	00000000 
00002014 l       .debug_str	00000000 
00002024 l       .debug_str	00000000 
00002057 l       .debug_str	00000000 
0000206c l       .debug_str	00000000 
00002075 l       .debug_str	00000000 
000020d2 l       .debug_str	00000000 
00002137 l       .debug_str	00000000 
00002141 l       .debug_str	00000000 
00002151 l       .debug_str	00000000 
00002166 l       .debug_str	00000000 
0000216e l       .debug_str	00000000 
000021d2 l       .debug_str	00000000 
0000223e l       .debug_str	00000000 
00002245 l       .debug_str	00000000 
0000224d l       .debug_str	00000000 
0000226b l       .debug_str	00000000 
0000227b l       .debug_str	00000000 
000022ae l       .debug_str	00000000 
000022c3 l       .debug_str	00000000 
000022d6 l       .debug_str	00000000 
000022eb l       .debug_str	00000000 
000022f2 l       .debug_str	00000000 
00002307 l       .debug_str	00000000 
00002384 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h2fb6a3a5463e515aE	00000000 .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h2fb6a3a5463e515aE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h2fb6a3a5463e515aE	00000026 core::ptr::<impl *mut T>::is_null
00000000         *UND*	00000000 core::ptr::null_mut



Disassembly of section .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h2fb6a3a5463e515aE:

00000000 <core::ptr::<impl *mut T>::is_null>:
_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h2fb6a3a5463e515aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1590
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1593
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	f7ff fffe 	bl	0 <core::ptr::null_mut>
  12:	9000      	str	r0, [sp, #0]
  14:	e7ff      	b.n	16 <core::ptr::<impl *mut T>::is_null+0x16>
  16:	9801      	ldr	r0, [sp, #4]
  18:	9900      	ldr	r1, [sp, #0]
  1a:	1a42      	subs	r2, r0, r1
  1c:	fab2 f282 	clz	r2, r2
  20:	0950      	lsrs	r0, r2, #5
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1594
  22:	b004      	add	sp, #16
  24:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.25zud6sfl6depydk.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 25zud6sfl6depydk
000002f7 l       .debug_str	00000000 
00000654 l       .debug_str	00000000 
00000649 l       .debug_str	00000000 
00000645 l       .debug_str	00000000 
000007d7 l       .debug_str	00000000 
00000637 l       .debug_str	00000000 
000007d0 l       .debug_str	00000000 
0000062d l       .debug_str	00000000 
0000061c l       .debug_str	00000000 
00000617 l       .debug_str	00000000 
000005fe l       .debug_str	00000000 
000005f2 l       .debug_str	00000000 
000007c5 l       .debug_str	00000000 
000005e6 l       .debug_str	00000000 
000007c1 l       .debug_str	00000000 
000005d2 l       .debug_str	00000000 
000007bb l       .debug_str	00000000 
000005cb l       .debug_str	00000000 
000005c3 l       .debug_str	00000000 
000005bb l       .debug_str	00000000 
000005b2 l       .debug_str	00000000 
000005ae l       .debug_str	00000000 
000007b5 l       .debug_str	00000000 
000005a7 l       .debug_str	00000000 
000007b0 l       .debug_str	00000000 
00000598 l       .debug_str	00000000 
00000595 l       .debug_str	00000000 
000007ab l       .debug_str	00000000 
0000058f l       .debug_str	00000000 
00000589 l       .debug_str	00000000 
00000584 l       .debug_str	00000000 
0000055d l       .debug_str	00000000 
00000795 l       .debug_str	00000000 
0000053e l       .debug_str	00000000 
0000051b l       .debug_str	00000000 
0000078b l       .debug_str	00000000 
00000512 l       .debug_str	00000000 
00000507 l       .debug_str	00000000 
00000772 l       .debug_str	00000000 
00000755 l       .debug_str	00000000 
0000074a l       .debug_str	00000000 
000006ec l       .debug_str	00000000 
000006d2 l       .debug_str	00000000 
000006c8 l       .debug_str	00000000 
000006ac l       .debug_str	00000000 
00000688 l       .debug_str	00000000 
00000501 l       .debug_str	00000000 
00000671 l       .debug_str	00000000 
000004fb l       .debug_str	00000000 
00000669 l       .debug_str	00000000 
000004f3 l       .debug_str	00000000 
000004e9 l       .debug_str	00000000 
00000665 l       .debug_str	00000000 
00000661 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000a3 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000d2 l       .debug_str	00000000 
000000df l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ec l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001f2 l       .debug_str	00000000 
000001fa l       .debug_str	00000000 
00000222 l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
00000254 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000289 l       .debug_str	00000000 
00000290 l       .debug_str	00000000 
000002b8 l       .debug_str	00000000 
000002bc l       .debug_str	00000000 
000002e9 l       .debug_str	00000000 
000002f2 l       .debug_str	00000000 
000004e3 l       .debug_str	00000000 
00000323 l       .debug_str	00000000 
0000032b l       .debug_str	00000000 
0000035b l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
00000393 l       .debug_str	00000000 
0000039c l       .debug_str	00000000 
000003d2 l       .debug_str	00000000 
000003e3 l       .debug_str	00000000 
000003e8 l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
000003f9 l       .debug_str	00000000 
000003ff l       .debug_str	00000000 
00000408 l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000413 l       .debug_str	00000000 
00000418 l       .debug_str	00000000 
0000041c l       .debug_str	00000000 
0000041e l       .debug_str	00000000 
00000423 l       .debug_str	00000000 
0000042f l       .debug_str	00000000 
0000044a l       .debug_str	00000000 
00000454 l       .debug_str	00000000 
00000459 l       .debug_str	00000000 
00000475 l       .debug_str	00000000 
0000047a l       .debug_str	00000000 
0000047f l       .debug_str	00000000 
00000486 l       .debug_str	00000000 
0000048b l       .debug_str	00000000 
00000497 l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
000004a8 l       .debug_str	00000000 
000004ad l       .debug_str	00000000 
000004b0 l       .debug_str	00000000 
000004b9 l       .debug_str	00000000 
000004c0 l       .debug_str	00000000 
000004c5 l       .debug_str	00000000 
000004ca l       .debug_str	00000000 
000004d0 l       .debug_str	00000000 
000004d6 l       .debug_str	00000000 
000004e0 l       .debug_str	00000000 
0000065b l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.11	00000008 .Lanon.dcf0e307b872f867193985cc118a5e4c.11
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.13	00000010 .Lanon.dcf0e307b872f867193985cc118a5e4c.13
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.14	00000018 .Lanon.dcf0e307b872f867193985cc118a5e4c.14
00000000 l     O .rodata.cst8	00000008 .Lanon.dcf0e307b872f867193985cc118a5e4c.15
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.16	00000018 .Lanon.dcf0e307b872f867193985cc118a5e4c.16
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.17	00000010 .Lanon.dcf0e307b872f867193985cc118a5e4c.17
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.18	00000018 .Lanon.dcf0e307b872f867193985cc118a5e4c.18
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.19	00000010 .Lanon.dcf0e307b872f867193985cc118a5e4c.19
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.2	00000018 .Lanon.dcf0e307b872f867193985cc118a5e4c.2
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.21	00000018 .Lanon.dcf0e307b872f867193985cc118a5e4c.21
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.22	00000010 .Lanon.dcf0e307b872f867193985cc118a5e4c.22
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.23	00000010 .Lanon.dcf0e307b872f867193985cc118a5e4c.23
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.24	00000010 .Lanon.dcf0e307b872f867193985cc118a5e4c.24
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.3	00000000 .Lanon.dcf0e307b872f867193985cc118a5e4c.3
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.4	00000001 .Lanon.dcf0e307b872f867193985cc118a5e4c.4
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.5	00000004 .Lanon.dcf0e307b872f867193985cc118a5e4c.5
00000000 l     O .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.9	00000018 .Lanon.dcf0e307b872f867193985cc118a5e4c.9
00000000 l     O .rodata.str.0	00000016 str.0
00000000 l     O .rodata.str.1	0000001c str.1
00000000 l     O .rodata.str.2	00000021 str.2
00000000 l    d  .text._ZN84_$LT$mynewt..Strn$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h130831040ce73c29E	00000000 .text._ZN84_$LT$mynewt..Strn$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h130831040ce73c29E
00000000 l    d  .text._ZN6mynewt7sysinit17hdf9acde92c8fdcd0E	00000000 .text._ZN6mynewt7sysinit17hdf9acde92c8fdcd0E
00000000 l    d  .text._ZN6mynewt4Strn3new17h7c61c05e22ecd5faE	00000000 .text._ZN6mynewt4Strn3new17h7c61c05e22ecd5faE
00000000 l    d  .text._ZN6mynewt4Strn9from_cstr17h9a7495b7f5601cb6E	00000000 .text._ZN6mynewt4Strn9from_cstr17h9a7495b7f5601cb6E
00000000 l    d  .text._ZN6mynewt4Strn6as_ptr17h2aca29768dacdb60E	00000000 .text._ZN6mynewt4Strn6as_ptr17h2aca29768dacdb60E
00000000 l    d  .text._ZN6mynewt4Strn3len17h86b1e18ee358b80eE	00000000 .text._ZN6mynewt4Strn3len17h86b1e18ee358b80eE
00000000 l    d  .text._ZN6mynewt4Strn8is_empty17haf426a9141c41dd7E	00000000 .text._ZN6mynewt4Strn8is_empty17haf426a9141c41dd7E
00000000 l    d  .text._ZN6mynewt4Strn7as_cstr17h98ad1a55a2bd4f4fE	00000000 .text._ZN6mynewt4Strn7as_cstr17h98ad1a55a2bd4f4fE
00000000 l    d  .text._ZN6mynewt4Strn10as_bytestr17h23484f1046d5601dE	00000000 .text._ZN6mynewt4Strn10as_bytestr17h23484f1046d5601dE
00000000 l    d  .text._ZN6mynewt4Strn8validate17hd35e7e1944abd306E	00000000 .text._ZN6mynewt4Strn8validate17hd35e7e1944abd306E
00000000 l    d  .text._ZN6mynewt4Strn16validate_bytestr17h9ca81f940cca9bf2E	00000000 .text._ZN6mynewt4Strn16validate_bytestr17h9ca81f940cca9bf2E
00000000 l    d  .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.0	00000000 .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.0
00000000 l    d  .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.1	00000000 .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.1
00000000 l    d  .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.4	00000000 .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.4
00000000 l    d  .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.6	00000000 .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.6
00000000 l    d  .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.7	00000000 .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.7
00000000 l    d  .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.8	00000000 .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.8
00000000 l    d  .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.10	00000000 .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.10
00000000 l    d  .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.12	00000000 .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.12
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata.str.2	00000000 .rodata.str.2
00000000 l    d  .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.20	00000000 .rodata..Lanon.dcf0e307b872f867193985cc118a5e4c.20
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 core::ptr::<impl *const T>::is_null
00000000         *UND*	00000000 core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000         *UND*	00000000 core::slice::<impl [T]>::last
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <core::fmt::Arguments as core::fmt::Display>::fmt
00000000         *UND*	00000000 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000 g     F .text._ZN6mynewt4Strn10as_bytestr17h23484f1046d5601dE	0000016c mynewt::Strn::as_bytestr
00000000 g     F .text._ZN6mynewt4Strn16validate_bytestr17h9ca81f940cca9bf2E	00000112 mynewt::Strn::validate_bytestr
00000000 g     F .text._ZN6mynewt4Strn3len17h86b1e18ee358b80eE	0000021e mynewt::Strn::len
00000000 g     F .text._ZN6mynewt4Strn3new17h7c61c05e22ecd5faE	00000136 mynewt::Strn::new
00000000 g     F .text._ZN6mynewt4Strn6as_ptr17h2aca29768dacdb60E	0000004e mynewt::Strn::as_ptr
00000000 g     F .text._ZN6mynewt4Strn7as_cstr17h98ad1a55a2bd4f4fE	0000014e mynewt::Strn::as_cstr
00000000 g     F .text._ZN6mynewt4Strn8is_empty17haf426a9141c41dd7E	00000020 mynewt::Strn::is_empty
00000000 g     F .text._ZN6mynewt4Strn8validate17hd35e7e1944abd306E	0000013c mynewt::Strn::validate
00000000 g     F .text._ZN6mynewt4Strn9from_cstr17h9a7495b7f5601cb6E	00000030 mynewt::Strn::from_cstr
00000000 g     F .text._ZN6mynewt7sysinit17hdf9acde92c8fdcd0E	00000010 mynewt::sysinit
00000000         *UND*	00000000 <core::option::Option<T> as core::cmp::PartialEq>::eq
00000000 g     F .text._ZN84_$LT$mynewt..Strn$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h130831040ce73c29E	0000006a <mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000         *UND*	00000000 rust_sysinit



Disassembly of section .text._ZN84_$LT$mynewt..Strn$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h130831040ce73c29E:

00000000 <<mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>:
_ZN84_$LT$mynewt..Strn$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h130831040ce73c29E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:189
}

/// Convert the type to array of bytes that may or may not end with null. Strn always ends with null.
impl ToBytesOptionalNull for crate::Strn {
    /// Convert the type to array of bytes that may or may not end with null. Strn always ends with null.
    fn to_bytes_optional_nul(&self) -> &[u8] {
   0:	b088      	sub	sp, #32
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:191
        match self.rep {
            StrnRep::ByteStr(bs) => { bs }
   6:	9802      	ldr	r0, [sp, #8]
   8:	7800      	ldrb	r0, [r0, #0]
   a:	07c2      	lsls	r2, r0, #31
   c:	2a00      	cmp	r2, #0
   e:	9101      	str	r1, [sp, #4]
  10:	9000      	str	r0, [sp, #0]
  12:	d006      	beq.n	22 <<mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x22>
  14:	e7ff      	b.n	16 <<mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x16>
  16:	9800      	ldr	r0, [sp, #0]
  18:	b2c1      	uxtb	r1, r0
  1a:	2901      	cmp	r1, #1
  1c:	d00b      	beq.n	36 <<mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x36>
  1e:	e7ff      	b.n	20 <<mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x20>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:195
            StrnRep::CStr(_cstr)  => { assert!(false, "strn bytes"); &[] }
            //  TODO: unsafe { ::core::mem::transmute::<*const u8, &[u8]>(cstr) }
        }
    }
  20:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:191
            StrnRep::ByteStr(bs) => { bs }
  22:	9802      	ldr	r0, [sp, #8]
  24:	6841      	ldr	r1, [r0, #4]
  26:	6880      	ldr	r0, [r0, #8]
  28:	9105      	str	r1, [sp, #20]
  2a:	9006      	str	r0, [sp, #24]
  2c:	9805      	ldr	r0, [sp, #20]
  2e:	9906      	ldr	r1, [sp, #24]
  30:	9003      	str	r0, [sp, #12]
  32:	9104      	str	r1, [sp, #16]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:190
        match self.rep {
  34:	e015      	b.n	62 <<mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x62>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:192
            StrnRep::CStr(_cstr)  => { assert!(false, "strn bytes"); &[] }
  36:	9802      	ldr	r0, [sp, #8]
  38:	6840      	ldr	r0, [r0, #4]
  3a:	9007      	str	r0, [sp, #28]
  3c:	2000      	movs	r0, #0
  3e:	2800      	cmp	r0, #0
  40:	d107      	bne.n	52 <<mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x52>
  42:	e7ff      	b.n	44 <<mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x44>
  44:	f240 0000 	movw	r0, #0
  48:	f2c0 0000 	movt	r0, #0
  4c:	f7ff fffe 	bl	0 <core::panicking::panic>
  50:	defe      	udf	#254	; 0xfe
  52:	f240 0000 	movw	r0, #0
  56:	f2c0 0000 	movt	r0, #0
  5a:	9003      	str	r0, [sp, #12]
  5c:	2000      	movs	r0, #0
  5e:	9004      	str	r0, [sp, #16]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:195
    }
  60:	e7ff      	b.n	62 <<mynewt::Strn as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x62>
  62:	9803      	ldr	r0, [sp, #12]
  64:	9904      	ldr	r1, [sp, #16]
  66:	b008      	add	sp, #32
  68:	4770      	bx	lr

Disassembly of section .text._ZN6mynewt7sysinit17hdf9acde92c8fdcd0E:

00000000 <mynewt::sysinit>:
_ZN6mynewt7sysinit17hdf9acde92c8fdcd0E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:37
#[allow(non_camel_case_types)]    //  Allow type names to have non-camel case
#[allow(non_upper_case_globals)]  //  Allow globals to have lowercase letters
pub mod libs;                     //  Mynewt Custom API. Export folder `libs` as Rust module `mynewt::libs`

///  Initialise the Mynewt system.  Start the Mynewt drivers and libraries.  Equivalent to `sysinit()` macro in C.
pub fn sysinit() {
   0:	b580      	push	{r7, lr}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:38
    unsafe { rust_sysinit(); }
   2:	f7ff fffe 	bl	0 <rust_sysinit>
   6:	e7ff      	b.n	2 <mynewt::sys::console::flush+0x2>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:39
    sys::console::flush();
   8:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
   c:	e7ff      	b.n	e <mynewt::sysinit+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:40
}
   e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4Strn3new17h7c61c05e22ecd5faE:

00000000 <mynewt::Strn::new>:
_ZN6mynewt4Strn3new17h7c61c05e22ecd5faE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:119
    /// Create a new `Strn` with a byte string. Fail if the last byte is not zero.
    /// ```
    /// Strn::new(b"network\0")
    /// strn!("network")
    /// ```
    pub fn new(bs: &'static [u8]) -> Strn {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0b0      	sub	sp, #192	; 0xc0
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	910c      	str	r1, [sp, #48]	; 0x30
   a:	920d      	str	r2, [sp, #52]	; 0x34
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:120
        assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
   c:	990c      	ldr	r1, [sp, #48]	; 0x30
   e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  10:	900b      	str	r0, [sp, #44]	; 0x2c
  12:	4608      	mov	r0, r1
  14:	4611      	mov	r1, r2
  16:	930a      	str	r3, [sp, #40]	; 0x28
  18:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  1c:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  20:	9010      	str	r0, [sp, #64]	; 0x40
  22:	e7ff      	b.n	24 <mynewt::Strn::new+0x24>
  24:	a810      	add	r0, sp, #64	; 0x40
  26:	900e      	str	r0, [sp, #56]	; 0x38
  28:	f240 0000 	movw	r0, #0
  2c:	f2c0 0000 	movt	r0, #0
  30:	900f      	str	r0, [sp, #60]	; 0x3c
  32:	980e      	ldr	r0, [sp, #56]	; 0x38
  34:	9011      	str	r0, [sp, #68]	; 0x44
  36:	980f      	ldr	r0, [sp, #60]	; 0x3c
  38:	9012      	str	r0, [sp, #72]	; 0x48
  3a:	9811      	ldr	r0, [sp, #68]	; 0x44
  3c:	9912      	ldr	r1, [sp, #72]	; 0x48
  3e:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::cmp::PartialEq>::eq>
  42:	9008      	str	r0, [sp, #32]
  44:	e7ff      	b.n	46 <mynewt::Strn::new+0x46>
  46:	9808      	ldr	r0, [sp, #32]
  48:	07c1      	lsls	r1, r0, #31
  4a:	2900      	cmp	r1, #0
  4c:	d163      	bne.n	116 <mynewt::Strn::new+0x116>
  4e:	e7ff      	b.n	50 <mynewt::Strn::new+0x50>
  50:	9811      	ldr	r0, [sp, #68]	; 0x44
  52:	9022      	str	r0, [sp, #136]	; 0x88
  54:	9812      	ldr	r0, [sp, #72]	; 0x48
  56:	9023      	str	r0, [sp, #140]	; 0x8c
  58:	4668      	mov	r0, sp
  5a:	2100      	movs	r1, #0
  5c:	6001      	str	r1, [r0, #0]
  5e:	f240 0100 	movw	r1, #0
  62:	f2c0 0100 	movt	r1, #0
  66:	f240 0300 	movw	r3, #0
  6a:	f2c0 0300 	movt	r3, #0
  6e:	a824      	add	r0, sp, #144	; 0x90
  70:	2201      	movs	r2, #1
  72:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  76:	e7ff      	b.n	78 <mynewt::Strn::new+0x78>
  78:	a822      	add	r0, sp, #136	; 0x88
  7a:	901f      	str	r0, [sp, #124]	; 0x7c
  7c:	a823      	add	r0, sp, #140	; 0x8c
  7e:	9020      	str	r0, [sp, #128]	; 0x80
  80:	a824      	add	r0, sp, #144	; 0x90
  82:	9021      	str	r0, [sp, #132]	; 0x84
  84:	981f      	ldr	r0, [sp, #124]	; 0x7c
  86:	902a      	str	r0, [sp, #168]	; 0xa8
  88:	9820      	ldr	r0, [sp, #128]	; 0x80
  8a:	902b      	str	r0, [sp, #172]	; 0xac
  8c:	9821      	ldr	r0, [sp, #132]	; 0x84
  8e:	902c      	str	r0, [sp, #176]	; 0xb0
  90:	982a      	ldr	r0, [sp, #168]	; 0xa8
  92:	f240 0100 	movw	r1, #0
  96:	f2c0 0100 	movt	r1, #0
  9a:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  9e:	9007      	str	r0, [sp, #28]
  a0:	9106      	str	r1, [sp, #24]
  a2:	e7ff      	b.n	a4 <mynewt::Strn::new+0xa4>
  a4:	982b      	ldr	r0, [sp, #172]	; 0xac
  a6:	f240 0100 	movw	r1, #0
  aa:	f2c0 0100 	movt	r1, #0
  ae:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  b2:	9005      	str	r0, [sp, #20]
  b4:	9104      	str	r1, [sp, #16]
  b6:	e7ff      	b.n	b8 <mynewt::Strn::new+0xb8>
  b8:	982c      	ldr	r0, [sp, #176]	; 0xb0
  ba:	f240 0100 	movw	r1, #0
  be:	f2c0 0100 	movt	r1, #0
  c2:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  c6:	9003      	str	r0, [sp, #12]
  c8:	9102      	str	r1, [sp, #8]
  ca:	e7ff      	b.n	cc <mynewt::Strn::new+0xcc>
  cc:	9807      	ldr	r0, [sp, #28]
  ce:	9019      	str	r0, [sp, #100]	; 0x64
  d0:	9906      	ldr	r1, [sp, #24]
  d2:	911a      	str	r1, [sp, #104]	; 0x68
  d4:	9a05      	ldr	r2, [sp, #20]
  d6:	921b      	str	r2, [sp, #108]	; 0x6c
  d8:	9b04      	ldr	r3, [sp, #16]
  da:	931c      	str	r3, [sp, #112]	; 0x70
  dc:	f8dd c00c 	ldr.w	ip, [sp, #12]
  e0:	f8cd c074 	str.w	ip, [sp, #116]	; 0x74
  e4:	f8dd e008 	ldr.w	lr, [sp, #8]
  e8:	f8cd e078 	str.w	lr, [sp, #120]	; 0x78
  ec:	466c      	mov	r4, sp
  ee:	2503      	movs	r5, #3
  f0:	6025      	str	r5, [r4, #0]
  f2:	f240 0100 	movw	r1, #0
  f6:	f2c0 0100 	movt	r1, #0
  fa:	a813      	add	r0, sp, #76	; 0x4c
  fc:	ab19      	add	r3, sp, #100	; 0x64
  fe:	462a      	mov	r2, r5
 100:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 104:	e7ff      	b.n	2 <mynewt::Strn::new+0x2>
 106:	f240 0100 	movw	r1, #0
 10a:	f2c0 0100 	movt	r1, #0
 10e:	a813      	add	r0, sp, #76	; 0x4c
 110:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 114:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:122
        Strn { 
            rep: StrnRep::ByteStr(bs)
 116:	980c      	ldr	r0, [sp, #48]	; 0x30
 118:	990d      	ldr	r1, [sp, #52]	; 0x34
 11a:	902e      	str	r0, [sp, #184]	; 0xb8
 11c:	912f      	str	r1, [sp, #188]	; 0xbc
 11e:	2000      	movs	r0, #0
 120:	f88d 00b4 	strb.w	r0, [sp, #180]	; 0xb4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:121
        Strn { 
 124:	982d      	ldr	r0, [sp, #180]	; 0xb4
 126:	992e      	ldr	r1, [sp, #184]	; 0xb8
 128:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 12a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 12c:	609a      	str	r2, [r3, #8]
 12e:	6059      	str	r1, [r3, #4]
 130:	6018      	str	r0, [r3, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:124
        }
    }
 132:	b030      	add	sp, #192	; 0xc0
 134:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN6mynewt4Strn9from_cstr17h9a7495b7f5601cb6E:

00000000 <mynewt::Strn::from_cstr>:
_ZN6mynewt4Strn9from_cstr17h9a7495b7f5601cb6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:127

    /// Create a new `Strn` with a null-terminated string pointer returned by C.
    pub fn from_cstr(cstr: *const u8) -> Strn {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9102      	str	r1, [sp, #8]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:129
        Strn { 
            rep: StrnRep::CStr(cstr)
   a:	9902      	ldr	r1, [sp, #8]
   c:	9104      	str	r1, [sp, #16]
   e:	2101      	movs	r1, #1
  10:	f88d 100c 	strb.w	r1, [sp, #12]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:128
        Strn { 
  14:	9903      	ldr	r1, [sp, #12]
  16:	f8dd c010 	ldr.w	ip, [sp, #16]
  1a:	f8dd e014 	ldr.w	lr, [sp, #20]
  1e:	f8c0 e008 	str.w	lr, [r0, #8]
  22:	f8c0 c004 	str.w	ip, [r0, #4]
  26:	6001      	str	r1, [r0, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:131
        }
    }
  28:	9201      	str	r2, [sp, #4]
  2a:	9300      	str	r3, [sp, #0]
  2c:	b006      	add	sp, #24
  2e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4Strn6as_ptr17h2aca29768dacdb60E:

00000000 <mynewt::Strn::as_ptr>:
_ZN6mynewt4Strn6as_ptr17h2aca29768dacdb60E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:134

    /// Return a pointer to the string
    pub fn as_ptr(&self) -> *const u8 {
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:136
        match self.rep {
            StrnRep::ByteStr(bs) => { bs.as_ptr() }
   8:	9803      	ldr	r0, [sp, #12]
   a:	7800      	ldrb	r0, [r0, #0]
   c:	07c2      	lsls	r2, r0, #31
   e:	2a00      	cmp	r2, #0
  10:	9102      	str	r1, [sp, #8]
  12:	9001      	str	r0, [sp, #4]
  14:	d006      	beq.n	24 <mynewt::Strn::as_ptr+0x24>
  16:	e7ff      	b.n	18 <mynewt::Strn::as_ptr+0x18>
  18:	9801      	ldr	r0, [sp, #4]
  1a:	b2c1      	uxtb	r1, r0
  1c:	2901      	cmp	r1, #1
  1e:	d00d      	beq.n	3c <mynewt::Strn::as_ptr+0x3c>
  20:	e7ff      	b.n	22 <mynewt::Strn::as_ptr+0x22>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:139
            StrnRep::CStr(cstr)  => { cstr }
        }
    }
  22:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:136
            StrnRep::ByteStr(bs) => { bs.as_ptr() }
  24:	9803      	ldr	r0, [sp, #12]
  26:	6841      	ldr	r1, [r0, #4]
  28:	6880      	ldr	r0, [r0, #8]
  2a:	9105      	str	r1, [sp, #20]
  2c:	9006      	str	r0, [sp, #24]
  2e:	9805      	ldr	r0, [sp, #20]
  30:	9906      	ldr	r1, [sp, #24]
  32:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  36:	9004      	str	r0, [sp, #16]
  38:	e7ff      	b.n	3a <mynewt::Strn::as_ptr+0x3a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:135
        match self.rep {
  3a:	e005      	b.n	48 <mynewt::Strn::as_ptr+0x48>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:137
            StrnRep::CStr(cstr)  => { cstr }
  3c:	9803      	ldr	r0, [sp, #12]
  3e:	6840      	ldr	r0, [r0, #4]
  40:	9007      	str	r0, [sp, #28]
  42:	9807      	ldr	r0, [sp, #28]
  44:	9004      	str	r0, [sp, #16]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:135
        match self.rep {
  46:	e7ff      	b.n	48 <mynewt::Strn::as_ptr+0x48>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:139
    }
  48:	9804      	ldr	r0, [sp, #16]
  4a:	b008      	add	sp, #32
  4c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4Strn3len17h86b1e18ee358b80eE:

00000000 <mynewt::Strn::len>:
_ZN6mynewt4Strn3len17h86b1e18ee358b80eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:142

    /// Return the length of the string, excluding the terminating null. For safety, we limit to 128.
    pub fn len(&self) -> usize {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0c0      	sub	sp, #256	; 0x100
   4:	4601      	mov	r1, r0
   6:	9012      	str	r0, [sp, #72]	; 0x48
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:144
        match self.rep {
            StrnRep::ByteStr(bs) => { 
   8:	9812      	ldr	r0, [sp, #72]	; 0x48
   a:	7800      	ldrb	r0, [r0, #0]
   c:	07c2      	lsls	r2, r0, #31
   e:	2a00      	cmp	r2, #0
  10:	9111      	str	r1, [sp, #68]	; 0x44
  12:	9010      	str	r0, [sp, #64]	; 0x40
  14:	d007      	beq.n	26 <mynewt::Strn::len+0x26>
  16:	e7ff      	b.n	18 <mynewt::Strn::len+0x18>
  18:	9810      	ldr	r0, [sp, #64]	; 0x40
  1a:	b2c1      	uxtb	r1, r0
  1c:	2901      	cmp	r1, #1
  1e:	f000 8095 	beq.w	14c <mynewt::Strn::len+0x14c>
  22:	e7ff      	b.n	24 <mynewt::Strn::len+0x24>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:159
                }
                assert!(false, "big strn");  //  String too long
                return 128 as usize;
            }
        }
    }
  24:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:144
            StrnRep::ByteStr(bs) => { 
  26:	9812      	ldr	r0, [sp, #72]	; 0x48
  28:	6841      	ldr	r1, [r0, #4]
  2a:	6880      	ldr	r0, [r0, #8]
  2c:	9114      	str	r1, [sp, #80]	; 0x50
  2e:	9015      	str	r0, [sp, #84]	; 0x54
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:145
                assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
  30:	9814      	ldr	r0, [sp, #80]	; 0x50
  32:	9915      	ldr	r1, [sp, #84]	; 0x54
  34:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  38:	9018      	str	r0, [sp, #96]	; 0x60
  3a:	e7ff      	b.n	3c <mynewt::Strn::len+0x3c>
  3c:	a818      	add	r0, sp, #96	; 0x60
  3e:	9016      	str	r0, [sp, #88]	; 0x58
  40:	f240 0000 	movw	r0, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	9017      	str	r0, [sp, #92]	; 0x5c
  4a:	9816      	ldr	r0, [sp, #88]	; 0x58
  4c:	9019      	str	r0, [sp, #100]	; 0x64
  4e:	9817      	ldr	r0, [sp, #92]	; 0x5c
  50:	901a      	str	r0, [sp, #104]	; 0x68
  52:	9819      	ldr	r0, [sp, #100]	; 0x64
  54:	991a      	ldr	r1, [sp, #104]	; 0x68
  56:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::cmp::PartialEq>::eq>
  5a:	900f      	str	r0, [sp, #60]	; 0x3c
  5c:	e7ff      	b.n	5e <mynewt::Strn::len+0x5e>
  5e:	980f      	ldr	r0, [sp, #60]	; 0x3c
  60:	07c1      	lsls	r1, r0, #31
  62:	2900      	cmp	r1, #0
  64:	d163      	bne.n	12e <mynewt::Strn::len+0x12e>
  66:	e7ff      	b.n	68 <mynewt::Strn::len+0x68>
  68:	9819      	ldr	r0, [sp, #100]	; 0x64
  6a:	902a      	str	r0, [sp, #168]	; 0xa8
  6c:	981a      	ldr	r0, [sp, #104]	; 0x68
  6e:	902b      	str	r0, [sp, #172]	; 0xac
  70:	4668      	mov	r0, sp
  72:	2100      	movs	r1, #0
  74:	6001      	str	r1, [r0, #0]
  76:	f240 0100 	movw	r1, #0
  7a:	f2c0 0100 	movt	r1, #0
  7e:	f240 0300 	movw	r3, #0
  82:	f2c0 0300 	movt	r3, #0
  86:	a82c      	add	r0, sp, #176	; 0xb0
  88:	2201      	movs	r2, #1
  8a:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  8e:	e7ff      	b.n	90 <mynewt::Strn::len+0x90>
  90:	a82a      	add	r0, sp, #168	; 0xa8
  92:	9027      	str	r0, [sp, #156]	; 0x9c
  94:	a82b      	add	r0, sp, #172	; 0xac
  96:	9028      	str	r0, [sp, #160]	; 0xa0
  98:	a82c      	add	r0, sp, #176	; 0xb0
  9a:	9029      	str	r0, [sp, #164]	; 0xa4
  9c:	9827      	ldr	r0, [sp, #156]	; 0x9c
  9e:	9032      	str	r0, [sp, #200]	; 0xc8
  a0:	9828      	ldr	r0, [sp, #160]	; 0xa0
  a2:	9033      	str	r0, [sp, #204]	; 0xcc
  a4:	9829      	ldr	r0, [sp, #164]	; 0xa4
  a6:	9034      	str	r0, [sp, #208]	; 0xd0
  a8:	9832      	ldr	r0, [sp, #200]	; 0xc8
  aa:	f240 0100 	movw	r1, #0
  ae:	f2c0 0100 	movt	r1, #0
  b2:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  b6:	900e      	str	r0, [sp, #56]	; 0x38
  b8:	910d      	str	r1, [sp, #52]	; 0x34
  ba:	e7ff      	b.n	bc <mynewt::Strn::len+0xbc>
  bc:	9833      	ldr	r0, [sp, #204]	; 0xcc
  be:	f240 0100 	movw	r1, #0
  c2:	f2c0 0100 	movt	r1, #0
  c6:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  ca:	900c      	str	r0, [sp, #48]	; 0x30
  cc:	910b      	str	r1, [sp, #44]	; 0x2c
  ce:	e7ff      	b.n	d0 <mynewt::Strn::len+0xd0>
  d0:	9834      	ldr	r0, [sp, #208]	; 0xd0
  d2:	f240 0100 	movw	r1, #0
  d6:	f2c0 0100 	movt	r1, #0
  da:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  de:	900a      	str	r0, [sp, #40]	; 0x28
  e0:	9109      	str	r1, [sp, #36]	; 0x24
  e2:	e7ff      	b.n	e4 <mynewt::Strn::len+0xe4>
  e4:	980e      	ldr	r0, [sp, #56]	; 0x38
  e6:	9021      	str	r0, [sp, #132]	; 0x84
  e8:	990d      	ldr	r1, [sp, #52]	; 0x34
  ea:	9122      	str	r1, [sp, #136]	; 0x88
  ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  ee:	9223      	str	r2, [sp, #140]	; 0x8c
  f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  f2:	9324      	str	r3, [sp, #144]	; 0x90
  f4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
  f8:	f8cd c094 	str.w	ip, [sp, #148]	; 0x94
  fc:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 100:	f8cd e098 	str.w	lr, [sp, #152]	; 0x98
 104:	466c      	mov	r4, sp
 106:	2503      	movs	r5, #3
 108:	6025      	str	r5, [r4, #0]
 10a:	f240 0100 	movw	r1, #0
 10e:	f2c0 0100 	movt	r1, #0
 112:	a81b      	add	r0, sp, #108	; 0x6c
 114:	ab21      	add	r3, sp, #132	; 0x84
 116:	462a      	mov	r2, r5
 118:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 11c:	e7ff      	b.n	2 <mynewt::Strn::len+0x2>
 11e:	f240 0100 	movw	r1, #0
 122:	f2c0 0100 	movt	r1, #0
 126:	a81b      	add	r0, sp, #108	; 0x6c
 128:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 12c:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
                bs.len() - 1  //  Don't count the terminating null.
 12e:	9814      	ldr	r0, [sp, #80]	; 0x50
 130:	9915      	ldr	r1, [sp, #84]	; 0x54
 132:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
 136:	9008      	str	r0, [sp, #32]
 138:	e7ff      	b.n	13a <mynewt::Strn::len+0x13a>
 13a:	9808      	ldr	r0, [sp, #32]
 13c:	1e41      	subs	r1, r0, #1
 13e:	2801      	cmp	r0, #1
 140:	9107      	str	r1, [sp, #28]
 142:	d365      	bcc.n	210 <mynewt::Strn::len+0x210>
 144:	e7ff      	b.n	146 <mynewt::Strn::len+0x146>
 146:	9807      	ldr	r0, [sp, #28]
 148:	9013      	str	r0, [sp, #76]	; 0x4c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:143
        match self.rep {
 14a:	e00f      	b.n	16c <mynewt::Strn::len+0x16c>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:148
            StrnRep::CStr(cstr)  => { 
 14c:	9812      	ldr	r0, [sp, #72]	; 0x48
 14e:	6840      	ldr	r0, [r0, #4]
 150:	9035      	str	r0, [sp, #212]	; 0xd4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:150
                if cstr.is_null() { return 0; }
 152:	9835      	ldr	r0, [sp, #212]	; 0xd4
 154:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::is_null>
 158:	9006      	str	r0, [sp, #24]
 15a:	e7ff      	b.n	15c <mynewt::Strn::len+0x15c>
 15c:	9806      	ldr	r0, [sp, #24]
 15e:	07c1      	lsls	r1, r0, #31
 160:	2900      	cmp	r1, #0
 162:	d007      	beq.n	174 <mynewt::Strn::len+0x174>
 164:	e7ff      	b.n	166 <mynewt::Strn::len+0x166>
 166:	2000      	movs	r0, #0
 168:	9013      	str	r0, [sp, #76]	; 0x4c
 16a:	e002      	b.n	172 <mynewt::Strn::len+0x172>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:159
    }
 16c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 16e:	b040      	add	sp, #256	; 0x100
 170:	bdb0      	pop	{r4, r5, r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:150
                if cstr.is_null() { return 0; }
 172:	e7fb      	b.n	16c <mynewt::Strn::len+0x16c>
 174:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:151
                for len in 0..127 {
 176:	9036      	str	r0, [sp, #216]	; 0xd8
 178:	207f      	movs	r0, #127	; 0x7f
 17a:	9037      	str	r0, [sp, #220]	; 0xdc
 17c:	9836      	ldr	r0, [sp, #216]	; 0xd8
 17e:	9937      	ldr	r1, [sp, #220]	; 0xdc
 180:	f7ff fffe 	bl	0 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
 184:	9005      	str	r0, [sp, #20]
 186:	9104      	str	r1, [sp, #16]
 188:	e7ff      	b.n	18a <mynewt::Strn::len+0x18a>
 18a:	9805      	ldr	r0, [sp, #20]
 18c:	9038      	str	r0, [sp, #224]	; 0xe0
 18e:	9904      	ldr	r1, [sp, #16]
 190:	9139      	str	r1, [sp, #228]	; 0xe4
 192:	e7ff      	b.n	194 <mynewt::Strn::len+0x194>
 194:	a838      	add	r0, sp, #224	; 0xe0
 196:	f7ff fffe 	bl	0 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next>
 19a:	913c      	str	r1, [sp, #240]	; 0xf0
 19c:	903b      	str	r0, [sp, #236]	; 0xec
 19e:	e7ff      	b.n	1a0 <mynewt::Strn::len+0x1a0>
 1a0:	983b      	ldr	r0, [sp, #236]	; 0xec
 1a2:	2800      	cmp	r0, #0
 1a4:	9003      	str	r0, [sp, #12]
 1a6:	d013      	beq.n	1d0 <mynewt::Strn::len+0x1d0>
 1a8:	e7ff      	b.n	1aa <mynewt::Strn::len+0x1aa>
 1aa:	9803      	ldr	r0, [sp, #12]
 1ac:	2801      	cmp	r0, #1
 1ae:	f47f af39 	bne.w	24 <mynewt::Strn::len+0x24>
 1b2:	e7ff      	b.n	1b4 <mynewt::Strn::len+0x1b4>
 1b4:	983c      	ldr	r0, [sp, #240]	; 0xf0
 1b6:	903d      	str	r0, [sp, #244]	; 0xf4
 1b8:	983d      	ldr	r0, [sp, #244]	; 0xf4
 1ba:	903a      	str	r0, [sp, #232]	; 0xe8
 1bc:	983a      	ldr	r0, [sp, #232]	; 0xe8
 1be:	903e      	str	r0, [sp, #248]	; 0xf8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:152
                    let ptr: *const u8 =  ((cstr as u32) + len) as *const u8;
 1c0:	9835      	ldr	r0, [sp, #212]	; 0xd4
 1c2:	993e      	ldr	r1, [sp, #248]	; 0xf8
 1c4:	4401      	add	r1, r0
 1c6:	460a      	mov	r2, r1
 1c8:	4281      	cmp	r1, r0
 1ca:	9202      	str	r2, [sp, #8]
 1cc:	d319      	bcc.n	202 <mynewt::Strn::len+0x202>
 1ce:	e003      	b.n	1d8 <mynewt::Strn::len+0x1d8>
 1d0:	2001      	movs	r0, #1
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:155
                assert!(false, "big strn");  //  String too long
 1d2:	2800      	cmp	r0, #0
 1d4:	d10b      	bne.n	1ee <mynewt::Strn::len+0x1ee>
 1d6:	e011      	b.n	1fc <mynewt::Strn::len+0x1fc>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:152
                    let ptr: *const u8 =  ((cstr as u32) + len) as *const u8;
 1d8:	9802      	ldr	r0, [sp, #8]
 1da:	903f      	str	r0, [sp, #252]	; 0xfc
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:153
                    if unsafe { *ptr } == 0 { return len as usize; }                    
 1dc:	993f      	ldr	r1, [sp, #252]	; 0xfc
 1de:	7809      	ldrb	r1, [r1, #0]
 1e0:	2900      	cmp	r1, #0
 1e2:	d103      	bne.n	1ec <mynewt::Strn::len+0x1ec>
 1e4:	e7ff      	b.n	1e6 <mynewt::Strn::len+0x1e6>
 1e6:	983e      	ldr	r0, [sp, #248]	; 0xf8
 1e8:	9013      	str	r0, [sp, #76]	; 0x4c
 1ea:	e7c2      	b.n	172 <mynewt::Strn::len+0x172>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:151
                for len in 0..127 {
 1ec:	e7d2      	b.n	194 <mynewt::Strn::len+0x194>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:155
                assert!(false, "big strn");  //  String too long
 1ee:	f240 0000 	movw	r0, #0
 1f2:	f2c0 0000 	movt	r0, #0
 1f6:	f7ff fffe 	bl	0 <core::panicking::panic>
 1fa:	defe      	udf	#254	; 0xfe
 1fc:	2080      	movs	r0, #128	; 0x80
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:156
                return 128 as usize;
 1fe:	9013      	str	r0, [sp, #76]	; 0x4c
 200:	e7b7      	b.n	172 <mynewt::Strn::len+0x172>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:152
                    let ptr: *const u8 =  ((cstr as u32) + len) as *const u8;
 202:	f240 0000 	movw	r0, #0
 206:	f2c0 0000 	movt	r0, #0
 20a:	f7ff fffe 	bl	0 <core::panicking::panic>
 20e:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
                bs.len() - 1  //  Don't count the terminating null.
 210:	f240 0000 	movw	r0, #0
 214:	f2c0 0000 	movt	r0, #0
 218:	f7ff fffe 	bl	0 <core::panicking::panic>
 21c:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt4Strn8is_empty17haf426a9141c41dd7E:

00000000 <mynewt::Strn::is_empty>:
_ZN6mynewt4Strn8is_empty17haf426a9141c41dd7E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:162

    /// Return true if the string is empty
    pub fn is_empty(&self) -> bool {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:163
        self.len() == 0
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <mynewt::Strn::is_empty>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <mynewt::Strn::is_empty+0x14>
  14:	9801      	ldr	r0, [sp, #4]
  16:	fab0 f180 	clz	r1, r0
  1a:	0948      	lsrs	r0, r1, #5
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:164
    }
  1c:	b004      	add	sp, #16
  1e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4Strn7as_cstr17h98ad1a55a2bd4f4fE:

00000000 <mynewt::Strn::as_cstr>:
_ZN6mynewt4Strn7as_cstr17h98ad1a55a2bd4f4fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:168

    /// Return the byte string as a null-terminated `* const char` C-style string.
    /// Fail if the last byte is not zero.
    pub fn as_cstr(&self) -> *const u8 {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0ae      	sub	sp, #184	; 0xb8
   4:	4601      	mov	r1, r0
   6:	900a      	str	r0, [sp, #40]	; 0x28
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:170
        match self.rep {
            StrnRep::ByteStr(bs) => { 
   8:	980a      	ldr	r0, [sp, #40]	; 0x28
   a:	7800      	ldrb	r0, [r0, #0]
   c:	07c2      	lsls	r2, r0, #31
   e:	2a00      	cmp	r2, #0
  10:	9109      	str	r1, [sp, #36]	; 0x24
  12:	9008      	str	r0, [sp, #32]
  14:	d007      	beq.n	26 <mynewt::Strn::as_cstr+0x26>
  16:	e7ff      	b.n	18 <mynewt::Strn::as_cstr+0x18>
  18:	9808      	ldr	r0, [sp, #32]
  1a:	b2c1      	uxtb	r1, r0
  1c:	2901      	cmp	r1, #1
  1e:	f000 808d 	beq.w	13c <mynewt::Strn::as_cstr+0x13c>
  22:	e7ff      	b.n	24 <mynewt::Strn::as_cstr+0x24>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:176
                assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
                bs.as_ptr() as *const u8
            }
            StrnRep::CStr(cstr)  => { cstr }
        }
    }
  24:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:170
            StrnRep::ByteStr(bs) => { 
  26:	980a      	ldr	r0, [sp, #40]	; 0x28
  28:	6841      	ldr	r1, [r0, #4]
  2a:	6880      	ldr	r0, [r0, #8]
  2c:	910c      	str	r1, [sp, #48]	; 0x30
  2e:	900d      	str	r0, [sp, #52]	; 0x34
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:171
                assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
  30:	980c      	ldr	r0, [sp, #48]	; 0x30
  32:	990d      	ldr	r1, [sp, #52]	; 0x34
  34:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  38:	9010      	str	r0, [sp, #64]	; 0x40
  3a:	e7ff      	b.n	3c <mynewt::Strn::as_cstr+0x3c>
  3c:	a810      	add	r0, sp, #64	; 0x40
  3e:	900e      	str	r0, [sp, #56]	; 0x38
  40:	f240 0000 	movw	r0, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	900f      	str	r0, [sp, #60]	; 0x3c
  4a:	980e      	ldr	r0, [sp, #56]	; 0x38
  4c:	9011      	str	r0, [sp, #68]	; 0x44
  4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
  50:	9012      	str	r0, [sp, #72]	; 0x48
  52:	9811      	ldr	r0, [sp, #68]	; 0x44
  54:	9912      	ldr	r1, [sp, #72]	; 0x48
  56:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::cmp::PartialEq>::eq>
  5a:	9007      	str	r0, [sp, #28]
  5c:	e7ff      	b.n	5e <mynewt::Strn::as_cstr+0x5e>
  5e:	9807      	ldr	r0, [sp, #28]
  60:	07c1      	lsls	r1, r0, #31
  62:	2900      	cmp	r1, #0
  64:	d163      	bne.n	12e <mynewt::Strn::as_cstr+0x12e>
  66:	e7ff      	b.n	68 <mynewt::Strn::as_cstr+0x68>
  68:	9811      	ldr	r0, [sp, #68]	; 0x44
  6a:	9022      	str	r0, [sp, #136]	; 0x88
  6c:	9812      	ldr	r0, [sp, #72]	; 0x48
  6e:	9023      	str	r0, [sp, #140]	; 0x8c
  70:	4668      	mov	r0, sp
  72:	2100      	movs	r1, #0
  74:	6001      	str	r1, [r0, #0]
  76:	f240 0100 	movw	r1, #0
  7a:	f2c0 0100 	movt	r1, #0
  7e:	f240 0300 	movw	r3, #0
  82:	f2c0 0300 	movt	r3, #0
  86:	a824      	add	r0, sp, #144	; 0x90
  88:	2201      	movs	r2, #1
  8a:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  8e:	e7ff      	b.n	90 <mynewt::Strn::as_cstr+0x90>
  90:	a822      	add	r0, sp, #136	; 0x88
  92:	901f      	str	r0, [sp, #124]	; 0x7c
  94:	a823      	add	r0, sp, #140	; 0x8c
  96:	9020      	str	r0, [sp, #128]	; 0x80
  98:	a824      	add	r0, sp, #144	; 0x90
  9a:	9021      	str	r0, [sp, #132]	; 0x84
  9c:	981f      	ldr	r0, [sp, #124]	; 0x7c
  9e:	902a      	str	r0, [sp, #168]	; 0xa8
  a0:	9820      	ldr	r0, [sp, #128]	; 0x80
  a2:	902b      	str	r0, [sp, #172]	; 0xac
  a4:	9821      	ldr	r0, [sp, #132]	; 0x84
  a6:	902c      	str	r0, [sp, #176]	; 0xb0
  a8:	982a      	ldr	r0, [sp, #168]	; 0xa8
  aa:	f240 0100 	movw	r1, #0
  ae:	f2c0 0100 	movt	r1, #0
  b2:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  b6:	9006      	str	r0, [sp, #24]
  b8:	9105      	str	r1, [sp, #20]
  ba:	e7ff      	b.n	bc <mynewt::Strn::as_cstr+0xbc>
  bc:	982b      	ldr	r0, [sp, #172]	; 0xac
  be:	f240 0100 	movw	r1, #0
  c2:	f2c0 0100 	movt	r1, #0
  c6:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  ca:	9004      	str	r0, [sp, #16]
  cc:	9103      	str	r1, [sp, #12]
  ce:	e7ff      	b.n	d0 <mynewt::Strn::as_cstr+0xd0>
  d0:	982c      	ldr	r0, [sp, #176]	; 0xb0
  d2:	f240 0100 	movw	r1, #0
  d6:	f2c0 0100 	movt	r1, #0
  da:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  de:	9002      	str	r0, [sp, #8]
  e0:	9101      	str	r1, [sp, #4]
  e2:	e7ff      	b.n	e4 <mynewt::Strn::as_cstr+0xe4>
  e4:	9806      	ldr	r0, [sp, #24]
  e6:	9019      	str	r0, [sp, #100]	; 0x64
  e8:	9905      	ldr	r1, [sp, #20]
  ea:	911a      	str	r1, [sp, #104]	; 0x68
  ec:	9a04      	ldr	r2, [sp, #16]
  ee:	921b      	str	r2, [sp, #108]	; 0x6c
  f0:	9b03      	ldr	r3, [sp, #12]
  f2:	931c      	str	r3, [sp, #112]	; 0x70
  f4:	f8dd c008 	ldr.w	ip, [sp, #8]
  f8:	f8cd c074 	str.w	ip, [sp, #116]	; 0x74
  fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 100:	f8cd e078 	str.w	lr, [sp, #120]	; 0x78
 104:	466c      	mov	r4, sp
 106:	2503      	movs	r5, #3
 108:	6025      	str	r5, [r4, #0]
 10a:	f240 0100 	movw	r1, #0
 10e:	f2c0 0100 	movt	r1, #0
 112:	a813      	add	r0, sp, #76	; 0x4c
 114:	ab19      	add	r3, sp, #100	; 0x64
 116:	462a      	mov	r2, r5
 118:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 11c:	e7ff      	b.n	2 <mynewt::Strn::as_cstr+0x2>
 11e:	f240 0100 	movw	r1, #0
 122:	f2c0 0100 	movt	r1, #0
 126:	a813      	add	r0, sp, #76	; 0x4c
 128:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 12c:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:172
                bs.as_ptr() as *const u8
 12e:	980c      	ldr	r0, [sp, #48]	; 0x30
 130:	990d      	ldr	r1, [sp, #52]	; 0x34
 132:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
 136:	900b      	str	r0, [sp, #44]	; 0x2c
 138:	e7ff      	b.n	13a <mynewt::Strn::as_cstr+0x13a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:169
        match self.rep {
 13a:	e005      	b.n	148 <mynewt::Strn::as_cstr+0x148>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:174
            StrnRep::CStr(cstr)  => { cstr }
 13c:	980a      	ldr	r0, [sp, #40]	; 0x28
 13e:	6840      	ldr	r0, [r0, #4]
 140:	902d      	str	r0, [sp, #180]	; 0xb4
 142:	982d      	ldr	r0, [sp, #180]	; 0xb4
 144:	900b      	str	r0, [sp, #44]	; 0x2c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:169
        match self.rep {
 146:	e7ff      	b.n	148 <mynewt::Strn::as_cstr+0x148>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:176
    }
 148:	980b      	ldr	r0, [sp, #44]	; 0x2c
 14a:	b02e      	add	sp, #184	; 0xb8
 14c:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN6mynewt4Strn10as_bytestr17h23484f1046d5601dE:

00000000 <mynewt::Strn::as_bytestr>:
_ZN6mynewt4Strn10as_bytestr17h23484f1046d5601dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:180

    /// Return the byte string.
    /// Fail if the last byte is not zero.
    pub fn as_bytestr(&self) -> &'static [u8] {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0b0      	sub	sp, #192	; 0xc0
   4:	4601      	mov	r1, r0
   6:	900b      	str	r0, [sp, #44]	; 0x2c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:182
        match self.rep {
            StrnRep::ByteStr(bs) => {                
   8:	980b      	ldr	r0, [sp, #44]	; 0x2c
   a:	7800      	ldrb	r0, [r0, #0]
   c:	07c2      	lsls	r2, r0, #31
   e:	2a00      	cmp	r2, #0
  10:	910a      	str	r1, [sp, #40]	; 0x28
  12:	9009      	str	r0, [sp, #36]	; 0x24
  14:	d007      	beq.n	26 <mynewt::Strn::as_bytestr+0x26>
  16:	e7ff      	b.n	18 <mynewt::Strn::as_bytestr+0x18>
  18:	9809      	ldr	r0, [sp, #36]	; 0x24
  1a:	b2c1      	uxtb	r1, r0
  1c:	2901      	cmp	r1, #1
  1e:	f000 808b 	beq.w	138 <mynewt::Strn::as_bytestr+0x138>
  22:	e7ff      	b.n	24 <mynewt::Strn::as_bytestr+0x24>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:191
            StrnRep::CStr(_cstr)  => { 
                assert!(false, "strn cstr");  //  Not implemented
                b"\0"
            }
        }
    }
  24:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:182
            StrnRep::ByteStr(bs) => {                
  26:	980b      	ldr	r0, [sp, #44]	; 0x2c
  28:	6841      	ldr	r1, [r0, #4]
  2a:	6880      	ldr	r0, [r0, #8]
  2c:	910e      	str	r1, [sp, #56]	; 0x38
  2e:	900f      	str	r0, [sp, #60]	; 0x3c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:183
                assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
  30:	980e      	ldr	r0, [sp, #56]	; 0x38
  32:	990f      	ldr	r1, [sp, #60]	; 0x3c
  34:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  38:	9012      	str	r0, [sp, #72]	; 0x48
  3a:	e7ff      	b.n	3c <mynewt::Strn::as_bytestr+0x3c>
  3c:	a812      	add	r0, sp, #72	; 0x48
  3e:	9010      	str	r0, [sp, #64]	; 0x40
  40:	f240 0000 	movw	r0, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	9011      	str	r0, [sp, #68]	; 0x44
  4a:	9810      	ldr	r0, [sp, #64]	; 0x40
  4c:	9013      	str	r0, [sp, #76]	; 0x4c
  4e:	9811      	ldr	r0, [sp, #68]	; 0x44
  50:	9014      	str	r0, [sp, #80]	; 0x50
  52:	9813      	ldr	r0, [sp, #76]	; 0x4c
  54:	9914      	ldr	r1, [sp, #80]	; 0x50
  56:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::cmp::PartialEq>::eq>
  5a:	9008      	str	r0, [sp, #32]
  5c:	e7ff      	b.n	5e <mynewt::Strn::as_bytestr+0x5e>
  5e:	9808      	ldr	r0, [sp, #32]
  60:	07c1      	lsls	r1, r0, #31
  62:	2900      	cmp	r1, #0
  64:	d163      	bne.n	12e <mynewt::Strn::as_bytestr+0x12e>
  66:	e7ff      	b.n	68 <mynewt::Strn::as_bytestr+0x68>
  68:	9813      	ldr	r0, [sp, #76]	; 0x4c
  6a:	9024      	str	r0, [sp, #144]	; 0x90
  6c:	9814      	ldr	r0, [sp, #80]	; 0x50
  6e:	9025      	str	r0, [sp, #148]	; 0x94
  70:	4668      	mov	r0, sp
  72:	2100      	movs	r1, #0
  74:	6001      	str	r1, [r0, #0]
  76:	f240 0100 	movw	r1, #0
  7a:	f2c0 0100 	movt	r1, #0
  7e:	f240 0300 	movw	r3, #0
  82:	f2c0 0300 	movt	r3, #0
  86:	a826      	add	r0, sp, #152	; 0x98
  88:	2201      	movs	r2, #1
  8a:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  8e:	e7ff      	b.n	90 <mynewt::Strn::as_bytestr+0x90>
  90:	a824      	add	r0, sp, #144	; 0x90
  92:	9021      	str	r0, [sp, #132]	; 0x84
  94:	a825      	add	r0, sp, #148	; 0x94
  96:	9022      	str	r0, [sp, #136]	; 0x88
  98:	a826      	add	r0, sp, #152	; 0x98
  9a:	9023      	str	r0, [sp, #140]	; 0x8c
  9c:	9821      	ldr	r0, [sp, #132]	; 0x84
  9e:	902c      	str	r0, [sp, #176]	; 0xb0
  a0:	9822      	ldr	r0, [sp, #136]	; 0x88
  a2:	902d      	str	r0, [sp, #180]	; 0xb4
  a4:	9823      	ldr	r0, [sp, #140]	; 0x8c
  a6:	902e      	str	r0, [sp, #184]	; 0xb8
  a8:	982c      	ldr	r0, [sp, #176]	; 0xb0
  aa:	f240 0100 	movw	r1, #0
  ae:	f2c0 0100 	movt	r1, #0
  b2:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  b6:	9007      	str	r0, [sp, #28]
  b8:	9106      	str	r1, [sp, #24]
  ba:	e7ff      	b.n	bc <mynewt::Strn::as_bytestr+0xbc>
  bc:	982d      	ldr	r0, [sp, #180]	; 0xb4
  be:	f240 0100 	movw	r1, #0
  c2:	f2c0 0100 	movt	r1, #0
  c6:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  ca:	9005      	str	r0, [sp, #20]
  cc:	9104      	str	r1, [sp, #16]
  ce:	e7ff      	b.n	d0 <mynewt::Strn::as_bytestr+0xd0>
  d0:	982e      	ldr	r0, [sp, #184]	; 0xb8
  d2:	f240 0100 	movw	r1, #0
  d6:	f2c0 0100 	movt	r1, #0
  da:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  de:	9003      	str	r0, [sp, #12]
  e0:	9102      	str	r1, [sp, #8]
  e2:	e7ff      	b.n	e4 <mynewt::Strn::as_bytestr+0xe4>
  e4:	9807      	ldr	r0, [sp, #28]
  e6:	901b      	str	r0, [sp, #108]	; 0x6c
  e8:	9906      	ldr	r1, [sp, #24]
  ea:	911c      	str	r1, [sp, #112]	; 0x70
  ec:	9a05      	ldr	r2, [sp, #20]
  ee:	921d      	str	r2, [sp, #116]	; 0x74
  f0:	9b04      	ldr	r3, [sp, #16]
  f2:	931e      	str	r3, [sp, #120]	; 0x78
  f4:	f8dd c00c 	ldr.w	ip, [sp, #12]
  f8:	f8cd c07c 	str.w	ip, [sp, #124]	; 0x7c
  fc:	f8dd e008 	ldr.w	lr, [sp, #8]
 100:	f8cd e080 	str.w	lr, [sp, #128]	; 0x80
 104:	466c      	mov	r4, sp
 106:	2503      	movs	r5, #3
 108:	6025      	str	r5, [r4, #0]
 10a:	f240 0100 	movw	r1, #0
 10e:	f2c0 0100 	movt	r1, #0
 112:	a815      	add	r0, sp, #84	; 0x54
 114:	ab1b      	add	r3, sp, #108	; 0x6c
 116:	462a      	mov	r2, r5
 118:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 11c:	e7ff      	b.n	2 <mynewt::Strn::as_bytestr+0x2>
 11e:	f240 0100 	movw	r1, #0
 122:	f2c0 0100 	movt	r1, #0
 126:	a815      	add	r0, sp, #84	; 0x54
 128:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 12c:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:184
                &bs
 12e:	980e      	ldr	r0, [sp, #56]	; 0x38
 130:	990f      	ldr	r1, [sp, #60]	; 0x3c
 132:	900c      	str	r0, [sp, #48]	; 0x30
 134:	910d      	str	r1, [sp, #52]	; 0x34
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:181
        match self.rep {
 136:	e015      	b.n	164 <mynewt::Strn::as_bytestr+0x164>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:186
            StrnRep::CStr(_cstr)  => { 
 138:	980b      	ldr	r0, [sp, #44]	; 0x2c
 13a:	6840      	ldr	r0, [r0, #4]
 13c:	902f      	str	r0, [sp, #188]	; 0xbc
 13e:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:187
                assert!(false, "strn cstr");  //  Not implemented
 140:	2800      	cmp	r0, #0
 142:	d107      	bne.n	154 <mynewt::Strn::as_bytestr+0x154>
 144:	e7ff      	b.n	146 <mynewt::Strn::as_bytestr+0x146>
 146:	f240 0000 	movw	r0, #0
 14a:	f2c0 0000 	movt	r0, #0
 14e:	f7ff fffe 	bl	0 <core::panicking::panic>
 152:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:188
                b"\0"
 154:	f240 0000 	movw	r0, #0
 158:	f2c0 0000 	movt	r0, #0
 15c:	900c      	str	r0, [sp, #48]	; 0x30
 15e:	2001      	movs	r0, #1
 160:	900d      	str	r0, [sp, #52]	; 0x34
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:181
        match self.rep {
 162:	e7ff      	b.n	164 <mynewt::Strn::as_bytestr+0x164>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:191
    }
 164:	980c      	ldr	r0, [sp, #48]	; 0x30
 166:	990d      	ldr	r1, [sp, #52]	; 0x34
 168:	b030      	add	sp, #192	; 0xc0
 16a:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN6mynewt4Strn8validate17hd35e7e1944abd306E:

00000000 <mynewt::Strn::validate>:
_ZN6mynewt4Strn8validate17hd35e7e1944abd306E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:194

    /// Fail if the last byte is not zero.
    pub fn validate(&self) {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0ae      	sub	sp, #184	; 0xb8
   4:	4601      	mov	r1, r0
   6:	900b      	str	r0, [sp, #44]	; 0x2c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:196
        match self.rep {
            StrnRep::ByteStr(bs) => {         
   8:	980b      	ldr	r0, [sp, #44]	; 0x2c
   a:	7800      	ldrb	r0, [r0, #0]
   c:	07c2      	lsls	r2, r0, #31
   e:	2a00      	cmp	r2, #0
  10:	910a      	str	r1, [sp, #40]	; 0x28
  12:	9009      	str	r0, [sp, #36]	; 0x24
  14:	d007      	beq.n	26 <mynewt::Strn::validate+0x26>
  16:	e7ff      	b.n	18 <mynewt::Strn::validate+0x18>
  18:	9809      	ldr	r0, [sp, #36]	; 0x24
  1a:	b2c1      	uxtb	r1, r0
  1c:	2901      	cmp	r1, #1
  1e:	f000 8087 	beq.w	130 <mynewt::Strn::validate+0x130>
  22:	e7ff      	b.n	24 <mynewt::Strn::validate+0x24>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:201
                assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
            }
            StrnRep::CStr(_cstr)  => {}
        }
    }
  24:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:196
            StrnRep::ByteStr(bs) => {         
  26:	980b      	ldr	r0, [sp, #44]	; 0x2c
  28:	6841      	ldr	r1, [r0, #4]
  2a:	6880      	ldr	r0, [r0, #8]
  2c:	910c      	str	r1, [sp, #48]	; 0x30
  2e:	900d      	str	r0, [sp, #52]	; 0x34
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:197
                assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
  30:	980c      	ldr	r0, [sp, #48]	; 0x30
  32:	990d      	ldr	r1, [sp, #52]	; 0x34
  34:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  38:	9010      	str	r0, [sp, #64]	; 0x40
  3a:	e7ff      	b.n	3c <mynewt::Strn::validate+0x3c>
  3c:	a810      	add	r0, sp, #64	; 0x40
  3e:	900e      	str	r0, [sp, #56]	; 0x38
  40:	f240 0000 	movw	r0, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	900f      	str	r0, [sp, #60]	; 0x3c
  4a:	980e      	ldr	r0, [sp, #56]	; 0x38
  4c:	9011      	str	r0, [sp, #68]	; 0x44
  4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
  50:	9012      	str	r0, [sp, #72]	; 0x48
  52:	9811      	ldr	r0, [sp, #68]	; 0x44
  54:	9912      	ldr	r1, [sp, #72]	; 0x48
  56:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::cmp::PartialEq>::eq>
  5a:	9008      	str	r0, [sp, #32]
  5c:	e7ff      	b.n	5e <mynewt::Strn::validate+0x5e>
  5e:	9808      	ldr	r0, [sp, #32]
  60:	07c1      	lsls	r1, r0, #31
  62:	2900      	cmp	r1, #0
  64:	d163      	bne.n	12e <mynewt::Strn::validate+0x12e>
  66:	e7ff      	b.n	68 <mynewt::Strn::validate+0x68>
  68:	9811      	ldr	r0, [sp, #68]	; 0x44
  6a:	9022      	str	r0, [sp, #136]	; 0x88
  6c:	9812      	ldr	r0, [sp, #72]	; 0x48
  6e:	9023      	str	r0, [sp, #140]	; 0x8c
  70:	4668      	mov	r0, sp
  72:	2100      	movs	r1, #0
  74:	6001      	str	r1, [r0, #0]
  76:	f240 0100 	movw	r1, #0
  7a:	f2c0 0100 	movt	r1, #0
  7e:	f240 0300 	movw	r3, #0
  82:	f2c0 0300 	movt	r3, #0
  86:	a824      	add	r0, sp, #144	; 0x90
  88:	2201      	movs	r2, #1
  8a:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  8e:	e7ff      	b.n	90 <mynewt::Strn::validate+0x90>
  90:	a822      	add	r0, sp, #136	; 0x88
  92:	901f      	str	r0, [sp, #124]	; 0x7c
  94:	a823      	add	r0, sp, #140	; 0x8c
  96:	9020      	str	r0, [sp, #128]	; 0x80
  98:	a824      	add	r0, sp, #144	; 0x90
  9a:	9021      	str	r0, [sp, #132]	; 0x84
  9c:	981f      	ldr	r0, [sp, #124]	; 0x7c
  9e:	902a      	str	r0, [sp, #168]	; 0xa8
  a0:	9820      	ldr	r0, [sp, #128]	; 0x80
  a2:	902b      	str	r0, [sp, #172]	; 0xac
  a4:	9821      	ldr	r0, [sp, #132]	; 0x84
  a6:	902c      	str	r0, [sp, #176]	; 0xb0
  a8:	982a      	ldr	r0, [sp, #168]	; 0xa8
  aa:	f240 0100 	movw	r1, #0
  ae:	f2c0 0100 	movt	r1, #0
  b2:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  b6:	9007      	str	r0, [sp, #28]
  b8:	9106      	str	r1, [sp, #24]
  ba:	e7ff      	b.n	bc <mynewt::Strn::validate+0xbc>
  bc:	982b      	ldr	r0, [sp, #172]	; 0xac
  be:	f240 0100 	movw	r1, #0
  c2:	f2c0 0100 	movt	r1, #0
  c6:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  ca:	9005      	str	r0, [sp, #20]
  cc:	9104      	str	r1, [sp, #16]
  ce:	e7ff      	b.n	d0 <mynewt::Strn::validate+0xd0>
  d0:	982c      	ldr	r0, [sp, #176]	; 0xb0
  d2:	f240 0100 	movw	r1, #0
  d6:	f2c0 0100 	movt	r1, #0
  da:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  de:	9003      	str	r0, [sp, #12]
  e0:	9102      	str	r1, [sp, #8]
  e2:	e7ff      	b.n	e4 <mynewt::Strn::validate+0xe4>
  e4:	9807      	ldr	r0, [sp, #28]
  e6:	9019      	str	r0, [sp, #100]	; 0x64
  e8:	9906      	ldr	r1, [sp, #24]
  ea:	911a      	str	r1, [sp, #104]	; 0x68
  ec:	9a05      	ldr	r2, [sp, #20]
  ee:	921b      	str	r2, [sp, #108]	; 0x6c
  f0:	9b04      	ldr	r3, [sp, #16]
  f2:	931c      	str	r3, [sp, #112]	; 0x70
  f4:	f8dd c00c 	ldr.w	ip, [sp, #12]
  f8:	f8cd c074 	str.w	ip, [sp, #116]	; 0x74
  fc:	f8dd e008 	ldr.w	lr, [sp, #8]
 100:	f8cd e078 	str.w	lr, [sp, #120]	; 0x78
 104:	466c      	mov	r4, sp
 106:	2503      	movs	r5, #3
 108:	6025      	str	r5, [r4, #0]
 10a:	f240 0100 	movw	r1, #0
 10e:	f2c0 0100 	movt	r1, #0
 112:	a813      	add	r0, sp, #76	; 0x4c
 114:	ab19      	add	r3, sp, #100	; 0x64
 116:	462a      	mov	r2, r5
 118:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 11c:	e7ff      	b.n	2 <mynewt::Strn::validate+0x2>
 11e:	f240 0100 	movw	r1, #0
 122:	f2c0 0100 	movt	r1, #0
 126:	a813      	add	r0, sp, #76	; 0x4c
 128:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 12c:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:195
        match self.rep {
 12e:	e003      	b.n	138 <mynewt::Strn::validate+0x138>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:199
            StrnRep::CStr(_cstr)  => {}
 130:	980b      	ldr	r0, [sp, #44]	; 0x2c
 132:	6840      	ldr	r0, [r0, #4]
 134:	902d      	str	r0, [sp, #180]	; 0xb4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:195
        match self.rep {
 136:	e7ff      	b.n	138 <mynewt::Strn::validate+0x138>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:201
    }
 138:	b02e      	add	sp, #184	; 0xb8
 13a:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN6mynewt4Strn16validate_bytestr17h9ca81f940cca9bf2E:

00000000 <mynewt::Strn::validate_bytestr>:
_ZN6mynewt4Strn16validate_bytestr17h9ca81f940cca9bf2E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:204

    /// Fail if the last byte is not zero.
    pub fn validate_bytestr(bs: &'static [u8]) {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0ac      	sub	sp, #176	; 0xb0
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	900b      	str	r0, [sp, #44]	; 0x2c
   a:	910c      	str	r1, [sp, #48]	; 0x30
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:205
        assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
   c:	980b      	ldr	r0, [sp, #44]	; 0x2c
   e:	990c      	ldr	r1, [sp, #48]	; 0x30
  10:	920a      	str	r2, [sp, #40]	; 0x28
  12:	9309      	str	r3, [sp, #36]	; 0x24
  14:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  18:	900f      	str	r0, [sp, #60]	; 0x3c
  1a:	e7ff      	b.n	1c <mynewt::Strn::validate_bytestr+0x1c>
  1c:	a80f      	add	r0, sp, #60	; 0x3c
  1e:	900d      	str	r0, [sp, #52]	; 0x34
  20:	f240 0000 	movw	r0, #0
  24:	f2c0 0000 	movt	r0, #0
  28:	900e      	str	r0, [sp, #56]	; 0x38
  2a:	980d      	ldr	r0, [sp, #52]	; 0x34
  2c:	9010      	str	r0, [sp, #64]	; 0x40
  2e:	980e      	ldr	r0, [sp, #56]	; 0x38
  30:	9011      	str	r0, [sp, #68]	; 0x44
  32:	9810      	ldr	r0, [sp, #64]	; 0x40
  34:	9911      	ldr	r1, [sp, #68]	; 0x44
  36:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::cmp::PartialEq>::eq>
  3a:	9008      	str	r0, [sp, #32]
  3c:	e7ff      	b.n	3e <mynewt::Strn::validate_bytestr+0x3e>
  3e:	9808      	ldr	r0, [sp, #32]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d163      	bne.n	10e <mynewt::Strn::validate_bytestr+0x10e>
  46:	e7ff      	b.n	48 <mynewt::Strn::validate_bytestr+0x48>
  48:	9810      	ldr	r0, [sp, #64]	; 0x40
  4a:	9021      	str	r0, [sp, #132]	; 0x84
  4c:	9811      	ldr	r0, [sp, #68]	; 0x44
  4e:	9022      	str	r0, [sp, #136]	; 0x88
  50:	4668      	mov	r0, sp
  52:	2100      	movs	r1, #0
  54:	6001      	str	r1, [r0, #0]
  56:	f240 0100 	movw	r1, #0
  5a:	f2c0 0100 	movt	r1, #0
  5e:	f240 0300 	movw	r3, #0
  62:	f2c0 0300 	movt	r3, #0
  66:	a823      	add	r0, sp, #140	; 0x8c
  68:	2201      	movs	r2, #1
  6a:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  6e:	e7ff      	b.n	70 <mynewt::Strn::validate_bytestr+0x70>
  70:	a821      	add	r0, sp, #132	; 0x84
  72:	901e      	str	r0, [sp, #120]	; 0x78
  74:	a822      	add	r0, sp, #136	; 0x88
  76:	901f      	str	r0, [sp, #124]	; 0x7c
  78:	a823      	add	r0, sp, #140	; 0x8c
  7a:	9020      	str	r0, [sp, #128]	; 0x80
  7c:	981e      	ldr	r0, [sp, #120]	; 0x78
  7e:	9029      	str	r0, [sp, #164]	; 0xa4
  80:	981f      	ldr	r0, [sp, #124]	; 0x7c
  82:	902a      	str	r0, [sp, #168]	; 0xa8
  84:	9820      	ldr	r0, [sp, #128]	; 0x80
  86:	902b      	str	r0, [sp, #172]	; 0xac
  88:	9829      	ldr	r0, [sp, #164]	; 0xa4
  8a:	f240 0100 	movw	r1, #0
  8e:	f2c0 0100 	movt	r1, #0
  92:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  96:	9007      	str	r0, [sp, #28]
  98:	9106      	str	r1, [sp, #24]
  9a:	e7ff      	b.n	9c <mynewt::Strn::validate_bytestr+0x9c>
  9c:	982a      	ldr	r0, [sp, #168]	; 0xa8
  9e:	f240 0100 	movw	r1, #0
  a2:	f2c0 0100 	movt	r1, #0
  a6:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  aa:	9005      	str	r0, [sp, #20]
  ac:	9104      	str	r1, [sp, #16]
  ae:	e7ff      	b.n	b0 <mynewt::Strn::validate_bytestr+0xb0>
  b0:	982b      	ldr	r0, [sp, #172]	; 0xac
  b2:	f240 0100 	movw	r1, #0
  b6:	f2c0 0100 	movt	r1, #0
  ba:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  be:	9003      	str	r0, [sp, #12]
  c0:	9102      	str	r1, [sp, #8]
  c2:	e7ff      	b.n	c4 <mynewt::Strn::validate_bytestr+0xc4>
  c4:	9807      	ldr	r0, [sp, #28]
  c6:	9018      	str	r0, [sp, #96]	; 0x60
  c8:	9906      	ldr	r1, [sp, #24]
  ca:	9119      	str	r1, [sp, #100]	; 0x64
  cc:	9a05      	ldr	r2, [sp, #20]
  ce:	921a      	str	r2, [sp, #104]	; 0x68
  d0:	9b04      	ldr	r3, [sp, #16]
  d2:	931b      	str	r3, [sp, #108]	; 0x6c
  d4:	f8dd c00c 	ldr.w	ip, [sp, #12]
  d8:	f8cd c070 	str.w	ip, [sp, #112]	; 0x70
  dc:	f8dd e008 	ldr.w	lr, [sp, #8]
  e0:	f8cd e074 	str.w	lr, [sp, #116]	; 0x74
  e4:	466c      	mov	r4, sp
  e6:	2503      	movs	r5, #3
  e8:	6025      	str	r5, [r4, #0]
  ea:	f240 0100 	movw	r1, #0
  ee:	f2c0 0100 	movt	r1, #0
  f2:	a812      	add	r0, sp, #72	; 0x48
  f4:	ab18      	add	r3, sp, #96	; 0x60
  f6:	462a      	mov	r2, r5
  f8:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  fc:	e7ff      	b.n	2 <mynewt::Strn::validate_bytestr+0x2>
  fe:	f240 0100 	movw	r1, #0
 102:	f2c0 0100 	movt	r1, #0
 106:	a812      	add	r0, sp, #72	; 0x48
 108:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 10c:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:206
    }
 10e:	b02c      	add	sp, #176	; 0xb0
 110:	bdb0      	pop	{r4, r5, r7, pc}

mynewt-d7fd96264f78b961.276tdfks4xp5kpiu.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 276tdfks4xp5kpiu
000000c0 l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
000001de l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000087 l       .debug_str	00000000 
0000008a l       .debug_str	00000000 
0000009e l       .debug_str	00000000 
000000a3 l       .debug_str	00000000 
000000aa l       .debug_str	00000000 
000000b3 l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
000001d9 l       .debug_str	00000000 
00000000 l     F .text._ZN9cstr_core4CStr17to_bytes_with_nul17hb25905c3f1dcb12bE	00000016 cstr_core::CStr::to_bytes_with_nul
00000000 l    d  .text._ZN9cstr_core4CStr17to_bytes_with_nul17hb25905c3f1dcb12bE	00000000 .text._ZN9cstr_core4CStr17to_bytes_with_nul17hb25905c3f1dcb12bE
00000000 l    d  .text._ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17had86eeb274193c65E	00000000 .text._ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17had86eeb274193c65E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17had86eeb274193c65E	00000026 <cstr_core::CStr as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul



Disassembly of section .text._ZN9cstr_core4CStr17to_bytes_with_nul17hb25905c3f1dcb12bE:

00000000 <cstr_core::CStr::to_bytes_with_nul>:
_ZN9cstr_core4CStr17to_bytes_with_nul17hb25905c3f1dcb12bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1056
    ///
    /// let c_str = CStr::from_bytes_with_nul(b"foo\0").unwrap();
    /// assert_eq!(c_str.to_bytes_with_nul(), b"foo\0");
    /// ```
    #[inline]
    pub fn to_bytes_with_nul(&self) -> &[u8] {
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1057
        unsafe { &*(&self.inner as *const [c_char] as *const [u8]) }
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1058
    }
   e:	9201      	str	r2, [sp, #4]
  10:	9300      	str	r3, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17had86eeb274193c65E:

00000000 <<cstr_core::CStr as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>:
_ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17had86eeb274193c65E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:181
}

/// Convert the type to array of bytes that may or may not end with null. CStr always ends with null.
impl ToBytesOptionalNull for CStr {
    /// Convert the type to array of bytes that may or may not end with null. CStr always ends with null.
    fn to_bytes_optional_nul(&self) -> &[u8] {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:182
        self.to_bytes_with_nul()
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <<cstr_core::CStr as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
  18:	9001      	str	r0, [sp, #4]
  1a:	9100      	str	r1, [sp, #0]
  1c:	e7ff      	b.n	1e <<cstr_core::CStr as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul+0x1e>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:183
    }
  1e:	9801      	ldr	r0, [sp, #4]
  20:	9900      	ldr	r1, [sp, #0]
  22:	b006      	add	sp, #24
  24:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.27vnoqc6a2zoh1fh.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 27vnoqc6a2zoh1fh
00000179 l       .debug_str	00000000 
00000272 l       .debug_str	00000000 
0000029e l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
0000029a l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
00000262 l       .debug_str	00000000 
0000028a l       .debug_str	00000000 
0000025d l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
0000027d l       .debug_str	00000000 
00000250 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
0000008a l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c1 l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000170 l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
000001b0 l       .debug_str	00000000 
000001bb l       .debug_str	00000000 
000001f3 l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
00000230 l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
0000023a l       .debug_str	00000000 
00000243 l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
00000000 l    d  .text._ZN6mynewt3sys7console5print17ha0601e49e4927bc4E	00000000 .text._ZN6mynewt3sys7console5print17ha0601e49e4927bc4E
00000000 l    d  .text._ZN6mynewt3sys7console10print_strn17h7b7fdfa60aa992abE	00000000 .text._ZN6mynewt3sys7console10print_strn17h7b7fdfa60aa992abE
00000000 l    d  .text._ZN6mynewt3sys7console6buffer17h37b7b8db742c4e2fE	00000000 .text._ZN6mynewt3sys7console6buffer17h37b7b8db742c4e2fE
00000000 l    d  .text._ZN6mynewt3sys7console8printhex17h05a35c2add16de62E	00000000 .text._ZN6mynewt3sys7console8printhex17h05a35c2add16de62E
00000000 l    d  .text._ZN6mynewt3sys7console10printfloat17h2616b070d64acd4bE	00000000 .text._ZN6mynewt3sys7console10printfloat17h2616b070d64acd4bE
00000000 l    d  .text._ZN6mynewt3sys7console11printdouble17h8cfea39cbc53f217E	00000000 .text._ZN6mynewt3sys7console11printdouble17h8cfea39cbc53f217E
00000000 l    d  .text._ZN6mynewt3sys7console5flush17h6e6adb2d6c74f9b0E	00000000 .text._ZN6mynewt3sys7console5flush17h6e6adb2d6c74f9b0E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 .hidden core::str::<impl str>::len
00000000         *UND*	00000000 .hidden core::str::<impl str>::as_ptr
00000000 g     F .text._ZN6mynewt3sys7console10print_strn17h7b7fdfa60aa992abE	0000002c mynewt::sys::console::print_strn
00000000 g     F .text._ZN6mynewt3sys7console10printfloat17h2616b070d64acd4bE	0000001e mynewt::sys::console::printfloat
00000000 g     F .text._ZN6mynewt3sys7console11printdouble17h8cfea39cbc53f217E	00000022 mynewt::sys::console::printdouble
00000000 g     F .text._ZN6mynewt3sys7console5flush17h6e6adb2d6c74f9b0E	0000000a mynewt::sys::console::flush
00000000 g     F .text._ZN6mynewt3sys7console5print17ha0601e49e4927bc4E	00000036 mynewt::sys::console::print
00000000 g     F .text._ZN6mynewt3sys7console6buffer17h37b7b8db742c4e2fE	00000036 mynewt::sys::console::buffer
00000000 g     F .text._ZN6mynewt3sys7console8printhex17h05a35c2add16de62E	0000001a mynewt::sys::console::printhex
00000000         *UND*	00000000 mynewt::Strn::len
00000000         *UND*	00000000 mynewt::Strn::as_ptr
00000000         *UND*	00000000 console_buffer
00000000         *UND*	00000000 console_flush
00000000         *UND*	00000000 console_printdouble
00000000         *UND*	00000000 console_printfloat
00000000         *UND*	00000000 console_printhex



Disassembly of section .text._ZN6mynewt3sys7console5print17ha0601e49e4927bc4E:

00000000 <mynewt::sys::console::print>:
_ZN6mynewt3sys7console5print17ha0601e49e4927bc4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:4
//! Display messages on Arm Semihosting Console (via OpenOCD)

///  Display message `msg` on the Arm Semihosting console (via OpenOCD).
pub fn print(msg: &str) {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:6
    //  Call the Semihosting Console API, which is unsafe.
    unsafe { console_buffer(msg.as_ptr(), msg.len() as u32); }
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::str::<impl str>::as_ptr>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <mynewt::sys::console::print+0x1c>
  1c:	9804      	ldr	r0, [sp, #16]
  1e:	9905      	ldr	r1, [sp, #20]
  20:	f7ff fffe 	bl	0 <core::str::<impl str>::len>
  24:	9000      	str	r0, [sp, #0]
  26:	e7ff      	b.n	28 <mynewt::sys::console::print+0x28>
  28:	9801      	ldr	r0, [sp, #4]
  2a:	9900      	ldr	r1, [sp, #0]
  2c:	f7ff fffe 	bl	0 <console_buffer>
  30:	e7ff      	b.n	32 <mynewt::sys::console::print+0x32>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
}
  32:	b006      	add	sp, #24
  34:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt3sys7console10print_strn17h7b7fdfa60aa992abE:

00000000 <mynewt::sys::console::print_strn>:
_ZN6mynewt3sys7console10print_strn17h7b7fdfa60aa992abE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:10

///  Display message `msg` on the Arm Semihosting console (via OpenOCD).
pub fn print_strn(msg: &crate::Strn) {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:12
    //  Call the Semihosting Console API, which is unsafe.
    unsafe { console_buffer(msg.as_ptr(), msg.len() as u32); }
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <mynewt::Strn::as_ptr>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <mynewt::sys::console::print_strn+0x14>
  14:	9803      	ldr	r0, [sp, #12]
  16:	f7ff fffe 	bl	0 <mynewt::Strn::len>
  1a:	9000      	str	r0, [sp, #0]
  1c:	e7ff      	b.n	1e <mynewt::sys::console::print_strn+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	9900      	ldr	r1, [sp, #0]
  22:	f7ff fffe 	bl	0 <console_buffer>
  26:	e7ff      	b.n	28 <mynewt::sys::console::print_strn+0x28>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:13
}
  28:	b004      	add	sp, #16
  2a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt3sys7console6buffer17h37b7b8db742c4e2fE:

00000000 <mynewt::sys::console::buffer>:
_ZN6mynewt3sys7console6buffer17h37b7b8db742c4e2fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:16

///  Add the string to the output buffer.
pub fn buffer(msg: &str) {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:18
    //  Call the Semihosting Console API, which is unsafe.
    unsafe { console_buffer(msg.as_ptr(), msg.len() as u32); }
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::str::<impl str>::as_ptr>
  18:	9001      	str	r0, [sp, #4]
  1a:	e7ff      	b.n	1c <mynewt::sys::console::buffer+0x1c>
  1c:	9804      	ldr	r0, [sp, #16]
  1e:	9905      	ldr	r1, [sp, #20]
  20:	f7ff fffe 	bl	0 <core::str::<impl str>::len>
  24:	9000      	str	r0, [sp, #0]
  26:	e7ff      	b.n	28 <mynewt::sys::console::buffer+0x28>
  28:	9801      	ldr	r0, [sp, #4]
  2a:	9900      	ldr	r1, [sp, #0]
  2c:	f7ff fffe 	bl	0 <console_buffer>
  30:	e7ff      	b.n	32 <mynewt::sys::console::buffer+0x32>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:19
}
  32:	b006      	add	sp, #24
  34:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt3sys7console8printhex17h05a35c2add16de62E:

00000000 <mynewt::sys::console::printhex>:
_ZN6mynewt3sys7console8printhex17h05a35c2add16de62E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:23

///  Write a byte in hexadecimal to the output buffer.
///  C API: `void console_printhex(uint8_t v)`
pub fn printhex(v: u8) {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
   6:	f88d 0007 	strb.w	r0, [sp, #7]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:24
    unsafe { console_printhex(v); }
   a:	f89d 0007 	ldrb.w	r0, [sp, #7]
   e:	9100      	str	r1, [sp, #0]
  10:	f7ff fffe 	bl	0 <console_printhex>
  14:	e7ff      	b.n	16 <mynewt::sys::console::printhex+0x16>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:25
}
  16:	b002      	add	sp, #8
  18:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt3sys7console10printfloat17h2616b070d64acd4bE:

00000000 <mynewt::sys::console::printfloat>:
_ZN6mynewt3sys7console10printfloat17h2616b070d64acd4bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:28

///  Write a float to the output buffer, with 2 decimal places.
pub fn printfloat(v: f32) {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	eeb0 1a40 	vmov.f32	s2, s0
   8:	ed8d 0a01 	vstr	s0, [sp, #4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:29
    unsafe { console_printfloat(v); }
   c:	ed9d 0a01 	vldr	s0, [sp, #4]
  10:	ed8d 1a00 	vstr	s2, [sp]
  14:	f7ff fffe 	bl	0 <console_printfloat>
  18:	e7ff      	b.n	1a <mynewt::sys::console::printfloat+0x1a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:30
}
  1a:	b002      	add	sp, #8
  1c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt3sys7console11printdouble17h8cfea39cbc53f217E:

00000000 <mynewt::sys::console::printdouble>:
_ZN6mynewt3sys7console11printdouble17h8cfea39cbc53f217E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:33

///  Write a double to the output buffer, with 6 decimal places.
pub fn printdouble(v: f64) {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	eeb0 1a40 	vmov.f32	s2, s0
   8:	eef0 1a60 	vmov.f32	s3, s1
   c:	ed8d 0b02 	vstr	d0, [sp, #8]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:34
    unsafe { console_printdouble(v); }
  10:	ed9d 0b02 	vldr	d0, [sp, #8]
  14:	ed8d 1b00 	vstr	d1, [sp]
  18:	f7ff fffe 	bl	0 <console_printdouble>
  1c:	e7ff      	b.n	1e <mynewt::sys::console::printdouble+0x1e>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:35
}
  1e:	b004      	add	sp, #16
  20:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt3sys7console5flush17h6e6adb2d6c74f9b0E:

00000000 <mynewt::sys::console::flush>:
_ZN6mynewt3sys7console5flush17h6e6adb2d6c74f9b0E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:38

///  Flush the output buffer to the console.
pub fn flush() {
   0:	b580      	push	{r7, lr}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:39
    unsafe { console_flush(); }
   2:	f7ff fffe 	bl	0 <console_flush>
   6:	e7ff      	b.n	8 <mynewt::sys::console::flush+0x8>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:40
}
   8:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.291sqjmh47bw16ws.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 291sqjmh47bw16ws
0000224a l       .debug_str	00000000 
00005c4e l       .debug_str	00000000 
0000704c l       .debug_str	00000000 
00005c4a l       .debug_str	00000000 
00007043 l       .debug_str	00000000 
00005c3f l       .debug_str	00000000 
00007041 l       .debug_str	00000000 
00005c37 l       .debug_str	00000000 
00007034 l       .debug_str	00000000 
00005c11 l       .debug_str	00000000 
0000700b l       .debug_str	00000000 
00005c0a l       .debug_str	00000000 
00006fd6 l       .debug_str	00000000 
00005c03 l       .debug_str	00000000 
00006fae l       .debug_str	00000000 
00005bf5 l       .debug_str	00000000 
00006f80 l       .debug_str	00000000 
00005bec l       .debug_str	00000000 
00006f58 l       .debug_str	00000000 
00005be4 l       .debug_str	00000000 
00006f19 l       .debug_str	00000000 
00005baa l       .debug_str	00000000 
00006ef1 l       .debug_str	00000000 
00005b82 l       .debug_str	00000000 
00006ec6 l       .debug_str	00000000 
00005b6e l       .debug_str	00000000 
00006e9e l       .debug_str	00000000 
00005b62 l       .debug_str	00000000 
00006e8f l       .debug_str	00000000 
00005b56 l       .debug_str	00000000 
00006e83 l       .debug_str	00000000 
00005b4d l       .debug_str	00000000 
00006e06 l       .debug_str	00000000 
00005b12 l       .debug_str	00000000 
00006d91 l       .debug_str	00000000 
00005aea l       .debug_str	00000000 
00006d69 l       .debug_str	00000000 
00005abe l       .debug_str	00000000 
00006d5e l       .debug_str	00000000 
00005a96 l       .debug_str	00000000 
00006d57 l       .debug_str	00000000 
00005a5a l       .debug_str	00000000 
00006d1f l       .debug_str	00000000 
00005a32 l       .debug_str	00000000 
00006cf7 l       .debug_str	00000000 
000059ee l       .debug_str	00000000 
00006cbc l       .debug_str	00000000 
000059c6 l       .debug_str	00000000 
00006c94 l       .debug_str	00000000 
00005985 l       .debug_str	00000000 
00006c5d l       .debug_str	00000000 
0000595d l       .debug_str	00000000 
00006c35 l       .debug_str	00000000 
0000592d l       .debug_str	00000000 
00006bf4 l       .debug_str	00000000 
00005905 l       .debug_str	00000000 
00006bcc l       .debug_str	00000000 
000058d3 l       .debug_str	00000000 
00006ba5 l       .debug_str	00000000 
000058ab l       .debug_str	00000000 
00006b7d l       .debug_str	00000000 
00005872 l       .debug_str	00000000 
00006b36 l       .debug_str	00000000 
0000584a l       .debug_str	00000000 
00006b0e l       .debug_str	00000000 
0000581b l       .debug_str	00000000 
00006ad4 l       .debug_str	00000000 
000057f3 l       .debug_str	00000000 
00006aac l       .debug_str	00000000 
000057e8 l       .debug_str	00000000 
00006a7b l       .debug_str	00000000 
000057e0 l       .debug_str	00000000 
00006a53 l       .debug_str	00000000 
000057d7 l       .debug_str	00000000 
00006a17 l       .debug_str	00000000 
000057aa l       .debug_str	00000000 
000069ef l       .debug_str	00000000 
00005782 l       .debug_str	00000000 
000069bc l       .debug_str	00000000 
00005755 l       .debug_str	00000000 
00006994 l       .debug_str	00000000 
0000572d l       .debug_str	00000000 
00006953 l       .debug_str	00000000 
000056ee l       .debug_str	00000000 
0000692b l       .debug_str	00000000 
000056c6 l       .debug_str	00000000 
00006907 l       .debug_str	00000000 
000056ad l       .debug_str	00000000 
000068df l       .debug_str	00000000 
00005698 l       .debug_str	00000000 
00006896 l       .debug_str	00000000 
0000563d l       .debug_str	00000000 
0000686e l       .debug_str	00000000 
000055ea l       .debug_str	00000000 
00006835 l       .debug_str	00000000 
000055d2 l       .debug_str	00000000 
0000680d l       .debug_str	00000000 
000055bd l       .debug_str	00000000 
000067e2 l       .debug_str	00000000 
000055ae l       .debug_str	00000000 
000067ba l       .debug_str	00000000 
000055a3 l       .debug_str	00000000 
00006788 l       .debug_str	00000000 
00005594 l       .debug_str	00000000 
00006760 l       .debug_str	00000000 
00005564 l       .debug_str	00000000 
0000672c l       .debug_str	00000000 
0000553c l       .debug_str	00000000 
00006704 l       .debug_str	00000000 
000054f3 l       .debug_str	00000000 
000066f6 l       .debug_str	00000000 
000054cb l       .debug_str	00000000 
000066e6 l       .debug_str	00000000 
0000548c l       .debug_str	00000000 
000066db l       .debug_str	00000000 
00005464 l       .debug_str	00000000 
000066c8 l       .debug_str	00000000 
00005441 l       .debug_str	00000000 
000066bf l       .debug_str	00000000 
00005419 l       .debug_str	00000000 
00006693 l       .debug_str	00000000 
000053eb l       .debug_str	00000000 
0000666b l       .debug_str	00000000 
000053c3 l       .debug_str	00000000 
00006632 l       .debug_str	00000000 
000053b9 l       .debug_str	00000000 
0000660a l       .debug_str	00000000 
000053b3 l       .debug_str	00000000 
000065cd l       .debug_str	00000000 
000053a9 l       .debug_str	00000000 
000065a5 l       .debug_str	00000000 
0000537b l       .debug_str	00000000 
00006569 l       .debug_str	00000000 
00005374 l       .debug_str	00000000 
00006541 l       .debug_str	00000000 
00005351 l       .debug_str	00000000 
000064ea l       .debug_str	00000000 
00005329 l       .debug_str	00000000 
0000649b l       .debug_str	00000000 
00005322 l       .debug_str	00000000 
0000645f l       .debug_str	00000000 
00005317 l       .debug_str	00000000 
00006437 l       .debug_str	00000000 
0000530e l       .debug_str	00000000 
000063f3 l       .debug_str	00000000 
000052d0 l       .debug_str	00000000 
000063cb l       .debug_str	00000000 
000052a8 l       .debug_str	00000000 
00006394 l       .debug_str	00000000 
0000528d l       .debug_str	00000000 
0000636c l       .debug_str	00000000 
00005260 l       .debug_str	00000000 
00006331 l       .debug_str	00000000 
00005253 l       .debug_str	00000000 
00006309 l       .debug_str	00000000 
00005228 l       .debug_str	00000000 
000062c7 l       .debug_str	00000000 
0000521f l       .debug_str	00000000 
0000629f l       .debug_str	00000000 
0000520f l       .debug_str	00000000 
00006264 l       .debug_str	00000000 
000051e4 l       .debug_str	00000000 
0000623c l       .debug_str	00000000 
000051bc l       .debug_str	00000000 
000061ff l       .debug_str	00000000 
0000517f l       .debug_str	00000000 
000061d7 l       .debug_str	00000000 
00005157 l       .debug_str	00000000 
000061b3 l       .debug_str	00000000 
0000511c l       .debug_str	00000000 
0000618b l       .debug_str	00000000 
000050f4 l       .debug_str	00000000 
00006155 l       .debug_str	00000000 
000050cb l       .debug_str	00000000 
0000612d l       .debug_str	00000000 
000050a3 l       .debug_str	00000000 
0000611d l       .debug_str	00000000 
00005096 l       .debug_str	00000000 
00006114 l       .debug_str	00000000 
0000504d l       .debug_str	00000000 
0000610a l       .debug_str	00000000 
00005025 l       .debug_str	00000000 
000060d1 l       .debug_str	00000000 
00004ff4 l       .debug_str	00000000 
000060a9 l       .debug_str	00000000 
00004fcc l       .debug_str	00000000 
00006081 l       .debug_str	00000000 
00004f9d l       .debug_str	00000000 
0000604c l       .debug_str	00000000 
00004f75 l       .debug_str	00000000 
00006024 l       .debug_str	00000000 
00004f44 l       .debug_str	00000000 
00005fec l       .debug_str	00000000 
00004f1c l       .debug_str	00000000 
00005fc4 l       .debug_str	00000000 
00004f07 l       .debug_str	00000000 
00005f8c l       .debug_str	00000000 
00004ed2 l       .debug_str	00000000 
00005f64 l       .debug_str	00000000 
00004eaa l       .debug_str	00000000 
00005f34 l       .debug_str	00000000 
00004e91 l       .debug_str	00000000 
00005f0c l       .debug_str	00000000 
00004e6d l       .debug_str	00000000 
00005eff l       .debug_str	00000000 
00004e62 l       .debug_str	00000000 
00005ef5 l       .debug_str	00000000 
00004e51 l       .debug_str	00000000 
00005eed l       .debug_str	00000000 
00004e49 l       .debug_str	00000000 
00005ee4 l       .debug_str	00000000 
00004e3a l       .debug_str	00000000 
00005ee0 l       .debug_str	00000000 
00004e31 l       .debug_str	00000000 
00005eba l       .debug_str	00000000 
00004e25 l       .debug_str	00000000 
00005e92 l       .debug_str	00000000 
00004e19 l       .debug_str	00000000 
00005e88 l       .debug_str	00000000 
00004e0b l       .debug_str	00000000 
00005e82 l       .debug_str	00000000 
00004dfd l       .debug_str	00000000 
00005e7a l       .debug_str	00000000 
00004dcd l       .debug_str	00000000 
00005e51 l       .debug_str	00000000 
00004da5 l       .debug_str	00000000 
00005e29 l       .debug_str	00000000 
00004d99 l       .debug_str	00000000 
00005def l       .debug_str	00000000 
00004d93 l       .debug_str	00000000 
00005dc7 l       .debug_str	00000000 
00004d88 l       .debug_str	00000000 
00005d8c l       .debug_str	00000000 
00004d53 l       .debug_str	00000000 
00005d64 l       .debug_str	00000000 
00004d3f l       .debug_str	00000000 
00005d2a l       .debug_str	00000000 
00004d31 l       .debug_str	00000000 
00005d02 l       .debug_str	00000000 
00004cc7 l       .debug_str	00000000 
00005cd0 l       .debug_str	00000000 
00004c65 l       .debug_str	00000000 
00005ca8 l       .debug_str	00000000 
00004c5e l       .debug_str	00000000 
00005c92 l       .debug_str	00000000 
00004c24 l       .debug_str	00000000 
00005c71 l       .debug_str	00000000 
00004bfc l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000aa l       .debug_str	00000000 
000000d0 l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000e1 l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
0000015b l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
00000194 l       .debug_str	00000000 
0000019b l       .debug_str	00000000 
000001a2 l       .debug_str	00000000 
000001a7 l       .debug_str	00000000 
000001b1 l       .debug_str	00000000 
000001d4 l       .debug_str	00000000 
000001dd l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
0000021d l       .debug_str	00000000 
00000245 l       .debug_str	00000000 
00000279 l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
0000028f l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000002ca l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002f6 l       .debug_str	00000000 
0000031e l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
00000351 l       .debug_str	00000000 
0000035a l       .debug_str	00000000 
0000037f l       .debug_str	00000000 
00000399 l       .debug_str	00000000 
000003a5 l       .debug_str	00000000 
000003cd l       .debug_str	00000000 
000003f5 l       .debug_str	00000000 
000003f8 l       .debug_str	00000000 
000003ff l       .debug_str	00000000 
00000408 l       .debug_str	00000000 
00000414 l       .debug_str	00000000 
0000041a l       .debug_str	00000000 
00000426 l       .debug_str	00000000 
0000042e l       .debug_str	00000000 
00000432 l       .debug_str	00000000 
0000048c l       .debug_str	00000000 
000004ee l       .debug_str	00000000 
000004f9 l       .debug_str	00000000 
00000540 l       .debug_str	00000000 
0000058f l       .debug_str	00000000 
00000599 l       .debug_str	00000000 
000005d6 l       .debug_str	00000000 
0000061b l       .debug_str	00000000 
00000624 l       .debug_str	00000000 
00000634 l       .debug_str	00000000 
0000063c l       .debug_str	00000000 
00000691 l       .debug_str	00000000 
000006ee l       .debug_str	00000000 
000006fa l       .debug_str	00000000 
00000703 l       .debug_str	00000000 
0000070f l       .debug_str	00000000 
0000071b l       .debug_str	00000000 
00000724 l       .debug_str	00000000 
0000072c l       .debug_str	00000000 
00000736 l       .debug_str	00000000 
0000073e l       .debug_str	00000000 
00000753 l       .debug_str	00000000 
0000075a l       .debug_str	00000000 
0000077a l       .debug_str	00000000 
00000781 l       .debug_str	00000000 
00000789 l       .debug_str	00000000 
00000793 l       .debug_str	00000000 
0000079e l       .debug_str	00000000 
000007a7 l       .debug_str	00000000 
000007b2 l       .debug_str	00000000 
000007be l       .debug_str	00000000 
000007c7 l       .debug_str	00000000 
000007ce l       .debug_str	00000000 
000007d6 l       .debug_str	00000000 
000007de l       .debug_str	00000000 
000007e8 l       .debug_str	00000000 
000007ee l       .debug_str	00000000 
000007f5 l       .debug_str	00000000 
000007fc l       .debug_str	00000000 
00000802 l       .debug_str	00000000 
00000808 l       .debug_str	00000000 
00000817 l       .debug_str	00000000 
00000827 l       .debug_str	00000000 
00000837 l       .debug_str	00000000 
0000083f l       .debug_str	00000000 
00000868 l       .debug_str	00000000 
000008c6 l       .debug_str	00000000 
0000092c l       .debug_str	00000000 
00000933 l       .debug_str	00000000 
0000093b l       .debug_str	00000000 
00000959 l       .debug_str	00000000 
00000969 l       .debug_str	00000000 
00000977 l       .debug_str	00000000 
00000982 l       .debug_str	00000000 
0000098f l       .debug_str	00000000 
0000099e l       .debug_str	00000000 
000009b4 l       .debug_str	00000000 
000009be l       .debug_str	00000000 
000009e4 l       .debug_str	00000000 
000009fa l       .debug_str	00000000 
00000a05 l       .debug_str	00000000 
00000a1b l       .debug_str	00000000 
00000a23 l       .debug_str	00000000 
00000a44 l       .debug_str	00000000 
00000a5b l       .debug_str	00000000 
00000a60 l       .debug_str	00000000 
00000a68 l       .debug_str	00000000 
00000a71 l       .debug_str	00000000 
00000a7a l       .debug_str	00000000 
00000a83 l       .debug_str	00000000 
00000a8b l       .debug_str	00000000 
00000a8f l       .debug_str	00000000 
00000a96 l       .debug_str	00000000 
00000aa2 l       .debug_str	00000000 
00000aad l       .debug_str	00000000 
00000ab5 l       .debug_str	00000000 
00000abd l       .debug_str	00000000 
00000b39 l       .debug_str	00000000 
00000bbd l       .debug_str	00000000 
00000cb9 l       .debug_str	00000000 
00000dbd l       .debug_str	00000000 
00000dcb l       .debug_str	00000000 
00000dd6 l       .debug_str	00000000 
00000de0 l       .debug_str	00000000 
00000df4 l       .debug_str	00000000 
00000dff l       .debug_str	00000000 
00000e2d l       .debug_str	00000000 
00000ea8 l       .debug_str	00000000 
00000f2b l       .debug_str	00000000 
00000f39 l       .debug_str	00000000 
00000f98 l       .debug_str	00000000 
00000fff l       .debug_str	00000000 
00001015 l       .debug_str	00000000 
00001025 l       .debug_str	00000000 
00001034 l       .debug_str	00000000 
00001038 l       .debug_str	00000000 
0000103f l       .debug_str	00000000 
00001045 l       .debug_str	00000000 
00001049 l       .debug_str	00000000 
0000104f l       .debug_str	00000000 
00001055 l       .debug_str	00000000 
00001061 l       .debug_str	00000000 
00001069 l       .debug_str	00000000 
0000106f l       .debug_str	00000000 
00001077 l       .debug_str	00000000 
0000107d l       .debug_str	00000000 
000010a0 l       .debug_str	00000000 
000010b0 l       .debug_str	00000000 
000010e3 l       .debug_str	00000000 
00001123 l       .debug_str	00000000 
0000116b l       .debug_str	00000000 
0000116f l       .debug_str	00000000 
00001175 l       .debug_str	00000000 
0000117b l       .debug_str	00000000 
00001181 l       .debug_str	00000000 
00001193 l       .debug_str	00000000 
000011c8 l       .debug_str	00000000 
0000120a l       .debug_str	00000000 
00001254 l       .debug_str	00000000 
00001258 l       .debug_str	00000000 
0000125e l       .debug_str	00000000 
00001264 l       .debug_str	00000000 
0000126a l       .debug_str	00000000 
0000127c l       .debug_str	00000000 
000012b1 l       .debug_str	00000000 
000012f3 l       .debug_str	00000000 
0000133d l       .debug_str	00000000 
00001341 l       .debug_str	00000000 
00001347 l       .debug_str	00000000 
0000134d l       .debug_str	00000000 
00001353 l       .debug_str	00000000 
00001359 l       .debug_str	00000000 
0000136a l       .debug_str	00000000 
0000139e l       .debug_str	00000000 
000013df l       .debug_str	00000000 
00001428 l       .debug_str	00000000 
0000142d l       .debug_str	00000000 
00001432 l       .debug_str	00000000 
00001436 l       .debug_str	00000000 
0000143c l       .debug_str	00000000 
00001442 l       .debug_str	00000000 
00001448 l       .debug_str	00000000 
00001459 l       .debug_str	00000000 
0000148d l       .debug_str	00000000 
000014ce l       .debug_str	00000000 
00001517 l       .debug_str	00000000 
0000151b l       .debug_str	00000000 
00001524 l       .debug_str	00000000 
00001535 l       .debug_str	00000000 
00001569 l       .debug_str	00000000 
000015aa l       .debug_str	00000000 
000015f3 l       .debug_str	00000000 
000015f8 l       .debug_str	00000000 
000015fc l       .debug_str	00000000 
00001605 l       .debug_str	00000000 
0000160c l       .debug_str	00000000 
00001614 l       .debug_str	00000000 
00001626 l       .debug_str	00000000 
0000165b l       .debug_str	00000000 
0000169d l       .debug_str	00000000 
000016e7 l       .debug_str	00000000 
000016eb l       .debug_str	00000000 
000016f1 l       .debug_str	00000000 
000016f7 l       .debug_str	00000000 
000016fd l       .debug_str	00000000 
00001703 l       .debug_str	00000000 
0000170b l       .debug_str	00000000 
00001719 l       .debug_str	00000000 
00001728 l       .debug_str	00000000 
00001739 l       .debug_str	00000000 
00001744 l       .debug_str	00000000 
0000174f l       .debug_str	00000000 
0000175a l       .debug_str	00000000 
00001761 l       .debug_str	00000000 
00001784 l       .debug_str	00000000 
00001796 l       .debug_str	00000000 
000017cb l       .debug_str	00000000 
0000180d l       .debug_str	00000000 
00001857 l       .debug_str	00000000 
0000185b l       .debug_str	00000000 
00001865 l       .debug_str	00000000 
00001877 l       .debug_str	00000000 
000018ac l       .debug_str	00000000 
000018ee l       .debug_str	00000000 
00001938 l       .debug_str	00000000 
0000193d l       .debug_str	00000000 
00001947 l       .debug_str	00000000 
00001959 l       .debug_str	00000000 
0000198e l       .debug_str	00000000 
000019d0 l       .debug_str	00000000 
00001a1a l       .debug_str	00000000 
00001a2e l       .debug_str	00000000 
00001a32 l       .debug_str	00000000 
00001a40 l       .debug_str	00000000 
00001a50 l       .debug_str	00000000 
00001a59 l       .debug_str	00000000 
00001a64 l       .debug_str	00000000 
00001a73 l       .debug_str	00000000 
00001a88 l       .debug_str	00000000 
00001ab9 l       .debug_str	00000000 
00001b56 l       .debug_str	00000000 
00001bfb l       .debug_str	00000000 
00001c06 l       .debug_str	00000000 
00001c0f l       .debug_str	00000000 
00001c30 l       .debug_str	00000000 
00001c43 l       .debug_str	00000000 
00001c79 l       .debug_str	00000000 
00001cfc l       .debug_str	00000000 
00001d87 l       .debug_str	00000000 
00001da3 l       .debug_str	00000000 
00001def l       .debug_str	00000000 
00001e43 l       .debug_str	00000000 
00001e60 l       .debug_str	00000000 
00001e74 l       .debug_str	00000000 
00001ec0 l       .debug_str	00000000 
00001f14 l       .debug_str	00000000 
00001f2a l       .debug_str	00000000 
00001f3e l       .debug_str	00000000 
00001f85 l       .debug_str	00000000 
00001fd4 l       .debug_str	00000000 
00001fdd l       .debug_str	00000000 
00001feb l       .debug_str	00000000 
0000201c l       .debug_str	00000000 
00002022 l       .debug_str	00000000 
0000202a l       .debug_str	00000000 
00002031 l       .debug_str	00000000 
00002039 l       .debug_str	00000000 
00002044 l       .debug_str	00000000 
0000204c l       .debug_str	00000000 
0000205b l       .debug_str	00000000 
0000205f l       .debug_str	00000000 
0000206a l       .debug_str	00000000 
00002076 l       .debug_str	00000000 
00002081 l       .debug_str	00000000 
00002092 l       .debug_str	00000000 
00002098 l       .debug_str	00000000 
000020a0 l       .debug_str	00000000 
000020a7 l       .debug_str	00000000 
000020b1 l       .debug_str	00000000 
000020b9 l       .debug_str	00000000 
000020c1 l       .debug_str	00000000 
000020e3 l       .debug_str	00000000 
000020ee l       .debug_str	00000000 
000020fa l       .debug_str	00000000 
00002102 l       .debug_str	00000000 
0000210b l       .debug_str	00000000 
00002116 l       .debug_str	00000000 
0000211d l       .debug_str	00000000 
00002128 l       .debug_str	00000000 
00002133 l       .debug_str	00000000 
00002143 l       .debug_str	00000000 
0000214d l       .debug_str	00000000 
00002153 l       .debug_str	00000000 
00002175 l       .debug_str	00000000 
000021ad l       .debug_str	00000000 
000021ed l       .debug_str	00000000 
000021f4 l       .debug_str	00000000 
000021fc l       .debug_str	00000000 
00002213 l       .debug_str	00000000 
0000221c l       .debug_str	00000000 
0000222c l       .debug_str	00000000 
0000223b l       .debug_str	00000000 
00002243 l       .debug_str	00000000 
00004bbd l       .debug_str	00000000 
00002252 l       .debug_str	00000000 
00002270 l       .debug_str	00000000 
00002280 l       .debug_str	00000000 
000022b3 l       .debug_str	00000000 
000022c8 l       .debug_str	00000000 
000022d1 l       .debug_str	00000000 
0000232e l       .debug_str	00000000 
00002393 l       .debug_str	00000000 
0000239d l       .debug_str	00000000 
000023ad l       .debug_str	00000000 
000023c2 l       .debug_str	00000000 
000023ca l       .debug_str	00000000 
0000242e l       .debug_str	00000000 
0000249a l       .debug_str	00000000 
000024a1 l       .debug_str	00000000 
000024a9 l       .debug_str	00000000 
000024c7 l       .debug_str	00000000 
000024d7 l       .debug_str	00000000 
0000250a l       .debug_str	00000000 
0000251f l       .debug_str	00000000 
00002532 l       .debug_str	00000000 
00002547 l       .debug_str	00000000 
0000254e l       .debug_str	00000000 
00002563 l       .debug_str	00000000 
0000258d l       .debug_str	00000000 
00002599 l       .debug_str	00000000 
000025ae l       .debug_str	00000000 
000025d6 l       .debug_str	00000000 
00002611 l       .debug_str	00000000 
00002618 l       .debug_str	00000000 
00002624 l       .debug_str	00000000 
0000264a l       .debug_str	00000000 
00002656 l       .debug_str	00000000 
0000267d l       .debug_str	00000000 
00002688 l       .debug_str	00000000 
00002693 l       .debug_str	00000000 
000026a4 l       .debug_str	00000000 
000026a9 l       .debug_str	00000000 
000026bd l       .debug_str	00000000 
000026ec l       .debug_str	00000000 
00002749 l       .debug_str	00000000 
000027ae l       .debug_str	00000000 
000027b6 l       .debug_str	00000000 
000027bf l       .debug_str	00000000 
000027f0 l       .debug_str	00000000 
00002816 l       .debug_str	00000000 
0000282e l       .debug_str	00000000 
00002856 l       .debug_str	00000000 
0000288a l       .debug_str	00000000 
00002893 l       .debug_str	00000000 
00002898 l       .debug_str	00000000 
000028a0 l       .debug_str	00000000 
000028a9 l       .debug_str	00000000 
000028bf l       .debug_str	00000000 
000028dd l       .debug_str	00000000 
000028e6 l       .debug_str	00000000 
000028ef l       .debug_str	00000000 
00002905 l       .debug_str	00000000 
00002923 l       .debug_str	00000000 
00002928 l       .debug_str	00000000 
0000292c l       .debug_str	00000000 
00002935 l       .debug_str	00000000 
0000294b l       .debug_str	00000000 
00002969 l       .debug_str	00000000 
00002970 l       .debug_str	00000000 
00002978 l       .debug_str	00000000 
0000298d l       .debug_str	00000000 
000029aa l       .debug_str	00000000 
000029b2 l       .debug_str	00000000 
000029bc l       .debug_str	00000000 
000029d3 l       .debug_str	00000000 
000029f2 l       .debug_str	00000000 
000029fc l       .debug_str	00000000 
00002a02 l       .debug_str	00000000 
00002a0f l       .debug_str	00000000 
00002a13 l       .debug_str	00000000 
00002a1b l       .debug_str	00000000 
00002a23 l       .debug_str	00000000 
00002a2d l       .debug_str	00000000 
00002a33 l       .debug_str	00000000 
00002a38 l       .debug_str	00000000 
00002a3d l       .debug_str	00000000 
00002a4e l       .debug_str	00000000 
00002a67 l       .debug_str	00000000 
00002a78 l       .debug_str	00000000 
00002a91 l       .debug_str	00000000 
00002aa2 l       .debug_str	00000000 
00002abb l       .debug_str	00000000 
00002acd l       .debug_str	00000000 
00002ae7 l       .debug_str	00000000 
00002af7 l       .debug_str	00000000 
00002b0f l       .debug_str	00000000 
00002b15 l       .debug_str	00000000 
00002b2f l       .debug_str	00000000 
00002b33 l       .debug_str	00000000 
00002b39 l       .debug_str	00000000 
00002b3d l       .debug_str	00000000 
00002b42 l       .debug_str	00000000 
00002b48 l       .debug_str	00000000 
00002b54 l       .debug_str	00000000 
00002b7f l       .debug_str	00000000 
00002b89 l       .debug_str	00000000 
00002b95 l       .debug_str	00000000 
00002bc0 l       .debug_str	00000000 
00002bc5 l       .debug_str	00000000 
00002bcc l       .debug_str	00000000 
00002bf5 l       .debug_str	00000000 
00002c43 l       .debug_str	00000000 
00002c99 l       .debug_str	00000000 
00002ca1 l       .debug_str	00000000 
00002ca6 l       .debug_str	00000000 
00002cb3 l       .debug_str	00000000 
00002cb9 l       .debug_str	00000000 
00002cc2 l       .debug_str	00000000 
00002ceb l       .debug_str	00000000 
00002d39 l       .debug_str	00000000 
00002d8f l       .debug_str	00000000 
00002d98 l       .debug_str	00000000 
00002dc1 l       .debug_str	00000000 
00002e0f l       .debug_str	00000000 
00002e65 l       .debug_str	00000000 
00002e6f l       .debug_str	00000000 
00002e98 l       .debug_str	00000000 
00002ee6 l       .debug_str	00000000 
00002f3c l       .debug_str	00000000 
00002f42 l       .debug_str	00000000 
00002f6b l       .debug_str	00000000 
00002fb9 l       .debug_str	00000000 
0000300f l       .debug_str	00000000 
00003018 l       .debug_str	00000000 
00003041 l       .debug_str	00000000 
0000308f l       .debug_str	00000000 
000030e5 l       .debug_str	00000000 
00003100 l       .debug_str	00000000 
00003106 l       .debug_str	00000000 
0000310f l       .debug_str	00000000 
00003116 l       .debug_str	00000000 
00003123 l       .debug_str	00000000 
00003155 l       .debug_str	00000000 
0000318f l       .debug_str	00000000 
00003196 l       .debug_str	00000000 
000031a9 l       .debug_str	00000000 
000031c4 l       .debug_str	00000000 
000031de l       .debug_str	00000000 
00003206 l       .debug_str	00000000 
00003240 l       .debug_str	00000000 
00003268 l       .debug_str	00000000 
000032b1 l       .debug_str	00000000 
000032bc l       .debug_str	00000000 
000032c6 l       .debug_str	00000000 
000032ed l       .debug_str	00000000 
00003305 l       .debug_str	00000000 
0000332d l       .debug_str	00000000 
00003361 l       .debug_str	00000000 
00003389 l       .debug_str	00000000 
000033c9 l       .debug_str	00000000 
000033f1 l       .debug_str	00000000 
0000343a l       .debug_str	00000000 
00003462 l       .debug_str	00000000 
000034a6 l       .debug_str	00000000 
000034ce l       .debug_str	00000000 
000034f4 l       .debug_str	00000000 
000034f9 l       .debug_str	00000000 
00003505 l       .debug_str	00000000 
0000352d l       .debug_str	00000000 
00003565 l       .debug_str	00000000 
0000358d l       .debug_str	00000000 
000035b2 l       .debug_str	00000000 
000035da l       .debug_str	00000000 
00003610 l       .debug_str	00000000 
00003638 l       .debug_str	00000000 
0000366c l       .debug_str	00000000 
00003694 l       .debug_str	00000000 
000036d8 l       .debug_str	00000000 
00003700 l       .debug_str	00000000 
00003747 l       .debug_str	00000000 
00003756 l       .debug_str	00000000 
0000377e l       .debug_str	00000000 
000037a9 l       .debug_str	00000000 
000037b2 l       .debug_str	00000000 
000037f4 l       .debug_str	00000000 
0000383e l       .debug_str	00000000 
00003845 l       .debug_str	00000000 
00003853 l       .debug_str	00000000 
00003860 l       .debug_str	00000000 
00003888 l       .debug_str	00000000 
000038b5 l       .debug_str	00000000 
000038be l       .debug_str	00000000 
000038c2 l       .debug_str	00000000 
000038c8 l       .debug_str	00000000 
000038ee l       .debug_str	00000000 
00003945 l       .debug_str	00000000 
000039a4 l       .debug_str	00000000 
000039a9 l       .debug_str	00000000 
000039fe l       .debug_str	00000000 
00003a5b l       .debug_str	00000000 
00003a68 l       .debug_str	00000000 
00003a98 l       .debug_str	00000000 
00003a9d l       .debug_str	00000000 
00003ac5 l       .debug_str	00000000 
00003aee l       .debug_str	00000000 
00003b16 l       .debug_str	00000000 
00003b3b l       .debug_str	00000000 
00003b47 l       .debug_str	00000000 
00003b4c l       .debug_str	00000000 
00003b53 l       .debug_str	00000000 
00003b5b l       .debug_str	00000000 
00003b63 l       .debug_str	00000000 
00003b6a l       .debug_str	00000000 
00003b71 l       .debug_str	00000000 
00003b73 l       .debug_str	00000000 
00003b76 l       .debug_str	00000000 
00003b87 l       .debug_str	00000000 
00003ba0 l       .debug_str	00000000 
00003ba4 l       .debug_str	00000000 
00003bae l       .debug_str	00000000 
00003bd5 l       .debug_str	00000000 
00003c21 l       .debug_str	00000000 
00003c75 l       .debug_str	00000000 
00003c8e l       .debug_str	00000000 
00003c99 l       .debug_str	00000000 
00003cc1 l       .debug_str	00000000 
00003cee l       .debug_str	00000000 
00003d16 l       .debug_str	00000000 
00003d60 l       .debug_str	00000000 
00003d6c l       .debug_str	00000000 
00003d76 l       .debug_str	00000000 
00003d89 l       .debug_str	00000000 
00003db1 l       .debug_str	00000000 
00003dea l       .debug_str	00000000 
00003e17 l       .debug_str	00000000 
00003e2f l       .debug_str	00000000 
00003e57 l       .debug_str	00000000 
00003e8b l       .debug_str	00000000 
00003e95 l       .debug_str	00000000 
00003e9e l       .debug_str	00000000 
00003ea7 l       .debug_str	00000000 
00003eb1 l       .debug_str	00000000 
00003ed9 l       .debug_str	00000000 
00003eff l       .debug_str	00000000 
00003f27 l       .debug_str	00000000 
00003f65 l       .debug_str	00000000 
00003f8d l       .debug_str	00000000 
00003fbf l       .debug_str	00000000 
00003fe7 l       .debug_str	00000000 
00004020 l       .debug_str	00000000 
0000402a l       .debug_str	00000000 
0000402f l       .debug_str	00000000 
00004035 l       .debug_str	00000000 
00004058 l       .debug_str	00000000 
00004060 l       .debug_str	00000000 
00004067 l       .debug_str	00000000 
00004090 l       .debug_str	00000000 
000040a9 l       .debug_str	00000000 
000040b4 l       .debug_str	00000000 
000040d8 l       .debug_str	00000000 
000040e1 l       .debug_str	00000000 
000040f1 l       .debug_str	00000000 
00004119 l       .debug_str	00000000 
00004145 l       .debug_str	00000000 
00004147 l       .debug_str	00000000 
0000414c l       .debug_str	00000000 
000041a2 l       .debug_str	00000000 
00004200 l       .debug_str	00000000 
00004206 l       .debug_str	00000000 
0000425d l       .debug_str	00000000 
000042bc l       .debug_str	00000000 
000042c2 l       .debug_str	00000000 
00004319 l       .debug_str	00000000 
00004378 l       .debug_str	00000000 
0000437e l       .debug_str	00000000 
000043d5 l       .debug_str	00000000 
00004434 l       .debug_str	00000000 
00004438 l       .debug_str	00000000 
000044a1 l       .debug_str	00000000 
00004512 l       .debug_str	00000000 
00004516 l       .debug_str	00000000 
00004523 l       .debug_str	00000000 
00004537 l       .debug_str	00000000 
0000456c l       .debug_str	00000000 
00004570 l       .debug_str	00000000 
00004576 l       .debug_str	00000000 
00004581 l       .debug_str	00000000 
000045a9 l       .debug_str	00000000 
000045d8 l       .debug_str	00000000 
00004600 l       .debug_str	00000000 
00004639 l       .debug_str	00000000 
00004655 l       .debug_str	00000000 
0000467d l       .debug_str	00000000 
000046bf l       .debug_str	00000000 
000046e7 l       .debug_str	00000000 
0000471d l       .debug_str	00000000 
00004737 l       .debug_str	00000000 
0000475f l       .debug_str	00000000 
00004795 l       .debug_str	00000000 
0000479e l       .debug_str	00000000 
000047aa l       .debug_str	00000000 
000047d2 l       .debug_str	00000000 
000047fa l       .debug_str	00000000 
00004822 l       .debug_str	00000000 
0000485b l       .debug_str	00000000 
00004883 l       .debug_str	00000000 
000048aa l       .debug_str	00000000 
000048d2 l       .debug_str	00000000 
00004905 l       .debug_str	00000000 
0000492d l       .debug_str	00000000 
00004965 l       .debug_str	00000000 
0000498d l       .debug_str	00000000 
000049d6 l       .debug_str	00000000 
000049fe l       .debug_str	00000000 
00004a34 l       .debug_str	00000000 
00004a5c l       .debug_str	00000000 
00004a88 l       .debug_str	00000000 
00004ab4 l       .debug_str	00000000 
00004acd l       .debug_str	00000000 
00004af5 l       .debug_str	00000000 
00004b31 l       .debug_str	00000000 
00004b59 l       .debug_str	00000000 
00004b95 l       .debug_str	00000000 
00005c69 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3mem4swap17hddd51f7392412bcdE	00000000 .text._ZN4core3mem4swap17hddd51f7392412bcdE
00000000 l    d  .text._ZN4core3mem6zeroed17h0057664fb31510f0E	00000000 .text._ZN4core3mem6zeroed17h0057664fb31510f0E
00000000 l    d  .text._ZN4core3mem6zeroed17h059f27919afda5c7E	00000000 .text._ZN4core3mem6zeroed17h059f27919afda5c7E
00000000 l    d  .text._ZN4core3mem6zeroed17h09e066aac8ae1c92E	00000000 .text._ZN4core3mem6zeroed17h09e066aac8ae1c92E
00000000 l    d  .text._ZN4core3mem6zeroed17h0a091e4c39ae1592E	00000000 .text._ZN4core3mem6zeroed17h0a091e4c39ae1592E
00000000 l    d  .text._ZN4core3mem6zeroed17h0e27420e8bed01d8E	00000000 .text._ZN4core3mem6zeroed17h0e27420e8bed01d8E
00000000 l    d  .text._ZN4core3mem6zeroed17h10651f04df249ad9E	00000000 .text._ZN4core3mem6zeroed17h10651f04df249ad9E
00000000 l    d  .text._ZN4core3mem6zeroed17h12024cc37b001f1aE	00000000 .text._ZN4core3mem6zeroed17h12024cc37b001f1aE
00000000 l    d  .text._ZN4core3mem6zeroed17h25b6b813846e7c61E	00000000 .text._ZN4core3mem6zeroed17h25b6b813846e7c61E
00000000 l    d  .text._ZN4core3mem6zeroed17h2635098c08d6da2aE	00000000 .text._ZN4core3mem6zeroed17h2635098c08d6da2aE
00000000 l    d  .text._ZN4core3mem6zeroed17h2b96f2fe78697d7aE	00000000 .text._ZN4core3mem6zeroed17h2b96f2fe78697d7aE
00000000 l    d  .text._ZN4core3mem6zeroed17h2cb42645087eec9eE	00000000 .text._ZN4core3mem6zeroed17h2cb42645087eec9eE
00000000 l    d  .text._ZN4core3mem6zeroed17h2dc4818538ab5ab1E	00000000 .text._ZN4core3mem6zeroed17h2dc4818538ab5ab1E
00000000 l    d  .text._ZN4core3mem6zeroed17h2ee52780f0b1d1a9E	00000000 .text._ZN4core3mem6zeroed17h2ee52780f0b1d1a9E
00000000 l    d  .text._ZN4core3mem6zeroed17h2f500872a5110a5dE	00000000 .text._ZN4core3mem6zeroed17h2f500872a5110a5dE
00000000 l    d  .text._ZN4core3mem6zeroed17h30ac3436083d9fd3E	00000000 .text._ZN4core3mem6zeroed17h30ac3436083d9fd3E
00000000 l    d  .text._ZN4core3mem6zeroed17h335558c81c65c3f1E	00000000 .text._ZN4core3mem6zeroed17h335558c81c65c3f1E
00000000 l    d  .text._ZN4core3mem6zeroed17h359329aae73a707bE	00000000 .text._ZN4core3mem6zeroed17h359329aae73a707bE
00000000 l    d  .text._ZN4core3mem6zeroed17h35bc9f2d7d5a9c69E	00000000 .text._ZN4core3mem6zeroed17h35bc9f2d7d5a9c69E
00000000 l    d  .text._ZN4core3mem6zeroed17h3aaf0b3e9cd32fcfE	00000000 .text._ZN4core3mem6zeroed17h3aaf0b3e9cd32fcfE
00000000 l    d  .text._ZN4core3mem6zeroed17h3c0734ce5d7cc828E	00000000 .text._ZN4core3mem6zeroed17h3c0734ce5d7cc828E
00000000 l    d  .text._ZN4core3mem6zeroed17h3e5eeda6b29e8982E	00000000 .text._ZN4core3mem6zeroed17h3e5eeda6b29e8982E
00000000 l    d  .text._ZN4core3mem6zeroed17h3fed9b81f469d066E	00000000 .text._ZN4core3mem6zeroed17h3fed9b81f469d066E
00000000 l    d  .text._ZN4core3mem6zeroed17h409997dcee890454E	00000000 .text._ZN4core3mem6zeroed17h409997dcee890454E
00000000 l    d  .text._ZN4core3mem6zeroed17h413347a3be299545E	00000000 .text._ZN4core3mem6zeroed17h413347a3be299545E
00000000 l    d  .text._ZN4core3mem6zeroed17h433508d0e237d2c4E	00000000 .text._ZN4core3mem6zeroed17h433508d0e237d2c4E
00000000 l    d  .text._ZN4core3mem6zeroed17h43f6e726a6c1a49dE	00000000 .text._ZN4core3mem6zeroed17h43f6e726a6c1a49dE
00000000 l    d  .text._ZN4core3mem6zeroed17h445d634ed069a3a3E	00000000 .text._ZN4core3mem6zeroed17h445d634ed069a3a3E
00000000 l    d  .text._ZN4core3mem6zeroed17h47e2ea3f8debbb9bE	00000000 .text._ZN4core3mem6zeroed17h47e2ea3f8debbb9bE
00000000 l    d  .text._ZN4core3mem6zeroed17h4b3fcc92032ef3a7E	00000000 .text._ZN4core3mem6zeroed17h4b3fcc92032ef3a7E
00000000 l    d  .text._ZN4core3mem6zeroed17h4cea6c05dea4a7f1E	00000000 .text._ZN4core3mem6zeroed17h4cea6c05dea4a7f1E
00000000 l    d  .text._ZN4core3mem6zeroed17h4d1777e395b29862E	00000000 .text._ZN4core3mem6zeroed17h4d1777e395b29862E
00000000 l    d  .text._ZN4core3mem6zeroed17h4e3ee48363704f4eE	00000000 .text._ZN4core3mem6zeroed17h4e3ee48363704f4eE
00000000 l    d  .text._ZN4core3mem6zeroed17h4f2c62bb74004b03E	00000000 .text._ZN4core3mem6zeroed17h4f2c62bb74004b03E
00000000 l    d  .text._ZN4core3mem6zeroed17h5238e7b98dd1b416E	00000000 .text._ZN4core3mem6zeroed17h5238e7b98dd1b416E
00000000 l    d  .text._ZN4core3mem6zeroed17h554a1bfecf02743eE	00000000 .text._ZN4core3mem6zeroed17h554a1bfecf02743eE
00000000 l    d  .text._ZN4core3mem6zeroed17h58f0d0bd5fdaaf44E	00000000 .text._ZN4core3mem6zeroed17h58f0d0bd5fdaaf44E
00000000 l    d  .text._ZN4core3mem6zeroed17h59611fea6552adaaE	00000000 .text._ZN4core3mem6zeroed17h59611fea6552adaaE
00000000 l    d  .text._ZN4core3mem6zeroed17h59f8cc2e001c7ec4E	00000000 .text._ZN4core3mem6zeroed17h59f8cc2e001c7ec4E
00000000 l    d  .text._ZN4core3mem6zeroed17h5a6db3e01d1270dcE	00000000 .text._ZN4core3mem6zeroed17h5a6db3e01d1270dcE
00000000 l    d  .text._ZN4core3mem6zeroed17h5b82ad760567c4d6E	00000000 .text._ZN4core3mem6zeroed17h5b82ad760567c4d6E
00000000 l    d  .text._ZN4core3mem6zeroed17h61eab8dd2af3163cE	00000000 .text._ZN4core3mem6zeroed17h61eab8dd2af3163cE
00000000 l    d  .text._ZN4core3mem6zeroed17h61f1e740c85ecba9E	00000000 .text._ZN4core3mem6zeroed17h61f1e740c85ecba9E
00000000 l    d  .text._ZN4core3mem6zeroed17h63b49bebc57bd3e1E	00000000 .text._ZN4core3mem6zeroed17h63b49bebc57bd3e1E
00000000 l    d  .text._ZN4core3mem6zeroed17h64857ac6bf08ad49E	00000000 .text._ZN4core3mem6zeroed17h64857ac6bf08ad49E
00000000 l    d  .text._ZN4core3mem6zeroed17h69085cb6f0624774E	00000000 .text._ZN4core3mem6zeroed17h69085cb6f0624774E
00000000 l    d  .text._ZN4core3mem6zeroed17h6e8d1f2575559188E	00000000 .text._ZN4core3mem6zeroed17h6e8d1f2575559188E
00000000 l    d  .text._ZN4core3mem6zeroed17h6f22fab80e16136aE	00000000 .text._ZN4core3mem6zeroed17h6f22fab80e16136aE
00000000 l    d  .text._ZN4core3mem6zeroed17h6fdaf93d04b49221E	00000000 .text._ZN4core3mem6zeroed17h6fdaf93d04b49221E
00000000 l    d  .text._ZN4core3mem6zeroed17h738beaf7ecc7d2caE	00000000 .text._ZN4core3mem6zeroed17h738beaf7ecc7d2caE
00000000 l    d  .text._ZN4core3mem6zeroed17h7664b1b90d0f6c75E	00000000 .text._ZN4core3mem6zeroed17h7664b1b90d0f6c75E
00000000 l    d  .text._ZN4core3mem6zeroed17h7782525ffc641303E	00000000 .text._ZN4core3mem6zeroed17h7782525ffc641303E
00000000 l    d  .text._ZN4core3mem6zeroed17h7b34293f3a0a5051E	00000000 .text._ZN4core3mem6zeroed17h7b34293f3a0a5051E
00000000 l    d  .text._ZN4core3mem6zeroed17h7e7aee51005f9c96E	00000000 .text._ZN4core3mem6zeroed17h7e7aee51005f9c96E
00000000 l    d  .text._ZN4core3mem6zeroed17h81d58691e3b32299E	00000000 .text._ZN4core3mem6zeroed17h81d58691e3b32299E
00000000 l    d  .text._ZN4core3mem6zeroed17h828c7a206266d12cE	00000000 .text._ZN4core3mem6zeroed17h828c7a206266d12cE
00000000 l    d  .text._ZN4core3mem6zeroed17h84d390fc5df1288fE	00000000 .text._ZN4core3mem6zeroed17h84d390fc5df1288fE
00000000 l    d  .text._ZN4core3mem6zeroed17h85d09cf0b3da077cE	00000000 .text._ZN4core3mem6zeroed17h85d09cf0b3da077cE
00000000 l    d  .text._ZN4core3mem6zeroed17h880d01252bbe5e7fE	00000000 .text._ZN4core3mem6zeroed17h880d01252bbe5e7fE
00000000 l    d  .text._ZN4core3mem6zeroed17h8a1d477c5500f557E	00000000 .text._ZN4core3mem6zeroed17h8a1d477c5500f557E
00000000 l    d  .text._ZN4core3mem6zeroed17h8c85d3c1e9959d00E	00000000 .text._ZN4core3mem6zeroed17h8c85d3c1e9959d00E
00000000 l    d  .text._ZN4core3mem6zeroed17h8ec001a2c6bc67e0E	00000000 .text._ZN4core3mem6zeroed17h8ec001a2c6bc67e0E
00000000 l    d  .text._ZN4core3mem6zeroed17h8f53a61818822261E	00000000 .text._ZN4core3mem6zeroed17h8f53a61818822261E
00000000 l    d  .text._ZN4core3mem6zeroed17h8fb24371ffe1bb9aE	00000000 .text._ZN4core3mem6zeroed17h8fb24371ffe1bb9aE
00000000 l    d  .text._ZN4core3mem6zeroed17h93777be830df1bebE	00000000 .text._ZN4core3mem6zeroed17h93777be830df1bebE
00000000 l    d  .text._ZN4core3mem6zeroed17h9693f2f8b10b5e1cE	00000000 .text._ZN4core3mem6zeroed17h9693f2f8b10b5e1cE
00000000 l    d  .text._ZN4core3mem6zeroed17h9825401950ea3a6bE	00000000 .text._ZN4core3mem6zeroed17h9825401950ea3a6bE
00000000 l    d  .text._ZN4core3mem6zeroed17h98affbe243ec0478E	00000000 .text._ZN4core3mem6zeroed17h98affbe243ec0478E
00000000 l    d  .text._ZN4core3mem6zeroed17h9ac4d475fa67935fE	00000000 .text._ZN4core3mem6zeroed17h9ac4d475fa67935fE
00000000 l    d  .text._ZN4core3mem6zeroed17ha25923b50d2599c9E	00000000 .text._ZN4core3mem6zeroed17ha25923b50d2599c9E
00000000 l    d  .text._ZN4core3mem6zeroed17ha52d1c09211ee13bE	00000000 .text._ZN4core3mem6zeroed17ha52d1c09211ee13bE
00000000 l    d  .text._ZN4core3mem6zeroed17ha624163ffebc8624E	00000000 .text._ZN4core3mem6zeroed17ha624163ffebc8624E
00000000 l    d  .text._ZN4core3mem6zeroed17ha6eafaaefc849941E	00000000 .text._ZN4core3mem6zeroed17ha6eafaaefc849941E
00000000 l    d  .text._ZN4core3mem6zeroed17ha95f9ca279895c74E	00000000 .text._ZN4core3mem6zeroed17ha95f9ca279895c74E
00000000 l    d  .text._ZN4core3mem6zeroed17had6c27c80c24172cE	00000000 .text._ZN4core3mem6zeroed17had6c27c80c24172cE
00000000 l    d  .text._ZN4core3mem6zeroed17haf7be12d73644314E	00000000 .text._ZN4core3mem6zeroed17haf7be12d73644314E
00000000 l    d  .text._ZN4core3mem6zeroed17hb1a8a4d9b52c477fE	00000000 .text._ZN4core3mem6zeroed17hb1a8a4d9b52c477fE
00000000 l    d  .text._ZN4core3mem6zeroed17hb22637cea545c94aE	00000000 .text._ZN4core3mem6zeroed17hb22637cea545c94aE
00000000 l    d  .text._ZN4core3mem6zeroed17hb3cb59cd48bb2562E	00000000 .text._ZN4core3mem6zeroed17hb3cb59cd48bb2562E
00000000 l    d  .text._ZN4core3mem6zeroed17hb56e970fcd388f7aE	00000000 .text._ZN4core3mem6zeroed17hb56e970fcd388f7aE
00000000 l    d  .text._ZN4core3mem6zeroed17hb9bb93cd23cbb90eE	00000000 .text._ZN4core3mem6zeroed17hb9bb93cd23cbb90eE
00000000 l    d  .text._ZN4core3mem6zeroed17hbccd5547c0caba64E	00000000 .text._ZN4core3mem6zeroed17hbccd5547c0caba64E
00000000 l    d  .text._ZN4core3mem6zeroed17hc1c9313a1057d077E	00000000 .text._ZN4core3mem6zeroed17hc1c9313a1057d077E
00000000 l    d  .text._ZN4core3mem6zeroed17hc1fdc3b327dd9cceE	00000000 .text._ZN4core3mem6zeroed17hc1fdc3b327dd9cceE
00000000 l    d  .text._ZN4core3mem6zeroed17hc50694cdfb080459E	00000000 .text._ZN4core3mem6zeroed17hc50694cdfb080459E
00000000 l    d  .text._ZN4core3mem6zeroed17hc654c14a01f07520E	00000000 .text._ZN4core3mem6zeroed17hc654c14a01f07520E
00000000 l    d  .text._ZN4core3mem6zeroed17hc6e8e9110d62fef9E	00000000 .text._ZN4core3mem6zeroed17hc6e8e9110d62fef9E
00000000 l    d  .text._ZN4core3mem6zeroed17hc7e8fb45e04a3dfaE	00000000 .text._ZN4core3mem6zeroed17hc7e8fb45e04a3dfaE
00000000 l    d  .text._ZN4core3mem6zeroed17hca3a8680a5f61792E	00000000 .text._ZN4core3mem6zeroed17hca3a8680a5f61792E
00000000 l    d  .text._ZN4core3mem6zeroed17hcb0d5d719d0b4cfdE	00000000 .text._ZN4core3mem6zeroed17hcb0d5d719d0b4cfdE
00000000 l    d  .text._ZN4core3mem6zeroed17hd10a4783f8bebbf1E	00000000 .text._ZN4core3mem6zeroed17hd10a4783f8bebbf1E
00000000 l    d  .text._ZN4core3mem6zeroed17hd7496c0a0b952ad0E	00000000 .text._ZN4core3mem6zeroed17hd7496c0a0b952ad0E
00000000 l    d  .text._ZN4core3mem6zeroed17hd850688e083f35d3E	00000000 .text._ZN4core3mem6zeroed17hd850688e083f35d3E
00000000 l    d  .text._ZN4core3mem6zeroed17hd9bd718752e97ed0E	00000000 .text._ZN4core3mem6zeroed17hd9bd718752e97ed0E
00000000 l    d  .text._ZN4core3mem6zeroed17hdc744f13bb6cb2efE	00000000 .text._ZN4core3mem6zeroed17hdc744f13bb6cb2efE
00000000 l    d  .text._ZN4core3mem6zeroed17hdd11160ae17923d6E	00000000 .text._ZN4core3mem6zeroed17hdd11160ae17923d6E
00000000 l    d  .text._ZN4core3mem6zeroed17hdd48ed5c819c7946E	00000000 .text._ZN4core3mem6zeroed17hdd48ed5c819c7946E
00000000 l    d  .text._ZN4core3mem6zeroed17hdd6ba2c00150829aE	00000000 .text._ZN4core3mem6zeroed17hdd6ba2c00150829aE
00000000 l    d  .text._ZN4core3mem6zeroed17hde70a666264ebd64E	00000000 .text._ZN4core3mem6zeroed17hde70a666264ebd64E
00000000 l    d  .text._ZN4core3mem6zeroed17hdff12947493a6b15E	00000000 .text._ZN4core3mem6zeroed17hdff12947493a6b15E
00000000 l    d  .text._ZN4core3mem6zeroed17he2a8a08beed6c026E	00000000 .text._ZN4core3mem6zeroed17he2a8a08beed6c026E
00000000 l    d  .text._ZN4core3mem6zeroed17he31f3dc1905e44d9E	00000000 .text._ZN4core3mem6zeroed17he31f3dc1905e44d9E
00000000 l    d  .text._ZN4core3mem6zeroed17he3e9c9b6b323cbd9E	00000000 .text._ZN4core3mem6zeroed17he3e9c9b6b323cbd9E
00000000 l    d  .text._ZN4core3mem6zeroed17he401487bc5d25e20E	00000000 .text._ZN4core3mem6zeroed17he401487bc5d25e20E
00000000 l    d  .text._ZN4core3mem6zeroed17he421d4dfeb60ee5eE	00000000 .text._ZN4core3mem6zeroed17he421d4dfeb60ee5eE
00000000 l    d  .text._ZN4core3mem6zeroed17he542fa0f4606dea8E	00000000 .text._ZN4core3mem6zeroed17he542fa0f4606dea8E
00000000 l    d  .text._ZN4core3mem6zeroed17he726391e435db1a4E	00000000 .text._ZN4core3mem6zeroed17he726391e435db1a4E
00000000 l    d  .text._ZN4core3mem6zeroed17he74cb7dd128ed76fE	00000000 .text._ZN4core3mem6zeroed17he74cb7dd128ed76fE
00000000 l    d  .text._ZN4core3mem6zeroed17he8d7c2c38aae898dE	00000000 .text._ZN4core3mem6zeroed17he8d7c2c38aae898dE
00000000 l    d  .text._ZN4core3mem6zeroed17he99b61987c7a4400E	00000000 .text._ZN4core3mem6zeroed17he99b61987c7a4400E
00000000 l    d  .text._ZN4core3mem6zeroed17heaa00333309b2c39E	00000000 .text._ZN4core3mem6zeroed17heaa00333309b2c39E
00000000 l    d  .text._ZN4core3mem6zeroed17hefcd6abbfa111020E	00000000 .text._ZN4core3mem6zeroed17hefcd6abbfa111020E
00000000 l    d  .text._ZN4core3mem6zeroed17hf0880cd7904d1673E	00000000 .text._ZN4core3mem6zeroed17hf0880cd7904d1673E
00000000 l    d  .text._ZN4core3mem6zeroed17hf167506a8fb7dddaE	00000000 .text._ZN4core3mem6zeroed17hf167506a8fb7dddaE
00000000 l    d  .text._ZN4core3mem6zeroed17hf21b88cc03b2857dE	00000000 .text._ZN4core3mem6zeroed17hf21b88cc03b2857dE
00000000 l    d  .text._ZN4core3mem6zeroed17hf4da987f523a2114E	00000000 .text._ZN4core3mem6zeroed17hf4da987f523a2114E
00000000 l    d  .text._ZN4core3mem6zeroed17hf9ac2c4028cb1a99E	00000000 .text._ZN4core3mem6zeroed17hf9ac2c4028cb1a99E
00000000 l    d  .text._ZN4core3mem6zeroed17hfb85b6264a55180bE	00000000 .text._ZN4core3mem6zeroed17hfb85b6264a55180bE
00000000 l    d  .text._ZN4core3mem6zeroed17hfbced32acd9ec9dfE	00000000 .text._ZN4core3mem6zeroed17hfbced32acd9ec9dfE
00000000 l    d  .text._ZN4core3mem6zeroed17hfc952683ef741e13E	00000000 .text._ZN4core3mem6zeroed17hfc952683ef741e13E
00000000 l    d  .text._ZN4core3mem6zeroed17hfd31caeaf8e54b5eE	00000000 .text._ZN4core3mem6zeroed17hfd31caeaf8e54b5eE
00000000 l    d  .text._ZN4core3mem6zeroed17hfd902c4a724b3b68E	00000000 .text._ZN4core3mem6zeroed17hfd902c4a724b3b68E
00000000 l    d  .text._ZN4core3mem6zeroed17hffec5d54303eb755E	00000000 .text._ZN4core3mem6zeroed17hffec5d54303eb755E
00000000 l    d  .text._ZN4core3mem7size_of17hf368a5e6b408f7d1E	00000000 .text._ZN4core3mem7size_of17hf368a5e6b408f7d1E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3mem4swap17hddd51f7392412bcdE	0000001e core::mem::swap
00000000 g     F .text._ZN4core3mem6zeroed17h0057664fb31510f0E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h059f27919afda5c7E	00000014 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h09e066aac8ae1c92E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h0a091e4c39ae1592E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h0e27420e8bed01d8E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h10651f04df249ad9E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h12024cc37b001f1aE	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h25b6b813846e7c61E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h2635098c08d6da2aE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h2b96f2fe78697d7aE	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h2cb42645087eec9eE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h2dc4818538ab5ab1E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h2ee52780f0b1d1a9E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h2f500872a5110a5dE	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h30ac3436083d9fd3E	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h335558c81c65c3f1E	00000014 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h359329aae73a707bE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h35bc9f2d7d5a9c69E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h3aaf0b3e9cd32fcfE	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h3c0734ce5d7cc828E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h3e5eeda6b29e8982E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h3fed9b81f469d066E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h409997dcee890454E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h413347a3be299545E	00000026 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h433508d0e237d2c4E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h43f6e726a6c1a49dE	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h445d634ed069a3a3E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h47e2ea3f8debbb9bE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h4b3fcc92032ef3a7E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h4cea6c05dea4a7f1E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h4d1777e395b29862E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h4e3ee48363704f4eE	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h4f2c62bb74004b03E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h5238e7b98dd1b416E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h554a1bfecf02743eE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h58f0d0bd5fdaaf44E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h59611fea6552adaaE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h59f8cc2e001c7ec4E	00000020 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h5a6db3e01d1270dcE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h5b82ad760567c4d6E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h61eab8dd2af3163cE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h61f1e740c85ecba9E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h63b49bebc57bd3e1E	00000026 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h64857ac6bf08ad49E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h69085cb6f0624774E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h6e8d1f2575559188E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h6f22fab80e16136aE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h6fdaf93d04b49221E	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h738beaf7ecc7d2caE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h7664b1b90d0f6c75E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h7782525ffc641303E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h7b34293f3a0a5051E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h7e7aee51005f9c96E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h81d58691e3b32299E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h828c7a206266d12cE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h84d390fc5df1288fE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h85d09cf0b3da077cE	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h880d01252bbe5e7fE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h8a1d477c5500f557E	00000014 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h8c85d3c1e9959d00E	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h8ec001a2c6bc67e0E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h8f53a61818822261E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h8fb24371ffe1bb9aE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h93777be830df1bebE	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h9693f2f8b10b5e1cE	0000001a core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h9825401950ea3a6bE	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h98affbe243ec0478E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17h9ac4d475fa67935fE	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17ha25923b50d2599c9E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17ha52d1c09211ee13bE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17ha624163ffebc8624E	0000001a core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17ha6eafaaefc849941E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17ha95f9ca279895c74E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17had6c27c80c24172cE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17haf7be12d73644314E	0000001a core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hb1a8a4d9b52c477fE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hb22637cea545c94aE	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hb3cb59cd48bb2562E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hb56e970fcd388f7aE	00000014 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hb9bb93cd23cbb90eE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hbccd5547c0caba64E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hc1c9313a1057d077E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hc1fdc3b327dd9cceE	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hc50694cdfb080459E	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hc654c14a01f07520E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hc6e8e9110d62fef9E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hc7e8fb45e04a3dfaE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hca3a8680a5f61792E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hcb0d5d719d0b4cfdE	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hd10a4783f8bebbf1E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hd7496c0a0b952ad0E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hd850688e083f35d3E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hd9bd718752e97ed0E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hdc744f13bb6cb2efE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hdd11160ae17923d6E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hdd48ed5c819c7946E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hdd6ba2c00150829aE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hde70a666264ebd64E	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hdff12947493a6b15E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he2a8a08beed6c026E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he31f3dc1905e44d9E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he3e9c9b6b323cbd9E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he401487bc5d25e20E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he421d4dfeb60ee5eE	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he542fa0f4606dea8E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he726391e435db1a4E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he74cb7dd128ed76fE	00000018 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he8d7c2c38aae898dE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17he99b61987c7a4400E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17heaa00333309b2c39E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hefcd6abbfa111020E	0000001a core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hf0880cd7904d1673E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hf167506a8fb7dddaE	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hf21b88cc03b2857dE	0000001e core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hf4da987f523a2114E	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hf9ac2c4028cb1a99E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hfb85b6264a55180bE	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hfbced32acd9ec9dfE	00000010 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hfc952683ef741e13E	00000016 core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hfd31caeaf8e54b5eE	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hfd902c4a724b3b68E	0000001e core::mem::zeroed
00000000 g     F .text._ZN4core3mem6zeroed17hffec5d54303eb755E	0000001c core::mem::zeroed
00000000 g     F .text._ZN4core3mem7size_of17hf368a5e6b408f7d1E	00000012 core::mem::size_of
00000000         *UND*	00000000 core::ptr::swap_nonoverlapping_one
00000000         *UND*	00000000 __aeabi_memclr4
00000000         *UND*	00000000 __aeabi_memclr8



Disassembly of section .text._ZN4core3mem4swap17hddd51f7392412bcdE:

00000000 <core::mem::swap>:
_ZN4core3mem4swap17hddd51f7392412bcdE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:500
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9002      	str	r0, [sp, #8]
   a:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:502
   c:	9802      	ldr	r0, [sp, #8]
   e:	9903      	ldr	r1, [sp, #12]
  10:	9201      	str	r2, [sp, #4]
  12:	9300      	str	r3, [sp, #0]
  14:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  18:	e7ff      	b.n	1a <core::mem::swap+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:504
  1a:	b004      	add	sp, #16
  1c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17h0057664fb31510f0E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h0057664fb31510f0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h059f27919afda5c7E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h059f27919afda5c7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6048      	str	r0, [r1, #4]
   c:	6008      	str	r0, [r1, #0]
   e:	e7ff      	b.n	10 <core::mem::zeroed+0x10>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  10:	b001      	add	sp, #4
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h09e066aac8ae1c92E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h09e066aac8ae1c92E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h0a091e4c39ae1592E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h0a091e4c39ae1592E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h0e27420e8bed01d8E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h0e27420e8bed01d8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6088      	str	r0, [r1, #8]
   c:	6048      	str	r0, [r1, #4]
   e:	6008      	str	r0, [r1, #0]
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b001      	add	sp, #4
  14:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h10651f04df249ad9E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h10651f04df249ad9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	2130      	movs	r1, #48	; 0x30
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr8>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17h12024cc37b001f1aE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h12024cc37b001f1aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6088      	str	r0, [r1, #8]
   c:	6048      	str	r0, [r1, #4]
   e:	6008      	str	r0, [r1, #0]
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b001      	add	sp, #4
  14:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h25b6b813846e7c61E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h25b6b813846e7c61E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h2635098c08d6da2aE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h2635098c08d6da2aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h2b96f2fe78697d7aE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h2b96f2fe78697d7aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6088      	str	r0, [r1, #8]
   c:	6048      	str	r0, [r1, #4]
   e:	6008      	str	r0, [r1, #0]
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b001      	add	sp, #4
  14:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h2cb42645087eec9eE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h2cb42645087eec9eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h2dc4818538ab5ab1E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h2dc4818538ab5ab1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6148      	str	r0, [r1, #20]
   c:	6108      	str	r0, [r1, #16]
   e:	60c8      	str	r0, [r1, #12]
  10:	6088      	str	r0, [r1, #8]
  12:	6048      	str	r0, [r1, #4]
  14:	6008      	str	r0, [r1, #0]
  16:	e7ff      	b.n	18 <core::mem::zeroed+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  18:	b001      	add	sp, #4
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h2ee52780f0b1d1a9E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h2ee52780f0b1d1a9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h2f500872a5110a5dE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h2f500872a5110a5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h30ac3436083d9fd3E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h30ac3436083d9fd3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h335558c81c65c3f1E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h335558c81c65c3f1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6048      	str	r0, [r1, #4]
   c:	6008      	str	r0, [r1, #0]
   e:	e7ff      	b.n	10 <core::mem::zeroed+0x10>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  10:	b001      	add	sp, #4
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h359329aae73a707bE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h359329aae73a707bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h35bc9f2d7d5a9c69E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h35bc9f2d7d5a9c69E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h3aaf0b3e9cd32fcfE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h3aaf0b3e9cd32fcfE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h3c0734ce5d7cc828E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h3c0734ce5d7cc828E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	214c      	movs	r1, #76	; 0x4c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr4>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17h3e5eeda6b29e8982E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h3e5eeda6b29e8982E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h3fed9b81f469d066E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h3fed9b81f469d066E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6088      	str	r0, [r1, #8]
   c:	6048      	str	r0, [r1, #4]
   e:	6008      	str	r0, [r1, #0]
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b001      	add	sp, #4
  14:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h409997dcee890454E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h409997dcee890454E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h413347a3be299545E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h413347a3be299545E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b088      	sub	sp, #32
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9007      	str	r0, [sp, #28]
   8:	9006      	str	r0, [sp, #24]
   a:	9005      	str	r0, [sp, #20]
   c:	9004      	str	r0, [sp, #16]
   e:	9804      	ldr	r0, [sp, #16]
  10:	9906      	ldr	r1, [sp, #24]
  12:	9a07      	ldr	r2, [sp, #28]
  14:	9003      	str	r0, [sp, #12]
  16:	9102      	str	r1, [sp, #8]
  18:	9201      	str	r2, [sp, #4]
  1a:	e7ff      	b.n	1c <core::mem::zeroed+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  1c:	9803      	ldr	r0, [sp, #12]
  1e:	9902      	ldr	r1, [sp, #8]
  20:	9a01      	ldr	r2, [sp, #4]
  22:	b008      	add	sp, #32
  24:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h433508d0e237d2c4E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h433508d0e237d2c4E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h43f6e726a6c1a49dE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h43f6e726a6c1a49dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h445d634ed069a3a3E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h445d634ed069a3a3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h47e2ea3f8debbb9bE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h47e2ea3f8debbb9bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h4b3fcc92032ef3a7E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h4b3fcc92032ef3a7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h4cea6c05dea4a7f1E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h4cea6c05dea4a7f1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h4d1777e395b29862E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h4d1777e395b29862E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6088      	str	r0, [r1, #8]
   c:	6048      	str	r0, [r1, #4]
   e:	6008      	str	r0, [r1, #0]
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b001      	add	sp, #4
  14:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h4e3ee48363704f4eE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h4e3ee48363704f4eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h4f2c62bb74004b03E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h4f2c62bb74004b03E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h5238e7b98dd1b416E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h5238e7b98dd1b416E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h554a1bfecf02743eE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h554a1bfecf02743eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h58f0d0bd5fdaaf44E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h58f0d0bd5fdaaf44E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h59611fea6552adaaE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h59611fea6552adaaE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h59f8cc2e001c7ec4E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h59f8cc2e001c7ec4E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	61c8      	str	r0, [r1, #28]
   c:	6188      	str	r0, [r1, #24]
   e:	6148      	str	r0, [r1, #20]
  10:	6108      	str	r0, [r1, #16]
  12:	60c8      	str	r0, [r1, #12]
  14:	6088      	str	r0, [r1, #8]
  16:	6048      	str	r0, [r1, #4]
  18:	6008      	str	r0, [r1, #0]
  1a:	e7ff      	b.n	1c <core::mem::zeroed+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  1c:	b001      	add	sp, #4
  1e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h5a6db3e01d1270dcE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h5a6db3e01d1270dcE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h5b82ad760567c4d6E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h5b82ad760567c4d6E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h61eab8dd2af3163cE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h61eab8dd2af3163cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h61f1e740c85ecba9E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h61f1e740c85ecba9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6148      	str	r0, [r1, #20]
   c:	6108      	str	r0, [r1, #16]
   e:	60c8      	str	r0, [r1, #12]
  10:	6088      	str	r0, [r1, #8]
  12:	6048      	str	r0, [r1, #4]
  14:	6008      	str	r0, [r1, #0]
  16:	e7ff      	b.n	18 <core::mem::zeroed+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  18:	b001      	add	sp, #4
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h63b49bebc57bd3e1E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h63b49bebc57bd3e1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b088      	sub	sp, #32
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9007      	str	r0, [sp, #28]
   8:	9006      	str	r0, [sp, #24]
   a:	9005      	str	r0, [sp, #20]
   c:	9004      	str	r0, [sp, #16]
   e:	9804      	ldr	r0, [sp, #16]
  10:	9906      	ldr	r1, [sp, #24]
  12:	9a07      	ldr	r2, [sp, #28]
  14:	9003      	str	r0, [sp, #12]
  16:	9102      	str	r1, [sp, #8]
  18:	9201      	str	r2, [sp, #4]
  1a:	e7ff      	b.n	1c <core::mem::zeroed+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  1c:	9803      	ldr	r0, [sp, #12]
  1e:	9902      	ldr	r1, [sp, #8]
  20:	9a01      	ldr	r2, [sp, #4]
  22:	b008      	add	sp, #32
  24:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h64857ac6bf08ad49E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h64857ac6bf08ad49E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h69085cb6f0624774E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h69085cb6f0624774E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h6e8d1f2575559188E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h6e8d1f2575559188E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h6f22fab80e16136aE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h6f22fab80e16136aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h6fdaf93d04b49221E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h6fdaf93d04b49221E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h738beaf7ecc7d2caE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h738beaf7ecc7d2caE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h7664b1b90d0f6c75E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h7664b1b90d0f6c75E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h7782525ffc641303E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h7782525ffc641303E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h7b34293f3a0a5051E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h7b34293f3a0a5051E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h7e7aee51005f9c96E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h7e7aee51005f9c96E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h81d58691e3b32299E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h81d58691e3b32299E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h828c7a206266d12cE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h828c7a206266d12cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h84d390fc5df1288fE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h84d390fc5df1288fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h85d09cf0b3da077cE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h85d09cf0b3da077cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6148      	str	r0, [r1, #20]
   c:	6108      	str	r0, [r1, #16]
   e:	60c8      	str	r0, [r1, #12]
  10:	6088      	str	r0, [r1, #8]
  12:	6048      	str	r0, [r1, #4]
  14:	6008      	str	r0, [r1, #0]
  16:	e7ff      	b.n	18 <core::mem::zeroed+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  18:	b001      	add	sp, #4
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h880d01252bbe5e7fE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h880d01252bbe5e7fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h8a1d477c5500f557E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h8a1d477c5500f557E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6048      	str	r0, [r1, #4]
   c:	6008      	str	r0, [r1, #0]
   e:	e7ff      	b.n	10 <core::mem::zeroed+0x10>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  10:	b001      	add	sp, #4
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h8c85d3c1e9959d00E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h8c85d3c1e9959d00E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h8ec001a2c6bc67e0E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h8ec001a2c6bc67e0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	2124      	movs	r1, #36	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr4>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17h8f53a61818822261E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h8f53a61818822261E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h8fb24371ffe1bb9aE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h8fb24371ffe1bb9aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h93777be830df1bebE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h93777be830df1bebE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6088      	str	r0, [r1, #8]
   c:	6048      	str	r0, [r1, #4]
   e:	6008      	str	r0, [r1, #0]
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b001      	add	sp, #4
  14:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h9693f2f8b10b5e1cE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h9693f2f8b10b5e1cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6108      	str	r0, [r1, #16]
   c:	60c8      	str	r0, [r1, #12]
   e:	6088      	str	r0, [r1, #8]
  10:	6048      	str	r0, [r1, #4]
  12:	6008      	str	r0, [r1, #0]
  14:	e7ff      	b.n	16 <core::mem::zeroed+0x16>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  16:	b001      	add	sp, #4
  18:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17h9825401950ea3a6bE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h9825401950ea3a6bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	2188      	movs	r1, #136	; 0x88
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr8>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17h98affbe243ec0478E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h98affbe243ec0478E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	2128      	movs	r1, #40	; 0x28
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr8>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17h9ac4d475fa67935fE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17h9ac4d475fa67935fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17ha25923b50d2599c9E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17ha25923b50d2599c9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17ha52d1c09211ee13bE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17ha52d1c09211ee13bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17ha624163ffebc8624E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17ha624163ffebc8624E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6108      	str	r0, [r1, #16]
   c:	60c8      	str	r0, [r1, #12]
   e:	6088      	str	r0, [r1, #8]
  10:	6048      	str	r0, [r1, #4]
  12:	6008      	str	r0, [r1, #0]
  14:	e7ff      	b.n	16 <core::mem::zeroed+0x16>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  16:	b001      	add	sp, #4
  18:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17ha6eafaaefc849941E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17ha6eafaaefc849941E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17ha95f9ca279895c74E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17ha95f9ca279895c74E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17had6c27c80c24172cE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17had6c27c80c24172cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17haf7be12d73644314E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17haf7be12d73644314E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6108      	str	r0, [r1, #16]
   c:	60c8      	str	r0, [r1, #12]
   e:	6088      	str	r0, [r1, #8]
  10:	6048      	str	r0, [r1, #4]
  12:	6008      	str	r0, [r1, #0]
  14:	e7ff      	b.n	16 <core::mem::zeroed+0x16>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  16:	b001      	add	sp, #4
  18:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hb1a8a4d9b52c477fE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hb1a8a4d9b52c477fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hb22637cea545c94aE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hb22637cea545c94aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6148      	str	r0, [r1, #20]
   c:	6108      	str	r0, [r1, #16]
   e:	60c8      	str	r0, [r1, #12]
  10:	6088      	str	r0, [r1, #8]
  12:	6048      	str	r0, [r1, #4]
  14:	6008      	str	r0, [r1, #0]
  16:	e7ff      	b.n	18 <core::mem::zeroed+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  18:	b001      	add	sp, #4
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hb3cb59cd48bb2562E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hb3cb59cd48bb2562E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hb56e970fcd388f7aE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hb56e970fcd388f7aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6048      	str	r0, [r1, #4]
   c:	6008      	str	r0, [r1, #0]
   e:	e7ff      	b.n	10 <core::mem::zeroed+0x10>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  10:	b001      	add	sp, #4
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hb9bb93cd23cbb90eE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hb9bb93cd23cbb90eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hbccd5547c0caba64E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hbccd5547c0caba64E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hc1c9313a1057d077E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hc1c9313a1057d077E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6088      	str	r0, [r1, #8]
   c:	6048      	str	r0, [r1, #4]
   e:	6008      	str	r0, [r1, #0]
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b001      	add	sp, #4
  14:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hc1fdc3b327dd9cceE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hc1fdc3b327dd9cceE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6148      	str	r0, [r1, #20]
   c:	6108      	str	r0, [r1, #16]
   e:	60c8      	str	r0, [r1, #12]
  10:	6088      	str	r0, [r1, #8]
  12:	6048      	str	r0, [r1, #4]
  14:	6008      	str	r0, [r1, #0]
  16:	e7ff      	b.n	18 <core::mem::zeroed+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  18:	b001      	add	sp, #4
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hc50694cdfb080459E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hc50694cdfb080459E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hc654c14a01f07520E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hc654c14a01f07520E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hc6e8e9110d62fef9E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hc6e8e9110d62fef9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hc7e8fb45e04a3dfaE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hc7e8fb45e04a3dfaE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hca3a8680a5f61792E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hca3a8680a5f61792E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hcb0d5d719d0b4cfdE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hcb0d5d719d0b4cfdE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hd10a4783f8bebbf1E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hd10a4783f8bebbf1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	2150      	movs	r1, #80	; 0x50
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr4>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17hd7496c0a0b952ad0E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hd7496c0a0b952ad0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hd850688e083f35d3E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hd850688e083f35d3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hd9bd718752e97ed0E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hd9bd718752e97ed0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hdc744f13bb6cb2efE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hdc744f13bb6cb2efE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hdd11160ae17923d6E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hdd11160ae17923d6E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hdd48ed5c819c7946E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hdd48ed5c819c7946E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hdd6ba2c00150829aE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hdd6ba2c00150829aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hde70a666264ebd64E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hde70a666264ebd64E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hdff12947493a6b15E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hdff12947493a6b15E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17he2a8a08beed6c026E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he2a8a08beed6c026E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17he31f3dc1905e44d9E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he31f3dc1905e44d9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	2150      	movs	r1, #80	; 0x50
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr8>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17he3e9c9b6b323cbd9E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he3e9c9b6b323cbd9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	2134      	movs	r1, #52	; 0x34
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr4>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17he401487bc5d25e20E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he401487bc5d25e20E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17he421d4dfeb60ee5eE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he421d4dfeb60ee5eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17he542fa0f4606dea8E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he542fa0f4606dea8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	2130      	movs	r1, #48	; 0x30
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr8>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17he726391e435db1a4E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he726391e435db1a4E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17he74cb7dd128ed76fE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he74cb7dd128ed76fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	60c8      	str	r0, [r1, #12]
   c:	6088      	str	r0, [r1, #8]
   e:	6048      	str	r0, [r1, #4]
  10:	6008      	str	r0, [r1, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	b001      	add	sp, #4
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17he8d7c2c38aae898dE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he8d7c2c38aae898dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17he99b61987c7a4400E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17he99b61987c7a4400E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17heaa00333309b2c39E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17heaa00333309b2c39E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hefcd6abbfa111020E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hefcd6abbfa111020E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6108      	str	r0, [r1, #16]
   c:	60c8      	str	r0, [r1, #12]
   e:	6088      	str	r0, [r1, #8]
  10:	6048      	str	r0, [r1, #4]
  12:	6008      	str	r0, [r1, #0]
  14:	e7ff      	b.n	16 <core::mem::zeroed+0x16>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  16:	b001      	add	sp, #4
  18:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hf0880cd7904d1673E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hf0880cd7904d1673E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hf167506a8fb7dddaE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hf167506a8fb7dddaE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hf21b88cc03b2857dE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hf21b88cc03b2857dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6188      	str	r0, [r1, #24]
   c:	6148      	str	r0, [r1, #20]
   e:	6108      	str	r0, [r1, #16]
  10:	60c8      	str	r0, [r1, #12]
  12:	6088      	str	r0, [r1, #8]
  14:	6048      	str	r0, [r1, #4]
  16:	6008      	str	r0, [r1, #0]
  18:	e7ff      	b.n	1a <core::mem::zeroed+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  1a:	b001      	add	sp, #4
  1c:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hf4da987f523a2114E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hf4da987f523a2114E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hf9ac2c4028cb1a99E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hf9ac2c4028cb1a99E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6148      	str	r0, [r1, #20]
   c:	6108      	str	r0, [r1, #16]
   e:	60c8      	str	r0, [r1, #12]
  10:	6088      	str	r0, [r1, #8]
  12:	6048      	str	r0, [r1, #4]
  14:	6008      	str	r0, [r1, #0]
  16:	e7ff      	b.n	18 <core::mem::zeroed+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  18:	b001      	add	sp, #4
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hfb85b6264a55180bE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hfb85b6264a55180bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6148      	str	r0, [r1, #20]
   c:	6108      	str	r0, [r1, #16]
   e:	60c8      	str	r0, [r1, #12]
  10:	6088      	str	r0, [r1, #8]
  12:	6048      	str	r0, [r1, #4]
  14:	6008      	str	r0, [r1, #0]
  16:	e7ff      	b.n	18 <core::mem::zeroed+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  18:	b001      	add	sp, #4
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hfbced32acd9ec9dfE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hfbced32acd9ec9dfE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9000      	str	r0, [sp, #0]
   8:	e7ff      	b.n	a <core::mem::zeroed+0xa>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
   a:	9800      	ldr	r0, [sp, #0]
   c:	b001      	add	sp, #4
   e:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hfc952683ef741e13E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hfc952683ef741e13E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   4:	9001      	str	r0, [sp, #4]
   6:	e7ff      	b.n	8 <core::mem::zeroed+0x8>
   8:	2124      	movs	r1, #36	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   a:	9801      	ldr	r0, [sp, #4]
   c:	f7ff fffe 	bl	0 <__aeabi_memclr4>
  10:	e7ff      	b.n	12 <core::mem::zeroed+0x12>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3mem6zeroed17hfd31caeaf8e54b5eE:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hfd31caeaf8e54b5eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hfd902c4a724b3b68E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hfd902c4a724b3b68E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	9000      	str	r0, [sp, #0]
   4:	e7ff      	b.n	6 <core::mem::zeroed+0x6>
   6:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   8:	9900      	ldr	r1, [sp, #0]
   a:	6188      	str	r0, [r1, #24]
   c:	6148      	str	r0, [r1, #20]
   e:	6108      	str	r0, [r1, #16]
  10:	60c8      	str	r0, [r1, #12]
  12:	6088      	str	r0, [r1, #8]
  14:	6048      	str	r0, [r1, #4]
  16:	6008      	str	r0, [r1, #0]
  18:	e7ff      	b.n	1a <core::mem::zeroed+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  1a:	b001      	add	sp, #4
  1c:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem6zeroed17hffec5d54303eb755E:

00000000 <core::mem::zeroed>:
_ZN4core3mem6zeroed17hffec5d54303eb755E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:452
   0:	b084      	sub	sp, #16
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:453
   2:	e7ff      	b.n	4 <core::mem::zeroed+0x4>
   4:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   6:	9003      	str	r0, [sp, #12]
   8:	9002      	str	r0, [sp, #8]
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	9001      	str	r0, [sp, #4]
  10:	9100      	str	r1, [sp, #0]
  12:	e7ff      	b.n	14 <core::mem::zeroed+0x14>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:455
  14:	9801      	ldr	r0, [sp, #4]
  16:	9900      	ldr	r1, [sp, #0]
  18:	b004      	add	sp, #16
  1a:	4770      	bx	lr

Disassembly of section .text._ZN4core3mem7size_of17hf368a5e6b408f7d1E:

00000000 <core::mem::size_of>:
_ZN4core3mem7size_of17hf368a5e6b408f7d1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:242
   0:	b082      	sub	sp, #8
   2:	2004      	movs	r0, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:243
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	9000      	str	r0, [sp, #0]
   a:	e7ff      	b.n	c <core::mem::size_of+0xc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:244
   c:	9800      	ldr	r0, [sp, #0]
   e:	b002      	add	sp, #8
  10:	4770      	bx	lr

mynewt-d7fd96264f78b961.2qqovy6tfw6o0pgc.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 2qqovy6tfw6o0pgc
000003f7 l       .debug_str	00000000 
00000992 l       .debug_str	00000000 
00000bdc l       .debug_str	00000000 
0000097d l       .debug_str	00000000 
00000b8d l       .debug_str	00000000 
00000979 l       .debug_str	00000000 
00000b0d l       .debug_str	00000000 
00000960 l       .debug_str	00000000 
00000ae0 l       .debug_str	00000000 
0000094f l       .debug_str	00000000 
00000ab8 l       .debug_str	00000000 
0000094c l       .debug_str	00000000 
00000aad l       .debug_str	00000000 
00000933 l       .debug_str	00000000 
00000a94 l       .debug_str	00000000 
00000922 l       .debug_str	00000000 
00000a80 l       .debug_str	00000000 
0000091e l       .debug_str	00000000 
00000a2c l       .debug_str	00000000 
0000091c l       .debug_str	00000000 
000009e0 l       .debug_str	00000000 
00000915 l       .debug_str	00000000 
000009b9 l       .debug_str	00000000 
0000090e l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008f l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
00000122 l       .debug_str	00000000 
0000012c l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000015b l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
0000019c l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001bd l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001d8 l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001e9 l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
0000020f l       .debug_str	00000000 
0000023b l       .debug_str	00000000 
00000254 l       .debug_str	00000000 
00000259 l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
0000026c l       .debug_str	00000000 
00000297 l       .debug_str	00000000 
000002a0 l       .debug_str	00000000 
000002ad l       .debug_str	00000000 
000002da l       .debug_str	00000000 
000002f5 l       .debug_str	00000000 
00000369 l       .debug_str	00000000 
000003e6 l       .debug_str	00000000 
000003ee l       .debug_str	00000000 
00000906 l       .debug_str	00000000 
00000405 l       .debug_str	00000000 
0000040c l       .debug_str	00000000 
00000413 l       .debug_str	00000000 
0000041b l       .debug_str	00000000 
00000426 l       .debug_str	00000000 
0000042a l       .debug_str	00000000 
0000042f l       .debug_str	00000000 
00000436 l       .debug_str	00000000 
00000438 l       .debug_str	00000000 
00000448 l       .debug_str	00000000 
0000044c l       .debug_str	00000000 
00000460 l       .debug_str	00000000 
0000047b l       .debug_str	00000000 
00000483 l       .debug_str	00000000 
000004ab l       .debug_str	00000000 
000004c1 l       .debug_str	00000000 
00000530 l       .debug_str	00000000 
000005b1 l       .debug_str	00000000 
00000624 l       .debug_str	00000000 
000006a4 l       .debug_str	00000000 
00000724 l       .debug_str	00000000 
00000796 l       .debug_str	00000000 
0000080a l       .debug_str	00000000 
0000080e l       .debug_str	00000000 
00000818 l       .debug_str	00000000 
00000821 l       .debug_str	00000000 
00000825 l       .debug_str	00000000 
0000082d l       .debug_str	00000000 
00000837 l       .debug_str	00000000 
0000083b l       .debug_str	00000000 
00000848 l       .debug_str	00000000 
000008d7 l       .debug_str	00000000 
000008dc l       .debug_str	00000000 
000008e9 l       .debug_str	00000000 
000008f0 l       .debug_str	00000000 
000008f9 l       .debug_str	00000000 
000008fe l       .debug_str	00000000 
000009af l       .debug_str	00000000 
00000000 l    d  .text._ZN96_$LT$mynewt..libs..sensor_coap..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf5c0e07c168b97fE	00000000 .text._ZN96_$LT$mynewt..libs..sensor_coap..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf5c0e07c168b97fE
00000000 l    d  .text._ZN82_$LT$mynewt..libs..sensor_coap..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h616a1d14548b6927E	00000000 .text._ZN82_$LT$mynewt..libs..sensor_coap..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h616a1d14548b6927E
00000000 l    d  .text._ZN91_$LT$mynewt..libs..sensor_coap..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0e7445ff60e9d706E	00000000 .text._ZN91_$LT$mynewt..libs..sensor_coap..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0e7445ff60e9d706E
00000000 l    d  .text._ZN77_$LT$mynewt..libs..sensor_coap..os_mbuf$u20$as$u20$core..default..Default$GT$7default17ha7edbbf12769e744E	00000000 .text._ZN77_$LT$mynewt..libs..sensor_coap..os_mbuf$u20$as$u20$core..default..Default$GT$7default17ha7edbbf12769e744E
00000000 l    d  .text._ZN95_$LT$mynewt..libs..sensor_coap..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17he22c17afa8c8de5fE	00000000 .text._ZN95_$LT$mynewt..libs..sensor_coap..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17he22c17afa8c8de5fE
00000000 l    d  .text._ZN81_$LT$mynewt..libs..sensor_coap..os_memblock$u20$as$u20$core..default..Default$GT$7default17h90371e8895a90026E	00000000 .text._ZN81_$LT$mynewt..libs..sensor_coap..os_memblock$u20$as$u20$core..default..Default$GT$7default17h90371e8895a90026E
00000000 l    d  .text._ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hacc58130c1e381cbE	00000000 .text._ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hacc58130c1e381cbE
00000000 l    d  .text._ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2a20c6e28867e45dE	00000000 .text._ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2a20c6e28867e45dE
00000000 l    d  .text._ZN80_$LT$mynewt..libs..sensor_coap..os_mempool$u20$as$u20$core..default..Default$GT$7default17hd03ba7755ba2b234E	00000000 .text._ZN80_$LT$mynewt..libs..sensor_coap..os_mempool$u20$as$u20$core..default..Default$GT$7default17hd03ba7755ba2b234E
00000000 l    d  .text._ZN82_$LT$mynewt..libs..sensor_coap..sensor_value$u20$as$u20$core..default..Default$GT$7default17hd7e3fab792211ee8E	00000000 .text._ZN82_$LT$mynewt..libs..sensor_coap..sensor_value$u20$as$u20$core..default..Default$GT$7default17hd7e3fab792211ee8E
00000000 l    d  .text._ZN108_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha5d427543fe9c9c2E	00000000 .text._ZN108_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha5d427543fe9c9c2E
00000000 l    d  .text._ZN94_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc90c6bd4affec0aE	00000000 .text._ZN94_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc90c6bd4affec0aE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN108_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha5d427543fe9c9c2E	00000016 <mynewt::libs::sensor_coap::json_value__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000 g     F .text._ZN77_$LT$mynewt..libs..sensor_coap..os_mbuf$u20$as$u20$core..default..Default$GT$7default17ha7edbbf12769e744E	00000012 <mynewt::libs::sensor_coap::os_mbuf as core::default::Default>::default
00000000 g     F .text._ZN80_$LT$mynewt..libs..sensor_coap..os_mempool$u20$as$u20$core..default..Default$GT$7default17hd03ba7755ba2b234E	00000012 <mynewt::libs::sensor_coap::os_mempool as core::default::Default>::default
00000000 g     F .text._ZN81_$LT$mynewt..libs..sensor_coap..os_memblock$u20$as$u20$core..default..Default$GT$7default17h90371e8895a90026E	00000016 <mynewt::libs::sensor_coap::os_memblock as core::default::Default>::default
00000000 g     F .text._ZN82_$LT$mynewt..libs..sensor_coap..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h616a1d14548b6927E	00000012 <mynewt::libs::sensor_coap::os_mbuf_pool as core::default::Default>::default
00000000 g     F .text._ZN82_$LT$mynewt..libs..sensor_coap..sensor_value$u20$as$u20$core..default..Default$GT$7default17hd7e3fab792211ee8E	00000012 <mynewt::libs::sensor_coap::sensor_value as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..libs..sensor_coap..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0e7445ff60e9d706E	00000016 <mynewt::libs::sensor_coap::os_mbuf__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN94_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc90c6bd4affec0aE	00000012 <mynewt::libs::sensor_coap::json_value__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hacc58130c1e381cbE	00000016 <mynewt::libs::sensor_coap::os_mempool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2a20c6e28867e45dE	00000016 <mynewt::libs::sensor_coap::os_mempool__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN95_$LT$mynewt..libs..sensor_coap..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17he22c17afa8c8de5fE	00000016 <mynewt::libs::sensor_coap::os_memblock__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN96_$LT$mynewt..libs..sensor_coap..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf5c0e07c168b97fE	00000016 <mynewt::libs::sensor_coap::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default



Disassembly of section .text._ZN96_$LT$mynewt..libs..sensor_coap..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf5c0e07c168b97fE:

00000000 <<mynewt::libs::sensor_coap::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default>:
_ZN96_$LT$mynewt..libs..sensor_coap..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf5c0e07c168b97fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:213
#[repr(C)]
pub struct os_mbuf_pool__bindgen_ty_1 {
    pub stqe_next: *mut os_mbuf_pool,
}
impl Default for os_mbuf_pool__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:214
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::sensor_coap::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:215
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN82_$LT$mynewt..libs..sensor_coap..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h616a1d14548b6927E:

00000000 <<mynewt::libs::sensor_coap::os_mbuf_pool as core::default::Default>::default>:
_ZN82_$LT$mynewt..libs..sensor_coap..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h616a1d14548b6927E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:218
}
impl Default for os_mbuf_pool {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:219
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::libs::sensor_coap::os_mbuf_pool as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:220
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN91_$LT$mynewt..libs..sensor_coap..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0e7445ff60e9d706E:

00000000 <<mynewt::libs::sensor_coap::os_mbuf__bindgen_ty_1 as core::default::Default>::default>:
_ZN91_$LT$mynewt..libs..sensor_coap..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0e7445ff60e9d706E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:244
#[repr(C)]
pub struct os_mbuf__bindgen_ty_1 {
    pub sle_next: *mut os_mbuf,
}
impl Default for os_mbuf__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:245
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::sensor_coap::os_mbuf__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:246
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN77_$LT$mynewt..libs..sensor_coap..os_mbuf$u20$as$u20$core..default..Default$GT$7default17ha7edbbf12769e744E:

00000000 <<mynewt::libs::sensor_coap::os_mbuf as core::default::Default>::default>:
_ZN77_$LT$mynewt..libs..sensor_coap..os_mbuf$u20$as$u20$core..default..Default$GT$7default17ha7edbbf12769e744E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:249
}
impl Default for os_mbuf {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:250
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::libs::sensor_coap::os_mbuf as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:251
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN95_$LT$mynewt..libs..sensor_coap..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17he22c17afa8c8de5fE:

00000000 <<mynewt::libs::sensor_coap::os_memblock__bindgen_ty_1 as core::default::Default>::default>:
_ZN95_$LT$mynewt..libs..sensor_coap..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17he22c17afa8c8de5fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:266
#[repr(C)]
pub struct os_memblock__bindgen_ty_1 {
    pub sle_next: *mut os_memblock,
}
impl Default for os_memblock__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:267
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::sensor_coap::os_memblock__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:268
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN81_$LT$mynewt..libs..sensor_coap..os_memblock$u20$as$u20$core..default..Default$GT$7default17h90371e8895a90026E:

00000000 <<mynewt::libs::sensor_coap::os_memblock as core::default::Default>::default>:
_ZN81_$LT$mynewt..libs..sensor_coap..os_memblock$u20$as$u20$core..default..Default$GT$7default17h90371e8895a90026E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:271
}
impl Default for os_memblock {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:272
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::sensor_coap::os_memblock as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:273
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hacc58130c1e381cbE:

00000000 <<mynewt::libs::sensor_coap::os_mempool__bindgen_ty_1 as core::default::Default>::default>:
_ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hacc58130c1e381cbE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:300
#[repr(C)]
pub struct os_mempool__bindgen_ty_1 {
    pub stqe_next: *mut os_mempool,
}
impl Default for os_mempool__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:301
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::sensor_coap::os_mempool__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:302
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2a20c6e28867e45dE:

00000000 <<mynewt::libs::sensor_coap::os_mempool__bindgen_ty_2 as core::default::Default>::default>:
_ZN94_$LT$mynewt..libs..sensor_coap..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2a20c6e28867e45dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:309
#[repr(C)]
pub struct os_mempool__bindgen_ty_2 {
    pub slh_first: *mut os_memblock,
}
impl Default for os_mempool__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:310
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::sensor_coap::os_mempool__bindgen_ty_2 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:311
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN80_$LT$mynewt..libs..sensor_coap..os_mempool$u20$as$u20$core..default..Default$GT$7default17hd03ba7755ba2b234E:

00000000 <<mynewt::libs::sensor_coap::os_mempool as core::default::Default>::default>:
_ZN80_$LT$mynewt..libs..sensor_coap..os_mempool$u20$as$u20$core..default..Default$GT$7default17hd03ba7755ba2b234E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:314
}
impl Default for os_mempool {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:315
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::libs::sensor_coap::os_mempool as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:316
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN82_$LT$mynewt..libs..sensor_coap..sensor_value$u20$as$u20$core..default..Default$GT$7default17hd7e3fab792211ee8E:

00000000 <<mynewt::libs::sensor_coap::sensor_value as core::default::Default>::default>:
_ZN82_$LT$mynewt..libs..sensor_coap..sensor_value$u20$as$u20$core..default..Default$GT$7default17hd7e3fab792211ee8E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:390
    pub val_type: ::cty::c_int,
    pub int_val: u16,
    pub float_val: f32,
}
impl Default for sensor_value {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:391
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::libs::sensor_coap::sensor_value as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:392
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN108_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha5d427543fe9c9c2E:

00000000 <<mynewt::libs::sensor_coap::json_value__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default>:
_ZN108_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha5d427543fe9c9c2E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:421
pub struct json_value__bindgen_ty_1__bindgen_ty_1 {
    pub keys: *mut *mut ::cty::c_char,
    pub values: *mut *mut json_value,
}
impl Default for json_value__bindgen_ty_1__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:422
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::libs::sensor_coap::json_value__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:423
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN94_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc90c6bd4affec0aE:

00000000 <<mynewt::libs::sensor_coap::json_value__bindgen_ty_1 as core::default::Default>::default>:
_ZN94_$LT$mynewt..libs..sensor_coap..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc90c6bd4affec0aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:426
}
impl Default for json_value__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:427
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::libs::sensor_coap::json_value__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_coap.rs:428
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.2satdti0g71jx3sg.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 2satdti0g71jx3sg
00001438 l       .debug_str	00000000 
0000366d l       .debug_str	00000000 
00003926 l       .debug_str	00000000 
00003651 l       .debug_str	00000000 
0000391a l       .debug_str	00000000 
000035ca l       .debug_str	00000000 
0000390c l       .debug_str	00000000 
000035ba l       .debug_str	00000000 
00003907 l       .debug_str	00000000 
000035b1 l       .debug_str	00000000 
000038ff l       .debug_str	00000000 
000035a7 l       .debug_str	00000000 
000038fa l       .debug_str	00000000 
0000352d l       .debug_str	00000000 
000038f4 l       .debug_str	00000000 
000034bc l       .debug_str	00000000 
000038ee l       .debug_str	00000000 
0000343d l       .debug_str	00000000 
000038e7 l       .debug_str	00000000 
000033be l       .debug_str	00000000 
000038de l       .debug_str	00000000 
0000333f l       .debug_str	00000000 
000038d6 l       .debug_str	00000000 
000032c0 l       .debug_str	00000000 
000038d2 l       .debug_str	00000000 
0000324b l       .debug_str	00000000 
000038ca l       .debug_str	00000000 
000031d0 l       .debug_str	00000000 
000038bd l       .debug_str	00000000 
000031bc l       .debug_str	00000000 
000038b5 l       .debug_str	00000000 
000031b0 l       .debug_str	00000000 
000038b1 l       .debug_str	00000000 
000031a4 l       .debug_str	00000000 
000038a7 l       .debug_str	00000000 
0000319b l       .debug_str	00000000 
000038a1 l       .debug_str	00000000 
0000311d l       .debug_str	00000000 
00003890 l       .debug_str	00000000 
00003108 l       .debug_str	00000000 
0000384c l       .debug_str	00000000 
000030fc l       .debug_str	00000000 
000037fd l       .debug_str	00000000 
000030f0 l       .debug_str	00000000 
000037e5 l       .debug_str	00000000 
00003071 l       .debug_str	00000000 
0000379a l       .debug_str	00000000 
00002ff4 l       .debug_str	00000000 
00003772 l       .debug_str	00000000 
00002f68 l       .debug_str	00000000 
0000376e l       .debug_str	00000000 
00002f55 l       .debug_str	00000000 
0000376c l       .debug_str	00000000 
00002f4b l       .debug_str	00000000 
00003769 l       .debug_str	00000000 
00002f3f l       .debug_str	00000000 
00003766 l       .debug_str	00000000 
00002ec2 l       .debug_str	00000000 
00003761 l       .debug_str	00000000 
00002e48 l       .debug_str	00000000 
0000372a l       .debug_str	00000000 
00002dbf l       .debug_str	00000000 
0000371c l       .debug_str	00000000 
00002d45 l       .debug_str	00000000 
0000370c l       .debug_str	00000000 
00002d27 l       .debug_str	00000000 
00003701 l       .debug_str	00000000 
00002cf4 l       .debug_str	00000000 
000036ee l       .debug_str	00000000 
00002ce4 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a7 l       .debug_str	00000000 
000000ae l       .debug_str	00000000 
000000b2 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000d0 l       .debug_str	00000000 
000000dd l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000110 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
0000017d l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
00000187 l       .debug_str	00000000 
00000190 l       .debug_str	00000000 
00000199 l       .debug_str	00000000 
0000021a l       .debug_str	00000000 
00000222 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000233 l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
00000240 l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
0000024d l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
00000256 l       .debug_str	00000000 
0000028e l       .debug_str	00000000 
00000290 l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
00000299 l       .debug_str	00000000 
000002d9 l       .debug_str	00000000 
000002e0 l       .debug_str	00000000 
000002f7 l       .debug_str	00000000 
000002ff l       .debug_str	00000000 
00000316 l       .debug_str	00000000 
0000031f l       .debug_str	00000000 
00000341 l       .debug_str	00000000 
000003c3 l       .debug_str	00000000 
000003ce l       .debug_str	00000000 
000003d8 l       .debug_str	00000000 
000003ff l       .debug_str	00000000 
00000417 l       .debug_str	00000000 
0000049a l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
000004a8 l       .debug_str	00000000 
000004ae l       .debug_str	00000000 
000004b8 l       .debug_str	00000000 
000004c3 l       .debug_str	00000000 
000004cc l       .debug_str	00000000 
000004d7 l       .debug_str	00000000 
000004e3 l       .debug_str	00000000 
000004e7 l       .debug_str	00000000 
000004f0 l       .debug_str	00000000 
000004f7 l       .debug_str	00000000 
000004ff l       .debug_str	00000000 
00000507 l       .debug_str	00000000 
00000511 l       .debug_str	00000000 
00000517 l       .debug_str	00000000 
0000051e l       .debug_str	00000000 
00000528 l       .debug_str	00000000 
0000052f l       .debug_str	00000000 
0000055c l       .debug_str	00000000 
00000591 l       .debug_str	00000000 
00000597 l       .debug_str	00000000 
0000059d l       .debug_str	00000000 
000005ac l       .debug_str	00000000 
000005bc l       .debug_str	00000000 
000005cc l       .debug_str	00000000 
000005d4 l       .debug_str	00000000 
000005fd l       .debug_str	00000000 
0000065b l       .debug_str	00000000 
000006c1 l       .debug_str	00000000 
000006c8 l       .debug_str	00000000 
000006d0 l       .debug_str	00000000 
000006d9 l       .debug_str	00000000 
000006f7 l       .debug_str	00000000 
00000707 l       .debug_str	00000000 
00000715 l       .debug_str	00000000 
00000720 l       .debug_str	00000000 
0000072d l       .debug_str	00000000 
0000073c l       .debug_str	00000000 
00000752 l       .debug_str	00000000 
0000075c l       .debug_str	00000000 
00000765 l       .debug_str	00000000 
0000078b l       .debug_str	00000000 
000007a1 l       .debug_str	00000000 
000007ac l       .debug_str	00000000 
000007c2 l       .debug_str	00000000 
000007ca l       .debug_str	00000000 
000007eb l       .debug_str	00000000 
000007f4 l       .debug_str	00000000 
000007fd l       .debug_str	00000000 
00000807 l       .debug_str	00000000 
0000082a l       .debug_str	00000000 
00000832 l       .debug_str	00000000 
00000839 l       .debug_str	00000000 
00000862 l       .debug_str	00000000 
0000087b l       .debug_str	00000000 
00000886 l       .debug_str	00000000 
000008aa l       .debug_str	00000000 
00000929 l       .debug_str	00000000 
00000935 l       .debug_str	00000000 
0000093d l       .debug_str	00000000 
00000997 l       .debug_str	00000000 
000009f9 l       .debug_str	00000000 
00000a04 l       .debug_str	00000000 
00000a4b l       .debug_str	00000000 
00000a9a l       .debug_str	00000000 
00000aa4 l       .debug_str	00000000 
00000ae1 l       .debug_str	00000000 
00000b26 l       .debug_str	00000000 
00000b2f l       .debug_str	00000000 
00000b3f l       .debug_str	00000000 
00000b47 l       .debug_str	00000000 
00000b9c l       .debug_str	00000000 
00000bf9 l       .debug_str	00000000 
00000c05 l       .debug_str	00000000 
00000c0e l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c26 l       .debug_str	00000000 
00000c2f l       .debug_str	00000000 
00000c37 l       .debug_str	00000000 
00000c3f l       .debug_str	00000000 
00000c54 l       .debug_str	00000000 
00000c5b l       .debug_str	00000000 
00000c7b l       .debug_str	00000000 
00000cff l       .debug_str	00000000 
00000d07 l       .debug_str	00000000 
00000d21 l       .debug_str	00000000 
00000d2d l       .debug_str	00000000 
00000d52 l       .debug_str	00000000 
00000dd5 l       .debug_str	00000000 
00000de3 l       .debug_str	00000000 
00000df1 l       .debug_str	00000000 
00000dfd l       .debug_str	00000000 
00000e09 l       .debug_str	00000000 
00000e12 l       .debug_str	00000000 
00000e21 l       .debug_str	00000000 
00000e29 l       .debug_str	00000000 
00000e42 l       .debug_str	00000000 
00000e53 l       .debug_str	00000000 
00000e5d l       .debug_str	00000000 
00000e76 l       .debug_str	00000000 
00000e7b l       .debug_str	00000000 
00000e83 l       .debug_str	00000000 
00000e8e l       .debug_str	00000000 
00000eb2 l       .debug_str	00000000 
00000f35 l       .debug_str	00000000 
00000fb6 l       .debug_str	00000000 
00000fcd l       .debug_str	00000000 
00001056 l       .debug_str	00000000 
000010d6 l       .debug_str	00000000 
00001156 l       .debug_str	00000000 
000011d6 l       .debug_str	00000000 
0000124e l       .debug_str	00000000 
00001252 l       .debug_str	00000000 
00001259 l       .debug_str	00000000 
0000125f l       .debug_str	00000000 
00001263 l       .debug_str	00000000 
00001269 l       .debug_str	00000000 
0000126f l       .debug_str	00000000 
0000127b l       .debug_str	00000000 
00001283 l       .debug_str	00000000 
00001297 l       .debug_str	00000000 
0000129d l       .debug_str	00000000 
000012a5 l       .debug_str	00000000 
000012ab l       .debug_str	00000000 
000012ce l       .debug_str	00000000 
000012de l       .debug_str	00000000 
00001311 l       .debug_str	00000000 
00001351 l       .debug_str	00000000 
00001399 l       .debug_str	00000000 
0000139d l       .debug_str	00000000 
000013a3 l       .debug_str	00000000 
000013a9 l       .debug_str	00000000 
000013af l       .debug_str	00000000 
000013c1 l       .debug_str	00000000 
000013f6 l       .debug_str	00000000 
00002cdc l       .debug_str	00000000 
00001482 l       .debug_str	00000000 
00001486 l       .debug_str	00000000 
0000148c l       .debug_str	00000000 
00001492 l       .debug_str	00000000 
00001498 l       .debug_str	00000000 
000014aa l       .debug_str	00000000 
000014df l       .debug_str	00000000 
00001521 l       .debug_str	00000000 
0000156b l       .debug_str	00000000 
0000156f l       .debug_str	00000000 
00001575 l       .debug_str	00000000 
0000157b l       .debug_str	00000000 
00001581 l       .debug_str	00000000 
00001587 l       .debug_str	00000000 
00001598 l       .debug_str	00000000 
000015cc l       .debug_str	00000000 
0000160d l       .debug_str	00000000 
00001656 l       .debug_str	00000000 
0000165b l       .debug_str	00000000 
00001660 l       .debug_str	00000000 
00001664 l       .debug_str	00000000 
0000166a l       .debug_str	00000000 
00001670 l       .debug_str	00000000 
00001676 l       .debug_str	00000000 
00001687 l       .debug_str	00000000 
000016bb l       .debug_str	00000000 
000016fc l       .debug_str	00000000 
00001745 l       .debug_str	00000000 
00001749 l       .debug_str	00000000 
00001752 l       .debug_str	00000000 
00001763 l       .debug_str	00000000 
00001797 l       .debug_str	00000000 
000017d8 l       .debug_str	00000000 
00001821 l       .debug_str	00000000 
00001826 l       .debug_str	00000000 
0000182a l       .debug_str	00000000 
00001833 l       .debug_str	00000000 
0000183a l       .debug_str	00000000 
00001842 l       .debug_str	00000000 
00001854 l       .debug_str	00000000 
00001889 l       .debug_str	00000000 
000018cb l       .debug_str	00000000 
00001915 l       .debug_str	00000000 
00001919 l       .debug_str	00000000 
0000191f l       .debug_str	00000000 
00001925 l       .debug_str	00000000 
0000192b l       .debug_str	00000000 
00001931 l       .debug_str	00000000 
00001939 l       .debug_str	00000000 
00001947 l       .debug_str	00000000 
00001956 l       .debug_str	00000000 
00001967 l       .debug_str	00000000 
00001972 l       .debug_str	00000000 
0000197d l       .debug_str	00000000 
00001988 l       .debug_str	00000000 
0000198f l       .debug_str	00000000 
000019b2 l       .debug_str	00000000 
000019c4 l       .debug_str	00000000 
000019f9 l       .debug_str	00000000 
00001a3b l       .debug_str	00000000 
00001a85 l       .debug_str	00000000 
00001a89 l       .debug_str	00000000 
00001a93 l       .debug_str	00000000 
00001aa5 l       .debug_str	00000000 
00001ada l       .debug_str	00000000 
00001b1c l       .debug_str	00000000 
00001b66 l       .debug_str	00000000 
00001b6b l       .debug_str	00000000 
00001b75 l       .debug_str	00000000 
00001b87 l       .debug_str	00000000 
00001bbc l       .debug_str	00000000 
00001bfe l       .debug_str	00000000 
00001c48 l       .debug_str	00000000 
00001c5c l       .debug_str	00000000 
00001c60 l       .debug_str	00000000 
00001c6e l       .debug_str	00000000 
00001cf7 l       .debug_str	00000000 
00001d06 l       .debug_str	00000000 
00001d0a l       .debug_str	00000000 
00001d12 l       .debug_str	00000000 
00001d18 l       .debug_str	00000000 
00001d1f l       .debug_str	00000000 
00001d27 l       .debug_str	00000000 
00001d2c l       .debug_str	00000000 
00001d34 l       .debug_str	00000000 
00001d3d l       .debug_str	00000000 
00001d46 l       .debug_str	00000000 
00001d4f l       .debug_str	00000000 
00001d57 l       .debug_str	00000000 
00001d5e l       .debug_str	00000000 
00001d6a l       .debug_str	00000000 
00001d75 l       .debug_str	00000000 
00001d7d l       .debug_str	00000000 
00001d85 l       .debug_str	00000000 
00001e81 l       .debug_str	00000000 
00001f85 l       .debug_str	00000000 
00001f93 l       .debug_str	00000000 
00001f9e l       .debug_str	00000000 
00001fa8 l       .debug_str	00000000 
00001fb3 l       .debug_str	00000000 
00001fe1 l       .debug_str	00000000 
0000205c l       .debug_str	00000000 
000020df l       .debug_str	00000000 
000020ed l       .debug_str	00000000 
0000214c l       .debug_str	00000000 
000021b3 l       .debug_str	00000000 
000021c9 l       .debug_str	00000000 
000021d9 l       .debug_str	00000000 
000021e8 l       .debug_str	00000000 
000021f8 l       .debug_str	00000000 
00002201 l       .debug_str	00000000 
0000220c l       .debug_str	00000000 
0000221b l       .debug_str	00000000 
00002230 l       .debug_str	00000000 
00002261 l       .debug_str	00000000 
000022fe l       .debug_str	00000000 
000023a3 l       .debug_str	00000000 
000023ae l       .debug_str	00000000 
000023b7 l       .debug_str	00000000 
000023d8 l       .debug_str	00000000 
000023eb l       .debug_str	00000000 
00002421 l       .debug_str	00000000 
000024a4 l       .debug_str	00000000 
0000252f l       .debug_str	00000000 
0000254b l       .debug_str	00000000 
00002597 l       .debug_str	00000000 
000025eb l       .debug_str	00000000 
00002608 l       .debug_str	00000000 
0000261c l       .debug_str	00000000 
00002668 l       .debug_str	00000000 
000026bc l       .debug_str	00000000 
000026d2 l       .debug_str	00000000 
000026e6 l       .debug_str	00000000 
0000272d l       .debug_str	00000000 
0000277c l       .debug_str	00000000 
00002785 l       .debug_str	00000000 
00002793 l       .debug_str	00000000 
000027c4 l       .debug_str	00000000 
000027ca l       .debug_str	00000000 
000027d2 l       .debug_str	00000000 
000027d9 l       .debug_str	00000000 
000027e1 l       .debug_str	00000000 
000027ec l       .debug_str	00000000 
000027f4 l       .debug_str	00000000 
00002803 l       .debug_str	00000000 
00002807 l       .debug_str	00000000 
00002812 l       .debug_str	00000000 
0000281e l       .debug_str	00000000 
00002829 l       .debug_str	00000000 
0000283a l       .debug_str	00000000 
00002840 l       .debug_str	00000000 
00002848 l       .debug_str	00000000 
0000284f l       .debug_str	00000000 
00002859 l       .debug_str	00000000 
00002861 l       .debug_str	00000000 
00002869 l       .debug_str	00000000 
0000288b l       .debug_str	00000000 
00002896 l       .debug_str	00000000 
000028a2 l       .debug_str	00000000 
000028aa l       .debug_str	00000000 
000028b3 l       .debug_str	00000000 
000028be l       .debug_str	00000000 
000028c5 l       .debug_str	00000000 
000028d0 l       .debug_str	00000000 
000028db l       .debug_str	00000000 
000028eb l       .debug_str	00000000 
000028fb l       .debug_str	00000000 
00002910 l       .debug_str	00000000 
00002919 l       .debug_str	00000000 
00002976 l       .debug_str	00000000 
000029db l       .debug_str	00000000 
000029e5 l       .debug_str	00000000 
000029f5 l       .debug_str	00000000 
00002a0a l       .debug_str	00000000 
00002a12 l       .debug_str	00000000 
00002a76 l       .debug_str	00000000 
00002ae2 l       .debug_str	00000000 
00002ae9 l       .debug_str	00000000 
00002af1 l       .debug_str	00000000 
00002b0f l       .debug_str	00000000 
00002b1f l       .debug_str	00000000 
00002b52 l       .debug_str	00000000 
00002b67 l       .debug_str	00000000 
00002b7a l       .debug_str	00000000 
00002b8f l       .debug_str	00000000 
00002b96 l       .debug_str	00000000 
00002bab l       .debug_str	00000000 
00002bd5 l       .debug_str	00000000 
00002c51 l       .debug_str	00000000 
00002cd5 l       .debug_str	00000000 
000036e5 l       .debug_str	00000000 
00000000 l    d  .text._ZN95_$LT$mynewt..hw..sensor..bindings..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc3dcf321732baaf0E	00000000 .text._ZN95_$LT$mynewt..hw..sensor..bindings..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc3dcf321732baaf0E
00000000 l    d  .text._ZN96_$LT$mynewt..hw..sensor..bindings..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h709a8f6bb70568bbE	00000000 .text._ZN96_$LT$mynewt..hw..sensor..bindings..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h709a8f6bb70568bbE
00000000 l    d  .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h73372d20175cf47dE	00000000 .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h73372d20175cf47dE
00000000 l    d  .text._ZN93_$LT$mynewt..hw..sensor..bindings..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h04dbe2414f3766aaE	00000000 .text._ZN93_$LT$mynewt..hw..sensor..bindings..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h04dbe2414f3766aaE
00000000 l    d  .text._ZN98_$LT$mynewt..hw..sensor..bindings..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h805b34aba613cad7E	00000000 .text._ZN98_$LT$mynewt..hw..sensor..bindings..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h805b34aba613cad7E
00000000 l    d  .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9578cc9900cb0014E	00000000 .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9578cc9900cb0014E
00000000 l    d  .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5c5b2cab259ec668E	00000000 .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5c5b2cab259ec668E
00000000 l    d  .text._ZN95_$LT$mynewt..hw..sensor..bindings..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9c655db35c44bfd0E	00000000 .text._ZN95_$LT$mynewt..hw..sensor..bindings..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9c655db35c44bfd0E
00000000 l    d  .text._ZN102_$LT$mynewt..hw..sensor..bindings..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdd81d30033451b08E	00000000 .text._ZN102_$LT$mynewt..hw..sensor..bindings..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdd81d30033451b08E
00000000 l    d  .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb989d336a8ce7f96E	00000000 .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb989d336a8ce7f96E
00000000 l    d  .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2976240cc054c132E	00000000 .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2976240cc054c132E
00000000 l    d  .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17ha2ec0a0e3a65b2c4E	00000000 .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17ha2ec0a0e3a65b2c4E
00000000 l    d  .text._ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17ha6c826314b8b6541E	00000000 .text._ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17ha6c826314b8b6541E
00000000 l    d  .text._ZN102_$LT$mynewt..hw..sensor..bindings..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1ce2375d4c25db1eE	00000000 .text._ZN102_$LT$mynewt..hw..sensor..bindings..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1ce2375d4c25db1eE
00000000 l    d  .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17hdf16f11ef33887c5E	00000000 .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17hdf16f11ef33887c5E
00000000 l    d  .text._ZN102_$LT$mynewt..hw..sensor..bindings..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf4fcb7226fa683dE	00000000 .text._ZN102_$LT$mynewt..hw..sensor..bindings..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf4fcb7226fa683dE
00000000 l    d  .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_notifier$u20$as$u20$core..default..Default$GT$7default17hbb1ef6f1ca986d0fE	00000000 .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_notifier$u20$as$u20$core..default..Default$GT$7default17hbb1ef6f1ca986d0fE
00000000 l    d  .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_read_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h895a9031a4231fbfE	00000000 .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_read_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h895a9031a4231fbfE
00000000 l    d  .text._ZN105_$LT$mynewt..hw..sensor..bindings..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h67f5402486a629c9E	00000000 .text._ZN105_$LT$mynewt..hw..sensor..bindings..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h67f5402486a629c9E
00000000 l    d  .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h583510a6218fa2afE	00000000 .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h583510a6218fa2afE
00000000 l    d  .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor_notify_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h5750f9858807db21E	00000000 .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor_notify_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h5750f9858807db21E
00000000 l    d  .text._ZN92_$LT$mynewt..hw..sensor..bindings..sensor_notify_os_ev$u20$as$u20$core..default..Default$GT$7default17h48184ff9662aae3aE	00000000 .text._ZN92_$LT$mynewt..hw..sensor..bindings..sensor_notify_os_ev$u20$as$u20$core..default..Default$GT$7default17h48184ff9662aae3aE
00000000 l    d  .text._ZN89_$LT$mynewt..hw..sensor..bindings..sensor_timestamp$u20$as$u20$core..default..Default$GT$7default17h80f668cd9c314a6cE	00000000 .text._ZN89_$LT$mynewt..hw..sensor..bindings..sensor_timestamp$u20$as$u20$core..default..Default$GT$7default17h80f668cd9c314a6cE
00000000 l    d  .text._ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17h46eef0a7ad09f1fdE	00000000 .text._ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17h46eef0a7ad09f1fdE
00000000 l    d  .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h03492928310f32adE	00000000 .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h03492928310f32adE
00000000 l    d  .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5f92c261df030a85E	00000000 .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5f92c261df030a85E
00000000 l    d  .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf7800e59f97886fcE	00000000 .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf7800e59f97886fcE
00000000 l    d  .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17h98092bde28978c1fE	00000000 .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17h98092bde28978c1fE
00000000 l    d  .text._ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17hf6d5e7c6083ce0ecE	00000000 .text._ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17hf6d5e7c6083ce0ecE
00000000 l    d  .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_read_ctx$u20$as$u20$core..default..Default$GT$7default17h7b28925225193002E	00000000 .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_read_ctx$u20$as$u20$core..default..Default$GT$7default17h7b28925225193002E
00000000 l    d  .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8bcffdc35943d7c4E	00000000 .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8bcffdc35943d7c4E
00000000 l    d  .text._ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h2f63d26a38f4cd63E	00000000 .text._ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h2f63d26a38f4cd63E
00000000 l    d  .text._ZN6mynewt2hw6sensor8bindings4read17hfa184100aee2fac4E	00000000 .text._ZN6mynewt2hw6sensor8bindings4read17hfa184100aee2fac4E
00000000 l    d  .text._ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17hcf58d7c66915afb3E	00000000 .text._ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17hcf58d7c66915afb3E
00000000 l    d  .text._ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h1b333cb0fcc2972cE	00000000 .text._ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h1b333cb0fcc2972cE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8bcffdc35943d7c4E	00000016 <mynewt::hw::sensor::bindings::_bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN102_$LT$mynewt..hw..sensor..bindings..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdd81d30033451b08E	00000016 <mynewt::hw::sensor::bindings::os_sanity_check__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN102_$LT$mynewt..hw..sensor..bindings..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1ce2375d4c25db1eE	00000016 <mynewt::hw::sensor::bindings::sensor_listener__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN102_$LT$mynewt..hw..sensor..bindings..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf4fcb7226fa683dE	00000016 <mynewt::hw::sensor::bindings::sensor_notifier__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..hw..sensor..bindings..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h67f5402486a629c9E	00000016 <mynewt::hw::sensor::bindings::sensor_type_traits__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000 g     F .text._ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h1b333cb0fcc2972cE	00000056 mynewt::hw::sensor::bindings::set_poll_rate_ms
00000000 g     F .text._ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17hcf58d7c66915afb3E	00000042 mynewt::hw::sensor::bindings::mgr_find_next_bydevname
00000000 g     F .text._ZN6mynewt2hw6sensor8bindings4read17hfa184100aee2fac4E	0000007a mynewt::hw::sensor::bindings::read
00000000         *UND*	00000000 mynewt::Strn::as_ptr
00000000         *UND*	00000000 mynewt::Strn::validate
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::convert::From<i32>>::from
00000000 g     F .text._ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17hf6d5e7c6083ce0ecE	00000012 <mynewt::hw::sensor::bindings::sensor as core::default::Default>::default
00000000 g     F .text._ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17h46eef0a7ad09f1fdE	00000012 <mynewt::hw::sensor::bindings::sensor_itf as core::default::Default>::default
00000000 g     F .text._ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h2f63d26a38f4cd63E	00000012 <mynewt::hw::sensor::bindings::_bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17ha6c826314b8b6541E	00000012 <mynewt::hw::sensor::bindings::sensor_data_t as core::default::Default>::default
00000000 g     F .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17hdf16f11ef33887c5E	00000012 <mynewt::hw::sensor::bindings::sensor_listener as core::default::Default>::default
00000000 g     F .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_notifier$u20$as$u20$core..default..Default$GT$7default17hbb1ef6f1ca986d0fE	00000012 <mynewt::hw::sensor::bindings::sensor_notifier as core::default::Default>::default
00000000 g     F .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_read_ctx$u20$as$u20$core..default..Default$GT$7default17h7b28925225193002E	00000016 <mynewt::hw::sensor::bindings::sensor_read_ctx as core::default::Default>::default
00000000 g     F .text._ZN89_$LT$mynewt..hw..sensor..bindings..sensor_timestamp$u20$as$u20$core..default..Default$GT$7default17h80f668cd9c314a6cE	00000012 <mynewt::hw::sensor::bindings::sensor_timestamp as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_read_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h895a9031a4231fbfE	0000001a <mynewt::hw::sensor::bindings::sensor_read_ev_ctx as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h583510a6218fa2afE	00000012 <mynewt::hw::sensor::bindings::sensor_type_traits as core::default::Default>::default
00000000 g     F .text._ZN92_$LT$mynewt..hw..sensor..bindings..sensor_notify_os_ev$u20$as$u20$core..default..Default$GT$7default17h48184ff9662aae3aE	00000012 <mynewt::hw::sensor::bindings::sensor_notify_os_ev as core::default::Default>::default
00000000 g     F .text._ZN93_$LT$mynewt..hw..sensor..bindings..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h04dbe2414f3766aaE	00000016 <mynewt::hw::sensor::bindings::os_dev__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h03492928310f32adE	00000016 <mynewt::hw::sensor::bindings::sensor__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5f92c261df030a85E	00000016 <mynewt::hw::sensor::bindings::sensor__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf7800e59f97886fcE	00000016 <mynewt::hw::sensor::bindings::sensor__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17h98092bde28978c1fE	00000016 <mynewt::hw::sensor::bindings::sensor__bindgen_ty_4 as core::default::Default>::default
00000000 g     F .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor_notify_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h5750f9858807db21E	00000016 <mynewt::hw::sensor::bindings::sensor_notify_ev_ctx as core::default::Default>::default
00000000 g     F .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb989d336a8ce7f96E	00000016 <mynewt::hw::sensor::bindings::os_task__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2976240cc054c132E	00000016 <mynewt::hw::sensor::bindings::os_task__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17ha2ec0a0e3a65b2c4E	00000016 <mynewt::hw::sensor::bindings::os_task__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN95_$LT$mynewt..hw..sensor..bindings..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc3dcf321732baaf0E	00000016 <mynewt::hw::sensor::bindings::os_event__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN95_$LT$mynewt..hw..sensor..bindings..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9c655db35c44bfd0E	00000016 <mynewt::hw::sensor::bindings::os_mutex__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN96_$LT$mynewt..hw..sensor..bindings..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h709a8f6bb70568bbE	00000016 <mynewt::hw::sensor::bindings::os_eventq__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h73372d20175cf47dE	00000016 <mynewt::hw::sensor::bindings::os_callout__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9578cc9900cb0014E	00000016 <mynewt::hw::sensor::bindings::os_mempool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5c5b2cab259ec668E	00000016 <mynewt::hw::sensor::bindings::os_mempool__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN98_$LT$mynewt..hw..sensor..bindings..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h805b34aba613cad7E	00000016 <mynewt::hw::sensor::bindings::os_memblock__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 sensor_mgr_find_next_bydevname
00000000         *UND*	00000000 sensor_read
00000000         *UND*	00000000 sensor_set_poll_rate_ms



Disassembly of section .text._ZN95_$LT$mynewt..hw..sensor..bindings..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc3dcf321732baaf0E:

00000000 <<mynewt::hw::sensor::bindings::os_event__bindgen_ty_1 as core::default::Default>::default>:
_ZN95_$LT$mynewt..hw..sensor..bindings..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc3dcf321732baaf0E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:157
#[repr(C)]
pub struct os_event__bindgen_ty_1 {
    pub stqe_next: *mut os_event,
}
impl Default for os_event__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:158
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::os_event__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:159
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN96_$LT$mynewt..hw..sensor..bindings..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h709a8f6bb70568bbE:

00000000 <<mynewt::hw::sensor::bindings::os_eventq__bindgen_ty_1 as core::default::Default>::default>:
_ZN96_$LT$mynewt..hw..sensor..bindings..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h709a8f6bb70568bbE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:167
pub struct os_eventq__bindgen_ty_1 {
    pub stqh_first: *mut os_event,
    pub stqh_last: *mut *mut os_event,
}
impl Default for os_eventq__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:168
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::os_eventq__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:169
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h73372d20175cf47dE:

00000000 <<mynewt::hw::sensor::bindings::os_callout__bindgen_ty_1 as core::default::Default>::default>:
_ZN97_$LT$mynewt..hw..sensor..bindings..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h73372d20175cf47dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:177
pub struct os_callout__bindgen_ty_1 {
    pub tqe_next: *mut os_callout,
    pub tqe_prev: *mut *mut os_callout,
}
impl Default for os_callout__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:178
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::os_callout__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:179
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN93_$LT$mynewt..hw..sensor..bindings..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h04dbe2414f3766aaE:

00000000 <<mynewt::hw::sensor::bindings::os_dev__bindgen_ty_1 as core::default::Default>::default>:
_ZN93_$LT$mynewt..hw..sensor..bindings..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h04dbe2414f3766aaE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:205
#[repr(C)]
pub struct os_dev__bindgen_ty_1 {
    pub stqe_next: *mut os_dev,
}
impl Default for os_dev__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:206
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::os_dev__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:207
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN98_$LT$mynewt..hw..sensor..bindings..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h805b34aba613cad7E:

00000000 <<mynewt::hw::sensor::bindings::os_memblock__bindgen_ty_1 as core::default::Default>::default>:
_ZN98_$LT$mynewt..hw..sensor..bindings..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h805b34aba613cad7E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:214
#[repr(C)]
pub struct os_memblock__bindgen_ty_1 {
    pub sle_next: *mut os_memblock,
}
impl Default for os_memblock__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:215
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::os_memblock__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:216
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9578cc9900cb0014E:

00000000 <<mynewt::hw::sensor::bindings::os_mempool__bindgen_ty_1 as core::default::Default>::default>:
_ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9578cc9900cb0014E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:223
#[repr(C)]
pub struct os_mempool__bindgen_ty_1 {
    pub stqe_next: *mut os_mempool,
}
impl Default for os_mempool__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:224
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::os_mempool__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:225
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5c5b2cab259ec668E:

00000000 <<mynewt::hw::sensor::bindings::os_mempool__bindgen_ty_2 as core::default::Default>::default>:
_ZN97_$LT$mynewt..hw..sensor..bindings..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5c5b2cab259ec668E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:232
#[repr(C)]
pub struct os_mempool__bindgen_ty_2 {
    pub slh_first: *mut os_memblock,
}
impl Default for os_mempool__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:233
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::os_mempool__bindgen_ty_2 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:234
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN95_$LT$mynewt..hw..sensor..bindings..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9c655db35c44bfd0E:

00000000 <<mynewt::hw::sensor::bindings::os_mutex__bindgen_ty_1 as core::default::Default>::default>:
_ZN95_$LT$mynewt..hw..sensor..bindings..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9c655db35c44bfd0E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:242
#[repr(C)]
pub struct os_mutex__bindgen_ty_1 {
    pub slh_first: *mut os_task,
}
impl Default for os_mutex__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:243
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::os_mutex__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:244
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN102_$LT$mynewt..hw..sensor..bindings..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdd81d30033451b08E:

00000000 <<mynewt::hw::sensor::bindings::os_sanity_check__bindgen_ty_1 as core::default::Default>::default>:
_ZN102_$LT$mynewt..hw..sensor..bindings..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdd81d30033451b08E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:254
#[repr(C)]
pub struct os_sanity_check__bindgen_ty_1 {
    pub sle_next: *mut os_sanity_check,
}
impl Default for os_sanity_check__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:255
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::os_sanity_check__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:256
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb989d336a8ce7f96E:

00000000 <<mynewt::hw::sensor::bindings::os_task__bindgen_ty_1 as core::default::Default>::default>:
_ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb989d336a8ce7f96E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:264
#[repr(C)]
pub struct os_task__bindgen_ty_1 {
    pub stqe_next: *mut os_task,
}
impl Default for os_task__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:265
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::os_task__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:266
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2976240cc054c132E:

00000000 <<mynewt::hw::sensor::bindings::os_task__bindgen_ty_2 as core::default::Default>::default>:
_ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h2976240cc054c132E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:274
pub struct os_task__bindgen_ty_2 {
    pub tqe_next: *mut os_task,
    pub tqe_prev: *mut *mut os_task,
}
impl Default for os_task__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:275
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::os_task__bindgen_ty_2 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:276
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17ha2ec0a0e3a65b2c4E:

00000000 <<mynewt::hw::sensor::bindings::os_task__bindgen_ty_3 as core::default::Default>::default>:
_ZN94_$LT$mynewt..hw..sensor..bindings..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17ha2ec0a0e3a65b2c4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:283
#[repr(C)]
pub struct os_task__bindgen_ty_3 {
    pub sle_next: *mut os_task,
}
impl Default for os_task__bindgen_ty_3 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:284
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::os_task__bindgen_ty_3 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:285
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17ha6c826314b8b6541E:

00000000 <<mynewt::hw::sensor::bindings::sensor_data_t as core::default::Default>::default>:
_ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17ha6c826314b8b6541E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:359
    pub spd: __BindgenUnionField<*mut sensor_press_data>,
    pub srhd: __BindgenUnionField<*mut sensor_humid_data>,
    pub bindgen_union_field: u64,
}
impl Default for sensor_data_t {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:360
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor_data_t as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:361
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN102_$LT$mynewt..hw..sensor..bindings..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1ce2375d4c25db1eE:

00000000 <<mynewt::hw::sensor::bindings::sensor_listener__bindgen_ty_1 as core::default::Default>::default>:
_ZN102_$LT$mynewt..hw..sensor..bindings..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1ce2375d4c25db1eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:438
#[repr(C)]
pub struct sensor_listener__bindgen_ty_1 {
    pub sle_next: *mut sensor_listener,
}
impl Default for sensor_listener__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:439
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::sensor_listener__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:440
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17hdf16f11ef33887c5E:

00000000 <<mynewt::hw::sensor::bindings::sensor_listener as core::default::Default>::default>:
_ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17hdf16f11ef33887c5E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:443
}
impl Default for sensor_listener {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:444
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor_listener as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:445
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN102_$LT$mynewt..hw..sensor..bindings..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf4fcb7226fa683dE:

00000000 <<mynewt::hw::sensor::bindings::sensor_notifier__bindgen_ty_1 as core::default::Default>::default>:
_ZN102_$LT$mynewt..hw..sensor..bindings..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hbf4fcb7226fa683dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:460
#[repr(C)]
pub struct sensor_notifier__bindgen_ty_1 {
    pub sle_next: *mut sensor_notifier,
}
impl Default for sensor_notifier__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:461
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::sensor_notifier__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:462
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_notifier$u20$as$u20$core..default..Default$GT$7default17hbb1ef6f1ca986d0fE:

00000000 <<mynewt::hw::sensor::bindings::sensor_notifier as core::default::Default>::default>:
_ZN88_$LT$mynewt..hw..sensor..bindings..sensor_notifier$u20$as$u20$core..default..Default$GT$7default17hbb1ef6f1ca986d0fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:465
}
impl Default for sensor_notifier {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:466
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor_notifier as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:467
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_read_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h895a9031a4231fbfE:

00000000 <<mynewt::hw::sensor::bindings::sensor_read_ev_ctx as core::default::Default>::default>:
_ZN91_$LT$mynewt..hw..sensor..bindings..sensor_read_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h895a9031a4231fbfE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:476
pub struct sensor_read_ev_ctx {
    pub srec_sensor: *mut sensor,
    pub srec_type: sensor_type_t,
}
impl Default for sensor_read_ev_ctx {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:477
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9003      	str	r0, [sp, #12]
   a:	9202      	str	r2, [sp, #8]
   c:	9101      	str	r1, [sp, #4]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::sensor_read_ev_ctx as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:478
    }
  10:	9803      	ldr	r0, [sp, #12]
  12:	9901      	ldr	r1, [sp, #4]
  14:	9a02      	ldr	r2, [sp, #8]
  16:	b004      	add	sp, #16
  18:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN105_$LT$mynewt..hw..sensor..bindings..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h67f5402486a629c9E:

00000000 <<mynewt::hw::sensor::bindings::sensor_type_traits__bindgen_ty_1 as core::default::Default>::default>:
_ZN105_$LT$mynewt..hw..sensor..bindings..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h67f5402486a629c9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:498
#[repr(C)]
pub struct sensor_type_traits__bindgen_ty_1 {
    pub sle_next: *mut sensor_type_traits,
}
impl Default for sensor_type_traits__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:499
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::sensor_type_traits__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:500
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h583510a6218fa2afE:

00000000 <<mynewt::hw::sensor::bindings::sensor_type_traits as core::default::Default>::default>:
_ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h583510a6218fa2afE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:503
}
impl Default for sensor_type_traits {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:504
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor_type_traits as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:505
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor_notify_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h5750f9858807db21E:

00000000 <<mynewt::hw::sensor::bindings::sensor_notify_ev_ctx as core::default::Default>::default>:
_ZN93_$LT$mynewt..hw..sensor..bindings..sensor_notify_ev_ctx$u20$as$u20$core..default..Default$GT$7default17h5750f9858807db21E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:513
pub struct sensor_notify_ev_ctx {
    pub snec_sensor: *mut sensor,
    pub snec_evtype: sensor_event_type_t,
}
impl Default for sensor_notify_ev_ctx {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:514
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor_notify_ev_ctx as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:515
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN92_$LT$mynewt..hw..sensor..bindings..sensor_notify_os_ev$u20$as$u20$core..default..Default$GT$7default17h48184ff9662aae3aE:

00000000 <<mynewt::hw::sensor::bindings::sensor_notify_os_ev as core::default::Default>::default>:
_ZN92_$LT$mynewt..hw..sensor..bindings..sensor_notify_os_ev$u20$as$u20$core..default..Default$GT$7default17h48184ff9662aae3aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:524
    pub snoe_evt: os_event,
    pub snoe_evtype: sensor_event_type_t,
    pub snoe_sensor: *mut sensor,
}
impl Default for sensor_notify_os_ev {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:525
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor_notify_os_ev as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:526
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN89_$LT$mynewt..hw..sensor..bindings..sensor_timestamp$u20$as$u20$core..default..Default$GT$7default17h80f668cd9c314a6cE:

00000000 <<mynewt::hw::sensor::bindings::sensor_timestamp as core::default::Default>::default>:
_ZN89_$LT$mynewt..hw..sensor..bindings..sensor_timestamp$u20$as$u20$core..default..Default$GT$7default17h80f668cd9c314a6cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:655
    pub st_ostv: os_timeval,
    pub st_ostz: os_timezone,
    pub st_cputime: u32,
}
impl Default for sensor_timestamp {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:656
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor_timestamp as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:657
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17h46eef0a7ad09f1fdE:

00000000 <<mynewt::hw::sensor::bindings::sensor_itf as core::default::Default>::default>:
_ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17h46eef0a7ad09f1fdE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:678
    pub si_low_pin: u8,
    pub si_high_pin: u8,
    pub si_ints: [sensor_int; 2usize],
}
impl Default for sensor_itf {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:679
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor_itf as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:680
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h03492928310f32adE:

00000000 <<mynewt::hw::sensor::bindings::sensor__bindgen_ty_1 as core::default::Default>::default>:
_ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h03492928310f32adE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:707
#[repr(C)]
pub struct sensor__bindgen_ty_1 {
    pub slh_first: *mut sensor_listener,
}
impl Default for sensor__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:708
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::sensor__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:709
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5f92c261df030a85E:

00000000 <<mynewt::hw::sensor::bindings::sensor__bindgen_ty_2 as core::default::Default>::default>:
_ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h5f92c261df030a85E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:716
#[repr(C)]
pub struct sensor__bindgen_ty_2 {
    pub slh_first: *mut sensor_notifier,
}
impl Default for sensor__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:717
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::sensor__bindgen_ty_2 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:718
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf7800e59f97886fcE:

00000000 <<mynewt::hw::sensor::bindings::sensor__bindgen_ty_3 as core::default::Default>::default>:
_ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf7800e59f97886fcE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:725
#[repr(C)]
pub struct sensor__bindgen_ty_3 {
    pub slh_first: *mut sensor_type_traits,
}
impl Default for sensor__bindgen_ty_3 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:726
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::sensor__bindgen_ty_3 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:727
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17h98092bde28978c1fE:

00000000 <<mynewt::hw::sensor::bindings::sensor__bindgen_ty_4 as core::default::Default>::default>:
_ZN93_$LT$mynewt..hw..sensor..bindings..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17h98092bde28978c1fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:734
#[repr(C)]
pub struct sensor__bindgen_ty_4 {
    pub sle_next: *mut sensor,
}
impl Default for sensor__bindgen_ty_4 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:735
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::sensor__bindgen_ty_4 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:736
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17hf6d5e7c6083ce0ecE:

00000000 <<mynewt::hw::sensor::bindings::sensor as core::default::Default>::default>:
_ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17hf6d5e7c6083ce0ecE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:739
}
impl Default for sensor {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:740
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:741
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_read_ctx$u20$as$u20$core..default..Default$GT$7default17h7b28925225193002E:

00000000 <<mynewt::hw::sensor::bindings::sensor_read_ctx as core::default::Default>::default>:
_ZN88_$LT$mynewt..hw..sensor..bindings..sensor_read_ctx$u20$as$u20$core..default..Default$GT$7default17h7b28925225193002E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:750
pub struct sensor_read_ctx {
    pub user_func: sensor_data_func_t,
    pub user_arg: *mut ::cty::c_void,
}
impl Default for sensor_read_ctx {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:751
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::sensor_read_ctx as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:752
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8bcffdc35943d7c4E:

00000000 <<mynewt::hw::sensor::bindings::_bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default>:
_ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8bcffdc35943d7c4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:1828
#[repr(C)]
pub struct _bindgen_ty_1__bindgen_ty_1 {
    pub slh_first: *mut sensor,
}
impl Default for _bindgen_ty_1__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:1829
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::hw::sensor::bindings::_bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:1830
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h2f63d26a38f4cd63E:

00000000 <<mynewt::hw::sensor::bindings::_bindgen_ty_1 as core::default::Default>::default>:
_ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h2f63d26a38f4cd63E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:1833
}
impl Default for _bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:1834
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::hw::sensor::bindings::_bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:1835
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt2hw6sensor8bindings4read17hfa184100aee2fac4E:

00000000 <mynewt::hw::sensor::bindings::read>:
_ZN6mynewt2hw6sensor8bindings4read17hfa184100aee2fac4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:864
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   4:	b092      	sub	sp, #72	; 0x48
   6:	4619      	mov	r1, r3
   8:	4694      	mov	ip, r2
   a:	f8dd e070 	ldr.w	lr, [sp, #112]	; 0x70
   e:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
  10:	9d1a      	ldr	r5, [sp, #104]	; 0x68
  12:	4606      	mov	r6, r0
  14:	900b      	str	r0, [sp, #44]	; 0x2c
  16:	930d      	str	r3, [sp, #52]	; 0x34
  18:	920c      	str	r2, [sp, #48]	; 0x30
  1a:	980b      	ldr	r0, [sp, #44]	; 0x2c
  1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  20:	9f1a      	ldr	r7, [sp, #104]	; 0x68
  22:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
  26:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
  2a:	46ea      	mov	sl, sp
  2c:	f8ca 9008 	str.w	r9, [sl, #8]
  30:	f8ca 8004 	str.w	r8, [sl, #4]
  34:	f8ca 7000 	str.w	r7, [sl]
  38:	910a      	str	r1, [sp, #40]	; 0x28
  3a:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  3e:	f8cd e020 	str.w	lr, [sp, #32]
  42:	9407      	str	r4, [sp, #28]
  44:	9506      	str	r5, [sp, #24]
  46:	9605      	str	r6, [sp, #20]
  48:	f7ff fffe 	bl	0 <sensor_read>
  4c:	9010      	str	r0, [sp, #64]	; 0x40
  4e:	e7ff      	b.n	50 <mynewt::hw::sensor::bindings::read+0x50>
  50:	9810      	ldr	r0, [sp, #64]	; 0x40
  52:	2800      	cmp	r0, #0
  54:	d105      	bne.n	62 <mynewt::hw::sensor::bindings::read+0x62>
  56:	e7ff      	b.n	58 <mynewt::hw::sensor::bindings::read+0x58>
  58:	2000      	movs	r0, #0
  5a:	900f      	str	r0, [sp, #60]	; 0x3c
  5c:	2001      	movs	r0, #1
  5e:	900f      	str	r0, [sp, #60]	; 0x3c
  60:	e007      	b.n	72 <mynewt::hw::sensor::bindings::read+0x72>
  62:	9810      	ldr	r0, [sp, #64]	; 0x40
  64:	f7ff fffe 	bl	0 <<mynewt::result::MynewtError as core::convert::From<i32>>::from>
  68:	9004      	str	r0, [sp, #16]
  6a:	e7ff      	b.n	6c <mynewt::hw::sensor::bindings::read+0x6c>
  6c:	9804      	ldr	r0, [sp, #16]
  6e:	900f      	str	r0, [sp, #60]	; 0x3c
  70:	e7ff      	b.n	72 <mynewt::hw::sensor::bindings::read+0x72>
  72:	980f      	ldr	r0, [sp, #60]	; 0x3c
  74:	b012      	add	sp, #72	; 0x48
  76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

Disassembly of section .text._ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17hcf58d7c66915afb3E:

00000000 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname>:
_ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17hcf58d7c66915afb3E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:948
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	9105      	str	r1, [sp, #20]
   a:	9206      	str	r2, [sp, #24]
   c:	9905      	ldr	r1, [sp, #20]
   e:	9004      	str	r0, [sp, #16]
  10:	4608      	mov	r0, r1
  12:	9303      	str	r3, [sp, #12]
  14:	f8cd c008 	str.w	ip, [sp, #8]
  18:	f7ff fffe 	bl	0 <mynewt::Strn::validate>
  1c:	e7ff      	b.n	1e <mynewt::hw::sensor::bindings::mgr_find_next_bydevname+0x1e>
  1e:	9805      	ldr	r0, [sp, #20]
  20:	f7ff fffe 	bl	0 <mynewt::Strn::as_ptr>
  24:	9001      	str	r0, [sp, #4]
  26:	e7ff      	b.n	28 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname+0x28>
  28:	9906      	ldr	r1, [sp, #24]
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	f7ff fffe 	bl	0 <sensor_mgr_find_next_bydevname>
  30:	9007      	str	r0, [sp, #28]
  32:	e7ff      	b.n	34 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname+0x34>
  34:	9807      	ldr	r0, [sp, #28]
  36:	9904      	ldr	r1, [sp, #16]
  38:	6048      	str	r0, [r1, #4]
  3a:	2000      	movs	r0, #0
  3c:	6008      	str	r0, [r1, #0]
  3e:	b008      	add	sp, #32
  40:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h1b333cb0fcc2972cE:

00000000 <mynewt::hw::sensor::bindings::set_poll_rate_ms>:
_ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h1b333cb0fcc2972cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:970
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
   c:	9805      	ldr	r0, [sp, #20]
   e:	9204      	str	r2, [sp, #16]
  10:	9303      	str	r3, [sp, #12]
  12:	f7ff fffe 	bl	0 <mynewt::Strn::validate>
  16:	e7ff      	b.n	18 <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x18>
  18:	9805      	ldr	r0, [sp, #20]
  1a:	f7ff fffe 	bl	0 <mynewt::Strn::as_ptr>
  1e:	9002      	str	r0, [sp, #8]
  20:	e7ff      	b.n	22 <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x22>
  22:	9906      	ldr	r1, [sp, #24]
  24:	9802      	ldr	r0, [sp, #8]
  26:	f7ff fffe 	bl	0 <sensor_set_poll_rate_ms>
  2a:	9008      	str	r0, [sp, #32]
  2c:	e7ff      	b.n	2e <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x2e>
  2e:	9808      	ldr	r0, [sp, #32]
  30:	2800      	cmp	r0, #0
  32:	d105      	bne.n	40 <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x40>
  34:	e7ff      	b.n	36 <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x36>
  36:	2000      	movs	r0, #0
  38:	9007      	str	r0, [sp, #28]
  3a:	2001      	movs	r0, #1
  3c:	9007      	str	r0, [sp, #28]
  3e:	e007      	b.n	50 <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x50>
  40:	9808      	ldr	r0, [sp, #32]
  42:	f7ff fffe 	bl	0 <<mynewt::result::MynewtError as core::convert::From<i32>>::from>
  46:	9001      	str	r0, [sp, #4]
  48:	e7ff      	b.n	4a <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x4a>
  4a:	9801      	ldr	r0, [sp, #4]
  4c:	9007      	str	r0, [sp, #28]
  4e:	e7ff      	b.n	50 <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x50>
  50:	9807      	ldr	r0, [sp, #28]
  52:	b00a      	add	sp, #40	; 0x28
  54:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.2xxpw2a6lichvasv.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 2xxpw2a6lichvasv
00000249 l       .debug_str	00000000 
000005c5 l       .debug_str	00000000 
00000623 l       .debug_str	00000000 
000005c0 l       .debug_str	00000000 
00000615 l       .debug_str	00000000 
000005ba l       .debug_str	00000000 
00000611 l       .debug_str	00000000 
000005b4 l       .debug_str	00000000 
00000604 l       .debug_str	00000000 
000005ad l       .debug_str	00000000 
000005d2 l       .debug_str	00000000 
000005a4 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a7 l       .debug_str	00000000 
000000ae l       .debug_str	00000000 
000000b2 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000d0 l       .debug_str	00000000 
000000dd l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000110 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
0000017d l       .debug_str	00000000 
00000182 l       .debug_str	00000000 
00000191 l       .debug_str	00000000 
0000019a l       .debug_str	00000000 
0000021d l       .debug_str	00000000 
00000225 l       .debug_str	00000000 
00000230 l       .debug_str	00000000 
0000023f l       .debug_str	00000000 
0000059c l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000276 l       .debug_str	00000000 
0000027d l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
00000286 l       .debug_str	00000000 
0000029d l       .debug_str	00000000 
000002a1 l       .debug_str	00000000 
000002f4 l       .debug_str	00000000 
000002f6 l       .debug_str	00000000 
000002fb l       .debug_str	00000000 
000002ff l       .debug_str	00000000 
0000035a l       .debug_str	00000000 
0000036f l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
000003d4 l       .debug_str	00000000 
000003eb l       .debug_str	00000000 
000003ee l       .debug_str	00000000 
000003f1 l       .debug_str	00000000 
000003f3 l       .debug_str	00000000 
000003f7 l       .debug_str	00000000 
0000041f l       .debug_str	00000000 
00000465 l       .debug_str	00000000 
00000476 l       .debug_str	00000000 
0000047b l       .debug_str	00000000 
000004a5 l       .debug_str	00000000 
000004e7 l       .debug_str	00000000 
000004f4 l       .debug_str	00000000 
00000538 l       .debug_str	00000000 
00000547 l       .debug_str	00000000 
0000058a l       .debug_str	00000000 
00000598 l       .debug_str	00000000 
000005cd l       .debug_str	00000000 
00000000 l    d  .text._ZN97_$LT$mynewt..libs..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hea9cef7582d2d6c7E	00000000 .text._ZN97_$LT$mynewt..libs..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hea9cef7582d2d6c7E
00000000 l    d  .text._ZN6mynewt4libs14sensor_network22start_server_transport17h6009bbb3c25195b5E	00000000 .text._ZN6mynewt4libs14sensor_network22start_server_transport17h6009bbb3c25195b5E
00000000 l    d  .text._ZN6mynewt4libs14sensor_network16init_server_post17hbeda0b43632f58fbE	00000000 .text._ZN6mynewt4libs14sensor_network16init_server_post17hbeda0b43632f58fbE
00000000 l    d  .text._ZN6mynewt4libs14sensor_network12prepare_post17he077c30fc9d88d28E	00000000 .text._ZN6mynewt4libs14sensor_network12prepare_post17he077c30fc9d88d28E
00000000 l    d  .text._ZN6mynewt4libs14sensor_network14do_server_post17h6c90b73e883479caE	00000000 .text._ZN6mynewt4libs14sensor_network14do_server_post17h6c90b73e883479caE
00000000 l    d  .text._ZN6mynewt4libs14sensor_network13get_device_id17he689acf42fcaec72E	00000000 .text._ZN6mynewt4libs14sensor_network13get_device_id17he689acf42fcaec72E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 mynewt::Strn::as_ptr
00000000         *UND*	00000000 mynewt::Strn::validate
00000000         *UND*	00000000 mynewt::Strn::from_cstr
00000000 g     F .text._ZN6mynewt4libs14sensor_network12prepare_post17he077c30fc9d88d28E	0000002a mynewt::libs::sensor_network::prepare_post
00000000 g     F .text._ZN6mynewt4libs14sensor_network13get_device_id17he689acf42fcaec72E	0000002e mynewt::libs::sensor_network::get_device_id
00000000 g     F .text._ZN6mynewt4libs14sensor_network14do_server_post17h6c90b73e883479caE	00000020 mynewt::libs::sensor_network::do_server_post
00000000 g     F .text._ZN6mynewt4libs14sensor_network16init_server_post17hbeda0b43632f58fbE	0000003c mynewt::libs::sensor_network::init_server_post
00000000 g     F .text._ZN6mynewt4libs14sensor_network22start_server_transport17h6009bbb3c25195b5E	00000034 mynewt::libs::sensor_network::start_server_transport
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::convert::From<i32>>::from
00000000 g     F .text._ZN97_$LT$mynewt..libs..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hea9cef7582d2d6c7E	00000012 <mynewt::libs::sensor_network::sensor_network_interface as core::default::Default>::default
00000000         *UND*	00000000 do_server_post
00000000         *UND*	00000000 get_device_id
00000000         *UND*	00000000 init_server_post
00000000         *UND*	00000000 sensor_network_prepare_post
00000000         *UND*	00000000 start_server_transport



Disassembly of section .text._ZN97_$LT$mynewt..libs..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hea9cef7582d2d6c7E:

00000000 <<mynewt::libs::sensor_network::sensor_network_interface as core::default::Default>::default>:
_ZN97_$LT$mynewt..libs..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hea9cef7582d2d6c7E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:36
        ) -> ::cty::c_int,
    >,
    pub transport_registered: u8,
}
impl Default for sensor_network_interface {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:37
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::libs::sensor_network::sensor_network_interface as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:38
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4libs14sensor_network22start_server_transport17h6009bbb3c25195b5E:

00000000 <mynewt::libs::sensor_network::start_server_transport>:
_ZN6mynewt4libs14sensor_network22start_server_transport17h6009bbb3c25195b5E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:40
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	f7ff fffe 	bl	0 <start_server_transport>
   8:	9002      	str	r0, [sp, #8]
   a:	e7ff      	b.n	c <mynewt::libs::sensor_network::start_server_transport+0xc>
   c:	9802      	ldr	r0, [sp, #8]
   e:	2800      	cmp	r0, #0
  10:	d105      	bne.n	1e <mynewt::libs::sensor_network::start_server_transport+0x1e>
  12:	e7ff      	b.n	14 <mynewt::libs::sensor_network::start_server_transport+0x14>
  14:	2000      	movs	r0, #0
  16:	9001      	str	r0, [sp, #4]
  18:	2001      	movs	r0, #1
  1a:	9001      	str	r0, [sp, #4]
  1c:	e007      	b.n	2e <mynewt::libs::sensor_network::start_server_transport+0x2e>
  1e:	9802      	ldr	r0, [sp, #8]
  20:	f7ff fffe 	bl	0 <<mynewt::result::MynewtError as core::convert::From<i32>>::from>
  24:	9000      	str	r0, [sp, #0]
  26:	e7ff      	b.n	28 <mynewt::libs::sensor_network::start_server_transport+0x28>
  28:	9800      	ldr	r0, [sp, #0]
  2a:	9001      	str	r0, [sp, #4]
  2c:	e7ff      	b.n	2e <mynewt::libs::sensor_network::start_server_transport+0x2e>
  2e:	9801      	ldr	r0, [sp, #4]
  30:	b004      	add	sp, #16
  32:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4libs14sensor_network16init_server_post17hbeda0b43632f58fbE:

00000000 <mynewt::libs::sensor_network::init_server_post>:
_ZN6mynewt4libs14sensor_network16init_server_post17hbeda0b43632f58fbE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:60
    pub fn register_collector_transport() -> ::cty::c_int;
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
    pub fn sensor_network_register_transport(iface_type: u8) -> ::cty::c_int;
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	9104      	str	r1, [sp, #16]
   8:	9904      	ldr	r1, [sp, #16]
   a:	9003      	str	r0, [sp, #12]
   c:	4608      	mov	r0, r1
   e:	9202      	str	r2, [sp, #8]
  10:	f7ff fffe 	bl	0 <mynewt::Strn::validate>
  14:	e7ff      	b.n	16 <mynewt::libs::sensor_network::init_server_post+0x16>
  16:	9804      	ldr	r0, [sp, #16]
  18:	f7ff fffe 	bl	0 <mynewt::Strn::as_ptr>
  1c:	9001      	str	r0, [sp, #4]
  1e:	e7ff      	b.n	20 <mynewt::libs::sensor_network::init_server_post+0x20>
  20:	9801      	ldr	r0, [sp, #4]
  22:	f7ff fffe 	bl	0 <init_server_post>
  26:	f88d 0017 	strb.w	r0, [sp, #23]
  2a:	e7ff      	b.n	2c <mynewt::libs::sensor_network::init_server_post+0x2c>
  2c:	f89d 0017 	ldrb.w	r0, [sp, #23]
  30:	9903      	ldr	r1, [sp, #12]
  32:	7048      	strb	r0, [r1, #1]
  34:	2000      	movs	r0, #0
  36:	7008      	strb	r0, [r1, #0]
  38:	b006      	add	sp, #24
  3a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4libs14sensor_network12prepare_post17he077c30fc9d88d28E:

00000000 <mynewt::libs::sensor_network::prepare_post>:
_ZN6mynewt4libs14sensor_network12prepare_post17he077c30fc9d88d28E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:69
    pub fn init_collector_post() -> bool;
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
    pub fn sensor_network_init_post(iface_type: u8, uri: *const ::cty::c_char) -> bool;
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	460a      	mov	r2, r1
   6:	9102      	str	r1, [sp, #8]
   8:	9902      	ldr	r1, [sp, #8]
   a:	9001      	str	r0, [sp, #4]
   c:	4608      	mov	r0, r1
   e:	9200      	str	r2, [sp, #0]
  10:	f7ff fffe 	bl	0 <sensor_network_prepare_post>
  14:	f88d 000f 	strb.w	r0, [sp, #15]
  18:	e7ff      	b.n	1a <mynewt::libs::sensor_network::prepare_post+0x1a>
  1a:	f89d 000f 	ldrb.w	r0, [sp, #15]
  1e:	9901      	ldr	r1, [sp, #4]
  20:	7048      	strb	r0, [r1, #1]
  22:	2000      	movs	r0, #0
  24:	7008      	strb	r0, [r1, #0]
  26:	b004      	add	sp, #16
  28:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4libs14sensor_network14do_server_post17h6c90b73e883479caE:

00000000 <mynewt::libs::sensor_network::do_server_post>:
_ZN6mynewt4libs14sensor_network14do_server_post17h6c90b73e883479caE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:72
    pub fn sensor_network_prepare_post(encoding: ::cty::c_int) -> bool;
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9000      	str	r0, [sp, #0]
   6:	f7ff fffe 	bl	0 <do_server_post>
   a:	f88d 0007 	strb.w	r0, [sp, #7]
   e:	e7ff      	b.n	10 <mynewt::libs::sensor_network::do_server_post+0x10>
  10:	f89d 0007 	ldrb.w	r0, [sp, #7]
  14:	9900      	ldr	r1, [sp, #0]
  16:	7048      	strb	r0, [r1, #1]
  18:	2000      	movs	r0, #0
  1a:	7008      	strb	r0, [r1, #0]
  1c:	b002      	add	sp, #8
  1e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4libs14sensor_network13get_device_id17he689acf42fcaec72E:

00000000 <mynewt::libs::sensor_network::get_device_id>:
_ZN6mynewt4libs14sensor_network13get_device_id17he689acf42fcaec72E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:96
    pub fn should_send_to_collector(
        val: *mut sensor_value,
        device_name: *const ::cty::c_char,
    ) -> bool;
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	9001      	str	r0, [sp, #4]
   6:	f7ff fffe 	bl	0 <get_device_id>
   a:	9002      	str	r0, [sp, #8]
   c:	e7ff      	b.n	e <mynewt::libs::sensor_network::get_device_id+0xe>
   e:	9902      	ldr	r1, [sp, #8]
  10:	a803      	add	r0, sp, #12
  12:	f7ff fffe 	bl	0 <mynewt::Strn::from_cstr>
  16:	e7ff      	b.n	18 <mynewt::libs::sensor_network::get_device_id+0x18>
  18:	9803      	ldr	r0, [sp, #12]
  1a:	9904      	ldr	r1, [sp, #16]
  1c:	9a05      	ldr	r2, [sp, #20]
  1e:	9b01      	ldr	r3, [sp, #4]
  20:	60da      	str	r2, [r3, #12]
  22:	6099      	str	r1, [r3, #8]
  24:	6058      	str	r0, [r3, #4]
  26:	2000      	movs	r0, #0
  28:	6018      	str	r0, [r3, #0]
  2a:	b006      	add	sp, #24
  2c:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.34s9veycd8iw7blw.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 34s9veycd8iw7blw
000000ea l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
0000039f l       .debug_str	00000000 
00000282 l       .debug_str	00000000 
0000039d l       .debug_str	00000000 
00000273 l       .debug_str	00000000 
00000229 l       .debug_str	00000000 
0000021d l       .debug_str	00000000 
00000399 l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001c8 l       .debug_str	00000000 
00000394 l       .debug_str	00000000 
000001c2 l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
0000038a l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
00000346 l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
00000336 l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000e1 l       .debug_str	00000000 
000000e5 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
000000ec l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000f5 l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
000002eb l       .debug_str	00000000 
00000000 l     F .text._ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_add17ha22472e2d1844567E	00000052 core::num::<impl u32>::overflowing_add
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfb0136607b8df7bdE	00000050 core::num::<impl usize>::checked_mul
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h9b91c6b9eb70d744E	00000052 core::num::<impl usize>::overflowing_mul
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h689f9906c0b5a932E	00000056 core::num::<impl usize>::overflowing_sub
00000000 l     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17haf3c46268b03fd1eE	00000006 core::num::<impl usize>::max_value
00000000 l    d  .text._ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h852543dd9c36f284E	00000000 .text._ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h852543dd9c36f284E
00000000 l    d  .text._ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_add17ha22472e2d1844567E	00000000 .text._ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_add17ha22472e2d1844567E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfb0136607b8df7bdE	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfb0136607b8df7bdE
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h1b2dc11be93c175aE	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h1b2dc11be93c175aE
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h8e2aeaa79033e96cE	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h8e2aeaa79033e96cE
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h9b91c6b9eb70d744E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h9b91c6b9eb70d744E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h689f9906c0b5a932E	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h689f9906c0b5a932E
00000000 l    d  .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17haf3c46268b03fd1eE	00000000 .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17haf3c46268b03fd1eE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h852543dd9c36f284E	00000050 .hidden core::num::<impl u32>::checked_add
00000000 g     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h1b2dc11be93c175aE	00000050 .hidden core::num::<impl usize>::checked_sub
00000000 g     F .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h8e2aeaa79033e96cE	0000003a .hidden core::num::<impl usize>::saturating_mul
00000000         *UND*	00000000 core::option::Option<T>::unwrap_or



Disassembly of section .text._ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h852543dd9c36f284E:

00000000 <core::num::<impl u32>::checked_add>:
_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17h852543dd9c36f284E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2676
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2677
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::num::<impl u32>::checked_add>
  18:	9001      	str	r0, [sp, #4]
  1a:	9100      	str	r1, [sp, #0]
  1c:	e7ff      	b.n	1e <core::num::<impl u32>::checked_add+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	9008      	str	r0, [sp, #32]
  22:	9900      	ldr	r1, [sp, #0]
  24:	f001 0201 	and.w	r2, r1, #1
  28:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2678
  2c:	f89d 2027 	ldrb.w	r2, [sp, #39]	; 0x27
  30:	07d2      	lsls	r2, r2, #31
  32:	2a00      	cmp	r2, #0
  34:	d003      	beq.n	3e <core::num::<impl u32>::checked_add+0x3e>
  36:	e7ff      	b.n	38 <core::num::<impl u32>::checked_add+0x38>
  38:	2000      	movs	r0, #0
  3a:	9006      	str	r0, [sp, #24]
  3c:	e004      	b.n	48 <core::num::<impl u32>::checked_add+0x48>
  3e:	9808      	ldr	r0, [sp, #32]
  40:	9007      	str	r0, [sp, #28]
  42:	2001      	movs	r0, #1
  44:	9006      	str	r0, [sp, #24]
  46:	e7ff      	b.n	48 <core::num::<impl u32>::checked_add+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2679
  48:	9806      	ldr	r0, [sp, #24]
  4a:	9907      	ldr	r1, [sp, #28]
  4c:	b00a      	add	sp, #40	; 0x28
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_add17ha22472e2d1844567E:

00000000 <core::num::<impl u32>::overflowing_add>:
_ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_add17ha22472e2d1844567E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3346
   0:	b08c      	sub	sp, #48	; 0x30
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
   a:	9804      	ldr	r0, [sp, #16]
   c:	9905      	ldr	r1, [sp, #20]
   e:	1840      	adds	r0, r0, r1
  10:	f04f 0100 	mov.w	r1, #0
  14:	f141 0100 	adc.w	r1, r1, #0
  18:	900a      	str	r0, [sp, #40]	; 0x28
  1a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
  1e:	980a      	ldr	r0, [sp, #40]	; 0x28
  20:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
  24:	9203      	str	r2, [sp, #12]
  26:	9302      	str	r3, [sp, #8]
  28:	9001      	str	r0, [sp, #4]
  2a:	9100      	str	r1, [sp, #0]
  2c:	e7ff      	b.n	2e <core::num::<impl u32>::overflowing_add+0x2e>
  2e:	9801      	ldr	r0, [sp, #4]
  30:	9008      	str	r0, [sp, #32]
  32:	9900      	ldr	r1, [sp, #0]
  34:	f001 0201 	and.w	r2, r1, #1
  38:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3348
  3c:	9a08      	ldr	r2, [sp, #32]
  3e:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
  42:	9206      	str	r2, [sp, #24]
  44:	f88d 301c 	strb.w	r3, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3349
  48:	9806      	ldr	r0, [sp, #24]
  4a:	f89d 101c 	ldrb.w	r1, [sp, #28]
  4e:	b00c      	add	sp, #48	; 0x30
  50:	4770      	bx	lr

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfb0136607b8df7bdE:

00000000 <core::num::<impl usize>::checked_mul>:
_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hfb0136607b8df7bdE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2720
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2721
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::num::<impl usize>::checked_mul>
  18:	9001      	str	r0, [sp, #4]
  1a:	9100      	str	r1, [sp, #0]
  1c:	e7ff      	b.n	1e <core::num::<impl usize>::checked_mul+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	9008      	str	r0, [sp, #32]
  22:	9900      	ldr	r1, [sp, #0]
  24:	f001 0201 	and.w	r2, r1, #1
  28:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2722
  2c:	f89d 2027 	ldrb.w	r2, [sp, #39]	; 0x27
  30:	07d2      	lsls	r2, r2, #31
  32:	2a00      	cmp	r2, #0
  34:	d003      	beq.n	3e <core::num::<impl usize>::checked_mul+0x3e>
  36:	e7ff      	b.n	38 <core::num::<impl usize>::checked_mul+0x38>
  38:	2000      	movs	r0, #0
  3a:	9006      	str	r0, [sp, #24]
  3c:	e004      	b.n	48 <core::num::<impl usize>::checked_mul+0x48>
  3e:	9808      	ldr	r0, [sp, #32]
  40:	9007      	str	r0, [sp, #28]
  42:	2001      	movs	r0, #1
  44:	9006      	str	r0, [sp, #24]
  46:	e7ff      	b.n	48 <core::num::<impl usize>::checked_mul+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2723
  48:	9806      	ldr	r0, [sp, #24]
  4a:	9907      	ldr	r1, [sp, #28]
  4c:	b00a      	add	sp, #40	; 0x28
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h1b2dc11be93c175aE:

00000000 <core::num::<impl usize>::checked_sub>:
_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h1b2dc11be93c175aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2698
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2699
   c:	9804      	ldr	r0, [sp, #16]
   e:	9905      	ldr	r1, [sp, #20]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	f7ff fffe 	bl	0 <core::num::<impl usize>::checked_sub>
  18:	9001      	str	r0, [sp, #4]
  1a:	9100      	str	r1, [sp, #0]
  1c:	e7ff      	b.n	1e <core::num::<impl usize>::checked_sub+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	9008      	str	r0, [sp, #32]
  22:	9900      	ldr	r1, [sp, #0]
  24:	f001 0201 	and.w	r2, r1, #1
  28:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2700
  2c:	f89d 2027 	ldrb.w	r2, [sp, #39]	; 0x27
  30:	07d2      	lsls	r2, r2, #31
  32:	2a00      	cmp	r2, #0
  34:	d003      	beq.n	3e <core::num::<impl usize>::checked_sub+0x3e>
  36:	e7ff      	b.n	38 <core::num::<impl usize>::checked_sub+0x38>
  38:	2000      	movs	r0, #0
  3a:	9006      	str	r0, [sp, #24]
  3c:	e004      	b.n	48 <core::num::<impl usize>::checked_sub+0x48>
  3e:	9808      	ldr	r0, [sp, #32]
  40:	9007      	str	r0, [sp, #28]
  42:	2001      	movs	r0, #1
  44:	9006      	str	r0, [sp, #24]
  46:	e7ff      	b.n	48 <core::num::<impl usize>::checked_sub+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2701
  48:	9806      	ldr	r0, [sp, #24]
  4a:	9907      	ldr	r1, [sp, #28]
  4c:	b00a      	add	sp, #40	; 0x28
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h8e2aeaa79033e96cE:

00000000 <core::num::<impl usize>::saturating_mul>:
_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h8e2aeaa79033e96cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2997
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2998
   c:	9806      	ldr	r0, [sp, #24]
   e:	9907      	ldr	r1, [sp, #28]
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  18:	9003      	str	r0, [sp, #12]
  1a:	9102      	str	r1, [sp, #8]
  1c:	e7ff      	b.n	1e <core::num::<impl usize>::saturating_mul+0x1e>
  1e:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  22:	9001      	str	r0, [sp, #4]
  24:	e7ff      	b.n	26 <core::num::<impl usize>::saturating_mul+0x26>
  26:	9803      	ldr	r0, [sp, #12]
  28:	9902      	ldr	r1, [sp, #8]
  2a:	9a01      	ldr	r2, [sp, #4]
  2c:	f7ff fffe 	bl	0 <core::option::Option<T>::unwrap_or>
  30:	9000      	str	r0, [sp, #0]
  32:	e7ff      	b.n	34 <core::num::<impl usize>::saturating_mul+0x34>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2999
  34:	9800      	ldr	r0, [sp, #0]
  36:	b008      	add	sp, #32
  38:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h9b91c6b9eb70d744E:

00000000 <core::num::<impl usize>::overflowing_mul>:
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h9b91c6b9eb70d744E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3401
   0:	b08c      	sub	sp, #48	; 0x30
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3402
   a:	9804      	ldr	r0, [sp, #16]
   c:	9905      	ldr	r1, [sp, #20]
   e:	fba0 0101 	umull	r0, r1, r0, r1
  12:	2900      	cmp	r1, #0
  14:	bf18      	it	ne
  16:	2101      	movne	r1, #1
  18:	900a      	str	r0, [sp, #40]	; 0x28
  1a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
  1e:	980a      	ldr	r0, [sp, #40]	; 0x28
  20:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
  24:	9203      	str	r2, [sp, #12]
  26:	9302      	str	r3, [sp, #8]
  28:	9001      	str	r0, [sp, #4]
  2a:	9100      	str	r1, [sp, #0]
  2c:	e7ff      	b.n	2e <core::num::<impl usize>::overflowing_mul+0x2e>
  2e:	9801      	ldr	r0, [sp, #4]
  30:	9008      	str	r0, [sp, #32]
  32:	9900      	ldr	r1, [sp, #0]
  34:	f001 0201 	and.w	r2, r1, #1
  38:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3403
  3c:	9a08      	ldr	r2, [sp, #32]
  3e:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
  42:	9206      	str	r2, [sp, #24]
  44:	f88d 301c 	strb.w	r3, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3404
  48:	9806      	ldr	r0, [sp, #24]
  4a:	f89d 101c 	ldrb.w	r1, [sp, #28]
  4e:	b00c      	add	sp, #48	; 0x30
  50:	4770      	bx	lr

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h689f9906c0b5a932E:

00000000 <core::num::<impl usize>::overflowing_sub>:
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h689f9906c0b5a932E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3374
   0:	b08c      	sub	sp, #48	; 0x30
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   a:	9804      	ldr	r0, [sp, #16]
   c:	9905      	ldr	r1, [sp, #20]
   e:	1a40      	subs	r0, r0, r1
  10:	f04f 0100 	mov.w	r1, #0
  14:	f141 0100 	adc.w	r1, r1, #0
  18:	f1c1 0101 	rsb	r1, r1, #1
  1c:	900a      	str	r0, [sp, #40]	; 0x28
  1e:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
  22:	980a      	ldr	r0, [sp, #40]	; 0x28
  24:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
  28:	9203      	str	r2, [sp, #12]
  2a:	9302      	str	r3, [sp, #8]
  2c:	9001      	str	r0, [sp, #4]
  2e:	9100      	str	r1, [sp, #0]
  30:	e7ff      	b.n	32 <core::num::<impl usize>::overflowing_sub+0x32>
  32:	9801      	ldr	r0, [sp, #4]
  34:	9008      	str	r0, [sp, #32]
  36:	9900      	ldr	r1, [sp, #0]
  38:	f001 0201 	and.w	r2, r1, #1
  3c:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3376
  40:	9a08      	ldr	r2, [sp, #32]
  42:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
  46:	9206      	str	r2, [sp, #24]
  48:	f88d 301c 	strb.w	r3, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3377
  4c:	9806      	ldr	r0, [sp, #24]
  4e:	f89d 101c 	ldrb.w	r1, [sp, #28]
  52:	b00c      	add	sp, #48	; 0x30
  54:	4770      	bx	lr

Disassembly of section .text._ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17haf3c46268b03fd1eE:

00000000 <core::num::<impl usize>::max_value>:
_ZN4core3num23_$LT$impl$u20$usize$GT$9max_value17haf3c46268b03fd1eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:2326
   0:	f04f 30ff 	mov.w	r0, #4294967295
   4:	4770      	bx	lr

mynewt-d7fd96264f78b961.36tpqlexyla0ym9j.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 36tpqlexyla0ym9j
00001291 l       .debug_str	00000000 
00002c73 l       .debug_str	00000000 
00002d67 l       .debug_str	00000000 
00002c69 l       .debug_str	00000000 
00002c50 l       .debug_str	00000000 
00002c33 l       .debug_str	00000000 
00002c28 l       .debug_str	00000000 
00002bca l       .debug_str	00000000 
00002bb0 l       .debug_str	00000000 
00002ba6 l       .debug_str	00000000 
00002d5a l       .debug_str	00000000 
00002b8a l       .debug_str	00000000 
00002b66 l       .debug_str	00000000 
00002b4f l       .debug_str	00000000 
00002b47 l       .debug_str	00000000 
00002b43 l       .debug_str	00000000 
00002b3f l       .debug_str	00000000 
00002b39 l       .debug_str	00000000 
00002b32 l       .debug_str	00000000 
00002d4d l       .debug_str	00000000 
00002b27 l       .debug_str	00000000 
00002b23 l       .debug_str	00000000 
00002b15 l       .debug_str	00000000 
00002b0b l       .debug_str	00000000 
00002afa l       .debug_str	00000000 
00002af5 l       .debug_str	00000000 
00002adc l       .debug_str	00000000 
00002ad0 l       .debug_str	00000000 
00002d48 l       .debug_str	00000000 
00002ac4 l       .debug_str	00000000 
00002abd l       .debug_str	00000000 
00002ab5 l       .debug_str	00000000 
00002aad l       .debug_str	00000000 
00002aa4 l       .debug_str	00000000 
00002aa0 l       .debug_str	00000000 
00002a91 l       .debug_str	00000000 
00002a8b l       .debug_str	00000000 
00002a86 l       .debug_str	00000000 
00002d40 l       .debug_str	00000000 
00002a5f l       .debug_str	00000000 
00002a40 l       .debug_str	00000000 
00002d3b l       .debug_str	00000000 
00002a1d l       .debug_str	00000000 
00002a14 l       .debug_str	00000000 
00002d37 l       .debug_str	00000000 
00002d31 l       .debug_str	00000000 
00002d2c l       .debug_str	00000000 
00002d29 l       .debug_str	00000000 
00002d14 l       .debug_str	00000000 
00002cfd l       .debug_str	00000000 
00002a09 l       .debug_str	00000000 
00002cef l       .debug_str	00000000 
00002a03 l       .debug_str	00000000 
00002ce3 l       .debug_str	00000000 
00002cd6 l       .debug_str	00000000 
00002cca l       .debug_str	00000000 
00002cc5 l       .debug_str	00000000 
000029fd l       .debug_str	00000000 
00002cc3 l       .debug_str	00000000 
00002cbf l       .debug_str	00000000 
00002cb8 l       .debug_str	00000000 
00002cab l       .debug_str	00000000 
00002ca7 l       .debug_str	00000000 
00002ca1 l       .debug_str	00000000 
00002c9b l       .debug_str	00000000 
00002c96 l       .debug_str	00000000 
00002c92 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000088 l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000ab l       .debug_str	00000000 
000000b3 l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
000000c0 l       .debug_str	00000000 
000000ca l       .debug_str	00000000 
000000d1 l       .debug_str	00000000 
000000d7 l       .debug_str	00000000 
000000dd l       .debug_str	00000000 
000000e2 l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
00000127 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
0000012e l       .debug_str	00000000 
00000131 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
00000155 l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
0000018b l       .debug_str	00000000 
00000195 l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001d1 l       .debug_str	00000000 
000001df l       .debug_str	00000000 
000001e9 l       .debug_str	00000000 
000001f6 l       .debug_str	00000000 
00000202 l       .debug_str	00000000 
00000204 l       .debug_str	00000000 
00000208 l       .debug_str	00000000 
00000230 l       .debug_str	00000000 
00000234 l       .debug_str	00000000 
0000023a l       .debug_str	00000000 
0000023f l       .debug_str	00000000 
00000244 l       .debug_str	00000000 
0000024a l       .debug_str	00000000 
0000024e l       .debug_str	00000000 
0000025a l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
00000267 l       .debug_str	00000000 
00000271 l       .debug_str	00000000 
0000027a l       .debug_str	00000000 
0000028a l       .debug_str	00000000 
0000028e l       .debug_str	00000000 
0000029a l       .debug_str	00000000 
000002bb l       .debug_str	00000000 
00000319 l       .debug_str	00000000 
0000032e l       .debug_str	00000000 
00000342 l       .debug_str	00000000 
0000037d l       .debug_str	00000000 
0000038f l       .debug_str	00000000 
00000398 l       .debug_str	00000000 
000003a7 l       .debug_str	00000000 
000003af l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003bc l       .debug_str	00000000 
000003c3 l       .debug_str	00000000 
000003c6 l       .debug_str	00000000 
000003d2 l       .debug_str	00000000 
000003da l       .debug_str	00000000 
000003de l       .debug_str	00000000 
000003e9 l       .debug_str	00000000 
000003f4 l       .debug_str	00000000 
000003fb l       .debug_str	00000000 
00000412 l       .debug_str	00000000 
0000046c l       .debug_str	00000000 
00000471 l       .debug_str	00000000 
000004d3 l       .debug_str	00000000 
000004de l       .debug_str	00000000 
00000525 l       .debug_str	00000000 
00000574 l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
000005bb l       .debug_str	00000000 
00000600 l       .debug_str	00000000 
00000609 l       .debug_str	00000000 
00000619 l       .debug_str	00000000 
00000621 l       .debug_str	00000000 
00000676 l       .debug_str	00000000 
000006d3 l       .debug_str	00000000 
000006df l       .debug_str	00000000 
000006e8 l       .debug_str	00000000 
000006f4 l       .debug_str	00000000 
00000700 l       .debug_str	00000000 
00000709 l       .debug_str	00000000 
00000711 l       .debug_str	00000000 
00000719 l       .debug_str	00000000 
00000723 l       .debug_str	00000000 
00000738 l       .debug_str	00000000 
0000073f l       .debug_str	00000000 
0000075f l       .debug_str	00000000 
00000766 l       .debug_str	00000000 
0000076e l       .debug_str	00000000 
00000778 l       .debug_str	00000000 
00000783 l       .debug_str	00000000 
0000078c l       .debug_str	00000000 
00000797 l       .debug_str	00000000 
000007a3 l       .debug_str	00000000 
000007a7 l       .debug_str	00000000 
000007b0 l       .debug_str	00000000 
000007b7 l       .debug_str	00000000 
000007bf l       .debug_str	00000000 
000007c7 l       .debug_str	00000000 
000007d1 l       .debug_str	00000000 
000007d7 l       .debug_str	00000000 
000007de l       .debug_str	00000000 
000007e5 l       .debug_str	00000000 
00000812 l       .debug_str	00000000 
00000847 l       .debug_str	00000000 
0000084d l       .debug_str	00000000 
00000853 l       .debug_str	00000000 
00000862 l       .debug_str	00000000 
00000872 l       .debug_str	00000000 
00000882 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
000008b3 l       .debug_str	00000000 
00000911 l       .debug_str	00000000 
00000977 l       .debug_str	00000000 
0000097e l       .debug_str	00000000 
00000986 l       .debug_str	00000000 
0000098f l       .debug_str	00000000 
000009ad l       .debug_str	00000000 
000009bd l       .debug_str	00000000 
000009cb l       .debug_str	00000000 
000009d6 l       .debug_str	00000000 
000009e3 l       .debug_str	00000000 
000009f2 l       .debug_str	00000000 
00000a08 l       .debug_str	00000000 
00000a12 l       .debug_str	00000000 
00000a1b l       .debug_str	00000000 
00000a24 l       .debug_str	00000000 
00000a4a l       .debug_str	00000000 
00000a60 l       .debug_str	00000000 
00000a6b l       .debug_str	00000000 
00000a81 l       .debug_str	00000000 
00000a89 l       .debug_str	00000000 
00000aaa l       .debug_str	00000000 
00000ac1 l       .debug_str	00000000 
00000ac6 l       .debug_str	00000000 
00000ace l       .debug_str	00000000 
00000ad7 l       .debug_str	00000000 
00000ae0 l       .debug_str	00000000 
00000ae9 l       .debug_str	00000000 
00000af1 l       .debug_str	00000000 
00000af8 l       .debug_str	00000000 
00000b04 l       .debug_str	00000000 
00000b0f l       .debug_str	00000000 
00000b17 l       .debug_str	00000000 
00000b1f l       .debug_str	00000000 
00000c1b l       .debug_str	00000000 
00000d1f l       .debug_str	00000000 
00000d2d l       .debug_str	00000000 
00000d38 l       .debug_str	00000000 
00000d42 l       .debug_str	00000000 
00000d4d l       .debug_str	00000000 
00000d7b l       .debug_str	00000000 
00000df6 l       .debug_str	00000000 
00000e79 l       .debug_str	00000000 
00000e87 l       .debug_str	00000000 
00000ee6 l       .debug_str	00000000 
00000f4d l       .debug_str	00000000 
00000f63 l       .debug_str	00000000 
00000f73 l       .debug_str	00000000 
00000f82 l       .debug_str	00000000 
00000f86 l       .debug_str	00000000 
00000f8d l       .debug_str	00000000 
00000f93 l       .debug_str	00000000 
00000f99 l       .debug_str	00000000 
00000f9f l       .debug_str	00000000 
00000fab l       .debug_str	00000000 
00000fb3 l       .debug_str	00000000 
00000fb9 l       .debug_str	00000000 
00000fc1 l       .debug_str	00000000 
00000fc7 l       .debug_str	00000000 
00000fea l       .debug_str	00000000 
00000ffa l       .debug_str	00000000 
0000102d l       .debug_str	00000000 
0000106d l       .debug_str	00000000 
000010b5 l       .debug_str	00000000 
000010b9 l       .debug_str	00000000 
000010bf l       .debug_str	00000000 
000010c5 l       .debug_str	00000000 
000010cb l       .debug_str	00000000 
000010dd l       .debug_str	00000000 
00001112 l       .debug_str	00000000 
00001154 l       .debug_str	00000000 
0000119e l       .debug_str	00000000 
000011a2 l       .debug_str	00000000 
000011a8 l       .debug_str	00000000 
000011ae l       .debug_str	00000000 
000011b4 l       .debug_str	00000000 
000011c6 l       .debug_str	00000000 
000011fb l       .debug_str	00000000 
0000123d l       .debug_str	00000000 
00001287 l       .debug_str	00000000 
0000128b l       .debug_str	00000000 
000029f5 l       .debug_str	00000000 
00001297 l       .debug_str	00000000 
0000129d l       .debug_str	00000000 
000012a3 l       .debug_str	00000000 
000012b4 l       .debug_str	00000000 
000012e8 l       .debug_str	00000000 
00001329 l       .debug_str	00000000 
00001372 l       .debug_str	00000000 
00001377 l       .debug_str	00000000 
0000137c l       .debug_str	00000000 
00001380 l       .debug_str	00000000 
00001386 l       .debug_str	00000000 
0000138c l       .debug_str	00000000 
00001392 l       .debug_str	00000000 
000013a3 l       .debug_str	00000000 
000013d7 l       .debug_str	00000000 
00001418 l       .debug_str	00000000 
00001461 l       .debug_str	00000000 
00001465 l       .debug_str	00000000 
0000146e l       .debug_str	00000000 
0000147f l       .debug_str	00000000 
000014b3 l       .debug_str	00000000 
000014f4 l       .debug_str	00000000 
0000153d l       .debug_str	00000000 
00001542 l       .debug_str	00000000 
00001546 l       .debug_str	00000000 
0000154f l       .debug_str	00000000 
00001556 l       .debug_str	00000000 
0000155e l       .debug_str	00000000 
00001570 l       .debug_str	00000000 
000015a5 l       .debug_str	00000000 
000015e7 l       .debug_str	00000000 
00001631 l       .debug_str	00000000 
00001635 l       .debug_str	00000000 
0000163b l       .debug_str	00000000 
00001641 l       .debug_str	00000000 
00001647 l       .debug_str	00000000 
0000164d l       .debug_str	00000000 
00001655 l       .debug_str	00000000 
00001663 l       .debug_str	00000000 
00001672 l       .debug_str	00000000 
00001683 l       .debug_str	00000000 
0000168e l       .debug_str	00000000 
00001699 l       .debug_str	00000000 
000016a4 l       .debug_str	00000000 
000016ab l       .debug_str	00000000 
000016ce l       .debug_str	00000000 
000016e0 l       .debug_str	00000000 
00001715 l       .debug_str	00000000 
00001757 l       .debug_str	00000000 
000017a1 l       .debug_str	00000000 
000017a5 l       .debug_str	00000000 
000017af l       .debug_str	00000000 
000017c1 l       .debug_str	00000000 
000017f6 l       .debug_str	00000000 
00001838 l       .debug_str	00000000 
00001882 l       .debug_str	00000000 
00001887 l       .debug_str	00000000 
00001891 l       .debug_str	00000000 
000018a3 l       .debug_str	00000000 
000018d8 l       .debug_str	00000000 
0000191a l       .debug_str	00000000 
00001964 l       .debug_str	00000000 
00001978 l       .debug_str	00000000 
0000197c l       .debug_str	00000000 
0000198a l       .debug_str	00000000 
0000199a l       .debug_str	00000000 
000019a3 l       .debug_str	00000000 
000019ae l       .debug_str	00000000 
000019bd l       .debug_str	00000000 
000019d2 l       .debug_str	00000000 
00001a03 l       .debug_str	00000000 
00001aa0 l       .debug_str	00000000 
00001b45 l       .debug_str	00000000 
00001b50 l       .debug_str	00000000 
00001b59 l       .debug_str	00000000 
00001b7a l       .debug_str	00000000 
00001b8d l       .debug_str	00000000 
00001bc3 l       .debug_str	00000000 
00001c46 l       .debug_str	00000000 
00001cd1 l       .debug_str	00000000 
00001ced l       .debug_str	00000000 
00001d39 l       .debug_str	00000000 
00001d8d l       .debug_str	00000000 
00001daa l       .debug_str	00000000 
00001dbe l       .debug_str	00000000 
00001e0a l       .debug_str	00000000 
00001e5e l       .debug_str	00000000 
00001e74 l       .debug_str	00000000 
00001e88 l       .debug_str	00000000 
00001ecf l       .debug_str	00000000 
00001f1e l       .debug_str	00000000 
00001f27 l       .debug_str	00000000 
00001f35 l       .debug_str	00000000 
00001f66 l       .debug_str	00000000 
00001f6c l       .debug_str	00000000 
00001f74 l       .debug_str	00000000 
00001f7b l       .debug_str	00000000 
00001f83 l       .debug_str	00000000 
00001f8e l       .debug_str	00000000 
00001f96 l       .debug_str	00000000 
00001fa5 l       .debug_str	00000000 
00001fa9 l       .debug_str	00000000 
00001fb4 l       .debug_str	00000000 
00001fc0 l       .debug_str	00000000 
00001fcb l       .debug_str	00000000 
00001fdc l       .debug_str	00000000 
00001fe2 l       .debug_str	00000000 
00001fea l       .debug_str	00000000 
00001ff1 l       .debug_str	00000000 
00001ffb l       .debug_str	00000000 
00002003 l       .debug_str	00000000 
0000200b l       .debug_str	00000000 
0000202d l       .debug_str	00000000 
00002038 l       .debug_str	00000000 
00002044 l       .debug_str	00000000 
0000204c l       .debug_str	00000000 
00002055 l       .debug_str	00000000 
00002060 l       .debug_str	00000000 
00002067 l       .debug_str	00000000 
00002072 l       .debug_str	00000000 
0000207d l       .debug_str	00000000 
0000208d l       .debug_str	00000000 
00002097 l       .debug_str	00000000 
0000209d l       .debug_str	00000000 
000020bf l       .debug_str	00000000 
000020f7 l       .debug_str	00000000 
00002137 l       .debug_str	00000000 
0000213e l       .debug_str	00000000 
00002146 l       .debug_str	00000000 
0000215d l       .debug_str	00000000 
00002166 l       .debug_str	00000000 
00002176 l       .debug_str	00000000 
000021a9 l       .debug_str	00000000 
000021be l       .debug_str	00000000 
000021c7 l       .debug_str	00000000 
00002224 l       .debug_str	00000000 
00002289 l       .debug_str	00000000 
00002293 l       .debug_str	00000000 
000022a3 l       .debug_str	00000000 
000022b8 l       .debug_str	00000000 
000022c0 l       .debug_str	00000000 
00002324 l       .debug_str	00000000 
00002390 l       .debug_str	00000000 
00002397 l       .debug_str	00000000 
0000239f l       .debug_str	00000000 
000023bd l       .debug_str	00000000 
000023cd l       .debug_str	00000000 
00002400 l       .debug_str	00000000 
00002415 l       .debug_str	00000000 
00002428 l       .debug_str	00000000 
0000243d l       .debug_str	00000000 
00002444 l       .debug_str	00000000 
00002459 l       .debug_str	00000000 
00002483 l       .debug_str	00000000 
000024ff l       .debug_str	00000000 
00002583 l       .debug_str	00000000 
0000258a l       .debug_str	00000000 
00002592 l       .debug_str	00000000 
000025b0 l       .debug_str	00000000 
000025c0 l       .debug_str	00000000 
000025fc l       .debug_str	00000000 
00002600 l       .debug_str	00000000 
00002603 l       .debug_str	00000000 
00002606 l       .debug_str	00000000 
0000260b l       .debug_str	00000000 
00002611 l       .debug_str	00000000 
00002618 l       .debug_str	00000000 
00002620 l       .debug_str	00000000 
0000262a l       .debug_str	00000000 
00002631 l       .debug_str	00000000 
00002666 l       .debug_str	00000000 
00002671 l       .debug_str	00000000 
000026ad l       .debug_str	00000000 
000026bf l       .debug_str	00000000 
000026fd l       .debug_str	00000000 
00002711 l       .debug_str	00000000 
00002764 l       .debug_str	00000000 
000027a3 l       .debug_str	00000000 
000027b8 l       .debug_str	00000000 
000027f6 l       .debug_str	00000000 
0000280a l       .debug_str	00000000 
0000284a l       .debug_str	00000000 
00002860 l       .debug_str	00000000 
000028a1 l       .debug_str	00000000 
000028b8 l       .debug_str	00000000 
000028be l       .debug_str	00000000 
00002952 l       .debug_str	00000000 
0000295a l       .debug_str	00000000 
00002963 l       .debug_str	00000000 
00002968 l       .debug_str	00000000 
00002972 l       .debug_str	00000000 
00002977 l       .debug_str	00000000 
0000297d l       .debug_str	00000000 
00002982 l       .debug_str	00000000 
00002987 l       .debug_str	00000000 
0000298e l       .debug_str	00000000 
00002993 l       .debug_str	00000000 
0000299f l       .debug_str	00000000 
000029a7 l       .debug_str	00000000 
000029b0 l       .debug_str	00000000 
000029b5 l       .debug_str	00000000 
000029b8 l       .debug_str	00000000 
000029c1 l       .debug_str	00000000 
000029c8 l       .debug_str	00000000 
000029cd l       .debug_str	00000000 
000029d2 l       .debug_str	00000000 
000029d8 l       .debug_str	00000000 
000029e2 l       .debug_str	00000000 
000029e5 l       .debug_str	00000000 
000029eb l       .debug_str	00000000 
00002c89 l       .debug_str	00000000 
00000000 l     O .rodata.cst8	00000008 .Lanon.315a14d673b790d2ce7e27583f26dc68.0
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.11	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.11
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.12	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.12
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.13	00000010 .Lanon.315a14d673b790d2ce7e27583f26dc68.13
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.15	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.15
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.16	00000010 .Lanon.315a14d673b790d2ce7e27583f26dc68.16
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.18	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.18
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.19	00000010 .Lanon.315a14d673b790d2ce7e27583f26dc68.19
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.20	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.20
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.22	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.22
00000008 l     O .rodata.cst8	00000008 .Lanon.315a14d673b790d2ce7e27583f26dc68.23
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.24	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.24
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.25	00000014 .Lanon.315a14d673b790d2ce7e27583f26dc68.25
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.26	00000001 .Lanon.315a14d673b790d2ce7e27583f26dc68.26
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.30	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.30
00000000 l     O .rodata.cst4	00000004 .Lanon.315a14d673b790d2ce7e27583f26dc68.31
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.33	00000008 .Lanon.315a14d673b790d2ce7e27583f26dc68.33
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.34	00000010 .Lanon.315a14d673b790d2ce7e27583f26dc68.34
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.36	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.36
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.38	00000008 .Lanon.315a14d673b790d2ce7e27583f26dc68.38
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.39	00000010 .Lanon.315a14d673b790d2ce7e27583f26dc68.39
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.4	00000018 .Lanon.315a14d673b790d2ce7e27583f26dc68.4
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.6	00000008 .Lanon.315a14d673b790d2ce7e27583f26dc68.6
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.7	00000000 .Lanon.315a14d673b790d2ce7e27583f26dc68.7
00000000 l     O .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.9	00000010 .Lanon.315a14d673b790d2ce7e27583f26dc68.9
00000000 l     O .data._ZN6mynewt2hw6sensor16SENSOR_LISTENERS17hf4dbf6cf9ffee350E	00000020 mynewt::hw::sensor::SENSOR_LISTENERS
00000000 l     O .data._ZN6mynewt2hw6sensor17LISTENER_INTERNAL17h6a67ac2c268ecd7fE	00000018 mynewt::hw::sensor::LISTENER_INTERNAL
00000000 l     F .text._ZN6mynewt2hw6sensor19convert_sensor_data17h960dbb24073819e0E	0000028c mynewt::hw::sensor::convert_sensor_data
00000000 l     F .text._ZN6mynewt2hw6sensor20wrap_sensor_listener17h6ce6e68bc6139224E	0000014a mynewt::hw::sensor::wrap_sensor_listener
00000000 l     F .text._ZN6mynewt2hw6sensor21null_sensor_data_func17h64205b3a5e59647aE	0000002a mynewt::hw::sensor::null_sensor_data_func
00000000 l     F .text._ZN6mynewt2hw6sensor22null_sensor_value_func17h7124af7c589d1972E	00000016 mynewt::hw::sensor::null_sensor_value_func
00000000 l     O .rodata.str.0	0000001c str.0
00000000 l     O .rodata.str.1	0000001c str.1
00000000 l    d  .text._ZN6mynewt2hw6sensor10as_untyped17ha5537e83bf02040aE	00000000 .text._ZN6mynewt2hw6sensor10as_untyped17ha5537e83bf02040aE
00000000 l    d  .text._ZN6mynewt2hw6sensor17register_listener17hc302d184d2da34dbE	00000000 .text._ZN6mynewt2hw6sensor17register_listener17hc302d184d2da34dbE
00000000 l    d  .text._ZN6mynewt2hw6sensor19new_sensor_listener17h2b99bb3fa912f4a2E	00000000 .text._ZN6mynewt2hw6sensor19new_sensor_listener17h2b99bb3fa912f4a2E
00000000 l    d  .text._ZN6mynewt2hw6sensor20wrap_sensor_listener17h6ce6e68bc6139224E	00000000 .text._ZN6mynewt2hw6sensor20wrap_sensor_listener17h6ce6e68bc6139224E
00000000 l    d  .text._ZN6mynewt2hw6sensor19convert_sensor_data17h960dbb24073819e0E	00000000 .text._ZN6mynewt2hw6sensor19convert_sensor_data17h960dbb24073819e0E
00000000 l    d  .text._ZN6mynewt2hw6sensor21null_sensor_data_func17h64205b3a5e59647aE	00000000 .text._ZN6mynewt2hw6sensor21null_sensor_data_func17h64205b3a5e59647aE
00000000 l    d  .text._ZN6mynewt2hw6sensor22null_sensor_value_func17h7124af7c589d1972E	00000000 .text._ZN6mynewt2hw6sensor22null_sensor_value_func17h7124af7c589d1972E
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.1	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.1
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.2	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.2
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.3	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.3
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.5	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.5
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.8	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.8
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.10	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.10
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.14	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.14
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.17	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.17
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.21	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.21
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.26	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.26
00000000 l    d  .data..Lanon.315a14d673b790d2ce7e27583f26dc68.27	00000000 .data..Lanon.315a14d673b790d2ce7e27583f26dc68.27
00000000 l    d  .data..Lanon.315a14d673b790d2ce7e27583f26dc68.28	00000000 .data..Lanon.315a14d673b790d2ce7e27583f26dc68.28
00000000 l    d  .data._ZN6mynewt2hw6sensor16SENSOR_LISTENERS17hf4dbf6cf9ffee350E	00000000 .data._ZN6mynewt2hw6sensor16SENSOR_LISTENERS17hf4dbf6cf9ffee350E
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.29	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.29
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.32	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.32
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.35	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.35
00000000 l    d  .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.37	00000000 .rodata..Lanon.315a14d673b790d2ce7e27583f26dc68.37
00000000 l    d  .data._ZN6mynewt2hw6sensor17LISTENER_INTERNAL17h6a67ac2c268ecd7fE	00000000 .data._ZN6mynewt2hw6sensor17LISTENER_INTERNAL17h6a67ac2c268ecd7fE
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 core::ptr::<impl *mut T>::is_null
00000000         *UND*	00000000 core::ptr::<impl *mut T>::is_null
00000000         *UND*	00000000 core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
00000000         *UND*	00000000 core::result::Result<T,E>::expect
00000000         *UND*	00000000 core::panicking::panic_bounds_check
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <core::fmt::Arguments as core::fmt::Display>::fmt
00000000         *UND*	00000000 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000 g     F .text._ZN6mynewt2hw6sensor10as_untyped17ha5537e83bf02040aE	00000018 mynewt::hw::sensor::as_untyped
00000000 g     F .text._ZN6mynewt2hw6sensor17register_listener17hc302d184d2da34dbE	00000148 mynewt::hw::sensor::register_listener
00000000 g     F .text._ZN6mynewt2hw6sensor19new_sensor_listener17h2b99bb3fa912f4a2E	000001f8 mynewt::hw::sensor::new_sensor_listener
00000000         *UND*	00000000 mynewt::Strn::is_empty
00000000         *UND*	00000000 __aeabi_memcpy
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 sensor_register_listener



Disassembly of section .text._ZN6mynewt2hw6sensor10as_untyped17ha5537e83bf02040aE:

00000000 <mynewt::hw::sensor::as_untyped>:
_ZN6mynewt2hw6sensor10as_untyped17ha5537e83bf02040aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:47
        data:   sensor_data_ptr,
        stype:  sensor_type_t,
    ) -> i32;

/// Cast sensor data function from typed to untyped
pub fn as_untyped(typed: sensor_data_func) -> Option<sensor_data_func_untyped> {
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:51
    let untyped = unsafe { 
        ::core::mem::transmute::
            <sensor_data_func, sensor_data_func_untyped>
            (typed)
   6:	9801      	ldr	r0, [sp, #4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:49
        ::core::mem::transmute::
   8:	9003      	str	r0, [sp, #12]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <mynewt::hw::sensor::as_untyped+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:53
    };
    Some(untyped)
   e:	9803      	ldr	r0, [sp, #12]
  10:	9002      	str	r0, [sp, #8]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:54
}
  12:	9802      	ldr	r0, [sp, #8]
  14:	b004      	add	sp, #16
  16:	4770      	bx	lr

Disassembly of section .text._ZN6mynewt2hw6sensor17register_listener17hc302d184d2da34dbE:

00000000 <mynewt::hw::sensor::register_listener>:
_ZN6mynewt2hw6sensor17register_listener17hc302d184d2da34dbE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:64
///  For more information on the type of callbacks available, see the documentation
///  for the sensor listener structure.
///  `sensor`: The sensor to register a listener on.
///  `listener`: The listener to register onto the sensor.
///  Returns `Ok()` on success, `Err()` containing `MynewtError` error code on failure.
pub fn register_listener(sensor: *mut sensor, listener: sensor_listener) -> MynewtResult<()> {  //  Returns an error code upon error. 
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b0b2      	sub	sp, #200	; 0xc8
   4:	4602      	mov	r2, r0
   6:	900a      	str	r0, [sp, #40]	; 0x28
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:65
    unsafe { assert_eq!(LISTENER_INTERNAL.sl_sensor_type, 0, "reg lis") };  //  Make sure it's not used.
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	900c      	str	r0, [sp, #48]	; 0x30
  12:	f240 0000 	movw	r0, #0
  16:	f2c0 0000 	movt	r0, #0
  1a:	900d      	str	r0, [sp, #52]	; 0x34
  1c:	980c      	ldr	r0, [sp, #48]	; 0x30
  1e:	900e      	str	r0, [sp, #56]	; 0x38
  20:	980d      	ldr	r0, [sp, #52]	; 0x34
  22:	900f      	str	r0, [sp, #60]	; 0x3c
  24:	980e      	ldr	r0, [sp, #56]	; 0x38
  26:	6803      	ldr	r3, [r0, #0]
  28:	6840      	ldr	r0, [r0, #4]
  2a:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
  2e:	f8dc e000 	ldr.w	lr, [ip]
  32:	f8dc c004 	ldr.w	ip, [ip, #4]
  36:	ea80 000c 	eor.w	r0, r0, ip
  3a:	ea83 030e 	eor.w	r3, r3, lr
  3e:	4318      	orrs	r0, r3
  40:	2800      	cmp	r0, #0
  42:	9109      	str	r1, [sp, #36]	; 0x24
  44:	9208      	str	r2, [sp, #32]
  46:	d014      	beq.n	72 <mynewt::hw::sensor::register_listener+0x72>
  48:	e7ff      	b.n	4a <mynewt::hw::sensor::register_listener+0x4a>
  4a:	980e      	ldr	r0, [sp, #56]	; 0x38
  4c:	901f      	str	r0, [sp, #124]	; 0x7c
  4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
  50:	9020      	str	r0, [sp, #128]	; 0x80
  52:	4668      	mov	r0, sp
  54:	2100      	movs	r1, #0
  56:	6001      	str	r1, [r0, #0]
  58:	f240 0100 	movw	r1, #0
  5c:	f2c0 0100 	movt	r1, #0
  60:	f240 0300 	movw	r3, #0
  64:	f2c0 0300 	movt	r3, #0
  68:	a821      	add	r0, sp, #132	; 0x84
  6a:	2201      	movs	r2, #1
  6c:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  70:	e014      	b.n	9c <mynewt::hw::sensor::register_listener+0x9c>
  72:	a82a      	add	r0, sp, #168	; 0xa8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:67
    //  Copy the caller's listener to the internal listener.
    unsafe { LISTENER_INTERNAL = listener };
  74:	9909      	ldr	r1, [sp, #36]	; 0x24
  76:	4602      	mov	r2, r0
  78:	e891 5078 	ldmia.w	r1, {r3, r4, r5, r6, ip, lr}
  7c:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
  80:	f240 0100 	movw	r1, #0
  84:	f2c0 0100 	movt	r1, #0
  88:	460a      	mov	r2, r1
  8a:	e890 5078 	ldmia.w	r0, {r3, r4, r5, r6, ip, lr}
  8e:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:69
    //  Pass the internal listener to the unsafe Mynewt API.
    unsafe { sensor_register_listener(sensor, &mut LISTENER_INTERNAL) };
  92:	980a      	ldr	r0, [sp, #40]	; 0x28
  94:	f7ff fffe 	bl	0 <sensor_register_listener>
  98:	9007      	str	r0, [sp, #28]
  9a:	e04e      	b.n	13a <mynewt::hw::sensor::register_listener+0x13a>
  9c:	a81f      	add	r0, sp, #124	; 0x7c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:65
    unsafe { assert_eq!(LISTENER_INTERNAL.sl_sensor_type, 0, "reg lis") };  //  Make sure it's not used.
  9e:	901c      	str	r0, [sp, #112]	; 0x70
  a0:	a820      	add	r0, sp, #128	; 0x80
  a2:	901d      	str	r0, [sp, #116]	; 0x74
  a4:	a821      	add	r0, sp, #132	; 0x84
  a6:	901e      	str	r0, [sp, #120]	; 0x78
  a8:	981c      	ldr	r0, [sp, #112]	; 0x70
  aa:	9027      	str	r0, [sp, #156]	; 0x9c
  ac:	981d      	ldr	r0, [sp, #116]	; 0x74
  ae:	9028      	str	r0, [sp, #160]	; 0xa0
  b0:	981e      	ldr	r0, [sp, #120]	; 0x78
  b2:	9029      	str	r0, [sp, #164]	; 0xa4
  b4:	9827      	ldr	r0, [sp, #156]	; 0x9c
  b6:	f240 0100 	movw	r1, #0
  ba:	f2c0 0100 	movt	r1, #0
  be:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  c2:	9006      	str	r0, [sp, #24]
  c4:	9105      	str	r1, [sp, #20]
  c6:	e7ff      	b.n	c8 <mynewt::hw::sensor::register_listener+0xc8>
  c8:	9828      	ldr	r0, [sp, #160]	; 0xa0
  ca:	f240 0100 	movw	r1, #0
  ce:	f2c0 0100 	movt	r1, #0
  d2:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  d6:	9004      	str	r0, [sp, #16]
  d8:	9103      	str	r1, [sp, #12]
  da:	e7ff      	b.n	dc <mynewt::hw::sensor::register_listener+0xdc>
  dc:	9829      	ldr	r0, [sp, #164]	; 0xa4
  de:	f240 0100 	movw	r1, #0
  e2:	f2c0 0100 	movt	r1, #0
  e6:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  ea:	9002      	str	r0, [sp, #8]
  ec:	9101      	str	r1, [sp, #4]
  ee:	e7ff      	b.n	f0 <mynewt::hw::sensor::register_listener+0xf0>
  f0:	9806      	ldr	r0, [sp, #24]
  f2:	9016      	str	r0, [sp, #88]	; 0x58
  f4:	9905      	ldr	r1, [sp, #20]
  f6:	9117      	str	r1, [sp, #92]	; 0x5c
  f8:	9a04      	ldr	r2, [sp, #16]
  fa:	9218      	str	r2, [sp, #96]	; 0x60
  fc:	9b03      	ldr	r3, [sp, #12]
  fe:	9319      	str	r3, [sp, #100]	; 0x64
 100:	f8dd c008 	ldr.w	ip, [sp, #8]
 104:	f8cd c068 	str.w	ip, [sp, #104]	; 0x68
 108:	f8dd e004 	ldr.w	lr, [sp, #4]
 10c:	f8cd e06c 	str.w	lr, [sp, #108]	; 0x6c
 110:	466c      	mov	r4, sp
 112:	2503      	movs	r5, #3
 114:	6025      	str	r5, [r4, #0]
 116:	f240 0100 	movw	r1, #0
 11a:	f2c0 0100 	movt	r1, #0
 11e:	a810      	add	r0, sp, #64	; 0x40
 120:	ab16      	add	r3, sp, #88	; 0x58
 122:	462a      	mov	r2, r5
 124:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 128:	e7ff      	b.n	2 <mynewt::hw::sensor::register_listener+0x2>
 12a:	f240 0100 	movw	r1, #0
 12e:	f2c0 0100 	movt	r1, #0
 132:	a810      	add	r0, sp, #64	; 0x40
 134:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 138:	defe      	udf	#254	; 0xfe
 13a:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:70
    Ok(())
 13c:	900b      	str	r0, [sp, #44]	; 0x2c
 13e:	2001      	movs	r0, #1
 140:	900b      	str	r0, [sp, #44]	; 0x2c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:71
}
 142:	980b      	ldr	r0, [sp, #44]	; 0x2c
 144:	b032      	add	sp, #200	; 0xc8
 146:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN6mynewt2hw6sensor19new_sensor_listener17h2b99bb3fa912f4a2E:

00000000 <mynewt::hw::sensor::new_sensor_listener>:
_ZN6mynewt2hw6sensor19new_sensor_listener17h2b99bb3fa912f4a2E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:77

///  Wrapped version of `sensor_data_func` used by Visual Embedded Rust
pub type SensorValueFunc = fn(sensor_value: &SensorValue) -> MynewtResult<()>;

///  Return a new `sensor_listener` with the sensor type and sensor value function. Called by Visual Embedded Rust.
pub fn new_sensor_listener(
   0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   4:	b0c1      	sub	sp, #260	; 0x104
   6:	469c      	mov	ip, r3
   8:	4696      	mov	lr, r2
   a:	9c48      	ldr	r4, [sp, #288]	; 0x120
   c:	460d      	mov	r5, r1
   e:	9115      	str	r1, [sp, #84]	; 0x54
  10:	9317      	str	r3, [sp, #92]	; 0x5c
  12:	9216      	str	r2, [sp, #88]	; 0x58
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:82
    sensor_key:     &'static Strn,
    sensor_type:    sensor_type_t, 
    listener_func:  SensorValueFunc
) -> MynewtResult<sensor_listener> {
    assert!(!sensor_key.is_empty(), "missing sensor key");
  14:	9915      	ldr	r1, [sp, #84]	; 0x54
  16:	9014      	str	r0, [sp, #80]	; 0x50
  18:	4608      	mov	r0, r1
  1a:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
  1e:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
  22:	9411      	str	r4, [sp, #68]	; 0x44
  24:	9510      	str	r5, [sp, #64]	; 0x40
  26:	f7ff fffe 	bl	0 <mynewt::Strn::is_empty>
  2a:	900f      	str	r0, [sp, #60]	; 0x3c
  2c:	e7ff      	b.n	2e <mynewt::hw::sensor::new_sensor_listener+0x2e>
  2e:	980f      	ldr	r0, [sp, #60]	; 0x3c
  30:	07c1      	lsls	r1, r0, #31
  32:	2900      	cmp	r1, #0
  34:	d007      	beq.n	46 <mynewt::hw::sensor::new_sensor_listener+0x46>
  36:	e7ff      	b.n	38 <mynewt::hw::sensor::new_sensor_listener+0x38>
  38:	f240 0000 	movw	r0, #0
  3c:	f2c0 0000 	movt	r0, #0
  40:	f7ff fffe 	bl	0 <core::panicking::panic>
  44:	defe      	udf	#254	; 0xfe
  46:	2003      	movs	r0, #3
  48:	2100      	movs	r1, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:84
    //  Allocate a `sensor_listener_info`
    let mut arg = MAX_SENSOR_LISTENERS + 1;
  4a:	2900      	cmp	r1, #0
  4c:	900e      	str	r0, [sp, #56]	; 0x38
  4e:	f040 80ba 	bne.w	1c6 <mynewt::hw::sensor::new_sensor_listener+0x1c6>
  52:	e7ff      	b.n	54 <mynewt::hw::sensor::new_sensor_listener+0x54>
  54:	980e      	ldr	r0, [sp, #56]	; 0x38
  56:	9018      	str	r0, [sp, #96]	; 0x60
  58:	2100      	movs	r1, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:85
    for i in 0 .. MAX_SENSOR_LISTENERS {
  5a:	9119      	str	r1, [sp, #100]	; 0x64
  5c:	2102      	movs	r1, #2
  5e:	911a      	str	r1, [sp, #104]	; 0x68
  60:	9819      	ldr	r0, [sp, #100]	; 0x64
  62:	991a      	ldr	r1, [sp, #104]	; 0x68
  64:	f7ff fffe 	bl	0 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
  68:	900d      	str	r0, [sp, #52]	; 0x34
  6a:	910c      	str	r1, [sp, #48]	; 0x30
  6c:	e7ff      	b.n	6e <mynewt::hw::sensor::new_sensor_listener+0x6e>
  6e:	980d      	ldr	r0, [sp, #52]	; 0x34
  70:	901b      	str	r0, [sp, #108]	; 0x6c
  72:	990c      	ldr	r1, [sp, #48]	; 0x30
  74:	911c      	str	r1, [sp, #112]	; 0x70
  76:	e7ff      	b.n	78 <mynewt::hw::sensor::new_sensor_listener+0x78>
  78:	a81b      	add	r0, sp, #108	; 0x6c
  7a:	f7ff fffe 	bl	0 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next>
  7e:	911f      	str	r1, [sp, #124]	; 0x7c
  80:	901e      	str	r0, [sp, #120]	; 0x78
  82:	e7ff      	b.n	84 <mynewt::hw::sensor::new_sensor_listener+0x84>
  84:	981e      	ldr	r0, [sp, #120]	; 0x78
  86:	2800      	cmp	r0, #0
  88:	900b      	str	r0, [sp, #44]	; 0x2c
  8a:	d010      	beq.n	ae <mynewt::hw::sensor::new_sensor_listener+0xae>
  8c:	e7ff      	b.n	8e <mynewt::hw::sensor::new_sensor_listener+0x8e>
  8e:	980b      	ldr	r0, [sp, #44]	; 0x2c
  90:	2801      	cmp	r0, #1
  92:	d001      	beq.n	98 <mynewt::hw::sensor::new_sensor_listener+0x98>
  94:	e7ff      	b.n	96 <mynewt::hw::sensor::new_sensor_listener+0x96>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:105
        sl_func:        Some(wrap_sensor_listener),
        sl_arg:         arg as *mut c_void,
        ..fill_zero!(sensor_listener)
    };
    Ok(listener)
}
  96:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:85
    for i in 0 .. MAX_SENSOR_LISTENERS {
  98:	981f      	ldr	r0, [sp, #124]	; 0x7c
  9a:	9020      	str	r0, [sp, #128]	; 0x80
  9c:	9820      	ldr	r0, [sp, #128]	; 0x80
  9e:	901d      	str	r0, [sp, #116]	; 0x74
  a0:	981d      	ldr	r0, [sp, #116]	; 0x74
  a2:	9021      	str	r0, [sp, #132]	; 0x84
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:86
        let info = unsafe { SENSOR_LISTENERS[i] };
  a4:	9821      	ldr	r0, [sp, #132]	; 0x84
  a6:	2802      	cmp	r0, #2
  a8:	900a      	str	r0, [sp, #40]	; 0x28
  aa:	d305      	bcc.n	b8 <mynewt::hw::sensor::new_sensor_listener+0xb8>
  ac:	e092      	b.n	1d4 <mynewt::hw::sensor::new_sensor_listener+0x1d4>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:85
    for i in 0 .. MAX_SENSOR_LISTENERS {
  ae:	e7ff      	b.n	b0 <mynewt::hw::sensor::new_sensor_listener+0xb0>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:92
    assert!(arg < MAX_SENSOR_LISTENERS, "increase MAX_SENSOR_LISTENERS");
  b0:	9818      	ldr	r0, [sp, #96]	; 0x60
  b2:	2801      	cmp	r0, #1
  b4:	d822      	bhi.n	fc <mynewt::hw::sensor::new_sensor_listener+0xfc>
  b6:	e028      	b.n	10a <mynewt::hw::sensor::new_sensor_listener+0x10a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:86
        let info = unsafe { SENSOR_LISTENERS[i] };
  b8:	f240 0000 	movw	r0, #0
  bc:	f2c0 0000 	movt	r0, #0
  c0:	990a      	ldr	r1, [sp, #40]	; 0x28
  c2:	eb00 1201 	add.w	r2, r0, r1, lsl #4
  c6:	010b      	lsls	r3, r1, #4
  c8:	f8d2 c004 	ldr.w	ip, [r2, #4]
  cc:	f8d2 e008 	ldr.w	lr, [r2, #8]
  d0:	68d2      	ldr	r2, [r2, #12]
  d2:	9225      	str	r2, [sp, #148]	; 0x94
  d4:	f8cd e090 	str.w	lr, [sp, #144]	; 0x90
  d8:	f8cd c08c 	str.w	ip, [sp, #140]	; 0x8c
  dc:	58c0      	ldr	r0, [r0, r3]
  de:	9022      	str	r0, [sp, #136]	; 0x88
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:87
        if info.sensor_key.is_empty() {
  e0:	9824      	ldr	r0, [sp, #144]	; 0x90
  e2:	f7ff fffe 	bl	0 <mynewt::Strn::is_empty>
  e6:	9009      	str	r0, [sp, #36]	; 0x24
  e8:	e7ff      	b.n	ea <mynewt::hw::sensor::new_sensor_listener+0xea>
  ea:	9809      	ldr	r0, [sp, #36]	; 0x24
  ec:	07c1      	lsls	r1, r0, #31
  ee:	2900      	cmp	r1, #0
  f0:	d003      	beq.n	fa <mynewt::hw::sensor::new_sensor_listener+0xfa>
  f2:	e7ff      	b.n	f4 <mynewt::hw::sensor::new_sensor_listener+0xf4>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:88
            arg = i;
  f4:	9821      	ldr	r0, [sp, #132]	; 0x84
  f6:	9018      	str	r0, [sp, #96]	; 0x60
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:89
            break;
  f8:	e7da      	b.n	b0 <mynewt::hw::sensor::new_sensor_listener+0xb0>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:85
    for i in 0 .. MAX_SENSOR_LISTENERS {
  fa:	e7bd      	b.n	78 <mynewt::hw::sensor::new_sensor_listener+0x78>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:92
    assert!(arg < MAX_SENSOR_LISTENERS, "increase MAX_SENSOR_LISTENERS");
  fc:	f240 0000 	movw	r0, #0
 100:	f2c0 0000 	movt	r0, #0
 104:	f7ff fffe 	bl	0 <core::panicking::panic>
 108:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:94
        sensor_key,
 10a:	9815      	ldr	r0, [sp, #84]	; 0x54
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:95
        sensor_type,
 10c:	9916      	ldr	r1, [sp, #88]	; 0x58
 10e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:96
        listener_func,
 110:	9b48      	ldr	r3, [sp, #288]	; 0x120
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:93
    unsafe { SENSOR_LISTENERS[arg] = sensor_listener_info {
 112:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 116:	f1bc 0f01 	cmp.w	ip, #1
 11a:	9008      	str	r0, [sp, #32]
 11c:	9107      	str	r1, [sp, #28]
 11e:	9206      	str	r2, [sp, #24]
 120:	9305      	str	r3, [sp, #20]
 122:	f8cd c010 	str.w	ip, [sp, #16]
 126:	d85e      	bhi.n	1e6 <mynewt::hw::sensor::new_sensor_listener+0x1e6>
 128:	e7ff      	b.n	12a <mynewt::hw::sensor::new_sensor_listener+0x12a>
 12a:	f240 0000 	movw	r0, #0
 12e:	f2c0 0000 	movt	r0, #0
 132:	9904      	ldr	r1, [sp, #16]
 134:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 138:	010b      	lsls	r3, r1, #4
 13a:	f8dd c020 	ldr.w	ip, [sp, #32]
 13e:	f8c2 c008 	str.w	ip, [r2, #8]
 142:	f8dd e01c 	ldr.w	lr, [sp, #28]
 146:	f840 e003 	str.w	lr, [r0, r3]
 14a:	9806      	ldr	r0, [sp, #24]
 14c:	6050      	str	r0, [r2, #4]
 14e:	9b05      	ldr	r3, [sp, #20]
 150:	60d3      	str	r3, [r2, #12]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:99
        sl_sensor_type: sensor_type,
 152:	9a16      	ldr	r2, [sp, #88]	; 0x58
 154:	9c17      	ldr	r4, [sp, #92]	; 0x5c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:100
        sl_func:        Some(wrap_sensor_listener),
 156:	f240 0500 	movw	r5, #0
 15a:	f2c0 0500 	movt	r5, #0
 15e:	952d      	str	r5, [sp, #180]	; 0xb4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:101
        sl_arg:         arg as *mut c_void,
 160:	9d18      	ldr	r5, [sp, #96]	; 0x60
 162:	2600      	movs	r6, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:102
        ..fill_zero!(sensor_listener)
 164:	9639      	str	r6, [sp, #228]	; 0xe4
 166:	9638      	str	r6, [sp, #224]	; 0xe0
 168:	9637      	str	r6, [sp, #220]	; 0xdc
 16a:	9636      	str	r6, [sp, #216]	; 0xd8
 16c:	9635      	str	r6, [sp, #212]	; 0xd4
 16e:	9634      	str	r6, [sp, #208]	; 0xd0
 170:	a82e      	add	r0, sp, #184	; 0xb8
 172:	a934      	add	r1, sp, #208	; 0xd0
 174:	2618      	movs	r6, #24
 176:	9203      	str	r2, [sp, #12]
 178:	4632      	mov	r2, r6
 17a:	9402      	str	r4, [sp, #8]
 17c:	9501      	str	r5, [sp, #4]
 17e:	f7ff fffe 	bl	0 <__aeabi_memcpy>
 182:	9000      	str	r0, [sp, #0]
 184:	e7ff      	b.n	186 <mynewt::hw::sensor::new_sensor_listener+0x186>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:98
    let listener = sensor_listener {
 186:	9803      	ldr	r0, [sp, #12]
 188:	9026      	str	r0, [sp, #152]	; 0x98
 18a:	9902      	ldr	r1, [sp, #8]
 18c:	9127      	str	r1, [sp, #156]	; 0x9c
 18e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 190:	9228      	str	r2, [sp, #160]	; 0xa0
 192:	9a01      	ldr	r2, [sp, #4]
 194:	9229      	str	r2, [sp, #164]	; 0xa4
 196:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 198:	932a      	str	r3, [sp, #168]	; 0xa8
 19a:	ab26      	add	r3, sp, #152	; 0x98
 19c:	f10d 0ce8 	add.w	ip, sp, #232	; 0xe8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:104
    Ok(listener)
 1a0:	46e6      	mov	lr, ip
 1a2:	e893 03f0 	ldmia.w	r3, {r4, r5, r6, r7, r8, r9}
 1a6:	e88e 03f0 	stmia.w	lr, {r4, r5, r6, r7, r8, r9}
 1aa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 1ac:	f103 0e08 	add.w	lr, r3, #8
 1b0:	e89c 03f0 	ldmia.w	ip, {r4, r5, r6, r7, r8, r9}
 1b4:	e88e 03f0 	stmia.w	lr, {r4, r5, r6, r7, r8, r9}
 1b8:	f04f 0c00 	mov.w	ip, #0
 1bc:	f8c3 c000 	str.w	ip, [r3]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:105
}
 1c0:	b041      	add	sp, #260	; 0x104
 1c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:84
    let mut arg = MAX_SENSOR_LISTENERS + 1;
 1c6:	f240 0000 	movw	r0, #0
 1ca:	f2c0 0000 	movt	r0, #0
 1ce:	f7ff fffe 	bl	0 <core::panicking::panic>
 1d2:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:86
        let info = unsafe { SENSOR_LISTENERS[i] };
 1d4:	f240 0000 	movw	r0, #0
 1d8:	f2c0 0000 	movt	r0, #0
 1dc:	2202      	movs	r2, #2
 1de:	990a      	ldr	r1, [sp, #40]	; 0x28
 1e0:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 1e4:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:93
    unsafe { SENSOR_LISTENERS[arg] = sensor_listener_info {
 1e6:	f240 0000 	movw	r0, #0
 1ea:	f2c0 0000 	movt	r0, #0
 1ee:	2202      	movs	r2, #2
 1f0:	9904      	ldr	r1, [sp, #16]
 1f2:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 1f6:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt2hw6sensor20wrap_sensor_listener17h6ce6e68bc6139224E:

00000000 <mynewt::hw::sensor::wrap_sensor_listener>:
_ZN6mynewt2hw6sensor20wrap_sensor_listener17h6ce6e68bc6139224E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:108

///  Wrap the sensor value function into a sensor data function
extern "C" fn wrap_sensor_listener(
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0a8      	sub	sp, #160	; 0xa0
   4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   6:	f8dd c0b0 	ldr.w	ip, [sp, #176]	; 0xb0
   a:	4696      	mov	lr, r2
   c:	460c      	mov	r4, r1
   e:	4605      	mov	r5, r0
  10:	900b      	str	r0, [sp, #44]	; 0x2c
  12:	910c      	str	r1, [sp, #48]	; 0x30
  14:	920d      	str	r2, [sp, #52]	; 0x34
  16:	930f      	str	r3, [sp, #60]	; 0x3c
  18:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:115
    arg:           sensor_arg,
    sensor_data:   sensor_data_ptr,
    sensor_type:   sensor_type_t
) -> i32 {
    //  Use `arg` to fetch the `sensor_listener_info`
    let arg = arg as usize;
  1c:	980c      	ldr	r0, [sp, #48]	; 0x30
  1e:	9011      	str	r0, [sp, #68]	; 0x44
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:116
    assert!(arg < MAX_SENSOR_LISTENERS, "bad sensor arg");
  20:	9811      	ldr	r0, [sp, #68]	; 0x44
  22:	2802      	cmp	r0, #2
  24:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
  28:	9409      	str	r4, [sp, #36]	; 0x24
  2a:	9508      	str	r5, [sp, #32]
  2c:	d307      	bcc.n	3e <mynewt::hw::sensor::wrap_sensor_listener+0x3e>
  2e:	e7ff      	b.n	30 <mynewt::hw::sensor::wrap_sensor_listener+0x30>
  30:	f240 0000 	movw	r0, #0
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <core::panicking::panic>
  3c:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:117
    let info = unsafe { SENSOR_LISTENERS[arg] };
  3e:	9811      	ldr	r0, [sp, #68]	; 0x44
  40:	2801      	cmp	r0, #1
  42:	9007      	str	r0, [sp, #28]
  44:	d878      	bhi.n	138 <mynewt::hw::sensor::wrap_sensor_listener+0x138>
  46:	e7ff      	b.n	48 <mynewt::hw::sensor::wrap_sensor_listener+0x48>
  48:	f240 0000 	movw	r0, #0
  4c:	f2c0 0000 	movt	r0, #0
  50:	9907      	ldr	r1, [sp, #28]
  52:	eb00 1201 	add.w	r2, r0, r1, lsl #4
  56:	010b      	lsls	r3, r1, #4
  58:	f8d2 c004 	ldr.w	ip, [r2, #4]
  5c:	f8d2 e008 	ldr.w	lr, [r2, #8]
  60:	68d2      	ldr	r2, [r2, #12]
  62:	9215      	str	r2, [sp, #84]	; 0x54
  64:	f8cd e050 	str.w	lr, [sp, #80]	; 0x50
  68:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
  6c:	58c0      	ldr	r0, [r0, r3]
  6e:	9012      	str	r0, [sp, #72]	; 0x48
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:118
    assert!(!info.sensor_key.is_empty(), "missing sensor key");
  70:	9814      	ldr	r0, [sp, #80]	; 0x50
  72:	f7ff fffe 	bl	0 <mynewt::Strn::is_empty>
  76:	9006      	str	r0, [sp, #24]
  78:	e7ff      	b.n	7a <mynewt::hw::sensor::wrap_sensor_listener+0x7a>
  7a:	9806      	ldr	r0, [sp, #24]
  7c:	07c1      	lsls	r1, r0, #31
  7e:	2900      	cmp	r1, #0
  80:	d007      	beq.n	92 <mynewt::hw::sensor::wrap_sensor_listener+0x92>
  82:	e7ff      	b.n	84 <mynewt::hw::sensor::wrap_sensor_listener+0x84>
  84:	f240 0000 	movw	r0, #0
  88:	f2c0 0000 	movt	r0, #0
  8c:	f7ff fffe 	bl	0 <core::panicking::panic>
  90:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:121

    //  Check that the sensor data is valid
    if sensor_data.is_null() { return SYS_EINVAL }  //  Exit if data is missing
  92:	980d      	ldr	r0, [sp, #52]	; 0x34
  94:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::is_null>
  98:	9005      	str	r0, [sp, #20]
  9a:	e7ff      	b.n	9c <mynewt::hw::sensor::wrap_sensor_listener+0x9c>
  9c:	9805      	ldr	r0, [sp, #20]
  9e:	07c1      	lsls	r1, r0, #31
  a0:	2900      	cmp	r1, #0
  a2:	d007      	beq.n	b4 <mynewt::hw::sensor::wrap_sensor_listener+0xb4>
  a4:	e7ff      	b.n	a6 <mynewt::hw::sensor::wrap_sensor_listener+0xa6>
  a6:	f06f 0001 	mvn.w	r0, #1
  aa:	9010      	str	r0, [sp, #64]	; 0x40
  ac:	e7ff      	b.n	ae <mynewt::hw::sensor::wrap_sensor_listener+0xae>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:134
    (info.listener_func)(&sensor_value)
        .expect("sensor listener fail");

    //  Return 0 to Mynewt to indicate no error
    0
}
  ae:	9810      	ldr	r0, [sp, #64]	; 0x40
  b0:	b028      	add	sp, #160	; 0xa0
  b2:	bdb0      	pop	{r4, r5, r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:122
    assert!(!sensor.is_null(), "null sensor");
  b4:	980b      	ldr	r0, [sp, #44]	; 0x2c
  b6:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::is_null>
  ba:	9004      	str	r0, [sp, #16]
  bc:	e7ff      	b.n	be <mynewt::hw::sensor::wrap_sensor_listener+0xbe>
  be:	9804      	ldr	r0, [sp, #16]
  c0:	07c1      	lsls	r1, r0, #31
  c2:	2900      	cmp	r1, #0
  c4:	d007      	beq.n	d6 <mynewt::hw::sensor::wrap_sensor_listener+0xd6>
  c6:	e7ff      	b.n	c8 <mynewt::hw::sensor::wrap_sensor_listener+0xc8>
  c8:	f240 0000 	movw	r0, #0
  cc:	f2c0 0000 	movt	r0, #0
  d0:	f7ff fffe 	bl	0 <core::panicking::panic>
  d4:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:125
    let sensor_value = convert_sensor_data(sensor_data, info.sensor_key, sensor_type);
  d6:	990d      	ldr	r1, [sp, #52]	; 0x34
  d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
  da:	980e      	ldr	r0, [sp, #56]	; 0x38
  dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  de:	46ec      	mov	ip, sp
  e0:	f8cc 3004 	str.w	r3, [ip, #4]
  e4:	f8cc 0000 	str.w	r0, [ip]
  e8:	a816      	add	r0, sp, #88	; 0x58
  ea:	f7ff fffe 	bl	0 <mynewt::hw::sensor::wrap_sensor_listener>
  ee:	e7ff      	b.n	f0 <mynewt::hw::sensor::wrap_sensor_listener+0xf0>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:126
    if let SensorValueType::None = sensor_value.value { assert!(false, "bad type"); }
  f0:	9816      	ldr	r0, [sp, #88]	; 0x58
  f2:	2800      	cmp	r0, #0
  f4:	d10c      	bne.n	110 <mynewt::hw::sensor::wrap_sensor_listener+0x110>
  f6:	e7ff      	b.n	f8 <mynewt::hw::sensor::wrap_sensor_listener+0xf8>
  f8:	2000      	movs	r0, #0
  fa:	2800      	cmp	r0, #0
  fc:	d107      	bne.n	10e <mynewt::hw::sensor::wrap_sensor_listener+0x10e>
  fe:	e7ff      	b.n	100 <mynewt::hw::sensor::wrap_sensor_listener+0x100>
 100:	f240 0000 	movw	r0, #0
 104:	f2c0 0000 	movt	r0, #0
 108:	f7ff fffe 	bl	0 <core::panicking::panic>
 10c:	defe      	udf	#254	; 0xfe
 10e:	e7ff      	b.n	110 <mynewt::hw::sensor::wrap_sensor_listener+0x110>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:129
    (info.listener_func)(&sensor_value)
 110:	9815      	ldr	r0, [sp, #84]	; 0x54
 112:	a916      	add	r1, sp, #88	; 0x58
 114:	9003      	str	r0, [sp, #12]
 116:	4608      	mov	r0, r1
 118:	9903      	ldr	r1, [sp, #12]
 11a:	4788      	blx	r1
 11c:	9002      	str	r0, [sp, #8]
 11e:	e7ff      	b.n	120 <mynewt::hw::sensor::wrap_sensor_listener+0x120>
 120:	f240 0100 	movw	r1, #0
 124:	f2c0 0100 	movt	r1, #0
 128:	2214      	movs	r2, #20
 12a:	9802      	ldr	r0, [sp, #8]
 12c:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
 130:	e7ff      	b.n	132 <mynewt::hw::sensor::wrap_sensor_listener+0x132>
 132:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:133
    0
 134:	9010      	str	r0, [sp, #64]	; 0x40
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:134
}
 136:	e7ba      	b.n	ae <mynewt::hw::sensor::wrap_sensor_listener+0xae>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:117
    let info = unsafe { SENSOR_LISTENERS[arg] };
 138:	f240 0000 	movw	r0, #0
 13c:	f2c0 0000 	movt	r0, #0
 140:	2202      	movs	r2, #2
 142:	9907      	ldr	r1, [sp, #28]
 144:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 148:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt2hw6sensor19convert_sensor_data17h960dbb24073819e0E:

00000000 <mynewt::hw::sensor::convert_sensor_data>:
_ZN6mynewt2hw6sensor19convert_sensor_data17h960dbb24073819e0E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:156
];

///  Convert the sensor data received from Mynewt into a `SensorValue` for transmission, which includes the sensor data key. 
///  `sensor_type` indicates the type of data in `sensor_data`.
#[allow(non_snake_case, unused_variables)]
fn convert_sensor_data(sensor_data: sensor_data_ptr, sensor_key: &'static Strn, sensor_type: sensor_type_t) -> SensorValue {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0e8      	sub	sp, #416	; 0x1a0
   4:	9b6d      	ldr	r3, [sp, #436]	; 0x1b4
   6:	f8dd c1b0 	ldr.w	ip, [sp, #432]	; 0x1b0
   a:	4696      	mov	lr, r2
   c:	460c      	mov	r4, r1
   e:	9112      	str	r1, [sp, #72]	; 0x48
  10:	9213      	str	r2, [sp, #76]	; 0x4c
  12:	9315      	str	r3, [sp, #84]	; 0x54
  14:	f8cd c050 	str.w	ip, [sp, #80]	; 0x50
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:159
    //  Construct and return a new `SensorValue` (without semicolon)
    SensorValue {
        key: sensor_key,
  18:	9913      	ldr	r1, [sp, #76]	; 0x4c
  1a:	2200      	movs	r2, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:160
        geo: SensorValueType::None,
  1c:	9216      	str	r2, [sp, #88]	; 0x58
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:162
        value: match sensor_type {
            SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
  1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  20:	9b15      	ldr	r3, [sp, #84]	; 0x54
  22:	f082 6280 	eor.w	r2, r2, #67108864	; 0x4000000
  26:	431a      	orrs	r2, r3
  28:	2a00      	cmp	r2, #0
  2a:	f8cd e044 	str.w	lr, [sp, #68]	; 0x44
  2e:	9410      	str	r4, [sp, #64]	; 0x40
  30:	900f      	str	r0, [sp, #60]	; 0x3c
  32:	910e      	str	r1, [sp, #56]	; 0x38
  34:	f040 8102 	bne.w	23c <mynewt::hw::sensor::convert_sensor_data+0x23c>
  38:	e7ff      	b.n	3a <mynewt::hw::sensor::convert_sensor_data+0x3a>
  3a:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:164
                //  Interpret the sensor data as a `sensor_temp_raw_data` struct that contains raw temp.
                let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3c:	f88d 00a8 	strb.w	r0, [sp, #168]	; 0xa8
  40:	9029      	str	r0, [sp, #164]	; 0xa4
  42:	f89d 00a8 	ldrb.w	r0, [sp, #168]	; 0xa8
  46:	f88d 00a0 	strb.w	r0, [sp, #160]	; 0xa0
  4a:	9829      	ldr	r0, [sp, #164]	; 0xa4
  4c:	9027      	str	r0, [sp, #156]	; 0x9c
  4e:	e7ff      	b.n	50 <mynewt::hw::sensor::convert_sensor_data+0x50>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:165
                let rc = unsafe { get_temp_raw_data(sensor_data, &mut rawtempdata) };
  50:	9812      	ldr	r0, [sp, #72]	; 0x48
  52:	a927      	add	r1, sp, #156	; 0x9c
  54:	f7ff fffe 	bl	0 <get_temp_raw_data>
  58:	902b      	str	r0, [sp, #172]	; 0xac
  5a:	e7ff      	b.n	5c <mynewt::hw::sensor::convert_sensor_data+0x5c>
  5c:	a82b      	add	r0, sp, #172	; 0xac
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:166
                assert_eq!(rc, 0, "rawtmp fail");
  5e:	902c      	str	r0, [sp, #176]	; 0xb0
  60:	f240 0000 	movw	r0, #0
  64:	f2c0 0000 	movt	r0, #0
  68:	902d      	str	r0, [sp, #180]	; 0xb4
  6a:	982c      	ldr	r0, [sp, #176]	; 0xb0
  6c:	902e      	str	r0, [sp, #184]	; 0xb8
  6e:	982d      	ldr	r0, [sp, #180]	; 0xb4
  70:	902f      	str	r0, [sp, #188]	; 0xbc
  72:	982e      	ldr	r0, [sp, #184]	; 0xb8
  74:	6800      	ldr	r0, [r0, #0]
  76:	992f      	ldr	r1, [sp, #188]	; 0xbc
  78:	6809      	ldr	r1, [r1, #0]
  7a:	4288      	cmp	r0, r1
  7c:	d014      	beq.n	a8 <mynewt::hw::sensor::convert_sensor_data+0xa8>
  7e:	e7ff      	b.n	80 <mynewt::hw::sensor::convert_sensor_data+0x80>
  80:	982e      	ldr	r0, [sp, #184]	; 0xb8
  82:	903f      	str	r0, [sp, #252]	; 0xfc
  84:	982f      	ldr	r0, [sp, #188]	; 0xbc
  86:	9040      	str	r0, [sp, #256]	; 0x100
  88:	4668      	mov	r0, sp
  8a:	2100      	movs	r1, #0
  8c:	6001      	str	r1, [r0, #0]
  8e:	f240 0100 	movw	r1, #0
  92:	f2c0 0100 	movt	r1, #0
  96:	f240 0300 	movw	r3, #0
  9a:	f2c0 0300 	movt	r3, #0
  9e:	a841      	add	r0, sp, #260	; 0x104
  a0:	2201      	movs	r2, #1
  a2:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  a6:	e012      	b.n	ce <mynewt::hw::sensor::convert_sensor_data+0xce>
  a8:	a827      	add	r0, sp, #156	; 0x9c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:168
                //  Check that the raw temperature data is valid.
                assert_ne!(rawtempdata.strd_temp_raw_is_valid, 0, "bad rawtmp");                
  aa:	3004      	adds	r0, #4
  ac:	904a      	str	r0, [sp, #296]	; 0x128
  ae:	f240 0000 	movw	r0, #0
  b2:	f2c0 0000 	movt	r0, #0
  b6:	904b      	str	r0, [sp, #300]	; 0x12c
  b8:	984a      	ldr	r0, [sp, #296]	; 0x128
  ba:	904c      	str	r0, [sp, #304]	; 0x130
  bc:	984b      	ldr	r0, [sp, #300]	; 0x12c
  be:	904d      	str	r0, [sp, #308]	; 0x134
  c0:	984c      	ldr	r0, [sp, #304]	; 0x130
  c2:	7800      	ldrb	r0, [r0, #0]
  c4:	994d      	ldr	r1, [sp, #308]	; 0x134
  c6:	7809      	ldrb	r1, [r1, #0]
  c8:	4288      	cmp	r0, r1
  ca:	d04f      	beq.n	16c <mynewt::hw::sensor::convert_sensor_data+0x16c>
  cc:	e062      	b.n	194 <mynewt::hw::sensor::convert_sensor_data+0x194>
  ce:	a83f      	add	r0, sp, #252	; 0xfc
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:166
                assert_eq!(rc, 0, "rawtmp fail");
  d0:	903c      	str	r0, [sp, #240]	; 0xf0
  d2:	a840      	add	r0, sp, #256	; 0x100
  d4:	903d      	str	r0, [sp, #244]	; 0xf4
  d6:	a841      	add	r0, sp, #260	; 0x104
  d8:	903e      	str	r0, [sp, #248]	; 0xf8
  da:	983c      	ldr	r0, [sp, #240]	; 0xf0
  dc:	9047      	str	r0, [sp, #284]	; 0x11c
  de:	983d      	ldr	r0, [sp, #244]	; 0xf4
  e0:	9048      	str	r0, [sp, #288]	; 0x120
  e2:	983e      	ldr	r0, [sp, #248]	; 0xf8
  e4:	9049      	str	r0, [sp, #292]	; 0x124
  e6:	9847      	ldr	r0, [sp, #284]	; 0x11c
  e8:	f240 0100 	movw	r1, #0
  ec:	f2c0 0100 	movt	r1, #0
  f0:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  f4:	900d      	str	r0, [sp, #52]	; 0x34
  f6:	910c      	str	r1, [sp, #48]	; 0x30
  f8:	e7ff      	b.n	fa <mynewt::hw::sensor::convert_sensor_data+0xfa>
  fa:	9848      	ldr	r0, [sp, #288]	; 0x120
  fc:	f240 0100 	movw	r1, #0
 100:	f2c0 0100 	movt	r1, #0
 104:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 108:	900b      	str	r0, [sp, #44]	; 0x2c
 10a:	910a      	str	r1, [sp, #40]	; 0x28
 10c:	e7ff      	b.n	10e <mynewt::hw::sensor::convert_sensor_data+0x10e>
 10e:	9849      	ldr	r0, [sp, #292]	; 0x124
 110:	f240 0100 	movw	r1, #0
 114:	f2c0 0100 	movt	r1, #0
 118:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 11c:	9009      	str	r0, [sp, #36]	; 0x24
 11e:	9108      	str	r1, [sp, #32]
 120:	e7ff      	b.n	122 <mynewt::hw::sensor::convert_sensor_data+0x122>
 122:	980d      	ldr	r0, [sp, #52]	; 0x34
 124:	9036      	str	r0, [sp, #216]	; 0xd8
 126:	990c      	ldr	r1, [sp, #48]	; 0x30
 128:	9137      	str	r1, [sp, #220]	; 0xdc
 12a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 12c:	9238      	str	r2, [sp, #224]	; 0xe0
 12e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 130:	9339      	str	r3, [sp, #228]	; 0xe4
 132:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 136:	f8cd c0e8 	str.w	ip, [sp, #232]	; 0xe8
 13a:	f8dd e020 	ldr.w	lr, [sp, #32]
 13e:	f8cd e0ec 	str.w	lr, [sp, #236]	; 0xec
 142:	466c      	mov	r4, sp
 144:	2503      	movs	r5, #3
 146:	6025      	str	r5, [r4, #0]
 148:	f240 0100 	movw	r1, #0
 14c:	f2c0 0100 	movt	r1, #0
 150:	a830      	add	r0, sp, #192	; 0xc0
 152:	ab36      	add	r3, sp, #216	; 0xd8
 154:	462a      	mov	r2, r5
 156:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 15a:	e7ff      	b.n	2 <mynewt::hw::sensor::convert_sensor_data+0x2>
 15c:	f240 0100 	movw	r1, #0
 160:	f2c0 0100 	movt	r1, #0
 164:	a830      	add	r0, sp, #192	; 0xc0
 166:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 16a:	defe      	udf	#254	; 0xfe
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:168
                assert_ne!(rawtempdata.strd_temp_raw_is_valid, 0, "bad rawtmp");                
 16c:	984c      	ldr	r0, [sp, #304]	; 0x130
 16e:	905d      	str	r0, [sp, #372]	; 0x174
 170:	984d      	ldr	r0, [sp, #308]	; 0x134
 172:	905e      	str	r0, [sp, #376]	; 0x178
 174:	4668      	mov	r0, sp
 176:	2100      	movs	r1, #0
 178:	6001      	str	r1, [r0, #0]
 17a:	f240 0100 	movw	r1, #0
 17e:	f2c0 0100 	movt	r1, #0
 182:	f240 0300 	movw	r3, #0
 186:	f2c0 0300 	movt	r3, #0
 18a:	a85f      	add	r0, sp, #380	; 0x17c
 18c:	2201      	movs	r2, #1
 18e:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 192:	e004      	b.n	19e <mynewt::hw::sensor::convert_sensor_data+0x19e>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:170
                //  Raw temperature data is valid.  Return it.
                SensorValueType::Uint(rawtempdata.strd_temp_raw)  //  Raw Temperature in integer (0 to 4095)
 194:	9827      	ldr	r0, [sp, #156]	; 0x9c
 196:	901f      	str	r0, [sp, #124]	; 0x7c
 198:	2001      	movs	r0, #1
 19a:	901e      	str	r0, [sp, #120]	; 0x78
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:161
        value: match sensor_type {
 19c:	e05c      	b.n	258 <mynewt::hw::sensor::convert_sensor_data+0x258>
 19e:	a85d      	add	r0, sp, #372	; 0x174
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:168
                assert_ne!(rawtempdata.strd_temp_raw_is_valid, 0, "bad rawtmp");                
 1a0:	905a      	str	r0, [sp, #360]	; 0x168
 1a2:	a85e      	add	r0, sp, #376	; 0x178
 1a4:	905b      	str	r0, [sp, #364]	; 0x16c
 1a6:	a85f      	add	r0, sp, #380	; 0x17c
 1a8:	905c      	str	r0, [sp, #368]	; 0x170
 1aa:	985a      	ldr	r0, [sp, #360]	; 0x168
 1ac:	9065      	str	r0, [sp, #404]	; 0x194
 1ae:	985b      	ldr	r0, [sp, #364]	; 0x16c
 1b0:	9066      	str	r0, [sp, #408]	; 0x198
 1b2:	985c      	ldr	r0, [sp, #368]	; 0x170
 1b4:	9067      	str	r0, [sp, #412]	; 0x19c
 1b6:	9865      	ldr	r0, [sp, #404]	; 0x194
 1b8:	f240 0100 	movw	r1, #0
 1bc:	f2c0 0100 	movt	r1, #0
 1c0:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 1c4:	9007      	str	r0, [sp, #28]
 1c6:	9106      	str	r1, [sp, #24]
 1c8:	e7ff      	b.n	1ca <mynewt::hw::sensor::convert_sensor_data+0x1ca>
 1ca:	9866      	ldr	r0, [sp, #408]	; 0x198
 1cc:	f240 0100 	movw	r1, #0
 1d0:	f2c0 0100 	movt	r1, #0
 1d4:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 1d8:	9005      	str	r0, [sp, #20]
 1da:	9104      	str	r1, [sp, #16]
 1dc:	e7ff      	b.n	1de <mynewt::hw::sensor::convert_sensor_data+0x1de>
 1de:	9867      	ldr	r0, [sp, #412]	; 0x19c
 1e0:	f240 0100 	movw	r1, #0
 1e4:	f2c0 0100 	movt	r1, #0
 1e8:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 1ec:	9003      	str	r0, [sp, #12]
 1ee:	9102      	str	r1, [sp, #8]
 1f0:	e7ff      	b.n	1f2 <mynewt::hw::sensor::convert_sensor_data+0x1f2>
 1f2:	9807      	ldr	r0, [sp, #28]
 1f4:	9054      	str	r0, [sp, #336]	; 0x150
 1f6:	9906      	ldr	r1, [sp, #24]
 1f8:	9155      	str	r1, [sp, #340]	; 0x154
 1fa:	9a05      	ldr	r2, [sp, #20]
 1fc:	9256      	str	r2, [sp, #344]	; 0x158
 1fe:	9b04      	ldr	r3, [sp, #16]
 200:	9357      	str	r3, [sp, #348]	; 0x15c
 202:	f8dd c00c 	ldr.w	ip, [sp, #12]
 206:	f8cd c160 	str.w	ip, [sp, #352]	; 0x160
 20a:	f8dd e008 	ldr.w	lr, [sp, #8]
 20e:	f8cd e164 	str.w	lr, [sp, #356]	; 0x164
 212:	466c      	mov	r4, sp
 214:	2503      	movs	r5, #3
 216:	6025      	str	r5, [r4, #0]
 218:	f240 0100 	movw	r1, #0
 21c:	f2c0 0100 	movt	r1, #0
 220:	a84e      	add	r0, sp, #312	; 0x138
 222:	ab54      	add	r3, sp, #336	; 0x150
 224:	462a      	mov	r2, r5
 226:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 22a:	e7ff      	b.n	2 <mynewt::hw::sensor::convert_sensor_data+0x2>
 22c:	f240 0100 	movw	r1, #0
 230:	f2c0 0100 	movt	r1, #0
 234:	a84e      	add	r0, sp, #312	; 0x138
 236:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 23a:	defe      	udf	#254	; 0xfe
 23c:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:173
            }
            //  Unknown type of sensor value
            _ => { assert!(false, "sensor type"); SensorValueType::None }
 23e:	2800      	cmp	r0, #0
 240:	d107      	bne.n	252 <mynewt::hw::sensor::convert_sensor_data+0x252>
 242:	e7ff      	b.n	244 <mynewt::hw::sensor::convert_sensor_data+0x244>
 244:	f240 0000 	movw	r0, #0
 248:	f2c0 0000 	movt	r0, #0
 24c:	f7ff fffe 	bl	0 <core::panicking::panic>
 250:	defe      	udf	#254	; 0xfe
 252:	2000      	movs	r0, #0
 254:	901e      	str	r0, [sp, #120]	; 0x78
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:161
        value: match sensor_type {
 256:	e7ff      	b.n	258 <mynewt::hw::sensor::convert_sensor_data+0x258>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:158
    SensorValue {
 258:	980e      	ldr	r0, [sp, #56]	; 0x38
 25a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 25c:	6408      	str	r0, [r1, #64]	; 0x40
 25e:	aa1e      	add	r2, sp, #120	; 0x78
 260:	e8b2 5018 	ldmia.w	r2!, {r3, r4, ip, lr}
 264:	e8a1 5018 	stmia.w	r1!, {r3, r4, ip, lr}
 268:	e892 5018 	ldmia.w	r2, {r3, r4, ip, lr}
 26c:	e881 5018 	stmia.w	r1, {r3, r4, ip, lr}
 270:	990f      	ldr	r1, [sp, #60]	; 0x3c
 272:	f101 0220 	add.w	r2, r1, #32
 276:	ab16      	add	r3, sp, #88	; 0x58
 278:	e8b3 5030 	ldmia.w	r3!, {r4, r5, ip, lr}
 27c:	e8a2 5030 	stmia.w	r2!, {r4, r5, ip, lr}
 280:	e893 5030 	ldmia.w	r3, {r4, r5, ip, lr}
 284:	e882 5030 	stmia.w	r2, {r4, r5, ip, lr}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:176
        }
    }
}
 288:	b068      	add	sp, #416	; 0x1a0
 28a:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN6mynewt2hw6sensor21null_sensor_data_func17h64205b3a5e59647aE:

00000000 <mynewt::hw::sensor::null_sensor_data_func>:
_ZN6mynewt2hw6sensor21null_sensor_data_func17h64205b3a5e59647aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:187
    sl_func: Some(null_sensor_data_func),
    ..fill_zero!(sensor_listener)
};

///  Define a default sensor data function in case there is none.
extern fn null_sensor_data_func(
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b088      	sub	sp, #32
   4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   6:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
   a:	4696      	mov	lr, r2
   c:	460c      	mov	r4, r1
   e:	4605      	mov	r5, r0
  10:	9003      	str	r0, [sp, #12]
  12:	9104      	str	r1, [sp, #16]
  14:	9205      	str	r2, [sp, #20]
  16:	9307      	str	r3, [sp, #28]
  18:	f8cd c018 	str.w	ip, [sp, #24]
  1c:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:192
    _sensor: sensor_ptr, 
    _arg: sensor_arg, 
    _sensor_data: sensor_data_ptr, 
    _sensor_type: sensor_type_t) -> i32
    { 0 }
  1e:	f8cd e008 	str.w	lr, [sp, #8]
  22:	9401      	str	r4, [sp, #4]
  24:	9500      	str	r5, [sp, #0]
  26:	b008      	add	sp, #32
  28:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN6mynewt2hw6sensor22null_sensor_value_func17h7124af7c589d1972E:

00000000 <mynewt::hw::sensor::null_sensor_value_func>:
_ZN6mynewt2hw6sensor22null_sensor_value_func17h7124af7c589d1972E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:195

///  Define a default sensor value function in case there is none.
fn null_sensor_value_func(
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
   6:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:198
    _sensor_value: &SensorValue
    ) -> MynewtResult<()> 
    { Ok(()) }
   8:	9002      	str	r0, [sp, #8]
   a:	2001      	movs	r0, #1
   c:	9002      	str	r0, [sp, #8]
   e:	9802      	ldr	r0, [sp, #8]
  10:	9100      	str	r1, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

mynewt-d7fd96264f78b961.3dscpu9j5up3pg08.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3dscpu9j5up3pg08
000000e9 l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
000000ca l       .debug_str	00000000 
000000d3 l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
000000df l       .debug_str	00000000 
00000170 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
00000178 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h71f0c6a1a3f53e41E	00000000 .text._ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h71f0c6a1a3f53e41E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
00000000 g     F .text._ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h71f0c6a1a3f53e41E	0000006a .hidden core::str::traits::<impl core::cmp::PartialEq for str>::eq



Disassembly of section .text._ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h71f0c6a1a3f53e41E:

00000000 <core::str::traits::<impl core::cmp::PartialEq for str>::eq>:
_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h71f0c6a1a3f53e41E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:1589
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b096      	sub	sp, #88	; 0x58
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9006      	str	r0, [sp, #24]
   e:	9107      	str	r1, [sp, #28]
  10:	9208      	str	r2, [sp, #32]
  12:	9309      	str	r3, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:1590
  14:	9806      	ldr	r0, [sp, #24]
  16:	9907      	ldr	r1, [sp, #28]
  18:	900e      	str	r0, [sp, #56]	; 0x38
  1a:	910f      	str	r1, [sp, #60]	; 0x3c
_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h63ffb0f526205321E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2143
  1c:	980e      	ldr	r0, [sp, #56]	; 0x38
  1e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  20:	9010      	str	r0, [sp, #64]	; 0x40
  22:	9111      	str	r1, [sp, #68]	; 0x44
  24:	9810      	ldr	r0, [sp, #64]	; 0x40
  26:	9911      	ldr	r1, [sp, #68]	; 0x44
_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h71f0c6a1a3f53e41E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:1590
  28:	910b      	str	r1, [sp, #44]	; 0x2c
  2a:	900a      	str	r0, [sp, #40]	; 0x28
  2c:	f8cd c014 	str.w	ip, [sp, #20]
  30:	f8cd e010 	str.w	lr, [sp, #16]
  34:	9403      	str	r4, [sp, #12]
  36:	9502      	str	r5, [sp, #8]
  38:	e7ff      	b.n	3a <core::str::traits::<impl core::cmp::PartialEq for str>::eq+0x3a>
  3a:	9808      	ldr	r0, [sp, #32]
  3c:	9909      	ldr	r1, [sp, #36]	; 0x24
  3e:	9012      	str	r0, [sp, #72]	; 0x48
  40:	9113      	str	r1, [sp, #76]	; 0x4c
_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h63ffb0f526205321E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2143
  42:	9812      	ldr	r0, [sp, #72]	; 0x48
  44:	9913      	ldr	r1, [sp, #76]	; 0x4c
  46:	9014      	str	r0, [sp, #80]	; 0x50
  48:	9115      	str	r1, [sp, #84]	; 0x54
  4a:	9814      	ldr	r0, [sp, #80]	; 0x50
  4c:	9915      	ldr	r1, [sp, #84]	; 0x54
_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h71f0c6a1a3f53e41E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:1590
  4e:	910d      	str	r1, [sp, #52]	; 0x34
  50:	900c      	str	r0, [sp, #48]	; 0x30
  52:	e7ff      	b.n	54 <core::str::traits::<impl core::cmp::PartialEq for str>::eq+0x54>
  54:	a80a      	add	r0, sp, #40	; 0x28
  56:	a90c      	add	r1, sp, #48	; 0x30
  58:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq>
  5c:	9001      	str	r0, [sp, #4]
  5e:	e7ff      	b.n	60 <core::str::traits::<impl core::cmp::PartialEq for str>::eq+0x60>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:1591
  60:	9801      	ldr	r0, [sp, #4]
  62:	f000 0001 	and.w	r0, r0, #1
  66:	b016      	add	sp, #88	; 0x58
  68:	bdb0      	pop	{r4, r5, r7, pc}

mynewt-d7fd96264f78b961.3h0gc0z0o6jj1kiz.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3h0gc0z0o6jj1kiz
000002da l       .debug_str	00000000 
00000a0a l       .debug_str	00000000 
00000d7d l       .debug_str	00000000 
00000a05 l       .debug_str	00000000 
00000d67 l       .debug_str	00000000 
000009ff l       .debug_str	00000000 
00000d15 l       .debug_str	00000000 
000009f9 l       .debug_str	00000000 
00000cc2 l       .debug_str	00000000 
000009f7 l       .debug_str	00000000 
00000c49 l       .debug_str	00000000 
000009f1 l       .debug_str	00000000 
00000c1d l       .debug_str	00000000 
000009ec l       .debug_str	00000000 
00000bca l       .debug_str	00000000 
000009d2 l       .debug_str	00000000 
00000b61 l       .debug_str	00000000 
000009a1 l       .debug_str	00000000 
00000b45 l       .debug_str	00000000 
00000997 l       .debug_str	00000000 
00000af2 l       .debug_str	00000000 
00000970 l       .debug_str	00000000 
00000a88 l       .debug_str	00000000 
00000951 l       .debug_str	00000000 
00000a6b l       .debug_str	00000000 
0000092e l       .debug_str	00000000 
00000a18 l       .debug_str	00000000 
00000925 l       .debug_str	00000000 
00000a16 l       .debug_str	00000000 
0000091a l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
0000008d l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
0000009e l       .debug_str	00000000 
000000a3 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b8 l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000cd l       .debug_str	00000000 
000000d5 l       .debug_str	00000000 
000000e0 l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
00000136 l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
0000014e l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
0000018c l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
000001a1 l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001b1 l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000001d3 l       .debug_str	00000000 
000001d9 l       .debug_str	00000000 
000001df l       .debug_str	00000000 
000001e2 l       .debug_str	00000000 
000001f1 l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
0000020d l       .debug_str	00000000 
00000215 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000222 l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
00000242 l       .debug_str	00000000 
0000024e l       .debug_str	00000000 
00000250 l       .debug_str	00000000 
00000269 l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
00000289 l       .debug_str	00000000 
0000028f l       .debug_str	00000000 
00000293 l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
0000029d l       .debug_str	00000000 
000002a3 l       .debug_str	00000000 
000002a9 l       .debug_str	00000000 
000002b0 l       .debug_str	00000000 
000002b5 l       .debug_str	00000000 
000002ba l       .debug_str	00000000 
000002be l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002d6 l       .debug_str	00000000 
00000914 l       .debug_str	00000000 
000002e5 l       .debug_str	00000000 
000002ec l       .debug_str	00000000 
000002f2 l       .debug_str	00000000 
000002f6 l       .debug_str	00000000 
00000313 l       .debug_str	00000000 
00000317 l       .debug_str	00000000 
0000031f l       .debug_str	00000000 
00000336 l       .debug_str	00000000 
0000035a l       .debug_str	00000000 
00000376 l       .debug_str	00000000 
0000037b l       .debug_str	00000000 
00000384 l       .debug_str	00000000 
0000038b l       .debug_str	00000000 
000003a4 l       .debug_str	00000000 
000003ae l       .debug_str	00000000 
000003c8 l       .debug_str	00000000 
00000426 l       .debug_str	00000000 
00000431 l       .debug_str	00000000 
00000435 l       .debug_str	00000000 
0000047d l       .debug_str	00000000 
00000486 l       .debug_str	00000000 
000004ce l       .debug_str	00000000 
000004d7 l       .debug_str	00000000 
0000051f l       .debug_str	00000000 
00000528 l       .debug_str	00000000 
00000570 l       .debug_str	00000000 
00000578 l       .debug_str	00000000 
0000057c l       .debug_str	00000000 
000005c4 l       .debug_str	00000000 
000005cd l       .debug_str	00000000 
000005d0 l       .debug_str	00000000 
0000061a l       .debug_str	00000000 
00000623 l       .debug_str	00000000 
00000628 l       .debug_str	00000000 
00000659 l       .debug_str	00000000 
00000663 l       .debug_str	00000000 
00000694 l       .debug_str	00000000 
000006b5 l       .debug_str	00000000 
000006ba l       .debug_str	00000000 
000006eb l       .debug_str	00000000 
000006f5 l       .debug_str	00000000 
00000701 l       .debug_str	00000000 
0000071c l       .debug_str	00000000 
0000074d l       .debug_str	00000000 
0000076d l       .debug_str	00000000 
00000777 l       .debug_str	00000000 
0000077c l       .debug_str	00000000 
000007ad l       .debug_str	00000000 
000007b7 l       .debug_str	00000000 
000007e2 l       .debug_str	00000000 
00000813 l       .debug_str	00000000 
00000843 l       .debug_str	00000000 
00000848 l       .debug_str	00000000 
00000879 l       .debug_str	00000000 
00000883 l       .debug_str	00000000 
000008b4 l       .debug_str	00000000 
000008bd l       .debug_str	00000000 
000008c4 l       .debug_str	00000000 
000008d0 l       .debug_str	00000000 
000008d8 l       .debug_str	00000000 
000008e1 l       .debug_str	00000000 
000008e6 l       .debug_str	00000000 
000008e9 l       .debug_str	00000000 
000008f2 l       .debug_str	00000000 
000008f9 l       .debug_str	00000000 
000008fc l       .debug_str	00000000 
00000902 l       .debug_str	00000000 
0000090c l       .debug_str	00000000 
00000a10 l       .debug_str	00000000 
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h49d5a0f4de383fedE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h49d5a0f4de383fedE
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f3655b75e30a970E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f3655b75e30a970E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7d78e405a1258638E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7d78e405a1258638E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he1e06a6ebcf1933eE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he1e06a6ebcf1933eE
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hff4283aff90054cfE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hff4283aff90054cfE
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h77e937fdb67d0448E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h77e937fdb67d0448E
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17h0e8522f6dcdd3730E	00000000 .text._ZN4core3fmt10ArgumentV13new17h0e8522f6dcdd3730E
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17h4625d42fff5bfd34E	00000000 .text._ZN4core3fmt10ArgumentV13new17h4625d42fff5bfd34E
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17h99edaec200b06545E	00000000 .text._ZN4core3fmt10ArgumentV13new17h99edaec200b06545E
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17ha4bd00c3a822e50cE	00000000 .text._ZN4core3fmt10ArgumentV13new17ha4bd00c3a822e50cE
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17hbec50b814a491c08E	00000000 .text._ZN4core3fmt10ArgumentV13new17hbec50b814a491c08E
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17hd53ba6b62a3b9591E	00000000 .text._ZN4core3fmt10ArgumentV13new17hd53ba6b62a3b9591E
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17hd9b543e4f4267a1eE	00000000 .text._ZN4core3fmt10ArgumentV13new17hd9b543e4f4267a1eE
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17he64230cf919db0caE	00000000 .text._ZN4core3fmt10ArgumentV13new17he64230cf919db0caE
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17hf7ba76b3ae396a12E	00000000 .text._ZN4core3fmt10ArgumentV13new17hf7ba76b3ae396a12E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h49d5a0f4de383fedE	00000028 <&T as core::fmt::Debug>::fmt
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f3655b75e30a970E	00000028 <&T as core::fmt::Debug>::fmt
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7d78e405a1258638E	00000028 <&T as core::fmt::Debug>::fmt
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he1e06a6ebcf1933eE	00000028 <&T as core::fmt::Debug>::fmt
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hff4283aff90054cfE	00000028 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 <str as core::fmt::Display>::fmt
00000000 g     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h77e937fdb67d0448E	00000034 <&T as core::fmt::Display>::fmt
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17h0e8522f6dcdd3730E	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17h4625d42fff5bfd34E	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17h99edaec200b06545E	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17ha4bd00c3a822e50cE	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17hbec50b814a491c08E	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17hd53ba6b62a3b9591E	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17hd9b543e4f4267a1eE	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17he64230cf919db0caE	00000032 core::fmt::ArgumentV1::new
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17hf7ba76b3ae396a12E	00000032 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::num::<impl core::fmt::Debug for u8>::fmt
00000000         *UND*	00000000 .hidden core::fmt::num::<impl core::fmt::Debug for i32>::fmt
00000000         *UND*	00000000 .hidden core::fmt::num::<impl core::fmt::Debug for i64>::fmt
00000000         *UND*	00000000 .hidden core::fmt::num::<impl core::fmt::Debug for u32>::fmt



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h49d5a0f4de383fedE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h49d5a0f4de383fedE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f3655b75e30a970E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5f3655b75e30a970E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7d78e405a1258638E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h7d78e405a1258638E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he1e06a6ebcf1933eE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he1e06a6ebcf1933eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hff4283aff90054cfE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hff4283aff90054cfE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <<&T as core::fmt::Debug>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h77e937fdb67d0448E:

00000000 <<&T as core::fmt::Display>::fmt>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h77e937fdb67d0448E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6801      	ldr	r1, [r0, #0]
  10:	6840      	ldr	r0, [r0, #4]
  12:	f8dd c014 	ldr.w	ip, [sp, #20]
  16:	9003      	str	r0, [sp, #12]
  18:	4608      	mov	r0, r1
  1a:	9903      	ldr	r1, [sp, #12]
  1c:	9202      	str	r2, [sp, #8]
  1e:	4662      	mov	r2, ip
  20:	9301      	str	r3, [sp, #4]
  22:	f7ff fffe 	bl	0 <<str as core::fmt::Display>::fmt>
  26:	9000      	str	r0, [sp, #0]
  28:	e7ff      	b.n	2a <<&T as core::fmt::Display>::fmt+0x2a>
  2a:	9800      	ldr	r0, [sp, #0]
  2c:	f000 0001 	and.w	r0, r0, #1
  30:	b006      	add	sp, #24
  32:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h0e8522f6dcdd3730E:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17h0e8522f6dcdd3730E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h4625d42fff5bfd34E:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17h4625d42fff5bfd34E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h99edaec200b06545E:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17h99edaec200b06545E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17ha4bd00c3a822e50cE:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17ha4bd00c3a822e50cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17hbec50b814a491c08E:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17hbec50b814a491c08E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17hd53ba6b62a3b9591E:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17hd53ba6b62a3b9591E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17hd9b543e4f4267a1eE:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17hd9b543e4f4267a1eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17he64230cf919db0caE:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17he64230cf919db0caE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17hf7ba76b3ae396a12E:

00000000 <core::fmt::ArgumentV1::new>:
_ZN4core3fmt10ArgumentV13new17hf7ba76b3ae396a12E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <core::fmt::ArgumentV1::new+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <core::fmt::ArgumentV1::new+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

mynewt-d7fd96264f78b961.3lpv3wz185pwx0ss.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3lpv3wz185pwx0ss
00000189 l       .debug_str	00000000 
00000413 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000a3 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000d2 l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
000000e3 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000ee l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
00000127 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
00000147 l       .debug_str	00000000 
0000014d l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000160 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
00000178 l       .debug_str	00000000 
0000017e l       .debug_str	00000000 
00000409 l       .debug_str	00000000 
00000192 l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001d4 l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001db l       .debug_str	00000000 
00000202 l       .debug_str	00000000 
00000207 l       .debug_str	00000000 
0000020d l       .debug_str	00000000 
00000213 l       .debug_str	00000000 
00000216 l       .debug_str	00000000 
00000225 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000230 l       .debug_str	00000000 
00000239 l       .debug_str	00000000 
00000241 l       .debug_str	00000000 
00000249 l       .debug_str	00000000 
00000250 l       .debug_str	00000000 
00000264 l       .debug_str	00000000 
00000270 l       .debug_str	00000000 
0000027c l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
0000029a l       .debug_str	00000000 
000002ab l       .debug_str	00000000 
000002b5 l       .debug_str	00000000 
000002c3 l       .debug_str	00000000 
000002c7 l       .debug_str	00000000 
000002d2 l       .debug_str	00000000 
000002d9 l       .debug_str	00000000 
000002df l       .debug_str	00000000 
000002e3 l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002ef l       .debug_str	00000000 
00000306 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
00000346 l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
0000036a l       .debug_str	00000000 
000003c8 l       .debug_str	00000000 
000003d3 l       .debug_str	00000000 
000003f0 l       .debug_str	00000000 
00000445 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3fmt9Arguments6new_v117h7b18277453f88ac4E	00000000 .text._ZN4core3fmt9Arguments6new_v117h7b18277453f88ac4E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3fmt9Arguments6new_v117h7b18277453f88ac4E	0000004c .hidden core::fmt::Arguments::new_v1



Disassembly of section .text._ZN4core3fmt9Arguments6new_v117h7b18277453f88ac4E:

00000000 <core::fmt::Arguments::new_v1>:
_ZN4core3fmt9Arguments6new_v117h7b18277453f88ac4E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:314
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	9104      	str	r1, [sp, #16]
  12:	9205      	str	r2, [sp, #20]
  14:	9306      	str	r3, [sp, #24]
  16:	f8cd c01c 	str.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:317
  1a:	9904      	ldr	r1, [sp, #16]
  1c:	9a05      	ldr	r2, [sp, #20]
  1e:	2300      	movs	r3, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:318
  20:	9309      	str	r3, [sp, #36]	; 0x24
  22:	9308      	str	r3, [sp, #32]
  24:	9308      	str	r3, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:319
  26:	9b06      	ldr	r3, [sp, #24]
  28:	f8dd c01c 	ldr.w	ip, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  2c:	6001      	str	r1, [r0, #0]
  2e:	6042      	str	r2, [r0, #4]
  30:	9908      	ldr	r1, [sp, #32]
  32:	9a09      	ldr	r2, [sp, #36]	; 0x24
  34:	6081      	str	r1, [r0, #8]
  36:	60c2      	str	r2, [r0, #12]
  38:	6103      	str	r3, [r0, #16]
  3a:	f8c0 c014 	str.w	ip, [r0, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:321
  3e:	f8cd e00c 	str.w	lr, [sp, #12]
  42:	9402      	str	r4, [sp, #8]
  44:	9501      	str	r5, [sp, #4]
  46:	9600      	str	r6, [sp, #0]
  48:	b00a      	add	sp, #40	; 0x28
  4a:	bd70      	pop	{r4, r5, r6, pc}

mynewt-d7fd96264f78b961.3lyhyts7sux9unl8.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3lyhyts7sux9unl8
0000016c l       .debug_str	00000000 
00000376 l       .debug_str	00000000 
000004d9 l       .debug_str	00000000 
0000034e l       .debug_str	00000000 
000004b7 l       .debug_str	00000000 
000002eb l       .debug_str	00000000 
000004a8 l       .debug_str	00000000 
000002e0 l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
0000041c l       .debug_str	00000000 
00000253 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
0000008b l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
00000096 l       .debug_str	00000000 
0000009d l       .debug_str	00000000 
000000a5 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000aa l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
00000142 l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
00000155 l       .debug_str	00000000 
0000015c l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
00000170 l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
00000207 l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
0000021d l       .debug_str	00000000 
00000222 l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
00000232 l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
0000023c l       .debug_str	00000000 
00000240 l       .debug_str	00000000 
00000244 l       .debug_str	00000000 
00000406 l       .debug_str	00000000 
00000000 l    d  .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h27eb5c40c78bb5e7E	00000000 .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h27eb5c40c78bb5e7E
00000000 l    d  .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd3e80460d631842cE	00000000 .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd3e80460d631842cE
00000000 l    d  .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha43f49b82ef7bb66E	00000000 .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha43f49b82ef7bb66E
00000000 l    d  .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfc81ae825f5ef360E	00000000 .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfc81ae825f5ef360E
00000000 l    d  .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h87228261cb1ac456E	00000000 .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h87228261cb1ac456E
00000000 l    d  .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5aa536dd3e52e567E	00000000 .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5aa536dd3e52e567E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h27eb5c40c78bb5e7E	00000046 <core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index_mut
00000000         *UND*	00000000 .hidden <u32 as core::iter::range::Step>::add_usize
00000000         *UND*	00000000 .hidden core::cmp::impls::<impl core::cmp::PartialOrd for u32>::lt
00000000         *UND*	00000000 core::mem::swap
00000000         *UND*	00000000 core::ptr::<impl *mut T>::add
00000000 g     F .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd3e80460d631842cE	0000009a core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
00000000         *UND*	00000000 core::slice::from_raw_parts_mut
00000000         *UND*	00000000 core::slice::slice_index_len_fail
00000000         *UND*	00000000 core::slice::slice_index_order_fail
00000000         *UND*	00000000 core::slice::<impl [T]>::as_mut_ptr
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000 g     F .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha43f49b82ef7bb66E	00000016 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000 g     F .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfc81ae825f5ef360E	00000016 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000 g     F .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h87228261cb1ac456E	00000052 <core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut
00000000 g     F .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5aa536dd3e52e567E	0000008a <core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut



Disassembly of section .text._ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h27eb5c40c78bb5e7E:

00000000 <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index_mut>:
_ZN101_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h27eb5c40c78bb5e7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2796
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9007      	str	r0, [sp, #28]
   c:	9108      	str	r1, [sp, #32]
   e:	9209      	str	r2, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2797
  10:	9807      	ldr	r0, [sp, #28]
  12:	2100      	movs	r1, #0
  14:	910a      	str	r1, [sp, #40]	; 0x28
  16:	900b      	str	r0, [sp, #44]	; 0x2c
  18:	9a08      	ldr	r2, [sp, #32]
  1a:	9809      	ldr	r0, [sp, #36]	; 0x24
  1c:	990a      	ldr	r1, [sp, #40]	; 0x28
  1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  20:	9006      	str	r0, [sp, #24]
  22:	4608      	mov	r0, r1
  24:	4621      	mov	r1, r4
  26:	9c06      	ldr	r4, [sp, #24]
  28:	9305      	str	r3, [sp, #20]
  2a:	4623      	mov	r3, r4
  2c:	f8cd c010 	str.w	ip, [sp, #16]
  30:	f8cd e00c 	str.w	lr, [sp, #12]
  34:	f7ff fffe 	bl	0 <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index_mut>
  38:	9002      	str	r0, [sp, #8]
  3a:	9101      	str	r1, [sp, #4]
  3c:	e7ff      	b.n	3e <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index_mut+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2798
  3e:	9802      	ldr	r0, [sp, #8]
  40:	9901      	ldr	r1, [sp, #4]
  42:	b00c      	add	sp, #48	; 0x30
  44:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd3e80460d631842cE:

00000000 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next>:
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd3e80460d631842cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:205
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
   8:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
   a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
   e:	9803      	ldr	r0, [sp, #12]
  10:	1d02      	adds	r2, r0, #4
  12:	9102      	str	r1, [sp, #8]
  14:	4611      	mov	r1, r2
  16:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialOrd for u32>::lt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	07c1      	lsls	r1, r0, #31
  22:	2900      	cmp	r1, #0
  24:	d01f      	beq.n	66 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x66>
  26:	e7ff      	b.n	28 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:211
  28:	9803      	ldr	r0, [sp, #12]
  2a:	2101      	movs	r1, #1
  2c:	f88d 1027 	strb.w	r1, [sp, #39]	; 0x27
  30:	f7ff fffe 	bl	0 <<u32 as core::iter::range::Step>::add_usize>
  34:	9107      	str	r1, [sp, #28]
  36:	9006      	str	r0, [sp, #24]
  38:	e7ff      	b.n	3a <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x3a>
  3a:	9806      	ldr	r0, [sp, #24]
  3c:	2801      	cmp	r0, #1
  3e:	d10f      	bne.n	60 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x60>
  40:	e7ff      	b.n	42 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x42>
  42:	2000      	movs	r0, #0
  44:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  48:	9807      	ldr	r0, [sp, #28]
  4a:	9008      	str	r0, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:212
  4c:	9903      	ldr	r1, [sp, #12]
  4e:	a808      	add	r0, sp, #32
  50:	f7ff fffe 	bl	0 <core::mem::swap>
  54:	e7ff      	b.n	56 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:213
  56:	9808      	ldr	r0, [sp, #32]
  58:	9005      	str	r0, [sp, #20]
  5a:	2001      	movs	r0, #1
  5c:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:211
  5e:	e018      	b.n	92 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x92>
  60:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:215
  62:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:211
  64:	e015      	b.n	92 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x92>
  66:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:218
  68:	9004      	str	r0, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  6a:	e7ff      	b.n	6c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x6c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:220
  6c:	9804      	ldr	r0, [sp, #16]
  6e:	9905      	ldr	r1, [sp, #20]
  70:	b00a      	add	sp, #40	; 0x28
  72:	bd80      	pop	{r7, pc}
  74:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:217
  76:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  7a:	e7f7      	b.n	6c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x6c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:217
  7c:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  80:	07c0      	lsls	r0, r0, #31
  82:	2800      	cmp	r0, #0
  84:	d0f6      	beq.n	74 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x74>
  86:	e7ff      	b.n	88 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x88>
  88:	2000      	movs	r0, #0
  8a:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  8e:	e7f1      	b.n	74 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x74>
  90:	e7f0      	b.n	74 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x74>
  92:	9806      	ldr	r0, [sp, #24]
  94:	2801      	cmp	r0, #1
  96:	d0f1      	beq.n	7c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x7c>
  98:	e7fa      	b.n	90 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next+0x90>

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha43f49b82ef7bb66E:

00000000 <<I as core::iter::traits::collect::IntoIterator>::into_iter>:
_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha43f49b82ef7bb66E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:245
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:246
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:247
   e:	9201      	str	r2, [sp, #4]
  10:	9300      	str	r3, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfc81ae825f5ef360E:

00000000 <<I as core::iter::traits::collect::IntoIterator>::into_iter>:
_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfc81ae825f5ef360E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:245
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:246
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:247
   e:	9201      	str	r2, [sp, #4]
  10:	9300      	str	r3, [sp, #0]
  12:	b004      	add	sp, #16
  14:	4770      	bx	lr

Disassembly of section .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h87228261cb1ac456E:

00000000 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut>:
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h87228261cb1ac456E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2737
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9008      	str	r0, [sp, #32]
   e:	9109      	str	r1, [sp, #36]	; 0x24
  10:	920a      	str	r2, [sp, #40]	; 0x28
  12:	930b      	str	r3, [sp, #44]	; 0x2c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2738
  14:	980a      	ldr	r0, [sp, #40]	; 0x28
  16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  18:	f8cd c01c 	str.w	ip, [sp, #28]
  1c:	f8cd e018 	str.w	lr, [sp, #24]
  20:	9405      	str	r4, [sp, #20]
  22:	9504      	str	r5, [sp, #16]
  24:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_mut_ptr>
  28:	9003      	str	r0, [sp, #12]
  2a:	e7ff      	b.n	2c <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut+0x2c>
  2c:	9908      	ldr	r1, [sp, #32]
  2e:	9803      	ldr	r0, [sp, #12]
  30:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::add>
  34:	9002      	str	r0, [sp, #8]
  36:	e7ff      	b.n	38 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut+0x38>
  38:	9808      	ldr	r0, [sp, #32]
  3a:	9909      	ldr	r1, [sp, #36]	; 0x24
  3c:	1a09      	subs	r1, r1, r0
  3e:	9802      	ldr	r0, [sp, #8]
  40:	f7ff fffe 	bl	0 <core::slice::from_raw_parts_mut>
  44:	9001      	str	r0, [sp, #4]
  46:	9100      	str	r1, [sp, #0]
  48:	e7ff      	b.n	4a <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut+0x4a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2739
  4a:	9801      	ldr	r0, [sp, #4]
  4c:	9900      	ldr	r1, [sp, #0]
  4e:	b00c      	add	sp, #48	; 0x30
  50:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5aa536dd3e52e567E:

00000000 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut>:
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5aa536dd3e52e567E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2754
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	900a      	str	r0, [sp, #40]	; 0x28
   e:	910b      	str	r1, [sp, #44]	; 0x2c
  10:	920c      	str	r2, [sp, #48]	; 0x30
  12:	930d      	str	r3, [sp, #52]	; 0x34
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2755
  14:	980a      	ldr	r0, [sp, #40]	; 0x28
  16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  18:	4288      	cmp	r0, r1
  1a:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  1e:	f8cd e020 	str.w	lr, [sp, #32]
  22:	9407      	str	r4, [sp, #28]
  24:	9506      	str	r5, [sp, #24]
  26:	d905      	bls.n	34 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut+0x34>
  28:	e7ff      	b.n	2a <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2756
  2a:	980a      	ldr	r0, [sp, #40]	; 0x28
  2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  2e:	f7ff fffe 	bl	0 <core::slice::slice_index_order_fail>
  32:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2757
  34:	980b      	ldr	r0, [sp, #44]	; 0x2c
  36:	990c      	ldr	r1, [sp, #48]	; 0x30
  38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  3a:	9005      	str	r0, [sp, #20]
  3c:	4608      	mov	r0, r1
  3e:	4611      	mov	r1, r2
  40:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  44:	9004      	str	r0, [sp, #16]
  46:	e7ff      	b.n	48 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut+0x48>
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9904      	ldr	r1, [sp, #16]
  4c:	4288      	cmp	r0, r1
  4e:	d90f      	bls.n	70 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut+0x70>
  50:	e7ff      	b.n	52 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut+0x52>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2758
  52:	980b      	ldr	r0, [sp, #44]	; 0x2c
  54:	990c      	ldr	r1, [sp, #48]	; 0x30
  56:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  58:	9003      	str	r0, [sp, #12]
  5a:	4608      	mov	r0, r1
  5c:	4611      	mov	r1, r2
  5e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  62:	9002      	str	r0, [sp, #8]
  64:	e7ff      	b.n	66 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut+0x66>
  66:	9803      	ldr	r0, [sp, #12]
  68:	9902      	ldr	r1, [sp, #8]
  6a:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
  6e:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2761
  70:	980a      	ldr	r0, [sp, #40]	; 0x28
  72:	990b      	ldr	r1, [sp, #44]	; 0x2c
  74:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  78:	f7ff fffe 	bl	0 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut>
  7c:	9001      	str	r0, [sp, #4]
  7e:	9100      	str	r1, [sp, #0]
  80:	e7ff      	b.n	82 <<core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::index_mut+0x82>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2763
  82:	9801      	ldr	r0, [sp, #4]
  84:	9900      	ldr	r1, [sp, #0]
  86:	b00e      	add	sp, #56	; 0x38
  88:	bdb0      	pop	{r4, r5, r7, pc}

mynewt-d7fd96264f78b961.3ndgehdtv7e66s5b.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3ndgehdtv7e66s5b
0000044d l       .debug_str	00000000 
000006e5 l       .debug_str	00000000 
0000072c l       .debug_str	00000000 
000006dc l       .debug_str	00000000 
00000721 l       .debug_str	00000000 
000006c8 l       .debug_str	00000000 
0000071b l       .debug_str	00000000 
000006c6 l       .debug_str	00000000 
000006c4 l       .debug_str	00000000 
000006c0 l       .debug_str	00000000 
000006a6 l       .debug_str	00000000 
00000711 l       .debug_str	00000000 
0000069c l       .debug_str	00000000 
0000070b l       .debug_str	00000000 
00000683 l       .debug_str	00000000 
00000702 l       .debug_str	00000000 
0000067c l       .debug_str	00000000 
000006f7 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
0000008a l       .debug_str	00000000 
0000008f l       .debug_str	00000000 
00000096 l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
0000009d l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000ab l       .debug_str	00000000 
000000ae l       .debug_str	00000000 
000000b3 l       .debug_str	00000000 
000000b9 l       .debug_str	00000000 
000000c0 l       .debug_str	00000000 
000000c8 l       .debug_str	00000000 
000000d2 l       .debug_str	00000000 
000000db l       .debug_str	00000000 
000000e2 l       .debug_str	00000000 
000000e6 l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
00000191 l       .debug_str	00000000 
000001cc l       .debug_str	00000000 
000001f1 l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
00000269 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002f0 l       .debug_str	00000000 
0000035b l       .debug_str	00000000 
0000036b l       .debug_str	00000000 
000003d7 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
00000673 l       .debug_str	00000000 
00000455 l       .debug_str	00000000 
0000045a l       .debug_str	00000000 
0000045f l       .debug_str	00000000 
0000047a l       .debug_str	00000000 
00000496 l       .debug_str	00000000 
00000498 l       .debug_str	00000000 
0000049e l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
000004a8 l       .debug_str	00000000 
000004ae l       .debug_str	00000000 
000004b4 l       .debug_str	00000000 
000004be l       .debug_str	00000000 
000004c2 l       .debug_str	00000000 
000004ca l       .debug_str	00000000 
000004d2 l       .debug_str	00000000 
000004e6 l       .debug_str	00000000 
000004f2 l       .debug_str	00000000 
000004fd l       .debug_str	00000000 
00000504 l       .debug_str	00000000 
0000050a l       .debug_str	00000000 
0000050e l       .debug_str	00000000 
00000514 l       .debug_str	00000000 
0000051a l       .debug_str	00000000 
0000051d l       .debug_str	00000000 
0000052c l       .debug_str	00000000 
00000533 l       .debug_str	00000000 
00000537 l       .debug_str	00000000 
00000540 l       .debug_str	00000000 
0000054c l       .debug_str	00000000 
00000565 l       .debug_str	00000000 
0000056a l       .debug_str	00000000 
0000057b l       .debug_str	00000000 
00000585 l       .debug_str	00000000 
000005e3 l       .debug_str	00000000 
000005ee l       .debug_str	00000000 
0000060b l       .debug_str	00000000 
0000060f l       .debug_str	00000000 
00000617 l       .debug_str	00000000 
0000062e l       .debug_str	00000000 
00000652 l       .debug_str	00000000 
0000066e l       .debug_str	00000000 
000006ec l       .debug_str	00000000 
00000000 l     O .rodata.cst4	00000004 .Lanon.008ffd896659fb61eb65dd1b7386e6a5.0
00000000 l     O .rodata..Lanon.008ffd896659fb61eb65dd1b7386e6a5.1	00000010 .Lanon.008ffd896659fb61eb65dd1b7386e6a5.1
00000004 l     O .rodata.cst4	00000004 .Lanon.008ffd896659fb61eb65dd1b7386e6a5.2
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3eec109f7132f81eE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3eec109f7132f81eE
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$5ok_or17hb3b3817347480c77E	00000000 .text._ZN4core6option15Option$LT$T$GT$5ok_or17hb3b3817347480c77E
00000000 l    d  .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7fa4a63a8b7dfa6dE	00000000 .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7fa4a63a8b7dfa6dE
00000000 l    d  .text._ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17ha361f31015ba9c1fE	00000000 .text._ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17ha361f31015ba9c1fE
00000000 l    d  .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hc5c34342aa7dc908E	00000000 .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hc5c34342aa7dc908E
00000000 l    d  .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h266ad2132c426b62E	00000000 .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h266ad2132c426b62E
00000000 l    d  .text._ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h70df41bf340d2af5E	00000000 .text._ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h70df41bf340d2af5E
00000000 l    d  .rodata..Lanon.008ffd896659fb61eb65dd1b7386e6a5.1	00000000 .rodata..Lanon.008ffd896659fb61eb65dd1b7386e6a5.1
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3eec109f7132f81eE	00000028 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::field
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$5ok_or17hb3b3817347480c77E	0000008e core::option::Option<T>::ok_or
00000000 g     F .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7fa4a63a8b7dfa6dE	00000006 <T as core::convert::From<T>>::from
00000000 g     F .text._ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17ha361f31015ba9c1fE	0000009a <core::option::Option<T> as core::fmt::Debug>::fmt
00000000 g     F .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hc5c34342aa7dc908E	0000000c <core::option::Option<T> as core::ops::try::Try>::from_error
00000000 g     F .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h266ad2132c426b62E	00000026 <core::option::Option<T> as core::ops::try::Try>::into_result
00000000 g     F .text._ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h70df41bf340d2af5E	000000a8 <core::option::Option<T> as core::cmp::PartialEq>::eq



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3eec109f7132f81eE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3eec109f7132f81eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <<&T as core::fmt::Debug>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$5ok_or17hb3b3817347480c77E:

00000000 <core::option::Option<T>::ok_or>:
_ZN4core6option15Option$LT$T$GT$5ok_or17hb3b3817347480c77E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:490
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9003      	str	r0, [sp, #12]
   8:	9104      	str	r1, [sp, #16]
   a:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:492
   c:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  10:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  14:	2001      	movs	r0, #1
  16:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  1a:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  1e:	9803      	ldr	r0, [sp, #12]
  20:	2800      	cmp	r0, #0
  22:	9202      	str	r2, [sp, #8]
  24:	9301      	str	r3, [sp, #4]
  26:	9000      	str	r0, [sp, #0]
  28:	d00e      	beq.n	48 <core::option::Option<T>::ok_or+0x48>
  2a:	e7ff      	b.n	2c <core::option::Option<T>::ok_or+0x2c>
  2c:	9800      	ldr	r0, [sp, #0]
  2e:	2801      	cmp	r0, #1
  30:	d001      	beq.n	36 <core::option::Option<T>::ok_or+0x36>
  32:	e7ff      	b.n	34 <core::option::Option<T>::ok_or+0x34>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:495
  34:	defe      	udf	#254	; 0xfe
  36:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:492
  38:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  3c:	9904      	ldr	r1, [sp, #16]
  3e:	9108      	str	r1, [sp, #32]
  40:	9908      	ldr	r1, [sp, #32]
  42:	9107      	str	r1, [sp, #28]
  44:	9006      	str	r0, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:491
  46:	e005      	b.n	54 <core::option::Option<T>::ok_or+0x54>
  48:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:493
  4a:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  4e:	2001      	movs	r0, #1
  50:	9006      	str	r0, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:491
  52:	e7ff      	b.n	54 <core::option::Option<T>::ok_or+0x54>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:495
  54:	f89d 0026 	ldrb.w	r0, [sp, #38]	; 0x26
  58:	07c0      	lsls	r0, r0, #31
  5a:	2800      	cmp	r0, #0
  5c:	d104      	bne.n	68 <core::option::Option<T>::ok_or+0x68>
  5e:	e7ff      	b.n	60 <core::option::Option<T>::ok_or+0x60>
  60:	9803      	ldr	r0, [sp, #12]
  62:	2801      	cmp	r0, #1
  64:	d008      	beq.n	78 <core::option::Option<T>::ok_or+0x78>
  66:	e011      	b.n	8c <core::option::Option<T>::ok_or+0x8c>
  68:	2000      	movs	r0, #0
  6a:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
  6e:	e7f7      	b.n	60 <core::option::Option<T>::ok_or+0x60>
  70:	9806      	ldr	r0, [sp, #24]
  72:	9907      	ldr	r1, [sp, #28]
  74:	b00a      	add	sp, #40	; 0x28
  76:	4770      	bx	lr
  78:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  7c:	07c0      	lsls	r0, r0, #31
  7e:	2800      	cmp	r0, #0
  80:	d0f6      	beq.n	70 <core::option::Option<T>::ok_or+0x70>
  82:	e7ff      	b.n	84 <core::option::Option<T>::ok_or+0x84>
  84:	2000      	movs	r0, #0
  86:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  8a:	e7f1      	b.n	70 <core::option::Option<T>::ok_or+0x70>
  8c:	e7f0      	b.n	70 <core::option::Option<T>::ok_or+0x70>

Disassembly of section .text._ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7fa4a63a8b7dfa6dE:

00000000 <<T as core::convert::From<T>>::from>:
_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h7fa4a63a8b7dfa6dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/convert.rs:547
   0:	b081      	sub	sp, #4
   2:	b001      	add	sp, #4
   4:	4770      	bx	lr

Disassembly of section .text._ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17ha361f31015ba9c1fE:

00000000 <<core::option::Option<T> as core::fmt::Debug>::fmt>:
_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17ha361f31015ba9c1fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	9007      	str	r0, [sp, #28]
  10:	9807      	ldr	r0, [sp, #28]
  12:	6800      	ldr	r0, [r0, #0]
  14:	2800      	cmp	r0, #0
  16:	4601      	mov	r1, r0
  18:	bf18      	it	ne
  1a:	2101      	movne	r1, #1
  1c:	2800      	cmp	r0, #0
  1e:	9203      	str	r2, [sp, #12]
  20:	9302      	str	r3, [sp, #8]
  22:	9101      	str	r1, [sp, #4]
  24:	d005      	beq.n	32 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x32>
  26:	e7ff      	b.n	28 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x28>
  28:	9801      	ldr	r0, [sp, #4]
  2a:	2801      	cmp	r0, #1
  2c:	d012      	beq.n	54 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x54>
  2e:	e7ff      	b.n	30 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x30>
  30:	defe      	udf	#254	; 0xfe
  32:	9905      	ldr	r1, [sp, #20]
  34:	f240 0200 	movw	r2, #0
  38:	f2c0 0200 	movt	r2, #0
  3c:	a808      	add	r0, sp, #32
  3e:	2304      	movs	r3, #4
  40:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  44:	e7ff      	b.n	46 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x46>
  46:	a808      	add	r0, sp, #32
  48:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  4c:	f88d 001b 	strb.w	r0, [sp, #27]
  50:	e7ff      	b.n	52 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x52>
  52:	e01e      	b.n	92 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x92>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:156
  54:	9807      	ldr	r0, [sp, #28]
  56:	900b      	str	r0, [sp, #44]	; 0x2c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  58:	9905      	ldr	r1, [sp, #20]
  5a:	f240 0200 	movw	r2, #0
  5e:	f2c0 0200 	movt	r2, #0
  62:	a80c      	add	r0, sp, #48	; 0x30
  64:	2304      	movs	r3, #4
  66:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  6a:	e7ff      	b.n	6c <<core::option::Option<T> as core::fmt::Debug>::fmt+0x6c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:156
  6c:	980b      	ldr	r0, [sp, #44]	; 0x2c
  6e:	900f      	str	r0, [sp, #60]	; 0x3c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  70:	f240 0200 	movw	r2, #0
  74:	f2c0 0200 	movt	r2, #0
  78:	a80c      	add	r0, sp, #48	; 0x30
  7a:	a90f      	add	r1, sp, #60	; 0x3c
  7c:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::field>
  80:	9000      	str	r0, [sp, #0]
  82:	e7ff      	b.n	84 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x84>
  84:	a80c      	add	r0, sp, #48	; 0x30
  86:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  8a:	f88d 001b 	strb.w	r0, [sp, #27]
  8e:	e7ff      	b.n	90 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x90>
  90:	e7ff      	b.n	92 <<core::option::Option<T> as core::fmt::Debug>::fmt+0x92>
  92:	f89d 001b 	ldrb.w	r0, [sp, #27]
  96:	b010      	add	sp, #64	; 0x40
  98:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hc5c34342aa7dc908E:

00000000 <<core::option::Option<T> as core::ops::try::Try>::from_error>:
_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hc5c34342aa7dc908E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:1412
   0:	b082      	sub	sp, #8
   2:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:1413
   4:	9001      	str	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:1414
   6:	9801      	ldr	r0, [sp, #4]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h266ad2132c426b62E:

00000000 <<core::option::Option<T> as core::ops::try::Try>::into_result>:
_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h266ad2132c426b62E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:1402
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:1403
   c:	9805      	ldr	r0, [sp, #20]
   e:	9906      	ldr	r1, [sp, #24]
  10:	9204      	str	r2, [sp, #16]
  12:	9303      	str	r3, [sp, #12]
  14:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::ops::try::Try>::into_result>
  18:	9002      	str	r0, [sp, #8]
  1a:	9101      	str	r1, [sp, #4]
  1c:	e7ff      	b.n	1e <<core::option::Option<T> as core::ops::try::Try>::into_result+0x1e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:1404
  1e:	9802      	ldr	r0, [sp, #8]
  20:	9901      	ldr	r1, [sp, #4]
  22:	b008      	add	sp, #32
  24:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h70df41bf340d2af5E:

00000000 <<core::option::Option<T> as core::cmp::PartialEq>::eq>:
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h70df41bf340d2af5E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
   0:	b580      	push	{r7, lr}
   2:	b094      	sub	sp, #80	; 0x50
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9007      	str	r0, [sp, #28]
   a:	9108      	str	r1, [sp, #32]
   c:	9807      	ldr	r0, [sp, #28]
   e:	6800      	ldr	r0, [r0, #0]
  10:	2800      	cmp	r0, #0
  12:	bf18      	it	ne
  14:	2001      	movne	r0, #1
  16:	f04f 0100 	mov.w	r1, #0
  1a:	9111      	str	r1, [sp, #68]	; 0x44
  1c:	9010      	str	r0, [sp, #64]	; 0x40
  1e:	9810      	ldr	r0, [sp, #64]	; 0x40
  20:	9911      	ldr	r1, [sp, #68]	; 0x44
  22:	9206      	str	r2, [sp, #24]
  24:	9305      	str	r3, [sp, #20]
  26:	9004      	str	r0, [sp, #16]
  28:	9103      	str	r1, [sp, #12]
  2a:	e7ff      	b.n	2c <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x2c>
  2c:	9804      	ldr	r0, [sp, #16]
  2e:	900a      	str	r0, [sp, #40]	; 0x28
  30:	9908      	ldr	r1, [sp, #32]
  32:	6809      	ldr	r1, [r1, #0]
  34:	2900      	cmp	r1, #0
  36:	bf18      	it	ne
  38:	2101      	movne	r1, #1
  3a:	f04f 0200 	mov.w	r2, #0
  3e:	9213      	str	r2, [sp, #76]	; 0x4c
  40:	9112      	str	r1, [sp, #72]	; 0x48
  42:	9912      	ldr	r1, [sp, #72]	; 0x48
  44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  46:	9102      	str	r1, [sp, #8]
  48:	9201      	str	r2, [sp, #4]
  4a:	e7ff      	b.n	4c <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x4c>
  4c:	9802      	ldr	r0, [sp, #8]
  4e:	900b      	str	r0, [sp, #44]	; 0x2c
  50:	990a      	ldr	r1, [sp, #40]	; 0x28
  52:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  54:	4291      	cmp	r1, r2
  56:	d109      	bne.n	6c <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x6c>
  58:	e7ff      	b.n	5a <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x5a>
  5a:	9807      	ldr	r0, [sp, #28]
  5c:	9908      	ldr	r1, [sp, #32]
  5e:	900c      	str	r0, [sp, #48]	; 0x30
  60:	910d      	str	r1, [sp, #52]	; 0x34
  62:	980c      	ldr	r0, [sp, #48]	; 0x30
  64:	6800      	ldr	r0, [r0, #0]
  66:	2800      	cmp	r0, #0
  68:	d113      	bne.n	92 <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x92>
  6a:	e00e      	b.n	8a <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x8a>
  6c:	2000      	movs	r0, #0
  6e:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  72:	e015      	b.n	a0 <<core::option::Option<T> as core::cmp::PartialEq>::eq+0xa0>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:156
  74:	980c      	ldr	r0, [sp, #48]	; 0x30
  76:	900e      	str	r0, [sp, #56]	; 0x38
  78:	980d      	ldr	r0, [sp, #52]	; 0x34
  7a:	900f      	str	r0, [sp, #60]	; 0x3c
  7c:	980e      	ldr	r0, [sp, #56]	; 0x38
  7e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  80:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq>
  84:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  88:	e008      	b.n	9c <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x9c>
  8a:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  8c:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
  90:	e005      	b.n	9e <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x9e>
  92:	980d      	ldr	r0, [sp, #52]	; 0x34
  94:	6800      	ldr	r0, [r0, #0]
  96:	2800      	cmp	r0, #0
  98:	d1ec      	bne.n	74 <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x74>
  9a:	e7f6      	b.n	8a <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x8a>
  9c:	e7ff      	b.n	9e <<core::option::Option<T> as core::cmp::PartialEq>::eq+0x9e>
  9e:	e7ff      	b.n	a0 <<core::option::Option<T> as core::cmp::PartialEq>::eq+0xa0>
  a0:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
  a4:	b014      	add	sp, #80	; 0x50
  a6:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.3ohr3keow2ao2bqn.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3ohr3keow2ao2bqn
00000212 l       .debug_str	00000000 
00000413 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
0000008d l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
000000cd l       .debug_str	00000000 
000000d1 l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000d7 l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
000000e2 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
00000104 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
0000014e l       .debug_str	00000000 
0000017d l       .debug_str	00000000 
00000182 l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
000001d9 l       .debug_str	00000000 
000001db l       .debug_str	00000000 
000001e1 l       .debug_str	00000000 
000001e5 l       .debug_str	00000000 
000001ea l       .debug_str	00000000 
000001ef l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
000001fb l       .debug_str	00000000 
00000202 l       .debug_str	00000000 
00000207 l       .debug_str	00000000 
0000020d l       .debug_str	00000000 
000003fa l       .debug_str	00000000 
00000216 l       .debug_str	00000000 
00000224 l       .debug_str	00000000 
0000022e l       .debug_str	00000000 
00000232 l       .debug_str	00000000 
0000023a l       .debug_str	00000000 
00000242 l       .debug_str	00000000 
00000249 l       .debug_str	00000000 
0000025d l       .debug_str	00000000 
00000269 l       .debug_str	00000000 
00000274 l       .debug_str	00000000 
0000027b l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
0000028b l       .debug_str	00000000 
00000291 l       .debug_str	00000000 
00000294 l       .debug_str	00000000 
000002a3 l       .debug_str	00000000 
000002aa l       .debug_str	00000000 
000002ae l       .debug_str	00000000 
000002b7 l       .debug_str	00000000 
000002c3 l       .debug_str	00000000 
000002dc l       .debug_str	00000000 
000002e1 l       .debug_str	00000000 
000002f2 l       .debug_str	00000000 
000002fc l       .debug_str	00000000 
0000035a l       .debug_str	00000000 
00000365 l       .debug_str	00000000 
00000382 l       .debug_str	00000000 
00000386 l       .debug_str	00000000 
0000038e l       .debug_str	00000000 
000003a5 l       .debug_str	00000000 
000003c9 l       .debug_str	00000000 
000003e5 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
000003f3 l       .debug_str	00000000 
0000041d l       .debug_str	00000000 
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h44c685770c3cf9e5E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h44c685770c3cf9e5E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h44c685770c3cf9e5E	00000028 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 <mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h44c685770c3cf9e5E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h44c685770c3cf9e5E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	9203      	str	r2, [sp, #12]
  14:	9302      	str	r3, [sp, #8]
  16:	f7ff fffe 	bl	0 <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt>
  1a:	9001      	str	r0, [sp, #4]
  1c:	e7ff      	b.n	1e <<&T as core::fmt::Debug>::fmt+0x1e>
  1e:	9801      	ldr	r0, [sp, #4]
  20:	f000 0001 	and.w	r0, r0, #1
  24:	b006      	add	sp, #24
  26:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.3z8aw6wisyc7u5tm.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3z8aw6wisyc7u5tm
00000259 l       .debug_str	00000000 
000004c7 l       .debug_str	00000000 
000004e0 l       .debug_str	00000000 
000004c1 l       .debug_str	00000000 
000004dc l       .debug_str	00000000 
000004bb l       .debug_str	00000000 
000004d1 l       .debug_str	00000000 
000004b9 l       .debug_str	00000000 
000004cd l       .debug_str	00000000 
000004b7 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000084 l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000a1 l       .debug_str	00000000 
000000af l       .debug_str	00000000 
000000b3 l       .debug_str	00000000 
000000b5 l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000d8 l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
00000191 l       .debug_str	00000000 
0000019a l       .debug_str	00000000 
0000019f l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001d7 l       .debug_str	00000000 
000004af l       .debug_str	00000000 
00000268 l       .debug_str	00000000 
00000271 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000002f4 l       .debug_str	00000000 
00000305 l       .debug_str	00000000 
00000358 l       .debug_str	00000000 
00000368 l       .debug_str	00000000 
0000036d l       .debug_str	00000000 
000003a3 l       .debug_str	00000000 
000003bc l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
00000413 l       .debug_str	00000000 
00000439 l       .debug_str	00000000 
00000443 l       .debug_str	00000000 
0000046a l       .debug_str	00000000 
00000475 l       .debug_str	00000000 
00000478 l       .debug_str	00000000 
000004a2 l       .debug_str	00000000 
000004cb l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3ptr19swap_nonoverlapping17ha3384305dc7c4be9E	00000000 .text._ZN4core3ptr19swap_nonoverlapping17ha3384305dc7c4be9E
00000000 l    d  .text._ZN4core3ptr23swap_nonoverlapping_one17hf704b0957311fe22E	00000000 .text._ZN4core3ptr23swap_nonoverlapping_one17hf704b0957311fe22E
00000000 l    d  .text._ZN4core3ptr4read17hbb03a88aef84744cE	00000000 .text._ZN4core3ptr4read17hbb03a88aef84744cE
00000000 l    d  .text._ZN4core3ptr5write17hd998e398d0d5a877E	00000000 .text._ZN4core3ptr5write17hd998e398d0d5a877E
00000000 l    d  .text._ZN4core3ptr8null_mut17hc0e3bb7e4d27c81eE	00000000 .text._ZN4core3ptr8null_mut17hc0e3bb7e4d27c81eE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::mem::size_of
00000000 g     F .text._ZN4core3ptr19swap_nonoverlapping17ha3384305dc7c4be9E	00000042 core::ptr::swap_nonoverlapping
00000000 g     F .text._ZN4core3ptr23swap_nonoverlapping_one17hf704b0957311fe22E	00000054 core::ptr::swap_nonoverlapping_one
00000000         *UND*	00000000 .hidden core::ptr::swap_nonoverlapping_bytes
00000000 g     F .text._ZN4core3ptr4read17hbb03a88aef84744cE	00000042 core::ptr::read
00000000 g     F .text._ZN4core3ptr5write17hd998e398d0d5a877E	00000018 core::ptr::write
00000000 g     F .text._ZN4core3ptr8null_mut17hc0e3bb7e4d27c81eE	00000004 core::ptr::null_mut



Disassembly of section .text._ZN4core3ptr19swap_nonoverlapping17ha3384305dc7c4be9E:

00000000 <core::ptr::swap_nonoverlapping>:
_ZN4core3ptr19swap_nonoverlapping17ha3384305dc7c4be9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:351
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9004      	str	r0, [sp, #16]
   c:	9105      	str	r1, [sp, #20]
   e:	9206      	str	r2, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:352
  10:	9804      	ldr	r0, [sp, #16]
  12:	9007      	str	r0, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:353
  14:	9805      	ldr	r0, [sp, #20]
  16:	9008      	str	r0, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:354
  18:	9303      	str	r3, [sp, #12]
  1a:	f8cd c008 	str.w	ip, [sp, #8]
  1e:	f8cd e004 	str.w	lr, [sp, #4]
  22:	f7ff fffe 	bl	0 <core::mem::size_of>
  26:	9000      	str	r0, [sp, #0]
  28:	e7ff      	b.n	2a <core::ptr::swap_nonoverlapping+0x2a>
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9900      	ldr	r1, [sp, #0]
  2e:	4348      	muls	r0, r1
  30:	9009      	str	r0, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:355
  32:	9807      	ldr	r0, [sp, #28]
  34:	9908      	ldr	r1, [sp, #32]
  36:	9a09      	ldr	r2, [sp, #36]	; 0x24
  38:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_bytes>
  3c:	e7ff      	b.n	3e <core::ptr::swap_nonoverlapping+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:356
  3e:	b00a      	add	sp, #40	; 0x28
  40:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr23swap_nonoverlapping_one17hf704b0957311fe22E:

00000000 <core::ptr::swap_nonoverlapping_one>:
_ZN4core3ptr23swap_nonoverlapping_one17hf704b0957311fe22E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:359
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9003      	str	r0, [sp, #12]
   a:	9104      	str	r1, [sp, #16]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:362
   c:	9202      	str	r2, [sp, #8]
   e:	9301      	str	r3, [sp, #4]
  10:	f7ff fffe 	bl	0 <core::mem::size_of>
  14:	9000      	str	r0, [sp, #0]
  16:	e7ff      	b.n	18 <core::ptr::swap_nonoverlapping_one+0x18>
  18:	9800      	ldr	r0, [sp, #0]
  1a:	281f      	cmp	r0, #31
  1c:	d811      	bhi.n	42 <core::ptr::swap_nonoverlapping_one+0x42>
  1e:	e7ff      	b.n	20 <core::ptr::swap_nonoverlapping_one+0x20>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:363
  20:	9803      	ldr	r0, [sp, #12]
  22:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  26:	9005      	str	r0, [sp, #20]
  28:	e7ff      	b.n	2a <core::ptr::swap_nonoverlapping_one+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:364
  2a:	9804      	ldr	r0, [sp, #16]
  2c:	9903      	ldr	r1, [sp, #12]
  2e:	2201      	movs	r2, #1
  30:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  34:	e7ff      	b.n	36 <core::ptr::swap_nonoverlapping_one+0x36>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:365
  36:	9804      	ldr	r0, [sp, #16]
  38:	9905      	ldr	r1, [sp, #20]
  3a:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  3e:	e7ff      	b.n	40 <core::ptr::swap_nonoverlapping_one+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:362
  40:	e006      	b.n	50 <core::ptr::swap_nonoverlapping_one+0x50>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:367
  42:	9803      	ldr	r0, [sp, #12]
  44:	9904      	ldr	r1, [sp, #16]
  46:	2201      	movs	r2, #1
  48:	f7ff fffe 	bl	0 <core::ptr::swap_nonoverlapping_one>
  4c:	e7ff      	b.n	4e <core::ptr::swap_nonoverlapping_one+0x4e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:362
  4e:	e7ff      	b.n	50 <core::ptr::swap_nonoverlapping_one+0x50>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:369
  50:	b006      	add	sp, #24
  52:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr4read17hbb03a88aef84744cE:

00000000 <core::ptr::read>:
_ZN4core3ptr4read17hbb03a88aef84744cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:574
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	4601      	mov	r1, r0
   6:	9005      	str	r0, [sp, #20]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h930980d3899667aeE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:237
   8:	9807      	ldr	r0, [sp, #28]
_ZN4core3ptr4read17hbb03a88aef84744cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:575
   a:	9006      	str	r0, [sp, #24]
   c:	9104      	str	r1, [sp, #16]
   e:	e7ff      	b.n	10 <core::ptr::read+0x10>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  10:	9805      	ldr	r0, [sp, #20]
  12:	a906      	add	r1, sp, #24
  14:	910a      	str	r1, [sp, #40]	; 0x28
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hce5635b48ea88ba3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  16:	990a      	ldr	r1, [sp, #40]	; 0x28
  18:	910b      	str	r1, [sp, #44]	; 0x2c
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17haee3729f4d123c99E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
_ZN4core3ptr4read17hbb03a88aef84744cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:576
  1c:	9003      	str	r0, [sp, #12]
  1e:	9102      	str	r1, [sp, #8]
  20:	e7ff      	b.n	22 <core::ptr::read+0x22>
  22:	2201      	movs	r2, #1
  24:	9803      	ldr	r0, [sp, #12]
  26:	9902      	ldr	r1, [sp, #8]
  28:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  2c:	e7ff      	b.n	2e <core::ptr::read+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  2e:	9806      	ldr	r0, [sp, #24]
  30:	9008      	str	r0, [sp, #32]
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hcda4af8a54ac3c9aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:410
  32:	9808      	ldr	r0, [sp, #32]
  34:	9009      	str	r0, [sp, #36]	; 0x24
_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h57c18520114a899cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:85
  36:	9809      	ldr	r0, [sp, #36]	; 0x24
_ZN4core3ptr4read17hbb03a88aef84744cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:577
  38:	9001      	str	r0, [sp, #4]
  3a:	e7ff      	b.n	3c <core::ptr::read+0x3c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:578
  3c:	9801      	ldr	r0, [sp, #4]
  3e:	b00c      	add	sp, #48	; 0x30
  40:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr5write17hd998e398d0d5a877E:

00000000 <core::ptr::write>:
_ZN4core3ptr5write17hd998e398d0d5a877E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:735
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:736
   a:	9802      	ldr	r0, [sp, #8]
   c:	9903      	ldr	r1, [sp, #12]
   e:	6001      	str	r1, [r0, #0]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:737
  10:	9201      	str	r2, [sp, #4]
  12:	9300      	str	r3, [sp, #0]
  14:	b004      	add	sp, #16
  16:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr8null_mut17hc0e3bb7e4d27c81eE:

00000000 <core::ptr::null_mut>:
_ZN4core3ptr8null_mut17hc0e3bb7e4d27c81eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:231
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

mynewt-d7fd96264f78b961.46egs5mv0r9490hu.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 46egs5mv0r9490hu
00000b02 l       .debug_str	00000000 
00002309 l       .debug_str	00000000 
0000276b l       .debug_str	00000000 
00002293 l       .debug_str	00000000 
00002760 l       .debug_str	00000000 
0000221d l       .debug_str	00000000 
00002755 l       .debug_str	00000000 
000021a7 l       .debug_str	00000000 
00002750 l       .debug_str	00000000 
0000219b l       .debug_str	00000000 
0000274b l       .debug_str	00000000 
00002192 l       .debug_str	00000000 
00002746 l       .debug_str	00000000 
00002126 l       .debug_str	00000000 
00002741 l       .debug_str	00000000 
0000210c l       .debug_str	00000000 
0000273c l       .debug_str	00000000 
00002092 l       .debug_str	00000000 
0000272e l       .debug_str	00000000 
00002022 l       .debug_str	00000000 
00002729 l       .debug_str	00000000 
00001fa4 l       .debug_str	00000000 
00002721 l       .debug_str	00000000 
00001f9b l       .debug_str	00000000 
0000271c l       .debug_str	00000000 
00001f92 l       .debug_str	00000000 
00002716 l       .debug_str	00000000 
00001f89 l       .debug_str	00000000 
00002710 l       .debug_str	00000000 
00001f81 l       .debug_str	00000000 
00002709 l       .debug_str	00000000 
00001f7c l       .debug_str	00000000 
00002700 l       .debug_str	00000000 
00001f74 l       .debug_str	00000000 
000026f8 l       .debug_str	00000000 
00001f0b l       .debug_str	00000000 
000026f4 l       .debug_str	00000000 
00001ef4 l       .debug_str	00000000 
000026ef l       .debug_str	00000000 
00001e7d l       .debug_str	00000000 
000026ce l       .debug_str	00000000 
00001e6e l       .debug_str	00000000 
000026c9 l       .debug_str	00000000 
00001e62 l       .debug_str	00000000 
000026bc l       .debug_str	00000000 
00001de5 l       .debug_str	00000000 
000026b8 l       .debug_str	00000000 
00001d70 l       .debug_str	00000000 
000026ae l       .debug_str	00000000 
00001d48 l       .debug_str	00000000 
0000267b l       .debug_str	00000000 
00001d3d l       .debug_str	00000000 
00002633 l       .debug_str	00000000 
00001d36 l       .debug_str	00000000 
00002623 l       .debug_str	00000000 
00001cc7 l       .debug_str	00000000 
000025e9 l       .debug_str	00000000 
00001c5c l       .debug_str	00000000 
000025c1 l       .debug_str	00000000 
00001be3 l       .debug_str	00000000 
000025bd l       .debug_str	00000000 
00001b6a l       .debug_str	00000000 
000025bb l       .debug_str	00000000 
00001afe l       .debug_str	00000000 
000025b8 l       .debug_str	00000000 
00001a84 l       .debug_str	00000000 
000025b5 l       .debug_str	00000000 
00001a7a l       .debug_str	00000000 
000025aa l       .debug_str	00000000 
00001a74 l       .debug_str	00000000 
00002575 l       .debug_str	00000000 
00001a6c l       .debug_str	00000000 
0000256e l       .debug_str	00000000 
00001a02 l       .debug_str	00000000 
00002563 l       .debug_str	00000000 
000019ea l       .debug_str	00000000 
0000255a l       .debug_str	00000000 
000019bd l       .debug_str	00000000 
000024f3 l       .debug_str	00000000 
00001945 l       .debug_str	00000000 
000024de l       .debug_str	00000000 
000018dd l       .debug_str	00000000 
00002469 l       .debug_str	00000000 
000018c7 l       .debug_str	00000000 
0000245c l       .debug_str	00000000 
000018a6 l       .debug_str	00000000 
000023ef l       .debug_str	00000000 
0000189e l       .debug_str	00000000 
000023e0 l       .debug_str	00000000 
00001883 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a7 l       .debug_str	00000000 
000000ae l       .debug_str	00000000 
000000b2 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000d0 l       .debug_str	00000000 
000000dd l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000110 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
0000017d l       .debug_str	00000000 
00000184 l       .debug_str	00000000 
00000187 l       .debug_str	00000000 
00000190 l       .debug_str	00000000 
00000204 l       .debug_str	00000000 
0000020c l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000223 l       .debug_str	00000000 
0000022b l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
0000025c l       .debug_str	00000000 
00000268 l       .debug_str	00000000 
00000277 l       .debug_str	00000000 
0000027b l       .debug_str	00000000 
00000286 l       .debug_str	00000000 
00000292 l       .debug_str	00000000 
000002b9 l       .debug_str	00000000 
000002c4 l       .debug_str	00000000 
000002cf l       .debug_str	00000000 
000002e0 l       .debug_str	00000000 
000002e5 l       .debug_str	00000000 
000002f9 l       .debug_str	00000000 
00000380 l       .debug_str	00000000 
0000038a l       .debug_str	00000000 
00000391 l       .debug_str	00000000 
00000398 l       .debug_str	00000000 
0000039c l       .debug_str	00000000 
000003a1 l       .debug_str	00000000 
000003d0 l       .debug_str	00000000 
000003e7 l       .debug_str	00000000 
00000444 l       .debug_str	00000000 
00000446 l       .debug_str	00000000 
0000044b l       .debug_str	00000000 
0000044f l       .debug_str	00000000 
000004b4 l       .debug_str	00000000 
000004bc l       .debug_str	00000000 
000004c5 l       .debug_str	00000000 
000004dd l       .debug_str	00000000 
0000050e l       .debug_str	00000000 
00000534 l       .debug_str	00000000 
000005ac l       .debug_str	00000000 
00000623 l       .debug_str	00000000 
0000062d l       .debug_str	00000000 
00000633 l       .debug_str	00000000 
0000066b l       .debug_str	00000000 
000006ab l       .debug_str	00000000 
000006b2 l       .debug_str	00000000 
000006ba l       .debug_str	00000000 
000006c3 l       .debug_str	00000000 
000006e5 l       .debug_str	00000000 
000006fc l       .debug_str	00000000 
00000765 l       .debug_str	00000000 
000007dd l       .debug_str	00000000 
000007e8 l       .debug_str	00000000 
000007f2 l       .debug_str	00000000 
00000819 l       .debug_str	00000000 
00000831 l       .debug_str	00000000 
0000089b l       .debug_str	00000000 
000008a5 l       .debug_str	00000000 
000008b0 l       .debug_str	00000000 
000008b9 l       .debug_str	00000000 
000008c4 l       .debug_str	00000000 
000008d0 l       .debug_str	00000000 
000008d4 l       .debug_str	00000000 
000008dd l       .debug_str	00000000 
000008e4 l       .debug_str	00000000 
000008ec l       .debug_str	00000000 
000008f4 l       .debug_str	00000000 
000008fe l       .debug_str	00000000 
00000904 l       .debug_str	00000000 
0000090b l       .debug_str	00000000 
00000915 l       .debug_str	00000000 
0000091c l       .debug_str	00000000 
00000949 l       .debug_str	00000000 
0000097e l       .debug_str	00000000 
00000984 l       .debug_str	00000000 
0000098a l       .debug_str	00000000 
00000999 l       .debug_str	00000000 
000009a9 l       .debug_str	00000000 
000009b9 l       .debug_str	00000000 
000009c1 l       .debug_str	00000000 
000009ea l       .debug_str	00000000 
00000a48 l       .debug_str	00000000 
00000aae l       .debug_str	00000000 
00000ab5 l       .debug_str	00000000 
00000abd l       .debug_str	00000000 
00000ac6 l       .debug_str	00000000 
00000ae4 l       .debug_str	00000000 
00000af4 l       .debug_str	00000000 
0000186f l       .debug_str	00000000 
00000b0d l       .debug_str	00000000 
00000b1a l       .debug_str	00000000 
00000b29 l       .debug_str	00000000 
00000b3f l       .debug_str	00000000 
00000b49 l       .debug_str	00000000 
00000b52 l       .debug_str	00000000 
00000b5b l       .debug_str	00000000 
00000b81 l       .debug_str	00000000 
00000b97 l       .debug_str	00000000 
00000ba2 l       .debug_str	00000000 
00000bb8 l       .debug_str	00000000 
00000bc0 l       .debug_str	00000000 
00000be1 l       .debug_str	00000000 
00000bea l       .debug_str	00000000 
00000bf3 l       .debug_str	00000000 
00000bfd l       .debug_str	00000000 
00000c76 l       .debug_str	00000000 
00000c7b l       .debug_str	00000000 
00000c81 l       .debug_str	00000000 
00000ca4 l       .debug_str	00000000 
00000cac l       .debug_str	00000000 
00000cb3 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000d24 l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000dff l       .debug_str	00000000 
00000e09 l       .debug_str	00000000 
00000e12 l       .debug_str	00000000 
00000e22 l       .debug_str	00000000 
00000e9a l       .debug_str	00000000 
00000ea4 l       .debug_str	00000000 
00000eac l       .debug_str	00000000 
00000eb3 l       .debug_str	00000000 
00000eba l       .debug_str	00000000 
00000ebf l       .debug_str	00000000 
00000ec9 l       .debug_str	00000000 
00000eec l       .debug_str	00000000 
00000f14 l       .debug_str	00000000 
00000f2c l       .debug_str	00000000 
00000f96 l       .debug_str	00000000 
0000100b l       .debug_str	00000000 
00001017 l       .debug_str	00000000 
0000101f l       .debug_str	00000000 
00001079 l       .debug_str	00000000 
000010db l       .debug_str	00000000 
000010e6 l       .debug_str	00000000 
0000112d l       .debug_str	00000000 
0000117c l       .debug_str	00000000 
00001186 l       .debug_str	00000000 
000011c3 l       .debug_str	00000000 
00001208 l       .debug_str	00000000 
00001211 l       .debug_str	00000000 
00001221 l       .debug_str	00000000 
00001229 l       .debug_str	00000000 
0000127e l       .debug_str	00000000 
000012db l       .debug_str	00000000 
000012e7 l       .debug_str	00000000 
000012f0 l       .debug_str	00000000 
000012fc l       .debug_str	00000000 
00001308 l       .debug_str	00000000 
00001311 l       .debug_str	00000000 
00001319 l       .debug_str	00000000 
00001321 l       .debug_str	00000000 
00001328 l       .debug_str	00000000 
00001348 l       .debug_str	00000000 
0000135d l       .debug_str	00000000 
000013c4 l       .debug_str	00000000 
0000143f l       .debug_str	00000000 
0000144f l       .debug_str	00000000 
00001458 l       .debug_str	00000000 
00001466 l       .debug_str	00000000 
00001474 l       .debug_str	00000000 
00001480 l       .debug_str	00000000 
0000148c l       .debug_str	00000000 
00001495 l       .debug_str	00000000 
000014a4 l       .debug_str	00000000 
000014ac l       .debug_str	00000000 
000014c5 l       .debug_str	00000000 
000014d6 l       .debug_str	00000000 
000014e0 l       .debug_str	00000000 
000014e8 l       .debug_str	00000000 
00001502 l       .debug_str	00000000 
0000150e l       .debug_str	00000000 
00001533 l       .debug_str	00000000 
0000154c l       .debug_str	00000000 
00001551 l       .debug_str	00000000 
00001559 l       .debug_str	00000000 
00001564 l       .debug_str	00000000 
00001588 l       .debug_str	00000000 
00001591 l       .debug_str	00000000 
0000159e l       .debug_str	00000000 
000015c4 l       .debug_str	00000000 
000015df l       .debug_str	00000000 
0000164c l       .debug_str	00000000 
000016c9 l       .debug_str	00000000 
000016d1 l       .debug_str	00000000 
000016db l       .debug_str	00000000 
000016ea l       .debug_str	00000000 
00001712 l       .debug_str	00000000 
0000172f l       .debug_str	00000000 
0000179e l       .debug_str	00000000 
00001814 l       .debug_str	00000000 
0000181c l       .debug_str	00000000 
00001825 l       .debug_str	00000000 
00001833 l       .debug_str	00000000 
0000183a l       .debug_str	00000000 
00001841 l       .debug_str	00000000 
00001849 l       .debug_str	00000000 
00001854 l       .debug_str	00000000 
0000185b l       .debug_str	00000000 
0000186b l       .debug_str	00000000 
00002371 l       .debug_str	00000000 
00000000 l    d  .text._ZN82_$LT$mynewt..kernel..os..os_time_change_info$u20$as$u20$core..default..Default$GT$7default17hc030fe43d1a70e6bE	00000000 .text._ZN82_$LT$mynewt..kernel..os..os_time_change_info$u20$as$u20$core..default..Default$GT$7default17hc030fe43d1a70e6bE
00000000 l    d  .text._ZN100_$LT$mynewt..kernel..os..os_time_change_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1efb823f48ba06d4E	00000000 .text._ZN100_$LT$mynewt..kernel..os..os_time_change_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1efb823f48ba06d4E
00000000 l    d  .text._ZN86_$LT$mynewt..kernel..os..os_time_change_listener$u20$as$u20$core..default..Default$GT$7default17hda16c2d1d51efd0dE	00000000 .text._ZN86_$LT$mynewt..kernel..os..os_time_change_listener$u20$as$u20$core..default..Default$GT$7default17hda16c2d1d51efd0dE
00000000 l    d  .text._ZN85_$LT$mynewt..kernel..os..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h5242f70a9d1bdd92E	00000000 .text._ZN85_$LT$mynewt..kernel..os..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h5242f70a9d1bdd92E
00000000 l    d  .text._ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17h7ef5e029f38c2abcE	00000000 .text._ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17h7ef5e029f38c2abcE
00000000 l    d  .text._ZN86_$LT$mynewt..kernel..os..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8e23e38c608ade19E	00000000 .text._ZN86_$LT$mynewt..kernel..os..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8e23e38c608ade19E
00000000 l    d  .text._ZN72_$LT$mynewt..kernel..os..os_eventq$u20$as$u20$core..default..Default$GT$7default17h83409579ab940574E	00000000 .text._ZN72_$LT$mynewt..kernel..os..os_eventq$u20$as$u20$core..default..Default$GT$7default17h83409579ab940574E
00000000 l    d  .text._ZN87_$LT$mynewt..kernel..os..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hefd213eca843716bE	00000000 .text._ZN87_$LT$mynewt..kernel..os..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hefd213eca843716bE
00000000 l    d  .text._ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h08684cb22c364bfcE	00000000 .text._ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h08684cb22c364bfcE
00000000 l    d  .text._ZN78_$LT$mynewt..kernel..os..os_callout_list$u20$as$u20$core..default..Default$GT$7default17hf0c349e2c3e3b6a8E	00000000 .text._ZN78_$LT$mynewt..kernel..os..os_callout_list$u20$as$u20$core..default..Default$GT$7default17hf0c349e2c3e3b6a8E
00000000 l    d  .text._ZN86_$LT$mynewt..kernel..os..hal_timer__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h12832224add79ca2E	00000000 .text._ZN86_$LT$mynewt..kernel..os..hal_timer__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h12832224add79ca2E
00000000 l    d  .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hdfe77dc26f550e6cE	00000000 .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hdfe77dc26f550e6cE
00000000 l    d  .text._ZN83_$LT$mynewt..kernel..os..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h34475298bbe2ef0bE	00000000 .text._ZN83_$LT$mynewt..kernel..os..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h34475298bbe2ef0bE
00000000 l    d  .text._ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17hb2115317bda63ab4E	00000000 .text._ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17hb2115317bda63ab4E
00000000 l    d  .text._ZN89_$LT$mynewt..kernel..os..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h953d51cbbab811eeE	00000000 .text._ZN89_$LT$mynewt..kernel..os..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h953d51cbbab811eeE
00000000 l    d  .text._ZN75_$LT$mynewt..kernel..os..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h6f5102541eb76b41E	00000000 .text._ZN75_$LT$mynewt..kernel..os..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h6f5102541eb76b41E
00000000 l    d  .text._ZN91_$LT$mynewt..kernel..os..os_mbuf_pkthdr__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1bff34588813fd2E	00000000 .text._ZN91_$LT$mynewt..kernel..os..os_mbuf_pkthdr__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1bff34588813fd2E
00000000 l    d  .text._ZN77_$LT$mynewt..kernel..os..os_mbuf_pkthdr$u20$as$u20$core..default..Default$GT$7default17h8e5d0a0d622d608fE	00000000 .text._ZN77_$LT$mynewt..kernel..os..os_mbuf_pkthdr$u20$as$u20$core..default..Default$GT$7default17h8e5d0a0d622d608fE
00000000 l    d  .text._ZN84_$LT$mynewt..kernel..os..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hf3f7e2a1ddc2c923E	00000000 .text._ZN84_$LT$mynewt..kernel..os..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hf3f7e2a1ddc2c923E
00000000 l    d  .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h3497f2c8f237f7d3E	00000000 .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h3497f2c8f237f7d3E
00000000 l    d  .text._ZN86_$LT$mynewt..kernel..os..os_mqueue__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0b9b3d1df3b656a2E	00000000 .text._ZN86_$LT$mynewt..kernel..os..os_mqueue__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0b9b3d1df3b656a2E
00000000 l    d  .text._ZN72_$LT$mynewt..kernel..os..os_mqueue$u20$as$u20$core..default..Default$GT$7default17h17f4aa0036bfe93cE	00000000 .text._ZN72_$LT$mynewt..kernel..os..os_mqueue$u20$as$u20$core..default..Default$GT$7default17h17f4aa0036bfe93cE
00000000 l    d  .text._ZN88_$LT$mynewt..kernel..os..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9d25db8149a322e0E	00000000 .text._ZN88_$LT$mynewt..kernel..os..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9d25db8149a322e0E
00000000 l    d  .text._ZN74_$LT$mynewt..kernel..os..os_memblock$u20$as$u20$core..default..Default$GT$7default17h01c480cc50f13e0dE	00000000 .text._ZN74_$LT$mynewt..kernel..os..os_memblock$u20$as$u20$core..default..Default$GT$7default17h01c480cc50f13e0dE
00000000 l    d  .text._ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h7907b5d6966a9ebeE	00000000 .text._ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h7907b5d6966a9ebeE
00000000 l    d  .text._ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hedba43e2ab7d3941E	00000000 .text._ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hedba43e2ab7d3941E
00000000 l    d  .text._ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17he38393b5bba323ffE	00000000 .text._ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17he38393b5bba323ffE
00000000 l    d  .text._ZN77_$LT$mynewt..kernel..os..os_mempool_ext$u20$as$u20$core..default..Default$GT$7default17hdeaa294ea0d66176E	00000000 .text._ZN77_$LT$mynewt..kernel..os..os_mempool_ext$u20$as$u20$core..default..Default$GT$7default17hdeaa294ea0d66176E
00000000 l    d  .text._ZN85_$LT$mynewt..kernel..os..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc955dbfbfe3ef2b6E	00000000 .text._ZN85_$LT$mynewt..kernel..os..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc955dbfbfe3ef2b6E
00000000 l    d  .text._ZN71_$LT$mynewt..kernel..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hc4fd30c764b97cc6E	00000000 .text._ZN71_$LT$mynewt..kernel..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hc4fd30c764b97cc6E
00000000 l    d  .text._ZN92_$LT$mynewt..kernel..os..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb0cd3e9339339a6eE	00000000 .text._ZN92_$LT$mynewt..kernel..os..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb0cd3e9339339a6eE
00000000 l    d  .text._ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h7c3fd2c438f82987E	00000000 .text._ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h7c3fd2c438f82987E
00000000 l    d  .text._ZN88_$LT$mynewt..kernel..os..os_task_obj__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha4b2035a6451f391E	00000000 .text._ZN88_$LT$mynewt..kernel..os..os_task_obj__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha4b2035a6451f391E
00000000 l    d  .text._ZN74_$LT$mynewt..kernel..os..os_task_obj$u20$as$u20$core..default..Default$GT$7default17hd54677656e96c2b6E	00000000 .text._ZN74_$LT$mynewt..kernel..os..os_task_obj$u20$as$u20$core..default..Default$GT$7default17hd54677656e96c2b6E
00000000 l    d  .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h4998dec9a5076fd3E	00000000 .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h4998dec9a5076fd3E
00000000 l    d  .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h339f538966e05bacE	00000000 .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h339f538966e05bacE
00000000 l    d  .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf134369b69fe7b4eE	00000000 .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf134369b69fe7b4eE
00000000 l    d  .text._ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17h2f69d231cf36442eE	00000000 .text._ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17h2f69d231cf36442eE
00000000 l    d  .text._ZN77_$LT$mynewt..kernel..os..os_task_stailq$u20$as$u20$core..default..Default$GT$7default17h9f93e0f012eaa4afE	00000000 .text._ZN77_$LT$mynewt..kernel..os..os_task_stailq$u20$as$u20$core..default..Default$GT$7default17h9f93e0f012eaa4afE
00000000 l    d  .text._ZN75_$LT$mynewt..kernel..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h7bd88c0b8a0182b7E	00000000 .text._ZN75_$LT$mynewt..kernel..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h7bd88c0b8a0182b7E
00000000 l    d  .text._ZN83_$LT$mynewt..kernel..os..os_sem__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h959cd0ebb59edbb3E	00000000 .text._ZN83_$LT$mynewt..kernel..os..os_sem__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h959cd0ebb59edbb3E
00000000 l    d  .text._ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h75d6072c9ac72a90E	00000000 .text._ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h75d6072c9ac72a90E
00000000 l    d  .text._ZN6mynewt6kernel2os10eventq_run17h6ef32da48f4d5d86E	00000000 .text._ZN6mynewt6kernel2os10eventq_run17h6ef32da48f4d5d86E
00000000 l    d  .text._ZN6mynewt6kernel2os15eventq_dflt_get17hc3569ee6b12f336bE	00000000 .text._ZN6mynewt6kernel2os15eventq_dflt_get17hc3569ee6b12f336bE
00000000 l    d  .text._ZN6mynewt6kernel2os9task_init17h5d0ccf81e359e26eE	00000000 .text._ZN6mynewt6kernel2os9task_init17h5d0ccf81e359e26eE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN100_$LT$mynewt..kernel..os..os_time_change_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1efb823f48ba06d4E	00000016 <mynewt::kernel::os::os_time_change_listener__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000 g     F .text._ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17hb2115317bda63ab4E	00000012 <mynewt::kernel::os::os_dev as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h75d6072c9ac72a90E	00000012 <mynewt::kernel::os::os_sem as core::default::Default>::default
00000000         *UND*	00000000 mynewt::Strn::as_ptr
00000000         *UND*	00000000 mynewt::Strn::validate
00000000 g     F .text._ZN6mynewt6kernel2os10eventq_run17h6ef32da48f4d5d86E	00000020 mynewt::kernel::os::eventq_run
00000000 g     F .text._ZN6mynewt6kernel2os15eventq_dflt_get17hc3569ee6b12f336bE	0000001c mynewt::kernel::os::eventq_dflt_get
00000000 g     F .text._ZN6mynewt6kernel2os9task_init17h5d0ccf81e359e26eE	000000d4 mynewt::kernel::os::task_init
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h3497f2c8f237f7d3E	00000012 <mynewt::kernel::os::os_mbuf as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17h2f69d231cf36442eE	00000012 <mynewt::kernel::os::os_task as core::default::Default>::default
00000000 g     F .text._ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17h7ef5e029f38c2abcE	00000012 <mynewt::kernel::os::os_event as core::default::Default>::default
00000000 g     F .text._ZN71_$LT$mynewt..kernel..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hc4fd30c764b97cc6E	00000012 <mynewt::kernel::os::os_mutex as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hdfe77dc26f550e6cE	00000012 <mynewt::kernel::os::hal_timer as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mynewt..kernel..os..os_eventq$u20$as$u20$core..default..Default$GT$7default17h83409579ab940574E	00000012 <mynewt::kernel::os::os_eventq as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mynewt..kernel..os..os_mqueue$u20$as$u20$core..default..Default$GT$7default17h17f4aa0036bfe93cE	00000012 <mynewt::kernel::os::os_mqueue as core::default::Default>::default
00000000 g     F .text._ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h08684cb22c364bfcE	00000012 <mynewt::kernel::os::os_callout as core::default::Default>::default
00000000 g     F .text._ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17he38393b5bba323ffE	00000012 <mynewt::kernel::os::os_mempool as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mynewt..kernel..os..os_memblock$u20$as$u20$core..default..Default$GT$7default17h01c480cc50f13e0dE	00000016 <mynewt::kernel::os::os_memblock as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mynewt..kernel..os..os_task_obj$u20$as$u20$core..default..Default$GT$7default17hd54677656e96c2b6E	00000016 <mynewt::kernel::os::os_task_obj as core::default::Default>::default
00000000 g     F .text._ZN75_$LT$mynewt..kernel..os..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h6f5102541eb76b41E	00000012 <mynewt::kernel::os::os_mbuf_pool as core::default::Default>::default
00000000 g     F .text._ZN75_$LT$mynewt..kernel..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h7bd88c0b8a0182b7E	00000016 <mynewt::kernel::os::os_task_list as core::default::Default>::default
00000000 g     F .text._ZN77_$LT$mynewt..kernel..os..os_mbuf_pkthdr$u20$as$u20$core..default..Default$GT$7default17h8e5d0a0d622d608fE	00000012 <mynewt::kernel::os::os_mbuf_pkthdr as core::default::Default>::default
00000000 g     F .text._ZN77_$LT$mynewt..kernel..os..os_mempool_ext$u20$as$u20$core..default..Default$GT$7default17hdeaa294ea0d66176E	00000012 <mynewt::kernel::os::os_mempool_ext as core::default::Default>::default
00000000 g     F .text._ZN77_$LT$mynewt..kernel..os..os_task_stailq$u20$as$u20$core..default..Default$GT$7default17h9f93e0f012eaa4afE	00000016 <mynewt::kernel::os::os_task_stailq as core::default::Default>::default
00000000 g     F .text._ZN78_$LT$mynewt..kernel..os..os_callout_list$u20$as$u20$core..default..Default$GT$7default17hf0c349e2c3e3b6a8E	00000016 <mynewt::kernel::os::os_callout_list as core::default::Default>::default
00000000 g     F .text._ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h7c3fd2c438f82987E	00000012 <mynewt::kernel::os::os_sanity_check as core::default::Default>::default
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::convert::From<i32>>::from
00000000 g     F .text._ZN82_$LT$mynewt..kernel..os..os_time_change_info$u20$as$u20$core..default..Default$GT$7default17hc030fe43d1a70e6bE	00000012 <mynewt::kernel::os::os_time_change_info as core::default::Default>::default
00000000 g     F .text._ZN83_$LT$mynewt..kernel..os..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h34475298bbe2ef0bE	00000016 <mynewt::kernel::os::os_dev__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN83_$LT$mynewt..kernel..os..os_sem__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h959cd0ebb59edbb3E	00000016 <mynewt::kernel::os::os_sem__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN84_$LT$mynewt..kernel..os..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hf3f7e2a1ddc2c923E	00000016 <mynewt::kernel::os::os_mbuf__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h4998dec9a5076fd3E	00000016 <mynewt::kernel::os::os_task__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h339f538966e05bacE	00000016 <mynewt::kernel::os::os_task__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf134369b69fe7b4eE	00000016 <mynewt::kernel::os::os_task__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN85_$LT$mynewt..kernel..os..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h5242f70a9d1bdd92E	00000016 <mynewt::kernel::os::os_event__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN85_$LT$mynewt..kernel..os..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc955dbfbfe3ef2b6E	00000016 <mynewt::kernel::os::os_mutex__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN86_$LT$mynewt..kernel..os..hal_timer__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h12832224add79ca2E	00000016 <mynewt::kernel::os::hal_timer__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN86_$LT$mynewt..kernel..os..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8e23e38c608ade19E	00000016 <mynewt::kernel::os::os_eventq__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN86_$LT$mynewt..kernel..os..os_mqueue__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0b9b3d1df3b656a2E	00000016 <mynewt::kernel::os::os_mqueue__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN86_$LT$mynewt..kernel..os..os_time_change_listener$u20$as$u20$core..default..Default$GT$7default17hda16c2d1d51efd0dE	00000012 <mynewt::kernel::os::os_time_change_listener as core::default::Default>::default
00000000 g     F .text._ZN87_$LT$mynewt..kernel..os..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hefd213eca843716bE	00000016 <mynewt::kernel::os::os_callout__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h7907b5d6966a9ebeE	00000016 <mynewt::kernel::os::os_mempool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hedba43e2ab7d3941E	00000016 <mynewt::kernel::os::os_mempool__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN88_$LT$mynewt..kernel..os..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9d25db8149a322e0E	00000016 <mynewt::kernel::os::os_memblock__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN88_$LT$mynewt..kernel..os..os_task_obj__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha4b2035a6451f391E	00000016 <mynewt::kernel::os::os_task_obj__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN89_$LT$mynewt..kernel..os..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h953d51cbbab811eeE	00000016 <mynewt::kernel::os::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..kernel..os..os_mbuf_pkthdr__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1bff34588813fd2E	00000016 <mynewt::kernel::os::os_mbuf_pkthdr__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN92_$LT$mynewt..kernel..os..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb0cd3e9339339a6eE	00000016 <mynewt::kernel::os::os_sanity_check__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 os_eventq_dflt_get
00000000         *UND*	00000000 os_eventq_run
00000000         *UND*	00000000 os_task_init



Disassembly of section .text._ZN82_$LT$mynewt..kernel..os..os_time_change_info$u20$as$u20$core..default..Default$GT$7default17hc030fe43d1a70e6bE:

00000000 <<mynewt::kernel::os::os_time_change_info as core::default::Default>::default>:
_ZN82_$LT$mynewt..kernel..os..os_time_change_info$u20$as$u20$core..default..Default$GT$7default17hc030fe43d1a70e6bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:269
    #[doc = " Time zone after change."]
    pub tci_cur_tz: *const os_timezone,
    pub tci_newly_synced: bool,
}
impl Default for os_time_change_info {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:270
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_time_change_info as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:271
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN100_$LT$mynewt..kernel..os..os_time_change_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1efb823f48ba06d4E:

00000000 <<mynewt::kernel::os::os_time_change_listener__bindgen_ty_1 as core::default::Default>::default>:
_ZN100_$LT$mynewt..kernel..os..os_time_change_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1efb823f48ba06d4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:294
#[repr(C)]
pub struct os_time_change_listener__bindgen_ty_1 {
    pub stqe_next: *mut os_time_change_listener,
}
impl Default for os_time_change_listener__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:295
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_time_change_listener__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:296
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN86_$LT$mynewt..kernel..os..os_time_change_listener$u20$as$u20$core..default..Default$GT$7default17hda16c2d1d51efd0dE:

00000000 <<mynewt::kernel::os::os_time_change_listener as core::default::Default>::default>:
_ZN86_$LT$mynewt..kernel..os..os_time_change_listener$u20$as$u20$core..default..Default$GT$7default17hda16c2d1d51efd0dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:299
}
impl Default for os_time_change_listener {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:300
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_time_change_listener as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:301
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN85_$LT$mynewt..kernel..os..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h5242f70a9d1bdd92E:

00000000 <<mynewt::kernel::os::os_event__bindgen_ty_1 as core::default::Default>::default>:
_ZN85_$LT$mynewt..kernel..os..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h5242f70a9d1bdd92E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:407
#[repr(C)]
pub struct os_event__bindgen_ty_1 {
    pub stqe_next: *mut os_event,
}
impl Default for os_event__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:408
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_event__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:409
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17h7ef5e029f38c2abcE:

00000000 <<mynewt::kernel::os::os_event as core::default::Default>::default>:
_ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17h7ef5e029f38c2abcE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:412
}
impl Default for os_event {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:413
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_event as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:414
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN86_$LT$mynewt..kernel..os..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8e23e38c608ade19E:

00000000 <<mynewt::kernel::os::os_eventq__bindgen_ty_1 as core::default::Default>::default>:
_ZN86_$LT$mynewt..kernel..os..os_eventq__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8e23e38c608ade19E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:431
pub struct os_eventq__bindgen_ty_1 {
    pub stqh_first: *mut os_event,
    pub stqh_last: *mut *mut os_event,
}
impl Default for os_eventq__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:432
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_eventq__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:433
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN72_$LT$mynewt..kernel..os..os_eventq$u20$as$u20$core..default..Default$GT$7default17h83409579ab940574E:

00000000 <<mynewt::kernel::os::os_eventq as core::default::Default>::default>:
_ZN72_$LT$mynewt..kernel..os..os_eventq$u20$as$u20$core..default..Default$GT$7default17h83409579ab940574E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:436
}
impl Default for os_eventq {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:437
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_eventq as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:438
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN87_$LT$mynewt..kernel..os..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hefd213eca843716bE:

00000000 <<mynewt::kernel::os::os_callout__bindgen_ty_1 as core::default::Default>::default>:
_ZN87_$LT$mynewt..kernel..os..os_callout__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hefd213eca843716bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:539
pub struct os_callout__bindgen_ty_1 {
    pub tqe_next: *mut os_callout,
    pub tqe_prev: *mut *mut os_callout,
}
impl Default for os_callout__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:540
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_callout__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:541
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h08684cb22c364bfcE:

00000000 <<mynewt::kernel::os::os_callout as core::default::Default>::default>:
_ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h08684cb22c364bfcE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:544
}
impl Default for os_callout {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:545
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_callout as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:546
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN78_$LT$mynewt..kernel..os..os_callout_list$u20$as$u20$core..default..Default$GT$7default17hf0c349e2c3e3b6a8E:

00000000 <<mynewt::kernel::os::os_callout_list as core::default::Default>::default>:
_ZN78_$LT$mynewt..kernel..os..os_callout_list$u20$as$u20$core..default..Default$GT$7default17hf0c349e2c3e3b6a8E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:555
pub struct os_callout_list {
    pub tqh_first: *mut os_callout,
    pub tqh_last: *mut *mut os_callout,
}
impl Default for os_callout_list {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:556
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_callout_list as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:557
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN86_$LT$mynewt..kernel..os..hal_timer__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h12832224add79ca2E:

00000000 <<mynewt::kernel::os::hal_timer__bindgen_ty_1 as core::default::Default>::default>:
_ZN86_$LT$mynewt..kernel..os..hal_timer__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h12832224add79ca2E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:640
pub struct hal_timer__bindgen_ty_1 {
    pub tqe_next: *mut hal_timer,
    pub tqe_prev: *mut *mut hal_timer,
}
impl Default for hal_timer__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:641
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::kernel::os::hal_timer__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:642
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hdfe77dc26f550e6cE:

00000000 <<mynewt::kernel::os::hal_timer as core::default::Default>::default>:
_ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hdfe77dc26f550e6cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:645
}
impl Default for hal_timer {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:646
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::hal_timer as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:647
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN83_$LT$mynewt..kernel..os..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h34475298bbe2ef0bE:

00000000 <<mynewt::kernel::os::os_dev__bindgen_ty_1 as core::default::Default>::default>:
_ZN83_$LT$mynewt..kernel..os..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h34475298bbe2ef0bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:810
#[repr(C)]
pub struct os_dev__bindgen_ty_1 {
    pub stqe_next: *mut os_dev,
}
impl Default for os_dev__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:811
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_dev__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:812
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17hb2115317bda63ab4E:

00000000 <<mynewt::kernel::os::os_dev as core::default::Default>::default>:
_ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17hb2115317bda63ab4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:815
}
impl Default for os_dev {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:816
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_dev as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:817
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN89_$LT$mynewt..kernel..os..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h953d51cbbab811eeE:

00000000 <<mynewt::kernel::os::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default>:
_ZN89_$LT$mynewt..kernel..os..os_mbuf_pool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h953d51cbbab811eeE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:984
#[repr(C)]
pub struct os_mbuf_pool__bindgen_ty_1 {
    pub stqe_next: *mut os_mbuf_pool,
}
impl Default for os_mbuf_pool__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:985
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:986
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN75_$LT$mynewt..kernel..os..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h6f5102541eb76b41E:

00000000 <<mynewt::kernel::os::os_mbuf_pool as core::default::Default>::default>:
_ZN75_$LT$mynewt..kernel..os..os_mbuf_pool$u20$as$u20$core..default..Default$GT$7default17h6f5102541eb76b41E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:989
}
impl Default for os_mbuf_pool {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:990
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_mbuf_pool as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:991
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN91_$LT$mynewt..kernel..os..os_mbuf_pkthdr__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1bff34588813fd2E:

00000000 <<mynewt::kernel::os::os_mbuf_pkthdr__bindgen_ty_1 as core::default::Default>::default>:
_ZN91_$LT$mynewt..kernel..os..os_mbuf_pkthdr__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1bff34588813fd2E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1007
#[repr(C)]
pub struct os_mbuf_pkthdr__bindgen_ty_1 {
    pub stqe_next: *mut os_mbuf_pkthdr,
}
impl Default for os_mbuf_pkthdr__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1008
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_mbuf_pkthdr__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1009
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN77_$LT$mynewt..kernel..os..os_mbuf_pkthdr$u20$as$u20$core..default..Default$GT$7default17h8e5d0a0d622d608fE:

00000000 <<mynewt::kernel::os::os_mbuf_pkthdr as core::default::Default>::default>:
_ZN77_$LT$mynewt..kernel..os..os_mbuf_pkthdr$u20$as$u20$core..default..Default$GT$7default17h8e5d0a0d622d608fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1012
}
impl Default for os_mbuf_pkthdr {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1013
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_mbuf_pkthdr as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1014
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN84_$LT$mynewt..kernel..os..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hf3f7e2a1ddc2c923E:

00000000 <<mynewt::kernel::os::os_mbuf__bindgen_ty_1 as core::default::Default>::default>:
_ZN84_$LT$mynewt..kernel..os..os_mbuf__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hf3f7e2a1ddc2c923E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1038
#[repr(C)]
pub struct os_mbuf__bindgen_ty_1 {
    pub sle_next: *mut os_mbuf,
}
impl Default for os_mbuf__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1039
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_mbuf__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1040
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h3497f2c8f237f7d3E:

00000000 <<mynewt::kernel::os::os_mbuf as core::default::Default>::default>:
_ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h3497f2c8f237f7d3E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1043
}
impl Default for os_mbuf {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1044
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_mbuf as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1045
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN86_$LT$mynewt..kernel..os..os_mqueue__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0b9b3d1df3b656a2E:

00000000 <<mynewt::kernel::os::os_mqueue__bindgen_ty_1 as core::default::Default>::default>:
_ZN86_$LT$mynewt..kernel..os..os_mqueue__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h0b9b3d1df3b656a2E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1060
pub struct os_mqueue__bindgen_ty_1 {
    pub stqh_first: *mut os_mbuf_pkthdr,
    pub stqh_last: *mut *mut os_mbuf_pkthdr,
}
impl Default for os_mqueue__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1061
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_mqueue__bindgen_ty_1 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1062
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN72_$LT$mynewt..kernel..os..os_mqueue$u20$as$u20$core..default..Default$GT$7default17h17f4aa0036bfe93cE:

00000000 <<mynewt::kernel::os::os_mqueue as core::default::Default>::default>:
_ZN72_$LT$mynewt..kernel..os..os_mqueue$u20$as$u20$core..default..Default$GT$7default17h17f4aa0036bfe93cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1065
}
impl Default for os_mqueue {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1066
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_mqueue as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1067
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN88_$LT$mynewt..kernel..os..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9d25db8149a322e0E:

00000000 <<mynewt::kernel::os::os_memblock__bindgen_ty_1 as core::default::Default>::default>:
_ZN88_$LT$mynewt..kernel..os..os_memblock__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h9d25db8149a322e0E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1476
#[repr(C)]
pub struct os_memblock__bindgen_ty_1 {
    pub sle_next: *mut os_memblock,
}
impl Default for os_memblock__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1477
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_memblock__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1478
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN74_$LT$mynewt..kernel..os..os_memblock$u20$as$u20$core..default..Default$GT$7default17h01c480cc50f13e0dE:

00000000 <<mynewt::kernel::os::os_memblock as core::default::Default>::default>:
_ZN74_$LT$mynewt..kernel..os..os_memblock$u20$as$u20$core..default..Default$GT$7default17h01c480cc50f13e0dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1481
}
impl Default for os_memblock {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1482
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_memblock as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1483
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h7907b5d6966a9ebeE:

00000000 <<mynewt::kernel::os::os_mempool__bindgen_ty_1 as core::default::Default>::default>:
_ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h7907b5d6966a9ebeE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1510
#[repr(C)]
pub struct os_mempool__bindgen_ty_1 {
    pub stqe_next: *mut os_mempool,
}
impl Default for os_mempool__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1511
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_mempool__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1512
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hedba43e2ab7d3941E:

00000000 <<mynewt::kernel::os::os_mempool__bindgen_ty_2 as core::default::Default>::default>:
_ZN87_$LT$mynewt..kernel..os..os_mempool__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hedba43e2ab7d3941E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1519
#[repr(C)]
pub struct os_mempool__bindgen_ty_2 {
    pub slh_first: *mut os_memblock,
}
impl Default for os_mempool__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1520
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_mempool__bindgen_ty_2 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1521
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17he38393b5bba323ffE:

00000000 <<mynewt::kernel::os::os_mempool as core::default::Default>::default>:
_ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17he38393b5bba323ffE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1524
}
impl Default for os_mempool {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1525
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_mempool as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1526
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN77_$LT$mynewt..kernel..os..os_mempool_ext$u20$as$u20$core..default..Default$GT$7default17hdeaa294ea0d66176E:

00000000 <<mynewt::kernel::os::os_mempool_ext as core::default::Default>::default>:
_ZN77_$LT$mynewt..kernel..os..os_mempool_ext$u20$as$u20$core..default..Default$GT$7default17hdeaa294ea0d66176E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1558
    pub mpe_mp: os_mempool,
    pub mpe_put_cb: os_mempool_put_fn,
    pub mpe_put_arg: *mut ::cty::c_void,
}
impl Default for os_mempool_ext {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1559
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_mempool_ext as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1560
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN85_$LT$mynewt..kernel..os..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc955dbfbfe3ef2b6E:

00000000 <<mynewt::kernel::os::os_mutex__bindgen_ty_1 as core::default::Default>::default>:
_ZN85_$LT$mynewt..kernel..os..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc955dbfbfe3ef2b6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1713
#[repr(C)]
pub struct os_mutex__bindgen_ty_1 {
    pub slh_first: *mut os_task,
}
impl Default for os_mutex__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1714
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_mutex__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1715
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN71_$LT$mynewt..kernel..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hc4fd30c764b97cc6E:

00000000 <<mynewt::kernel::os::os_mutex as core::default::Default>::default>:
_ZN71_$LT$mynewt..kernel..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17hc4fd30c764b97cc6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1718
}
impl Default for os_mutex {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1719
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_mutex as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1720
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN92_$LT$mynewt..kernel..os..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb0cd3e9339339a6eE:

00000000 <<mynewt::kernel::os::os_sanity_check__bindgen_ty_1 as core::default::Default>::default>:
_ZN92_$LT$mynewt..kernel..os..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb0cd3e9339339a6eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1778
#[repr(C)]
pub struct os_sanity_check__bindgen_ty_1 {
    pub sle_next: *mut os_sanity_check,
}
impl Default for os_sanity_check__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1779
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_sanity_check__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1780
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h7c3fd2c438f82987E:

00000000 <<mynewt::kernel::os::os_sanity_check as core::default::Default>::default>:
_ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h7c3fd2c438f82987E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1783
}
impl Default for os_sanity_check {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1784
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_sanity_check as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1785
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN88_$LT$mynewt..kernel..os..os_task_obj__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha4b2035a6451f391E:

00000000 <<mynewt::kernel::os::os_task_obj__bindgen_ty_1 as core::default::Default>::default>:
_ZN88_$LT$mynewt..kernel..os..os_task_obj__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17ha4b2035a6451f391E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1836
#[repr(C)]
pub struct os_task_obj__bindgen_ty_1 {
    pub slh_first: *mut os_task,
}
impl Default for os_task_obj__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1837
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_task_obj__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1838
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN74_$LT$mynewt..kernel..os..os_task_obj$u20$as$u20$core..default..Default$GT$7default17hd54677656e96c2b6E:

00000000 <<mynewt::kernel::os::os_task_obj as core::default::Default>::default>:
_ZN74_$LT$mynewt..kernel..os..os_task_obj$u20$as$u20$core..default..Default$GT$7default17hd54677656e96c2b6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1841
}
impl Default for os_task_obj {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1842
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_task_obj as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1843
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h4998dec9a5076fd3E:

00000000 <<mynewt::kernel::os::os_task__bindgen_ty_1 as core::default::Default>::default>:
_ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h4998dec9a5076fd3E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1897
#[repr(C)]
pub struct os_task__bindgen_ty_1 {
    pub stqe_next: *mut os_task,
}
impl Default for os_task__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1898
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_task__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1899
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h339f538966e05bacE:

00000000 <<mynewt::kernel::os::os_task__bindgen_ty_2 as core::default::Default>::default>:
_ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17h339f538966e05bacE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1907
pub struct os_task__bindgen_ty_2 {
    pub tqe_next: *mut os_task,
    pub tqe_prev: *mut *mut os_task,
}
impl Default for os_task__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1908
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_task__bindgen_ty_2 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1909
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf134369b69fe7b4eE:

00000000 <<mynewt::kernel::os::os_task__bindgen_ty_3 as core::default::Default>::default>:
_ZN84_$LT$mynewt..kernel..os..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hf134369b69fe7b4eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1916
#[repr(C)]
pub struct os_task__bindgen_ty_3 {
    pub sle_next: *mut os_task,
}
impl Default for os_task__bindgen_ty_3 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1917
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_task__bindgen_ty_3 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1918
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17h2f69d231cf36442eE:

00000000 <<mynewt::kernel::os::os_task as core::default::Default>::default>:
_ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17h2f69d231cf36442eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1921
}
impl Default for os_task {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1922
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_task as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1923
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN77_$LT$mynewt..kernel..os..os_task_stailq$u20$as$u20$core..default..Default$GT$7default17h9f93e0f012eaa4afE:

00000000 <<mynewt::kernel::os::os_task_stailq as core::default::Default>::default>:
_ZN77_$LT$mynewt..kernel..os..os_task_stailq$u20$as$u20$core..default..Default$GT$7default17h9f93e0f012eaa4afE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1932
pub struct os_task_stailq {
    pub stqh_first: *mut os_task,
    pub stqh_last: *mut *mut os_task,
}
impl Default for os_task_stailq {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1933
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_task_stailq as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1934
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN75_$LT$mynewt..kernel..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h7bd88c0b8a0182b7E:

00000000 <<mynewt::kernel::os::os_task_list as core::default::Default>::default>:
_ZN75_$LT$mynewt..kernel..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h7bd88c0b8a0182b7E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2041
pub struct os_task_list {
    pub tqh_first: *mut os_task,
    pub tqh_last: *mut *mut os_task,
}
impl Default for os_task_list {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2042
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_task_list as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2043
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN83_$LT$mynewt..kernel..os..os_sem__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h959cd0ebb59edbb3E:

00000000 <<mynewt::kernel::os::os_sem__bindgen_ty_1 as core::default::Default>::default>:
_ZN83_$LT$mynewt..kernel..os..os_sem__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h959cd0ebb59edbb3E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2129
#[repr(C)]
pub struct os_sem__bindgen_ty_1 {
    pub slh_first: *mut os_task,
}
impl Default for os_sem__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2130
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::kernel::os::os_sem__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2131
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h75d6072c9ac72a90E:

00000000 <<mynewt::kernel::os::os_sem as core::default::Default>::default>:
_ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h75d6072c9ac72a90E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2134
}
impl Default for os_sem {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	4601      	mov	r1, r0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2135
        unsafe { ::core::mem::zeroed() }
   6:	9101      	str	r1, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::mem::zeroed>
   c:	e7ff      	b.n	e <<mynewt::kernel::os::os_sem as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2136
    }
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt6kernel2os10eventq_run17h6ef32da48f4d5d86E:

00000000 <mynewt::kernel::os::eventq_run>:
_ZN6mynewt6kernel2os10eventq_run17h6ef32da48f4d5d86E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:475
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9001      	str	r0, [sp, #4]
   8:	9801      	ldr	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	f7ff fffe 	bl	0 <os_eventq_run>
  10:	e7ff      	b.n	12 <mynewt::kernel::os::eventq_run+0x12>
  12:	2000      	movs	r0, #0
  14:	9002      	str	r0, [sp, #8]
  16:	2001      	movs	r0, #1
  18:	9002      	str	r0, [sp, #8]
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	b004      	add	sp, #16
  1e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt6kernel2os15eventq_dflt_get17hc3569ee6b12f336bE:

00000000 <mynewt::kernel::os::eventq_dflt_get>:
_ZN6mynewt6kernel2os15eventq_dflt_get17hc3569ee6b12f336bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:506
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9000      	str	r0, [sp, #0]
   6:	f7ff fffe 	bl	0 <os_eventq_dflt_get>
   a:	9001      	str	r0, [sp, #4]
   c:	e7ff      	b.n	e <mynewt::kernel::os::eventq_dflt_get+0xe>
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	6048      	str	r0, [r1, #4]
  14:	2000      	movs	r0, #0
  16:	6008      	str	r0, [r1, #0]
  18:	b002      	add	sp, #8
  1a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt6kernel2os9task_init17h5d0ccf81e359e26eE:

00000000 <mynewt::kernel::os::task_init>:
_ZN6mynewt6kernel2os9task_init17h5d0ccf81e359e26eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1936
#[mynewt_macros::safe_wrap(attr)] extern "C" {
   0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   4:	b09c      	sub	sp, #112	; 0x70
   6:	f8dd c0a0 	ldr.w	ip, [sp, #160]	; 0xa0
   a:	f8dd e09c 	ldr.w	lr, [sp, #156]	; 0x9c
   e:	9c26      	ldr	r4, [sp, #152]	; 0x98
  10:	9d25      	ldr	r5, [sp, #148]	; 0x94
  12:	9e24      	ldr	r6, [sp, #144]	; 0x90
  14:	461f      	mov	r7, r3
  16:	4690      	mov	r8, r2
  18:	4689      	mov	r9, r1
  1a:	4682      	mov	sl, r0
  1c:	9011      	str	r0, [sp, #68]	; 0x44
  1e:	9112      	str	r1, [sp, #72]	; 0x48
  20:	9213      	str	r2, [sp, #76]	; 0x4c
  22:	9314      	str	r3, [sp, #80]	; 0x50
  24:	f88d 6057 	strb.w	r6, [sp, #87]	; 0x57
  28:	9416      	str	r4, [sp, #88]	; 0x58
  2a:	f8cd e05c 	str.w	lr, [sp, #92]	; 0x5c
  2e:	f8ad c062 	strh.w	ip, [sp, #98]	; 0x62
  32:	9812      	ldr	r0, [sp, #72]	; 0x48
  34:	9510      	str	r5, [sp, #64]	; 0x40
  36:	970f      	str	r7, [sp, #60]	; 0x3c
  38:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
  3c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
  40:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
  44:	f7ff fffe 	bl	0 <mynewt::Strn::validate>
  48:	e7ff      	b.n	4a <mynewt::kernel::os::task_init+0x4a>
  4a:	9811      	ldr	r0, [sp, #68]	; 0x44
  4c:	9912      	ldr	r1, [sp, #72]	; 0x48
  4e:	900b      	str	r0, [sp, #44]	; 0x2c
  50:	4608      	mov	r0, r1
  52:	f7ff fffe 	bl	0 <mynewt::Strn::as_ptr>
  56:	900a      	str	r0, [sp, #40]	; 0x28
  58:	e7ff      	b.n	5a <mynewt::kernel::os::task_init+0x5a>
  5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  5c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  5e:	f89d 0057 	ldrb.w	r0, [sp, #87]	; 0x57
  62:	9925      	ldr	r1, [sp, #148]	; 0x94
  64:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
  68:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
  6c:	9009      	str	r0, [sp, #36]	; 0x24
  6e:	4660      	mov	r0, ip
  70:	9108      	str	r1, [sp, #32]
  72:	4671      	mov	r1, lr
  74:	9207      	str	r2, [sp, #28]
  76:	9306      	str	r3, [sp, #24]
  78:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  7c:	9005      	str	r0, [sp, #20]
  7e:	e7ff      	b.n	80 <mynewt::kernel::os::task_init+0x80>
  80:	f8bd 0062 	ldrh.w	r0, [sp, #98]	; 0x62
  84:	4669      	mov	r1, sp
  86:	60c8      	str	r0, [r1, #12]
  88:	9805      	ldr	r0, [sp, #20]
  8a:	6088      	str	r0, [r1, #8]
  8c:	9a08      	ldr	r2, [sp, #32]
  8e:	604a      	str	r2, [r1, #4]
  90:	9b09      	ldr	r3, [sp, #36]	; 0x24
  92:	fa5f fc83 	uxtb.w	ip, r3
  96:	f8c1 c000 	str.w	ip, [r1]
  9a:	980b      	ldr	r0, [sp, #44]	; 0x2c
  9c:	990a      	ldr	r1, [sp, #40]	; 0x28
  9e:	9a07      	ldr	r2, [sp, #28]
  a0:	9b06      	ldr	r3, [sp, #24]
  a2:	f7ff fffe 	bl	0 <os_task_init>
  a6:	901a      	str	r0, [sp, #104]	; 0x68
  a8:	e7ff      	b.n	aa <mynewt::kernel::os::task_init+0xaa>
  aa:	981a      	ldr	r0, [sp, #104]	; 0x68
  ac:	2800      	cmp	r0, #0
  ae:	d105      	bne.n	bc <mynewt::kernel::os::task_init+0xbc>
  b0:	e7ff      	b.n	b2 <mynewt::kernel::os::task_init+0xb2>
  b2:	2000      	movs	r0, #0
  b4:	9019      	str	r0, [sp, #100]	; 0x64
  b6:	2001      	movs	r0, #1
  b8:	9019      	str	r0, [sp, #100]	; 0x64
  ba:	e007      	b.n	cc <mynewt::kernel::os::task_init+0xcc>
  bc:	981a      	ldr	r0, [sp, #104]	; 0x68
  be:	f7ff fffe 	bl	0 <<mynewt::result::MynewtError as core::convert::From<i32>>::from>
  c2:	9004      	str	r0, [sp, #16]
  c4:	e7ff      	b.n	c6 <mynewt::kernel::os::task_init+0xc6>
  c6:	9804      	ldr	r0, [sp, #16]
  c8:	9019      	str	r0, [sp, #100]	; 0x64
  ca:	e7ff      	b.n	cc <mynewt::kernel::os::task_init+0xcc>
  cc:	9819      	ldr	r0, [sp, #100]	; 0x64
  ce:	b01c      	add	sp, #112	; 0x70
  d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

mynewt-d7fd96264f78b961.4i01xfee9wuwxvmo.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 4i01xfee9wuwxvmo
0000012d l       .debug_str	00000000 
0000025d l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
00000268 l       .debug_str	00000000 
00000250 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
0000008f l       .debug_str	00000000 
00000092 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
00000096 l       .debug_str	00000000 
00000107 l       .debug_str	00000000 
00000111 l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
0000019e l       .debug_str	00000000 
000001aa l       .debug_str	00000000 
0000021b l       .debug_str	00000000 
00000229 l       .debug_str	00000000 
0000022e l       .debug_str	00000000 
00000232 l       .debug_str	00000000 
00000237 l       .debug_str	00000000 
0000023d l       .debug_str	00000000 
00000262 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h2fc938e4934bc64eE	00000000 .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h2fc938e4934bc64eE
00000000 l    d  .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17ha891146462c441c4E	00000000 .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17ha891146462c441c4E
00000000 l    d  .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb1580e6cc84fb843E	00000000 .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb1580e6cc84fb843E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 .hidden core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
00000000 g     F .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h2fc938e4934bc64eE	0000002a core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
00000000 g     F .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17ha891146462c441c4E	0000003e core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
00000000 g     F .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb1580e6cc84fb843E	0000003e core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
00000000         *UND*	00000000 .hidden core::str::traits::<impl core::cmp::PartialEq for str>::eq
00000000         *UND*	00000000 core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq



Disassembly of section .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h2fc938e4934bc64eE:

00000000 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq>:
_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h2fc938e4934bc64eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:1040
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6800      	ldr	r0, [r0, #0]
  10:	9905      	ldr	r1, [sp, #20]
  12:	6809      	ldr	r1, [r1, #0]
  14:	9203      	str	r2, [sp, #12]
  16:	9302      	str	r3, [sp, #8]
  18:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq>
  1c:	9001      	str	r0, [sp, #4]
  1e:	e7ff      	b.n	20 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq+0x20>
  20:	9801      	ldr	r0, [sp, #4]
  22:	f000 0001 	and.w	r0, r0, #1
  26:	b006      	add	sp, #24
  28:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17ha891146462c441c4E:

00000000 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq>:
_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17ha891146462c441c4E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:1040
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6801      	ldr	r1, [r0, #0]
  10:	6840      	ldr	r0, [r0, #4]
  12:	f8dd c014 	ldr.w	ip, [sp, #20]
  16:	f8dc e000 	ldr.w	lr, [ip]
  1a:	f8dc c004 	ldr.w	ip, [ip, #4]
  1e:	9003      	str	r0, [sp, #12]
  20:	4608      	mov	r0, r1
  22:	9903      	ldr	r1, [sp, #12]
  24:	9202      	str	r2, [sp, #8]
  26:	4672      	mov	r2, lr
  28:	9301      	str	r3, [sp, #4]
  2a:	4663      	mov	r3, ip
  2c:	f7ff fffe 	bl	0 <core::str::traits::<impl core::cmp::PartialEq for str>::eq>
  30:	9000      	str	r0, [sp, #0]
  32:	e7ff      	b.n	34 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq+0x34>
  34:	9800      	ldr	r0, [sp, #0]
  36:	f000 0001 	and.w	r0, r0, #1
  3a:	b006      	add	sp, #24
  3c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb1580e6cc84fb843E:

00000000 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq>:
_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hb1580e6cc84fb843E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:1040
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6801      	ldr	r1, [r0, #0]
  10:	6840      	ldr	r0, [r0, #4]
  12:	f8dd c014 	ldr.w	ip, [sp, #20]
  16:	f8dc e000 	ldr.w	lr, [ip]
  1a:	f8dc c004 	ldr.w	ip, [ip, #4]
  1e:	9003      	str	r0, [sp, #12]
  20:	4608      	mov	r0, r1
  22:	9903      	ldr	r1, [sp, #12]
  24:	9202      	str	r2, [sp, #8]
  26:	4672      	mov	r2, lr
  28:	9301      	str	r3, [sp, #4]
  2a:	4663      	mov	r3, ip
  2c:	f7ff fffe 	bl	0 <core::slice::<impl core::cmp::PartialEq<[B]> for [A]>::eq>
  30:	9000      	str	r0, [sp, #0]
  32:	e7ff      	b.n	34 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq+0x34>
  34:	9800      	ldr	r0, [sp, #0]
  36:	f000 0001 	and.w	r0, r0, #1
  3a:	b006      	add	sp, #24
  3c:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.4koelxpj0vilp4ti.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 4koelxpj0vilp4ti
00000277 l       .debug_str	00000000 
0000073a l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
0000008d l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
00000097 l       .debug_str	00000000 
0000009d l       .debug_str	00000000 
000000ab l       .debug_str	00000000 
000000af l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000cd l       .debug_str	00000000 
000000d1 l       .debug_str	00000000 
000000d5 l       .debug_str	00000000 
000000d9 l       .debug_str	00000000 
000000dd l       .debug_str	00000000 
000000e3 l       .debug_str	00000000 
000000e5 l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
00000158 l       .debug_str	00000000 
000001a9 l       .debug_str	00000000 
000001e1 l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
00000217 l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
00000738 l       .debug_str	00000000 
000002f9 l       .debug_str	00000000 
00000330 l       .debug_str	00000000 
00000361 l       .debug_str	00000000 
000003ba l       .debug_str	00000000 
000003c9 l       .debug_str	00000000 
0000040c l       .debug_str	00000000 
0000044e l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
000004e0 l       .debug_str	00000000 
0000051a l       .debug_str	00000000 
0000057a l       .debug_str	00000000 
000005fc l       .debug_str	00000000 
0000063c l       .debug_str	00000000 
00000676 l       .debug_str	00000000 
000006d8 l       .debug_str	00000000 
00000714 l       .debug_str	00000000 
00000716 l       .debug_str	00000000 
00000719 l       .debug_str	00000000 
00000721 l       .debug_str	00000000 
00000723 l       .debug_str	00000000 
00000727 l       .debug_str	00000000 
0000072d l       .debug_str	00000000 
0000073c l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3ptr25swap_nonoverlapping_bytes17hea66163c817d6e8bE	00000000 .text._ZN4core3ptr25swap_nonoverlapping_bytes17hea66163c817d6e8bE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::mem::size_of
00000000 g     F .text._ZN4core3ptr25swap_nonoverlapping_bytes17hea66163c817d6e8bE	00000106 .hidden core::ptr::swap_nonoverlapping_bytes
00000000         *UND*	00000000 core::ptr::<impl *mut T>::add



Disassembly of section .text._ZN4core3ptr25swap_nonoverlapping_bytes17hea66163c817d6e8bE:

00000000 <core::ptr::swap_nonoverlapping_bytes>:
_ZN4core3ptr25swap_nonoverlapping_bytes17hea66163c817d6e8bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:372
   0:	b5d0      	push	{r4, r6, r7, lr}
   2:	af02      	add	r7, sp, #8
   4:	b0ac      	sub	sp, #176	; 0xb0
   6:	466c      	mov	r4, sp
   8:	f36f 0404 	bfc	r4, #0, #5
   c:	46a5      	mov	sp, r4
   e:	4613      	mov	r3, r2
  10:	468c      	mov	ip, r1
  12:	4686      	mov	lr, r0
  14:	900b      	str	r0, [sp, #44]	; 0x2c
  16:	910c      	str	r1, [sp, #48]	; 0x30
  18:	920d      	str	r2, [sp, #52]	; 0x34
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:383
  1a:	930a      	str	r3, [sp, #40]	; 0x28
  1c:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  20:	f8cd e020 	str.w	lr, [sp, #32]
  24:	f7ff fffe 	bl	0 <core::mem::size_of>
  28:	900e      	str	r0, [sp, #56]	; 0x38
  2a:	e7ff      	b.n	2c <core::ptr::swap_nonoverlapping_bytes+0x2c>
  2c:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:388
  2e:	900f      	str	r0, [sp, #60]	; 0x3c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:389
  30:	e7ff      	b.n	32 <core::ptr::swap_nonoverlapping_bytes+0x32>
  32:	980f      	ldr	r0, [sp, #60]	; 0x3c
  34:	990e      	ldr	r1, [sp, #56]	; 0x38
  36:	4408      	add	r0, r1
  38:	990d      	ldr	r1, [sp, #52]	; 0x34
  3a:	4288      	cmp	r0, r1
  3c:	d905      	bls.n	4a <core::ptr::swap_nonoverlapping_bytes+0x4a>
  3e:	e7ff      	b.n	40 <core::ptr::swap_nonoverlapping_bytes+0x40>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:405
  40:	980f      	ldr	r0, [sp, #60]	; 0x3c
  42:	990d      	ldr	r1, [sp, #52]	; 0x34
  44:	4288      	cmp	r0, r1
  46:	d32d      	bcc.n	a4 <core::ptr::swap_nonoverlapping_bytes+0xa4>
  48:	e059      	b.n	fe <core::ptr::swap_nonoverlapping_bytes+0xfe>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:392
  4a:	e7ff      	b.n	4c <core::ptr::swap_nonoverlapping_bytes+0x4c>
  4c:	a810      	add	r0, sp, #64	; 0x40
  4e:	902a      	str	r0, [sp, #168]	; 0xa8
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h74aac029a6d8a5f3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  50:	982a      	ldr	r0, [sp, #168]	; 0xa8
  52:	902b      	str	r0, [sp, #172]	; 0xac
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9a6e38a3afe16f4fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  54:	982b      	ldr	r0, [sp, #172]	; 0xac
_ZN4core3ptr25swap_nonoverlapping_bytes17hea66163c817d6e8bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:393
  56:	9007      	str	r0, [sp, #28]
  58:	e7ff      	b.n	5a <core::ptr::swap_nonoverlapping_bytes+0x5a>
  5a:	9807      	ldr	r0, [sp, #28]
  5c:	9019      	str	r0, [sp, #100]	; 0x64
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:394
  5e:	980b      	ldr	r0, [sp, #44]	; 0x2c
  60:	990f      	ldr	r1, [sp, #60]	; 0x3c
  62:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::add>
  66:	901a      	str	r0, [sp, #104]	; 0x68
  68:	e7ff      	b.n	6a <core::ptr::swap_nonoverlapping_bytes+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:395
  6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  6c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  6e:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::add>
  72:	901b      	str	r0, [sp, #108]	; 0x6c
  74:	e7ff      	b.n	76 <core::ptr::swap_nonoverlapping_bytes+0x76>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:399
  76:	981a      	ldr	r0, [sp, #104]	; 0x68
  78:	9919      	ldr	r1, [sp, #100]	; 0x64
  7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  7c:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  80:	e7ff      	b.n	82 <core::ptr::swap_nonoverlapping_bytes+0x82>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:400
  82:	981b      	ldr	r0, [sp, #108]	; 0x6c
  84:	991a      	ldr	r1, [sp, #104]	; 0x68
  86:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  88:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  8c:	e7ff      	b.n	8e <core::ptr::swap_nonoverlapping_bytes+0x8e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:401
  8e:	9819      	ldr	r0, [sp, #100]	; 0x64
  90:	991b      	ldr	r1, [sp, #108]	; 0x6c
  92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  94:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  98:	e7ff      	b.n	9a <core::ptr::swap_nonoverlapping_bytes+0x9a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:402
  9a:	980e      	ldr	r0, [sp, #56]	; 0x38
  9c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  9e:	4408      	add	r0, r1
  a0:	900f      	str	r0, [sp, #60]	; 0x3c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:389
  a2:	e7c6      	b.n	32 <core::ptr::swap_nonoverlapping_bytes+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:407
  a4:	e7ff      	b.n	a6 <core::ptr::swap_nonoverlapping_bytes+0xa6>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:408
  a6:	980d      	ldr	r0, [sp, #52]	; 0x34
  a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
  aa:	1a40      	subs	r0, r0, r1
  ac:	9024      	str	r0, [sp, #144]	; 0x90
  ae:	a81c      	add	r0, sp, #112	; 0x70
  b0:	9028      	str	r0, [sp, #160]	; 0xa0
_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hb3b6a9343f4d2263E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/maybe_uninit.rs:368
  b2:	9828      	ldr	r0, [sp, #160]	; 0xa0
  b4:	9029      	str	r0, [sp, #164]	; 0xa4
_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb6ac1beeddc8ca4bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/manually_drop.rs:144
  b6:	9829      	ldr	r0, [sp, #164]	; 0xa4
_ZN4core3ptr25swap_nonoverlapping_bytes17hea66163c817d6e8bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:410
  b8:	9006      	str	r0, [sp, #24]
  ba:	e7ff      	b.n	bc <core::ptr::swap_nonoverlapping_bytes+0xbc>
  bc:	9806      	ldr	r0, [sp, #24]
  be:	9025      	str	r0, [sp, #148]	; 0x94
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:411
  c0:	980b      	ldr	r0, [sp, #44]	; 0x2c
  c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  c4:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::add>
  c8:	9026      	str	r0, [sp, #152]	; 0x98
  ca:	e7ff      	b.n	cc <core::ptr::swap_nonoverlapping_bytes+0xcc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:412
  cc:	980c      	ldr	r0, [sp, #48]	; 0x30
  ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
  d0:	f7ff fffe 	bl	0 <core::ptr::<impl *mut T>::add>
  d4:	9027      	str	r0, [sp, #156]	; 0x9c
  d6:	e7ff      	b.n	d8 <core::ptr::swap_nonoverlapping_bytes+0xd8>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:414
  d8:	9826      	ldr	r0, [sp, #152]	; 0x98
  da:	9925      	ldr	r1, [sp, #148]	; 0x94
  dc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  de:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  e2:	e7ff      	b.n	e4 <core::ptr::swap_nonoverlapping_bytes+0xe4>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:415
  e4:	9827      	ldr	r0, [sp, #156]	; 0x9c
  e6:	9926      	ldr	r1, [sp, #152]	; 0x98
  e8:	9a24      	ldr	r2, [sp, #144]	; 0x90
  ea:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  ee:	e7ff      	b.n	f0 <core::ptr::swap_nonoverlapping_bytes+0xf0>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:416
  f0:	9825      	ldr	r0, [sp, #148]	; 0x94
  f2:	9927      	ldr	r1, [sp, #156]	; 0x9c
  f4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  f6:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
  fa:	e7ff      	b.n	fc <core::ptr::swap_nonoverlapping_bytes+0xfc>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:405
  fc:	e7ff      	b.n	fe <core::ptr::swap_nonoverlapping_bytes+0xfe>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:418
  fe:	f1a7 0408 	sub.w	r4, r7, #8
 102:	46a5      	mov	sp, r4
 104:	bdd0      	pop	{r4, r6, r7, pc}

mynewt-d7fd96264f78b961.4trkzliuh15t83qr.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 4trkzliuh15t83qr
00000154 l       .debug_str	00000000 
00000290 l       .debug_str	00000000 
0000028a l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
000002bd l       .debug_str	00000000 
000002a0 l       .debug_str	00000000 
0000029b l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
0000009c l       .debug_str	00000000 
000000a7 l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000bf l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000d2 l       .debug_str	00000000 
000000dd l       .debug_str	00000000 
000000e7 l       .debug_str	00000000 
000000f2 l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
00000131 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000160 l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
0000016b l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
00000197 l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
000001f7 l       .debug_str	00000000 
00000237 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000262 l       .debug_str	00000000 
0000026b l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.a095fa9de71a8c0156347281f9f0cb8f.2	00000010 .Lanon.a095fa9de71a8c0156347281f9f0cb8f.2
00000000 l     O .rodata..Lanon.a095fa9de71a8c0156347281f9f0cb8f.4	00000010 .Lanon.a095fa9de71a8c0156347281f9f0cb8f.4
00000000 l    d  .text._ZN4core6result13unwrap_failed17hc06b1ee04940e7c4E	00000000 .text._ZN4core6result13unwrap_failed17hc06b1ee04940e7c4E
00000000 l    d  .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h411d4bdc2d390250E	00000000 .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h411d4bdc2d390250E
00000000 l    d  .rodata..Lanon.a095fa9de71a8c0156347281f9f0cb8f.0	00000000 .rodata..Lanon.a095fa9de71a8c0156347281f9f0cb8f.0
00000000 l    d  .rodata..Lanon.a095fa9de71a8c0156347281f9f0cb8f.1	00000000 .rodata..Lanon.a095fa9de71a8c0156347281f9f0cb8f.1
00000000 l    d  .rodata..Lanon.a095fa9de71a8c0156347281f9f0cb8f.3	00000000 .rodata..Lanon.a095fa9de71a8c0156347281f9f0cb8f.3
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <&T as core::fmt::Display>::fmt
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000 g     F .text._ZN4core6result13unwrap_failed17hc06b1ee04940e7c4E	0000008e core::result::unwrap_failed
00000000 g     F .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h411d4bdc2d390250E	00000052 core::result::Result<T,E>::expect
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::fmt::Debug>::fmt



Disassembly of section .text._ZN4core6result13unwrap_failed17hc06b1ee04940e7c4E:

00000000 <core::result::unwrap_failed>:
_ZN4core6result13unwrap_failed17hc06b1ee04940e7c4E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:998
   0:	b09a      	sub	sp, #104	; 0x68
   2:	4613      	mov	r3, r2
   4:	468c      	mov	ip, r1
   6:	4686      	mov	lr, r0
   8:	9009      	str	r0, [sp, #36]	; 0x24
   a:	910a      	str	r1, [sp, #40]	; 0x28
   c:	920b      	str	r2, [sp, #44]	; 0x2c
   e:	a809      	add	r0, sp, #36	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:999
  10:	9016      	str	r0, [sp, #88]	; 0x58
  12:	a80b      	add	r0, sp, #44	; 0x2c
  14:	9017      	str	r0, [sp, #92]	; 0x5c
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:1
//! Mynewt API for Rust. Contains Rust bindings for Mynewt API for C, generated by `bindgen`.
  16:	9816      	ldr	r0, [sp, #88]	; 0x58
  18:	9018      	str	r0, [sp, #96]	; 0x60
  1a:	9817      	ldr	r0, [sp, #92]	; 0x5c
  1c:	9019      	str	r0, [sp, #100]	; 0x64
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:999
  1e:	9818      	ldr	r0, [sp, #96]	; 0x60
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  20:	f240 0100 	movw	r1, #0
  24:	f2c0 0100 	movt	r1, #0
  28:	9308      	str	r3, [sp, #32]
  2a:	f8cd c01c 	str.w	ip, [sp, #28]
  2e:	f8cd e018 	str.w	lr, [sp, #24]
  32:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  36:	9005      	str	r0, [sp, #20]
  38:	9104      	str	r1, [sp, #16]
  3a:	e7ff      	b.n	3c <core::result::unwrap_failed+0x3c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:999
  3c:	9819      	ldr	r0, [sp, #100]	; 0x64
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
  42:	f2c0 0100 	movt	r1, #0
  46:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  4a:	9003      	str	r0, [sp, #12]
  4c:	9102      	str	r1, [sp, #8]
  4e:	e7ff      	b.n	50 <core::result::unwrap_failed+0x50>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:999
  50:	9805      	ldr	r0, [sp, #20]
  52:	9012      	str	r0, [sp, #72]	; 0x48
  54:	9904      	ldr	r1, [sp, #16]
  56:	9113      	str	r1, [sp, #76]	; 0x4c
  58:	9a03      	ldr	r2, [sp, #12]
  5a:	9214      	str	r2, [sp, #80]	; 0x50
  5c:	9b02      	ldr	r3, [sp, #8]
  5e:	9315      	str	r3, [sp, #84]	; 0x54
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  60:	46ec      	mov	ip, sp
  62:	f04f 0e02 	mov.w	lr, #2
  66:	f8cc e000 	str.w	lr, [ip]
  6a:	f240 0100 	movw	r1, #0
  6e:	f2c0 0100 	movt	r1, #0
  72:	a80c      	add	r0, sp, #48	; 0x30
  74:	ab12      	add	r3, sp, #72	; 0x48
  76:	4672      	mov	r2, lr
  78:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  7c:	e7ff      	b.n	2 <core::result::unwrap_failed+0x2>
  7e:	f240 0100 	movw	r1, #0
  82:	f2c0 0100 	movt	r1, #0
  86:	a80c      	add	r0, sp, #48	; 0x30
  88:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  8c:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h411d4bdc2d390250E:

00000000 <core::result::Result<T,E>::expect>:
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h411d4bdc2d390250E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:824
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  10:	9805      	ldr	r0, [sp, #20]
  12:	1e41      	subs	r1, r0, #1
  14:	bf18      	it	ne
  16:	2101      	movne	r1, #1
  18:	2801      	cmp	r0, #1
  1a:	9304      	str	r3, [sp, #16]
  1c:	f8cd c00c 	str.w	ip, [sp, #12]
  20:	f8cd e008 	str.w	lr, [sp, #8]
  24:	9101      	str	r1, [sp, #4]
  26:	d005      	beq.n	34 <core::result::Result<T,E>::expect+0x34>
  28:	e7ff      	b.n	2a <core::result::Result<T,E>::expect+0x2a>
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	2801      	cmp	r0, #1
  2e:	d005      	beq.n	3c <core::result::Result<T,E>::expect+0x3c>
  30:	e7ff      	b.n	32 <core::result::Result<T,E>::expect+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:829
  32:	defe      	udf	#254	; 0xfe
  34:	9805      	ldr	r0, [sp, #20]
  36:	2801      	cmp	r0, #1
  38:	d008      	beq.n	4c <core::result::Result<T,E>::expect+0x4c>
  3a:	e009      	b.n	50 <core::result::Result<T,E>::expect+0x50>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  3c:	9805      	ldr	r0, [sp, #20]
  3e:	9009      	str	r0, [sp, #36]	; 0x24
  40:	9806      	ldr	r0, [sp, #24]
  42:	9907      	ldr	r1, [sp, #28]
  44:	9a09      	ldr	r2, [sp, #36]	; 0x24
  46:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  4a:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:829
  4c:	b00a      	add	sp, #40	; 0x28
  4e:	bd80      	pop	{r7, pc}
  50:	e7fc      	b.n	4c <core::result::Result<T,E>::expect+0x4c>

mynewt-d7fd96264f78b961.567evy38v9kp0s79.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 567evy38v9kp0s79
000000cb l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000087 l       .debug_str	00000000 
0000008b l       .debug_str	00000000 
0000008d l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core10intrinsics19copy_nonoverlapping17h0bbfc0328204f40cE	00000000 .text._ZN4core10intrinsics19copy_nonoverlapping17h0bbfc0328204f40cE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core10intrinsics19copy_nonoverlapping17h0bbfc0328204f40cE	0000002c core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 __aeabi_memcpy4



Disassembly of section .text._ZN4core10intrinsics19copy_nonoverlapping17h0bbfc0328204f40cE:

00000000 <core::intrinsics::copy_nonoverlapping>:
_ZN4core10intrinsics19copy_nonoverlapping17h0bbfc0328204f40cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1411
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9003      	str	r0, [sp, #12]
   c:	9104      	str	r1, [sp, #16]
   e:	9205      	str	r2, [sp, #20]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  10:	9903      	ldr	r1, [sp, #12]
  12:	9804      	ldr	r0, [sp, #16]
  14:	9a05      	ldr	r2, [sp, #20]
  16:	0092      	lsls	r2, r2, #2
  18:	9302      	str	r3, [sp, #8]
  1a:	f8cd c004 	str.w	ip, [sp, #4]
  1e:	f8cd e000 	str.w	lr, [sp]
  22:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  26:	e7ff      	b.n	28 <core::intrinsics::copy_nonoverlapping+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1413
  28:	b006      	add	sp, #24
  2a:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.57kmiovebj0bsj75.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 57kmiovebj0bsj75
000000df l       .debug_str	00000000 
00000142 l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
000000ca l       .debug_str	00000000 
000000d3 l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3str21_$LT$impl$u20$str$GT$3len17hdfc178dac951c508E	00000000 .text._ZN4core3str21_$LT$impl$u20$str$GT$3len17hdfc178dac951c508E
00000000 l    d  .text._ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17h6cfde3120b8a2279E	00000000 .text._ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17h6cfde3120b8a2279E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3str21_$LT$impl$u20$str$GT$3len17hdfc178dac951c508E	0000003c .hidden core::str::<impl str>::len
00000000 g     F .text._ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17h6cfde3120b8a2279E	00000014 .hidden core::str::<impl str>::as_ptr
00000000         *UND*	00000000 core::slice::<impl [T]>::len



Disassembly of section .text._ZN4core3str21_$LT$impl$u20$str$GT$3len17hdfc178dac951c508E:

00000000 <core::str::<impl str>::len>:
_ZN4core3str21_$LT$impl$u20$str$GT$3len17hdfc178dac951c508E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2060
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2061
   c:	9806      	ldr	r0, [sp, #24]
   e:	9907      	ldr	r1, [sp, #28]
  10:	9008      	str	r0, [sp, #32]
  12:	9109      	str	r1, [sp, #36]	; 0x24
_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h63ffb0f526205321E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2143
  14:	9808      	ldr	r0, [sp, #32]
  16:	9909      	ldr	r1, [sp, #36]	; 0x24
  18:	900a      	str	r0, [sp, #40]	; 0x28
  1a:	910b      	str	r1, [sp, #44]	; 0x2c
  1c:	980a      	ldr	r0, [sp, #40]	; 0x28
  1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
_ZN4core3str21_$LT$impl$u20$str$GT$3len17hdfc178dac951c508E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2061
  20:	9205      	str	r2, [sp, #20]
  22:	9304      	str	r3, [sp, #16]
  24:	9003      	str	r0, [sp, #12]
  26:	9102      	str	r1, [sp, #8]
  28:	e7ff      	b.n	2a <core::str::<impl str>::len+0x2a>
  2a:	9803      	ldr	r0, [sp, #12]
  2c:	9902      	ldr	r1, [sp, #8]
  2e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  32:	9001      	str	r0, [sp, #4]
  34:	e7ff      	b.n	36 <core::str::<impl str>::len+0x36>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2062
  36:	9801      	ldr	r0, [sp, #4]
  38:	b00c      	add	sp, #48	; 0x30
  3a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17h6cfde3120b8a2279E:

00000000 <core::str::<impl str>::as_ptr>:
_ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17h6cfde3120b8a2279E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2207
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2208
   a:	9802      	ldr	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/str/mod.rs:2209
   c:	9201      	str	r2, [sp, #4]
   e:	9300      	str	r3, [sp, #0]
  10:	b004      	add	sp, #16
  12:	4770      	bx	lr

mynewt-d7fd96264f78b961.5dsjoo7xml11tgl6.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 5dsjoo7xml11tgl6
00000135 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000093 l       .debug_str	00000000 
0000009c l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
0000012a l       .debug_str	00000000 
00000131 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
00000138 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17h3aea8e0368154f7bE	00000000 .text._ZN4core3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17h3aea8e0368154f7bE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17h3aea8e0368154f7bE	0000001a .hidden core::num::ptr_try_from_impls::<impl core::convert::TryFrom<usize> for u32>::try_from



Disassembly of section .text._ZN4core3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17h3aea8e0368154f7bE:

00000000 <core::num::ptr_try_from_impls::<impl core::convert::TryFrom<usize> for u32>::try_from>:
_ZN4core3num18ptr_try_from_impls69_$LT$impl$u20$core..convert..TryFrom$LT$usize$GT$$u20$for$u20$u32$GT$8try_from17h3aea8e0368154f7bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:4724
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:4725
   6:	9801      	ldr	r0, [sp, #4]
   8:	9003      	str	r0, [sp, #12]
   a:	2000      	movs	r0, #0
   c:	9002      	str	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:4726
   e:	9802      	ldr	r0, [sp, #8]
  10:	9a03      	ldr	r2, [sp, #12]
  12:	9100      	str	r1, [sp, #0]
  14:	4611      	mov	r1, r2
  16:	b004      	add	sp, #16
  18:	4770      	bx	lr

mynewt-d7fd96264f78b961.9aghmpvwfzb6x75.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 9aghmpvwfzb6x75
000011e7 l       .debug_str	00000000 
00002566 l       .debug_str	00000000 
00002997 l       .debug_str	00000000 
0000255f l       .debug_str	00000000 
0000291b l       .debug_str	00000000 
0000254a l       .debug_str	00000000 
0000289f l       .debug_str	00000000 
00002537 l       .debug_str	00000000 
00002823 l       .debug_str	00000000 
00002522 l       .debug_str	00000000 
0000279a l       .debug_str	00000000 
000024ef l       .debug_str	00000000 
00002715 l       .debug_str	00000000 
000024df l       .debug_str	00000000 
000026e2 l       .debug_str	00000000 
000024c1 l       .debug_str	00000000 
000026d2 l       .debug_str	00000000 
000024b9 l       .debug_str	00000000 
000026b4 l       .debug_str	00000000 
000024b2 l       .debug_str	00000000 
000026ac l       .debug_str	00000000 
00002446 l       .debug_str	00000000 
000026a5 l       .debug_str	00000000 
000023e2 l       .debug_str	00000000 
00002621 l       .debug_str	00000000 
000023da l       .debug_str	00000000 
000025a5 l       .debug_str	00000000 
000023c5 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a7 l       .debug_str	00000000 
000000ac l       .debug_str	00000000 
000000b8 l       .debug_str	00000000 
000000c1 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000147 l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000158 l       .debug_str	00000000 
0000015b l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
0000016b l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
00000176 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
000001b3 l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
000001be l       .debug_str	00000000 
000001fe l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000224 l       .debug_str	00000000 
0000023b l       .debug_str	00000000 
00000244 l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
000002e2 l       .debug_str	00000000 
000002ee l       .debug_str	00000000 
000002f6 l       .debug_str	00000000 
000002fa l       .debug_str	00000000 
00000354 l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003c1 l       .debug_str	00000000 
00000408 l       .debug_str	00000000 
00000457 l       .debug_str	00000000 
00000461 l       .debug_str	00000000 
0000049e l       .debug_str	00000000 
000004e3 l       .debug_str	00000000 
000004ec l       .debug_str	00000000 
000004fc l       .debug_str	00000000 
00000504 l       .debug_str	00000000 
00000559 l       .debug_str	00000000 
000005b6 l       .debug_str	00000000 
000005c2 l       .debug_str	00000000 
000005cb l       .debug_str	00000000 
000005d7 l       .debug_str	00000000 
000005e3 l       .debug_str	00000000 
000005ec l       .debug_str	00000000 
000005f4 l       .debug_str	00000000 
000005fe l       .debug_str	00000000 
00000606 l       .debug_str	00000000 
0000061b l       .debug_str	00000000 
00000622 l       .debug_str	00000000 
00000642 l       .debug_str	00000000 
000006c0 l       .debug_str	00000000 
000006ca l       .debug_str	00000000 
000006d5 l       .debug_str	00000000 
000006de l       .debug_str	00000000 
000006e9 l       .debug_str	00000000 
000006f5 l       .debug_str	00000000 
000006f9 l       .debug_str	00000000 
00000702 l       .debug_str	00000000 
00000709 l       .debug_str	00000000 
00000711 l       .debug_str	00000000 
00000719 l       .debug_str	00000000 
00000723 l       .debug_str	00000000 
00000729 l       .debug_str	00000000 
00000730 l       .debug_str	00000000 
00000737 l       .debug_str	00000000 
00000764 l       .debug_str	00000000 
00000799 l       .debug_str	00000000 
0000079f l       .debug_str	00000000 
000007a5 l       .debug_str	00000000 
000007b4 l       .debug_str	00000000 
000007c4 l       .debug_str	00000000 
000007d4 l       .debug_str	00000000 
000007dc l       .debug_str	00000000 
00000805 l       .debug_str	00000000 
00000863 l       .debug_str	00000000 
000008c9 l       .debug_str	00000000 
000008d0 l       .debug_str	00000000 
000008d8 l       .debug_str	00000000 
000008e1 l       .debug_str	00000000 
000008ff l       .debug_str	00000000 
0000090f l       .debug_str	00000000 
0000091d l       .debug_str	00000000 
00000928 l       .debug_str	00000000 
00000935 l       .debug_str	00000000 
00000944 l       .debug_str	00000000 
0000095a l       .debug_str	00000000 
00000964 l       .debug_str	00000000 
0000096d l       .debug_str	00000000 
00000976 l       .debug_str	00000000 
0000099c l       .debug_str	00000000 
000009b2 l       .debug_str	00000000 
000009bd l       .debug_str	00000000 
000009d3 l       .debug_str	00000000 
000009db l       .debug_str	00000000 
000009fc l       .debug_str	00000000 
00000a13 l       .debug_str	00000000 
00000a98 l       .debug_str	00000000 
00000b15 l       .debug_str	00000000 
00000b92 l       .debug_str	00000000 
00000c0f l       .debug_str	00000000 
00000c94 l       .debug_str	00000000 
00000c97 l       .debug_str	00000000 
00000c9e l       .debug_str	00000000 
00000ca7 l       .debug_str	00000000 
00000cb6 l       .debug_str	00000000 
00000cba l       .debug_str	00000000 
00000cc2 l       .debug_str	00000000 
00000cc8 l       .debug_str	00000000 
00000ccf l       .debug_str	00000000 
00000cd7 l       .debug_str	00000000 
00000cdc l       .debug_str	00000000 
00000ce4 l       .debug_str	00000000 
00000ced l       .debug_str	00000000 
00000cf6 l       .debug_str	00000000 
00000cff l       .debug_str	00000000 
00000d07 l       .debug_str	00000000 
00000d0e l       .debug_str	00000000 
00000d1a l       .debug_str	00000000 
00000d25 l       .debug_str	00000000 
00000d2d l       .debug_str	00000000 
00000d35 l       .debug_str	00000000 
00000e31 l       .debug_str	00000000 
00000f35 l       .debug_str	00000000 
00000f43 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f58 l       .debug_str	00000000 
00000f6c l       .debug_str	00000000 
00000f77 l       .debug_str	00000000 
00000fa5 l       .debug_str	00000000 
00001020 l       .debug_str	00000000 
000010a3 l       .debug_str	00000000 
000010b1 l       .debug_str	00000000 
00001110 l       .debug_str	00000000 
00001177 l       .debug_str	00000000 
0000118d l       .debug_str	00000000 
0000119d l       .debug_str	00000000 
000011ac l       .debug_str	00000000 
000011b0 l       .debug_str	00000000 
000011b7 l       .debug_str	00000000 
000011bd l       .debug_str	00000000 
000011c1 l       .debug_str	00000000 
000011c7 l       .debug_str	00000000 
000011cd l       .debug_str	00000000 
000011d9 l       .debug_str	00000000 
000011e1 l       .debug_str	00000000 
000023b5 l       .debug_str	00000000 
000011ef l       .debug_str	00000000 
000011f5 l       .debug_str	00000000 
00001218 l       .debug_str	00000000 
00001228 l       .debug_str	00000000 
0000125b l       .debug_str	00000000 
0000129b l       .debug_str	00000000 
000012e3 l       .debug_str	00000000 
000012e7 l       .debug_str	00000000 
000012ed l       .debug_str	00000000 
000012f3 l       .debug_str	00000000 
000012f9 l       .debug_str	00000000 
0000130b l       .debug_str	00000000 
00001340 l       .debug_str	00000000 
00001382 l       .debug_str	00000000 
000013cc l       .debug_str	00000000 
000013d0 l       .debug_str	00000000 
000013d6 l       .debug_str	00000000 
000013dc l       .debug_str	00000000 
000013e2 l       .debug_str	00000000 
000013f4 l       .debug_str	00000000 
00001429 l       .debug_str	00000000 
0000146b l       .debug_str	00000000 
000014b5 l       .debug_str	00000000 
000014b9 l       .debug_str	00000000 
000014bf l       .debug_str	00000000 
000014c5 l       .debug_str	00000000 
000014cb l       .debug_str	00000000 
000014d1 l       .debug_str	00000000 
000014e2 l       .debug_str	00000000 
00001516 l       .debug_str	00000000 
00001557 l       .debug_str	00000000 
000015a0 l       .debug_str	00000000 
000015a5 l       .debug_str	00000000 
000015aa l       .debug_str	00000000 
000015ae l       .debug_str	00000000 
000015b4 l       .debug_str	00000000 
000015ba l       .debug_str	00000000 
000015c0 l       .debug_str	00000000 
000015d1 l       .debug_str	00000000 
00001605 l       .debug_str	00000000 
00001646 l       .debug_str	00000000 
0000168f l       .debug_str	00000000 
00001693 l       .debug_str	00000000 
0000169c l       .debug_str	00000000 
000016ad l       .debug_str	00000000 
000016e1 l       .debug_str	00000000 
00001722 l       .debug_str	00000000 
0000176b l       .debug_str	00000000 
00001770 l       .debug_str	00000000 
00001774 l       .debug_str	00000000 
0000177d l       .debug_str	00000000 
00001784 l       .debug_str	00000000 
0000178c l       .debug_str	00000000 
0000179e l       .debug_str	00000000 
000017d3 l       .debug_str	00000000 
00001815 l       .debug_str	00000000 
0000185f l       .debug_str	00000000 
00001863 l       .debug_str	00000000 
00001869 l       .debug_str	00000000 
0000186f l       .debug_str	00000000 
00001875 l       .debug_str	00000000 
0000187b l       .debug_str	00000000 
00001883 l       .debug_str	00000000 
00001891 l       .debug_str	00000000 
000018a0 l       .debug_str	00000000 
000018b1 l       .debug_str	00000000 
000018bc l       .debug_str	00000000 
000018c7 l       .debug_str	00000000 
000018d2 l       .debug_str	00000000 
000018d9 l       .debug_str	00000000 
000018fc l       .debug_str	00000000 
0000190e l       .debug_str	00000000 
00001943 l       .debug_str	00000000 
00001985 l       .debug_str	00000000 
000019cf l       .debug_str	00000000 
000019d3 l       .debug_str	00000000 
000019dd l       .debug_str	00000000 
000019ef l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
00001a66 l       .debug_str	00000000 
00001ab0 l       .debug_str	00000000 
00001ab5 l       .debug_str	00000000 
00001abf l       .debug_str	00000000 
00001ad1 l       .debug_str	00000000 
00001b06 l       .debug_str	00000000 
00001b48 l       .debug_str	00000000 
00001b92 l       .debug_str	00000000 
00001ba6 l       .debug_str	00000000 
00001baa l       .debug_str	00000000 
00001bb8 l       .debug_str	00000000 
00001bc8 l       .debug_str	00000000 
00001bd1 l       .debug_str	00000000 
00001bdc l       .debug_str	00000000 
00001beb l       .debug_str	00000000 
00001c00 l       .debug_str	00000000 
00001c31 l       .debug_str	00000000 
00001cce l       .debug_str	00000000 
00001d73 l       .debug_str	00000000 
00001d7e l       .debug_str	00000000 
00001d87 l       .debug_str	00000000 
00001da8 l       .debug_str	00000000 
00001dbb l       .debug_str	00000000 
00001df1 l       .debug_str	00000000 
00001e74 l       .debug_str	00000000 
00001eff l       .debug_str	00000000 
00001f1b l       .debug_str	00000000 
00001f67 l       .debug_str	00000000 
00001fbb l       .debug_str	00000000 
00001fd8 l       .debug_str	00000000 
00001fec l       .debug_str	00000000 
00002038 l       .debug_str	00000000 
0000208c l       .debug_str	00000000 
000020a2 l       .debug_str	00000000 
000020b6 l       .debug_str	00000000 
000020fd l       .debug_str	00000000 
0000214c l       .debug_str	00000000 
00002155 l       .debug_str	00000000 
00002163 l       .debug_str	00000000 
00002194 l       .debug_str	00000000 
0000219a l       .debug_str	00000000 
000021a2 l       .debug_str	00000000 
000021a9 l       .debug_str	00000000 
000021b1 l       .debug_str	00000000 
000021bc l       .debug_str	00000000 
000021c4 l       .debug_str	00000000 
000021d3 l       .debug_str	00000000 
000021d7 l       .debug_str	00000000 
000021e2 l       .debug_str	00000000 
000021ee l       .debug_str	00000000 
000021f9 l       .debug_str	00000000 
0000220a l       .debug_str	00000000 
00002210 l       .debug_str	00000000 
00002218 l       .debug_str	00000000 
0000221f l       .debug_str	00000000 
00002229 l       .debug_str	00000000 
00002231 l       .debug_str	00000000 
00002239 l       .debug_str	00000000 
0000225b l       .debug_str	00000000 
00002266 l       .debug_str	00000000 
00002272 l       .debug_str	00000000 
0000227a l       .debug_str	00000000 
00002283 l       .debug_str	00000000 
0000228e l       .debug_str	00000000 
00002295 l       .debug_str	00000000 
000022a0 l       .debug_str	00000000 
000022ab l       .debug_str	00000000 
000022bb l       .debug_str	00000000 
000022cb l       .debug_str	00000000 
000022e0 l       .debug_str	00000000 
000022e9 l       .debug_str	00000000 
00002346 l       .debug_str	00000000 
000023ab l       .debug_str	00000000 
0000257b l       .debug_str	00000000 
00000000 l    d  .text._ZN92_$LT$mynewt..libs..mynewt_rust..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h18dd4ab74d8be83aE	00000000 .text._ZN92_$LT$mynewt..libs..mynewt_rust..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h18dd4ab74d8be83aE
00000000 l    d  .text._ZN90_$LT$mynewt..libs..mynewt_rust..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc5ccbceb392e0547E	00000000 .text._ZN90_$LT$mynewt..libs..mynewt_rust..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc5ccbceb392e0547E
00000000 l    d  .text._ZN92_$LT$mynewt..libs..mynewt_rust..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17had5e18b7e3960f7aE	00000000 .text._ZN92_$LT$mynewt..libs..mynewt_rust..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17had5e18b7e3960f7aE
00000000 l    d  .text._ZN99_$LT$mynewt..libs..mynewt_rust..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hadc8dacc4f5adde4E	00000000 .text._ZN99_$LT$mynewt..libs..mynewt_rust..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hadc8dacc4f5adde4E
00000000 l    d  .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb63e8e32bfd575c9E	00000000 .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb63e8e32bfd575c9E
00000000 l    d  .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hbf22e277141ccfe2E	00000000 .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hbf22e277141ccfe2E
00000000 l    d  .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17he6a524b7f9ed6173E	00000000 .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17he6a524b7f9ed6173E
00000000 l    d  .text._ZN99_$LT$mynewt..libs..mynewt_rust..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17haa22a522f6375fbdE	00000000 .text._ZN99_$LT$mynewt..libs..mynewt_rust..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17haa22a522f6375fbdE
00000000 l    d  .text._ZN99_$LT$mynewt..libs..mynewt_rust..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb207a7e8290bfe20E	00000000 .text._ZN99_$LT$mynewt..libs..mynewt_rust..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb207a7e8290bfe20E
00000000 l    d  .text._ZN102_$LT$mynewt..libs..mynewt_rust..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1183f363c0ac14fE	00000000 .text._ZN102_$LT$mynewt..libs..mynewt_rust..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1183f363c0ac14fE
00000000 l    d  .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hae85ece833549c8dE	00000000 .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hae85ece833549c8dE
00000000 l    d  .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hca7756e4ea07152fE	00000000 .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hca7756e4ea07152fE
00000000 l    d  .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hfcec64449c0eb303E	00000000 .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hfcec64449c0eb303E
00000000 l    d  .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc0371480c928c57eE	00000000 .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc0371480c928c57eE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN102_$LT$mynewt..libs..mynewt_rust..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1183f363c0ac14fE	00000016 <mynewt::libs::mynewt_rust::sensor_type_traits__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000         *UND*	00000000 core::mem::zeroed
00000000 g     F .text._ZN90_$LT$mynewt..libs..mynewt_rust..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc5ccbceb392e0547E	00000016 <mynewt::libs::mynewt_rust::os_dev__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hae85ece833549c8dE	00000016 <mynewt::libs::mynewt_rust::sensor__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hca7756e4ea07152fE	00000016 <mynewt::libs::mynewt_rust::sensor__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hfcec64449c0eb303E	00000016 <mynewt::libs::mynewt_rust::sensor__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc0371480c928c57eE	00000016 <mynewt::libs::mynewt_rust::sensor__bindgen_ty_4 as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb63e8e32bfd575c9E	00000016 <mynewt::libs::mynewt_rust::os_task__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hbf22e277141ccfe2E	00000016 <mynewt::libs::mynewt_rust::os_task__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17he6a524b7f9ed6173E	00000016 <mynewt::libs::mynewt_rust::os_task__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN92_$LT$mynewt..libs..mynewt_rust..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h18dd4ab74d8be83aE	00000016 <mynewt::libs::mynewt_rust::os_event__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN92_$LT$mynewt..libs..mynewt_rust..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17had5e18b7e3960f7aE	00000016 <mynewt::libs::mynewt_rust::os_mutex__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN99_$LT$mynewt..libs..mynewt_rust..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hadc8dacc4f5adde4E	00000016 <mynewt::libs::mynewt_rust::os_sanity_check__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN99_$LT$mynewt..libs..mynewt_rust..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17haa22a522f6375fbdE	00000016 <mynewt::libs::mynewt_rust::sensor_listener__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN99_$LT$mynewt..libs..mynewt_rust..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb207a7e8290bfe20E	00000016 <mynewt::libs::mynewt_rust::sensor_notifier__bindgen_ty_1 as core::default::Default>::default



Disassembly of section .text._ZN92_$LT$mynewt..libs..mynewt_rust..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h18dd4ab74d8be83aE:

00000000 <<mynewt::libs::mynewt_rust::os_event__bindgen_ty_1 as core::default::Default>::default>:
_ZN92_$LT$mynewt..libs..mynewt_rust..os_event__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h18dd4ab74d8be83aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:107
#[repr(C)]
pub struct os_event__bindgen_ty_1 {
    pub stqe_next: *mut os_event,
}
impl Default for os_event__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:108
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::os_event__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:109
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN90_$LT$mynewt..libs..mynewt_rust..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc5ccbceb392e0547E:

00000000 <<mynewt::libs::mynewt_rust::os_dev__bindgen_ty_1 as core::default::Default>::default>:
_ZN90_$LT$mynewt..libs..mynewt_rust..os_dev__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hc5ccbceb392e0547E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:135
#[repr(C)]
pub struct os_dev__bindgen_ty_1 {
    pub stqe_next: *mut os_dev,
}
impl Default for os_dev__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:136
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::os_dev__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:137
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN92_$LT$mynewt..libs..mynewt_rust..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17had5e18b7e3960f7aE:

00000000 <<mynewt::libs::mynewt_rust::os_mutex__bindgen_ty_1 as core::default::Default>::default>:
_ZN92_$LT$mynewt..libs..mynewt_rust..os_mutex__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17had5e18b7e3960f7aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:144
#[repr(C)]
pub struct os_mutex__bindgen_ty_1 {
    pub slh_first: *mut os_task,
}
impl Default for os_mutex__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:145
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::os_mutex__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:146
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN99_$LT$mynewt..libs..mynewt_rust..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hadc8dacc4f5adde4E:

00000000 <<mynewt::libs::mynewt_rust::os_sanity_check__bindgen_ty_1 as core::default::Default>::default>:
_ZN99_$LT$mynewt..libs..mynewt_rust..os_sanity_check__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hadc8dacc4f5adde4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:156
#[repr(C)]
pub struct os_sanity_check__bindgen_ty_1 {
    pub sle_next: *mut os_sanity_check,
}
impl Default for os_sanity_check__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:157
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::os_sanity_check__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:158
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb63e8e32bfd575c9E:

00000000 <<mynewt::libs::mynewt_rust::os_task__bindgen_ty_1 as core::default::Default>::default>:
_ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb63e8e32bfd575c9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:166
#[repr(C)]
pub struct os_task__bindgen_ty_1 {
    pub stqe_next: *mut os_task,
}
impl Default for os_task__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:167
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::os_task__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:168
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hbf22e277141ccfe2E:

00000000 <<mynewt::libs::mynewt_rust::os_task__bindgen_ty_2 as core::default::Default>::default>:
_ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hbf22e277141ccfe2E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:176
pub struct os_task__bindgen_ty_2 {
    pub tqe_next: *mut os_task,
    pub tqe_prev: *mut *mut os_task,
}
impl Default for os_task__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:177
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9100      	str	r1, [sp, #0]
   c:	e7ff      	b.n	e <<mynewt::libs::mynewt_rust::os_task__bindgen_ty_2 as core::default::Default>::default+0xe>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:178
    }
   e:	9801      	ldr	r0, [sp, #4]
  10:	9900      	ldr	r1, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17he6a524b7f9ed6173E:

00000000 <<mynewt::libs::mynewt_rust::os_task__bindgen_ty_3 as core::default::Default>::default>:
_ZN91_$LT$mynewt..libs..mynewt_rust..os_task__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17he6a524b7f9ed6173E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:185
#[repr(C)]
pub struct os_task__bindgen_ty_3 {
    pub sle_next: *mut os_task,
}
impl Default for os_task__bindgen_ty_3 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:186
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::os_task__bindgen_ty_3 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:187
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN99_$LT$mynewt..libs..mynewt_rust..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17haa22a522f6375fbdE:

00000000 <<mynewt::libs::mynewt_rust::sensor_listener__bindgen_ty_1 as core::default::Default>::default>:
_ZN99_$LT$mynewt..libs..mynewt_rust..sensor_listener__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17haa22a522f6375fbdE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:287
#[repr(C)]
pub struct sensor_listener__bindgen_ty_1 {
    pub sle_next: *mut sensor_listener,
}
impl Default for sensor_listener__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:288
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::sensor_listener__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:289
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN99_$LT$mynewt..libs..mynewt_rust..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb207a7e8290bfe20E:

00000000 <<mynewt::libs::mynewt_rust::sensor_notifier__bindgen_ty_1 as core::default::Default>::default>:
_ZN99_$LT$mynewt..libs..mynewt_rust..sensor_notifier__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hb207a7e8290bfe20E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:296
#[repr(C)]
pub struct sensor_notifier__bindgen_ty_1 {
    pub sle_next: *mut sensor_notifier,
}
impl Default for sensor_notifier__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:297
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::sensor_notifier__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:298
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN102_$LT$mynewt..libs..mynewt_rust..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1183f363c0ac14fE:

00000000 <<mynewt::libs::mynewt_rust::sensor_type_traits__bindgen_ty_1 as core::default::Default>::default>:
_ZN102_$LT$mynewt..libs..mynewt_rust..sensor_type_traits__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd1183f363c0ac14fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:305
#[repr(C)]
pub struct sensor_type_traits__bindgen_ty_1 {
    pub sle_next: *mut sensor_type_traits,
}
impl Default for sensor_type_traits__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:306
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::sensor_type_traits__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:307
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hae85ece833549c8dE:

00000000 <<mynewt::libs::mynewt_rust::sensor__bindgen_ty_1 as core::default::Default>::default>:
_ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hae85ece833549c8dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:420
#[repr(C)]
pub struct sensor__bindgen_ty_1 {
    pub slh_first: *mut sensor_listener,
}
impl Default for sensor__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:421
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::sensor__bindgen_ty_1 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:422
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hca7756e4ea07152fE:

00000000 <<mynewt::libs::mynewt_rust::sensor__bindgen_ty_2 as core::default::Default>::default>:
_ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_2$u20$as$u20$core..default..Default$GT$7default17hca7756e4ea07152fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:429
#[repr(C)]
pub struct sensor__bindgen_ty_2 {
    pub slh_first: *mut sensor_notifier,
}
impl Default for sensor__bindgen_ty_2 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:430
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::sensor__bindgen_ty_2 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:431
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hfcec64449c0eb303E:

00000000 <<mynewt::libs::mynewt_rust::sensor__bindgen_ty_3 as core::default::Default>::default>:
_ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_3$u20$as$u20$core..default..Default$GT$7default17hfcec64449c0eb303E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:438
#[repr(C)]
pub struct sensor__bindgen_ty_3 {
    pub slh_first: *mut sensor_type_traits,
}
impl Default for sensor__bindgen_ty_3 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:439
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::sensor__bindgen_ty_3 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:440
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc0371480c928c57eE:

00000000 <<mynewt::libs::mynewt_rust::sensor__bindgen_ty_4 as core::default::Default>::default>:
_ZN90_$LT$mynewt..libs..mynewt_rust..sensor__bindgen_ty_4$u20$as$u20$core..default..Default$GT$7default17hc0371480c928c57eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:447
#[repr(C)]
pub struct sensor__bindgen_ty_4 {
    pub sle_next: *mut sensor,
}
impl Default for sensor__bindgen_ty_4 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:448
        unsafe { ::core::mem::zeroed() }
   4:	f7ff fffe 	bl	0 <core::mem::zeroed>
   8:	9001      	str	r0, [sp, #4]
   a:	9801      	ldr	r0, [sp, #4]
   c:	9000      	str	r0, [sp, #0]
   e:	e7ff      	b.n	10 <<mynewt::libs::mynewt_rust::sensor__bindgen_ty_4 as core::default::Default>::default+0x10>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/mynewt_rust.rs:449
    }
  10:	9800      	ldr	r0, [sp, #0]
  12:	b002      	add	sp, #8
  14:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.a9erbz5vdx01918.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 a9erbz5vdx01918
000002f6 l       .debug_str	00000000 
0000059d l       .debug_str	00000000 
000005b4 l       .debug_str	00000000 
00000594 l       .debug_str	00000000 
000005af l       .debug_str	00000000 
00000580 l       .debug_str	00000000 
00000566 l       .debug_str	00000000 
0000055c l       .debug_str	00000000 
00000543 l       .debug_str	00000000 
0000053c l       .debug_str	00000000 
00000533 l       .debug_str	00000000 
0000052e l       .debug_str	00000000 
00000512 l       .debug_str	00000000 
000004ee l       .debug_str	00000000 
000004d7 l       .debug_str	00000000 
000004cf l       .debug_str	00000000 
000004cb l       .debug_str	00000000 
000004ae l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
00000445 l       .debug_str	00000000 
0000043b l       .debug_str	00000000 
0000042a l       .debug_str	00000000 
00000425 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
0000009c l       .debug_str	00000000 
000000a7 l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000bf l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000d2 l       .debug_str	00000000 
000000dd l       .debug_str	00000000 
000000e7 l       .debug_str	00000000 
000000f2 l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
00000131 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
0000015c l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
00000174 l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
00000186 l       .debug_str	00000000 
0000018e l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
000001a1 l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
0000022b l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
0000040c l       .debug_str	00000000 
000002fa l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000303 l       .debug_str	00000000 
00000320 l       .debug_str	00000000 
00000322 l       .debug_str	00000000 
00000328 l       .debug_str	00000000 
0000032c l       .debug_str	00000000 
00000331 l       .debug_str	00000000 
00000336 l       .debug_str	00000000 
0000033c l       .debug_str	00000000 
00000342 l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
0000034e l       .debug_str	00000000 
00000354 l       .debug_str	00000000 
00000356 l       .debug_str	00000000 
0000035b l       .debug_str	00000000 
0000035f l       .debug_str	00000000 
0000036d l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
0000037b l       .debug_str	00000000 
00000383 l       .debug_str	00000000 
0000038b l       .debug_str	00000000 
00000392 l       .debug_str	00000000 
000003a6 l       .debug_str	00000000 
000003b2 l       .debug_str	00000000 
000003bd l       .debug_str	00000000 
000003c4 l       .debug_str	00000000 
000003ca l       .debug_str	00000000 
000003ce l       .debug_str	00000000 
000003d4 l       .debug_str	00000000 
000003da l       .debug_str	00000000 
000003dd l       .debug_str	00000000 
000003ec l       .debug_str	00000000 
000003f3 l       .debug_str	00000000 
000003f7 l       .debug_str	00000000 
00000400 l       .debug_str	00000000 
000005a4 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.0	0000000c .Lanon.f732aa5f12de179ca4252e479c37ba3f.0
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.1	00000009 .Lanon.f732aa5f12de179ca4252e479c37ba3f.1
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.10	0000000a .Lanon.f732aa5f12de179ca4252e479c37ba3f.10
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.11	00000007 .Lanon.f732aa5f12de179ca4252e479c37ba3f.11
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.12	0000000a .Lanon.f732aa5f12de179ca4252e479c37ba3f.12
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.13	0000000c .Lanon.f732aa5f12de179ca4252e479c37ba3f.13
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.14	0000000a .Lanon.f732aa5f12de179ca4252e479c37ba3f.14
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.15	0000000a .Lanon.f732aa5f12de179ca4252e479c37ba3f.15
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.16	00000007 .Lanon.f732aa5f12de179ca4252e479c37ba3f.16
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.2	0000000d .Lanon.f732aa5f12de179ca4252e479c37ba3f.2
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.3	0000000c .Lanon.f732aa5f12de179ca4252e479c37ba3f.3
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.4	0000000b .Lanon.f732aa5f12de179ca4252e479c37ba3f.4
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.5	0000000c .Lanon.f732aa5f12de179ca4252e479c37ba3f.5
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.6	0000000a .Lanon.f732aa5f12de179ca4252e479c37ba3f.6
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.7	0000000a .Lanon.f732aa5f12de179ca4252e479c37ba3f.7
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.8	00000009 .Lanon.f732aa5f12de179ca4252e479c37ba3f.8
00000000 l     O .rodata..Lanon.f732aa5f12de179ca4252e479c37ba3f.9	0000000a .Lanon.f732aa5f12de179ca4252e479c37ba3f.9
00000000 l    d  .text._ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h43a71a8670695575E	00000000 .text._ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h43a71a8670695575E
00000000 l    d  .text._ZN78_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$i32$GT$$GT$4from17h0c00a0d5ca46366cE	00000000 .text._ZN78_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$i32$GT$$GT$4from17h0c00a0d5ca46366cE
00000000 l    d  .text._ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h29f960021fda47b2E	00000000 .text._ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h29f960021fda47b2E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h29f960021fda47b2E	00000336 <mynewt::result::MynewtError as core::fmt::Debug>::fmt
00000000 g     F .text._ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h43a71a8670695575E	0000000e mynewt::result::<impl core::convert::From<mynewt::result::MynewtError> for i32>::from
00000000 g     F .text._ZN78_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$i32$GT$$GT$4from17h0c00a0d5ca46366cE	00000018 <mynewt::result::MynewtError as core::convert::From<i32>>::from



Disassembly of section .text._ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h43a71a8670695575E:

00000000 <mynewt::result::<impl core::convert::From<mynewt::result::MynewtError> for i32>::from>:
_ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h43a71a8670695575E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:78
    }

    /// Cast `MynewtError` to `i32`
    impl From<MynewtError> for i32 {
        /// Cast `MynewtError` to `i32`
        fn from(err: MynewtError) -> Self {
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:79
            err as i32
   6:	9801      	ldr	r0, [sp, #4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:80
        }
   8:	9100      	str	r1, [sp, #0]
   a:	b002      	add	sp, #8
   c:	4770      	bx	lr

Disassembly of section .text._ZN78_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$i32$GT$$GT$4from17h0c00a0d5ca46366cE:

00000000 <<mynewt::result::MynewtError as core::convert::From<i32>>::from>:
_ZN78_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$i32$GT$$GT$4from17h0c00a0d5ca46366cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:86
    }

    /// Cast `i32` to `MynewtError`
    impl From<i32> for MynewtError {
        /// Cast `i32` to `MynewtError`
        fn from(num: i32) -> Self {
   0:	b084      	sub	sp, #16
   2:	4601      	mov	r1, r0
   4:	9002      	str	r0, [sp, #8]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:90
            unsafe { 
                ::core::mem::transmute::
                    <i32, MynewtError>
                    (num)
   6:	9802      	ldr	r0, [sp, #8]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:88
                ::core::mem::transmute::
   8:	9003      	str	r0, [sp, #12]
   a:	9803      	ldr	r0, [sp, #12]
   c:	9101      	str	r1, [sp, #4]
   e:	9000      	str	r0, [sp, #0]
  10:	e7ff      	b.n	12 <<mynewt::result::MynewtError as core::convert::From<i32>>::from+0x12>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:92
            }  
        }
  12:	9800      	ldr	r0, [sp, #0]
  14:	b004      	add	sp, #16
  16:	4770      	bx	lr

Disassembly of section .text._ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h29f960021fda47b2E:

00000000 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt>:
_ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h29f960021fda47b2E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:52
    #[derive(Debug, PartialEq)]
   0:	b580      	push	{r7, lr}
   2:	b0ba      	sub	sp, #232	; 0xe8
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9003      	str	r0, [sp, #12]
   a:	9104      	str	r1, [sp, #16]
   c:	9803      	ldr	r0, [sp, #12]
   e:	9006      	str	r0, [sp, #24]
  10:	9806      	ldr	r0, [sp, #24]
  12:	6800      	ldr	r0, [r0, #0]
  14:	2101      	movs	r1, #1
  16:	f6cf 71ff 	movt	r1, #65535	; 0xffff
  1a:	4288      	cmp	r0, r1
  1c:	9202      	str	r2, [sp, #8]
  1e:	9301      	str	r3, [sp, #4]
  20:	9000      	str	r0, [sp, #0]
  22:	f000 8173 	beq.w	30c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x30c>
  26:	e7ff      	b.n	28 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x28>
  28:	9800      	ldr	r0, [sp, #0]
  2a:	f100 010f 	add.w	r1, r0, #15
  2e:	2900      	cmp	r1, #0
  30:	f000 815b 	beq.w	2ea <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2ea>
  34:	e7ff      	b.n	36 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x36>
  36:	9800      	ldr	r0, [sp, #0]
  38:	f100 010e 	add.w	r1, r0, #14
  3c:	2900      	cmp	r1, #0
  3e:	f000 8143 	beq.w	2c8 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2c8>
  42:	e7ff      	b.n	44 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x44>
  44:	9800      	ldr	r0, [sp, #0]
  46:	f100 010d 	add.w	r1, r0, #13
  4a:	2900      	cmp	r1, #0
  4c:	f000 812b 	beq.w	2a6 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2a6>
  50:	e7ff      	b.n	52 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x52>
  52:	9800      	ldr	r0, [sp, #0]
  54:	f100 010c 	add.w	r1, r0, #12
  58:	2900      	cmp	r1, #0
  5a:	f000 8113 	beq.w	284 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x284>
  5e:	e7ff      	b.n	60 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x60>
  60:	9800      	ldr	r0, [sp, #0]
  62:	f100 010b 	add.w	r1, r0, #11
  66:	2900      	cmp	r1, #0
  68:	f000 80fb 	beq.w	262 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x262>
  6c:	e7ff      	b.n	6e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x6e>
  6e:	9800      	ldr	r0, [sp, #0]
  70:	f100 010a 	add.w	r1, r0, #10
  74:	2900      	cmp	r1, #0
  76:	f000 80e3 	beq.w	240 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x240>
  7a:	e7ff      	b.n	7c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x7c>
  7c:	9800      	ldr	r0, [sp, #0]
  7e:	f100 0109 	add.w	r1, r0, #9
  82:	2900      	cmp	r1, #0
  84:	f000 80cb 	beq.w	21e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x21e>
  88:	e7ff      	b.n	8a <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x8a>
  8a:	9800      	ldr	r0, [sp, #0]
  8c:	f100 0108 	add.w	r1, r0, #8
  90:	2900      	cmp	r1, #0
  92:	f000 80b3 	beq.w	1fc <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x1fc>
  96:	e7ff      	b.n	98 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x98>
  98:	9800      	ldr	r0, [sp, #0]
  9a:	1dc1      	adds	r1, r0, #7
  9c:	2900      	cmp	r1, #0
  9e:	f000 809c 	beq.w	1da <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x1da>
  a2:	e7ff      	b.n	a4 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xa4>
  a4:	9800      	ldr	r0, [sp, #0]
  a6:	1d81      	adds	r1, r0, #6
  a8:	2900      	cmp	r1, #0
  aa:	f000 8085 	beq.w	1b8 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x1b8>
  ae:	e7ff      	b.n	b0 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xb0>
  b0:	9800      	ldr	r0, [sp, #0]
  b2:	1d41      	adds	r1, r0, #5
  b4:	2900      	cmp	r1, #0
  b6:	d06e      	beq.n	196 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x196>
  b8:	e7ff      	b.n	ba <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xba>
  ba:	9800      	ldr	r0, [sp, #0]
  bc:	1d01      	adds	r1, r0, #4
  be:	2900      	cmp	r1, #0
  c0:	d058      	beq.n	174 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x174>
  c2:	e7ff      	b.n	c4 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xc4>
  c4:	9800      	ldr	r0, [sp, #0]
  c6:	1cc1      	adds	r1, r0, #3
  c8:	2900      	cmp	r1, #0
  ca:	d042      	beq.n	152 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x152>
  cc:	e7ff      	b.n	ce <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xce>
  ce:	9800      	ldr	r0, [sp, #0]
  d0:	1c81      	adds	r1, r0, #2
  d2:	2900      	cmp	r1, #0
  d4:	d02c      	beq.n	130 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x130>
  d6:	e7ff      	b.n	d8 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xd8>
  d8:	9800      	ldr	r0, [sp, #0]
  da:	1c41      	adds	r1, r0, #1
  dc:	2900      	cmp	r1, #0
  de:	d016      	beq.n	10e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x10e>
  e0:	e7ff      	b.n	e2 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xe2>
  e2:	9800      	ldr	r0, [sp, #0]
  e4:	2800      	cmp	r0, #0
  e6:	d001      	beq.n	ec <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xec>
  e8:	e7ff      	b.n	ea <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xea>
  ea:	defe      	udf	#254	; 0xfe
  ec:	9904      	ldr	r1, [sp, #16]
  ee:	f240 0200 	movw	r2, #0
  f2:	f2c0 0200 	movt	r2, #0
  f6:	a807      	add	r0, sp, #28
  f8:	2307      	movs	r3, #7
  fa:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  fe:	e7ff      	b.n	100 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x100>
 100:	a807      	add	r0, sp, #28
 102:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 106:	f88d 0017 	strb.w	r0, [sp, #23]
 10a:	e7ff      	b.n	10c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x10c>
 10c:	e10f      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 10e:	9904      	ldr	r1, [sp, #16]
 110:	f240 0200 	movw	r2, #0
 114:	f2c0 0200 	movt	r2, #0
 118:	a80a      	add	r0, sp, #40	; 0x28
 11a:	230a      	movs	r3, #10
 11c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 120:	e7ff      	b.n	122 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x122>
 122:	a80a      	add	r0, sp, #40	; 0x28
 124:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 128:	f88d 0017 	strb.w	r0, [sp, #23]
 12c:	e7ff      	b.n	12e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x12e>
 12e:	e0fe      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 130:	9904      	ldr	r1, [sp, #16]
 132:	f240 0200 	movw	r2, #0
 136:	f2c0 0200 	movt	r2, #0
 13a:	a80d      	add	r0, sp, #52	; 0x34
 13c:	230a      	movs	r3, #10
 13e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 142:	e7ff      	b.n	144 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x144>
 144:	a80d      	add	r0, sp, #52	; 0x34
 146:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 14a:	f88d 0017 	strb.w	r0, [sp, #23]
 14e:	e7ff      	b.n	150 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x150>
 150:	e0ed      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 152:	9904      	ldr	r1, [sp, #16]
 154:	f240 0200 	movw	r2, #0
 158:	f2c0 0200 	movt	r2, #0
 15c:	a810      	add	r0, sp, #64	; 0x40
 15e:	230c      	movs	r3, #12
 160:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 164:	e7ff      	b.n	166 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x166>
 166:	a810      	add	r0, sp, #64	; 0x40
 168:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 16c:	f88d 0017 	strb.w	r0, [sp, #23]
 170:	e7ff      	b.n	172 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x172>
 172:	e0dc      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 174:	9904      	ldr	r1, [sp, #16]
 176:	f240 0200 	movw	r2, #0
 17a:	f2c0 0200 	movt	r2, #0
 17e:	a813      	add	r0, sp, #76	; 0x4c
 180:	230a      	movs	r3, #10
 182:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 186:	e7ff      	b.n	188 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x188>
 188:	a813      	add	r0, sp, #76	; 0x4c
 18a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 18e:	f88d 0017 	strb.w	r0, [sp, #23]
 192:	e7ff      	b.n	194 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x194>
 194:	e0cb      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 196:	9904      	ldr	r1, [sp, #16]
 198:	f240 0200 	movw	r2, #0
 19c:	f2c0 0200 	movt	r2, #0
 1a0:	a816      	add	r0, sp, #88	; 0x58
 1a2:	2307      	movs	r3, #7
 1a4:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 1a8:	e7ff      	b.n	1aa <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x1aa>
 1aa:	a816      	add	r0, sp, #88	; 0x58
 1ac:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 1b0:	f88d 0017 	strb.w	r0, [sp, #23]
 1b4:	e7ff      	b.n	1b6 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x1b6>
 1b6:	e0ba      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 1b8:	9904      	ldr	r1, [sp, #16]
 1ba:	f240 0200 	movw	r2, #0
 1be:	f2c0 0200 	movt	r2, #0
 1c2:	a819      	add	r0, sp, #100	; 0x64
 1c4:	230a      	movs	r3, #10
 1c6:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 1ca:	e7ff      	b.n	1cc <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x1cc>
 1cc:	a819      	add	r0, sp, #100	; 0x64
 1ce:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 1d2:	f88d 0017 	strb.w	r0, [sp, #23]
 1d6:	e7ff      	b.n	1d8 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x1d8>
 1d8:	e0a9      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 1da:	9904      	ldr	r1, [sp, #16]
 1dc:	f240 0200 	movw	r2, #0
 1e0:	f2c0 0200 	movt	r2, #0
 1e4:	a81c      	add	r0, sp, #112	; 0x70
 1e6:	230a      	movs	r3, #10
 1e8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 1ec:	e7ff      	b.n	1ee <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x1ee>
 1ee:	a81c      	add	r0, sp, #112	; 0x70
 1f0:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 1f4:	f88d 0017 	strb.w	r0, [sp, #23]
 1f8:	e7ff      	b.n	1fa <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x1fa>
 1fa:	e098      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 1fc:	9904      	ldr	r1, [sp, #16]
 1fe:	f240 0200 	movw	r2, #0
 202:	f2c0 0200 	movt	r2, #0
 206:	a81f      	add	r0, sp, #124	; 0x7c
 208:	2309      	movs	r3, #9
 20a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 20e:	e7ff      	b.n	210 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x210>
 210:	a81f      	add	r0, sp, #124	; 0x7c
 212:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 216:	f88d 0017 	strb.w	r0, [sp, #23]
 21a:	e7ff      	b.n	21c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x21c>
 21c:	e087      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 21e:	9904      	ldr	r1, [sp, #16]
 220:	f240 0200 	movw	r2, #0
 224:	f2c0 0200 	movt	r2, #0
 228:	a822      	add	r0, sp, #136	; 0x88
 22a:	230a      	movs	r3, #10
 22c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 230:	e7ff      	b.n	232 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x232>
 232:	a822      	add	r0, sp, #136	; 0x88
 234:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 238:	f88d 0017 	strb.w	r0, [sp, #23]
 23c:	e7ff      	b.n	23e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x23e>
 23e:	e076      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 240:	9904      	ldr	r1, [sp, #16]
 242:	f240 0200 	movw	r2, #0
 246:	f2c0 0200 	movt	r2, #0
 24a:	a825      	add	r0, sp, #148	; 0x94
 24c:	230a      	movs	r3, #10
 24e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 252:	e7ff      	b.n	254 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x254>
 254:	a825      	add	r0, sp, #148	; 0x94
 256:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 25a:	f88d 0017 	strb.w	r0, [sp, #23]
 25e:	e7ff      	b.n	260 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x260>
 260:	e065      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 262:	9904      	ldr	r1, [sp, #16]
 264:	f240 0200 	movw	r2, #0
 268:	f2c0 0200 	movt	r2, #0
 26c:	a828      	add	r0, sp, #160	; 0xa0
 26e:	230c      	movs	r3, #12
 270:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 274:	e7ff      	b.n	276 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x276>
 276:	a828      	add	r0, sp, #160	; 0xa0
 278:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 27c:	f88d 0017 	strb.w	r0, [sp, #23]
 280:	e7ff      	b.n	282 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x282>
 282:	e054      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 284:	9904      	ldr	r1, [sp, #16]
 286:	f240 0200 	movw	r2, #0
 28a:	f2c0 0200 	movt	r2, #0
 28e:	a82b      	add	r0, sp, #172	; 0xac
 290:	230b      	movs	r3, #11
 292:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 296:	e7ff      	b.n	298 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x298>
 298:	a82b      	add	r0, sp, #172	; 0xac
 29a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 29e:	f88d 0017 	strb.w	r0, [sp, #23]
 2a2:	e7ff      	b.n	2a4 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2a4>
 2a4:	e043      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 2a6:	9904      	ldr	r1, [sp, #16]
 2a8:	f240 0200 	movw	r2, #0
 2ac:	f2c0 0200 	movt	r2, #0
 2b0:	a82e      	add	r0, sp, #184	; 0xb8
 2b2:	230c      	movs	r3, #12
 2b4:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 2b8:	e7ff      	b.n	2ba <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2ba>
 2ba:	a82e      	add	r0, sp, #184	; 0xb8
 2bc:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 2c0:	f88d 0017 	strb.w	r0, [sp, #23]
 2c4:	e7ff      	b.n	2c6 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2c6>
 2c6:	e032      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 2c8:	9904      	ldr	r1, [sp, #16]
 2ca:	f240 0200 	movw	r2, #0
 2ce:	f2c0 0200 	movt	r2, #0
 2d2:	a831      	add	r0, sp, #196	; 0xc4
 2d4:	230d      	movs	r3, #13
 2d6:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 2da:	e7ff      	b.n	2dc <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2dc>
 2dc:	a831      	add	r0, sp, #196	; 0xc4
 2de:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 2e2:	f88d 0017 	strb.w	r0, [sp, #23]
 2e6:	e7ff      	b.n	2e8 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2e8>
 2e8:	e021      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 2ea:	9904      	ldr	r1, [sp, #16]
 2ec:	f240 0200 	movw	r2, #0
 2f0:	f2c0 0200 	movt	r2, #0
 2f4:	a834      	add	r0, sp, #208	; 0xd0
 2f6:	2309      	movs	r3, #9
 2f8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 2fc:	e7ff      	b.n	2fe <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2fe>
 2fe:	a834      	add	r0, sp, #208	; 0xd0
 300:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 304:	f88d 0017 	strb.w	r0, [sp, #23]
 308:	e7ff      	b.n	30a <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x30a>
 30a:	e010      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 30c:	9904      	ldr	r1, [sp, #16]
 30e:	f240 0200 	movw	r2, #0
 312:	f2c0 0200 	movt	r2, #0
 316:	a837      	add	r0, sp, #220	; 0xdc
 318:	230c      	movs	r3, #12
 31a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 31e:	e7ff      	b.n	320 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x320>
 320:	a837      	add	r0, sp, #220	; 0xdc
 322:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 326:	f88d 0017 	strb.w	r0, [sp, #23]
 32a:	e7ff      	b.n	32c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32c>
 32c:	e7ff      	b.n	32e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x32e>
 32e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 332:	b03a      	add	sp, #232	; 0xe8
 334:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.gt32234chpttqs5.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 gt32234chpttqs5
00000358 l       .debug_str	00000000 
00000714 l       .debug_str	00000000 
0000070d l       .debug_str	00000000 
00000702 l       .debug_str	00000000 
000006fe l       .debug_str	00000000 
0000087b l       .debug_str	00000000 
000006f0 l       .debug_str	00000000 
00000877 l       .debug_str	00000000 
000006e6 l       .debug_str	00000000 
000006d5 l       .debug_str	00000000 
000006d0 l       .debug_str	00000000 
000006b7 l       .debug_str	00000000 
000006ab l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
0000069f l       .debug_str	00000000 
00000869 l       .debug_str	00000000 
0000068b l       .debug_str	00000000 
00000860 l       .debug_str	00000000 
00000684 l       .debug_str	00000000 
0000085a l       .debug_str	00000000 
0000067c l       .debug_str	00000000 
00000844 l       .debug_str	00000000 
00000673 l       .debug_str	00000000 
0000083a l       .debug_str	00000000 
0000066c l       .debug_str	00000000 
0000065d l       .debug_str	00000000 
00000821 l       .debug_str	00000000 
0000065a l       .debug_str	00000000 
00000804 l       .debug_str	00000000 
000007f9 l       .debug_str	00000000 
0000079b l       .debug_str	00000000 
00000781 l       .debug_str	00000000 
00000777 l       .debug_str	00000000 
0000075b l       .debug_str	00000000 
00000737 l       .debug_str	00000000 
00000720 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000a3 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000c8 l       .debug_str	00000000 
000000d1 l       .debug_str	00000000 
000000d3 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
0000012a l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
00000199 l       .debug_str	00000000 
000001a8 l       .debug_str	00000000 
000001b0 l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
00000217 l       .debug_str	00000000 
00000219 l       .debug_str	00000000 
0000025f l       .debug_str	00000000 
0000026d l       .debug_str	00000000 
00000274 l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
0000027d l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
00000286 l       .debug_str	00000000 
0000028a l       .debug_str	00000000 
00000296 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e6 l       .debug_str	00000000 
0000032f l       .debug_str	00000000 
0000033b l       .debug_str	00000000 
00000346 l       .debug_str	00000000 
0000034a l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000354 l       .debug_str	00000000 
00000654 l       .debug_str	00000000 
00000367 l       .debug_str	00000000 
000003e3 l       .debug_str	00000000 
00000412 l       .debug_str	00000000 
0000047f l       .debug_str	00000000 
00000491 l       .debug_str	00000000 
000004f3 l       .debug_str	00000000 
000004fb l       .debug_str	00000000 
00000500 l       .debug_str	00000000 
00000504 l       .debug_str	00000000 
00000509 l       .debug_str	00000000 
0000050d l       .debug_str	00000000 
00000513 l       .debug_str	00000000 
0000051c l       .debug_str	00000000 
00000523 l       .debug_str	00000000 
0000052d l       .debug_str	00000000 
00000532 l       .debug_str	00000000 
0000053a l       .debug_str	00000000 
0000053f l       .debug_str	00000000 
00000544 l       .debug_str	00000000 
0000054b l       .debug_str	00000000 
00000550 l       .debug_str	00000000 
0000055c l       .debug_str	00000000 
00000564 l       .debug_str	00000000 
0000056d l       .debug_str	00000000 
00000572 l       .debug_str	00000000 
00000575 l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
00000585 l       .debug_str	00000000 
0000058a l       .debug_str	00000000 
0000058f l       .debug_str	00000000 
00000595 l       .debug_str	00000000 
0000059b l       .debug_str	00000000 
000005a5 l       .debug_str	00000000 
000005a8 l       .debug_str	00000000 
000005ae l       .debug_str	00000000 
000005b8 l       .debug_str	00000000 
000005c0 l       .debug_str	00000000 
000005c6 l       .debug_str	00000000 
000005cc l       .debug_str	00000000 
000005d7 l       .debug_str	00000000 
000005e0 l       .debug_str	00000000 
00000603 l       .debug_str	00000000 
00000622 l       .debug_str	00000000 
00000649 l       .debug_str	00000000 
0000064e l       .debug_str	00000000 
00000718 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.0	00000018 .Lanon.43b14d3268e5375a2cce68ca3a10c45f.0
00000000 l     O .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.11	00000008 .Lanon.43b14d3268e5375a2cce68ca3a10c45f.11
00000000 l     O .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.12	00000000 .Lanon.43b14d3268e5375a2cce68ca3a10c45f.12
00000000 l     O .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.13	00000010 .Lanon.43b14d3268e5375a2cce68ca3a10c45f.13
00000000 l     O .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.3	00000018 .Lanon.43b14d3268e5375a2cce68ca3a10c45f.3
00000000 l     O .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.5	00000018 .Lanon.43b14d3268e5375a2cce68ca3a10c45f.5
00000000 l     O .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.9	00000018 .Lanon.43b14d3268e5375a2cce68ca3a10c45f.9
00000000 l     O .rodata.str.0	00000048 str.0
00000000 l     O .rodata.str.1	00000039 str.1
00000000 l    d  .text._ZN4core5slice18from_raw_parts_mut17h14319b5b3cdbbc41E	00000000 .text._ZN4core5slice18from_raw_parts_mut17h14319b5b3cdbbc41E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9420d1a1dab260e8E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9420d1a1dab260e8E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h67f17cd2efb0b422E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h67f17cd2efb0b422E
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb4a91e78f630f22cE	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb4a91e78f630f22cE
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h9f79003d40cdc30eE	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h9f79003d40cdc30eE
00000000 l    d  .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd1cf7d4988df5723E	00000000 .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd1cf7d4988df5723E
00000000 l    d  .text._ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h67eed304dd30c897E	00000000 .text._ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h67eed304dd30c897E
00000000 l    d  .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h85c309d56cc666c6E	00000000 .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h85c309d56cc666c6E
00000000 l    d  .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h19d437c8d974b8d1E	00000000 .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h19d437c8d974b8d1E
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.1	00000000 .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.1
00000000 l    d  .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.2	00000000 .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.2
00000000 l    d  .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.4	00000000 .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.4
00000000 l    d  .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.6	00000000 .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.6
00000000 l    d  .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.7	00000000 .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.7
00000000 l    d  .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.8	00000000 .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.8
00000000 l    d  .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.10	00000000 .rodata..Lanon.43b14d3268e5375a2cce68ca3a10c45f.10
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index_mut
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::intrinsics::copy_nonoverlapping
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 core::mem::size_of
00000000         *UND*	00000000 core::mem::align_of
00000000         *UND*	00000000 .hidden core::num::<impl usize>::checked_sub
00000000         *UND*	00000000 .hidden core::num::<impl usize>::saturating_mul
00000000         *UND*	00000000 core::ptr::<impl *const T>::add
00000000 g     F .text._ZN4core5slice18from_raw_parts_mut17h14319b5b3cdbbc41E	000000aa core::slice::from_raw_parts_mut
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9420d1a1dab260e8E	00000014 core::slice::<impl [T]>::as_mut_ptr
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h67f17cd2efb0b422E	00000150 core::slice::<impl [T]>::copy_from_slice
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb4a91e78f630f22cE	0000002e core::slice::<impl [T]>::get
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h9f79003d40cdc30eE	0000007a core::slice::<impl [T]>::last
00000000 g     F .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd1cf7d4988df5723E	00000014 core::slice::<impl [T]>::as_ptr
00000000         *UND*	00000000 core::slice::<impl [T]>::as_ptr
00000000 g     F .text._ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h67eed304dd30c897E	00000032 core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <T as core::convert::From<T>>::from
00000000         *UND*	00000000 <core::fmt::Arguments as core::fmt::Display>::fmt
00000000 g     F .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h85c309d56cc666c6E	00000038 <usize as core::slice::SliceIndex<[T]>>::get_unchecked
00000000 g     F .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h19d437c8d974b8d1E	00000058 <usize as core::slice::SliceIndex<[T]>>::get
00000000         *UND*	00000000 <core::option::Option<T> as core::ops::try::Try>::from_error
00000000         *UND*	00000000 <core::option::Option<T> as core::ops::try::Try>::into_result



Disassembly of section .text._ZN4core5slice18from_raw_parts_mut17h14319b5b3cdbbc41E:

00000000 <core::slice::from_raw_parts_mut>:
_ZN4core5slice18from_raw_parts_mut17h14319b5b3cdbbc41E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5203
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
   c:	2001      	movs	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
   e:	2800      	cmp	r0, #0
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	d11b      	bne.n	4e <core::slice::from_raw_parts_mut+0x4e>
  16:	e7ff      	b.n	18 <core::slice::from_raw_parts_mut+0x18>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5204
  18:	9806      	ldr	r0, [sp, #24]
  1a:	9003      	str	r0, [sp, #12]
  1c:	f7ff fffe 	bl	0 <core::mem::align_of>
  20:	9002      	str	r0, [sp, #8]
  22:	e7ff      	b.n	24 <core::slice::from_raw_parts_mut+0x24>
  24:	9802      	ldr	r0, [sp, #8]
  26:	2800      	cmp	r0, #0
  28:	d038      	beq.n	9c <core::slice::from_raw_parts_mut+0x9c>
  2a:	e7ff      	b.n	2c <core::slice::from_raw_parts_mut+0x2c>
  2c:	9803      	ldr	r0, [sp, #12]
  2e:	9902      	ldr	r1, [sp, #8]
  30:	fbb0 f2f1 	udiv	r2, r0, r1
  34:	fb02 0211 	mls	r2, r2, r1, r0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  38:	2a00      	cmp	r2, #0
  3a:	d007      	beq.n	4c <core::slice::from_raw_parts_mut+0x4c>
  3c:	e7ff      	b.n	3e <core::slice::from_raw_parts_mut+0x3e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f7ff fffe 	bl	0 <core::panicking::panic>
  4a:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  4c:	e7ff      	b.n	4e <core::slice::from_raw_parts_mut+0x4e>
  4e:	2001      	movs	r0, #1
  50:	2800      	cmp	r0, #0
  52:	d117      	bne.n	84 <core::slice::from_raw_parts_mut+0x84>
  54:	e7ff      	b.n	56 <core::slice::from_raw_parts_mut+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5205
  56:	f7ff fffe 	bl	0 <core::mem::size_of>
  5a:	9001      	str	r0, [sp, #4]
  5c:	e7ff      	b.n	5e <core::slice::from_raw_parts_mut+0x5e>
  5e:	9907      	ldr	r1, [sp, #28]
  60:	9801      	ldr	r0, [sp, #4]
  62:	f7ff fffe 	bl	0 <core::num::<impl usize>::saturating_mul>
  66:	9000      	str	r0, [sp, #0]
  68:	e7ff      	b.n	6a <core::slice::from_raw_parts_mut+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  6a:	9800      	ldr	r0, [sp, #0]
  6c:	f1b0 3fff 	cmp.w	r0, #4294967295
  70:	dc07      	bgt.n	82 <core::slice::from_raw_parts_mut+0x82>
  72:	e7ff      	b.n	74 <core::slice::from_raw_parts_mut+0x74>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:12
  74:	f240 0000 	movw	r0, #0
  78:	f2c0 0000 	movt	r0, #0
  7c:	f7ff fffe 	bl	0 <core::panicking::panic>
  80:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:184
  82:	e7ff      	b.n	84 <core::slice::from_raw_parts_mut+0x84>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5207
  84:	9806      	ldr	r0, [sp, #24]
  86:	9907      	ldr	r1, [sp, #28]
  88:	900a      	str	r0, [sp, #40]	; 0x28
  8a:	910b      	str	r1, [sp, #44]	; 0x2c
  8c:	980a      	ldr	r0, [sp, #40]	; 0x28
  8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  90:	9008      	str	r0, [sp, #32]
  92:	9109      	str	r1, [sp, #36]	; 0x24
  94:	9808      	ldr	r0, [sp, #32]
  96:	9909      	ldr	r1, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5208
  98:	b00c      	add	sp, #48	; 0x30
  9a:	bd80      	pop	{r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5204
  9c:	f240 0000 	movw	r0, #0
  a0:	f2c0 0000 	movt	r0, #0
  a4:	f7ff fffe 	bl	0 <core::panicking::panic>
  a8:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9420d1a1dab260e8E:

00000000 <core::slice::<impl [T]>::as_mut_ptr>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9420d1a1dab260e8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:412
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:413
   a:	9802      	ldr	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:414
   c:	9201      	str	r2, [sp, #4]
   e:	9300      	str	r3, [sp, #0]
  10:	b004      	add	sp, #16
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h67f17cd2efb0b422E:

00000000 <core::slice::<impl [T]>::copy_from_slice>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h67f17cd2efb0b422E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2122
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0b2      	sub	sp, #200	; 0xc8
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	900e      	str	r0, [sp, #56]	; 0x38
   e:	910f      	str	r1, [sp, #60]	; 0x3c
  10:	9210      	str	r2, [sp, #64]	; 0x40
  12:	9311      	str	r3, [sp, #68]	; 0x44
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2123
  14:	980e      	ldr	r0, [sp, #56]	; 0x38
  16:	990f      	ldr	r1, [sp, #60]	; 0x3c
  18:	f8cd c034 	str.w	ip, [sp, #52]	; 0x34
  1c:	f8cd e030 	str.w	lr, [sp, #48]	; 0x30
  20:	940b      	str	r4, [sp, #44]	; 0x2c
  22:	950a      	str	r5, [sp, #40]	; 0x28
  24:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  28:	9014      	str	r0, [sp, #80]	; 0x50
  2a:	e7ff      	b.n	2c <core::slice::<impl [T]>::copy_from_slice+0x2c>
  2c:	9810      	ldr	r0, [sp, #64]	; 0x40
  2e:	9911      	ldr	r1, [sp, #68]	; 0x44
  30:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  34:	9015      	str	r0, [sp, #84]	; 0x54
  36:	e7ff      	b.n	38 <core::slice::<impl [T]>::copy_from_slice+0x38>
  38:	a814      	add	r0, sp, #80	; 0x50
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:64
  3a:	9012      	str	r0, [sp, #72]	; 0x48
  3c:	a815      	add	r0, sp, #84	; 0x54
  3e:	9013      	str	r0, [sp, #76]	; 0x4c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:65
  40:	9812      	ldr	r0, [sp, #72]	; 0x48
  42:	9016      	str	r0, [sp, #88]	; 0x58
  44:	9813      	ldr	r0, [sp, #76]	; 0x4c
  46:	9017      	str	r0, [sp, #92]	; 0x5c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:66
  48:	9816      	ldr	r0, [sp, #88]	; 0x58
  4a:	6800      	ldr	r0, [r0, #0]
  4c:	9917      	ldr	r1, [sp, #92]	; 0x5c
  4e:	6809      	ldr	r1, [r1, #0]
  50:	4288      	cmp	r0, r1
  52:	d014      	beq.n	7e <core::slice::<impl [T]>::copy_from_slice+0x7e>
  54:	e7ff      	b.n	56 <core::slice::<impl [T]>::copy_from_slice+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:72
  56:	9816      	ldr	r0, [sp, #88]	; 0x58
  58:	9027      	str	r0, [sp, #156]	; 0x9c
  5a:	9817      	ldr	r0, [sp, #92]	; 0x5c
  5c:	9028      	str	r0, [sp, #160]	; 0xa0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:73
  5e:	4668      	mov	r0, sp
  60:	2100      	movs	r1, #0
  62:	6001      	str	r1, [r0, #0]
  64:	f240 0100 	movw	r1, #0
  68:	f2c0 0100 	movt	r1, #0
  6c:	f240 0300 	movw	r3, #0
  70:	f2c0 0300 	movt	r3, #0
  74:	a829      	add	r0, sp, #164	; 0xa4
  76:	2201      	movs	r2, #1
  78:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
  7c:	e005      	b.n	8a <core::slice::<impl [T]>::copy_from_slice+0x8a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2127
  7e:	9810      	ldr	r0, [sp, #64]	; 0x40
  80:	9911      	ldr	r1, [sp, #68]	; 0x44
  82:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  86:	9009      	str	r0, [sp, #36]	; 0x24
  88:	e04e      	b.n	128 <core::slice::<impl [T]>::copy_from_slice+0x128>
  8a:	a827      	add	r0, sp, #156	; 0x9c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:70
  8c:	9024      	str	r0, [sp, #144]	; 0x90
  8e:	a828      	add	r0, sp, #160	; 0xa0
  90:	9025      	str	r0, [sp, #148]	; 0x94
  92:	a829      	add	r0, sp, #164	; 0xa4
  94:	9026      	str	r0, [sp, #152]	; 0x98
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:1
//! Mynewt API for Rust. Contains Rust bindings for Mynewt API for C, generated by `bindgen`.
  96:	9824      	ldr	r0, [sp, #144]	; 0x90
  98:	902f      	str	r0, [sp, #188]	; 0xbc
  9a:	9825      	ldr	r0, [sp, #148]	; 0x94
  9c:	9030      	str	r0, [sp, #192]	; 0xc0
  9e:	9826      	ldr	r0, [sp, #152]	; 0x98
  a0:	9031      	str	r0, [sp, #196]	; 0xc4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:72
  a2:	982f      	ldr	r0, [sp, #188]	; 0xbc
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  a4:	f240 0100 	movw	r1, #0
  a8:	f2c0 0100 	movt	r1, #0
  ac:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  b0:	9008      	str	r0, [sp, #32]
  b2:	9107      	str	r1, [sp, #28]
  b4:	e7ff      	b.n	b6 <core::slice::<impl [T]>::copy_from_slice+0xb6>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:72
  b6:	9830      	ldr	r0, [sp, #192]	; 0xc0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  b8:	f240 0100 	movw	r1, #0
  bc:	f2c0 0100 	movt	r1, #0
  c0:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  c4:	9006      	str	r0, [sp, #24]
  c6:	9105      	str	r1, [sp, #20]
  c8:	e7ff      	b.n	ca <core::slice::<impl [T]>::copy_from_slice+0xca>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:73
  ca:	9831      	ldr	r0, [sp, #196]	; 0xc4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  cc:	f240 0100 	movw	r1, #0
  d0:	f2c0 0100 	movt	r1, #0
  d4:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
  d8:	9004      	str	r0, [sp, #16]
  da:	9103      	str	r1, [sp, #12]
  dc:	e7ff      	b.n	de <core::slice::<impl [T]>::copy_from_slice+0xde>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:70
  de:	9808      	ldr	r0, [sp, #32]
  e0:	901e      	str	r0, [sp, #120]	; 0x78
  e2:	9907      	ldr	r1, [sp, #28]
  e4:	911f      	str	r1, [sp, #124]	; 0x7c
  e6:	9a06      	ldr	r2, [sp, #24]
  e8:	9220      	str	r2, [sp, #128]	; 0x80
  ea:	9b05      	ldr	r3, [sp, #20]
  ec:	9321      	str	r3, [sp, #132]	; 0x84
  ee:	f8dd c010 	ldr.w	ip, [sp, #16]
  f2:	f8cd c088 	str.w	ip, [sp, #136]	; 0x88
  f6:	f8dd e00c 	ldr.w	lr, [sp, #12]
  fa:	f8cd e08c 	str.w	lr, [sp, #140]	; 0x8c
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  fe:	466c      	mov	r4, sp
 100:	2503      	movs	r5, #3
 102:	6025      	str	r5, [r4, #0]
 104:	f240 0100 	movw	r1, #0
 108:	f2c0 0100 	movt	r1, #0
 10c:	a818      	add	r0, sp, #96	; 0x60
 10e:	ab1e      	add	r3, sp, #120	; 0x78
 110:	462a      	mov	r2, r5
 112:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 116:	e7ff      	b.n	2 <core::slice::<impl [T]>::copy_from_slice+0x2>
 118:	f240 0100 	movw	r1, #0
 11c:	f2c0 0100 	movt	r1, #0
 120:	a818      	add	r0, sp, #96	; 0x60
 122:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 126:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2127
 128:	980e      	ldr	r0, [sp, #56]	; 0x38
 12a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 12c:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::copy_from_slice>
 130:	9002      	str	r0, [sp, #8]
 132:	e7ff      	b.n	134 <core::slice::<impl [T]>::copy_from_slice+0x134>
 134:	980e      	ldr	r0, [sp, #56]	; 0x38
 136:	990f      	ldr	r1, [sp, #60]	; 0x3c
 138:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
 13c:	9001      	str	r0, [sp, #4]
 13e:	e7ff      	b.n	140 <core::slice::<impl [T]>::copy_from_slice+0x140>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2126
 140:	9809      	ldr	r0, [sp, #36]	; 0x24
 142:	9902      	ldr	r1, [sp, #8]
 144:	9a01      	ldr	r2, [sp, #4]
 146:	f7ff fffe 	bl	0 <core::intrinsics::copy_nonoverlapping>
 14a:	e7ff      	b.n	14c <core::slice::<impl [T]>::copy_from_slice+0x14c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2129
 14c:	b032      	add	sp, #200	; 0xc8
 14e:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb4a91e78f630f22cE:

00000000 <core::slice::<impl [T]>::get>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb4a91e78f630f22cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:276
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:279
  10:	9807      	ldr	r0, [sp, #28]
  12:	9905      	ldr	r1, [sp, #20]
  14:	9a06      	ldr	r2, [sp, #24]
  16:	9304      	str	r3, [sp, #16]
  18:	f8cd c00c 	str.w	ip, [sp, #12]
  1c:	f8cd e008 	str.w	lr, [sp, #8]
  20:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::get>
  24:	9001      	str	r0, [sp, #4]
  26:	e7ff      	b.n	28 <core::slice::<impl [T]>::get+0x28>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:280
  28:	9801      	ldr	r0, [sp, #4]
  2a:	b008      	add	sp, #32
  2c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h9f79003d40cdc30eE:

00000000 <core::slice::<impl [T]>::last>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h9f79003d40cdc30eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:233
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   c:	9806      	ldr	r0, [sp, #24]
   e:	9907      	ldr	r1, [sp, #28]
  10:	9205      	str	r2, [sp, #20]
  12:	9304      	str	r3, [sp, #16]
  14:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  18:	9003      	str	r0, [sp, #12]
  1a:	e7ff      	b.n	1c <core::slice::<impl [T]>::last+0x1c>
  1c:	2101      	movs	r1, #1
  1e:	9803      	ldr	r0, [sp, #12]
  20:	f7ff fffe 	bl	0 <core::num::<impl usize>::checked_sub>
  24:	9002      	str	r0, [sp, #8]
  26:	9101      	str	r1, [sp, #4]
  28:	e7ff      	b.n	2a <core::slice::<impl [T]>::last+0x2a>
  2a:	9802      	ldr	r0, [sp, #8]
  2c:	9901      	ldr	r1, [sp, #4]
  2e:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::ops::try::Try>::into_result>
  32:	910b      	str	r1, [sp, #44]	; 0x2c
  34:	900a      	str	r0, [sp, #40]	; 0x28
  36:	e7ff      	b.n	38 <core::slice::<impl [T]>::last+0x38>
  38:	980a      	ldr	r0, [sp, #40]	; 0x28
  3a:	2800      	cmp	r0, #0
  3c:	9000      	str	r0, [sp, #0]
  3e:	d010      	beq.n	62 <core::slice::<impl [T]>::last+0x62>
  40:	e7ff      	b.n	42 <core::slice::<impl [T]>::last+0x42>
  42:	9800      	ldr	r0, [sp, #0]
  44:	2801      	cmp	r0, #1
  46:	d001      	beq.n	4c <core::slice::<impl [T]>::last+0x4c>
  48:	e7ff      	b.n	4a <core::slice::<impl [T]>::last+0x4a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:236
  4a:	defe      	udf	#254	; 0xfe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
  4c:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
  50:	e7ff      	b.n	2 <<core::option::Option<T> as core::ops::try::Try>::from_error+0x2>
  52:	f7ff fffe 	bl	0 <<core::option::Option<T> as core::ops::try::Try>::from_error>
  56:	9008      	str	r0, [sp, #32]
  58:	e7ff      	b.n	5a <core::slice::<impl [T]>::last+0x5a>
  5a:	e7ff      	b.n	5c <core::slice::<impl [T]>::last+0x5c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:236
  5c:	9808      	ldr	r0, [sp, #32]
  5e:	b00e      	add	sp, #56	; 0x38
  60:	bd80      	pop	{r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
  62:	980b      	ldr	r0, [sp, #44]	; 0x2c
  64:	900d      	str	r0, [sp, #52]	; 0x34
  66:	980d      	ldr	r0, [sp, #52]	; 0x34
  68:	9009      	str	r0, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:235
  6a:	9806      	ldr	r0, [sp, #24]
  6c:	9907      	ldr	r1, [sp, #28]
  6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  70:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::last>
  74:	9008      	str	r0, [sp, #32]
  76:	e7ff      	b.n	78 <core::slice::<impl [T]>::last+0x78>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:236
  78:	e7f0      	b.n	5c <core::slice::<impl [T]>::last+0x5c>

Disassembly of section .text._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd1cf7d4988df5723E:

00000000 <core::slice::<impl [T]>::as_ptr>:
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hd1cf7d4988df5723E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:385
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:386
   a:	9802      	ldr	r0, [sp, #8]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:387
   c:	9201      	str	r2, [sp, #4]
   e:	9300      	str	r3, [sp, #0]
  10:	b004      	add	sp, #16
  12:	4770      	bx	lr

Disassembly of section .text._ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h67eed304dd30c897E:

00000000 <core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut>:
_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h67eed304dd30c897E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2561
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2562
  10:	9807      	ldr	r0, [sp, #28]
  12:	9905      	ldr	r1, [sp, #20]
  14:	9a06      	ldr	r2, [sp, #24]
  16:	9304      	str	r3, [sp, #16]
  18:	f8cd c00c 	str.w	ip, [sp, #12]
  1c:	f8cd e008 	str.w	lr, [sp, #8]
  20:	f7ff fffe 	bl	0 <<core::ops::range::RangeTo<usize> as core::slice::SliceIndex<[T]>>::index_mut>
  24:	9001      	str	r0, [sp, #4]
  26:	9100      	str	r1, [sp, #0]
  28:	e7ff      	b.n	2a <core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut+0x2a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2563
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	9900      	ldr	r1, [sp, #0]
  2e:	b008      	add	sp, #32
  30:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h85c309d56cc666c6E:

00000000 <<usize as core::slice::SliceIndex<[T]>>::get_unchecked>:
_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h85c309d56cc666c6E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2683
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9005      	str	r0, [sp, #20]
   c:	9106      	str	r1, [sp, #24]
   e:	9207      	str	r2, [sp, #28]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2684
  10:	9806      	ldr	r0, [sp, #24]
  12:	9907      	ldr	r1, [sp, #28]
  14:	9304      	str	r3, [sp, #16]
  16:	f8cd c00c 	str.w	ip, [sp, #12]
  1a:	f8cd e008 	str.w	lr, [sp, #8]
  1e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_ptr>
  22:	9001      	str	r0, [sp, #4]
  24:	e7ff      	b.n	26 <<usize as core::slice::SliceIndex<[T]>>::get_unchecked+0x26>
  26:	9905      	ldr	r1, [sp, #20]
  28:	9801      	ldr	r0, [sp, #4]
  2a:	f7ff fffe 	bl	0 <core::ptr::<impl *const T>::add>
  2e:	9000      	str	r0, [sp, #0]
  30:	e7ff      	b.n	32 <<usize as core::slice::SliceIndex<[T]>>::get_unchecked+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2685
  32:	9800      	ldr	r0, [sp, #0]
  34:	b008      	add	sp, #32
  36:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h19d437c8d974b8d1E:

00000000 <<usize as core::slice::SliceIndex<[T]>>::get>:
_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h19d437c8d974b8d1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2661
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9006      	str	r0, [sp, #24]
   c:	9107      	str	r1, [sp, #28]
   e:	9208      	str	r2, [sp, #32]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2662
  10:	9806      	ldr	r0, [sp, #24]
  12:	9907      	ldr	r1, [sp, #28]
  14:	9a08      	ldr	r2, [sp, #32]
  16:	9005      	str	r0, [sp, #20]
  18:	4608      	mov	r0, r1
  1a:	4611      	mov	r1, r2
  1c:	9304      	str	r3, [sp, #16]
  1e:	f8cd c00c 	str.w	ip, [sp, #12]
  22:	f8cd e008 	str.w	lr, [sp, #8]
  26:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  2a:	9001      	str	r0, [sp, #4]
  2c:	e7ff      	b.n	2e <<usize as core::slice::SliceIndex<[T]>>::get+0x2e>
  2e:	9805      	ldr	r0, [sp, #20]
  30:	9901      	ldr	r1, [sp, #4]
  32:	4288      	cmp	r0, r1
  34:	d20a      	bcs.n	4c <<usize as core::slice::SliceIndex<[T]>>::get+0x4c>
  36:	e7ff      	b.n	38 <<usize as core::slice::SliceIndex<[T]>>::get+0x38>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2664
  38:	9806      	ldr	r0, [sp, #24]
  3a:	9907      	ldr	r1, [sp, #28]
  3c:	9a08      	ldr	r2, [sp, #32]
  3e:	f7ff fffe 	bl	0 <<usize as core::slice::SliceIndex<[T]>>::get>
  42:	9000      	str	r0, [sp, #0]
  44:	e7ff      	b.n	46 <<usize as core::slice::SliceIndex<[T]>>::get+0x46>
  46:	9800      	ldr	r0, [sp, #0]
  48:	9009      	str	r0, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2662
  4a:	e002      	b.n	52 <<usize as core::slice::SliceIndex<[T]>>::get+0x52>
  4c:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2667
  4e:	9009      	str	r0, [sp, #36]	; 0x24
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2662
  50:	e7ff      	b.n	52 <<usize as core::slice::SliceIndex<[T]>>::get+0x52>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2669
  52:	9809      	ldr	r0, [sp, #36]	; 0x24
  54:	b00a      	add	sp, #40	; 0x28
  56:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.hd74ookg8ttyy52.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 hd74ookg8ttyy52
00000298 l       .debug_str	00000000 
000004ab l       .debug_str	00000000 
000004bd l       .debug_str	00000000 
00000491 l       .debug_str	00000000 
000004b8 l       .debug_str	00000000 
00000487 l       .debug_str	00000000 
000004b4 l       .debug_str	00000000 
0000046e l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
0000008d l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
0000009e l       .debug_str	00000000 
000000a3 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b8 l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000c6 l       .debug_str	00000000 
000000cf l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
00000188 l       .debug_str	00000000 
000001e5 l       .debug_str	00000000 
00000242 l       .debug_str	00000000 
00000247 l       .debug_str	00000000 
0000024b l       .debug_str	00000000 
0000024d l       .debug_str	00000000 
00000253 l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
0000025c l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
00000267 l       .debug_str	00000000 
0000026d l       .debug_str	00000000 
00000274 l       .debug_str	00000000 
00000279 l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
00000286 l       .debug_str	00000000 
0000028a l       .debug_str	00000000 
00000467 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000002a6 l       .debug_str	00000000 
000002ae l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
000002bd l       .debug_str	00000000 
000002d1 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e8 l       .debug_str	00000000 
000002ef l       .debug_str	00000000 
000002f5 l       .debug_str	00000000 
000002f9 l       .debug_str	00000000 
000002ff l       .debug_str	00000000 
00000305 l       .debug_str	00000000 
00000308 l       .debug_str	00000000 
00000317 l       .debug_str	00000000 
0000031e l       .debug_str	00000000 
00000322 l       .debug_str	00000000 
0000032b l       .debug_str	00000000 
00000337 l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000355 l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
00000370 l       .debug_str	00000000 
000003ce l       .debug_str	00000000 
000003d9 l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
000003fa l       .debug_str	00000000 
00000402 l       .debug_str	00000000 
00000419 l       .debug_str	00000000 
0000043d l       .debug_str	00000000 
00000459 l       .debug_str	00000000 
0000045e l       .debug_str	00000000 
000004af l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hd18febbae977edc8E	00000000 .text._ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hd18febbae977edc8E
00000000 l    d  .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h16ef8ddab3dbb693E	00000000 .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h16ef8ddab3dbb693E
00000000 l    d  .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i64$GT$3fmt17h922eff1c86de8976E	00000000 .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i64$GT$3fmt17h922eff1c86de8976E
00000000 l    d  .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h9d002ce2a0da58cbE	00000000 .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h9d002ce2a0da58cbE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for i64>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
00000000 g     F .text._ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hd18febbae977edc8E	00000072 .hidden core::fmt::num::<impl core::fmt::Debug for u8>::fmt
00000000 g     F .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h16ef8ddab3dbb693E	00000072 .hidden core::fmt::num::<impl core::fmt::Debug for i32>::fmt
00000000 g     F .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i64$GT$3fmt17h922eff1c86de8976E	00000072 .hidden core::fmt::num::<impl core::fmt::Debug for i64>::fmt
00000000 g     F .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h9d002ce2a0da58cbE	00000072 .hidden core::fmt::num::<impl core::fmt::Debug for u32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
00000000         *UND*	00000000 core::fmt::Formatter::debug_lower_hex
00000000         *UND*	00000000 core::fmt::Formatter::debug_upper_hex



Disassembly of section .text._ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hd18febbae977edc8E:

00000000 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt>:
_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hd18febbae977edc8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:146
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   c:	9806      	ldr	r0, [sp, #24]
   e:	9204      	str	r2, [sp, #16]
  10:	9303      	str	r3, [sp, #12]
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
  16:	9002      	str	r0, [sp, #8]
  18:	e7ff      	b.n	1a <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x1a>
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	07c1      	lsls	r1, r0, #31
  1e:	2900      	cmp	r1, #0
  20:	d008      	beq.n	34 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x34>
  22:	e7ff      	b.n	24 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x24>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
  24:	9805      	ldr	r0, [sp, #20]
  26:	9906      	ldr	r1, [sp, #24]
  28:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt>
  2c:	f88d 001f 	strb.w	r0, [sp, #31]
  30:	e7ff      	b.n	32 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  32:	e01a      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  34:	9806      	ldr	r0, [sp, #24]
  36:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d008      	beq.n	58 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x58>
  46:	e7ff      	b.n	48 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9906      	ldr	r1, [sp, #24]
  4c:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt>
  50:	f88d 001f 	strb.w	r0, [sp, #31]
  54:	e7ff      	b.n	56 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  56:	e007      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  58:	9805      	ldr	r0, [sp, #20]
  5a:	9906      	ldr	r1, [sp, #24]
  5c:	f7ff fffe 	bl	0 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt>
  60:	f88d 001f 	strb.w	r0, [sp, #31]
  64:	e7ff      	b.n	66 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x66>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  66:	e7ff      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  68:	e7ff      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for u8>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:154
  6a:	f89d 001f 	ldrb.w	r0, [sp, #31]
  6e:	b008      	add	sp, #32
  70:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h16ef8ddab3dbb693E:

00000000 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt>:
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h16ef8ddab3dbb693E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:146
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   c:	9806      	ldr	r0, [sp, #24]
   e:	9204      	str	r2, [sp, #16]
  10:	9303      	str	r3, [sp, #12]
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
  16:	9002      	str	r0, [sp, #8]
  18:	e7ff      	b.n	1a <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x1a>
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	07c1      	lsls	r1, r0, #31
  1e:	2900      	cmp	r1, #0
  20:	d008      	beq.n	34 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x34>
  22:	e7ff      	b.n	24 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x24>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
  24:	9805      	ldr	r0, [sp, #20]
  26:	9906      	ldr	r1, [sp, #24]
  28:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt>
  2c:	f88d 001f 	strb.w	r0, [sp, #31]
  30:	e7ff      	b.n	32 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  32:	e01a      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  34:	9806      	ldr	r0, [sp, #24]
  36:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d008      	beq.n	58 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x58>
  46:	e7ff      	b.n	48 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9906      	ldr	r1, [sp, #24]
  4c:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt>
  50:	f88d 001f 	strb.w	r0, [sp, #31]
  54:	e7ff      	b.n	56 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  56:	e007      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  58:	9805      	ldr	r0, [sp, #20]
  5a:	9906      	ldr	r1, [sp, #24]
  5c:	f7ff fffe 	bl	0 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt>
  60:	f88d 001f 	strb.w	r0, [sp, #31]
  64:	e7ff      	b.n	66 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x66>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  66:	e7ff      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  68:	e7ff      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:154
  6a:	f89d 001f 	ldrb.w	r0, [sp, #31]
  6e:	b008      	add	sp, #32
  70:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i64$GT$3fmt17h922eff1c86de8976E:

00000000 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt>:
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i64$GT$3fmt17h922eff1c86de8976E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:146
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   c:	9806      	ldr	r0, [sp, #24]
   e:	9204      	str	r2, [sp, #16]
  10:	9303      	str	r3, [sp, #12]
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
  16:	9002      	str	r0, [sp, #8]
  18:	e7ff      	b.n	1a <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x1a>
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	07c1      	lsls	r1, r0, #31
  1e:	2900      	cmp	r1, #0
  20:	d008      	beq.n	34 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x34>
  22:	e7ff      	b.n	24 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x24>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
  24:	9805      	ldr	r0, [sp, #20]
  26:	9906      	ldr	r1, [sp, #24]
  28:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt>
  2c:	f88d 001f 	strb.w	r0, [sp, #31]
  30:	e7ff      	b.n	32 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  32:	e01a      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  34:	9806      	ldr	r0, [sp, #24]
  36:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d008      	beq.n	58 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x58>
  46:	e7ff      	b.n	48 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9906      	ldr	r1, [sp, #24]
  4c:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt>
  50:	f88d 001f 	strb.w	r0, [sp, #31]
  54:	e7ff      	b.n	56 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  56:	e007      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  58:	9805      	ldr	r0, [sp, #20]
  5a:	9906      	ldr	r1, [sp, #24]
  5c:	f7ff fffe 	bl	0 <core::fmt::num::imp::<impl core::fmt::Display for i64>::fmt>
  60:	f88d 001f 	strb.w	r0, [sp, #31]
  64:	e7ff      	b.n	66 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x66>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  66:	e7ff      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  68:	e7ff      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for i64>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:154
  6a:	f89d 001f 	ldrb.w	r0, [sp, #31]
  6e:	b008      	add	sp, #32
  70:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h9d002ce2a0da58cbE:

00000000 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt>:
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h9d002ce2a0da58cbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:146
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   c:	9806      	ldr	r0, [sp, #24]
   e:	9204      	str	r2, [sp, #16]
  10:	9303      	str	r3, [sp, #12]
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
  16:	9002      	str	r0, [sp, #8]
  18:	e7ff      	b.n	1a <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x1a>
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	07c1      	lsls	r1, r0, #31
  1e:	2900      	cmp	r1, #0
  20:	d008      	beq.n	34 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x34>
  22:	e7ff      	b.n	24 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x24>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
  24:	9805      	ldr	r0, [sp, #20]
  26:	9906      	ldr	r1, [sp, #24]
  28:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt>
  2c:	f88d 001f 	strb.w	r0, [sp, #31]
  30:	e7ff      	b.n	32 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x32>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  32:	e01a      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  34:	9806      	ldr	r0, [sp, #24]
  36:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d008      	beq.n	58 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x58>
  46:	e7ff      	b.n	48 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x48>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9906      	ldr	r1, [sp, #24]
  4c:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt>
  50:	f88d 001f 	strb.w	r0, [sp, #31]
  54:	e7ff      	b.n	56 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x56>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  56:	e007      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  58:	9805      	ldr	r0, [sp, #20]
  5a:	9906      	ldr	r1, [sp, #24]
  5c:	f7ff fffe 	bl	0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
  60:	f88d 001f 	strb.w	r0, [sp, #31]
  64:	e7ff      	b.n	66 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x66>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  66:	e7ff      	b.n	68 <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x68>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
  68:	e7ff      	b.n	6a <core::fmt::num::<impl core::fmt::Debug for u32>::fmt+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:154
  6a:	f89d 001f 	ldrb.w	r0, [sp, #31]
  6e:	b008      	add	sp, #32
  70:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.lllmpnvtc5thcz6.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 lllmpnvtc5thcz6
000000a0 l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000099 l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000af l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h4d8b2180f89bdb80E	00000000 .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h4d8b2180f89bdb80E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h4d8b2180f89bdb80E	00000026 core::ptr::<impl *mut T>::is_null
00000000         *UND*	00000000 core::ptr::null_mut



Disassembly of section .text._ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h4d8b2180f89bdb80E:

00000000 <core::ptr::<impl *mut T>::is_null>:
_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h4d8b2180f89bdb80E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1590
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	4601      	mov	r1, r0
   6:	9003      	str	r0, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1593
   8:	9803      	ldr	r0, [sp, #12]
   a:	9102      	str	r1, [sp, #8]
   c:	9001      	str	r0, [sp, #4]
   e:	f7ff fffe 	bl	0 <core::ptr::null_mut>
  12:	9000      	str	r0, [sp, #0]
  14:	e7ff      	b.n	16 <core::ptr::<impl *mut T>::is_null+0x16>
  16:	9801      	ldr	r0, [sp, #4]
  18:	9900      	ldr	r1, [sp, #0]
  1a:	1a42      	subs	r2, r0, r1
  1c:	fab2 f282 	clz	r2, r2
  20:	0950      	lsrs	r0, r2, #5
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1594
  22:	b004      	add	sp, #16
  24:	bd80      	pop	{r7, pc}

mynewt-d7fd96264f78b961.scwjot157riwdzf.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 scwjot157riwdzf
000000b3 l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
0000008b l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
00000097 l       .debug_str	00000000 
000000a1 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000ae l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
000000b5 l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
00000132 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
00000000 l    d  .text._ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h4b06bb0805ad5374E	00000000 .text._ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h4b06bb0805ad5374E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
00000000 g     F .text._ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h4b06bb0805ad5374E	00000052 core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq



Disassembly of section .text._ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h4b06bb0805ad5374E:

00000000 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq>:
_ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h4b06bb0805ad5374E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/tuple.rs:17
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/tuple.rs:18
   c:	9805      	ldr	r0, [sp, #20]
   e:	9906      	ldr	r1, [sp, #24]
  10:	9204      	str	r2, [sp, #16]
  12:	9303      	str	r3, [sp, #12]
  14:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq>
  18:	9002      	str	r0, [sp, #8]
  1a:	e00f      	b.n	3c <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq+0x3c>
  1c:	2000      	movs	r0, #0
  1e:	f88d 001f 	strb.w	r0, [sp, #31]
  22:	e007      	b.n	34 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq+0x34>
  24:	9805      	ldr	r0, [sp, #20]
  26:	3008      	adds	r0, #8
  28:	9906      	ldr	r1, [sp, #24]
  2a:	3108      	adds	r1, #8
  2c:	f7ff fffe 	bl	0 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq>
  30:	9001      	str	r0, [sp, #4]
  32:	e008      	b.n	46 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq+0x46>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/tuple.rs:19
  34:	f89d 001f 	ldrb.w	r0, [sp, #31]
  38:	b008      	add	sp, #32
  3a:	bd80      	pop	{r7, pc}
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/tuple.rs:18
  3c:	9802      	ldr	r0, [sp, #8]
  3e:	07c1      	lsls	r1, r0, #31
  40:	2900      	cmp	r1, #0
  42:	d1ef      	bne.n	24 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq+0x24>
  44:	e7ea      	b.n	1c <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq+0x1c>
  46:	9801      	ldr	r0, [sp, #4]
  48:	f000 0101 	and.w	r1, r0, #1
  4c:	f88d 101f 	strb.w	r1, [sp, #31]
  50:	e7f0      	b.n	34 <core::tuple::<impl core::cmp::PartialEq for (A, B)>::eq+0x34>

stable_deref_trait-1a34959ebaace6bf.stable_deref_trait.bsw952b5-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stable_deref_trait.bsw952b5-cgu.0



typenum-bc602af176d280ae.typenum.47drc0bk-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 typenum.47drc0bk-cgu.0
000004a7 l       .debug_str	00000000 
00000819 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
00000812 l       .debug_str	00000000 
00000885 l       .debug_str	00000000 
00000809 l       .debug_str	00000000 
0000087a l       .debug_str	00000000 
00000804 l       .debug_str	00000000 
00000873 l       .debug_str	00000000 
000007e8 l       .debug_str	00000000 
0000086a l       .debug_str	00000000 
000007c4 l       .debug_str	00000000 
00000856 l       .debug_str	00000000 
000007ad l       .debug_str	00000000 
0000083c l       .debug_str	00000000 
000007a9 l       .debug_str	00000000 
0000078c l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000147 l       .debug_str	00000000 
0000014e l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000161 l       .debug_str	00000000 
00000165 l       .debug_str	00000000 
00000168 l       .debug_str	00000000 
00000191 l       .debug_str	00000000 
00000193 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001cd l       .debug_str	00000000 
000001fa l       .debug_str	00000000 
00000243 l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
0000028e l       .debug_str	00000000 
00000294 l       .debug_str	00000000 
000002cb l       .debug_str	00000000 
0000030c l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
00000368 l       .debug_str	00000000 
0000036b l       .debug_str	00000000 
000003c3 l       .debug_str	00000000 
000003c7 l       .debug_str	00000000 
0000043f l       .debug_str	00000000 
00000444 l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
00000781 l       .debug_str	00000000 
00000506 l       .debug_str	00000000 
0000050a l       .debug_str	00000000 
00000597 l       .debug_str	00000000 
0000059b l       .debug_str	00000000 
000005a1 l       .debug_str	00000000 
000005f4 l       .debug_str	00000000 
000005f9 l       .debug_str	00000000 
0000060b l       .debug_str	00000000 
0000060d l       .debug_str	00000000 
00000613 l       .debug_str	00000000 
00000617 l       .debug_str	00000000 
0000061c l       .debug_str	00000000 
00000621 l       .debug_str	00000000 
00000627 l       .debug_str	00000000 
0000062d l       .debug_str	00000000 
00000634 l       .debug_str	00000000 
00000639 l       .debug_str	00000000 
0000063f l       .debug_str	00000000 
00000644 l       .debug_str	00000000 
00000652 l       .debug_str	00000000 
0000065c l       .debug_str	00000000 
00000660 l       .debug_str	00000000 
00000668 l       .debug_str	00000000 
00000670 l       .debug_str	00000000 
00000677 l       .debug_str	00000000 
0000068b l       .debug_str	00000000 
00000697 l       .debug_str	00000000 
000006a2 l       .debug_str	00000000 
000006a9 l       .debug_str	00000000 
000006af l       .debug_str	00000000 
000006b3 l       .debug_str	00000000 
000006b9 l       .debug_str	00000000 
000006bf l       .debug_str	00000000 
000006c2 l       .debug_str	00000000 
000006d1 l       .debug_str	00000000 
000006d5 l       .debug_str	00000000 
000006de l       .debug_str	00000000 
000006ea l       .debug_str	00000000 
00000703 l       .debug_str	00000000 
00000708 l       .debug_str	00000000 
00000719 l       .debug_str	00000000 
00000723 l       .debug_str	00000000 
00000832 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.7c73f258eac8fc902a17c43143e641bb.0	00000002 .Lanon.7c73f258eac8fc902a17c43143e641bb.0
00000000 l    d  .text._ZN7typenum3int13PInt$LT$U$GT$3new17h2348e8d8576a9f45E	00000000 .text._ZN7typenum3int13PInt$LT$U$GT$3new17h2348e8d8576a9f45E
00000000 l    d  .text._ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Neg$GT$3neg17h460b67aef16cac71E	00000000 .text._ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Neg$GT$3neg17h460b67aef16cac71E
00000000 l    d  .text._ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc31c35ca2c64dca7E	00000000 .text._ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc31c35ca2c64dca7E
00000000 l    d  .text._ZN89_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Pow$LT$typenum..int..Z0$GT$$GT$4powi17hda59e777492742b2E	00000000 .text._ZN89_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Pow$LT$typenum..int..Z0$GT$$GT$4powi17hda59e777492742b2E
00000000 l    d  .text._ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Min$GT$3min17h9b565df436a88dd9E	00000000 .text._ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Min$GT$3min17h9b565df436a88dd9E
00000000 l    d  .text._ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Max$GT$3max17h92ad54469b8247d2E	00000000 .text._ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Max$GT$3max17h92ad54469b8247d2E
00000000 l    d  .text._ZN7typenum5array97_$LT$impl$u20$core..ops..arith..Mul$LT$typenum..array..ATerm$GT$$u20$for$u20$typenum..int..Z0$GT$3mul17hd39e678f8a4545d4E	00000000 .text._ZN7typenum5array97_$LT$impl$u20$core..ops..arith..Mul$LT$typenum..array..ATerm$GT$$u20$for$u20$typenum..int..Z0$GT$3mul17hd39e678f8a4545d4E
00000000 l    d  .text._ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h46d165f232534726E	00000000 .text._ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h46d165f232534726E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h46d165f232534726E	00000048 <typenum::int::Z0 as core::fmt::Debug>::fmt
00000000 g     F .text._ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Neg$GT$3neg17h460b67aef16cac71E	00000006 <typenum::int::Z0 as core::ops::arith::Neg>::neg
00000000 g     F .text._ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc31c35ca2c64dca7E	00000006 <typenum::int::Z0 as core::ops::arith::Sub>::sub
00000000 g     F .text._ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Max$GT$3max17h92ad54469b8247d2E	00000006 <typenum::int::Z0 as typenum::type_operators::Max>::max
00000000 g     F .text._ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Min$GT$3min17h9b565df436a88dd9E	00000006 <typenum::int::Z0 as typenum::type_operators::Min>::min
00000000 g     F .text._ZN7typenum3int13PInt$LT$U$GT$3new17h2348e8d8576a9f45E	00000006 typenum::int::PInt<U>::new
00000000 g     F .text._ZN7typenum5array97_$LT$impl$u20$core..ops..arith..Mul$LT$typenum..array..ATerm$GT$$u20$for$u20$typenum..int..Z0$GT$3mul17hd39e678f8a4545d4E	00000006 typenum::array::<impl core::ops::arith::Mul<typenum::array::ATerm> for typenum::int::Z0>::mul
00000000 g     F .text._ZN89_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Pow$LT$typenum..int..Z0$GT$$GT$4powi17hda59e777492742b2E	0000000e <typenum::int::Z0 as typenum::type_operators::Pow<typenum::int::Z0>>::powi



Disassembly of section .text._ZN7typenum3int13PInt$LT$U$GT$3new17h2348e8d8576a9f45E:

00000000 <typenum::int::PInt<U>::new>:
_ZN7typenum3int13PInt$LT$U$GT$3new17h2348e8d8576a9f45E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:56
}

impl<U: Unsigned + NonZero> PInt<U> {
    /// Instantiates a singleton representing this strictly positive integer.
    #[inline]
    pub fn new() -> PInt<U> {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:60
        PInt {
            _marker: PhantomData,
        }
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Neg$GT$3neg17h460b67aef16cac71E:

00000000 <<typenum::int::Z0 as core::ops::arith::Neg>::neg>:
_ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Neg$GT$3neg17h460b67aef16cac71E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:204
// Neg

/// `-Z0 = Z0`
impl Neg for Z0 {
    type Output = Z0;
    fn neg(self) -> Self::Output {
   0:	b081      	sub	sp, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:206
        Z0
    }
   2:	b001      	add	sp, #4
   4:	4770      	bx	lr

Disassembly of section .text._ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc31c35ca2c64dca7E:

00000000 <<typenum::int::Z0 as core::ops::arith::Sub>::sub>:
_ZN58_$LT$typenum..int..Z0$u20$as$u20$core..ops..arith..Sub$GT$3sub17hc31c35ca2c64dca7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:328
// Sub

/// `Z0 - Z0 = Z0`
impl Sub<Z0> for Z0 {
    type Output = Z0;
    fn sub(self, _: Z0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:330
        Z0
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN89_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Pow$LT$typenum..int..Z0$GT$$GT$4powi17hda59e777492742b2E:

00000000 <<typenum::int::Z0 as typenum::type_operators::Pow<typenum::int::Z0>>::powi>:
_ZN89_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Pow$LT$typenum..int..Z0$GT$$GT$4powi17hda59e777492742b2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:647
// Pow

/// 0^0 = 1
impl Pow<Z0> for Z0 {
    type Output = P1;
    fn powi(self, _: Z0) -> Self::Output {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:648
        P1::new()
   4:	f7ff fffe 	bl	0 <<typenum::int::Z0 as typenum::type_operators::Pow<typenum::int::Z0>>::powi>
   8:	e7ff      	b.n	a <<typenum::int::Z0 as typenum::type_operators::Pow<typenum::int::Z0>>::powi+0xa>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:649
    }
   a:	b002      	add	sp, #8
   c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Min$GT$3min17h9b565df436a88dd9E:

00000000 <<typenum::int::Z0 as typenum::type_operators::Min>::min>:
_ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Min$GT$3min17h9b565df436a88dd9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:750
// Min
use {Max, Maximum, Min, Minimum};

impl Min<Z0> for Z0 {
    type Output = Z0;
    fn min(self, _: Z0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:752
        self
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Max$GT$3max17h92ad54469b8247d2E:

00000000 <<typenum::int::Z0 as typenum::type_operators::Max>::max>:
_ZN65_$LT$typenum..int..Z0$u20$as$u20$typenum..type_operators..Max$GT$3max17h92ad54469b8247d2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:846
// ---------------------------------------------------------------------------------------
// Max

impl Max<Z0> for Z0 {
    type Output = Z0;
    fn max(self, _: Z0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:848
        self
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN7typenum5array97_$LT$impl$u20$core..ops..arith..Mul$LT$typenum..array..ATerm$GT$$u20$for$u20$typenum..int..Z0$GT$3mul17hd39e678f8a4545d4E:

00000000 <typenum::array::<impl core::ops::arith::Mul<typenum::array::ATerm> for typenum::int::Z0>::mul>:
_ZN7typenum5array97_$LT$impl$u20$core..ops..arith..Mul$LT$typenum..array..ATerm$GT$$u20$for$u20$typenum..int..Z0$GT$3mul17hd39e678f8a4545d4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:141
    }
}

impl Mul<ATerm> for Z0 {
    type Output = ATerm;
    fn mul(self, _: ATerm) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:143
        ATerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h46d165f232534726E:

00000000 <<typenum::int::Z0 as core::fmt::Debug>::fmt>:
_ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h46d165f232534726E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:74
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
   c:	9906      	ldr	r1, [sp, #24]
   e:	f240 0000 	movw	r0, #0
  12:	f2c0 0000 	movt	r0, #0
  16:	f10d 0c1c 	add.w	ip, sp, #28
  1a:	f04f 0e02 	mov.w	lr, #2
  1e:	9004      	str	r0, [sp, #16]
  20:	4660      	mov	r0, ip
  22:	f8dd c010 	ldr.w	ip, [sp, #16]
  26:	9203      	str	r2, [sp, #12]
  28:	4662      	mov	r2, ip
  2a:	9302      	str	r3, [sp, #8]
  2c:	4673      	mov	r3, lr
  2e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  32:	e7ff      	b.n	34 <<typenum::int::Z0 as core::fmt::Debug>::fmt+0x34>
  34:	a807      	add	r0, sp, #28
  36:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <<typenum::int::Z0 as core::fmt::Debug>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	f000 0001 	and.w	r0, r0, #1
  44:	b00a      	add	sp, #40	; 0x28
  46:	bd80      	pop	{r7, pc}

typenum-bc602af176d280ae.typenum.47drc0bk-cgu.1.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 typenum.47drc0bk-cgu.1
0000054e l       .debug_str	00000000 
00000a94 l       .debug_str	00000000 
00000c0e l       .debug_str	00000000 
00000a8a l       .debug_str	00000000 
00000c03 l       .debug_str	00000000 
00000a79 l       .debug_str	00000000 
00000bfe l       .debug_str	00000000 
00000a74 l       .debug_str	00000000 
00000bf3 l       .debug_str	00000000 
00000a5b l       .debug_str	00000000 
00000bec l       .debug_str	00000000 
00000a4f l       .debug_str	00000000 
00000be3 l       .debug_str	00000000 
00000a46 l       .debug_str	00000000 
00000bcf l       .debug_str	00000000 
00000a42 l       .debug_str	00000000 
00000bb5 l       .debug_str	00000000 
00000a3b l       .debug_str	00000000 
00000bab l       .debug_str	00000000 
00000a2c l       .debug_str	00000000 
00000b92 l       .debug_str	00000000 
00000a29 l       .debug_str	00000000 
00000b8b l       .debug_str	00000000 
00000a23 l       .debug_str	00000000 
00000b82 l       .debug_str	00000000 
00000a1d l       .debug_str	00000000 
00000b7d l       .debug_str	00000000 
00000a19 l       .debug_str	00000000 
00000b61 l       .debug_str	00000000 
00000a13 l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000a0c l       .debug_str	00000000 
00000b26 l       .debug_str	00000000 
00000a01 l       .debug_str	00000000 
00000b1e l       .debug_str	00000000 
000009f5 l       .debug_str	00000000 
00000b1a l       .debug_str	00000000 
000009e1 l       .debug_str	00000000 
000009da l       .debug_str	00000000 
00000afd l       .debug_str	00000000 
000009d2 l       .debug_str	00000000 
000009ca l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
0000019e l       .debug_str	00000000 
000001a2 l       .debug_str	00000000 
000001a5 l       .debug_str	00000000 
000001fb l       .debug_str	00000000 
000001fe l       .debug_str	00000000 
00000272 l       .debug_str	00000000 
00000279 l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
0000032f l       .debug_str	00000000 
00000335 l       .debug_str	00000000 
000003a7 l       .debug_str	00000000 
00000403 l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
0000047e l       .debug_str	00000000 
000004f2 l       .debug_str	00000000 
000009c6 l       .debug_str	00000000 
000005ad l       .debug_str	00000000 
000005b1 l       .debug_str	00000000 
00000628 l       .debug_str	00000000 
0000069f l       .debug_str	00000000 
000006fe l       .debug_str	00000000 
0000075d l       .debug_str	00000000 
00000761 l       .debug_str	00000000 
000007d8 l       .debug_str	00000000 
0000084f l       .debug_str	00000000 
000008ae l       .debug_str	00000000 
00000901 l       .debug_str	00000000 
00000954 l       .debug_str	00000000 
00000959 l       .debug_str	00000000 
0000095d l       .debug_str	00000000 
0000096f l       .debug_str	00000000 
00000971 l       .debug_str	00000000 
00000977 l       .debug_str	00000000 
0000097b l       .debug_str	00000000 
00000980 l       .debug_str	00000000 
00000985 l       .debug_str	00000000 
0000098b l       .debug_str	00000000 
00000991 l       .debug_str	00000000 
00000998 l       .debug_str	00000000 
0000099d l       .debug_str	00000000 
000009a3 l       .debug_str	00000000 
000009a5 l       .debug_str	00000000 
000009aa l       .debug_str	00000000 
000009ae l       .debug_str	00000000 
000009bc l       .debug_str	00000000 
00000af2 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.f480c432c2f27d975cc8f20f795fe810.0	00000002 .Lanon.f480c432c2f27d975cc8f20f795fe810.0
00000000 l     O .rodata..Lanon.f480c432c2f27d975cc8f20f795fe810.1	00000002 .Lanon.f480c432c2f27d975cc8f20f795fe810.1
00000000 l    d  .text._ZN56_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..Not$GT$3not17he47e055f8807132eE	00000000 .text._ZN56_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..Not$GT$3not17he47e055f8807132eE
00000000 l    d  .text._ZN56_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..Not$GT$3not17heee3fdba26363146E	00000000 .text._ZN56_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..Not$GT$3not17heee3fdba26363146E
00000000 l    d  .text._ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$LT$typenum..bit..B0$GT$$GT$6bitand17h10ae89660558b0f9E	00000000 .text._ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$LT$typenum..bit..B0$GT$$GT$6bitand17h10ae89660558b0f9E
00000000 l    d  .text._ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$GT$6bitand17h408b187c8fd21df2E	00000000 .text._ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$GT$6bitand17h408b187c8fd21df2E
00000000 l    d  .text._ZN58_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17h6427d183868e896aE	00000000 .text._ZN58_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17h6427d183868e896aE
00000000 l    d  .text._ZN82_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$LT$typenum..bit..B1$GT$$GT$5bitor17hfd527a8b99ac005fE	00000000 .text._ZN82_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$LT$typenum..bit..B1$GT$$GT$5bitor17hfd527a8b99ac005fE
00000000 l    d  .text._ZN59_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17hab8b2995e1b44c86E	00000000 .text._ZN59_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17hab8b2995e1b44c86E
00000000 l    d  .text._ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B0$GT$$GT$6bitxor17ha364b31e98515ec8E	00000000 .text._ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B0$GT$$GT$6bitxor17ha364b31e98515ec8E
00000000 l    d  .text._ZN83_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B1$GT$$GT$6bitxor17h9495398eaf19fe88E	00000000 .text._ZN83_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B1$GT$$GT$6bitxor17h9495398eaf19fe88E
00000000 l    d  .text._ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h3fdaf494c8fce64dE	00000000 .text._ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h3fdaf494c8fce64dE
00000000 l    d  .text._ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$GT$3min17hec5f178e09d03f04E	00000000 .text._ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$GT$3min17hec5f178e09d03f04E
00000000 l    d  .text._ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B1$GT$$GT$3min17h68e58eba2b693326E	00000000 .text._ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B1$GT$$GT$3min17h68e58eba2b693326E
00000000 l    d  .text._ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B0$GT$$GT$3min17h4bff72b17ee4aa7aE	00000000 .text._ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B0$GT$$GT$3min17h4bff72b17ee4aa7aE
00000000 l    d  .text._ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$GT$3min17h76ad16645e75ff88E	00000000 .text._ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$GT$3min17h76ad16645e75ff88E
00000000 l    d  .text._ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$GT$3max17h47816f1c41bb0cb9E	00000000 .text._ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$GT$3max17h47816f1c41bb0cb9E
00000000 l    d  .text._ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B1$GT$$GT$3max17h4afe5e2d893108f6E	00000000 .text._ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B1$GT$$GT$3max17h4afe5e2d893108f6E
00000000 l    d  .text._ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B0$GT$$GT$3max17hecb19fcbbf859911E	00000000 .text._ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B0$GT$$GT$3max17hecb19fcbbf859911E
00000000 l    d  .text._ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$GT$3max17hae473dbd6fdfa479E	00000000 .text._ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$GT$3max17hae473dbd6fdfa479E
00000000 l    d  .text._ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17hde07523902835929E	00000000 .text._ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17hde07523902835929E
00000000 l    d  .text._ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17h69cb6fe725016c89E	00000000 .text._ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17h69cb6fe725016c89E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17hde07523902835929E	00000048 <typenum::bit::B0 as core::fmt::Debug>::fmt
00000000 g     F .text._ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17h69cb6fe725016c89E	00000048 <typenum::bit::B1 as core::fmt::Debug>::fmt
00000000 g     F .text._ZN56_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..Not$GT$3not17he47e055f8807132eE	00000006 <typenum::bit::B0 as core::ops::bit::Not>::not
00000000 g     F .text._ZN56_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..Not$GT$3not17heee3fdba26363146E	00000006 <typenum::bit::B1 as core::ops::bit::Not>::not
00000000 g     F .text._ZN58_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17h6427d183868e896aE	00000006 <typenum::bit::B0 as core::ops::bit::BitOr>::bitor
00000000 g     F .text._ZN59_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17hab8b2995e1b44c86E	00000006 <typenum::bit::B0 as core::ops::bit::BitXor>::bitxor
00000000 g     F .text._ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$GT$6bitand17h408b187c8fd21df2E	00000006 <typenum::bit::B1 as core::ops::bit::BitAnd>::bitand
00000000 g     F .text._ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h3fdaf494c8fce64dE	00000006 <typenum::bit::B1 as core::ops::bit::BitXor>::bitxor
00000000 g     F .text._ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$GT$3max17h47816f1c41bb0cb9E	00000006 <typenum::bit::B0 as typenum::type_operators::Max>::max
00000000 g     F .text._ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$GT$3min17hec5f178e09d03f04E	00000006 <typenum::bit::B0 as typenum::type_operators::Min>::min
00000000 g     F .text._ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$GT$3max17hae473dbd6fdfa479E	00000006 <typenum::bit::B1 as typenum::type_operators::Max>::max
00000000 g     F .text._ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$GT$3min17h76ad16645e75ff88E	00000006 <typenum::bit::B1 as typenum::type_operators::Min>::min
00000000 g     F .text._ZN82_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$LT$typenum..bit..B1$GT$$GT$5bitor17hfd527a8b99ac005fE	00000006 <typenum::bit::B0 as core::ops::bit::BitOr<typenum::bit::B1>>::bitor
00000000 g     F .text._ZN83_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B1$GT$$GT$6bitxor17h9495398eaf19fe88E	00000006 <typenum::bit::B0 as core::ops::bit::BitXor<typenum::bit::B1>>::bitxor
00000000 g     F .text._ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$LT$typenum..bit..B0$GT$$GT$6bitand17h10ae89660558b0f9E	00000006 <typenum::bit::B1 as core::ops::bit::BitAnd<typenum::bit::B0>>::bitand
00000000 g     F .text._ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B0$GT$$GT$6bitxor17ha364b31e98515ec8E	00000006 <typenum::bit::B1 as core::ops::bit::BitXor<typenum::bit::B0>>::bitxor
00000000 g     F .text._ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B1$GT$$GT$3max17h4afe5e2d893108f6E	00000006 <typenum::bit::B0 as typenum::type_operators::Max<typenum::bit::B1>>::max
00000000 g     F .text._ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B1$GT$$GT$3min17h68e58eba2b693326E	00000006 <typenum::bit::B0 as typenum::type_operators::Min<typenum::bit::B1>>::min
00000000 g     F .text._ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B0$GT$$GT$3max17hecb19fcbbf859911E	00000006 <typenum::bit::B1 as typenum::type_operators::Max<typenum::bit::B0>>::max
00000000 g     F .text._ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B0$GT$$GT$3min17h4bff72b17ee4aa7aE	00000006 <typenum::bit::B1 as typenum::type_operators::Min<typenum::bit::B0>>::min



Disassembly of section .text._ZN56_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..Not$GT$3not17he47e055f8807132eE:

00000000 <<typenum::bit::B0 as core::ops::bit::Not>::not>:
_ZN56_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..Not$GT$3not17he47e055f8807132eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:76
impl PowerOfTwo for B1 {}

/// Not of 0 (!0 = 1)
impl Not for B0 {
    type Output = B1;
    fn not(self) -> Self::Output {
   0:	b081      	sub	sp, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:78
        B1
    }
   2:	b001      	add	sp, #4
   4:	4770      	bx	lr

Disassembly of section .text._ZN56_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..Not$GT$3not17heee3fdba26363146E:

00000000 <<typenum::bit::B1 as core::ops::bit::Not>::not>:
_ZN56_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..Not$GT$3not17heee3fdba26363146E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:83
}
/// Not of 1 (!1 = 0)
impl Not for B1 {
    type Output = B0;
    fn not(self) -> Self::Output {
   0:	b081      	sub	sp, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:85
        B0
    }
   2:	b001      	add	sp, #4
   4:	4770      	bx	lr

Disassembly of section .text._ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$LT$typenum..bit..B0$GT$$GT$6bitand17h10ae89660558b0f9E:

00000000 <<typenum::bit::B1 as core::ops::bit::BitAnd<typenum::bit::B0>>::bitand>:
_ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$LT$typenum..bit..B0$GT$$GT$6bitand17h10ae89660558b0f9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:99
}

/// And with 1 ( 1 & 0 = 0)
impl BitAnd<B0> for B1 {
    type Output = B0;
    fn bitand(self, _: B0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:101
        B0
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$GT$6bitand17h408b187c8fd21df2E:

00000000 <<typenum::bit::B1 as core::ops::bit::BitAnd>::bitand>:
_ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitAnd$GT$6bitand17h408b187c8fd21df2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:107
}

/// And with 1 ( 1 & 1 = 1)
impl BitAnd<B1> for B1 {
    type Output = B1;
    fn bitand(self, _: B1) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:109
        B1
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN58_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17h6427d183868e896aE:

00000000 <<typenum::bit::B0 as core::ops::bit::BitOr>::bitor>:
_ZN58_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$GT$5bitor17h6427d183868e896aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:115
}

/// Or with 0 ( 0 | 0 = 0)
impl BitOr<B0> for B0 {
    type Output = B0;
    fn bitor(self, _: B0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:117
        B0
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN82_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$LT$typenum..bit..B1$GT$$GT$5bitor17hfd527a8b99ac005fE:

00000000 <<typenum::bit::B0 as core::ops::bit::BitOr<typenum::bit::B1>>::bitor>:
_ZN82_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitOr$LT$typenum..bit..B1$GT$$GT$5bitor17hfd527a8b99ac005fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:123
}

/// Or with 0 ( 0 | 1 = 1)
impl BitOr<B1> for B0 {
    type Output = B1;
    fn bitor(self, _: B1) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:125
        B1
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN59_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17hab8b2995e1b44c86E:

00000000 <<typenum::bit::B0 as core::ops::bit::BitXor>::bitxor>:
_ZN59_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17hab8b2995e1b44c86E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:139
}

/// Xor between 0 and 0 ( 0 ^ 0 = 0)
impl BitXor<B0> for B0 {
    type Output = B0;
    fn bitxor(self, _: B0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:141
        B0
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B0$GT$$GT$6bitxor17ha364b31e98515ec8E:

00000000 <<typenum::bit::B1 as core::ops::bit::BitXor<typenum::bit::B0>>::bitxor>:
_ZN83_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B0$GT$$GT$6bitxor17ha364b31e98515ec8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:146
}
/// Xor between 1 and 0 ( 1 ^ 0 = 1)
impl BitXor<B0> for B1 {
    type Output = B1;
    fn bitxor(self, _: B0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:148
        B1
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN83_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B1$GT$$GT$6bitxor17h9495398eaf19fe88E:

00000000 <<typenum::bit::B0 as core::ops::bit::BitXor<typenum::bit::B1>>::bitxor>:
_ZN83_$LT$typenum..bit..B0$u20$as$u20$core..ops..bit..BitXor$LT$typenum..bit..B1$GT$$GT$6bitxor17h9495398eaf19fe88E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:153
}
/// Xor between 0 and 1 ( 0 ^ 1 = 1)
impl BitXor<B1> for B0 {
    type Output = B1;
    fn bitxor(self, _: B1) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:155
        B1
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h3fdaf494c8fce64dE:

00000000 <<typenum::bit::B1 as core::ops::bit::BitXor>::bitxor>:
_ZN59_$LT$typenum..bit..B1$u20$as$u20$core..ops..bit..BitXor$GT$6bitxor17h3fdaf494c8fce64dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:160
}
/// Xor between 1 and 1 ( 1 ^ 1 = 0)
impl BitXor<B1> for B1 {
    type Output = B0;
    fn bitxor(self, _: B1) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:162
        B0
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$GT$3min17hec5f178e09d03f04E:

00000000 <<typenum::bit::B0 as typenum::type_operators::Min>::min>:
_ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$GT$3min17hec5f178e09d03f04E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:225
}

use Min;
impl Min<B0> for B0 {
    type Output = B0;
    fn min(self, _: B0) -> B0 {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:227
        self
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B1$GT$$GT$3min17h68e58eba2b693326E:

00000000 <<typenum::bit::B0 as typenum::type_operators::Min<typenum::bit::B1>>::min>:
_ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B1$GT$$GT$3min17h68e58eba2b693326E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:231
}
impl Min<B1> for B0 {
    type Output = B0;
    fn min(self, _: B1) -> B0 {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:233
        self
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B0$GT$$GT$3min17h4bff72b17ee4aa7aE:

00000000 <<typenum::bit::B1 as typenum::type_operators::Min<typenum::bit::B0>>::min>:
_ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$LT$typenum..bit..B0$GT$$GT$3min17h4bff72b17ee4aa7aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:237
}
impl Min<B0> for B1 {
    type Output = B0;
    fn min(self, rhs: B0) -> B0 {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:239
        rhs
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$GT$3min17h76ad16645e75ff88E:

00000000 <<typenum::bit::B1 as typenum::type_operators::Min>::min>:
_ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Min$GT$3min17h76ad16645e75ff88E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:243
}
impl Min<B1> for B1 {
    type Output = B1;
    fn min(self, _: B1) -> B1 {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:245
        self
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$GT$3max17h47816f1c41bb0cb9E:

00000000 <<typenum::bit::B0 as typenum::type_operators::Max>::max>:
_ZN65_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$GT$3max17h47816f1c41bb0cb9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:251
}

use Max;
impl Max<B0> for B0 {
    type Output = B0;
    fn max(self, _: B0) -> B0 {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:253
        self
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B1$GT$$GT$3max17h4afe5e2d893108f6E:

00000000 <<typenum::bit::B0 as typenum::type_operators::Max<typenum::bit::B1>>::max>:
_ZN89_$LT$typenum..bit..B0$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B1$GT$$GT$3max17h4afe5e2d893108f6E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:257
}
impl Max<B1> for B0 {
    type Output = B1;
    fn max(self, rhs: B1) -> B1 {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:259
        rhs
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B0$GT$$GT$3max17hecb19fcbbf859911E:

00000000 <<typenum::bit::B1 as typenum::type_operators::Max<typenum::bit::B0>>::max>:
_ZN89_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$LT$typenum..bit..B0$GT$$GT$3max17hecb19fcbbf859911E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:263
}
impl Max<B0> for B1 {
    type Output = B1;
    fn max(self, _: B0) -> B1 {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:265
        self
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$GT$3max17hae473dbd6fdfa479E:

00000000 <<typenum::bit::B1 as typenum::type_operators::Max>::max>:
_ZN65_$LT$typenum..bit..B1$u20$as$u20$typenum..type_operators..Max$GT$3max17hae473dbd6fdfa479E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:269
}
impl Max<B1> for B1 {
    type Output = B1;
    fn max(self, _: B1) -> B1 {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:271
        self
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17hde07523902835929E:

00000000 <<typenum::bit::B0 as core::fmt::Debug>::fmt>:
_ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17hde07523902835929E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:19
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
   c:	9906      	ldr	r1, [sp, #24]
   e:	f240 0000 	movw	r0, #0
  12:	f2c0 0000 	movt	r0, #0
  16:	f10d 0c1c 	add.w	ip, sp, #28
  1a:	f04f 0e02 	mov.w	lr, #2
  1e:	9004      	str	r0, [sp, #16]
  20:	4660      	mov	r0, ip
  22:	f8dd c010 	ldr.w	ip, [sp, #16]
  26:	9203      	str	r2, [sp, #12]
  28:	4662      	mov	r2, ip
  2a:	9302      	str	r3, [sp, #8]
  2c:	4673      	mov	r3, lr
  2e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  32:	e7ff      	b.n	34 <<typenum::bit::B0 as core::fmt::Debug>::fmt+0x34>
  34:	a807      	add	r0, sp, #28
  36:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <<typenum::bit::B0 as core::fmt::Debug>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	f000 0001 	and.w	r0, r0, #1
  44:	b00a      	add	sp, #40	; 0x28
  46:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17h69cb6fe725016c89E:

00000000 <<typenum::bit::B1 as core::fmt::Debug>::fmt>:
_ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17h69cb6fe725016c89E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:31
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
   c:	9906      	ldr	r1, [sp, #24]
   e:	f240 0000 	movw	r0, #0
  12:	f2c0 0000 	movt	r0, #0
  16:	f10d 0c1c 	add.w	ip, sp, #28
  1a:	f04f 0e02 	mov.w	lr, #2
  1e:	9004      	str	r0, [sp, #16]
  20:	4660      	mov	r0, ip
  22:	f8dd c010 	ldr.w	ip, [sp, #16]
  26:	9203      	str	r2, [sp, #12]
  28:	4662      	mov	r2, ip
  2a:	9302      	str	r3, [sp, #8]
  2c:	4673      	mov	r3, lr
  2e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  32:	e7ff      	b.n	34 <<typenum::bit::B1 as core::fmt::Debug>::fmt+0x34>
  34:	a807      	add	r0, sp, #28
  36:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <<typenum::bit::B1 as core::fmt::Debug>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	f000 0001 	and.w	r0, r0, #1
  44:	b00a      	add	sp, #40	; 0x28
  46:	bd80      	pop	{r7, pc}

typenum-bc602af176d280ae.typenum.47drc0bk-cgu.2.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 typenum.47drc0bk-cgu.2
000000f8 l       .debug_str	00000000 
00000178 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
00000000 l    d  .text._ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417h9d1924e58c448e4dE	00000000 .text._ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417h9d1924e58c448e4dE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417h9d1924e58c448e4dE	0000000c <typenum::private::InvertedUTerm as typenum::private::InvertedUnsigned>::to_u64



Disassembly of section .text._ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417h9d1924e58c448e4dE:

00000000 <<typenum::private::InvertedUTerm as typenum::private::InvertedUnsigned>::to_u64>:
_ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417h9d1924e58c448e4dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/private.rs:114
pub trait InvertedUnsigned {
    fn to_u64() -> u64;
}

impl InvertedUnsigned for InvertedUTerm {
    fn to_u64() -> u64 {
   0:	b081      	sub	sp, #4
   2:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/private.rs:116
        0
    }
   4:	9000      	str	r0, [sp, #0]
   6:	9900      	ldr	r1, [sp, #0]
   8:	b001      	add	sp, #4
   a:	4770      	bx	lr

typenum-bc602af176d280ae.typenum.47drc0bk-cgu.3.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 typenum.47drc0bk-cgu.3
00000383 l       .debug_str	00000000 
000005ba l       .debug_str	00000000 
000005ee l       .debug_str	00000000 
000005a0 l       .debug_str	00000000 
000005e9 l       .debug_str	00000000 
00000596 l       .debug_str	00000000 
000005de l       .debug_str	00000000 
0000057d l       .debug_str	00000000 
000005d7 l       .debug_str	00000000 
00000576 l       .debug_str	00000000 
0000056d l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001b2 l       .debug_str	00000000 
000001b7 l       .debug_str	00000000 
000001bd l       .debug_str	00000000 
0000021a l       .debug_str	00000000 
0000021e l       .debug_str	00000000 
00000224 l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
000002e2 l       .debug_str	00000000 
000002e6 l       .debug_str	00000000 
0000033e l       .debug_str	00000000 
00000343 l       .debug_str	00000000 
0000035a l       .debug_str	00000000 
0000035c l       .debug_str	00000000 
00000362 l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
0000036b l       .debug_str	00000000 
00000370 l       .debug_str	00000000 
00000376 l       .debug_str	00000000 
0000037c l       .debug_str	00000000 
00000568 l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
0000038e l       .debug_str	00000000 
00000390 l       .debug_str	00000000 
00000395 l       .debug_str	00000000 
00000399 l       .debug_str	00000000 
000003a7 l       .debug_str	00000000 
000003b1 l       .debug_str	00000000 
000003b5 l       .debug_str	00000000 
000003bd l       .debug_str	00000000 
000003c5 l       .debug_str	00000000 
000003cc l       .debug_str	00000000 
000003e0 l       .debug_str	00000000 
000003ec l       .debug_str	00000000 
000003f7 l       .debug_str	00000000 
000003fe l       .debug_str	00000000 
00000404 l       .debug_str	00000000 
00000408 l       .debug_str	00000000 
0000040e l       .debug_str	00000000 
00000414 l       .debug_str	00000000 
00000417 l       .debug_str	00000000 
00000426 l       .debug_str	00000000 
0000042d l       .debug_str	00000000 
00000431 l       .debug_str	00000000 
0000043a l       .debug_str	00000000 
00000446 l       .debug_str	00000000 
0000045f l       .debug_str	00000000 
00000464 l       .debug_str	00000000 
00000475 l       .debug_str	00000000 
0000047f l       .debug_str	00000000 
000004dd l       .debug_str	00000000 
000004e8 l       .debug_str	00000000 
00000505 l       .debug_str	00000000 
00000509 l       .debug_str	00000000 
00000511 l       .debug_str	00000000 
00000528 l       .debug_str	00000000 
0000054c l       .debug_str	00000000 
000005ce l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.1586ebdde11bd5706876c1428ef52ba3.0	00000005 .Lanon.1586ebdde11bd5706876c1428ef52ba3.0
00000000 l    d  .text._ZN70_$LT$typenum..array..ATerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h9b2c6034b25c7d90E	00000000 .text._ZN70_$LT$typenum..array..ATerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h9b2c6034b25c7d90E
00000000 l    d  .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Add$GT$3add17h273ec7690f691d93E	00000000 .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Add$GT$3add17h273ec7690f691d93E
00000000 l    d  .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h9f79ce664390363fE	00000000 .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h9f79ce664390363fE
00000000 l    d  .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Neg$GT$3neg17h3010b8a0f9c4d1caE	00000000 .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Neg$GT$3neg17h3010b8a0f9c4d1caE
00000000 l    d  .text._ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h24ab3e247f536d4aE	00000000 .text._ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h24ab3e247f536d4aE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h24ab3e247f536d4aE	00000048 <typenum::array::ATerm as core::fmt::Debug>::fmt
00000000 g     F .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Add$GT$3add17h273ec7690f691d93E	00000006 <typenum::array::ATerm as core::ops::arith::Add>::add
00000000 g     F .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Neg$GT$3neg17h3010b8a0f9c4d1caE	00000006 <typenum::array::ATerm as core::ops::arith::Neg>::neg
00000000 g     F .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h9f79ce664390363fE	00000006 <typenum::array::ATerm as core::ops::arith::Sub>::sub
00000000 g     F .text._ZN70_$LT$typenum..array..ATerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h9b2c6034b25c7d90E	0000000c <typenum::array::ATerm as typenum::type_operators::Len>::len



Disassembly of section .text._ZN70_$LT$typenum..array..ATerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h9b2c6034b25c7d90E:

00000000 <<typenum::array::ATerm as typenum::type_operators::Len>::len>:
_ZN70_$LT$typenum..array..ATerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h9b2c6034b25c7d90E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:56
// Length

/// Length of `ATerm` by itself is 0
impl Len for ATerm {
    type Output = U0;
    fn len(&self) -> Self::Output {
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:58
        UTerm
    }
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Add$GT$3add17h273ec7690f691d93E:

00000000 <<typenum::array::ATerm as core::ops::arith::Add>::add>:
_ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Add$GT$3add17h273ec7690f691d93E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:80
// Add arrays
// Note that two arrays are only addable if they are the same length.

impl Add<ATerm> for ATerm {
    type Output = ATerm;
    fn add(self, _: ATerm) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:82
        ATerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h9f79ce664390363fE:

00000000 <<typenum::array::ATerm as core::ops::arith::Sub>::sub>:
_ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17h9f79ce664390363fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:102
// Subtract arrays
// Note that two arrays are only subtractable if they are the same length.

impl Sub<ATerm> for ATerm {
    type Output = ATerm;
    fn sub(self, _: ATerm) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:104
        ATerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Neg$GT$3neg17h3010b8a0f9c4d1caE:

00000000 <<typenum::array::ATerm as core::ops::arith::Neg>::neg>:
_ZN63_$LT$typenum..array..ATerm$u20$as$u20$core..ops..arith..Neg$GT$3neg17h3010b8a0f9c4d1caE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:268
// Negate an array
use core::ops::Neg;

impl Neg for ATerm {
    type Output = ATerm;
    fn neg(self) -> Self::Output {
   0:	b081      	sub	sp, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:270
        ATerm
    }
   2:	b001      	add	sp, #4
   4:	4770      	bx	lr

Disassembly of section .text._ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h24ab3e247f536d4aE:

00000000 <<typenum::array::ATerm as core::fmt::Debug>::fmt>:
_ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h24ab3e247f536d4aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:11
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug)]
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
   c:	9906      	ldr	r1, [sp, #24]
   e:	f240 0000 	movw	r0, #0
  12:	f2c0 0000 	movt	r0, #0
  16:	f10d 0c1c 	add.w	ip, sp, #28
  1a:	f04f 0e05 	mov.w	lr, #5
  1e:	9004      	str	r0, [sp, #16]
  20:	4660      	mov	r0, ip
  22:	f8dd c010 	ldr.w	ip, [sp, #16]
  26:	9203      	str	r2, [sp, #12]
  28:	4662      	mov	r2, ip
  2a:	9302      	str	r3, [sp, #8]
  2c:	4673      	mov	r3, lr
  2e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  32:	e7ff      	b.n	34 <<typenum::array::ATerm as core::fmt::Debug>::fmt+0x34>
  34:	a807      	add	r0, sp, #28
  36:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <<typenum::array::ATerm as core::fmt::Debug>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	f000 0001 	and.w	r0, r0, #1
  44:	b00a      	add	sp, #40	; 0x28
  46:	bd80      	pop	{r7, pc}

typenum-bc602af176d280ae.typenum.47drc0bk-cgu.4.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 typenum.47drc0bk-cgu.4
000002b2 l       .debug_str	00000000 
000004f6 l       .debug_str	00000000 
000004eb l       .debug_str	00000000 
00000510 l       .debug_str	00000000 
000004e6 l       .debug_str	00000000 
000004db l       .debug_str	00000000 
0000050a l       .debug_str	00000000 
000004d4 l       .debug_str	00000000 
000004cb l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
00000197 l       .debug_str	00000000 
000001e7 l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
0000023d l       .debug_str	00000000 
00000245 l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
00000259 l       .debug_str	00000000 
0000025f l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
00000268 l       .debug_str	00000000 
0000026d l       .debug_str	00000000 
00000273 l       .debug_str	00000000 
00000279 l       .debug_str	00000000 
00000280 l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
0000028b l       .debug_str	00000000 
0000028d l       .debug_str	00000000 
00000292 l       .debug_str	00000000 
00000296 l       .debug_str	00000000 
000002a4 l       .debug_str	00000000 
000002ae l       .debug_str	00000000 
000004b7 l       .debug_str	00000000 
000002ba l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002c9 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e9 l       .debug_str	00000000 
000002f4 l       .debug_str	00000000 
000002fb l       .debug_str	00000000 
00000301 l       .debug_str	00000000 
00000305 l       .debug_str	00000000 
0000030b l       .debug_str	00000000 
00000311 l       .debug_str	00000000 
00000314 l       .debug_str	00000000 
00000323 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
0000032e l       .debug_str	00000000 
00000337 l       .debug_str	00000000 
00000343 l       .debug_str	00000000 
0000035c l       .debug_str	00000000 
00000361 l       .debug_str	00000000 
00000372 l       .debug_str	00000000 
0000037c l       .debug_str	00000000 
000003da l       .debug_str	00000000 
000003e5 l       .debug_str	00000000 
00000402 l       .debug_str	00000000 
00000406 l       .debug_str	00000000 
0000040e l       .debug_str	00000000 
00000425 l       .debug_str	00000000 
00000449 l       .debug_str	00000000 
00000465 l       .debug_str	00000000 
0000046a l       .debug_str	00000000 
00000473 l       .debug_str	00000000 
0000047a l       .debug_str	00000000 
00000493 l       .debug_str	00000000 
0000049d l       .debug_str	00000000 
000004fb l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.6c4e1ea44714f9b3c8a3a7813e1e80ad.0	00000007 .Lanon.6c4e1ea44714f9b3c8a3a7813e1e80ad.0
00000000 l     O .rodata.cst4	00000004 .Lanon.6c4e1ea44714f9b3c8a3a7813e1e80ad.1
00000000 l     O .rodata..Lanon.6c4e1ea44714f9b3c8a3a7813e1e80ad.2	00000005 .Lanon.6c4e1ea44714f9b3c8a3a7813e1e80ad.2
00000000 l    d  .text._ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h981fe4fc4ba6f12dE	00000000 .text._ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h981fe4fc4ba6f12dE
00000000 l    d  .text._ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17h200869fcde3bb291E	00000000 .text._ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17h200869fcde3bb291E
00000000 l    d  .text._ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h014dac03bb9fbe89E	00000000 .text._ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h014dac03bb9fbe89E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17h200869fcde3bb291E	00000048 <typenum::Less as core::fmt::Debug>::fmt
00000000 g     F .text._ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h014dac03bb9fbe89E	00000048 <typenum::Equal as core::fmt::Debug>::fmt
00000000 g     F .text._ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h981fe4fc4ba6f12dE	00000048 <typenum::Greater as core::fmt::Debug>::fmt



Disassembly of section .text._ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h981fe4fc4ba6f12dE:

00000000 <<typenum::Greater as core::fmt::Debug>::fmt>:
_ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h981fe4fc4ba6f12dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/lib.rs:84
pub use int::{NInt, PInt};
pub use array::{ATerm, TArr};

/// A potential output from `Cmp`, this is the type equivalent to the enum variant
/// `core::cmp::Ordering::Greater`.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
   c:	9906      	ldr	r1, [sp, #24]
   e:	f240 0000 	movw	r0, #0
  12:	f2c0 0000 	movt	r0, #0
  16:	f10d 0c1c 	add.w	ip, sp, #28
  1a:	f04f 0e07 	mov.w	lr, #7
  1e:	9004      	str	r0, [sp, #16]
  20:	4660      	mov	r0, ip
  22:	f8dd c010 	ldr.w	ip, [sp, #16]
  26:	9203      	str	r2, [sp, #12]
  28:	4662      	mov	r2, ip
  2a:	9302      	str	r3, [sp, #8]
  2c:	4673      	mov	r3, lr
  2e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  32:	e7ff      	b.n	34 <<typenum::Greater as core::fmt::Debug>::fmt+0x34>
  34:	a807      	add	r0, sp, #28
  36:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <<typenum::Greater as core::fmt::Debug>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	f000 0001 	and.w	r0, r0, #1
  44:	b00a      	add	sp, #40	; 0x28
  46:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17h200869fcde3bb291E:

00000000 <<typenum::Less as core::fmt::Debug>::fmt>:
_ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17h200869fcde3bb291E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/lib.rs:89
pub struct Greater;

/// A potential output from `Cmp`, this is the type equivalent to the enum variant
/// `core::cmp::Ordering::Less`.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
   c:	9906      	ldr	r1, [sp, #24]
   e:	f240 0000 	movw	r0, #0
  12:	f2c0 0000 	movt	r0, #0
  16:	f10d 0c1c 	add.w	ip, sp, #28
  1a:	f04f 0e04 	mov.w	lr, #4
  1e:	9004      	str	r0, [sp, #16]
  20:	4660      	mov	r0, ip
  22:	f8dd c010 	ldr.w	ip, [sp, #16]
  26:	9203      	str	r2, [sp, #12]
  28:	4662      	mov	r2, ip
  2a:	9302      	str	r3, [sp, #8]
  2c:	4673      	mov	r3, lr
  2e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  32:	e7ff      	b.n	34 <<typenum::Less as core::fmt::Debug>::fmt+0x34>
  34:	a807      	add	r0, sp, #28
  36:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <<typenum::Less as core::fmt::Debug>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	f000 0001 	and.w	r0, r0, #1
  44:	b00a      	add	sp, #40	; 0x28
  46:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h014dac03bb9fbe89E:

00000000 <<typenum::Equal as core::fmt::Debug>::fmt>:
_ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h014dac03bb9fbe89E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/lib.rs:94
pub struct Less;

/// A potential output from `Cmp`, this is the type equivalent to the enum variant
/// `core::cmp::Ordering::Equal`.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
   c:	9906      	ldr	r1, [sp, #24]
   e:	f240 0000 	movw	r0, #0
  12:	f2c0 0000 	movt	r0, #0
  16:	f10d 0c1c 	add.w	ip, sp, #28
  1a:	f04f 0e05 	mov.w	lr, #5
  1e:	9004      	str	r0, [sp, #16]
  20:	4660      	mov	r0, ip
  22:	f8dd c010 	ldr.w	ip, [sp, #16]
  26:	9203      	str	r2, [sp, #12]
  28:	4662      	mov	r2, ip
  2a:	9302      	str	r3, [sp, #8]
  2c:	4673      	mov	r3, lr
  2e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  32:	e7ff      	b.n	34 <<typenum::Equal as core::fmt::Debug>::fmt+0x34>
  34:	a807      	add	r0, sp, #28
  36:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <<typenum::Equal as core::fmt::Debug>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	f000 0001 	and.w	r0, r0, #1
  44:	b00a      	add	sp, #40	; 0x28
  46:	bd80      	pop	{r7, pc}

typenum-bc602af176d280ae.typenum.47drc0bk-cgu.5.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 typenum.47drc0bk-cgu.5
000004d4 l       .debug_str	00000000 
00000a03 l       .debug_str	00000000 
00000ae0 l       .debug_str	00000000 
000009ff l       .debug_str	00000000 
00000adb l       .debug_str	00000000 
000009e2 l       .debug_str	00000000 
00000ad0 l       .debug_str	00000000 
000009d7 l       .debug_str	00000000 
00000ac9 l       .debug_str	00000000 
00000979 l       .debug_str	00000000 
00000ac0 l       .debug_str	00000000 
0000096f l       .debug_str	00000000 
00000aac l       .debug_str	00000000 
0000095e l       .debug_str	00000000 
00000a92 l       .debug_str	00000000 
00000959 l       .debug_str	00000000 
00000a88 l       .debug_str	00000000 
00000940 l       .debug_str	00000000 
00000a6f l       .debug_str	00000000 
00000934 l       .debug_str	00000000 
00000a68 l       .debug_str	00000000 
0000092b l       .debug_str	00000000 
00000a5f l       .debug_str	00000000 
00000927 l       .debug_str	00000000 
00000a5a l       .debug_str	00000000 
00000918 l       .debug_str	00000000 
00000a3e l       .debug_str	00000000 
00000915 l       .debug_str	00000000 
0000090f l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
0000014f l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000161 l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001c7 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001f6 l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
0000023b l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
000002c9 l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
00000341 l       .debug_str	00000000 
00000345 l       .debug_str	00000000 
000003b9 l       .debug_str	00000000 
0000042d l       .debug_str	00000000 
00000431 l       .debug_str	00000000 
00000909 l       .debug_str	00000000 
00000530 l       .debug_str	00000000 
000005a2 l       .debug_str	00000000 
000005a6 l       .debug_str	00000000 
00000618 l       .debug_str	00000000 
0000068a l       .debug_str	00000000 
0000068e l       .debug_str	00000000 
00000700 l       .debug_str	00000000 
00000774 l       .debug_str	00000000 
00000778 l       .debug_str	00000000 
000007ec l       .debug_str	00000000 
00000843 l       .debug_str	00000000 
00000848 l       .debug_str	00000000 
0000085e l       .debug_str	00000000 
00000861 l       .debug_str	00000000 
00000863 l       .debug_str	00000000 
00000869 l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
00000872 l       .debug_str	00000000 
00000877 l       .debug_str	00000000 
0000087d l       .debug_str	00000000 
00000883 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
0000088f l       .debug_str	00000000 
00000895 l       .debug_str	00000000 
0000089a l       .debug_str	00000000 
000008a8 l       .debug_str	00000000 
000008b2 l       .debug_str	00000000 
000008b6 l       .debug_str	00000000 
000008be l       .debug_str	00000000 
000008c6 l       .debug_str	00000000 
000008cd l       .debug_str	00000000 
000008e1 l       .debug_str	00000000 
000008ed l       .debug_str	00000000 
000008f8 l       .debug_str	00000000 
000008ff l       .debug_str	00000000 
00000905 l       .debug_str	00000000 
00000a1a l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.7330d73382251f97bb289ea9779f010e.0	00000005 .Lanon.7330d73382251f97bb289ea9779f010e.0
00000000 l    d  .text._ZN7typenum4uint17UInt$LT$U$C$B$GT$3new17h12b5775229d64eaaE	00000000 .text._ZN7typenum4uint17UInt$LT$U$C$B$GT$3new17h12b5775229d64eaaE
00000000 l    d  .text._ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h322b7f591319f09dE	00000000 .text._ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h322b7f591319f09dE
00000000 l    d  .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B0$GT$$GT$3add17h20725c0a83783c40E	00000000 .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B0$GT$$GT$3add17h20725c0a83783c40E
00000000 l    d  .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B1$GT$$GT$3add17h0b7a38b5f923f969E	00000000 .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B1$GT$$GT$3add17h0b7a38b5f923f969E
00000000 l    d  .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B0$GT$$GT$3sub17h272a26275db0f5e1E	00000000 .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B0$GT$$GT$3sub17h272a26275db0f5e1E
00000000 l    d  .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17h3c392f933a98a9faE	00000000 .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17h3c392f933a98a9faE
00000000 l    d  .text._ZN62_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17hf091c06558a8e27eE	00000000 .text._ZN62_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17hf091c06558a8e27eE
00000000 l    d  .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B0$GT$$GT$3shl17h3b182392fb617034E	00000000 .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B0$GT$$GT$3shl17h3b182392fb617034E
00000000 l    d  .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B1$GT$$GT$3shl17h4e76f1fa1746079bE	00000000 .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B1$GT$$GT$3shl17h4e76f1fa1746079bE
00000000 l    d  .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B0$GT$$GT$3shr17h75a49765d3f6152aE	00000000 .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B0$GT$$GT$3shr17h75a49765d3f6152aE
00000000 l    d  .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B1$GT$$GT$3shr17hc4a4b960cf7813b3E	00000000 .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B1$GT$$GT$3shr17hc4a4b960cf7813b3E
00000000 l    d  .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B0$GT$$GT$3mul17h556bce1fa441ebccE	00000000 .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B0$GT$$GT$3mul17h556bce1fa441ebccE
00000000 l    d  .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B1$GT$$GT$3mul17h5464692f652be1a2E	00000000 .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B1$GT$$GT$3mul17h5464692f652be1a2E
00000000 l    d  .text._ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17hf133aacf84034f28E	00000000 .text._ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17hf133aacf84034f28E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17h3c392f933a98a9faE	00000006 <typenum::uint::UInt<typenum::uint::UTerm,typenum::bit::B1> as core::ops::arith::Sub<typenum::bit::B1>>::sub
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17hf133aacf84034f28E	00000048 <typenum::uint::UTerm as core::fmt::Debug>::fmt
00000000 g     F .text._ZN62_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17hf091c06558a8e27eE	00000006 <typenum::uint::UTerm as core::ops::arith::Sub>::sub
00000000 g     F .text._ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h322b7f591319f09dE	0000000c <typenum::uint::UTerm as typenum::type_operators::Len>::len
00000000 g     F .text._ZN7typenum4uint17UInt$LT$U$C$B$GT$3new17h12b5775229d64eaaE	00000006 typenum::uint::UInt<U,B>::new
00000000 g     F .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B0$GT$$GT$3shl17h3b182392fb617034E	00000006 <typenum::uint::UTerm as core::ops::bit::Shl<typenum::bit::B0>>::shl
00000000 g     F .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B1$GT$$GT$3shl17h4e76f1fa1746079bE	00000006 <typenum::uint::UTerm as core::ops::bit::Shl<typenum::bit::B1>>::shl
00000000 g     F .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B0$GT$$GT$3shr17h75a49765d3f6152aE	00000006 <typenum::uint::UTerm as core::ops::bit::Shr<typenum::bit::B0>>::shr
00000000 g     F .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B1$GT$$GT$3shr17hc4a4b960cf7813b3E	00000006 <typenum::uint::UTerm as core::ops::bit::Shr<typenum::bit::B1>>::shr
00000000 g     F .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B0$GT$$GT$3add17h20725c0a83783c40E	00000006 <typenum::uint::UTerm as core::ops::arith::Add<typenum::bit::B0>>::add
00000000 g     F .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B1$GT$$GT$3add17h0b7a38b5f923f969E	0000000e <typenum::uint::UTerm as core::ops::arith::Add<typenum::bit::B1>>::add
00000000 g     F .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B0$GT$$GT$3mul17h556bce1fa441ebccE	00000006 <typenum::uint::UTerm as core::ops::arith::Mul<typenum::bit::B0>>::mul
00000000 g     F .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B1$GT$$GT$3mul17h5464692f652be1a2E	00000006 <typenum::uint::UTerm as core::ops::arith::Mul<typenum::bit::B1>>::mul
00000000 g     F .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B0$GT$$GT$3sub17h272a26275db0f5e1E	00000006 <typenum::uint::UTerm as core::ops::arith::Sub<typenum::bit::B0>>::sub



Disassembly of section .text._ZN7typenum4uint17UInt$LT$U$C$B$GT$3new17h12b5775229d64eaaE:

00000000 <typenum::uint::UInt<U,B>::new>:
_ZN7typenum4uint17UInt$LT$U$C$B$GT$3new17h12b5775229d64eaaE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:154
}

impl<U: Unsigned, B: Bit> UInt<U, B> {
    /// Instantiates a singleton representing this unsigned integer.
    #[inline]
    pub fn new() -> UInt<U, B> {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:158
        UInt {
            _marker: PhantomData,
        }
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h322b7f591319f09dE:

00000000 <<typenum::uint::UTerm as typenum::type_operators::Len>::len>:
_ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h322b7f591319f09dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:242
// Getting length of unsigned integers, which is defined as the number of bits before `UTerm`

/// Length of `UTerm` by itself is 0
impl Len for UTerm {
    type Output = U0;
    fn len(&self) -> Self::Output {
   0:	b082      	sub	sp, #8
   2:	4601      	mov	r1, r0
   4:	9001      	str	r0, [sp, #4]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:244
        UTerm
    }
   6:	9100      	str	r1, [sp, #0]
   8:	b002      	add	sp, #8
   a:	4770      	bx	lr

Disassembly of section .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B0$GT$$GT$3add17h20725c0a83783c40E:

00000000 <<typenum::uint::UTerm as core::ops::arith::Add<typenum::bit::B0>>::add>:
_ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B0$GT$$GT$3add17h20725c0a83783c40E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:266
// Adding bits to unsigned integers

/// `UTerm + B0 = UTerm`
impl Add<B0> for UTerm {
    type Output = UTerm;
    fn add(self, _: B0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:268
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B1$GT$$GT$3add17h0b7a38b5f923f969E:

00000000 <<typenum::uint::UTerm as core::ops::arith::Add<typenum::bit::B1>>::add>:
_ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Add$LT$typenum..bit..B1$GT$$GT$3add17h0b7a38b5f923f969E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:282
}

/// `UTerm + B1 = UInt<UTerm, B1>`
impl Add<B1> for UTerm {
    type Output = UInt<UTerm, B1>;
    fn add(self, _: B1) -> Self::Output {
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:283
        UInt::new()
   4:	f7ff fffe 	bl	0 <<typenum::uint::UTerm as core::ops::arith::Add<typenum::bit::B1>>::add>
   8:	e7ff      	b.n	a <<typenum::uint::UTerm as core::ops::arith::Add<typenum::bit::B1>>::add+0xa>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:284
    }
   a:	b002      	add	sp, #8
   c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B0$GT$$GT$3sub17h272a26275db0f5e1E:

00000000 <<typenum::uint::UTerm as core::ops::arith::Sub<typenum::bit::B0>>::sub>:
_ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B0$GT$$GT$3sub17h272a26275db0f5e1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:377
// Subtracting bits from unsigned integers

/// `UTerm - B0 = Term`
impl Sub<B0> for UTerm {
    type Output = UTerm;
    fn sub(self, _: B0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:379
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17h3c392f933a98a9faE:

00000000 <<typenum::uint::UInt<typenum::uint::UTerm,typenum::bit::B1> as core::ops::arith::Sub<typenum::bit::B1>>::sub>:
_ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17h3c392f933a98a9faE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:401
}

/// `UInt<UTerm, B1> - B1 = UTerm`
impl Sub<B1> for UInt<UTerm, B1> {
    type Output = UTerm;
    fn sub(self, _: B1) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:403
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN62_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17hf091c06558a8e27eE:

00000000 <<typenum::uint::UTerm as core::ops::arith::Sub>::sub>:
_ZN62_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Sub$GT$3sub17hf091c06558a8e27eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:424
// Subtracting unsigned integers

/// `UTerm - UTerm = UTerm`
impl Sub<UTerm> for UTerm {
    type Output = UTerm;
    fn sub(self, _: UTerm) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:426
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B0$GT$$GT$3shl17h3b182392fb617034E:

00000000 <<typenum::uint::UTerm as core::ops::bit::Shl<typenum::bit::B0>>::shl>:
_ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B0$GT$$GT$3shl17h3b182392fb617034E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:680
// Shl unsigned integers

/// Shifting `UTerm` by a 0 bit: `UTerm << B0 = UTerm`
impl Shl<B0> for UTerm {
    type Output = UTerm;
    fn shl(self, _: B0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:682
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B1$GT$$GT$3shl17h4e76f1fa1746079bE:

00000000 <<typenum::uint::UTerm as core::ops::bit::Shl<typenum::bit::B1>>::shl>:
_ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shl$LT$typenum..bit..B1$GT$$GT$3shl17h4e76f1fa1746079bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:688
}

/// Shifting `UTerm` by a 1 bit: `UTerm << B1 = UTerm`
impl Shl<B1> for UTerm {
    type Output = UTerm;
    fn shl(self, _: B1) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:690
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B0$GT$$GT$3shr17h75a49765d3f6152aE:

00000000 <<typenum::uint::UTerm as core::ops::bit::Shr<typenum::bit::B0>>::shr>:
_ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B0$GT$$GT$3shr17h75a49765d3f6152aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:759
}

/// Shifting right `UTerm` by a 0 bit: `UTerm >> B0 = UTerm`
impl Shr<B0> for UTerm {
    type Output = UTerm;
    fn shr(self, _: B0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:761
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B1$GT$$GT$3shr17hc4a4b960cf7813b3E:

00000000 <<typenum::uint::UTerm as core::ops::bit::Shr<typenum::bit::B1>>::shr>:
_ZN84_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..bit..Shr$LT$typenum..bit..B1$GT$$GT$3shr17hc4a4b960cf7813b3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:767
}

/// Shifting right `UTerm` by a 1 bit: `UTerm >> B1 = UTerm`
impl Shr<B1> for UTerm {
    type Output = UTerm;
    fn shr(self, _: B1) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:769
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B0$GT$$GT$3mul17h556bce1fa441ebccE:

00000000 <<typenum::uint::UTerm as core::ops::arith::Mul<typenum::bit::B0>>::mul>:
_ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B0$GT$$GT$3mul17h556bce1fa441ebccE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:814
}

/// `UTerm * B0 = UTerm`
impl Mul<B0> for UTerm {
    type Output = UTerm;
    fn mul(self, _: B0) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:816
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B1$GT$$GT$3mul17h5464692f652be1a2E:

00000000 <<typenum::uint::UTerm as core::ops::arith::Mul<typenum::bit::B1>>::mul>:
_ZN86_$LT$typenum..uint..UTerm$u20$as$u20$core..ops..arith..Mul$LT$typenum..bit..B1$GT$$GT$3mul17h5464692f652be1a2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:822
}

/// `UTerm * B1 = UTerm`
impl Mul<B1> for UTerm {
    type Output = UTerm;
    fn mul(self, _: B1) -> Self::Output {
   0:	b082      	sub	sp, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:824
        UTerm
    }
   2:	b002      	add	sp, #8
   4:	4770      	bx	lr

Disassembly of section .text._ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17hf133aacf84034f28E:

00000000 <<typenum::uint::UTerm as core::fmt::Debug>::fmt>:
_ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17hf133aacf84034f28E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:49
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
   c:	9906      	ldr	r1, [sp, #24]
   e:	f240 0000 	movw	r0, #0
  12:	f2c0 0000 	movt	r0, #0
  16:	f10d 0c1c 	add.w	ip, sp, #28
  1a:	f04f 0e05 	mov.w	lr, #5
  1e:	9004      	str	r0, [sp, #16]
  20:	4660      	mov	r0, ip
  22:	f8dd c010 	ldr.w	ip, [sp, #16]
  26:	9203      	str	r2, [sp, #12]
  28:	4662      	mov	r2, ip
  2a:	9302      	str	r3, [sp, #8]
  2c:	4673      	mov	r3, lr
  2e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  32:	e7ff      	b.n	34 <<typenum::uint::UTerm as core::fmt::Debug>::fmt+0x34>
  34:	a807      	add	r0, sp, #28
  36:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <<typenum::uint::UTerm as core::fmt::Debug>::fmt+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	f000 0001 	and.w	r0, r0, #1
  44:	b00a      	add	sp, #40	; 0x28
  46:	bd80      	pop	{r7, pc}

vcell-566155b51a934a31.vcell.6ya2q0uh-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 vcell.6ya2q0uh-cgu.0



volatile_register-6781923736cbe70b.volatile_register.7pp0bn1d-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 volatile_register.7pp0bn1d-cgu.0


