In archive target/thumbv7m-none-eabi/release/libapp.rlib:

app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.o6vxcoia-cgu.0
00002277 l       .debug_str	00000000 
00002b11 l       .debug_str	00000000 
00002b81 l       .debug_str	00000000 
00002bd4 l       .debug_str	00000000 
00002c23 l       .debug_str	00000000 
00002c63 l       .debug_str	00000000 
00002c8a l       .debug_str	00000000 
00002c8e l       .debug_str	00000000 
00002c90 l       .debug_str	00000000 
00002c92 l       .debug_str	00000000 
00002c9c l       .debug_str	00000000 
00002ca5 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
00002cb9 l       .debug_str	00000000 
00002cc3 l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
00002d02 l       .debug_str	00000000 
00002d0c l       .debug_str	00000000 
00002d2f l       .debug_str	00000000 
00002d77 l       .debug_str	00000000 
00002db7 l       .debug_str	00000000 
00002dfe l       .debug_str	00000000 
00002e07 l       .debug_str	00000000 
00002e0b l       .debug_str	00000000 
00002e35 l       .debug_str	00000000 
00002e3a l       .debug_str	00000000 
00002e3d l       .debug_str	00000000 
00002e87 l       .debug_str	00000000 
00002e90 l       .debug_str	00000000 
00002ec3 l       .debug_str	00000000 
00002eee l       .debug_str	00000000 
00002ef0 l       .debug_str	00000000 
00002f2c l       .debug_str	00000000 
00002f3f l       .debug_str	00000000 
00002f44 l       .debug_str	00000000 
00002f56 l       .debug_str	00000000 
00002f5c l       .debug_str	00000000 
00002f62 l       .debug_str	00000000 
00002f64 l       .debug_str	00000000 
00002f6a l       .debug_str	00000000 
00002f6f l       .debug_str	00000000 
00002f7c l       .debug_str	00000000 
00002f81 l       .debug_str	00000000 
00002f89 l       .debug_str	00000000 
00002f8d l       .debug_str	00000000 
00002f92 l       .debug_str	00000000 
00002f9a l       .debug_str	00000000 
00002fb0 l       .debug_str	00000000 
00002fce l       .debug_str	00000000 
00002fd7 l       .debug_str	00000000 
00002fdc l       .debug_str	00000000 
00002fe1 l       .debug_str	00000000 
00002fe5 l       .debug_str	00000000 
00002fee l       .debug_str	00000000 
00002ff8 l       .debug_str	00000000 
00003010 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
000000a2 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000df l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000122 l       .debug_str	00000000 
00000125 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001e3 l       .debug_str	00000000 
000001ef l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
0000020a l       .debug_str	00000000 
00000214 l       .debug_str	00000000 
00000221 l       .debug_str	00000000 
0000022d l       .debug_str	00000000 
00000231 l       .debug_str	00000000 
0000023c l       .debug_str	00000000 
00000247 l       .debug_str	00000000 
0000024e l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
0000026f l       .debug_str	00000000 
00000277 l       .debug_str	00000000 
0000027e l       .debug_str	00000000 
00000282 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
00000290 l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
0000029c l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002ac l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
000002bc l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002cf l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
000002df l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002ed l       .debug_str	00000000 
000002f3 l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
0000034b l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
0000037c l       .debug_str	00000000 
00000382 l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
0000038b l       .debug_str	00000000 
0000039a l       .debug_str	00000000 
000003a1 l       .debug_str	00000000 
000003a5 l       .debug_str	00000000 
000003ae l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003be l       .debug_str	00000000 
000003c5 l       .debug_str	00000000 
000003d9 l       .debug_str	00000000 
000003e5 l       .debug_str	00000000 
000003f1 l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000420 l       .debug_str	00000000 
0000042a l       .debug_str	00000000 
00000438 l       .debug_str	00000000 
0000043c l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
0000044e l       .debug_str	00000000 
00000454 l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
0000045c l       .debug_str	00000000 
00000464 l       .debug_str	00000000 
0000047b l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
000004bb l       .debug_str	00000000 
000004c5 l       .debug_str	00000000 
000004df l       .debug_str	00000000 
0000053d l       .debug_str	00000000 
00000548 l       .debug_str	00000000 
00000565 l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
00000588 l       .debug_str	00000000 
000005ba l       .debug_str	00000000 
000005c1 l       .debug_str	00000000 
000005fa l       .debug_str	00000000 
0000060a l       .debug_str	00000000 
0000060d l       .debug_str	00000000 
00000614 l       .debug_str	00000000 
00000618 l       .debug_str	00000000 
0000061c l       .debug_str	00000000 
00000621 l       .debug_str	00000000 
00000627 l       .debug_str	00000000 
0000062b l       .debug_str	00000000 
0000063b l       .debug_str	00000000 
00000647 l       .debug_str	00000000 
00000653 l       .debug_str	00000000 
0000066a l       .debug_str	00000000 
00000676 l       .debug_str	00000000 
0000067a l       .debug_str	00000000 
00000687 l       .debug_str	00000000 
000006ab l       .debug_str	00000000 
000006b7 l       .debug_str	00000000 
000006c5 l       .debug_str	00000000 
000006dc l       .debug_str	00000000 
000006f1 l       .debug_str	00000000 
000006f4 l       .debug_str	00000000 
00000714 l       .debug_str	00000000 
0000071d l       .debug_str	00000000 
00000726 l       .debug_str	00000000 
0000072f l       .debug_str	00000000 
0000073b l       .debug_str	00000000 
00000743 l       .debug_str	00000000 
0000074b l       .debug_str	00000000 
00000751 l       .debug_str	00000000 
00000774 l       .debug_str	00000000 
00000785 l       .debug_str	00000000 
00000791 l       .debug_str	00000000 
000007cc l       .debug_str	00000000 
000007dd l       .debug_str	00000000 
000007df l       .debug_str	00000000 
00000807 l       .debug_str	00000000 
00000828 l       .debug_str	00000000 
0000082d l       .debug_str	00000000 
0000083b l       .debug_str	00000000 
0000084d l       .debug_str	00000000 
00000861 l       .debug_str	00000000 
00000865 l       .debug_str	00000000 
0000086e l       .debug_str	00000000 
00000872 l       .debug_str	00000000 
000008e2 l       .debug_str	00000000 
00000910 l       .debug_str	00000000 
0000093a l       .debug_str	00000000 
0000093f l       .debug_str	00000000 
0000097e l       .debug_str	00000000 
00000994 l       .debug_str	00000000 
0000099a l       .debug_str	00000000 
000009a1 l       .debug_str	00000000 
000009a4 l       .debug_str	00000000 
000009b0 l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
00000a12 l       .debug_str	00000000 
00000a74 l       .debug_str	00000000 
00000a7f l       .debug_str	00000000 
00000ac6 l       .debug_str	00000000 
00000b15 l       .debug_str	00000000 
00000b1f l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000ba1 l       .debug_str	00000000 
00000baa l       .debug_str	00000000 
00000bba l       .debug_str	00000000 
00000bc2 l       .debug_str	00000000 
00000c17 l       .debug_str	00000000 
00000c74 l       .debug_str	00000000 
00000c80 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c95 l       .debug_str	00000000 
00000ca1 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000cb2 l       .debug_str	00000000 
00000cba l       .debug_str	00000000 
00000cc4 l       .debug_str	00000000 
00000cd9 l       .debug_str	00000000 
00000ce0 l       .debug_str	00000000 
00000d00 l       .debug_str	00000000 
00000d07 l       .debug_str	00000000 
00000d0f l       .debug_str	00000000 
00000d19 l       .debug_str	00000000 
00000d24 l       .debug_str	00000000 
00000d2d l       .debug_str	00000000 
00000d38 l       .debug_str	00000000 
00000d44 l       .debug_str	00000000 
00000d48 l       .debug_str	00000000 
00000d51 l       .debug_str	00000000 
00000d58 l       .debug_str	00000000 
00000d60 l       .debug_str	00000000 
00000d68 l       .debug_str	00000000 
00000d72 l       .debug_str	00000000 
00000d78 l       .debug_str	00000000 
00000d7f l       .debug_str	00000000 
00000d86 l       .debug_str	00000000 
00000db3 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000dee l       .debug_str	00000000 
00000df4 l       .debug_str	00000000 
00000e03 l       .debug_str	00000000 
00000e13 l       .debug_str	00000000 
00000e23 l       .debug_str	00000000 
00000e2b l       .debug_str	00000000 
00000e54 l       .debug_str	00000000 
00000eb2 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f1f l       .debug_str	00000000 
00000f27 l       .debug_str	00000000 
00000f30 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f5e l       .debug_str	00000000 
00000f6c l       .debug_str	00000000 
00000f77 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f93 l       .debug_str	00000000 
00000fa9 l       .debug_str	00000000 
00000fb3 l       .debug_str	00000000 
00000fbc l       .debug_str	00000000 
00000fc5 l       .debug_str	00000000 
00000feb l       .debug_str	00000000 
00001001 l       .debug_str	00000000 
0000100c l       .debug_str	00000000 
00001022 l       .debug_str	00000000 
0000102a l       .debug_str	00000000 
0000104b l       .debug_str	00000000 
00001062 l       .debug_str	00000000 
00001067 l       .debug_str	00000000 
0000106f l       .debug_str	00000000 
00001078 l       .debug_str	00000000 
00001081 l       .debug_str	00000000 
0000108a l       .debug_str	00000000 
00001092 l       .debug_str	00000000 
00001099 l       .debug_str	00000000 
000010a5 l       .debug_str	00000000 
000010b0 l       .debug_str	00000000 
000010b8 l       .debug_str	00000000 
000010c0 l       .debug_str	00000000 
0000113c l       .debug_str	00000000 
000011c0 l       .debug_str	00000000 
000012bc l       .debug_str	00000000 
000013c0 l       .debug_str	00000000 
000013ce l       .debug_str	00000000 
000013d9 l       .debug_str	00000000 
000013e3 l       .debug_str	00000000 
000013ee l       .debug_str	00000000 
0000141c l       .debug_str	00000000 
00001497 l       .debug_str	00000000 
0000151a l       .debug_str	00000000 
00001528 l       .debug_str	00000000 
00001587 l       .debug_str	00000000 
000015ee l       .debug_str	00000000 
00001604 l       .debug_str	00000000 
00001614 l       .debug_str	00000000 
00001623 l       .debug_str	00000000 
00001627 l       .debug_str	00000000 
0000162d l       .debug_str	00000000 
00001633 l       .debug_str	00000000 
00001639 l       .debug_str	00000000 
00001649 l       .debug_str	00000000 
0000167c l       .debug_str	00000000 
000016bc l       .debug_str	00000000 
00001704 l       .debug_str	00000000 
00001708 l       .debug_str	00000000 
0000170e l       .debug_str	00000000 
00001714 l       .debug_str	00000000 
0000171a l       .debug_str	00000000 
0000172c l       .debug_str	00000000 
00001761 l       .debug_str	00000000 
000017a3 l       .debug_str	00000000 
000017ed l       .debug_str	00000000 
000017f1 l       .debug_str	00000000 
000017f7 l       .debug_str	00000000 
000017fd l       .debug_str	00000000 
00001803 l       .debug_str	00000000 
00001815 l       .debug_str	00000000 
0000184a l       .debug_str	00000000 
0000188c l       .debug_str	00000000 
000018d6 l       .debug_str	00000000 
000018da l       .debug_str	00000000 
000018e0 l       .debug_str	00000000 
000018e6 l       .debug_str	00000000 
000018ec l       .debug_str	00000000 
000018f2 l       .debug_str	00000000 
00001903 l       .debug_str	00000000 
00001937 l       .debug_str	00000000 
00001978 l       .debug_str	00000000 
000019c1 l       .debug_str	00000000 
000019c6 l       .debug_str	00000000 
000019cb l       .debug_str	00000000 
000019cf l       .debug_str	00000000 
000019d5 l       .debug_str	00000000 
000019db l       .debug_str	00000000 
000019e1 l       .debug_str	00000000 
000019f2 l       .debug_str	00000000 
00001a26 l       .debug_str	00000000 
00001a67 l       .debug_str	00000000 
00001ab0 l       .debug_str	00000000 
00001ab4 l       .debug_str	00000000 
00001ae8 l       .debug_str	00000000 
00001b29 l       .debug_str	00000000 
00001b72 l       .debug_str	00000000 
00001b77 l       .debug_str	00000000 
00001b7b l       .debug_str	00000000 
00001b84 l       .debug_str	00000000 
00001b8b l       .debug_str	00000000 
00001b93 l       .debug_str	00000000 
00001ba5 l       .debug_str	00000000 
00001bda l       .debug_str	00000000 
00001c1c l       .debug_str	00000000 
00001c66 l       .debug_str	00000000 
00001c6a l       .debug_str	00000000 
00001c70 l       .debug_str	00000000 
00001c76 l       .debug_str	00000000 
00001c7c l       .debug_str	00000000 
00001c82 l       .debug_str	00000000 
00001c8a l       .debug_str	00000000 
00001c98 l       .debug_str	00000000 
00001ca7 l       .debug_str	00000000 
00001cb8 l       .debug_str	00000000 
00001cc3 l       .debug_str	00000000 
00001cce l       .debug_str	00000000 
00001cd9 l       .debug_str	00000000 
00001ce0 l       .debug_str	00000000 
00001d03 l       .debug_str	00000000 
00001d15 l       .debug_str	00000000 
00001d4a l       .debug_str	00000000 
00001d8c l       .debug_str	00000000 
00001dd6 l       .debug_str	00000000 
00001dda l       .debug_str	00000000 
00001de4 l       .debug_str	00000000 
00001df6 l       .debug_str	00000000 
00001e2b l       .debug_str	00000000 
00001e6d l       .debug_str	00000000 
00001eb7 l       .debug_str	00000000 
00001ebc l       .debug_str	00000000 
00001ec6 l       .debug_str	00000000 
00001ed8 l       .debug_str	00000000 
00001f0d l       .debug_str	00000000 
00001f4f l       .debug_str	00000000 
00001f99 l       .debug_str	00000000 
00001fad l       .debug_str	00000000 
00001fbb l       .debug_str	00000000 
00001fcb l       .debug_str	00000000 
00001fd4 l       .debug_str	00000000 
00001fdf l       .debug_str	00000000 
00001fee l       .debug_str	00000000 
00002003 l       .debug_str	00000000 
00002034 l       .debug_str	00000000 
000020d1 l       .debug_str	00000000 
00002176 l       .debug_str	00000000 
00002181 l       .debug_str	00000000 
0000218a l       .debug_str	00000000 
000021ab l       .debug_str	00000000 
000021be l       .debug_str	00000000 
000021f4 l       .debug_str	00000000 
00002302 l       .debug_str	00000000 
0000231e l       .debug_str	00000000 
0000236a l       .debug_str	00000000 
000023be l       .debug_str	00000000 
000023db l       .debug_str	00000000 
000023ef l       .debug_str	00000000 
0000243b l       .debug_str	00000000 
0000248f l       .debug_str	00000000 
000024a5 l       .debug_str	00000000 
000024b9 l       .debug_str	00000000 
00002500 l       .debug_str	00000000 
0000254f l       .debug_str	00000000 
00002558 l       .debug_str	00000000 
00002566 l       .debug_str	00000000 
00002597 l       .debug_str	00000000 
0000259d l       .debug_str	00000000 
000025a5 l       .debug_str	00000000 
000025ac l       .debug_str	00000000 
000025b4 l       .debug_str	00000000 
000025bf l       .debug_str	00000000 
000025c7 l       .debug_str	00000000 
000025d6 l       .debug_str	00000000 
000025da l       .debug_str	00000000 
000025e5 l       .debug_str	00000000 
000025f1 l       .debug_str	00000000 
000025fc l       .debug_str	00000000 
0000260d l       .debug_str	00000000 
00002613 l       .debug_str	00000000 
0000261b l       .debug_str	00000000 
00002622 l       .debug_str	00000000 
0000262c l       .debug_str	00000000 
00002634 l       .debug_str	00000000 
0000263c l       .debug_str	00000000 
0000265e l       .debug_str	00000000 
00002669 l       .debug_str	00000000 
00002675 l       .debug_str	00000000 
0000267d l       .debug_str	00000000 
00002686 l       .debug_str	00000000 
00002691 l       .debug_str	00000000 
00002698 l       .debug_str	00000000 
000026a3 l       .debug_str	00000000 
000026ae l       .debug_str	00000000 
000026be l       .debug_str	00000000 
000026c8 l       .debug_str	00000000 
000026ce l       .debug_str	00000000 
000026f0 l       .debug_str	00000000 
00002728 l       .debug_str	00000000 
00002768 l       .debug_str	00000000 
0000276f l       .debug_str	00000000 
00002777 l       .debug_str	00000000 
0000278e l       .debug_str	00000000 
00002797 l       .debug_str	00000000 
000027a7 l       .debug_str	00000000 
000027b6 l       .debug_str	00000000 
000027be l       .debug_str	00000000 
000027c5 l       .debug_str	00000000 
000027cd l       .debug_str	00000000 
000027eb l       .debug_str	00000000 
000027fb l       .debug_str	00000000 
0000282e l       .debug_str	00000000 
00002843 l       .debug_str	00000000 
0000284c l       .debug_str	00000000 
000028a9 l       .debug_str	00000000 
0000290e l       .debug_str	00000000 
00002918 l       .debug_str	00000000 
00002928 l       .debug_str	00000000 
0000293d l       .debug_str	00000000 
00002945 l       .debug_str	00000000 
000029a9 l       .debug_str	00000000 
00002a15 l       .debug_str	00000000 
00002a1c l       .debug_str	00000000 
00002a24 l       .debug_str	00000000 
00002a42 l       .debug_str	00000000 
00002a52 l       .debug_str	00000000 
00002a85 l       .debug_str	00000000 
00002a9a l       .debug_str	00000000 
00002aad l       .debug_str	00000000 
00002ac2 l       .debug_str	00000000 
00002ac9 l       .debug_str	00000000 
00002ade l       .debug_str	00000000 
00002b08 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000019 .Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.21	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.22	0000000d .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.23	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	00000005 .Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	0000004b .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.26
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.30	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.31	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.33	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000f .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E	00000008 _ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	0000021c _ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	0000000c _ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l     F .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000050 _ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000000 .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE
00000000         *UND*	00000000 _ZN4core5panic8Location4file17h94cc6af18de736c4E
00000000         *UND*	00000000 _ZN4core5panic8Location4line17h3ffc63f14d0a6636E
00000000         *UND*	00000000 _ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E
00000000         *UND*	00000000 _ZN4core9panicking5panic17h53ca63c6ac6312f8E
00000000         *UND*	00000000 _ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E
00000000         *UND*	00000000 _ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17hffcd2d6e43a98b23E
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor10as_untyped17hc683efc51e7df2deE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor17register_listener17he319e84e05fa897bE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h7c5e0a202348e33cE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17hc658a5853b69921dE
00000000         *UND*	00000000 _ZN6mynewt3sys7console5flush17ha743c57e8b1e2e3cE
00000000         *UND*	00000000 _ZN6mynewt3sys7console5print17h578959f818f159a0E
00000000         *UND*	00000000 _ZN6mynewt3sys7console6buffer17h2c2282a002afa912E
00000000         *UND*	00000000 _ZN6mynewt3sys7console8printhex17h075b8327916646d1E
00000000         *UND*	00000000 _ZN6mynewt4Strn3new17hd3927fe713482c61E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network12prepare_post17h850eb70da8c09a26E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network14do_server_post17h63b4208c05d74765E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network16init_server_post17h27f63ed9509825d3E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network22start_server_transport17he5c189d769aa6683E
00000000         *UND*	00000000 _ZN6mynewt6kernel2os10eventq_run17h49917a2d6a4028eaE
00000000         *UND*	00000000 _ZN6mynewt6kernel2os15eventq_dflt_get17hb17cddfc29115d4fE
00000000         *UND*	00000000 _ZN6mynewt7sysinit17hc2bae3266fb1ff2aE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context12COAP_CONTEXT17h5e91d8ef2e33c9a1E
00000000         *UND*	00000000 _ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000         *UND*	00000000 json_helper_close_array
00000000         *UND*	00000000 json_helper_object_array_end_item
00000000         *UND*	00000000 json_helper_object_array_start_item
00000000         *UND*	00000000 json_helper_set_array
00000000         *UND*	00000000 json_helper_set_int
00000000         *UND*	00000000 json_helper_set_text_string
00000000         *UND*	00000000 json_rep_end_root_object
00000000         *UND*	00000000 json_rep_start_root_object
00000000 g     F .text.main	000000e8 main
00000000         *UND*	00000000 null_sensor
00000000 g     F .text.rust_begin_unwind	00000066 rust_begin_unwind



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E:

00000000 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE>

Disassembly of section .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E:

00000000 <_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E>:
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E:

00000000 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E>:
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:73
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b085      	sub	sp, #20
   6:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:75
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("Rust handle_sensor_data\n");
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:78
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { sensor::is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <is_null_sensor_data>
  1e:	b120      	cbz	r0, 2a <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x2a>
  20:	f06f 0001 	mvn.w	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  24:	b005      	add	sp, #20
  26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
  2a:	4628      	mov	r0, r5
  2c:	f7ff fffe 	bl	0 <is_null_sensor>
  30:	2800      	cmp	r0, #0
  32:	f040 80de 	bne.w	1f2 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x1f2>
  36:	2000      	movs	r0, #0
  38:	a902      	add	r1, sp, #8
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:113
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3a:	f88d 000c 	strb.w	r0, [sp, #12]
  3e:	9002      	str	r0, [sp, #8]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:114
            let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
  46:	2800      	cmp	r0, #0
  48:	f040 80da 	bne.w	200 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x200>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:118

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  4c:	f89d 000c 	ldrb.w	r0, [sp, #12]
  50:	2800      	cmp	r0, #0
  52:	f000 80dc 	beq.w	20e <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x20e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  56:	f240 0000 	movw	r0, #0
  5a:	2119      	movs	r1, #25
  5c:	f2c0 0000 	movt	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:121
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  60:	f8dd a008 	ldr.w	sl, [sp, #8]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  64:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:51
///   {"key":"device", "value":"0102030405060708090a0b0c0d0e0f10"},
///   {"key":"t",      "value":1715}
/// ]}
/// ```
pub fn send_sensor_data(val: &SensorValue) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console::print("Rust send_sensor_data\n");
  68:	f240 0000 	movw	r0, #0
  6c:	2116      	movs	r1, #22
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:57
    if let SensorValueType::None = val.val { assert!(false); }

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post(strn!("")) ? ;
  76:	f240 0000 	movw	r0, #0
  7a:	2101      	movs	r1, #1
  7c:	f2c0 0000 	movt	r0, #0
  80:	f7ff fffe 	bl	0 <_ZN6mynewt4Strn3new17hd3927fe713482c61E>
  84:	e9cd 0102 	strd	r0, r1, [sp, #8]
  88:	a902      	add	r1, sp, #8
  8a:	4668      	mov	r0, sp
  8c:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network16init_server_post17h27f63ed9509825d3E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  90:	9800      	ldr	r0, [sp, #0]
  92:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:57
  94:	2901      	cmp	r1, #1
  96:	d107      	bne.n	a8 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0xa8>
  98:	9801      	ldr	r0, [sp, #4]
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
  9a:	3006      	adds	r0, #6
  9c:	f000 8093 	beq.w	1c6 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x1c6>
  a0:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
}
  a2:	b005      	add	sp, #20
  a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:58
    if !rc { return Err(MynewtError::SYS_EAGAIN); }  //  If network transport not ready, tell caller (Sensor Listener) to try again later.
  a8:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  ac:	f000 808b 	beq.w	1c6 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x1c6>
  b0:	a802      	add	r0, sp, #8
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:62

    //  Compose the CoAP Payload using the coap!() macro.
    //  Select @json or @cbor To encode CoAP Payload in JSON or CBOR format:
    let _payload = coap!( @json {        
  b2:	2132      	movs	r1, #50	; 0x32
  b4:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network12prepare_post17h850eb70da8c09a26E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  b8:	f89d 0008 	ldrb.w	r0, [sp, #8]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:62
  bc:	2801      	cmp	r0, #1
  be:	d07e      	beq.n	1be <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x1be>
  c0:	f7ff fffe 	bl	0 <json_rep_start_root_object>
  c4:	f240 0b00 	movw	fp, #0
  c8:	f2c0 0b00 	movt	fp, #0
  cc:	4658      	mov	r0, fp
  ce:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
  d2:	f240 0100 	movw	r1, #0
  d6:	4607      	mov	r7, r0
  d8:	f2c0 0100 	movt	r1, #0
  dc:	4658      	mov	r0, fp
  de:	2207      	movs	r2, #7
  e0:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
  e4:	4601      	mov	r1, r0
  e6:	4638      	mov	r0, r7
  e8:	f7ff fffe 	bl	0 <json_helper_set_array>
  ec:	f240 0900 	movw	r9, #0
  f0:	4658      	mov	r0, fp
  f2:	f2c0 0900 	movt	r9, #0
  f6:	220d      	movs	r2, #13
  f8:	4649      	mov	r1, r9
  fa:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
  fe:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 102:	f240 0000 	movw	r0, #0
 106:	2103      	movs	r1, #3
 108:	f2c0 0000 	movt	r0, #0
 10c:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 110:	4606      	mov	r6, r0
 112:	f240 0000 	movw	r0, #0
 116:	460f      	mov	r7, r1
 118:	f2c0 0000 	movt	r0, #0
 11c:	2101      	movs	r1, #1
 11e:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 122:	4604      	mov	r4, r0
 124:	4658      	mov	r0, fp
 126:	460d      	mov	r5, r1
 128:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 12c:	4680      	mov	r8, r0
 12e:	4658      	mov	r0, fp
 130:	4631      	mov	r1, r6
 132:	463a      	mov	r2, r7
 134:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 138:	4606      	mov	r6, r0
 13a:	4658      	mov	r0, fp
 13c:	4621      	mov	r1, r4
 13e:	462a      	mov	r2, r5
 140:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E>
 144:	4602      	mov	r2, r0
 146:	4640      	mov	r0, r8
 148:	4631      	mov	r1, r6
 14a:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 14e:	f240 0000 	movw	r0, #0
 152:	2105      	movs	r1, #5
 154:	f2c0 0000 	movt	r0, #0
 158:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 15c:	4604      	mov	r4, r0
 15e:	4658      	mov	r0, fp
 160:	460d      	mov	r5, r1
 162:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 166:	4606      	mov	r6, r0
 168:	4658      	mov	r0, fp
 16a:	4621      	mov	r1, r4
 16c:	462a      	mov	r2, r5
 16e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 172:	4601      	mov	r1, r0
 174:	4630      	mov	r0, r6
 176:	4652      	mov	r2, sl
 178:	2300      	movs	r3, #0
 17a:	f7ff fffe 	bl	0 <json_helper_set_int>
 17e:	4658      	mov	r0, fp
 180:	4649      	mov	r1, r9
 182:	220d      	movs	r2, #13
 184:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 188:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 18c:	4658      	mov	r0, fp
 18e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 192:	f240 0100 	movw	r1, #0
 196:	4604      	mov	r4, r0
 198:	4658      	mov	r0, fp
 19a:	f2c0 0100 	movt	r1, #0
 19e:	2207      	movs	r2, #7
 1a0:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 1a4:	4601      	mov	r1, r0
 1a6:	4620      	mov	r0, r4
 1a8:	f7ff fffe 	bl	0 <json_helper_close_array>
 1ac:	f7ff fffe 	bl	0 <json_rep_end_root_object>
 1b0:	a802      	add	r0, sp, #8
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:76
    });

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 1b2:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network14do_server_post17h63b4208c05d74765E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
 1b6:	f89d 0008 	ldrb.w	r0, [sp, #8]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:76
 1ba:	2801      	cmp	r0, #1
 1bc:	d10e      	bne.n	1dc <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x1dc>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 1be:	9803      	ldr	r0, [sp, #12]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 1c0:	3006      	adds	r0, #6
 1c2:	f47f af6d 	bne.w	a0 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0xa0>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:95
            console::print("TMP network not ready\n");
 1c6:	f240 0000 	movw	r0, #0
 1ca:	2116      	movs	r1, #22
 1cc:	f2c0 0000 	movt	r0, #0
 1d0:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
 1d4:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
}
 1d6:	b005      	add	sp, #20
 1d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:78

    console::print("NET view your sensor at \nhttps://blue-pill-geolocate.appspot.com?device=%s\n");  //  , device_id);
 1dc:	f240 0000 	movw	r0, #0
 1e0:	214b      	movs	r1, #75	; 0x4b
 1e2:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 1e6:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
 1ea:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
 1ec:	b005      	add	sp, #20
 1ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
 1f2:	f240 0000 	movw	r0, #0
 1f6:	f2c0 0000 	movt	r0, #0
 1fa:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 1fe:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
 200:	f240 0000 	movw	r0, #0
 204:	f2c0 0000 	movt	r0, #0
 208:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 20c:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:83
    if let SensorValueType::None = sensor_value.val { assert!(false); }  //  Invalid type
 20e:	f240 0000 	movw	r0, #0
 212:	f2c0 0000 	movt	r0, #0
 216:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 21a:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:49
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:55
    //  Initialise the Mynewt packages and BME280 / temp_stm32 temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <_ZN6mynewt7sysinit17hc2bae3266fb1ff2aE>
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:48
    console::print("Rust TMP poll \n");  //  SENSOR_DEVICE "\n";
   6:	f240 0000 	movw	r0, #0
   a:	210f      	movs	r1, #15
   c:	f2c0 0000 	movt	r0, #0
  10:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:51
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  14:	f240 0000 	movw	r0, #0
  18:	f242 7110 	movw	r1, #10000	; 0x2710
  1c:	f2c0 0000 	movt	r0, #0
  20:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h7c5e0a202348e33cE>
  24:	2801      	cmp	r0, #1
  26:	d147      	bne.n	b8 <main+0xb8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, unsafe { sensor::null_sensor() }) ? ;
  28:	f7ff fffe 	bl	0 <null_sensor>
  2c:	f240 0100 	movw	r1, #0
  30:	4602      	mov	r2, r0
  32:	4668      	mov	r0, sp
  34:	f2c0 0100 	movt	r1, #0
  38:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17hc658a5853b69921dE>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h43143ffffefcd0f1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  3c:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
  40:	2801      	cmp	r0, #1
  42:	d017      	beq.n	74 <main+0x74>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  44:	4620      	mov	r0, r4
  46:	f7ff fffe 	bl	0 <is_null_sensor>
  4a:	2800      	cmp	r0, #0
  4c:	d145      	bne.n	da <main+0xda>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:60
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor10as_untyped17hc683efc51e7df2deE>
  5a:	2100      	movs	r1, #0
  5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:65
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  60:	9101      	str	r1, [sp, #4]
  62:	9200      	str	r2, [sp, #0]
  64:	9104      	str	r1, [sp, #16]
  66:	e9cd 0102 	strd	r0, r1, [sp, #8]
  6a:	4669      	mov	r1, sp
  6c:	4620      	mov	r0, r4
  6e:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor17register_listener17he319e84e05fa897bE>
  72:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  74:	2c01      	cmp	r4, #1
  76:	d120      	bne.n	ba <main+0xba>
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:62
    //  Starting polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  78:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network22start_server_transport17he5c189d769aa6683E>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  7c:	2801      	cmp	r0, #1
  7e:	d124      	bne.n	ca <main+0xca>
main():
  80:	466c      	mov	r4, sp
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:68
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  82:	4620      	mov	r0, r4
  84:	f7ff fffe 	bl	0 <_ZN6mynewt6kernel2os15eventq_dflt_get17hb17cddfc29115d4fE>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  88:	9800      	ldr	r0, [sp, #0]
  8a:	2801      	cmp	r0, #1
  8c:	d00c      	beq.n	a8 <main+0xa8>
  8e:	9801      	ldr	r0, [sp, #4]
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:67
        os::eventq_run(               //  Processing events...
  90:	f7ff fffe 	bl	0 <_ZN6mynewt6kernel2os10eventq_run17h49917a2d6a4028eaE>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  94:	2801      	cmp	r0, #1
  96:	d0f4      	beq.n	82 <main+0x82>
main():
  98:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	f7ff fffe 	bl	0 <main>
  a6:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  a8:	9901      	ldr	r1, [sp, #4]
  aa:	f240 0000 	movw	r0, #0
  ae:	f2c0 0000 	movt	r0, #0
  b2:	f7ff fffe 	bl	0 <main>
  b6:	defe      	udf	#254	; 0xfe
main():
  b8:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  ba:	f240 0000 	movw	r0, #0
  be:	4621      	mov	r1, r4
  c0:	f2c0 0000 	movt	r0, #0
  c4:	f7ff fffe 	bl	0 <main>
  c8:	defe      	udf	#254	; 0xfe
main():
  ca:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  cc:	f240 0000 	movw	r0, #0
  d0:	f2c0 0000 	movt	r0, #0
  d4:	f7ff fffe 	bl	0 <main>
  d8:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  da:	f240 0000 	movw	r0, #0
  de:	f2c0 0000 	movt	r0, #0
  e2:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  e6:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:79

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <_ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E>
   4:	b318      	cbz	r0, 4e <rust_begin_unwind+0x4e>
   6:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
   8:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4file17h94cc6af18de736c4E>
   c:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
   e:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
  10:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
  12:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4line17h3ffc63f14d0a6636E>
  16:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        console::print("panic at ");  console::buffer(&file);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
  26:	4628      	mov	r0, r5
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console6buffer17h2c2282a002afa912E>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:83
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  2e:	f240 0000 	movw	r0, #0
  32:	2108      	movs	r1, #8
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
  3c:	4620      	mov	r0, r4
  3e:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console8printhex17h075b8327916646d1E>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:84
        console::print("\n");         console::flush();
  42:	f240 0000 	movw	r0, #0
  46:	2101      	movs	r1, #1
  48:	f2c0 0000 	movt	r0, #0
  4c:	e004      	b.n	c <rust_begin_unwind+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:86
    } else {
        console::print("panic unknown loc\n");  console::flush();
  4e:	f240 0000 	movw	r0, #0
  52:	2112      	movs	r1, #18
  54:	f2c0 0000 	movt	r0, #0
  58:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
  5c:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5flush17ha743c57e8b1e2e3cE>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  60:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:91
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  64:	e7fe      	b.n	64 <rust_begin_unwind+0x64>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.bc.z: File format not recognized
