In archive target/thumbv7m-none-eabi/debug/libmylib.rlib:

mylib-ac95891f38e7979c.1b7do7e5i4j0exrn.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 1b7do7e5i4j0exrn
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000075 l       .debug_str	00000000 
0000007f l       .debug_str	00000000 
000000be l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
00000190 l       .debug_str	00000000 
000001a3 l       .debug_str	00000000 
000001a8 l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000001b3 l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
000001bd l       .debug_str	00000000 
000001bf l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001d9 l       .debug_str	00000000 
00000213 l       .debug_str	00000000 
00000224 l       .debug_str	00000000 
0000022e l       .debug_str	00000000 
00000231 l       .debug_str	00000000 
00000245 l       .debug_str	00000000 
0000024f l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
00000272 l       .debug_str	00000000 
00000276 l       .debug_str	00000000 
00000280 l       .debug_str	00000000 
00000284 l       .debug_str	00000000 
00000289 l       .debug_str	00000000 
0000028f l       .debug_str	00000000 
00000293 l       .debug_str	00000000 
000002a3 l       .debug_str	00000000 
000002b2 l       .debug_str	00000000 
000002c5 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
000002dc l       .debug_str	00000000 
000002e2 l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002ef l       .debug_str	00000000 
000002f4 l       .debug_str	00000000 
000002fb l       .debug_str	00000000 
00000302 l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
0000030c l       .debug_str	00000000 
00000315 l       .debug_str	00000000 
0000031d l       .debug_str	00000000 
00000321 l       .debug_str	00000000 
0000032b l       .debug_str	00000000 
00000337 l       .debug_str	00000000 
00000357 l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
0000036e l       .debug_str	00000000 
00000374 l       .debug_str	00000000 
00000379 l       .debug_str	00000000 
00000000 l     O .rodata.cst32	00000020 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.0
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.1	0000000a .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.1
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.10	00000018 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.10
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.11	00000013 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.11
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.12	00000011 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.12
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.2	00000001 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.2
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.3	00000003 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.3
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.4	0000000c .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.4
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.5	00000006 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.5
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.7	00000006 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.7
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.8	00000018 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.8
00000000 l     O .rodata..Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.9	00000018 .Lanon.40a6c3f14d1932fb6cfe4a5ce7ea5fa5.9
00000000 l     F .text._ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E	00000062 _ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E
00000000 l     F .text._ZN5mylib9send_coap11test_macro217h6b917a3da363aaabE	00000006 _ZN5mylib9send_coap11test_macro217h6b917a3da363aaabE
00000000 l     F .text._ZN5mylib9send_coap21send_sensor_data_rust17hd55460c1735c3003E	000000a8 _ZN5mylib9send_coap21send_sensor_data_rust17hd55460c1735c3003E
00000000 l     O .rodata.str.0	00000010 str.0
00000000 l     O .rodata.str.1	0000001c str.1
00000000 l     O .rodata.str.2	00000021 str.2
00000000 l    d  .text._ZN5mylib9send_coap21send_sensor_data_rust17hd55460c1735c3003E	00000000 .text._ZN5mylib9send_coap21send_sensor_data_rust17hd55460c1735c3003E
00000000 l    d  .text._ZN5mylib9send_coap11test_macro217h6b917a3da363aaabE	00000000 .text._ZN5mylib9send_coap11test_macro217h6b917a3da363aaabE
00000000 l    d  .text._ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E	00000000 .text._ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E
00000000 l    d  .text._ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE	00000000 .text._ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE
00000000 l    d  .text._ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E	00000000 .text._ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E
00000000 l    d  .rodata.str.0	00000000 .rodata.str.0
00000000 l    d  .rodata.str.1	00000000 .rodata.str.1
00000000 l    d  .rodata.str.2	00000000 .rodata.str.2
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6e6820e87d479c61E
00000000         *UND*	00000000 _ZN4core9panicking5panic17h53ca63c6ac6312f8E
00000000         *UND*	00000000 .hidden _ZN5mylib4base13console_print17h47a7ec4e529b3d82E
00000000 g     F .text._ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E	00000030 .hidden _ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E
00000000 g     F .text._ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE	00000032 .hidden _ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE



Disassembly of section .text._ZN5mylib9send_coap21send_sensor_data_rust17hd55460c1735c3003E:

00000000 <_ZN5mylib9send_coap21send_sensor_data_rust17hd55460c1735c3003E>:
_ZN5mylib9send_coap21send_sensor_data_rust17hd55460c1735c3003E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:276
}

///  Compose a CoAP message (CBOR or JSON) with the sensor value in `val` and transmit to the
///  Collector Node (if this is a Sensor Node) or to the CoAP Server (if this is a Collector Node
///  or Standalone Node).
fn send_sensor_data_rust() {
   0:	b580      	push	{r7, lr}
   2:	b098      	sub	sp, #96	; 0x60
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:277
    let device_id = b"0102030405060708090a0b0c0d0e0f10";
   4:	f240 0000 	movw	r0, #0
   8:	f2c0 0000 	movt	r0, #0
   c:	9002      	str	r0, [sp, #8]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:278
    let node_id = b"b3b4b5b6f1";
   e:	f240 0000 	movw	r0, #0
  12:	f2c0 0000 	movt	r0, #0
  16:	9003      	str	r0, [sp, #12]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:282

    //  Sensor `t` has int value 2870.
    let int_sensor_value = SensorValueNew {
        key: b"t".as_ptr(),
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2101      	movs	r1, #1
  22:	f7ff fffe 	bl	0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6e6820e87d479c61E>
  26:	9001      	str	r0, [sp, #4]
  28:	e7ff      	b.n	2a <_ZN5mylib9send_coap21send_sensor_data_rust17hd55460c1735c3003E+0x2a>
  2a:	f640 3036 	movw	r0, #2870	; 0xb36
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:283
        val: SensorValueType::Uint(2870)
  2e:	9008      	str	r0, [sp, #32]
  30:	2000      	movs	r0, #0
  32:	9007      	str	r0, [sp, #28]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:281
    let int_sensor_value = SensorValueNew {
  34:	9801      	ldr	r0, [sp, #4]
  36:	9004      	str	r0, [sp, #16]
  38:	9907      	ldr	r1, [sp, #28]
  3a:	9a08      	ldr	r2, [sp, #32]
  3c:	9206      	str	r2, [sp, #24]
  3e:	9105      	str	r1, [sp, #20]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:287
    };
    //  Sensor `tmp` has float value 28.70.
    let float_sensor_value = SensorValueNew {
        key: b"tmp".as_ptr(),
  40:	f240 0000 	movw	r0, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	2103      	movs	r1, #3
  4a:	f7ff fffe 	bl	0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6e6820e87d479c61E>
  4e:	9000      	str	r0, [sp, #0]
  50:	e7ff      	b.n	52 <_ZN5mylib9send_coap21send_sensor_data_rust17hd55460c1735c3003E+0x52>
  52:	f649 109a 	movw	r0, #39322	; 0x999a
  56:	f2c4 10e5 	movt	r0, #16869	; 0x41e5
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:288
        val: SensorValueType::Float(28.70)
  5a:	900d      	str	r0, [sp, #52]	; 0x34
  5c:	2001      	movs	r0, #1
  5e:	900c      	str	r0, [sp, #48]	; 0x30
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:286
    let float_sensor_value = SensorValueNew {
  60:	9800      	ldr	r0, [sp, #0]
  62:	9009      	str	r0, [sp, #36]	; 0x24
  64:	990c      	ldr	r1, [sp, #48]	; 0x30
  66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  68:	920b      	str	r2, [sp, #44]	; 0x2c
  6a:	910a      	str	r1, [sp, #40]	; 0x28
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:294
    };

    trace_macros!(true);

    //  Compose the CoAP Payload in JSON or CBOR using the `coap` macro.
    let payload = coap!({
  6c:	f240 0100 	movw	r1, #0
  70:	f2c0 0100 	movt	r1, #0
  74:	9110      	str	r1, [sp, #64]	; 0x40
  76:	210c      	movs	r1, #12
  78:	9111      	str	r1, [sp, #68]	; 0x44
  7a:	9910      	ldr	r1, [sp, #64]	; 0x40
  7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  7e:	9112      	str	r1, [sp, #72]	; 0x48
  80:	9213      	str	r2, [sp, #76]	; 0x4c
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:108
        let _key = $($key)+;
  82:	f240 0100 	movw	r1, #0
  86:	f2c0 0100 	movt	r1, #0
  8a:	9114      	str	r1, [sp, #80]	; 0x50
  8c:	2106      	movs	r1, #6
  8e:	9115      	str	r1, [sp, #84]	; 0x54
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:295
        "device": device_id,
  90:	9a02      	ldr	r2, [sp, #8]
  92:	9217      	str	r2, [sp, #92]	; 0x5c
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:294
    let payload = coap!({
  94:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  96:	9216      	str	r2, [sp, #88]	; 0x58
  98:	f240 0200 	movw	r2, #0
  9c:	f2c0 0200 	movt	r2, #0
  a0:	920e      	str	r2, [sp, #56]	; 0x38
  a2:	910f      	str	r1, [sp, #60]	; 0x3c
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:303
        //  float_sensor_value,  //  Send `{tmp: 28.70}`
    });

    trace_macros!(false);

}
  a4:	b018      	add	sp, #96	; 0x60
  a6:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN5mylib9send_coap11test_macro217h6b917a3da363aaabE:

00000000 <_ZN5mylib9send_coap11test_macro217h6b917a3da363aaabE>:
_ZN5mylib9send_coap11test_macro217h6b917a3da363aaabE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:347
            //  println!("{} = {}", stringify!{$e}, val);
        }
    }};
}

fn test_macro2() {
   0:	b081      	sub	sp, #4
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:391
            //  If there are more sensor values, add them here with
            //  coap_item_int_val, coap_item_int, coap_item_uint, coap_item_float or coap_item_str

        }) //  Close the "values" array
    }); //  Close the payload root
}
   2:	b001      	add	sp, #4
   4:	4770      	bx	lr

Disassembly of section .text._ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E:

00000000 <_ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E>:
_ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:402
            //  println!("{} = {}", stringify!{$e}, val);
        }
    }};
}

fn test_macro() {
   0:	b086      	sub	sp, #24
   2:	2003      	movs	r0, #3
   4:	2100      	movs	r1, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:404
    calculate! {
        eval 1 + 2 // hehehe `eval` is _not_ a Rust keyword!
   6:	2900      	cmp	r1, #0
   8:	9003      	str	r0, [sp, #12]
   a:	d115      	bne.n	38 <_ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E+0x38>
   c:	e7ff      	b.n	e <_ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E+0xe>
   e:	9803      	ldr	r0, [sp, #12]
  10:	9004      	str	r0, [sp, #16]
  12:	2103      	movs	r1, #3
  14:	2200      	movs	r2, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:408
    }

    calculate! {
        eval (1 + 2) * (3 / 4)
  16:	2a00      	cmp	r2, #0
  18:	9102      	str	r1, [sp, #8]
  1a:	d114      	bne.n	46 <_ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E+0x46>
  1c:	e7ff      	b.n	1e <_ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E+0x1e>
  1e:	e7ff      	b.n	20 <_ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E+0x20>
  20:	2000      	movs	r0, #0
  22:	9902      	ldr	r1, [sp, #8]
  24:	fba1 0200 	umull	r0, r2, r1, r0
  28:	2a00      	cmp	r2, #0
  2a:	9001      	str	r0, [sp, #4]
  2c:	d112      	bne.n	54 <_ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E+0x54>
  2e:	e7ff      	b.n	30 <_ZN5mylib9send_coap10test_macro17h8c5aa704be2bdec7E+0x30>
  30:	9801      	ldr	r0, [sp, #4]
  32:	9005      	str	r0, [sp, #20]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:410
    }
}
  34:	b006      	add	sp, #24
  36:	4770      	bx	lr
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:404
        eval 1 + 2 // hehehe `eval` is _not_ a Rust keyword!
  38:	f240 0000 	movw	r0, #0
  3c:	f2c0 0000 	movt	r0, #0
  40:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  44:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:408
        eval (1 + 2) * (3 / 4)
  46:	f240 0000 	movw	r0, #0
  4a:	f2c0 0000 	movt	r0, #0
  4e:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  52:	defe      	udf	#254	; 0xfe
  54:	f240 0000 	movw	r0, #0
  58:	f2c0 0000 	movt	r0, #0
  5c:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  60:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE:

00000000 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE>:
_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:416

///  TODO: Start the Network Task in the background.  The Network Task prepares the network drivers
///  (ESP8266 and nRF24L01) for transmitting sensor data messages.  
///  Connecting the ESP8266 to the WiFi access point may be slow so we do this in the background.
///  Also perform WiFi Geolocation if it is enabled.  Return 0 if successful.
pub fn start_network_task() -> Result<(), i32>  {  //  Returns an error code upon error.
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:418
//  pub fn start_network_task() -> i32  {
    console_print(b"start_network_task\n");
   4:	f240 0000 	movw	r0, #0
   8:	f2c0 0000 	movt	r0, #0
   c:	2113      	movs	r1, #19
   e:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  12:	e7ff      	b.n	2 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:419
    test_macro();
  14:	f7ff fffe 	bl	0 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE>
  18:	e7ff      	b.n	2 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:420
    test_macro2();
  1a:	f7ff fffe 	bl	0 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE>
  1e:	e7ff      	b.n	2 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:421
    send_sensor_data_rust();
  20:	f7ff fffe 	bl	0 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE>
  24:	e7ff      	b.n	26 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE+0x26>
  26:	2000      	movs	r0, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:422
    Ok(())
  28:	9001      	str	r0, [sp, #4]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:424
    //  0
}
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	9902      	ldr	r1, [sp, #8]
  2e:	b004      	add	sp, #16
  30:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E:

00000000 <_ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E>:
_ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:435
///  For Collector Node: sensor_node is the Sensor Node Address of the Sensor Node that transmitted
///  the sensor data (like `b3b4b5b6f1`)
///  The message will be enqueued for transmission by the CoAP / OIC Background Task 
///  so this function will return without waiting for the message to be transmitted.  
///  Return 0 if successful, SYS_EAGAIN if network is not ready yet.
pub fn send_sensor_data(_val: *const SensorValue, _sensor_node: &'static CStr) -> i32 {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	4613      	mov	r3, r2
   6:	468c      	mov	ip, r1
   8:	4686      	mov	lr, r0
   a:	9003      	str	r0, [sp, #12]
   c:	9104      	str	r1, [sp, #16]
   e:	9205      	str	r2, [sp, #20]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:436
    console_print(b"send_sensor_data\n");
  10:	f240 0000 	movw	r0, #0
  14:	f2c0 0000 	movt	r0, #0
  18:	2111      	movs	r1, #17
  1a:	9302      	str	r3, [sp, #8]
  1c:	f8cd c004 	str.w	ip, [sp, #4]
  20:	f8cd e000 	str.w	lr, [sp]
  24:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  28:	e7ff      	b.n	2a <_ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E+0x2a>
  2a:	2000      	movs	r0, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:468

*/

    ;
    0
}
  2c:	b006      	add	sp, #24
  2e:	bd80      	pop	{r7, pc}

mylib-ac95891f38e7979c.1p0bleeal0c8ffkh.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 1p0bleeal0c8ffkh
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
0000007b l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
0000008c l       .debug_str	00000000 
00000093 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000a5 l       .debug_str	00000000 
000000ac l       .debug_str	00000000 
000000af l       .debug_str	00000000 
000000b3 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000c1 l       .debug_str	00000000 
000000ca l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000db l       .debug_str	00000000 
000000e1 l       .debug_str	00000000 
000000e6 l       .debug_str	00000000 
000000f2 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000113 l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
00000139 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
0000014f l       .debug_str	00000000 
00000152 l       .debug_str	00000000 
00000158 l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000170 l       .debug_str	00000000 
00000176 l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
000001cc l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001d3 l       .debug_str	00000000 
000001fa l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
0000020b l       .debug_str	00000000 
0000020e l       .debug_str	00000000 
0000021d l       .debug_str	00000000 
00000224 l       .debug_str	00000000 
00000228 l       .debug_str	00000000 
00000231 l       .debug_str	00000000 
00000239 l       .debug_str	00000000 
00000241 l       .debug_str	00000000 
00000248 l       .debug_str	00000000 
0000025c l       .debug_str	00000000 
00000268 l       .debug_str	00000000 
00000274 l       .debug_str	00000000 
0000028d l       .debug_str	00000000 
00000292 l       .debug_str	00000000 
000002a3 l       .debug_str	00000000 
000002ad l       .debug_str	00000000 
000002bb l       .debug_str	00000000 
000002bf l       .debug_str	00000000 
000002ca l       .debug_str	00000000 
000002d1 l       .debug_str	00000000 
000002d7 l       .debug_str	00000000 
000002db l       .debug_str	00000000 
000002df l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000322 l       .debug_str	00000000 
0000033e l       .debug_str	00000000 
00000348 l       .debug_str	00000000 
00000362 l       .debug_str	00000000 
000003c0 l       .debug_str	00000000 
000003cb l       .debug_str	00000000 
000003e8 l       .debug_str	00000000 
00000401 l       .debug_str	00000000 
0000040b l       .debug_str	00000000 
0000043d l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3fmt9Arguments6new_v117h0330c13173882f69E	00000000 .text._ZN4core3fmt9Arguments6new_v117h0330c13173882f69E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3fmt9Arguments6new_v117h0330c13173882f69E	0000004c .hidden _ZN4core3fmt9Arguments6new_v117h0330c13173882f69E



Disassembly of section .text._ZN4core3fmt9Arguments6new_v117h0330c13173882f69E:

00000000 <_ZN4core3fmt9Arguments6new_v117h0330c13173882f69E>:
_ZN4core3fmt9Arguments6new_v117h0330c13173882f69E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:314
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
   8:	469e      	mov	lr, r3
   a:	4614      	mov	r4, r2
   c:	460d      	mov	r5, r1
   e:	4606      	mov	r6, r0
  10:	9104      	str	r1, [sp, #16]
  12:	9205      	str	r2, [sp, #20]
  14:	9306      	str	r3, [sp, #24]
  16:	f8cd c01c 	str.w	ip, [sp, #28]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:317
  1a:	9904      	ldr	r1, [sp, #16]
  1c:	9a05      	ldr	r2, [sp, #20]
  1e:	2300      	movs	r3, #0
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:318
  20:	9309      	str	r3, [sp, #36]	; 0x24
  22:	9308      	str	r3, [sp, #32]
  24:	9308      	str	r3, [sp, #32]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:319
  26:	9b06      	ldr	r3, [sp, #24]
  28:	f8dd c01c 	ldr.w	ip, [sp, #28]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2c:	6001      	str	r1, [r0, #0]
  2e:	6042      	str	r2, [r0, #4]
  30:	9908      	ldr	r1, [sp, #32]
  32:	9a09      	ldr	r2, [sp, #36]	; 0x24
  34:	6081      	str	r1, [r0, #8]
  36:	60c2      	str	r2, [r0, #12]
  38:	6103      	str	r3, [r0, #16]
  3a:	f8c0 c014 	str.w	ip, [r0, #20]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:321
  3e:	f8cd e00c 	str.w	lr, [sp, #12]
  42:	9402      	str	r4, [sp, #8]
  44:	9501      	str	r5, [sp, #4]
  46:	9600      	str	r6, [sp, #0]
  48:	b00a      	add	sp, #40	; 0x28
  4a:	bd70      	pop	{r4, r5, r6, pc}

mylib-ac95891f38e7979c.1r58q2o71511853b.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 1r58q2o71511853b
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000075 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
0000009d l       .debug_str	00000000 
000000a1 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000cb l       .debug_str	00000000 
000000e7 l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000147 l       .debug_str	00000000 
0000014f l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000196 l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000232 l       .debug_str	00000000 
0000023b l       .debug_str	00000000 
00000243 l       .debug_str	00000000 
00000248 l       .debug_str	00000000 
00000255 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.544111cdb1325800d89e791f810558e0.2	00000018 .Lanon.544111cdb1325800d89e791f810558e0.2
00000000 l     O .data._ZN5mylib6sensor17LISTENER_INTERNAL17hd450d9d557dd742bE	00000018 _ZN5mylib6sensor17LISTENER_INTERNAL17hd450d9d557dd742bE
00000000 l     F .text._ZN5mylib6sensor21null_sensor_data_func17h37bae91f918c1fbaE	0000002a _ZN5mylib6sensor21null_sensor_data_func17h37bae91f918c1fbaE
00000000 l    d  .text._ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E	00000000 .text._ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E
00000000 l    d  .text._ZN5mylib6sensor21null_sensor_data_func17h37bae91f918c1fbaE	00000000 .text._ZN5mylib6sensor21null_sensor_data_func17h37bae91f918c1fbaE
00000000 l    d  .rodata..Lanon.544111cdb1325800d89e791f810558e0.0	00000000 .rodata..Lanon.544111cdb1325800d89e791f810558e0.0
00000000 l    d  .rodata..Lanon.544111cdb1325800d89e791f810558e0.1	00000000 .rodata..Lanon.544111cdb1325800d89e791f810558e0.1
00000000 l    d  .data._ZN5mylib6sensor17LISTENER_INTERNAL17hd450d9d557dd742bE	00000000 .data._ZN5mylib6sensor17LISTENER_INTERNAL17hd450d9d557dd742bE
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN4core9panicking5panic17h53ca63c6ac6312f8E
00000000 g     F .text._ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E	0000005e .hidden _ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E
00000000         *UND*	00000000 sensor_register_listener



Disassembly of section .text._ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E:

00000000 <_ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E>:
_ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E():
/mnt/c/stm32bluepill-mynewt-sensor/src/sensor.rs:14
///  for the sensor listener structure.
///
///  `sensor`: The sensor to register a listener on.
///  `listener`: The listener to register onto the sensor.
///  Return 0 on success, non-zero error code on failure.
pub fn register_listener(sensor: SensorPtr, listener: SensorListener) -> i32 {    
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4602      	mov	r2, r0
   6:	9003      	str	r0, [sp, #12]
/mnt/c/stm32bluepill-mynewt-sensor/src/sensor.rs:15
    unsafe { assert!(LISTENER_INTERNAL.sl_sensor_type == 0) };  //  Make sure it's not used.
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	6803      	ldr	r3, [r0, #0]
  12:	6840      	ldr	r0, [r0, #4]
  14:	4318      	orrs	r0, r3
  16:	2800      	cmp	r0, #0
  18:	9102      	str	r1, [sp, #8]
  1a:	9201      	str	r2, [sp, #4]
  1c:	d007      	beq.n	2e <_ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E+0x2e>
  1e:	e7ff      	b.n	20 <_ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E+0x20>
  20:	f240 0000 	movw	r0, #0
  24:	f2c0 0000 	movt	r0, #0
  28:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  2c:	defe      	udf	#254	; 0xfe
  2e:	a804      	add	r0, sp, #16
/mnt/c/stm32bluepill-mynewt-sensor/src/sensor.rs:17
    //  Copy the caller's listener to the internal listener.
    unsafe { LISTENER_INTERNAL = listener };
  30:	9902      	ldr	r1, [sp, #8]
  32:	4602      	mov	r2, r0
  34:	e891 5078 	ldmia.w	r1, {r3, r4, r5, r6, ip, lr}
  38:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
  3c:	f240 0100 	movw	r1, #0
  40:	f2c0 0100 	movt	r1, #0
  44:	460a      	mov	r2, r1
  46:	e890 5078 	ldmia.w	r0, {r3, r4, r5, r6, ip, lr}
  4a:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
/mnt/c/stm32bluepill-mynewt-sensor/src/sensor.rs:19
    //  Pass the internal listener to the unsafe Mynewt API.
    unsafe { sensor_register_listener(sensor, &mut LISTENER_INTERNAL) }
  4e:	9803      	ldr	r0, [sp, #12]
  50:	f7ff fffe 	bl	0 <sensor_register_listener>
  54:	9000      	str	r0, [sp, #0]
  56:	e7ff      	b.n	58 <_ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E+0x58>
/mnt/c/stm32bluepill-mynewt-sensor/src/sensor.rs:20
}
  58:	9800      	ldr	r0, [sp, #0]
  5a:	b00a      	add	sp, #40	; 0x28
  5c:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN5mylib6sensor21null_sensor_data_func17h37bae91f918c1fbaE:

00000000 <_ZN5mylib6sensor21null_sensor_data_func17h37bae91f918c1fbaE>:
_ZN5mylib6sensor21null_sensor_data_func17h37bae91f918c1fbaE():
/mnt/c/stm32bluepill-mynewt-sensor/src/sensor.rs:33
    sl_arg        : 0,
    sl_next       : 0,
};

///  Define a dummy sensor data function in case there is none.
extern fn null_sensor_data_func(_sensor: SensorPtr, _arg: SensorArg, _sensor_data: SensorDataPtr, _sensor_type: SensorType) -> i32 { 0 }
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b088      	sub	sp, #32
   4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   6:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
   a:	4696      	mov	lr, r2
   c:	460c      	mov	r4, r1
   e:	4605      	mov	r5, r0
  10:	9003      	str	r0, [sp, #12]
  12:	9104      	str	r1, [sp, #16]
  14:	9205      	str	r2, [sp, #20]
  16:	9307      	str	r3, [sp, #28]
  18:	f8cd c018 	str.w	ip, [sp, #24]
  1c:	2000      	movs	r0, #0
  1e:	f8cd e008 	str.w	lr, [sp, #8]
  22:	9401      	str	r4, [sp, #4]
  24:	9500      	str	r5, [sp, #0]
  26:	b008      	add	sp, #32
  28:	bdb0      	pop	{r4, r5, r7, pc}

mylib-ac95891f38e7979c.1sy4lk16z0utqsak.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 1sy4lk16z0utqsak
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
0000007b l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
0000008c l       .debug_str	00000000 
00000093 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000a5 l       .debug_str	00000000 
000000ac l       .debug_str	00000000 
000000af l       .debug_str	00000000 
000000b3 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000c0 l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000cd l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000122 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000131 l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
0000014e l       .debug_str	00000000 
00000152 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
00000183 l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
00000194 l       .debug_str	00000000 
0000019c l       .debug_str	00000000 
000001a3 l       .debug_str	00000000 
000001a8 l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001c2 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001da l       .debug_str	00000000 
000001e2 l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001f0 l       .debug_str	00000000 
000001f3 l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
00000208 l       .debug_str	00000000 
0000020d l       .debug_str	00000000 
00000213 l       .debug_str	00000000 
00000219 l       .debug_str	00000000 
00000223 l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
0000023e l       .debug_str	00000000 
00000244 l       .debug_str	00000000 
0000024a l       .debug_str	00000000 
00000255 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
000002a0 l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002d1 l       .debug_str	00000000 
000002d7 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002ec l       .debug_str	00000000 
000002f3 l       .debug_str	00000000 
000002f7 l       .debug_str	00000000 
00000300 l       .debug_str	00000000 
0000030c l       .debug_str	00000000 
00000325 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
0000033b l       .debug_str	00000000 
00000345 l       .debug_str	00000000 
00000353 l       .debug_str	00000000 
00000357 l       .debug_str	00000000 
00000362 l       .debug_str	00000000 
00000369 l       .debug_str	00000000 
0000036f l       .debug_str	00000000 
00000373 l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
0000037f l       .debug_str	00000000 
00000396 l       .debug_str	00000000 
000003ba l       .debug_str	00000000 
000003d6 l       .debug_str	00000000 
000003e0 l       .debug_str	00000000 
000003fa l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
00000463 l       .debug_str	00000000 
00000480 l       .debug_str	00000000 
00000499 l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
000004b9 l       .debug_str	00000000 
000004d7 l       .debug_str	00000000 
000004e0 l       .debug_str	00000000 
000004e5 l       .debug_str	00000000 
000004ea l       .debug_str	00000000 
000004ee l       .debug_str	00000000 
000004f7 l       .debug_str	00000000 
00000501 l       .debug_str	00000000 
00000519 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 .hidden _ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E
00000000         *UND*	00000000 .hidden _ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17hca80eebebc99ccd9E
00000000         *UND*	00000000 _ZN4core5panic8Location4file17h94cc6af18de736c4E
00000000         *UND*	00000000 _ZN4core5panic8Location4line17h3ffc63f14d0a6636E
00000000         *UND*	00000000 _ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E
00000000         *UND*	00000000 _ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E
00000000         *UND*	00000000 _ZN4core9panicking5panic17h53ca63c6ac6312f8E
00000000         *UND*	00000000 .hidden _ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE
00000000         *UND*	00000000 .hidden _ZN5mylib4base13console_print17h47a7ec4e529b3d82E
00000000         *UND*	00000000 .hidden _ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 console_buffer
00000000         *UND*	00000000 console_flush
00000000         *UND*	00000000 console_printhex
00000000 g     F .text.main	0000005e main
00000000         *UND*	00000000 os_eventq_dflt_get
00000000         *UND*	00000000 os_eventq_run
00000000 g     F .text.rust_begin_unwind	000000b6 rust_begin_unwind
00000000         *UND*	00000000 rust_sysinit



Disassembly of section .text.main:

00000000 <main>:
main():
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:24
use crate::listen_sensor::*;    //  Import listen_sensor.rs for polling the temperature sensor
use crate::send_coap::*;        //  Import send_coap.rs for sending sensor data

///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
pub extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b084      	sub	sp, #16
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:26
    //  Init Mynewt system.
    unsafe { rust_sysinit()  };
   2:	f7ff fffe 	bl	0 <rust_sysinit>
   6:	e7ff      	b.n	2 <console_flush+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:27
    unsafe { console_flush() };
   8:	f7ff fffe 	bl	0 <console_flush>
   c:	e7ff      	b.n	2 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:32

    //  Start the Network Task in the background.  The Network Task prepares the ESP8266 or nRF24L01 transceiver for
    //  sending CoAP messages.  We connect the ESP8266 to the WiFi access point and register
    //  the ESP8266/nRF24L01 driver as the network transport for CoAP.  Also perform WiFi Geolocation if it is enabled.
    let rc = start_network_task();  
   e:	f7ff fffe 	bl	0 <_ZN5mylib9send_coap18start_network_task17hca6051abf27965cbE>
  12:	9102      	str	r1, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <main+0x18>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:33
    rc.expect("");
  18:	9801      	ldr	r0, [sp, #4]
  1a:	9902      	ldr	r1, [sp, #8]
  1c:	f240 0200 	movw	r2, #0
  20:	f2c0 0200 	movt	r2, #0
  24:	2300      	movs	r3, #0
  26:	f7ff fffe 	bl	0 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E>
  2a:	e7ff      	b.n	2 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:39
    //  assert!(rc == 0);

    //  Starting polling the temperature sensor every 10 seconds in the background.  
    //  After polling the sensor, call the listener function to send the sensor data to the CoAP server or Collector Node.
    //  If this is the Collector Node, we shall wait for sensor data from the Sensor Nodes and transmit to the CoAP server.
    let rc = start_sensor_listener();  assert!(rc == 0);
  2c:	f7ff fffe 	bl	0 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE>
  30:	9003      	str	r0, [sp, #12]
  32:	e7ff      	b.n	34 <main+0x34>
  34:	9803      	ldr	r0, [sp, #12]
  36:	2800      	cmp	r0, #0
  38:	d007      	beq.n	4a <main+0x4a>
  3a:	e7ff      	b.n	3c <main+0x3c>
  3c:	f240 0000 	movw	r0, #0
  40:	f2c0 0000 	movt	r0, #0
  44:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  48:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:42

    //  Main event loop
    loop {                            //  Loop forever...
  4a:	e7ff      	b.n	4c <main+0x4c>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:45
        unsafe {
            os_eventq_run(            //  Process events...
                os_eventq_dflt_get()  //  From default event queue.
  4c:	f7ff fffe 	bl	0 <os_eventq_dflt_get>
  50:	9000      	str	r0, [sp, #0]
  52:	e7ff      	b.n	54 <main+0x54>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:44
            os_eventq_run(            //  Process events...
  54:	9800      	ldr	r0, [sp, #0]
  56:	f7ff fffe 	bl	0 <os_eventq_run>
  5a:	e7ff      	b.n	5c <main+0x5c>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:42
    loop {                            //  Loop forever...
  5c:	e7f6      	b.n	4c <main+0x4c>

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:54
    //  Never comes here.
}

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
   0:	b08a      	sub	sp, #40	; 0x28
   2:	4601      	mov	r1, r0
   4:	9003      	str	r0, [sp, #12]
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:56
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   6:	9803      	ldr	r0, [sp, #12]
   8:	9102      	str	r1, [sp, #8]
   a:	f7ff fffe 	bl	0 <_ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E>
   e:	9005      	str	r0, [sp, #20]
  10:	e7ff      	b.n	12 <rust_begin_unwind+0x12>
  12:	9805      	ldr	r0, [sp, #20]
  14:	2800      	cmp	r0, #0
  16:	d03f      	beq.n	98 <rust_begin_unwind+0x98>
  18:	e7ff      	b.n	1a <rust_begin_unwind+0x1a>
  1a:	9805      	ldr	r0, [sp, #20]
  1c:	9006      	str	r0, [sp, #24]
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:57
        let file = location.file();
  1e:	9806      	ldr	r0, [sp, #24]
  20:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4file17h94cc6af18de736c4E>
  24:	9108      	str	r1, [sp, #32]
  26:	9007      	str	r0, [sp, #28]
  28:	e7ff      	b.n	2a <rust_begin_unwind+0x2a>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:58
        let line = location.line();
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4line17h3ffc63f14d0a6636E>
  30:	9009      	str	r0, [sp, #36]	; 0x24
  32:	e7ff      	b.n	34 <rust_begin_unwind+0x34>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:59
        console_print(b"panic at ");
  34:	f240 0000 	movw	r0, #0
  38:	f2c0 0000 	movt	r0, #0
  3c:	2109      	movs	r1, #9
  3e:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  42:	e7ff      	b.n	44 <rust_begin_unwind+0x44>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:60
        unsafe { console_buffer(file.as_ptr(), file.len() as u32) }
  44:	9807      	ldr	r0, [sp, #28]
  46:	9908      	ldr	r1, [sp, #32]
  48:	f7ff fffe 	bl	0 <_ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17hca80eebebc99ccd9E>
  4c:	9001      	str	r0, [sp, #4]
  4e:	e7ff      	b.n	50 <rust_begin_unwind+0x50>
  50:	9807      	ldr	r0, [sp, #28]
  52:	9908      	ldr	r1, [sp, #32]
  54:	f7ff fffe 	bl	0 <_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E>
  58:	9000      	str	r0, [sp, #0]
  5a:	e7ff      	b.n	5c <rust_begin_unwind+0x5c>
  5c:	9801      	ldr	r0, [sp, #4]
  5e:	9900      	ldr	r1, [sp, #0]
  60:	f7ff fffe 	bl	0 <console_buffer>
  64:	e7ff      	b.n	2 <rust_begin_unwind+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:61
        console_print(b" line 0x");
  66:	f240 0000 	movw	r0, #0
  6a:	f2c0 0000 	movt	r0, #0
  6e:	2108      	movs	r1, #8
  70:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  74:	e7ff      	b.n	76 <rust_begin_unwind+0x76>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:62
        unsafe { console_printhex(line as u8) }  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  76:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
  7a:	f7ff fffe 	bl	0 <console_printhex>
  7e:	e7ff      	b.n	2 <rust_begin_unwind+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:63
        console_print(b"\n");
  80:	f240 0000 	movw	r0, #0
  84:	f2c0 0000 	movt	r0, #0
  88:	2101      	movs	r1, #1
  8a:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  8e:	e7ff      	b.n	2 <console_flush+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:64
        unsafe { console_flush() }
  90:	f7ff fffe 	bl	0 <console_flush>
  94:	e7ff      	b.n	96 <rust_begin_unwind+0x96>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:56
    if let Some(location) = info.location() {
  96:	e00a      	b.n	ae <rust_begin_unwind+0xae>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:66
    } else {
        console_print(b"panic unknown loc\n");
  98:	f240 0000 	movw	r0, #0
  9c:	f2c0 0000 	movt	r0, #0
  a0:	2112      	movs	r1, #18
  a2:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  a6:	e7ff      	b.n	2 <console_flush+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:67
        unsafe { console_flush() }
  a8:	f7ff fffe 	bl	0 <console_flush>
  ac:	e7ff      	b.n	2 <__bkpt+0x2>
_ZN8cortex_m3asm4bkpt17ha12387e1b6ef82e6E():
/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  ae:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:70
    }
    //  Pause in the debugger.
    bkpt();
  b2:	e7ff      	b.n	b4 <rust_begin_unwind+0xb4>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:72
    //  Loop forever so that device won't restart.
    loop {}
  b4:	e7fe      	b.n	b4 <rust_begin_unwind+0xb4>

mylib-ac95891f38e7979c.29x7oqvwgrpr4c8r.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 29x7oqvwgrpr4c8r
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000075 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000080 l       .debug_str	00000000 
0000008a l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000ec l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
00000194 l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001a9 l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
000001b0 l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001cf l       .debug_str	00000000 
000001d9 l       .debug_str	00000000 
000001dd l       .debug_str	00000000 
000001e9 l       .debug_str	00000000 
000001ec l       .debug_str	00000000 
00000208 l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
00000220 l       .debug_str	00000000 
00000224 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000285 l       .debug_str	00000000 
0000028c l       .debug_str	00000000 
00000294 l       .debug_str	00000000 
000002a3 l       .debug_str	00000000 
000002a8 l       .debug_str	00000000 
000002b4 l       .debug_str	00000000 
000002c0 l       .debug_str	00000000 
000002c7 l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
000002d9 l       .debug_str	00000000 
000002e3 l       .debug_str	00000000 
000002e9 l       .debug_str	00000000 
000002fd l       .debug_str	00000000 
00000302 l       .debug_str	00000000 
00000313 l       .debug_str	00000000 
00000325 l       .debug_str	00000000 
00000332 l       .debug_str	00000000 
0000033e l       .debug_str	00000000 
0000034c l       .debug_str	00000000 
00000363 l       .debug_str	00000000 
00000375 l       .debug_str	00000000 
00000395 l       .debug_str	00000000 
0000039e l       .debug_str	00000000 
000003a7 l       .debug_str	00000000 
000003b9 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.0	0000000a .Lanon.32e44b06c4d24b342963a6a6b9d75415.0
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.1	0000000d .Lanon.32e44b06c4d24b342963a6a6b9d75415.1
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.10	00000018 .Lanon.32e44b06c4d24b342963a6a6b9d75415.10
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.12	00000018 .Lanon.32e44b06c4d24b342963a6a6b9d75415.12
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.13	00000016 .Lanon.32e44b06c4d24b342963a6a6b9d75415.13
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.14	00000018 .Lanon.32e44b06c4d24b342963a6a6b9d75415.14
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.15	00000001 .Lanon.32e44b06c4d24b342963a6a6b9d75415.15
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.16	00000018 .Lanon.32e44b06c4d24b342963a6a6b9d75415.16
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.17	00000018 .Lanon.32e44b06c4d24b342963a6a6b9d75415.17
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.18	00000019 .Lanon.32e44b06c4d24b342963a6a6b9d75415.18
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.19	00000002 .Lanon.32e44b06c4d24b342963a6a6b9d75415.19
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.4	00000018 .Lanon.32e44b06c4d24b342963a6a6b9d75415.4
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.6	00000018 .Lanon.32e44b06c4d24b342963a6a6b9d75415.6
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.7	00000018 .Lanon.32e44b06c4d24b342963a6a6b9d75415.7
00000000 l     O .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.8	00000011 .Lanon.32e44b06c4d24b342963a6a6b9d75415.8
00000000 l     F .text._ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE	0000014c _ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE
00000000 l     F .text._ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E	00000120 _ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E
00000000 l    d  .text._ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE	00000000 .text._ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE
00000000 l    d  .text._ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E	00000000 .text._ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E
00000000 l    d  .text._ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE	00000000 .text._ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE
00000000 l    d  .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.2	00000000 .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.2
00000000 l    d  .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.3	00000000 .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.3
00000000 l    d  .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.5	00000000 .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.5
00000000 l    d  .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.9	00000000 .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.9
00000000 l    d  .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.11	00000000 .rodata..Lanon.32e44b06c4d24b342963a6a6b9d75415.11
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6e6820e87d479c61E
00000000         *UND*	00000000 _ZN4core9panicking5panic17h53ca63c6ac6312f8E
00000000 g     F .text._ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE	000000ca .hidden _ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE
00000000         *UND*	00000000 .hidden _ZN5mylib4base13console_print17h47a7ec4e529b3d82E
00000000         *UND*	00000000 .hidden _ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E
00000000         *UND*	00000000 .hidden _ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E
00000000         *UND*	00000000 _ZN9cstr_core4CStr8from_ptr17hf882b52c821e39a0E
00000000         *UND*	00000000 device_get_name
00000000         *UND*	00000000 get_temp_data
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000         *UND*	00000000 null_sensor
00000000         *UND*	00000000 sensor_get_device
00000000         *UND*	00000000 sensor_mgr_find_next_bydevname
00000000         *UND*	00000000 sensor_set_poll_rate_ms



Disassembly of section .text._ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE:

00000000 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE>:
_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:30
///  Listener Function to send the sensor data to the Collector Node (if this is a Sensor Node)
///  or CoAP Server (is this is a Standalone Node).
///  For Collector Node: Start the Listeners for Remote Sensor 
///  Otherwise this is a Standalone Node with ESP8266, or a Sensor Node with nRF24L01.
///  Return 0 if successful.
pub fn start_sensor_listener() -> i32 {
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	b093      	sub	sp, #76	; 0x4c
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:31
    console_print(b"TMP poll \n");  //  SENSOR_DEVICE "\n";
   4:	f240 0000 	movw	r0, #0
   8:	f2c0 0000 	movt	r0, #0
   c:	210a      	movs	r1, #10
   e:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  12:	e7ff      	b.n	2 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:34

    //  Set the sensor polling time to 10 seconds.  SENSOR_DEVICE is either "bme280_0" or "temp_stm32_0"
    let rc = unsafe { sensor_set_poll_rate_ms(SENSOR_DEVICE, SENSOR_POLL_TIME) };
  14:	f240 0000 	movw	r0, #0
  18:	f2c0 0000 	movt	r0, #0
  1c:	f242 7110 	movw	r1, #10000	; 0x2710
  20:	f7ff fffe 	bl	0 <sensor_set_poll_rate_ms>
  24:	9002      	str	r0, [sp, #8]
  26:	e7ff      	b.n	28 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x28>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:35
    assert!(rc == 0);
  28:	9802      	ldr	r0, [sp, #8]
  2a:	2800      	cmp	r0, #0
  2c:	d007      	beq.n	3e <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x3e>
  2e:	e7ff      	b.n	30 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x30>
  30:	f240 0000 	movw	r0, #0
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  3c:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:38

    //  Fetch the sensor by name, without locking the driver for exclusive access.
    let listen_sensor = unsafe { sensor_mgr_find_next_bydevname(SENSOR_DEVICE, null_sensor()) };
  3e:	f7ff fffe 	bl	0 <null_sensor>
  42:	9001      	str	r0, [sp, #4]
  44:	e7ff      	b.n	46 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x46>
  46:	f240 0000 	movw	r0, #0
  4a:	f2c0 0000 	movt	r0, #0
  4e:	9901      	ldr	r1, [sp, #4]
  50:	f7ff fffe 	bl	0 <sensor_mgr_find_next_bydevname>
  54:	9003      	str	r0, [sp, #12]
  56:	e7ff      	b.n	58 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x58>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:39
    assert!(!unsafe{ is_null_sensor(listen_sensor) });
  58:	9803      	ldr	r0, [sp, #12]
  5a:	f7ff fffe 	bl	0 <is_null_sensor>
  5e:	9000      	str	r0, [sp, #0]
  60:	e7ff      	b.n	62 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x62>
  62:	9800      	ldr	r0, [sp, #0]
  64:	07c1      	lsls	r1, r0, #31
  66:	2900      	cmp	r1, #0
  68:	d007      	beq.n	7a <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x7a>
  6a:	e7ff      	b.n	6c <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0x6c>
  6c:	f240 0000 	movw	r0, #0
  70:	f2c0 0000 	movt	r0, #0
  74:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  78:	defe      	udf	#254	; 0xfe
  7a:	2000      	movs	r0, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:42

    //  Define the listener function to be called after polling the temperature sensor.
    let listener = SensorListener {
  7c:	9005      	str	r0, [sp, #20]
  7e:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
  82:	9104      	str	r1, [sp, #16]
  84:	f240 0100 	movw	r1, #0
  88:	f2c0 0100 	movt	r1, #0
  8c:	9106      	str	r1, [sp, #24]
  8e:	2101      	movs	r1, #1
  90:	9107      	str	r1, [sp, #28]
  92:	9008      	str	r0, [sp, #32]
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:50
        sl_arg        : LISTENER_CB,           //  Indicate to the listener function that this is a listener callback
        sl_next       : 0,                     //  Must be 0
    };

    //  Register the Listener Function to be called every 10 seconds, with the polled sensor data.
    let rc = register_listener(listen_sensor, listener);
  94:	9803      	ldr	r0, [sp, #12]
  96:	a904      	add	r1, sp, #16
  98:	aa0c      	add	r2, sp, #48	; 0x30
  9a:	4613      	mov	r3, r2
  9c:	e891 50f0 	ldmia.w	r1, {r4, r5, r6, r7, ip, lr}
  a0:	e883 50f0 	stmia.w	r3, {r4, r5, r6, r7, ip, lr}
  a4:	4611      	mov	r1, r2
  a6:	f7ff fffe 	bl	0 <_ZN5mylib6sensor17register_listener17h3dfd25ec2d95f800E>
  aa:	900b      	str	r0, [sp, #44]	; 0x2c
  ac:	e7ff      	b.n	ae <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0xae>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:51
    assert!(rc == 0);
  ae:	980b      	ldr	r0, [sp, #44]	; 0x2c
  b0:	2800      	cmp	r0, #0
  b2:	d007      	beq.n	c4 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0xc4>
  b4:	e7ff      	b.n	b6 <_ZN5mylib13listen_sensor21start_sensor_listener17h20948f110386186dE+0xb6>
  b6:	f240 0000 	movw	r0, #0
  ba:	f2c0 0000 	movt	r0, #0
  be:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  c2:	defe      	udf	#254	; 0xfe
  c4:	2000      	movs	r0, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:55

    //  Return 0 to indicate success.  This line should not end with a semicolon (;).
    0
}
  c6:	b013      	add	sp, #76	; 0x4c
  c8:	bdf0      	pop	{r4, r5, r6, r7, pc}

Disassembly of section .text._ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E:

00000000 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E>:
_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:70
///  This listener function is called by Mynewt every 10 seconds (for local sensors) or when sensor data is received
///  (for Remote Sensors).  Mynewt has fetched the raw or computed temperature value, passed through `sensor_data`.
///  If this is a Sensor Node, we send the sensor data to the Collector Node.
///  If this is a Collector Node or Standalone Node, we send the sensor data to the CoAP server.  
///  Return 0 if we have processed the sensor data successfully.
extern fn read_temperature(sensor: SensorPtr, _arg: SensorArg, sensor_data: SensorDataPtr, sensor_type: SensorType) -> i32 {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b096      	sub	sp, #88	; 0x58
   4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   6:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
   a:	4696      	mov	lr, r2
   c:	460c      	mov	r4, r1
   e:	4605      	mov	r5, r0
  10:	9007      	str	r0, [sp, #28]
  12:	9108      	str	r1, [sp, #32]
  14:	9209      	str	r2, [sp, #36]	; 0x24
  16:	930b      	str	r3, [sp, #44]	; 0x2c
  18:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:72
    unsafe {
        console_print(b"read_temperature\n");
  1c:	f240 0000 	movw	r0, #0
  20:	f2c0 0000 	movt	r0, #0
  24:	2111      	movs	r1, #17
  26:	f8cd e018 	str.w	lr, [sp, #24]
  2a:	9405      	str	r4, [sp, #20]
  2c:	9504      	str	r5, [sp, #16]
  2e:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  32:	e7ff      	b.n	34 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x34>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:75
        //  Check that the temperature data is valid.
        //  TODO
        if is_null_sensor_data(sensor_data) { return SYS_EINVAL; }  //  Exit if data is missing
  34:	9809      	ldr	r0, [sp, #36]	; 0x24
  36:	f7ff fffe 	bl	0 <is_null_sensor_data>
  3a:	9003      	str	r0, [sp, #12]
  3c:	e7ff      	b.n	3e <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x3e>
  3e:	9803      	ldr	r0, [sp, #12]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d007      	beq.n	56 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x56>
  46:	e7ff      	b.n	48 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x48>
  48:	f06f 0001 	mvn.w	r0, #1
  4c:	900c      	str	r0, [sp, #48]	; 0x30
  4e:	e7ff      	b.n	50 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x50>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:107
        }
        assert!(rc == 0);
        //#endif  //  MYNEWT_VAL(SENSOR_COAP)
    }
    0
}
  50:	980c      	ldr	r0, [sp, #48]	; 0x30
  52:	b016      	add	sp, #88	; 0x58
  54:	bdb0      	pop	{r4, r5, r7, pc}
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:76
        assert!(!is_null_sensor(sensor));
  56:	9807      	ldr	r0, [sp, #28]
  58:	f7ff fffe 	bl	0 <is_null_sensor>
  5c:	9002      	str	r0, [sp, #8]
  5e:	e7ff      	b.n	60 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x60>
  60:	9802      	ldr	r0, [sp, #8]
  62:	07c1      	lsls	r1, r0, #31
  64:	2900      	cmp	r1, #0
  66:	d007      	beq.n	78 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x78>
  68:	e7ff      	b.n	6a <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x6a>
  6a:	f240 0000 	movw	r0, #0
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  76:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:80
        let device = sensor_get_device(sensor);
  78:	9807      	ldr	r0, [sp, #28]
  7a:	f7ff fffe 	bl	0 <sensor_get_device>
  7e:	900d      	str	r0, [sp, #52]	; 0x34
  80:	e7ff      	b.n	82 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x82>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:81
        let c_buf: *const c_char = device_get_name(device);
  82:	980d      	ldr	r0, [sp, #52]	; 0x34
  84:	f7ff fffe 	bl	0 <device_get_name>
  88:	900e      	str	r0, [sp, #56]	; 0x38
  8a:	e7ff      	b.n	8c <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x8c>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:82
        let device_name: &CStr = CStr::from_ptr(c_buf);
  8c:	980e      	ldr	r0, [sp, #56]	; 0x38
  8e:	f7ff fffe 	bl	0 <_ZN9cstr_core4CStr8from_ptr17hf882b52c821e39a0E>
  92:	9001      	str	r0, [sp, #4]
  94:	9100      	str	r1, [sp, #0]
  96:	e7ff      	b.n	98 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x98>
  98:	9801      	ldr	r0, [sp, #4]
  9a:	900f      	str	r0, [sp, #60]	; 0x3c
  9c:	9900      	ldr	r1, [sp, #0]
  9e:	9110      	str	r1, [sp, #64]	; 0x40
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:86
        let temp_sensor_value = get_temperature(sensor_data, sensor_type);
  a0:	9909      	ldr	r1, [sp, #36]	; 0x24
  a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  a6:	a811      	add	r0, sp, #68	; 0x44
  a8:	f7ff fffe 	bl	0 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E>
  ac:	e7ff      	b.n	ae <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xae>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:87
        assert!(temp_sensor_value.val_type != 0);
  ae:	9812      	ldr	r0, [sp, #72]	; 0x48
  b0:	2800      	cmp	r0, #0
  b2:	d107      	bne.n	c4 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xc4>
  b4:	e7ff      	b.n	b6 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xb6>
  b6:	f240 0000 	movw	r0, #0
  ba:	f2c0 0000 	movt	r0, #0
  be:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  c2:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:88
        if temp_sensor_value.val_type == 0 { return -1; }  //  Invalid type.
  c4:	9812      	ldr	r0, [sp, #72]	; 0x48
  c6:	2800      	cmp	r0, #0
  c8:	d105      	bne.n	d6 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xd6>
  ca:	e7ff      	b.n	cc <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xcc>
  cc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  d0:	900c      	str	r0, [sp, #48]	; 0x30
  d2:	e7ff      	b.n	d4 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xd4>
  d4:	e7bc      	b.n	50 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x50>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:95
        let rc = send_sensor_data(&temp_sensor_value, device_name);
  d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  d8:	9a10      	ldr	r2, [sp, #64]	; 0x40
  da:	a811      	add	r0, sp, #68	; 0x44
  dc:	f7ff fffe 	bl	0 <_ZN5mylib9send_coap16send_sensor_data17h3747d7a54823f9e4E>
  e0:	9015      	str	r0, [sp, #84]	; 0x54
  e2:	e7ff      	b.n	e4 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xe4>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:99
        if rc == SYS_EAGAIN {
  e4:	9815      	ldr	r0, [sp, #84]	; 0x54
  e6:	3006      	adds	r0, #6
  e8:	2800      	cmp	r0, #0
  ea:	d10b      	bne.n	104 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x104>
  ec:	e7ff      	b.n	ee <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xee>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:100
            console_print(b"TMP network not ready\n");
  ee:	f240 0000 	movw	r0, #0
  f2:	f2c0 0000 	movt	r0, #0
  f6:	2116      	movs	r1, #22
  f8:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  fc:	e7ff      	b.n	fe <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xfe>
  fe:	2000      	movs	r0, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:101
            return 0; 
 100:	900c      	str	r0, [sp, #48]	; 0x30
 102:	e7e7      	b.n	d4 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0xd4>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:103
        assert!(rc == 0);
 104:	9815      	ldr	r0, [sp, #84]	; 0x54
 106:	2800      	cmp	r0, #0
 108:	d007      	beq.n	11a <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x11a>
 10a:	e7ff      	b.n	10c <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x10c>
 10c:	f240 0000 	movw	r0, #0
 110:	f2c0 0000 	movt	r0, #0
 114:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 118:	defe      	udf	#254	; 0xfe
 11a:	2000      	movs	r0, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:106
    0
 11c:	900c      	str	r0, [sp, #48]	; 0x30
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:107
}
 11e:	e797      	b.n	50 <_ZN5mylib13listen_sensor16read_temperature17he67c795f5d8b5e70E+0x50>

Disassembly of section .text._ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE:

00000000 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE>:
_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:112

///  Get the temperature value, raw or computed.  `sensor_data` contains the raw or computed temperature. 
///  `sensor_type` indicates whether `sensor_data` contains raw or computed temperature.  We return 
///  the raw or computed temperature, as well as the key and value type.
fn get_temperature(sensor_data: *const CVoid, sensor_type: SensorType) -> SensorValue {
   0:	b510      	push	{r4, lr}
   2:	b096      	sub	sp, #88	; 0x58
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	9105      	str	r1, [sp, #20]
   c:	9307      	str	r3, [sp, #28]
   e:	9206      	str	r2, [sp, #24]
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:114
    let mut return_value = SensorValue {
        key: b"\0".as_ptr(),
  10:	f240 0100 	movw	r1, #0
  14:	f2c0 0100 	movt	r1, #0
  18:	2201      	movs	r2, #1
  1a:	9004      	str	r0, [sp, #16]
  1c:	4608      	mov	r0, r1
  1e:	4611      	mov	r1, r2
  20:	f8cd c00c 	str.w	ip, [sp, #12]
  24:	f8cd e008 	str.w	lr, [sp, #8]
  28:	9401      	str	r4, [sp, #4]
  2a:	f7ff fffe 	bl	0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6e6820e87d479c61E>
  2e:	9000      	str	r0, [sp, #0]
  30:	e7ff      	b.n	32 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0x32>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:113
    let mut return_value = SensorValue {
  32:	9800      	ldr	r0, [sp, #0]
  34:	9009      	str	r0, [sp, #36]	; 0x24
  36:	2100      	movs	r1, #0
  38:	910a      	str	r1, [sp, #40]	; 0x28
  3a:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
  3e:	910c      	str	r1, [sp, #48]	; 0x30
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:122
        float_val: 0.0,
    };
    unsafe {
        //assert!(sensor_data);
        match sensor_type {                                //  Is this raw or computed temperature?
            SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
  40:	9906      	ldr	r1, [sp, #24]
  42:	9a07      	ldr	r2, [sp, #28]
  44:	f081 6180 	eor.w	r1, r1, #67108864	; 0x4000000
  48:	4311      	orrs	r1, r2
  4a:	2900      	cmp	r1, #0
  4c:	d138      	bne.n	c0 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xc0>
  4e:	e7ff      	b.n	50 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0x50>
  50:	2000      	movs	r0, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:124
                //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
                let mut rawtempdata = SensorTempRawData {
  52:	900d      	str	r0, [sp, #52]	; 0x34
  54:	f88d 0038 	strb.w	r0, [sp, #56]	; 0x38
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:128
                    strd_temp_raw: 0,
                    strd_temp_raw_is_valid: 0,
                };
                let rc = get_temp_raw_data(sensor_data, &mut rawtempdata);
  58:	9805      	ldr	r0, [sp, #20]
  5a:	a90d      	add	r1, sp, #52	; 0x34
  5c:	f7ff fffe 	bl	0 <get_temp_raw_data>
  60:	900f      	str	r0, [sp, #60]	; 0x3c
  62:	e7ff      	b.n	64 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0x64>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:129
                assert!(rc == 0);
  64:	980f      	ldr	r0, [sp, #60]	; 0x3c
  66:	2800      	cmp	r0, #0
  68:	d007      	beq.n	7a <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0x7a>
  6a:	e7ff      	b.n	6c <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0x6c>
  6c:	f240 0000 	movw	r0, #0
  70:	f2c0 0000 	movt	r0, #0
  74:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  78:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:132

                //  Check that the raw temperature data is valid.
                if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  7a:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
  7e:	2800      	cmp	r0, #0
  80:	d112      	bne.n	a8 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xa8>
  82:	e7ff      	b.n	84 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0x84>
  84:	9809      	ldr	r0, [sp, #36]	; 0x24
  86:	990a      	ldr	r1, [sp, #40]	; 0x28
  88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  8c:	f8dd c010 	ldr.w	ip, [sp, #16]
  90:	f8cc 300c 	str.w	r3, [ip, #12]
  94:	f8cc 2008 	str.w	r2, [ip, #8]
  98:	f8cc 1004 	str.w	r1, [ip, #4]
  9c:	f8cc 0000 	str.w	r0, [ip]
  a0:	e001      	b.n	a6 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xa6>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:168
        //  Return the key and value type for raw or computed temperature, as defined in temp_stm32.h.
        return_value.key = TEMP_SENSOR_KEY;
        return_value.val_type = TEMP_SENSOR_VALUE_TYPE;
    };
    return_value
}
  a2:	b016      	add	sp, #88	; 0x58
  a4:	bd10      	pop	{r4, pc}
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:132
                if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  a6:	e7fc      	b.n	a2 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xa2>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:135
                return_value.int_val = rawtempdata.strd_temp_raw as u16;  //  Raw Temperature in integer (0 to 4095)
  a8:	980d      	ldr	r0, [sp, #52]	; 0x34
  aa:	f8ad 002c 	strh.w	r0, [sp, #44]	; 0x2c
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:136
                console_print(b"TMP listener got rawtmp \n");  // return_value->int_val);
  ae:	f240 0000 	movw	r0, #0
  b2:	f2c0 0000 	movt	r0, #0
  b6:	2119      	movs	r1, #25
  b8:	f7ff fffe 	bl	0 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>
  bc:	e7ff      	b.n	be <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xbe>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:121
        match sensor_type {                                //  Is this raw or computed temperature?
  be:	e02f      	b.n	120 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0x120>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:138
            SENSOR_TYPE_AMBIENT_TEMPERATURE => {      //  If this is computed temperature...
  c0:	9806      	ldr	r0, [sp, #24]
  c2:	9907      	ldr	r1, [sp, #28]
  c4:	9111      	str	r1, [sp, #68]	; 0x44
  c6:	9010      	str	r0, [sp, #64]	; 0x40
  c8:	2000      	movs	r0, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:140
                let mut tempdata = SensorTempData {
  ca:	9013      	str	r0, [sp, #76]	; 0x4c
  cc:	f88d 0050 	strb.w	r0, [sp, #80]	; 0x50
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:144
                let rc = get_temp_data(sensor_data, &mut tempdata);
  d0:	9805      	ldr	r0, [sp, #20]
  d2:	a913      	add	r1, sp, #76	; 0x4c
  d4:	f7ff fffe 	bl	0 <get_temp_data>
  d8:	9015      	str	r0, [sp, #84]	; 0x54
  da:	e7ff      	b.n	dc <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xdc>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:145
                assert!(rc == 0);
  dc:	9815      	ldr	r0, [sp, #84]	; 0x54
  de:	2800      	cmp	r0, #0
  e0:	d007      	beq.n	f2 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xf2>
  e2:	e7ff      	b.n	e4 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xe4>
  e4:	f240 0000 	movw	r0, #0
  e8:	f2c0 0000 	movt	r0, #0
  ec:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  f0:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:148
                if tempdata.std_temp_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  f2:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
  f6:	2800      	cmp	r0, #0
  f8:	d10f      	bne.n	11a <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0x11a>
  fa:	e7ff      	b.n	fc <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xfc>
  fc:	9809      	ldr	r0, [sp, #36]	; 0x24
  fe:	990a      	ldr	r1, [sp, #40]	; 0x28
 100:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 102:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 104:	f8dd c010 	ldr.w	ip, [sp, #16]
 108:	f8cc 300c 	str.w	r3, [ip, #12]
 10c:	f8cc 2008 	str.w	r2, [ip, #8]
 110:	f8cc 1004 	str.w	r1, [ip, #4]
 114:	f8cc 0000 	str.w	r0, [ip]
 118:	e7c5      	b.n	a6 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xa6>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:151
                return_value.float_val = tempdata.std_temp;  //  Temperature in floating point.
 11a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 11c:	900c      	str	r0, [sp, #48]	; 0x30
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:121
        match sensor_type {                                //  Is this raw or computed temperature?
 11e:	e7ff      	b.n	120 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0x120>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:164
        return_value.key = TEMP_SENSOR_KEY;
 120:	f240 0000 	movw	r0, #0
 124:	f2c0 0000 	movt	r0, #0
 128:	9009      	str	r0, [sp, #36]	; 0x24
 12a:	2001      	movs	r0, #1
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:165
        return_value.val_type = TEMP_SENSOR_VALUE_TYPE;
 12c:	900a      	str	r0, [sp, #40]	; 0x28
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:167
    return_value
 12e:	9809      	ldr	r0, [sp, #36]	; 0x24
 130:	990a      	ldr	r1, [sp, #40]	; 0x28
 132:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 134:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 136:	f8dd c010 	ldr.w	ip, [sp, #16]
 13a:	f8cc 300c 	str.w	r3, [ip, #12]
 13e:	f8cc 2008 	str.w	r2, [ip, #8]
 142:	f8cc 1004 	str.w	r1, [ip, #4]
 146:	f8cc 0000 	str.w	r0, [ip]
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:168
}
 14a:	e7aa      	b.n	a2 <_ZN5mylib13listen_sensor15get_temperature17h7483b06df62b9f7eE+0xa2>

mylib-ac95891f38e7979c.4497fvddxy6cb2a7.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 4497fvddxy6cb2a7
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000cb l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000d7 l       .debug_str	00000000 
000000e1 l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ee l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
0000017d l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E	00000000 .text._ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E
00000000 l    d  .text._ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17hca80eebebc99ccd9E	00000000 .text._ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17hca80eebebc99ccd9E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E	0000003c .hidden _ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E
00000000 g     F .text._ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17hca80eebebc99ccd9E	00000014 .hidden _ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17hca80eebebc99ccd9E
00000000         *UND*	00000000 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h8c76a39fea4234d0E



Disassembly of section .text._ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E:

00000000 <_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E>:
_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/str/mod.rs:2070
   0:	b580      	push	{r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9006      	str	r0, [sp, #24]
   a:	9107      	str	r1, [sp, #28]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/str/mod.rs:2071
   c:	9806      	ldr	r0, [sp, #24]
   e:	9907      	ldr	r1, [sp, #28]
  10:	9008      	str	r0, [sp, #32]
  12:	9109      	str	r1, [sp, #36]	; 0x24
_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hbca31947ef6ad219E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/str/mod.rs:2153
  14:	9808      	ldr	r0, [sp, #32]
  16:	9909      	ldr	r1, [sp, #36]	; 0x24
  18:	900a      	str	r0, [sp, #40]	; 0x28
  1a:	910b      	str	r1, [sp, #44]	; 0x2c
  1c:	980a      	ldr	r0, [sp, #40]	; 0x28
  1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/str/mod.rs:2071
  20:	9205      	str	r2, [sp, #20]
  22:	9304      	str	r3, [sp, #16]
  24:	9003      	str	r0, [sp, #12]
  26:	9102      	str	r1, [sp, #8]
  28:	e7ff      	b.n	2a <_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E+0x2a>
  2a:	9803      	ldr	r0, [sp, #12]
  2c:	9902      	ldr	r1, [sp, #8]
  2e:	f7ff fffe 	bl	0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h8c76a39fea4234d0E>
  32:	9001      	str	r0, [sp, #4]
  34:	e7ff      	b.n	36 <_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha2e0db4a9f502071E+0x36>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/str/mod.rs:2072
  36:	9801      	ldr	r0, [sp, #4]
  38:	b00c      	add	sp, #48	; 0x30
  3a:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17hca80eebebc99ccd9E:

00000000 <_ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17hca80eebebc99ccd9E>:
_ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17hca80eebebc99ccd9E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/str/mod.rs:2217
   0:	b084      	sub	sp, #16
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9002      	str	r0, [sp, #8]
   8:	9103      	str	r1, [sp, #12]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/str/mod.rs:2218
   a:	9802      	ldr	r0, [sp, #8]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/str/mod.rs:2219
   c:	9201      	str	r2, [sp, #4]
   e:	9300      	str	r3, [sp, #0]
  10:	b004      	add	sp, #16
  12:	4770      	bx	lr

mylib-ac95891f38e7979c.4fs43327d33gbryi.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 4fs43327d33gbryi
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
0000007b l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
0000008c l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
00000093 l       .debug_str	00000000 
00000096 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000a1 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000be l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000132 l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
0000014e l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015b l       .debug_str	00000000 
00000160 l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
00000168 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
00000171 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
00000189 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
00000195 l       .debug_str	00000000 
0000019d l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001cf l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001dc l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001e6 l       .debug_str	00000000 
000001ec l       .debug_str	00000000 
000001ef l       .debug_str	00000000 
000001fe l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
00000209 l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
0000021e l       .debug_str	00000000 
00000237 l       .debug_str	00000000 
0000023c l       .debug_str	00000000 
0000024d l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
000002b5 l       .debug_str	00000000 
000002c0 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e1 l       .debug_str	00000000 
000002e9 l       .debug_str	00000000 
00000300 l       .debug_str	00000000 
00000324 l       .debug_str	00000000 
00000340 l       .debug_str	00000000 
00000345 l       .debug_str	00000000 
0000034e l       .debug_str	00000000 
00000355 l       .debug_str	00000000 
0000036e l       .debug_str	00000000 
00000378 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE	00000000 .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h33b3bbdbc74b88baE
00000000 g     F .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE	00000072 .hidden _ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE
00000000         *UND*	00000000 _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hb2119167a92723afE
00000000         *UND*	00000000 _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hc44988ae29d24532E
00000000         *UND*	00000000 _ZN4core3fmt9Formatter15debug_lower_hex17h6ead2f28bb05b574E
00000000         *UND*	00000000 _ZN4core3fmt9Formatter15debug_upper_hex17hd6d96e6aa5cb78d8E



Disassembly of section .text._ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE:

00000000 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE>:
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:146
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9005      	str	r0, [sp, #20]
   a:	9106      	str	r1, [sp, #24]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
   c:	9806      	ldr	r0, [sp, #24]
   e:	9204      	str	r2, [sp, #16]
  10:	9303      	str	r3, [sp, #12]
  12:	f7ff fffe 	bl	0 <_ZN4core3fmt9Formatter15debug_lower_hex17h6ead2f28bb05b574E>
  16:	9002      	str	r0, [sp, #8]
  18:	e7ff      	b.n	1a <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x1a>
  1a:	9802      	ldr	r0, [sp, #8]
  1c:	07c1      	lsls	r1, r0, #31
  1e:	2900      	cmp	r1, #0
  20:	d008      	beq.n	34 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x34>
  22:	e7ff      	b.n	24 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x24>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:148
  24:	9805      	ldr	r0, [sp, #20]
  26:	9906      	ldr	r1, [sp, #24]
  28:	f7ff fffe 	bl	0 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hb2119167a92723afE>
  2c:	f88d 001f 	strb.w	r0, [sp, #31]
  30:	e7ff      	b.n	32 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x32>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
  32:	e01a      	b.n	6a <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x6a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  34:	9806      	ldr	r0, [sp, #24]
  36:	f7ff fffe 	bl	0 <_ZN4core3fmt9Formatter15debug_upper_hex17hd6d96e6aa5cb78d8E>
  3a:	9001      	str	r0, [sp, #4]
  3c:	e7ff      	b.n	3e <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x3e>
  3e:	9801      	ldr	r0, [sp, #4]
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d008      	beq.n	58 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x58>
  46:	e7ff      	b.n	48 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x48>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:150
  48:	9805      	ldr	r0, [sp, #20]
  4a:	9906      	ldr	r1, [sp, #24]
  4c:	f7ff fffe 	bl	0 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hc44988ae29d24532E>
  50:	f88d 001f 	strb.w	r0, [sp, #31]
  54:	e7ff      	b.n	56 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x56>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  56:	e007      	b.n	68 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x68>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:152
  58:	9805      	ldr	r0, [sp, #20]
  5a:	9906      	ldr	r1, [sp, #24]
  5c:	f7ff fffe 	bl	0 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h33b3bbdbc74b88baE>
  60:	f88d 001f 	strb.w	r0, [sp, #31]
  64:	e7ff      	b.n	66 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x66>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  66:	e7ff      	b.n	68 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x68>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
  68:	e7ff      	b.n	6a <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE+0x6a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:154
  6a:	f89d 001f 	ldrb.w	r0, [sp, #31]
  6e:	b008      	add	sp, #32
  70:	bd80      	pop	{r7, pc}

mylib-ac95891f38e7979c.4gfa6aki8v0cc60q.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 4gfa6aki8v0cc60q
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000075 l       .debug_str	00000000 
0000007a l       .debug_str	00000000 
000000ac l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000be l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000ca l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000db l       .debug_str	00000000 
000000e1 l       .debug_str	00000000 
000000e7 l       .debug_str	00000000 
00000000 l    d  .text._ZN5mylib4base13console_print17h47a7ec4e529b3d82E	00000000 .text._ZN5mylib4base13console_print17h47a7ec4e529b3d82E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h8c76a39fea4234d0E
00000000         *UND*	00000000 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6e6820e87d479c61E
00000000 g     F .text._ZN5mylib4base13console_print17h47a7ec4e529b3d82E	0000003c .hidden _ZN5mylib4base13console_print17h47a7ec4e529b3d82E
00000000         *UND*	00000000 console_buffer
00000000         *UND*	00000000 console_flush



Disassembly of section .text._ZN5mylib4base13console_print17h47a7ec4e529b3d82E:

00000000 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E>:
_ZN5mylib4base13console_print17h47a7ec4e529b3d82E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:7

use cty::*;            //  Import string utilities from cty library: https://crates.io/crates/cty
use crate::sensor::*;  //  Import sensor.rs for Mynewt Sensor API

///  Display message `msg` on the Arm Semihosting console (via OpenOCD).
pub fn console_print(msg: &[u8]) {
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9003      	str	r0, [sp, #12]
   a:	9104      	str	r1, [sp, #16]
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:8
    let len = msg.len();
   c:	9803      	ldr	r0, [sp, #12]
   e:	9904      	ldr	r1, [sp, #16]
  10:	9202      	str	r2, [sp, #8]
  12:	9301      	str	r3, [sp, #4]
  14:	f7ff fffe 	bl	0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h8c76a39fea4234d0E>
  18:	9005      	str	r0, [sp, #20]
  1a:	e7ff      	b.n	1c <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E+0x1c>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
    unsafe {
        //  Call the Semihosting Console API, which is unsafe.
        console_buffer(msg.as_ptr(), len as u32);
  1c:	9803      	ldr	r0, [sp, #12]
  1e:	9904      	ldr	r1, [sp, #16]
  20:	f7ff fffe 	bl	0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6e6820e87d479c61E>
  24:	9000      	str	r0, [sp, #0]
  26:	e7ff      	b.n	28 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E+0x28>
  28:	9905      	ldr	r1, [sp, #20]
  2a:	9800      	ldr	r0, [sp, #0]
  2c:	f7ff fffe 	bl	0 <console_buffer>
  30:	e7ff      	b.n	2 <console_flush+0x2>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  32:	f7ff fffe 	bl	0 <console_flush>
  36:	e7ff      	b.n	38 <_ZN5mylib4base13console_print17h47a7ec4e529b3d82E+0x38>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:14
    }
}
  38:	b006      	add	sp, #24
  3a:	bd80      	pop	{r7, pc}

mylib-ac95891f38e7979c.541s4ibcgernpkgl.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 541s4ibcgernpkgl
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
0000007b l       .debug_str	00000000 
0000007f l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
00000086 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
0000008b l       .debug_str	00000000 
0000008f l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
00000095 l       .debug_str	00000000 
000000a5 l       .debug_str	00000000 
000000d8 l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
00000168 l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
0000017e l       .debug_str	00000000 
00000183 l       .debug_str	00000000 
00000188 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.f53c71e115d2729da6dd16a088e85c6e.2	00000010 .Lanon.f53c71e115d2729da6dd16a088e85c6e.2
00000000 l     O .rodata..Lanon.f53c71e115d2729da6dd16a088e85c6e.4	00000010 .Lanon.f53c71e115d2729da6dd16a088e85c6e.4
00000000 l    d  .text._ZN4core6result13unwrap_failed17h07a2116b0728a952E	00000000 .text._ZN4core6result13unwrap_failed17h07a2116b0728a952E
00000000 l    d  .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E	00000000 .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E
00000000 l    d  .rodata..Lanon.f53c71e115d2729da6dd16a088e85c6e.0	00000000 .rodata..Lanon.f53c71e115d2729da6dd16a088e85c6e.0
00000000 l    d  .rodata..Lanon.f53c71e115d2729da6dd16a088e85c6e.1	00000000 .rodata..Lanon.f53c71e115d2729da6dd16a088e85c6e.1
00000000 l    d  .rodata..Lanon.f53c71e115d2729da6dd16a088e85c6e.3	00000000 .rodata..Lanon.f53c71e115d2729da6dd16a088e85c6e.3
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h3783dcd2d2b56f30E
00000000         *UND*	00000000 _ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE
00000000         *UND*	00000000 _ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E
00000000         *UND*	00000000 .hidden _ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hbbb46498fb3ead3eE
00000000         *UND*	00000000 .hidden _ZN4core3fmt9Arguments6new_v117h0330c13173882f69E
00000000 g     F .text._ZN4core6result13unwrap_failed17h07a2116b0728a952E	0000008e _ZN4core6result13unwrap_failed17h07a2116b0728a952E
00000000 g     F .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E	00000052 _ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E
00000000         *UND*	00000000 _ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E



Disassembly of section .text._ZN4core6result13unwrap_failed17h07a2116b0728a952E:

00000000 <_ZN4core6result13unwrap_failed17h07a2116b0728a952E>:
_ZN4core6result13unwrap_failed17h07a2116b0728a952E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b09a      	sub	sp, #104	; 0x68
   2:	4613      	mov	r3, r2
   4:	468c      	mov	ip, r1
   6:	4686      	mov	lr, r0
   8:	9009      	str	r0, [sp, #36]	; 0x24
   a:	910a      	str	r1, [sp, #40]	; 0x28
   c:	920b      	str	r2, [sp, #44]	; 0x2c
   e:	a809      	add	r0, sp, #36	; 0x24
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
  10:	9016      	str	r0, [sp, #88]	; 0x58
  12:	a80b      	add	r0, sp, #44	; 0x2c
  14:	9017      	str	r0, [sp, #92]	; 0x5c
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:1
//!  Sensor app that reads sensor data from a temperature sensor and sends the sensor data to a CoAP server or Collector Node.
  16:	9816      	ldr	r0, [sp, #88]	; 0x58
  18:	9018      	str	r0, [sp, #96]	; 0x60
  1a:	9817      	ldr	r0, [sp, #92]	; 0x5c
  1c:	9019      	str	r0, [sp, #100]	; 0x64
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
  1e:	9818      	ldr	r0, [sp, #96]	; 0x60
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  20:	f240 0100 	movw	r1, #0
  24:	f2c0 0100 	movt	r1, #0
  28:	9308      	str	r3, [sp, #32]
  2a:	f8cd c01c 	str.w	ip, [sp, #28]
  2e:	f8cd e018 	str.w	lr, [sp, #24]
  32:	f7ff fffe 	bl	0 <_ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE>
  36:	9005      	str	r0, [sp, #20]
  38:	9104      	str	r1, [sp, #16]
  3a:	e7ff      	b.n	3c <_ZN4core6result13unwrap_failed17h07a2116b0728a952E+0x3c>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
  3c:	9819      	ldr	r0, [sp, #100]	; 0x64
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
  42:	f2c0 0100 	movt	r1, #0
  46:	f7ff fffe 	bl	0 <_ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E>
  4a:	9003      	str	r0, [sp, #12]
  4c:	9102      	str	r1, [sp, #8]
  4e:	e7ff      	b.n	50 <_ZN4core6result13unwrap_failed17h07a2116b0728a952E+0x50>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
  50:	9805      	ldr	r0, [sp, #20]
  52:	9012      	str	r0, [sp, #72]	; 0x48
  54:	9904      	ldr	r1, [sp, #16]
  56:	9113      	str	r1, [sp, #76]	; 0x4c
  58:	9a03      	ldr	r2, [sp, #12]
  5a:	9214      	str	r2, [sp, #80]	; 0x50
  5c:	9b02      	ldr	r3, [sp, #8]
  5e:	9315      	str	r3, [sp, #84]	; 0x54
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  60:	46ec      	mov	ip, sp
  62:	f04f 0e02 	mov.w	lr, #2
  66:	f8cc e000 	str.w	lr, [ip]
  6a:	f240 0100 	movw	r1, #0
  6e:	f2c0 0100 	movt	r1, #0
  72:	a80c      	add	r0, sp, #48	; 0x30
  74:	ab12      	add	r3, sp, #72	; 0x48
  76:	4672      	mov	r2, lr
  78:	f7ff fffe 	bl	0 <_ZN4core3fmt9Arguments6new_v117h0330c13173882f69E>
  7c:	e7ff      	b.n	2 <_ZN4core6result13unwrap_failed17h07a2116b0728a952E+0x2>
  7e:	f240 0100 	movw	r1, #0
  82:	f2c0 0100 	movt	r1, #0
  86:	a80c      	add	r0, sp, #48	; 0x30
  88:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
  8c:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E:

00000000 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E>:
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:824
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	460c      	mov	r4, r1
   a:	4605      	mov	r5, r0
   c:	9006      	str	r0, [sp, #24]
   e:	9107      	str	r1, [sp, #28]
  10:	9208      	str	r2, [sp, #32]
  12:	9309      	str	r3, [sp, #36]	; 0x24
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  14:	9806      	ldr	r0, [sp, #24]
  16:	2800      	cmp	r0, #0
  18:	f8cd c014 	str.w	ip, [sp, #20]
  1c:	f8cd e010 	str.w	lr, [sp, #16]
  20:	9403      	str	r4, [sp, #12]
  22:	9502      	str	r5, [sp, #8]
  24:	9001      	str	r0, [sp, #4]
  26:	d005      	beq.n	34 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E+0x34>
  28:	e7ff      	b.n	2a <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E+0x2a>
  2a:	9801      	ldr	r0, [sp, #4]
  2c:	2801      	cmp	r0, #1
  2e:	d005      	beq.n	3c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E+0x3c>
  30:	e7ff      	b.n	32 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E+0x32>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:829
  32:	defe      	udf	#254	; 0xfe
  34:	9806      	ldr	r0, [sp, #24]
  36:	2800      	cmp	r0, #0
  38:	d008      	beq.n	4c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E+0x4c>
  3a:	e009      	b.n	50 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E+0x50>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  3c:	9807      	ldr	r0, [sp, #28]
  3e:	900b      	str	r0, [sp, #44]	; 0x2c
  40:	9808      	ldr	r0, [sp, #32]
  42:	9909      	ldr	r1, [sp, #36]	; 0x24
  44:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  46:	f7ff fffe 	bl	0 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E>
  4a:	defe      	udf	#254	; 0xfe
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:829
  4c:	b00c      	add	sp, #48	; 0x30
  4e:	bdb0      	pop	{r4, r5, r7, pc}
  50:	e7fc      	b.n	4c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf656a3fd5c2cb345E+0x4c>

mylib-ac95891f38e7979c.gf4ix36rm4u0qfa.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 gf4ix36rm4u0qfa
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
0000007b l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
0000008c l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
00000093 l       .debug_str	00000000 
00000096 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000a1 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000cf l       .debug_str	00000000 
000000d2 l       .debug_str	00000000 
000000e1 l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ec l       .debug_str	00000000 
000000f5 l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000132 l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
00000183 l       .debug_str	00000000 
00000188 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
00000193 l       .debug_str	00000000 
00000199 l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001a5 l       .debug_str	00000000 
000001aa l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001bc l       .debug_str	00000000 
000001c6 l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001dc l       .debug_str	00000000 
000001e2 l       .debug_str	00000000 
000001e6 l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
00000207 l       .debug_str	00000000 
0000020f l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
0000024a l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
0000026b l       .debug_str	00000000 
00000274 l       .debug_str	00000000 
0000027b l       .debug_str	00000000 
00000294 l       .debug_str	00000000 
0000029e l       .debug_str	00000000 
000002b8 l       .debug_str	00000000 
00000316 l       .debug_str	00000000 
00000321 l       .debug_str	00000000 
00000324 l       .debug_str	00000000 
0000036e l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
00000381 l       .debug_str	00000000 
00000386 l       .debug_str	00000000 
000003b7 l       .debug_str	00000000 
000003c1 l       .debug_str	00000000 
000003c5 l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
000003ff l       .debug_str	00000000 
00000404 l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
0000040c l       .debug_str	00000000 
0000040e l       .debug_str	00000000 
00000461 l       .debug_str	00000000 
00000466 l       .debug_str	00000000 
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h3783dcd2d2b56f30E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h3783dcd2d2b56f30E
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE	00000000 .text._ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE
00000000 l    d  .text._ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E	00000000 .text._ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE
00000000 g     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h3783dcd2d2b56f30E	00000034 _ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h3783dcd2d2b56f30E
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE	00000032 _ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE
00000000 g     F .text._ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E	00000032 _ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h3783dcd2d2b56f30E:

00000000 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h3783dcd2d2b56f30E>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h3783dcd2d2b56f30E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	b580      	push	{r7, lr}
   2:	b086      	sub	sp, #24
   4:	460a      	mov	r2, r1
   6:	4603      	mov	r3, r0
   8:	9004      	str	r0, [sp, #16]
   a:	9105      	str	r1, [sp, #20]
   c:	9804      	ldr	r0, [sp, #16]
   e:	6801      	ldr	r1, [r0, #0]
  10:	6840      	ldr	r0, [r0, #4]
  12:	f8dd c014 	ldr.w	ip, [sp, #20]
  16:	9003      	str	r0, [sp, #12]
  18:	4608      	mov	r0, r1
  1a:	9903      	ldr	r1, [sp, #12]
  1c:	9202      	str	r2, [sp, #8]
  1e:	4662      	mov	r2, ip
  20:	9301      	str	r3, [sp, #4]
  22:	f7ff fffe 	bl	0 <_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE>
  26:	9000      	str	r0, [sp, #0]
  28:	e7ff      	b.n	2a <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h3783dcd2d2b56f30E+0x2a>
  2a:	9800      	ldr	r0, [sp, #0]
  2c:	f000 0001 	and.w	r0, r0, #1
  30:	b006      	add	sp, #24
  32:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE:

00000000 <_ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE>:
_ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <_ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE+0x18>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <_ZN4core3fmt10ArgumentV13new17h05d4954a4919dcdbE+0x22>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr

Disassembly of section .text._ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E:

00000000 <_ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E>:
_ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:278
   0:	b08a      	sub	sp, #40	; 0x28
   2:	460a      	mov	r2, r1
   4:	4603      	mov	r3, r0
   6:	9004      	str	r0, [sp, #16]
   8:	9105      	str	r1, [sp, #20]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:282
   a:	9805      	ldr	r0, [sp, #20]
   c:	9008      	str	r0, [sp, #32]
   e:	9808      	ldr	r0, [sp, #32]
  10:	9203      	str	r2, [sp, #12]
  12:	9302      	str	r3, [sp, #8]
  14:	9001      	str	r0, [sp, #4]
  16:	e7ff      	b.n	18 <_ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E+0x18>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:283
  18:	9804      	ldr	r0, [sp, #16]
  1a:	9009      	str	r0, [sp, #36]	; 0x24
  1c:	9809      	ldr	r0, [sp, #36]	; 0x24
  1e:	9000      	str	r0, [sp, #0]
  20:	e7ff      	b.n	22 <_ZN4core3fmt10ArgumentV13new17h47ed94b94e242b01E+0x22>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:281
  22:	9800      	ldr	r0, [sp, #0]
  24:	9006      	str	r0, [sp, #24]
  26:	9901      	ldr	r1, [sp, #4]
  28:	9107      	str	r1, [sp, #28]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:286
  2a:	9806      	ldr	r0, [sp, #24]
  2c:	9907      	ldr	r1, [sp, #28]
  2e:	b00a      	add	sp, #40	; 0x28
  30:	4770      	bx	lr
arm-none-eabi-objdump: rust.metadata.bin: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.1b7do7e5i4j0exrn.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.1p0bleeal0c8ffkh.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.1r58q2o71511853b.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.1sy4lk16z0utqsak.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.29x7oqvwgrpr4c8r.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.4497fvddxy6cb2a7.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.4fs43327d33gbryi.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.4gfa6aki8v0cc60q.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.541s4ibcgernpkgl.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: mylib-ac95891f38e7979c.gf4ix36rm4u0qfa.rcgu.bc.z: file format not recognized
