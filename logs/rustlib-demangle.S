In archive rustlib.a:

aligned-cd155c2da953e126.aligned.293idy3i-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 aligned.293idy3i-cgu.0



app-9520d02fe986fe70.app.cpk8ab4b-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.cpk8ab4b-cgu.0
0000109c l       .debug_str	00000000 
00003104 l       .debug_str	00000000 
000030f7 l       .debug_str	00000000 
00003198 l       .debug_str	00000000 
000030f2 l       .debug_str	00000000 
000030ec l       .debug_str	00000000 
000030ea l       .debug_str	00000000 
000030e4 l       .debug_str	00000000 
00003180 l       .debug_str	00000000 
000030de l       .debug_str	00000000 
000030cc l       .debug_str	00000000 
000030c7 l       .debug_str	00000000 
000030b4 l       .debug_str	00000000 
00003078 l       .debug_str	00000000 
00003076 l       .debug_str	00000000 
0000304b l       .debug_str	00000000 
00003018 l       .debug_str	00000000 
0000300f l       .debug_str	00000000 
00002fc5 l       .debug_str	00000000 
00002fc2 l       .debug_str	00000000 
00002fbd l       .debug_str	00000000 
00002f93 l       .debug_str	00000000 
00002f8f l       .debug_str	00000000 
00002f86 l       .debug_str	00000000 
00002f3f l       .debug_str	00000000 
00002eff l       .debug_str	00000000 
00002eb7 l       .debug_str	00000000 
00003176 l       .debug_str	00000000 
00002e94 l       .debug_str	00000000 
00002e8a l       .debug_str	00000000 
00002e72 l       .debug_str	00000000 
00002e4b l       .debug_str	00000000 
00002e41 l       .debug_str	00000000 
00002e36 l       .debug_str	00000000 
00002e2d l       .debug_str	00000000 
00002e24 l       .debug_str	00000000 
0000316d l       .debug_str	00000000 
00002e1a l       .debug_str	00000000 
00002e18 l       .debug_str	00000000 
00002e16 l       .debug_str	00000000 
00002e12 l       .debug_str	00000000 
00002deb l       .debug_str	00000000 
00003169 l       .debug_str	00000000 
00003164 l       .debug_str	00000000 
0000315f l       .debug_str	00000000 
00003156 l       .debug_str	00000000 
00003138 l       .debug_str	00000000 
00003122 l       .debug_str	00000000 
0000311a l       .debug_str	00000000 
00003115 l       .debug_str	00000000 
00003111 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000ac l       .debug_str	00000000 
000000b6 l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000111 l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
0000012e l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
0000014d l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
0000017c l       .debug_str	00000000 
00000187 l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
0000019a l       .debug_str	00000000 
000001a5 l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001d2 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001f9 l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
00000210 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000220 l       .debug_str	00000000 
0000022b l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
0000023d l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
0000024d l       .debug_str	00000000 
00000252 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
0000026d l       .debug_str	00000000 
00000271 l       .debug_str	00000000 
00000276 l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
00000284 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
0000028b l       .debug_str	00000000 
00000294 l       .debug_str	00000000 
0000029b l       .debug_str	00000000 
000002a0 l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002ab l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002bb l       .debug_str	00000000 
000002be l       .debug_str	00000000 
000002c4 l       .debug_str	00000000 
000002ce l       .debug_str	00000000 
000002d6 l       .debug_str	00000000 
000002dc l       .debug_str	00000000 
000002e2 l       .debug_str	00000000 
000002ed l       .debug_str	00000000 
000002f6 l       .debug_str	00000000 
00000319 l       .debug_str	00000000 
00000338 l       .debug_str	00000000 
0000033a l       .debug_str	00000000 
0000033f l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
0000036b l       .debug_str	00000000 
00000371 l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
0000037a l       .debug_str	00000000 
00000389 l       .debug_str	00000000 
00000390 l       .debug_str	00000000 
00000394 l       .debug_str	00000000 
0000039d l       .debug_str	00000000 
000003a5 l       .debug_str	00000000 
000003ad l       .debug_str	00000000 
000003b4 l       .debug_str	00000000 
000003c8 l       .debug_str	00000000 
000003d4 l       .debug_str	00000000 
000003e0 l       .debug_str	00000000 
000003f9 l       .debug_str	00000000 
000003fe l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000419 l       .debug_str	00000000 
00000427 l       .debug_str	00000000 
0000042b l       .debug_str	00000000 
00000436 l       .debug_str	00000000 
0000043d l       .debug_str	00000000 
00000443 l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
0000044b l       .debug_str	00000000 
00000453 l       .debug_str	00000000 
0000046a l       .debug_str	00000000 
0000048e l       .debug_str	00000000 
000004aa l       .debug_str	00000000 
000004b4 l       .debug_str	00000000 
000004ce l       .debug_str	00000000 
0000052c l       .debug_str	00000000 
00000537 l       .debug_str	00000000 
00000554 l       .debug_str	00000000 
0000056d l       .debug_str	00000000 
00000577 l       .debug_str	00000000 
000005a9 l       .debug_str	00000000 
000005b0 l       .debug_str	00000000 
000005e9 l       .debug_str	00000000 
000005f9 l       .debug_str	00000000 
000005fc l       .debug_str	00000000 
00000603 l       .debug_str	00000000 
00000607 l       .debug_str	00000000 
0000060b l       .debug_str	00000000 
00000610 l       .debug_str	00000000 
00000616 l       .debug_str	00000000 
0000061a l       .debug_str	00000000 
0000062a l       .debug_str	00000000 
00000636 l       .debug_str	00000000 
00000642 l       .debug_str	00000000 
00000659 l       .debug_str	00000000 
00000665 l       .debug_str	00000000 
00000669 l       .debug_str	00000000 
00000676 l       .debug_str	00000000 
0000069a l       .debug_str	00000000 
000006a6 l       .debug_str	00000000 
000006b4 l       .debug_str	00000000 
000006cb l       .debug_str	00000000 
000006e0 l       .debug_str	00000000 
000006e3 l       .debug_str	00000000 
00000703 l       .debug_str	00000000 
0000070c l       .debug_str	00000000 
00000715 l       .debug_str	00000000 
0000071e l       .debug_str	00000000 
0000072a l       .debug_str	00000000 
00000732 l       .debug_str	00000000 
0000073a l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
00000763 l       .debug_str	00000000 
00000774 l       .debug_str	00000000 
00000780 l       .debug_str	00000000 
000007bb l       .debug_str	00000000 
000007cc l       .debug_str	00000000 
000007ce l       .debug_str	00000000 
000007f6 l       .debug_str	00000000 
00000817 l       .debug_str	00000000 
0000081c l       .debug_str	00000000 
00000824 l       .debug_str	00000000 
0000082d l       .debug_str	00000000 
00000836 l       .debug_str	00000000 
0000083d l       .debug_str	00000000 
00000843 l       .debug_str	00000000 
000008a5 l       .debug_str	00000000 
0000090f l       .debug_str	00000000 
0000091d l       .debug_str	00000000 
00000931 l       .debug_str	00000000 
00000966 l       .debug_str	00000000 
00000971 l       .debug_str	00000000 
00000977 l       .debug_str	00000000 
00000983 l       .debug_str	00000000 
000009b0 l       .debug_str	00000000 
000009b4 l       .debug_str	00000000 
000009c6 l       .debug_str	00000000 
000009d5 l       .debug_str	00000000 
000009e9 l       .debug_str	00000000 
000009f2 l       .debug_str	00000000 
000009f6 l       .debug_str	00000000 
00000a66 l       .debug_str	00000000 
00000a94 l       .debug_str	00000000 
00000abe l       .debug_str	00000000 
00000ac3 l       .debug_str	00000000 
00000b02 l       .debug_str	00000000 
00000b18 l       .debug_str	00000000 
00000b1e l       .debug_str	00000000 
00000b25 l       .debug_str	00000000 
00000b28 l       .debug_str	00000000 
00000b34 l       .debug_str	00000000 
00000b3c l       .debug_str	00000000 
00000b96 l       .debug_str	00000000 
00000bf8 l       .debug_str	00000000 
00000c03 l       .debug_str	00000000 
00000c4a l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000ce0 l       .debug_str	00000000 
00000d25 l       .debug_str	00000000 
00000d2e l       .debug_str	00000000 
00000d3e l       .debug_str	00000000 
00000d46 l       .debug_str	00000000 
00000d9b l       .debug_str	00000000 
00000df8 l       .debug_str	00000000 
00000e04 l       .debug_str	00000000 
00000e0d l       .debug_str	00000000 
00000e19 l       .debug_str	00000000 
00000e25 l       .debug_str	00000000 
00000e2e l       .debug_str	00000000 
00000e36 l       .debug_str	00000000 
00000e3e l       .debug_str	00000000 
00000e48 l       .debug_str	00000000 
00000e5d l       .debug_str	00000000 
00000e64 l       .debug_str	00000000 
00000e84 l       .debug_str	00000000 
00000e8b l       .debug_str	00000000 
00000e93 l       .debug_str	00000000 
00000e9d l       .debug_str	00000000 
00000ea8 l       .debug_str	00000000 
00000eb1 l       .debug_str	00000000 
00000ebc l       .debug_str	00000000 
00000ec8 l       .debug_str	00000000 
00000ecc l       .debug_str	00000000 
00000ed5 l       .debug_str	00000000 
00000edc l       .debug_str	00000000 
00000ee4 l       .debug_str	00000000 
00000eec l       .debug_str	00000000 
00000ef6 l       .debug_str	00000000 
00000efc l       .debug_str	00000000 
00000f03 l       .debug_str	00000000 
00000f0a l       .debug_str	00000000 
00000f37 l       .debug_str	00000000 
00000f6c l       .debug_str	00000000 
00000f72 l       .debug_str	00000000 
00000f78 l       .debug_str	00000000 
00000f87 l       .debug_str	00000000 
00000f97 l       .debug_str	00000000 
00000fa7 l       .debug_str	00000000 
00000faf l       .debug_str	00000000 
00000fd8 l       .debug_str	00000000 
00001036 l       .debug_str	00000000 
00002dab l       .debug_str	00000000 
000010a3 l       .debug_str	00000000 
000010ab l       .debug_str	00000000 
000010b4 l       .debug_str	00000000 
000010d2 l       .debug_str	00000000 
000010e2 l       .debug_str	00000000 
000010f0 l       .debug_str	00000000 
000010fb l       .debug_str	00000000 
00001108 l       .debug_str	00000000 
00001117 l       .debug_str	00000000 
0000112d l       .debug_str	00000000 
00001137 l       .debug_str	00000000 
00001140 l       .debug_str	00000000 
00001149 l       .debug_str	00000000 
0000116f l       .debug_str	00000000 
00001185 l       .debug_str	00000000 
00001190 l       .debug_str	00000000 
000011a6 l       .debug_str	00000000 
000011ae l       .debug_str	00000000 
000011cf l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000011eb l       .debug_str	00000000 
000011f3 l       .debug_str	00000000 
000011fc l       .debug_str	00000000 
00001205 l       .debug_str	00000000 
0000120e l       .debug_str	00000000 
00001216 l       .debug_str	00000000 
0000121d l       .debug_str	00000000 
00001229 l       .debug_str	00000000 
00001234 l       .debug_str	00000000 
0000123c l       .debug_str	00000000 
00001244 l       .debug_str	00000000 
000012c0 l       .debug_str	00000000 
00001344 l       .debug_str	00000000 
00001440 l       .debug_str	00000000 
00001544 l       .debug_str	00000000 
00001552 l       .debug_str	00000000 
0000155d l       .debug_str	00000000 
00001567 l       .debug_str	00000000 
00001572 l       .debug_str	00000000 
000015a0 l       .debug_str	00000000 
0000161b l       .debug_str	00000000 
0000169e l       .debug_str	00000000 
000016ac l       .debug_str	00000000 
0000170b l       .debug_str	00000000 
00001772 l       .debug_str	00000000 
00001788 l       .debug_str	00000000 
00001798 l       .debug_str	00000000 
000017a7 l       .debug_str	00000000 
000017ab l       .debug_str	00000000 
000017b1 l       .debug_str	00000000 
000017b7 l       .debug_str	00000000 
000017bd l       .debug_str	00000000 
000017cd l       .debug_str	00000000 
00001800 l       .debug_str	00000000 
00001840 l       .debug_str	00000000 
00001888 l       .debug_str	00000000 
0000188c l       .debug_str	00000000 
00001892 l       .debug_str	00000000 
00001898 l       .debug_str	00000000 
0000189e l       .debug_str	00000000 
000018b0 l       .debug_str	00000000 
000018e5 l       .debug_str	00000000 
00001927 l       .debug_str	00000000 
00001971 l       .debug_str	00000000 
00001975 l       .debug_str	00000000 
0000197b l       .debug_str	00000000 
00001981 l       .debug_str	00000000 
00001987 l       .debug_str	00000000 
00001999 l       .debug_str	00000000 
000019ce l       .debug_str	00000000 
00001a10 l       .debug_str	00000000 
00001a5a l       .debug_str	00000000 
00001a5e l       .debug_str	00000000 
00001a64 l       .debug_str	00000000 
00001a6a l       .debug_str	00000000 
00001a70 l       .debug_str	00000000 
00001a76 l       .debug_str	00000000 
00001a87 l       .debug_str	00000000 
00001abb l       .debug_str	00000000 
00001afc l       .debug_str	00000000 
00001b45 l       .debug_str	00000000 
00001b4a l       .debug_str	00000000 
00001b4f l       .debug_str	00000000 
00001b53 l       .debug_str	00000000 
00001b59 l       .debug_str	00000000 
00001b5f l       .debug_str	00000000 
00001b65 l       .debug_str	00000000 
00001b76 l       .debug_str	00000000 
00001baa l       .debug_str	00000000 
00001beb l       .debug_str	00000000 
00001c34 l       .debug_str	00000000 
00001c38 l       .debug_str	00000000 
00001c6c l       .debug_str	00000000 
00001cad l       .debug_str	00000000 
00001cf6 l       .debug_str	00000000 
00001cfb l       .debug_str	00000000 
00001cff l       .debug_str	00000000 
00001d08 l       .debug_str	00000000 
00001d0f l       .debug_str	00000000 
00001d17 l       .debug_str	00000000 
00001d29 l       .debug_str	00000000 
00001d5e l       .debug_str	00000000 
00001da0 l       .debug_str	00000000 
00001dea l       .debug_str	00000000 
00001dee l       .debug_str	00000000 
00001df4 l       .debug_str	00000000 
00001dfa l       .debug_str	00000000 
00001e00 l       .debug_str	00000000 
00001e06 l       .debug_str	00000000 
00001e0e l       .debug_str	00000000 
00001e1c l       .debug_str	00000000 
00001e2b l       .debug_str	00000000 
00001e3c l       .debug_str	00000000 
00001e47 l       .debug_str	00000000 
00001e52 l       .debug_str	00000000 
00001e5d l       .debug_str	00000000 
00001e64 l       .debug_str	00000000 
00001e87 l       .debug_str	00000000 
00001e99 l       .debug_str	00000000 
00001ece l       .debug_str	00000000 
00001f10 l       .debug_str	00000000 
00001f5a l       .debug_str	00000000 
00001f5e l       .debug_str	00000000 
00001f68 l       .debug_str	00000000 
00001f7a l       .debug_str	00000000 
00001faf l       .debug_str	00000000 
00001ff1 l       .debug_str	00000000 
0000203b l       .debug_str	00000000 
00002040 l       .debug_str	00000000 
0000204a l       .debug_str	00000000 
0000205c l       .debug_str	00000000 
00002091 l       .debug_str	00000000 
000020d3 l       .debug_str	00000000 
0000211d l       .debug_str	00000000 
00002131 l       .debug_str	00000000 
00002135 l       .debug_str	00000000 
00002143 l       .debug_str	00000000 
00002153 l       .debug_str	00000000 
0000215c l       .debug_str	00000000 
00002167 l       .debug_str	00000000 
00002176 l       .debug_str	00000000 
0000218b l       .debug_str	00000000 
000021bc l       .debug_str	00000000 
00002259 l       .debug_str	00000000 
000022fe l       .debug_str	00000000 
00002309 l       .debug_str	00000000 
00002312 l       .debug_str	00000000 
00002333 l       .debug_str	00000000 
00002346 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
000023ff l       .debug_str	00000000 
0000248a l       .debug_str	00000000 
000024a6 l       .debug_str	00000000 
000024f2 l       .debug_str	00000000 
00002546 l       .debug_str	00000000 
00002563 l       .debug_str	00000000 
00002577 l       .debug_str	00000000 
000025c3 l       .debug_str	00000000 
00002617 l       .debug_str	00000000 
0000262d l       .debug_str	00000000 
00002641 l       .debug_str	00000000 
00002688 l       .debug_str	00000000 
000026d7 l       .debug_str	00000000 
000026e0 l       .debug_str	00000000 
000026ee l       .debug_str	00000000 
0000271f l       .debug_str	00000000 
00002725 l       .debug_str	00000000 
0000272d l       .debug_str	00000000 
00002734 l       .debug_str	00000000 
0000273c l       .debug_str	00000000 
00002747 l       .debug_str	00000000 
0000274f l       .debug_str	00000000 
0000275e l       .debug_str	00000000 
00002762 l       .debug_str	00000000 
0000276d l       .debug_str	00000000 
00002779 l       .debug_str	00000000 
00002784 l       .debug_str	00000000 
00002795 l       .debug_str	00000000 
0000279b l       .debug_str	00000000 
000027a3 l       .debug_str	00000000 
000027aa l       .debug_str	00000000 
000027b4 l       .debug_str	00000000 
000027bc l       .debug_str	00000000 
000027c4 l       .debug_str	00000000 
000027e6 l       .debug_str	00000000 
000027f1 l       .debug_str	00000000 
000027fd l       .debug_str	00000000 
00002805 l       .debug_str	00000000 
0000280e l       .debug_str	00000000 
00002819 l       .debug_str	00000000 
00002820 l       .debug_str	00000000 
0000282b l       .debug_str	00000000 
00002836 l       .debug_str	00000000 
00002846 l       .debug_str	00000000 
00002850 l       .debug_str	00000000 
00002856 l       .debug_str	00000000 
00002878 l       .debug_str	00000000 
000028b0 l       .debug_str	00000000 
000028f0 l       .debug_str	00000000 
000028f7 l       .debug_str	00000000 
000028ff l       .debug_str	00000000 
00002916 l       .debug_str	00000000 
0000291f l       .debug_str	00000000 
0000292f l       .debug_str	00000000 
0000293e l       .debug_str	00000000 
00002946 l       .debug_str	00000000 
0000294d l       .debug_str	00000000 
00002955 l       .debug_str	00000000 
00002973 l       .debug_str	00000000 
00002983 l       .debug_str	00000000 
000029b6 l       .debug_str	00000000 
000029cb l       .debug_str	00000000 
000029d4 l       .debug_str	00000000 
00002a31 l       .debug_str	00000000 
00002a96 l       .debug_str	00000000 
00002aa0 l       .debug_str	00000000 
00002ab0 l       .debug_str	00000000 
00002ac5 l       .debug_str	00000000 
00002acd l       .debug_str	00000000 
00002b31 l       .debug_str	00000000 
00002b9d l       .debug_str	00000000 
00002ba4 l       .debug_str	00000000 
00002bac l       .debug_str	00000000 
00002bca l       .debug_str	00000000 
00002bda l       .debug_str	00000000 
00002c0d l       .debug_str	00000000 
00002c22 l       .debug_str	00000000 
00002c35 l       .debug_str	00000000 
00002c4a l       .debug_str	00000000 
00002c51 l       .debug_str	00000000 
00002c66 l       .debug_str	00000000 
00002c90 l       .debug_str	00000000 
00002c99 l       .debug_str	00000000 
00002d09 l       .debug_str	00000000 
00002d5c l       .debug_str	00000000 
00003109 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000019 .Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000004 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.23	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.26	00000005 .Lanon.3ed011473997af99b525cde47c9eaaac.26
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.27	0000004b .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.32	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.33	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.34
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.35	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.35
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000f .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h65a1f7573ec69852E	00000008 app::app_sensor::SENSOR_DEVICE
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E	000003d2 app::app_sensor::handle_sensor_data
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E	0000000c <&T as core::fmt::Display>::fmt
00000000 l     F .text._ZN4core6result13unwrap_failed17h70f379387ad3a852E	00000050 core::result::unwrap_failed
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h70f379387ad3a852E	00000000 .text._ZN4core6result13unwrap_failed17h70f379387ad3a852E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h65a1f7573ec69852E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h65a1f7573ec69852E
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <str as core::fmt::Display>::fmt
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::fmt::Debug>::fmt
00000000         *UND*	00000000 mynewt::hw::sensor::as_untyped
00000000         *UND*	00000000 mynewt::hw::sensor::register_listener
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::set_poll_rate_ms
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::mgr_find_next_bydevname
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 mynewt::sys::console::buffer
00000000         *UND*	00000000 mynewt::sys::console::printhex
00000000         *UND*	00000000 mynewt::Strn::new
00000000         *UND*	00000000 mynewt::libs::sensor_network::prepare_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::do_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::init_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::start_server_transport
00000000         *UND*	00000000 mynewt::kernel::os::eventq_run
00000000         *UND*	00000000 mynewt::kernel::os::eventq_dflt_get
00000000         *UND*	00000000 mynewt::sysinit
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::key_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::new_encoder
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::check_result
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::value_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::global_encoder
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::encoder
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::cstr_len
00000000         *UND*	00000000 mynewt::encoding::coap_context::COAP_CONTEXT
00000000         *UND*	00000000 <str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 cbor_encode_int
00000000         *UND*	00000000 cbor_encode_text_string
00000000         *UND*	00000000 cbor_encoder_close_container
00000000         *UND*	00000000 cbor_encoder_create_array
00000000         *UND*	00000000 cbor_encoder_create_map
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000 g     F .text.main	000000e8 main
00000000         *UND*	00000000 null_sensor
00000000 g     F .text.rust_begin_unwind	00000066 rust_begin_unwind



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E:

00000000 <<&T as core::fmt::Display>::fmt>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <<str as core::fmt::Display>::fmt>

Disassembly of section .text._ZN4core6result13unwrap_failed17h70f379387ad3a852E:

00000000 <core::result::unwrap_failed>:
_ZN4core6result13unwrap_failed17h70f379387ad3a852E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h70f379387ad3a852E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h70f379387ad3a852E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E:

00000000 <app::app_sensor::handle_sensor_data>:
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:73
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b087      	sub	sp, #28
   6:	4605      	mov	r5, r0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:75
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("Rust handle_sensor_data\n");
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:78
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { sensor::is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <is_null_sensor_data>
  1e:	b120      	cbz	r0, 2a <app::app_sensor::handle_sensor_data+0x2a>
  20:	f06f 0001 	mvn.w	r0, #1
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:101
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  24:	b007      	add	sp, #28
  26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
  2a:	4628      	mov	r0, r5
  2c:	f7ff fffe 	bl	0 <is_null_sensor>
  30:	2800      	cmp	r0, #0
  32:	f040 81b9 	bne.w	3a8 <app::app_sensor::handle_sensor_data+0x3a8>
  36:	2000      	movs	r0, #0
  38:	a904      	add	r1, sp, #16
_ZN3app10app_sensor15get_temperature17h4b0523761b93c672E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:113
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3a:	f88d 0014 	strb.w	r0, [sp, #20]
  3e:	9004      	str	r0, [sp, #16]
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:114
            let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <get_temp_raw_data>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:115
            assert!(rc == 0);
  46:	2800      	cmp	r0, #0
  48:	f040 81b5 	bne.w	3b6 <app::app_sensor::handle_sensor_data+0x3b6>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:118

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  4c:	f89d 0014 	ldrb.w	r0, [sp, #20]
  50:	2800      	cmp	r0, #0
  52:	f000 81b7 	beq.w	3c4 <app::app_sensor::handle_sensor_data+0x3c4>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:122

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  56:	f240 0000 	movw	r0, #0
  5a:	2119      	movs	r1, #25
  5c:	f2c0 0000 	movt	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:121
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  60:	f8dd 9010 	ldr.w	r9, [sp, #16]
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:122
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  64:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:51
///   {"key":"device", "value":"0102030405060708090a0b0c0d0e0f10"},
///   {"key":"t",      "value":1715}
/// ]}
/// ```
pub fn send_sensor_data(val: &SensorValue) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console::print("Rust send_sensor_data\n");
  68:	f240 0000 	movw	r0, #0
  6c:	2116      	movs	r1, #22
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:57
    if let SensorValueType::None = val.val { assert!(false); }

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post(strn!("")) ? ;
  76:	f240 0000 	movw	r0, #0
  7a:	2101      	movs	r1, #1
  7c:	f2c0 0000 	movt	r0, #0
  80:	f7ff fffe 	bl	0 <mynewt::Strn::new>
  84:	e9cd 0104 	strd	r0, r1, [sp, #16]
  88:	a802      	add	r0, sp, #8
  8a:	a904      	add	r1, sp, #16
  8c:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::init_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9f24eae1c4c05d5fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
  90:	9802      	ldr	r0, [sp, #8]
  92:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:57
  94:	2901      	cmp	r1, #1
  96:	d107      	bne.n	a8 <app::app_sensor::handle_sensor_data+0xa8>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9f24eae1c4c05d5fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
  98:	9803      	ldr	r0, [sp, #12]
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
  9a:	3006      	adds	r0, #6
  9c:	f000 816e 	beq.w	37c <app::app_sensor::handle_sensor_data+0x37c>
  a0:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:101
}
  a2:	b007      	add	sp, #28
  a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:58
    if !rc { return Err(MynewtError::SYS_EAGAIN); }  //  If network transport not ready, tell caller (Sensor Listener) to try again later.
  a8:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  ac:	f000 8166 	beq.w	37c <app::app_sensor::handle_sensor_data+0x37c>
  b0:	a804      	add	r0, sp, #16
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:62

    //  Compose the CoAP Payload using the coap!() macro.
    //  Select @json or @cbor To encode CoAP Payload in JSON or CBOR format.
    let _payload = coap!( @cbor {        
  b2:	213c      	movs	r1, #60	; 0x3c
  b4:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::prepare_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9f24eae1c4c05d5fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
  b8:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:62
  bc:	2801      	cmp	r0, #1
  be:	f000 8159 	beq.w	374 <app::app_sensor::handle_sensor_data+0x374>
  c2:	f240 0a00 	movw	sl, #0
  c6:	f240 0b00 	movw	fp, #0
  ca:	f240 0700 	movw	r7, #0
  ce:	2004      	movs	r0, #4
  d0:	f2c0 0b00 	movt	fp, #0
  d4:	f2c0 0700 	movt	r7, #0
  d8:	f2c0 0a00 	movt	sl, #0
  dc:	9000      	str	r0, [sp, #0]
  de:	4650      	mov	r0, sl
  e0:	4659      	mov	r1, fp
  e2:	2204      	movs	r2, #4
  e4:	463b      	mov	r3, r7
  e6:	f04f 0804 	mov.w	r8, #4
  ea:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
  ee:	4605      	mov	r5, r0
  f0:	4650      	mov	r0, sl
  f2:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::global_encoder>
  f6:	4629      	mov	r1, r5
  f8:	f04f 32ff 	mov.w	r2, #4294967295
  fc:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 100:	4601      	mov	r1, r0
 102:	4650      	mov	r0, sl
 104:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 108:	f240 0000 	movw	r0, #0
 10c:	2106      	movs	r1, #6
 10e:	f2c0 0000 	movt	r0, #0
 112:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 116:	4605      	mov	r5, r0
 118:	460e      	mov	r6, r1
 11a:	4650      	mov	r0, sl
 11c:	4659      	mov	r1, fp
 11e:	2204      	movs	r2, #4
 120:	463b      	mov	r3, r7
 122:	f8cd 8000 	str.w	r8, [sp]
 126:	46b8      	mov	r8, r7
 128:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 12c:	4607      	mov	r7, r0
 12e:	4650      	mov	r0, sl
 130:	4629      	mov	r1, r5
 132:	4632      	mov	r2, r6
 134:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 138:	4604      	mov	r4, r0
 13a:	4650      	mov	r0, sl
 13c:	4629      	mov	r1, r5
 13e:	4632      	mov	r2, r6
 140:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 144:	4602      	mov	r2, r0
 146:	4638      	mov	r0, r7
 148:	4621      	mov	r1, r4
 14a:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 14e:	4601      	mov	r1, r0
 150:	4650      	mov	r0, sl
 152:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 156:	2004      	movs	r0, #4
 158:	4659      	mov	r1, fp
 15a:	9000      	str	r0, [sp, #0]
 15c:	4650      	mov	r0, sl
 15e:	2204      	movs	r2, #4
 160:	4643      	mov	r3, r8
 162:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 166:	f240 0700 	movw	r7, #0
 16a:	f240 0b00 	movw	fp, #0
 16e:	f2c0 0700 	movt	r7, #0
 172:	f2c0 0b00 	movt	fp, #0
 176:	4604      	mov	r4, r0
 178:	2506      	movs	r5, #6
 17a:	4650      	mov	r0, sl
 17c:	4659      	mov	r1, fp
 17e:	2206      	movs	r2, #6
 180:	463b      	mov	r3, r7
 182:	9500      	str	r5, [sp, #0]
 184:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::new_encoder>
 188:	4601      	mov	r1, r0
 18a:	4620      	mov	r0, r4
 18c:	f04f 32ff 	mov.w	r2, #4294967295
 190:	f7ff fffe 	bl	0 <cbor_encoder_create_array>
 194:	4601      	mov	r1, r0
 196:	4650      	mov	r0, sl
 198:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 19c:	4650      	mov	r0, sl
 19e:	4659      	mov	r1, fp
 1a0:	2206      	movs	r2, #6
 1a2:	463b      	mov	r3, r7
 1a4:	9500      	str	r5, [sp, #0]
 1a6:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 1aa:	4604      	mov	r4, r0
 1ac:	2004      	movs	r0, #4
 1ae:	9000      	str	r0, [sp, #0]
 1b0:	4650      	mov	r0, sl
 1b2:	4659      	mov	r1, fp
 1b4:	2206      	movs	r2, #6
 1b6:	4643      	mov	r3, r8
 1b8:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::new_encoder>
 1bc:	4601      	mov	r1, r0
 1be:	4620      	mov	r0, r4
 1c0:	f04f 32ff 	mov.w	r2, #4294967295
 1c4:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 1c8:	4601      	mov	r1, r0
 1ca:	4650      	mov	r0, sl
 1cc:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 1d0:	f240 0000 	movw	r0, #0
 1d4:	2103      	movs	r1, #3
 1d6:	f2c0 0000 	movt	r0, #0
 1da:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 1de:	4604      	mov	r4, r0
 1e0:	f240 0000 	movw	r0, #0
 1e4:	460f      	mov	r7, r1
 1e6:	f2c0 0000 	movt	r0, #0
 1ea:	2101      	movs	r1, #1
 1ec:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 1f0:	4605      	mov	r5, r0
 1f2:	2004      	movs	r0, #4
 1f4:	460e      	mov	r6, r1
 1f6:	9000      	str	r0, [sp, #0]
 1f8:	4650      	mov	r0, sl
 1fa:	4659      	mov	r1, fp
 1fc:	2206      	movs	r2, #6
 1fe:	4643      	mov	r3, r8
 200:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 204:	4680      	mov	r8, r0
 206:	4650      	mov	r0, sl
 208:	4621      	mov	r1, r4
 20a:	463a      	mov	r2, r7
 20c:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 210:	4683      	mov	fp, r0
 212:	4650      	mov	r0, sl
 214:	4621      	mov	r1, r4
 216:	463a      	mov	r2, r7
 218:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 21c:	4602      	mov	r2, r0
 21e:	4640      	mov	r0, r8
 220:	4659      	mov	r1, fp
 222:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 226:	4601      	mov	r1, r0
 228:	4650      	mov	r0, sl
 22a:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 22e:	4650      	mov	r0, sl
 230:	4629      	mov	r1, r5
 232:	4632      	mov	r2, r6
 234:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::value_to_cstr>
 238:	4604      	mov	r4, r0
 23a:	4650      	mov	r0, sl
 23c:	4629      	mov	r1, r5
 23e:	4632      	mov	r2, r6
 240:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 244:	4602      	mov	r2, r0
 246:	4640      	mov	r0, r8
 248:	4621      	mov	r1, r4
 24a:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 24e:	4601      	mov	r1, r0
 250:	4650      	mov	r0, sl
 252:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 256:	f240 0000 	movw	r0, #0
 25a:	2105      	movs	r1, #5
 25c:	f2c0 0000 	movt	r0, #0
 260:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 264:	f240 0800 	movw	r8, #0
 268:	f240 0300 	movw	r3, #0
 26c:	4604      	mov	r4, r0
 26e:	2004      	movs	r0, #4
 270:	f2c0 0800 	movt	r8, #0
 274:	460d      	mov	r5, r1
 276:	9000      	str	r0, [sp, #0]
 278:	4650      	mov	r0, sl
 27a:	4641      	mov	r1, r8
 27c:	2206      	movs	r2, #6
 27e:	f2c0 0300 	movt	r3, #0
 282:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 286:	4606      	mov	r6, r0
 288:	4650      	mov	r0, sl
 28a:	4621      	mov	r1, r4
 28c:	462a      	mov	r2, r5
 28e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 292:	4607      	mov	r7, r0
 294:	4650      	mov	r0, sl
 296:	4621      	mov	r1, r4
 298:	462a      	mov	r2, r5
 29a:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 29e:	4602      	mov	r2, r0
 2a0:	4630      	mov	r0, r6
 2a2:	4639      	mov	r1, r7
 2a4:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 2a8:	4601      	mov	r1, r0
 2aa:	4650      	mov	r0, sl
 2ac:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 2b0:	4630      	mov	r0, r6
 2b2:	464a      	mov	r2, r9
 2b4:	2300      	movs	r3, #0
 2b6:	f7ff fffe 	bl	0 <cbor_encode_int>
 2ba:	4601      	mov	r1, r0
 2bc:	4650      	mov	r0, sl
 2be:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 2c2:	f240 0b00 	movw	fp, #0
 2c6:	f04f 0906 	mov.w	r9, #6
 2ca:	f2c0 0b00 	movt	fp, #0
 2ce:	4650      	mov	r0, sl
 2d0:	4641      	mov	r1, r8
 2d2:	2206      	movs	r2, #6
 2d4:	465b      	mov	r3, fp
 2d6:	f8cd 9000 	str.w	r9, [sp]
 2da:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 2de:	f240 0600 	movw	r6, #0
 2e2:	4604      	mov	r4, r0
 2e4:	f2c0 0600 	movt	r6, #0
 2e8:	2504      	movs	r5, #4
 2ea:	4650      	mov	r0, sl
 2ec:	4641      	mov	r1, r8
 2ee:	2206      	movs	r2, #6
 2f0:	4633      	mov	r3, r6
 2f2:	9500      	str	r5, [sp, #0]
 2f4:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 2f8:	4601      	mov	r1, r0
 2fa:	4620      	mov	r0, r4
 2fc:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 300:	4601      	mov	r1, r0
 302:	4650      	mov	r0, sl
 304:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 308:	f240 0700 	movw	r7, #0
 30c:	4650      	mov	r0, sl
 30e:	f2c0 0700 	movt	r7, #0
 312:	2204      	movs	r2, #4
 314:	4639      	mov	r1, r7
 316:	4633      	mov	r3, r6
 318:	9500      	str	r5, [sp, #0]
 31a:	2504      	movs	r5, #4
 31c:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 320:	4604      	mov	r4, r0
 322:	4650      	mov	r0, sl
 324:	4641      	mov	r1, r8
 326:	2206      	movs	r2, #6
 328:	465b      	mov	r3, fp
 32a:	f8cd 9000 	str.w	r9, [sp]
 32e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 332:	4601      	mov	r1, r0
 334:	4620      	mov	r0, r4
 336:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 33a:	4601      	mov	r1, r0
 33c:	4650      	mov	r0, sl
 33e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 342:	4650      	mov	r0, sl
 344:	4639      	mov	r1, r7
 346:	2204      	movs	r2, #4
 348:	4633      	mov	r3, r6
 34a:	9500      	str	r5, [sp, #0]
 34c:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 350:	4604      	mov	r4, r0
 352:	4650      	mov	r0, sl
 354:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::global_encoder>
 358:	4621      	mov	r1, r4
 35a:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 35e:	4601      	mov	r1, r0
 360:	4650      	mov	r0, sl
 362:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 366:	a804      	add	r0, sp, #16
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:77
    });

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 368:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::do_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9f24eae1c4c05d5fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
 36c:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:77
 370:	2801      	cmp	r0, #1
 372:	d10e      	bne.n	392 <app::app_sensor::handle_sensor_data+0x392>
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
 374:	9805      	ldr	r0, [sp, #20]
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 376:	3006      	adds	r0, #6
 378:	f47f ae92 	bne.w	a0 <app::app_sensor::handle_sensor_data+0xa0>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:95
            console::print("TMP network not ready\n");
 37c:	f240 0000 	movw	r0, #0
 380:	2116      	movs	r1, #22
 382:	f2c0 0000 	movt	r0, #0
 386:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 38a:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:101
}
 38c:	b007      	add	sp, #28
 38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:79

    console::print("NET view your sensor at \nhttps://blue-pill-geolocate.appspot.com?device=%s\n");  //  , device_id);
 392:	f240 0000 	movw	r0, #0
 396:	214b      	movs	r1, #75	; 0x4b
 398:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
 39c:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 3a0:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:101
 3a2:	b007      	add	sp, #28
 3a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
 3a8:	f240 0000 	movw	r0, #0
 3ac:	f2c0 0000 	movt	r0, #0
 3b0:	f7ff fffe 	bl	0 <core::panicking::panic>
 3b4:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor15get_temperature17h4b0523761b93c672E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:115
            assert!(rc == 0);
 3b6:	f240 0000 	movw	r0, #0
 3ba:	f2c0 0000 	movt	r0, #0
 3be:	f7ff fffe 	bl	0 <core::panicking::panic>
 3c2:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:83
    if let SensorValueType::None = sensor_value.val { assert!(false); }  //  Invalid type
 3c4:	f240 0000 	movw	r0, #0
 3c8:	f2c0 0000 	movt	r0, #0
 3cc:	f7ff fffe 	bl	0 <core::panicking::panic>
 3d0:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:49
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:55
    //  Initialise the Mynewt packages and BME280 / temp_stm32 temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <mynewt::sysinit>
_ZN3app10app_sensor21start_sensor_listener17h20f422702b305d3dE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:48
    console::print("Rust TMP poll \n");  //  SENSOR_DEVICE "\n";
   6:	f240 0000 	movw	r0, #0
   a:	210f      	movs	r1, #15
   c:	f2c0 0000 	movt	r0, #0
  10:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:51
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  14:	f240 0000 	movw	r0, #0
  18:	f242 7110 	movw	r1, #10000	; 0x2710
  1c:	f2c0 0000 	movt	r0, #0
  20:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::set_poll_rate_ms>
  24:	2801      	cmp	r0, #1
  26:	d147      	bne.n	b8 <main+0xb8>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:54
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, unsafe { sensor::null_sensor() }) ? ;
  28:	f7ff fffe 	bl	0 <null_sensor>
  2c:	f240 0100 	movw	r1, #0
  30:	4602      	mov	r2, r0
  32:	4668      	mov	r0, sp
  34:	f2c0 0100 	movt	r1, #0
  38:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h35ed244f8afd7e89E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
  3c:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h20f422702b305d3dE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:54
  40:	2801      	cmp	r0, #1
  42:	d017      	beq.n	74 <main+0x74>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  44:	4620      	mov	r0, r4
  46:	f7ff fffe 	bl	0 <is_null_sensor>
  4a:	2800      	cmp	r0, #0
  4c:	d145      	bne.n	da <main+0xda>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:60
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f7ff fffe 	bl	0 <mynewt::hw::sensor::as_untyped>
  5a:	2100      	movs	r1, #0
  5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:65
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  60:	9101      	str	r1, [sp, #4]
  62:	9200      	str	r2, [sp, #0]
  64:	9104      	str	r1, [sp, #16]
  66:	e9cd 0102 	strd	r0, r1, [sp, #8]
  6a:	4669      	mov	r1, sp
  6c:	4620      	mov	r0, r4
  6e:	f7ff fffe 	bl	0 <mynewt::hw::sensor::register_listener>
  72:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  74:	2c01      	cmp	r4, #1
  76:	d120      	bne.n	ba <main+0xba>
main():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:62
    //  Starting polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  78:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::start_server_transport>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  7c:	2801      	cmp	r0, #1
  7e:	d124      	bne.n	ca <main+0xca>
main():
  80:	466c      	mov	r4, sp
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:68
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  82:	4620      	mov	r0, r4
  84:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_dflt_get>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h96559aacd5aa4afdE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  88:	9800      	ldr	r0, [sp, #0]
  8a:	2801      	cmp	r0, #1
  8c:	d00c      	beq.n	a8 <main+0xa8>
  8e:	9801      	ldr	r0, [sp, #4]
main():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:67
        os::eventq_run(               //  Processing events...
  90:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_run>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  94:	2801      	cmp	r0, #1
  96:	d0f4      	beq.n	82 <main+0x82>
main():
  98:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	f7ff fffe 	bl	0 <main>
  a6:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h96559aacd5aa4afdE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  a8:	9901      	ldr	r1, [sp, #4]
  aa:	f240 0000 	movw	r0, #0
  ae:	f2c0 0000 	movt	r0, #0
  b2:	f7ff fffe 	bl	0 <main>
  b6:	defe      	udf	#254	; 0xfe
main():
  b8:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  ba:	f240 0000 	movw	r0, #0
  be:	4621      	mov	r1, r4
  c0:	f2c0 0000 	movt	r0, #0
  c4:	f7ff fffe 	bl	0 <main>
  c8:	defe      	udf	#254	; 0xfe
main():
  ca:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  cc:	f240 0000 	movw	r0, #0
  d0:	f2c0 0000 	movt	r0, #0
  d4:	f7ff fffe 	bl	0 <main>
  d8:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h20f422702b305d3dE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  da:	f240 0000 	movw	r0, #0
  de:	f2c0 0000 	movt	r0, #0
  e2:	f7ff fffe 	bl	0 <core::panicking::panic>
  e6:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:79

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
   4:	b318      	cbz	r0, 4e <rust_begin_unwind+0x4e>
   6:	4604      	mov	r4, r0
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:80
        let file = location.file();
   8:	f7ff fffe 	bl	0 <core::panic::Location::file>
   c:	4605      	mov	r5, r0
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:81
        let line = location.line();
   e:	4620      	mov	r0, r4
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:80
        let file = location.file();
  10:	460e      	mov	r6, r1
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:81
        let line = location.line();
  12:	f7ff fffe 	bl	0 <core::panic::Location::line>
  16:	4604      	mov	r4, r0
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:82
        console::print("panic at ");  console::buffer(&file);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  26:	4628      	mov	r0, r5
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <mynewt::sys::console::buffer>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:83
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  2e:	f240 0000 	movw	r0, #0
  32:	2108      	movs	r1, #8
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  3c:	4620      	mov	r0, r4
  3e:	f7ff fffe 	bl	0 <mynewt::sys::console::printhex>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:84
        console::print("\n");         console::flush();
  42:	f240 0000 	movw	r0, #0
  46:	2101      	movs	r1, #1
  48:	f2c0 0000 	movt	r0, #0
  4c:	e004      	b.n	c <rust_begin_unwind+0xc>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:86
    } else {
        console::print("panic unknown loc\n");  console::flush();
  4e:	f240 0000 	movw	r0, #0
  52:	2112      	movs	r1, #18
  54:	f2c0 0000 	movt	r0, #0
  58:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  5c:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
_ZN8cortex_m3asm4bkpt17h917bc03351fb7d73E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  60:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:91
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  64:	e7fe      	b.n	64 <rust_begin_unwind+0x64>

as_slice-77f118ce56dccdad.as_slice.38o2jq0p-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 as_slice.38o2jq0p-cgu.0



bare_metal-dea8e5967f023c5e.bare_metal.4o8gswcd-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 bare_metal.4o8gswcd-cgu.0
000000fa l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009c l       .debug_str	00000000 
000000ec l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fd l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
00000000 l    d  .text._ZN10bare_metal15CriticalSection3new17h8cd77814fe1197d1E	00000000 .text._ZN10bare_metal15CriticalSection3new17h8cd77814fe1197d1E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN10bare_metal15CriticalSection3new17h8cd77814fe1197d1E	00000002 bare_metal::CriticalSection::new



Disassembly of section .text._ZN10bare_metal15CriticalSection3new17h8cd77814fe1197d1E:

00000000 <bare_metal::CriticalSection::new>:
_ZN10bare_metal15CriticalSection3new17h8cd77814fe1197d1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\bare-metal-0.2.4\src/lib.rs:68
    ///
    /// This method is meant to be used to create safe abstractions rather than
    /// meant to be directly used in applications.
    pub unsafe fn new() -> Self {
        CriticalSection { _0: () }
    }
   0:	4770      	bx	lr

cortex-m-v7.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.__basepri_max	00000000 .text.__basepri_max
00000000 l    d  .text.__basepri_r	00000000 .text.__basepri_r
00000000 l    d  .text.__basepri_w	00000000 .text.__basepri_w
00000000 l    d  .text.__faultmask	00000000 .text.__faultmask
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 g     F .text.__basepri_max	00000000 __basepri_max
00000000 g     F .text.__basepri_r	00000000 __basepri_r
00000000 g     F .text.__basepri_w	00000000 __basepri_w
00000000 g     F .text.__faultmask	00000000 __faultmask



Disassembly of section .text.__basepri_max:

00000000 <__basepri_max>:
__basepri_max():
   0:	f380 8812 	msr	BASEPRI_MAX, r0
   4:	4770      	bx	lr

Disassembly of section .text.__basepri_r:

00000000 <__basepri_r>:
__basepri_r():
   0:	f3ef 8011 	mrs	r0, BASEPRI
   4:	4770      	bx	lr

Disassembly of section .text.__basepri_w:

00000000 <__basepri_w>:
__basepri_w():
   0:	f380 8811 	msr	BASEPRI, r0
   4:	4770      	bx	lr

Disassembly of section .text.__faultmask:

00000000 <__faultmask>:
__faultmask():
   0:	f3ef 8013 	mrs	r0, FAULTMASK
   4:	4770      	bx	lr

cortex-m.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.__bkpt	00000000 .text.__bkpt
00000000 l    d  .text.__control	00000000 .text.__control
00000000 l    d  .text.__cpsid	00000000 .text.(char, short *, int, double)
00000000 l    d  .text.__cpsie	00000000 .text.(char, short *, int,...)
00000000 l    d  .text.__delay	00000000 .text.__delay
00000000 l    d  .text.__dmb	00000000 .text.__dmb
00000000 l    d  .text.__dsb	00000000 .text.(double, short, bool)
00000000 l    d  .text.__isb	00000000 .text.(int, short, bool)
00000000 l    d  .text.__msp_r	00000000 .text.__msp_r
00000000 l    d  .text.__msp_w	00000000 .text.__msp_w
00000000 l    d  .text.__nop	00000000 .text.__nop
00000000 l    d  .text.__primask	00000000 .text.__primask
00000000 l    d  .text.__psp_r	00000000 .text.__psp_r
00000000 l    d  .text.__psp_w	00000000 .text.__psp_w
00000000 l    d  .text.__sev	00000000 .text.(short,...)(void)
00000000 l    d  .text.__wfe	00000000 .text.(wchar_t, float,...)
00000000 l    d  .text.__wfi	00000000 .text.(wchar_t, float, int)
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 g     F .text.__bkpt	00000000 __bkpt
00000000 g     F .text.__control	00000000 __control
00000000 g     F .text.__cpsid	00000000 __cpsid
00000000 g     F .text.__cpsie	00000000 __cpsie
00000000 g     F .text.__delay	00000000 __delay
00000000 g     F .text.__dmb	00000000 __dmb
00000000 g     F .text.__dsb	00000000 __dsb
00000000 g     F .text.__isb	00000000 __isb
00000000 g     F .text.__msp_r	00000000 __msp_r
00000000 g     F .text.__msp_w	00000000 __msp_w
00000000 g     F .text.__nop	00000000 __nop
00000000 g     F .text.__primask	00000000 __primask
00000000 g     F .text.__psp_r	00000000 __psp_r
00000000 g     F .text.__psp_w	00000000 __psp_w
00000000 g     F .text.__sev	00000000 __sev
00000000 g     F .text.__wfe	00000000 __wfe
00000000 g     F .text.__wfi	00000000 __wfi



Disassembly of section .text.__bkpt:

00000000 <__bkpt>:
__bkpt():
   0:	be00      	bkpt	0x0000
   2:	4770      	bx	lr

Disassembly of section .text.__control:

00000000 <__control>:
__control():
   0:	f3ef 8014 	mrs	r0, CONTROL
   4:	4770      	bx	lr

Disassembly of section .text.__cpsid:

00000000 <__cpsid>:
__cpsid():
   0:	b672      	cpsid	i
   2:	4770      	bx	lr

Disassembly of section .text.__cpsie:

00000000 <__cpsie>:
__cpsie():
   0:	b662      	cpsie	i
   2:	4770      	bx	lr

Disassembly of section .text.__delay:

00000000 <__delay>:
__delay():
   0:	bf00      	nop
   2:	3801      	subs	r0, #1
   4:	f47f affe 	bne.w	0 <__delay>
   8:	4770      	bx	lr

Disassembly of section .text.__dmb:

00000000 <__dmb>:
__dmb():
   0:	f3bf 8f5f 	dmb	sy
   4:	4770      	bx	lr

Disassembly of section .text.__dsb:

00000000 <__dsb>:
__dsb():
   0:	f3bf 8f4f 	dsb	sy
   4:	4770      	bx	lr

Disassembly of section .text.__isb:

00000000 <__isb>:
__isb():
   0:	f3bf 8f6f 	isb	sy
   4:	4770      	bx	lr

Disassembly of section .text.__msp_r:

00000000 <__msp_r>:
__msp_r():
   0:	f3ef 8008 	mrs	r0, MSP
   4:	4770      	bx	lr

Disassembly of section .text.__msp_w:

00000000 <__msp_w>:
__msp_w():
   0:	f380 8808 	msr	MSP, r0
   4:	4770      	bx	lr

Disassembly of section .text.__nop:

00000000 <__nop>:
__nop():
   0:	4770      	bx	lr

Disassembly of section .text.__primask:

00000000 <__primask>:
__primask():
   0:	f3ef 8010 	mrs	r0, PRIMASK
   4:	4770      	bx	lr

Disassembly of section .text.__psp_r:

00000000 <__psp_r>:
__psp_r():
   0:	f3ef 8009 	mrs	r0, PSP
   4:	4770      	bx	lr

Disassembly of section .text.__psp_w:

00000000 <__psp_w>:
__psp_w():
   0:	f380 8809 	msr	PSP, r0
   4:	4770      	bx	lr

Disassembly of section .text.__sev:

00000000 <__sev>:
__sev():
   0:	bf40      	sev
   2:	4770      	bx	lr

Disassembly of section .text.__wfe:

00000000 <__wfe>:
__wfe():
   0:	bf20      	wfe
   2:	4770      	bx	lr

Disassembly of section .text.__wfi:

00000000 <__wfi>:
__wfi():
   0:	bf30      	wfi
   2:	4770      	bx	lr

cortex_m-889dcd31dcf4169c.cortex_m.a5dxpv24-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cortex_m.a5dxpv24-cgu.0
00000c46 l       .debug_str	00000000 
00003cf5 l       .debug_str	00000000 
00003cea l       .debug_str	00000000 
000049ad l       .debug_str	00000000 
00003ce5 l       .debug_str	00000000 
00003cda l       .debug_str	00000000 
00004989 l       .debug_str	00000000 
00003cd5 l       .debug_str	00000000 
00003cca l       .debug_str	00000000 
00004965 l       .debug_str	00000000 
00003cc5 l       .debug_str	00000000 
00003cc0 l       .debug_str	00000000 
0000495a l       .debug_str	00000000 
00003cbb l       .debug_str	00000000 
00003c85 l       .debug_str	00000000 
0000492f l       .debug_str	00000000 
00003c5b l       .debug_str	00000000 
00003bf6 l       .debug_str	00000000 
00003bc6 l       .debug_str	00000000 
00004926 l       .debug_str	00000000 
00003bbe l       .debug_str	00000000 
00003bb6 l       .debug_str	00000000 
000048ff l       .debug_str	00000000 
00003bae l       .debug_str	00000000 
000048d9 l       .debug_str	00000000 
00003ba6 l       .debug_str	00000000 
000048bd l       .debug_str	00000000 
00003b9e l       .debug_str	00000000 
000048a1 l       .debug_str	00000000 
00003b96 l       .debug_str	00000000 
00004886 l       .debug_str	00000000 
00003b91 l       .debug_str	00000000 
0000486a l       .debug_str	00000000 
00003b8c l       .debug_str	00000000 
0000484f l       .debug_str	00000000 
00003b88 l       .debug_str	00000000 
00004830 l       .debug_str	00000000 
00003b82 l       .debug_str	00000000 
00004815 l       .debug_str	00000000 
00003b7e l       .debug_str	00000000 
000047fa l       .debug_str	00000000 
00003b49 l       .debug_str	00000000 
000047df l       .debug_str	00000000 
00003b1b l       .debug_str	00000000 
000047c4 l       .debug_str	00000000 
00003b11 l       .debug_str	00000000 
000047a7 l       .debug_str	00000000 
00003aa5 l       .debug_str	00000000 
0000478c l       .debug_str	00000000 
00003a7b l       .debug_str	00000000 
00004781 l       .debug_str	00000000 
00003a16 l       .debug_str	00000000 
00004761 l       .debug_str	00000000 
000039e8 l       .debug_str	00000000 
0000475c l       .debug_str	00000000 
000039de l       .debug_str	00000000 
000039da l       .debug_str	00000000 
000039d0 l       .debug_str	00000000 
0000474d l       .debug_str	00000000 
000039cc l       .debug_str	00000000 
000039c2 l       .debug_str	00000000 
000039be l       .debug_str	00000000 
0000472e l       .debug_str	00000000 
00003989 l       .debug_str	00000000 
0000395f l       .debug_str	00000000 
000038fa l       .debug_str	00000000 
0000470f l       .debug_str	00000000 
000038ca l       .debug_str	00000000 
000046f0 l       .debug_str	00000000 
000038c4 l       .debug_str	00000000 
000046e9 l       .debug_str	00000000 
000038c0 l       .debug_str	00000000 
000046cb l       .debug_str	00000000 
0000388b l       .debug_str	00000000 
000046c1 l       .debug_str	00000000 
00003861 l       .debug_str	00000000 
000046bb l       .debug_str	00000000 
000037fc l       .debug_str	00000000 
00004694 l       .debug_str	00000000 
000037cc l       .debug_str	00000000 
0000468f l       .debug_str	00000000 
000037c8 l       .debug_str	00000000 
00004628 l       .debug_str	00000000 
000037c4 l       .debug_str	00000000 
000037b9 l       .debug_str	00000000 
000045c4 l       .debug_str	00000000 
000037b0 l       .debug_str	00000000 
0000455f l       .debug_str	00000000 
000037ab l       .debug_str	00000000 
000044fa l       .debug_str	00000000 
000037a6 l       .debug_str	00000000 
00004493 l       .debug_str	00000000 
000037a1 l       .debug_str	00000000 
00004427 l       .debug_str	00000000 
00003799 l       .debug_str	00000000 
000043bc l       .debug_str	00000000 
00003792 l       .debug_str	00000000 
00004354 l       .debug_str	00000000 
00003789 l       .debug_str	00000000 
000042ed l       .debug_str	00000000 
00003782 l       .debug_str	00000000 
000042df l       .debug_str	00000000 
0000377b l       .debug_str	00000000 
00004299 l       .debug_str	00000000 
00003774 l       .debug_str	00000000 
0000428f l       .debug_str	00000000 
0000376f l       .debug_str	00000000 
0000424e l       .debug_str	00000000 
0000373a l       .debug_str	00000000 
00004249 l       .debug_str	00000000 
00003710 l       .debug_str	00000000 
0000420a l       .debug_str	00000000 
000036ab l       .debug_str	00000000 
00004204 l       .debug_str	00000000 
0000367b l       .debug_str	00000000 
000041c4 l       .debug_str	00000000 
00003675 l       .debug_str	00000000 
000041be l       .debug_str	00000000 
0000366f l       .debug_str	00000000 
0000417e l       .debug_str	00000000 
00003669 l       .debug_str	00000000 
0000413f l       .debug_str	00000000 
00003663 l       .debug_str	00000000 
00004114 l       .debug_str	00000000 
0000362e l       .debug_str	00000000 
000040ae l       .debug_str	00000000 
00003602 l       .debug_str	00000000 
0000407d l       .debug_str	00000000 
0000359b l       .debug_str	00000000 
00004073 l       .debug_str	00000000 
00003569 l       .debug_str	00000000 
0000406e l       .debug_str	00000000 
00003562 l       .debug_str	00000000 
00004069 l       .debug_str	00000000 
0000355b l       .debug_str	00000000 
00004064 l       .debug_str	00000000 
00003557 l       .debug_str	00000000 
0000405e l       .debug_str	00000000 
00003551 l       .debug_str	00000000 
00004058 l       .debug_str	00000000 
00003546 l       .debug_str	00000000 
00004053 l       .debug_str	00000000 
00003541 l       .debug_str	00000000 
0000401d l       .debug_str	00000000 
0000353c l       .debug_str	00000000 
00003ff2 l       .debug_str	00000000 
00003538 l       .debug_str	00000000 
00003f8c l       .debug_str	00000000 
00003534 l       .debug_str	00000000 
00003f5b l       .debug_str	00000000 
00003530 l       .debug_str	00000000 
00003f55 l       .debug_str	00000000 
00003525 l       .debug_str	00000000 
00003f51 l       .debug_str	00000000 
00003520 l       .debug_str	00000000 
00003f4d l       .debug_str	00000000 
000034e9 l       .debug_str	00000000 
00003f49 l       .debug_str	00000000 
000034bf l       .debug_str	00000000 
00003f13 l       .debug_str	00000000 
000034b9 l       .debug_str	00000000 
00003ee9 l       .debug_str	00000000 
00003454 l       .debug_str	00000000 
00003e84 l       .debug_str	00000000 
00003424 l       .debug_str	00000000 
00003e54 l       .debug_str	00000000 
00003416 l       .debug_str	00000000 
00003e4e l       .debug_str	00000000 
0000340f l       .debug_str	00000000 
00003e43 l       .debug_str	00000000 
00003408 l       .debug_str	00000000 
00003e3e l       .debug_str	00000000 
000033ff l       .debug_str	00000000 
00003e39 l       .debug_str	00000000 
000033f9 l       .debug_str	00000000 
00003e33 l       .debug_str	00000000 
000033f1 l       .debug_str	00000000 
00003e2e l       .debug_str	00000000 
000033e9 l       .debug_str	00000000 
00003e29 l       .debug_str	00000000 
000033e3 l       .debug_str	00000000 
00003e24 l       .debug_str	00000000 
000033db l       .debug_str	00000000 
000033d3 l       .debug_str	00000000 
000033c9 l       .debug_str	00000000 
000033c1 l       .debug_str	00000000 
000033b9 l       .debug_str	00000000 
000033b5 l       .debug_str	00000000 
00003380 l       .debug_str	00000000 
0000337c l       .debug_str	00000000 
00003347 l       .debug_str	00000000 
00003341 l       .debug_str	00000000 
00003301 l       .debug_str	00000000 
000032f6 l       .debug_str	00000000 
00003e1e l       .debug_str	00000000 
0000328a l       .debug_str	00000000 
00003279 l       .debug_str	00000000 
00003207 l       .debug_str	00000000 
000031fc l       .debug_str	00000000 
00003190 l       .debug_str	00000000 
0000317b l       .debug_str	00000000 
00003105 l       .debug_str	00000000 
00003e19 l       .debug_str	00000000 
000030f2 l       .debug_str	00000000 
0000307e l       .debug_str	00000000 
00003072 l       .debug_str	00000000 
00003e15 l       .debug_str	00000000 
00003005 l       .debug_str	00000000 
00002ff1 l       .debug_str	00000000 
00002f7c l       .debug_str	00000000 
00003e0f l       .debug_str	00000000 
00002f69 l       .debug_str	00000000 
00002ef5 l       .debug_str	00000000 
00002eea l       .debug_str	00000000 
00002e7e l       .debug_str	00000000 
00003e0a l       .debug_str	00000000 
00002e72 l       .debug_str	00000000 
00002e05 l       .debug_str	00000000 
00002df4 l       .debug_str	00000000 
00003e05 l       .debug_str	00000000 
00002d82 l       .debug_str	00000000 
00002d10 l       .debug_str	00000000 
00002ca0 l       .debug_str	00000000 
00003dd0 l       .debug_str	00000000 
00002c2d l       .debug_str	00000000 
00002bbc l       .debug_str	00000000 
00002bae l       .debug_str	00000000 
00003da5 l       .debug_str	00000000 
00002b3f l       .debug_str	00000000 
00002b32 l       .debug_str	00000000 
00003d3f l       .debug_str	00000000 
00003d0e l       .debug_str	00000000 
00003d09 l       .debug_str	00000000 
00003d05 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f8 l       .debug_str	00000000 
000000fc l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
0000012a l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
00000182 l       .debug_str	00000000 
00000193 l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
0000019b l       .debug_str	00000000 
0000019f l       .debug_str	00000000 
000001a3 l       .debug_str	00000000 
000001b2 l       .debug_str	00000000 
000001bc l       .debug_str	00000000 
000001cd l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001e1 l       .debug_str	00000000 
000001e8 l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
00000204 l       .debug_str	00000000 
0000020e l       .debug_str	00000000 
00000234 l       .debug_str	00000000 
00000239 l       .debug_str	00000000 
00000240 l       .debug_str	00000000 
00000243 l       .debug_str	00000000 
00000247 l       .debug_str	00000000 
0000024e l       .debug_str	00000000 
00000252 l       .debug_str	00000000 
00000255 l       .debug_str	00000000 
00000258 l       .debug_str	00000000 
0000025d l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
0000026a l       .debug_str	00000000 
00000272 l       .debug_str	00000000 
0000027c l       .debug_str	00000000 
00000283 l       .debug_str	00000000 
00000288 l       .debug_str	00000000 
0000028d l       .debug_str	00000000 
00000294 l       .debug_str	00000000 
0000029a l       .debug_str	00000000 
000002a8 l       .debug_str	00000000 
000002b4 l       .debug_str	00000000 
000002c4 l       .debug_str	00000000 
000002d2 l       .debug_str	00000000 
000002d7 l       .debug_str	00000000 
000002dc l       .debug_str	00000000 
000002e5 l       .debug_str	00000000 
000002f3 l       .debug_str	00000000 
000002fb l       .debug_str	00000000 
00000306 l       .debug_str	00000000 
00000313 l       .debug_str	00000000 
00000319 l       .debug_str	00000000 
0000031d l       .debug_str	00000000 
00000321 l       .debug_str	00000000 
00000327 l       .debug_str	00000000 
0000032e l       .debug_str	00000000 
00000338 l       .debug_str	00000000 
0000033d l       .debug_str	00000000 
00000347 l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
0000035a l       .debug_str	00000000 
00000362 l       .debug_str	00000000 
0000036a l       .debug_str	00000000 
0000036e l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
000003d3 l       .debug_str	00000000 
000003d8 l       .debug_str	00000000 
000003da l       .debug_str	00000000 
000003e0 l       .debug_str	00000000 
000003e5 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
000003f0 l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
000003fc l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
00000414 l       .debug_str	00000000 
00000418 l       .debug_str	00000000 
00000420 l       .debug_str	00000000 
00000428 l       .debug_str	00000000 
0000043c l       .debug_str	00000000 
00000448 l       .debug_str	00000000 
00000453 l       .debug_str	00000000 
0000045a l       .debug_str	00000000 
00000460 l       .debug_str	00000000 
00000464 l       .debug_str	00000000 
0000046a l       .debug_str	00000000 
0000046d l       .debug_str	00000000 
0000047c l       .debug_str	00000000 
00000483 l       .debug_str	00000000 
00000487 l       .debug_str	00000000 
00000490 l       .debug_str	00000000 
0000049c l       .debug_str	00000000 
000004b5 l       .debug_str	00000000 
000004ba l       .debug_str	00000000 
000004cb l       .debug_str	00000000 
000004d5 l       .debug_str	00000000 
00000533 l       .debug_str	00000000 
0000053e l       .debug_str	00000000 
0000055b l       .debug_str	00000000 
0000055f l       .debug_str	00000000 
00000567 l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
000005a2 l       .debug_str	00000000 
000005be l       .debug_str	00000000 
000005c3 l       .debug_str	00000000 
000005cc l       .debug_str	00000000 
000005d3 l       .debug_str	00000000 
000005ec l       .debug_str	00000000 
000005f6 l       .debug_str	00000000 
00000610 l       .debug_str	00000000 
0000066d l       .debug_str	00000000 
00000675 l       .debug_str	00000000 
000006c4 l       .debug_str	00000000 
000006d0 l       .debug_str	00000000 
000006da l       .debug_str	00000000 
000006e3 l       .debug_str	00000000 
000006e7 l       .debug_str	00000000 
000006f1 l       .debug_str	00000000 
000006f6 l       .debug_str	00000000 
000006fa l       .debug_str	00000000 
000006ff l       .debug_str	00000000 
00000706 l       .debug_str	00000000 
0000070b l       .debug_str	00000000 
00000710 l       .debug_str	00000000 
00000716 l       .debug_str	00000000 
0000071b l       .debug_str	00000000 
0000074e l       .debug_str	00000000 
0000076e l       .debug_str	00000000 
00000770 l       .debug_str	00000000 
000007cc l       .debug_str	00000000 
000007d6 l       .debug_str	00000000 
000007d8 l       .debug_str	00000000 
000007dd l       .debug_str	00000000 
0000080d l       .debug_str	00000000 
00000820 l       .debug_str	00000000 
00000824 l       .debug_str	00000000 
0000082f l       .debug_str	00000000 
00000874 l       .debug_str	00000000 
00000882 l       .debug_str	00000000 
000008a3 l       .debug_str	00000000 
000008d7 l       .debug_str	00000000 
000008e5 l       .debug_str	00000000 
000008ea l       .debug_str	00000000 
000008f1 l       .debug_str	00000000 
000008f9 l       .debug_str	00000000 
00000904 l       .debug_str	00000000 
00000907 l       .debug_str	00000000 
00000909 l       .debug_str	00000000 
00000924 l       .debug_str	00000000 
00000949 l       .debug_str	00000000 
0000094f l       .debug_str	00000000 
00000954 l       .debug_str	00000000 
00000983 l       .debug_str	00000000 
0000098d l       .debug_str	00000000 
00000993 l       .debug_str	00000000 
00000997 l       .debug_str	00000000 
000009c8 l       .debug_str	00000000 
000009dc l       .debug_str	00000000 
000009e5 l       .debug_str	00000000 
00000a25 l       .debug_str	00000000 
00000a2f l       .debug_str	00000000 
00000a60 l       .debug_str	00000000 
00000a73 l       .debug_str	00000000 
00000ab2 l       .debug_str	00000000 
00000abb l       .debug_str	00000000 
00000aed l       .debug_str	00000000 
00000af9 l       .debug_str	00000000 
00000afe l       .debug_str	00000000 
00000b04 l       .debug_str	00000000 
00000b0b l       .debug_str	00000000 
00000b0d l       .debug_str	00000000 
00000b12 l       .debug_str	00000000 
00000b18 l       .debug_str	00000000 
00000b1e l       .debug_str	00000000 
00000b22 l       .debug_str	00000000 
00000b2f l       .debug_str	00000000 
00000b36 l       .debug_str	00000000 
00000b3a l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00000b7f l       .debug_str	00000000 
00000b88 l       .debug_str	00000000 
00000bc8 l       .debug_str	00000000 
00000bd2 l       .debug_str	00000000 
00000c03 l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c29 l       .debug_str	00000000 
00000c35 l       .debug_str	00000000 
00000c3d l       .debug_str	00000000 
00002ac6 l       .debug_str	00000000 
00000c4b l       .debug_str	00000000 
00000c4e l       .debug_str	00000000 
00000c57 l       .debug_str	00000000 
00000c5e l       .debug_str	00000000 
00000c61 l       .debug_str	00000000 
00000c67 l       .debug_str	00000000 
00000c71 l       .debug_str	00000000 
00000c79 l       .debug_str	00000000 
00000c7f l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00000c93 l       .debug_str	00000000 
00000cb6 l       .debug_str	00000000 
00000cd5 l       .debug_str	00000000 
00000cfc l       .debug_str	00000000 
00000d06 l       .debug_str	00000000 
00000d9b l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000dcb l       .debug_str	00000000 
00000dcd l       .debug_str	00000000 
00000e18 l       .debug_str	00000000 
00000e28 l       .debug_str	00000000 
00000e2c l       .debug_str	00000000 
00000e3a l       .debug_str	00000000 
00000e3e l       .debug_str	00000000 
00000e40 l       .debug_str	00000000 
00000e42 l       .debug_str	00000000 
00000e89 l       .debug_str	00000000 
00000e95 l       .debug_str	00000000 
00000eea l       .debug_str	00000000 
00000ef4 l       .debug_str	00000000 
00000efb l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f51 l       .debug_str	00000000 
00000f57 l       .debug_str	00000000 
00000f5d l       .debug_str	00000000 
00000f63 l       .debug_str	00000000 
00000f75 l       .debug_str	00000000 
00000fae l       .debug_str	00000000 
00000fb7 l       .debug_str	00000000 
00000fd1 l       .debug_str	00000000 
00000fe3 l       .debug_str	00000000 
00000feb l       .debug_str	00000000 
00001029 l       .debug_str	00000000 
00001034 l       .debug_str	00000000 
00001050 l       .debug_str	00000000 
0000105a l       .debug_str	00000000 
00001071 l       .debug_str	00000000 
00001077 l       .debug_str	00000000 
000010e7 l       .debug_str	00000000 
000010f4 l       .debug_str	00000000 
00001115 l       .debug_str	00000000 
0000111b l       .debug_str	00000000 
0000111f l       .debug_str	00000000 
00001123 l       .debug_str	00000000 
0000114c l       .debug_str	00000000 
00001150 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001192 l       .debug_str	00000000 
0000119a l       .debug_str	00000000 
000011d7 l       .debug_str	00000000 
000011e1 l       .debug_str	00000000 
000011fd l       .debug_str	00000000 
00001205 l       .debug_str	00000000 
00001207 l       .debug_str	00000000 
00001246 l       .debug_str	00000000 
0000125a l       .debug_str	00000000 
0000125e l       .debug_str	00000000 
0000126b l       .debug_str	00000000 
000012f5 l       .debug_str	00000000 
00001301 l       .debug_str	00000000 
00001303 l       .debug_str	00000000 
00001307 l       .debug_str	00000000 
00001346 l       .debug_str	00000000 
00001354 l       .debug_str	00000000 
000013df l       .debug_str	00000000 
0000140f l       .debug_str	00000000 
00001421 l       .debug_str	00000000 
00001460 l       .debug_str	00000000 
00001464 l       .debug_str	00000000 
00001479 l       .debug_str	00000000 
0000150b l       .debug_str	00000000 
0000150d l       .debug_str	00000000 
00001511 l       .debug_str	00000000 
0000154e l       .debug_str	00000000 
00001552 l       .debug_str	00000000 
0000155d l       .debug_str	00000000 
00001567 l       .debug_str	00000000 
0000156c l       .debug_str	00000000 
00001577 l       .debug_str	00000000 
000015b6 l       .debug_str	00000000 
000015c4 l       .debug_str	00000000 
0000164f l       .debug_str	00000000 
00001653 l       .debug_str	00000000 
00001692 l       .debug_str	00000000 
000016a2 l       .debug_str	00000000 
0000172f l       .debug_str	00000000 
0000176e l       .debug_str	00000000 
0000177e l       .debug_str	00000000 
0000180b l       .debug_str	00000000 
0000184a l       .debug_str	00000000 
0000185c l       .debug_str	00000000 
000018eb l       .debug_str	00000000 
0000192a l       .debug_str	00000000 
00001937 l       .debug_str	00000000 
000019c1 l       .debug_str	00000000 
000019ea l       .debug_str	00000000 
000019ee l       .debug_str	00000000 
00001a34 l       .debug_str	00000000 
00001a3a l       .debug_str	00000000 
00001a64 l       .debug_str	00000000 
00001a73 l       .debug_str	00000000 
00001a84 l       .debug_str	00000000 
00001abd l       .debug_str	00000000 
00001ac5 l       .debug_str	00000000 
00001ade l       .debug_str	00000000 
00001ae5 l       .debug_str	00000000 
00001b23 l       .debug_str	00000000 
00001b2d l       .debug_str	00000000 
00001b48 l       .debug_str	00000000 
00001b4d l       .debug_str	00000000 
00001b8c l       .debug_str	00000000 
00001b9c l       .debug_str	00000000 
00001c2b l       .debug_str	00000000 
00001c2d l       .debug_str	00000000 
00001c6c l       .debug_str	00000000 
00001c7e l       .debug_str	00000000 
00001d0f l       .debug_str	00000000 
00001d4e l       .debug_str	00000000 
00001d5d l       .debug_str	00000000 
00001deb l       .debug_str	00000000 
00001e2a l       .debug_str	00000000 
00001e3b l       .debug_str	00000000 
00001ecb l       .debug_str	00000000 
00001ecf l       .debug_str	00000000 
00001ed3 l       .debug_str	00000000 
00001ed7 l       .debug_str	00000000 
00001edb l       .debug_str	00000000 
00001edf l       .debug_str	00000000 
00001ee4 l       .debug_str	00000000 
00001ee9 l       .debug_str	00000000 
00001ef5 l       .debug_str	00000000 
00001efa l       .debug_str	00000000 
00001f02 l       .debug_str	00000000 
00001f69 l       .debug_str	00000000 
00001f6c l       .debug_str	00000000 
00001f8f l       .debug_str	00000000 
00001f95 l       .debug_str	00000000 
00001f9f l       .debug_str	00000000 
00001faa l       .debug_str	00000000 
00001ff2 l       .debug_str	00000000 
00001ffa l       .debug_str	00000000 
00002042 l       .debug_str	00000000 
0000206c l       .debug_str	00000000 
000020b4 l       .debug_str	00000000 
000020bd l       .debug_str	00000000 
000020f2 l       .debug_str	00000000 
0000210b l       .debug_str	00000000 
0000210d l       .debug_str	00000000 
00002165 l       .debug_str	00000000 
000021bb l       .debug_str	00000000 
00002211 l       .debug_str	00000000 
00002230 l       .debug_str	00000000 
0000225f l       .debug_str	00000000 
00002269 l       .debug_str	00000000 
00002298 l       .debug_str	00000000 
0000230f l       .debug_str	00000000 
00002323 l       .debug_str	00000000 
0000232e l       .debug_str	00000000 
0000239a l       .debug_str	00000000 
00002407 l       .debug_str	00000000 
0000247b l       .debug_str	00000000 
00002490 l       .debug_str	00000000 
00002504 l       .debug_str	00000000 
00002573 l       .debug_str	00000000 
00002583 l       .debug_str	00000000 
000025ee l       .debug_str	00000000 
000025fa l       .debug_str	00000000 
0000263a l       .debug_str	00000000 
0000263d l       .debug_str	00000000 
0000267f l       .debug_str	00000000 
00002684 l       .debug_str	00000000 
000026b2 l       .debug_str	00000000 
0000271f l       .debug_str	00000000 
0000278e l       .debug_str	00000000 
000027fd l       .debug_str	00000000 
0000286e l       .debug_str	00000000 
000028da l       .debug_str	00000000 
000028dc l       .debug_str	00000000 
00002946 l       .debug_str	00000000 
00002951 l       .debug_str	00000000 
000029c2 l       .debug_str	00000000 
000029d4 l       .debug_str	00000000 
00002a40 l       .debug_str	00000000 
00002a4d l       .debug_str	00000000 
00002ab9 l       .debug_str	00000000 
00003cfa l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.0	00000018 .Lanon.03a4fb30fe0b1e0826edbdee22160072.0
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.1	00000007 .Lanon.03a4fb30fe0b1e0826edbdee22160072.1
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.10	00000009 .Lanon.03a4fb30fe0b1e0826edbdee22160072.10
00000000 l     O .rodata.cst4	00000004 .Lanon.03a4fb30fe0b1e0826edbdee22160072.11
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.12	00000010 .Lanon.03a4fb30fe0b1e0826edbdee22160072.12
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.13	00000009 .Lanon.03a4fb30fe0b1e0826edbdee22160072.13
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.14	00000010 .Lanon.03a4fb30fe0b1e0826edbdee22160072.14
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.15	0000000a .Lanon.03a4fb30fe0b1e0826edbdee22160072.15
00000008 l     O .rodata.cst8	00000008 .Lanon.03a4fb30fe0b1e0826edbdee22160072.16
00000004 l     O .rodata.cst4	00000004 .Lanon.03a4fb30fe0b1e0826edbdee22160072.17
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.18	00000007 .Lanon.03a4fb30fe0b1e0826edbdee22160072.18
00000008 l     O .rodata.cst4	00000004 .Lanon.03a4fb30fe0b1e0826edbdee22160072.19
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.2	00000006 .Lanon.03a4fb30fe0b1e0826edbdee22160072.2
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.20	00000010 .Lanon.03a4fb30fe0b1e0826edbdee22160072.20
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.21	0000000c .Lanon.03a4fb30fe0b1e0826edbdee22160072.21
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.22	0000000a .Lanon.03a4fb30fe0b1e0826edbdee22160072.22
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.23	00000003 .Lanon.03a4fb30fe0b1e0826edbdee22160072.23
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.24	00000003 .Lanon.03a4fb30fe0b1e0826edbdee22160072.24
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.25	00000009 .Lanon.03a4fb30fe0b1e0826edbdee22160072.25
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.26	00000006 .Lanon.03a4fb30fe0b1e0826edbdee22160072.26
00000010 l     O .rodata.cst8	00000008 .Lanon.03a4fb30fe0b1e0826edbdee22160072.27
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.3	0000000c .Lanon.03a4fb30fe0b1e0826edbdee22160072.3
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.4	00000006 .Lanon.03a4fb30fe0b1e0826edbdee22160072.4
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.5	0000000a .Lanon.03a4fb30fe0b1e0826edbdee22160072.5
00000000 l     O .rodata.cst8	00000008 .Lanon.03a4fb30fe0b1e0826edbdee22160072.6
00000000 l     O .rodata.cst16	00000010 .Lanon.03a4fb30fe0b1e0826edbdee22160072.7
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.8	00000009 .Lanon.03a4fb30fe0b1e0826edbdee22160072.8
00000000 l     O .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.9	0000000e .Lanon.03a4fb30fe0b1e0826edbdee22160072.9
00000000 l     O .rodata..Lswitch.table._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hc14e2fdde1c3bde0E	0000001c .Lswitch.table._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hc14e2fdde1c3bde0E
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h89a04f768ae3c463E	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa68f41eecc6b49aE	00000006 <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa950f429bc582ecE	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN4core3ptr18real_drop_in_place17hc64a4a24104a32c0E	00000002 core::ptr::real_drop_in_place
00000000 l     F .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h11364f783fed9fd8E	0000010c <&mut W as core::fmt::Write>::write_char
00000000 l     F .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h86dc933cd9beccbcE	00000026 <&mut W as core::fmt::Write>::write_fmt
00000000 l     F .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h546e0729d2022c8bE	00000106 <&mut W as core::fmt::Write>::write_str
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h89a04f768ae3c463E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h89a04f768ae3c463E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa68f41eecc6b49aE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa68f41eecc6b49aE
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa950f429bc582ecE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa950f429bc582ecE
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17hc64a4a24104a32c0E	00000000 .text._ZN4core3ptr18real_drop_in_place17hc64a4a24104a32c0E
00000000 l    d  .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h11364f783fed9fd8E	00000000 .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h11364f783fed9fd8E
00000000 l    d  .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h86dc933cd9beccbcE	00000000 .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h86dc933cd9beccbcE
00000000 l    d  .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h546e0729d2022c8bE	00000000 .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h546e0729d2022c8bE
00000000 l    d  .text._ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE	00000000 .text._ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE
00000000 l    d  .text._ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE	00000000 .text._ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE
00000000 l    d  .text._ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE	00000000 .text._ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE
00000000 l    d  .text._ZN8cortex_m3itm9write_fmt17h9d53bf32e43e7291E	00000000 .text._ZN8cortex_m3itm9write_fmt17h9d53bf32e43e7291E
00000000 l    d  .text._ZN8cortex_m3itm9write_str17hb31653a5b2bf7244E	00000000 .text._ZN8cortex_m3itm9write_str17hb31653a5b2bf7244E
00000000 l    d  .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h7578a0eb00caa034E	00000000 .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h7578a0eb00caa034E
00000000 l    d  .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17h76fdd13224085b53E	00000000 .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17h76fdd13224085b53E
00000000 l    d  .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h50aca468eace3c5dE	00000000 .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h50aca468eace3c5dE
00000000 l    d  .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h908af87b05db35d5E	00000000 .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h908af87b05db35d5E
00000000 l    d  .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h5334a4f75c512362E	00000000 .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h5334a4f75c512362E
00000000 l    d  .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h9dfc1aa637f8fe44E	00000000 .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h9dfc1aa637f8fe44E
00000000 l    d  .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17hfae9c4371b4bdfbbE	00000000 .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17hfae9c4371b4bdfbbE
00000000 l    d  .text._ZN8cortex_m10peripheral3itm4Stim8write_u817ha48f1a65f0546fcfE	00000000 .text._ZN8cortex_m10peripheral3itm4Stim8write_u817ha48f1a65f0546fcfE
00000000 l    d  .text._ZN8cortex_m10peripheral3itm4Stim9write_u1617hec0655698a69cdddE	00000000 .text._ZN8cortex_m10peripheral3itm4Stim9write_u1617hec0655698a69cdddE
00000000 l    d  .text._ZN8cortex_m10peripheral3itm4Stim9write_u3217h94744c483b717fb9E	00000000 .text._ZN8cortex_m10peripheral3itm4Stim9write_u3217h94744c483b717fb9E
00000000 l    d  .text._ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h54850ce75c54b604E	00000000 .text._ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h54850ce75c54b604E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17hcd66fda80d8173a2E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17hcd66fda80d8173a2E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb9Exception4irqn17h744f4eb7b4804c75E	00000000 .text._ZN8cortex_m10peripheral3scb9Exception4irqn17h744f4eb7b4804c75E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb10VectActive4from17h718b91aa48909652E	00000000 .text._ZN8cortex_m10peripheral3scb10VectActive4from17h718b91aa48909652E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17heccfc2309a171a5aE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17heccfc2309a171a5aE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h52971f434ced0cd1E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h52971f434ced0cd1E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17h0a4e35ebfa35e3d9E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17h0a4e35ebfa35e3d9E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17ha6ab7dbe7eea02d8E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17ha6ab7dbe7eea02d8E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h6e57780fc2a33faaE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h6e57780fc2a33faaE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h43cfc619e0056636E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h43cfc619e0056636E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hfd237ace41b397a6E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hfd237ace41b397a6E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h19bb3df00c8d0f20E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h19bb3df00c8d0f20E
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17heef12dc050ca96bbE	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17heef12dc050ca96bbE
00000000 l    d  .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hc14e2fdde1c3bde0E	00000000 .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hc14e2fdde1c3bde0E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17hebd79b1c334fb661E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17hebd79b1c334fb661E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17hd876475e0dc02f5cE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17hd876475e0dc02f5cE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17hbdf12157e1613375E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17hbdf12157e1613375E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17hfbaec3f56e03a2ccE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17hfbaec3f56e03a2ccE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hb881bbe636ad5372E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hb881bbe636ad5372E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h25284f4a2928c83bE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h25284f4a2928c83bE
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17hf9ae224630b79498E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17hf9ae224630b79498E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17he01a5b2069b13752E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17he01a5b2069b13752E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17h2dced3a2edd34756E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17h2dced3a2edd34756E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17he1e641e4e59c2cc1E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17he1e641e4e59c2cc1E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17h653bffcf632f1590E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17h653bffcf632f1590E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha16a6cc554c216c9E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha16a6cc554c216c9E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h0ecc3618473c3620E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h0ecc3618473c3620E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h830e9d7c82191849E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h830e9d7c82191849E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17hbfa536111c4075f8E	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17hbfa536111c4075f8E
00000000 l    d  .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hb208aed57ba06a6aE	00000000 .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hb208aed57ba06a6aE
00000000 l    d  .text._ZN8cortex_m10peripheral11Peripherals5steal17h9bf741363829216aE	00000000 .text._ZN8cortex_m10peripheral11Peripherals5steal17h9bf741363829216aE
00000000 l    d  .text._ZN8cortex_m10peripheral3CBP3new17hd47d726a567d3f5fE	00000000 .text._ZN8cortex_m10peripheral3CBP3new17hd47d726a567d3f5fE
00000000 l    d  .text._ZN8cortex_m10peripheral3CBP3ptr17haf45dc473fc0330fE	00000000 .text._ZN8cortex_m10peripheral3CBP3ptr17haf45dc473fc0330fE
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7604520799429b15E	00000000 .text._ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7604520799429b15E
00000000 l    d  .text._ZN8cortex_m10peripheral5CPUID3ptr17hc80ea147b390cebaE	00000000 .text._ZN8cortex_m10peripheral5CPUID3ptr17hc80ea147b390cebaE
00000000 l    d  .text._ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4a8498216691f9a9E	00000000 .text._ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4a8498216691f9a9E
00000000 l    d  .text._ZN8cortex_m10peripheral3DCB3ptr17h78b3fe22c2e28e8dE	00000000 .text._ZN8cortex_m10peripheral3DCB3ptr17h78b3fe22c2e28e8dE
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3cd4328c208b0ff6E	00000000 .text._ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3cd4328c208b0ff6E
00000000 l    d  .text._ZN8cortex_m10peripheral3DWT3ptr17hb496427ebf3fb5ffE	00000000 .text._ZN8cortex_m10peripheral3DWT3ptr17hb496427ebf3fb5ffE
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9d27c4b7e3eb32e6E	00000000 .text._ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9d27c4b7e3eb32e6E
00000000 l    d  .text._ZN8cortex_m10peripheral3FPB3ptr17h993eba498e294344E	00000000 .text._ZN8cortex_m10peripheral3FPB3ptr17h993eba498e294344E
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf1d116f6024df623E	00000000 .text._ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf1d116f6024df623E
00000000 l    d  .text._ZN8cortex_m10peripheral3ITM3ptr17h5a0ad36f7b8831f5E	00000000 .text._ZN8cortex_m10peripheral3ITM3ptr17h5a0ad36f7b8831f5E
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3d6481ff6e8f2947E	00000000 .text._ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3d6481ff6e8f2947E
00000000 l    d  .text._ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hbe33ab6703776b0dE	00000000 .text._ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hbe33ab6703776b0dE
00000000 l    d  .text._ZN8cortex_m10peripheral3MPU3ptr17h4341f19e794597b3E	00000000 .text._ZN8cortex_m10peripheral3MPU3ptr17h4341f19e794597b3E
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc4f368af222ead4dE	00000000 .text._ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc4f368af222ead4dE
00000000 l    d  .text._ZN8cortex_m10peripheral4NVIC3ptr17h1610280e2ba85438E	00000000 .text._ZN8cortex_m10peripheral4NVIC3ptr17h1610280e2ba85438E
00000000 l    d  .text._ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd020177778321471E	00000000 .text._ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd020177778321471E
00000000 l    d  .text._ZN8cortex_m10peripheral3SCB3ptr17ha50b864fb61b1ce8E	00000000 .text._ZN8cortex_m10peripheral3SCB3ptr17ha50b864fb61b1ce8E
00000000 l    d  .text._ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf61c4c875302d123E	00000000 .text._ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf61c4c875302d123E
00000000 l    d  .text._ZN8cortex_m10peripheral4SYST3ptr17hb441d0ab58a77d0aE	00000000 .text._ZN8cortex_m10peripheral4SYST3ptr17hb441d0ab58a77d0aE
00000000 l    d  .text._ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17h30e45bbba036df9eE	00000000 .text._ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17h30e45bbba036df9eE
00000000 l    d  .text._ZN8cortex_m10peripheral4TPIU3ptr17h3b26ac5186079818E	00000000 .text._ZN8cortex_m10peripheral4TPIU3ptr17h3b26ac5186079818E
00000000 l    d  .text._ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc88afccaf062d563E	00000000 .text._ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc88afccaf062d563E
00000000 l    d  .text._ZN8cortex_m8register7control7Control4bits17h250adff5650bed37E	00000000 .text._ZN8cortex_m8register7control7Control4bits17h250adff5650bed37E
00000000 l    d  .text._ZN8cortex_m8register7control7Control5npriv17h40ec33e7c96aea7cE	00000000 .text._ZN8cortex_m8register7control7Control5npriv17h40ec33e7c96aea7cE
00000000 l    d  .text._ZN8cortex_m8register7control7Control5spsel17hcf383b8c80a858fcE	00000000 .text._ZN8cortex_m8register7control7Control5spsel17hcf383b8c80a858fcE
00000000 l    d  .text._ZN8cortex_m8register7control7Control4fpca17h488d0fcc1527eaaeE	00000000 .text._ZN8cortex_m8register7control7Control4fpca17h488d0fcc1527eaaeE
00000000 l    d  .text._ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E	00000000 .text._ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E
00000000 l    d  .text._ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE	00000000 .text._ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE
00000000 l    d  .text._ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17h91280c64c46726a4E	00000000 .text._ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17h91280c64c46726a4E
00000000 l    d  .text._ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hf50c1551d9b72e22E	00000000 .text._ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hf50c1551d9b72e22E
00000000 l    d  .text._ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17h1bdf0328878bfa13E	00000000 .text._ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17h1bdf0328878bfa13E
00000000 l    d  .text._ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h820885d04892f1bcE	00000000 .text._ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h820885d04892f1bcE
00000000 l    d  .text._ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17ha09c9d718c63dd1cE	00000000 .text._ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17ha09c9d718c63dd1cE
00000000 l    d  .text._ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17he4ac11784d0834f9E	00000000 .text._ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17he4ac11784d0834f9E
00000000 l    d  .text._ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17hcbaedb7fab7f7139E	00000000 .text._ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17hcbaedb7fab7f7139E
00000000 l    d  .text._ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h5ec04f81b019bd52E	00000000 .text._ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h5ec04f81b019bd52E
00000000 l    d  .text._ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ddbf2c6bbe92b47E	00000000 .text._ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ddbf2c6bbe92b47E
00000000 l    d  .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.0	00000000 .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.0
00000000 l    d  .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.12	00000000 .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.12
00000000 l    d  .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.14	00000000 .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.14
00000000 l    d  .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.20	00000000 .rodata..Lanon.03a4fb30fe0b1e0826edbdee22160072.20
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     O .bss.CORE_PERIPHERALS	00000001 CORE_PERIPHERALS
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
00000000         *UND*	00000000 core::fmt::write
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::field
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::field
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000         *UND*	00000000 core::fmt::Formatter::debug_struct
00000000         *UND*	00000000 core::fmt::Formatter::debug_lower_hex
00000000         *UND*	00000000 core::fmt::Formatter::debug_upper_hex
00000000 g     F .text._ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE	00000104 <cortex_m::itm::Port as core::fmt::Write>::write_str
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7604520799429b15E	0000000a <cortex_m::peripheral::CBP as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3cd4328c208b0ff6E	0000000a <cortex_m::peripheral::DCB as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9d27c4b7e3eb32e6E	0000000a <cortex_m::peripheral::DWT as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf1d116f6024df623E	0000000a <cortex_m::peripheral::FPB as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3d6481ff6e8f2947E	00000006 <cortex_m::peripheral::ITM as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc4f368af222ead4dE	0000000a <cortex_m::peripheral::MPU as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf61c4c875302d123E	0000000a <cortex_m::peripheral::SCB as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd020177778321471E	0000000a <cortex_m::peripheral::NVIC as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17h30e45bbba036df9eE	0000000a <cortex_m::peripheral::SYST as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc88afccaf062d563E	00000008 <cortex_m::peripheral::TPIU as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h5ec04f81b019bd52E	00000034 <cortex_m::register::control::Fpca as core::fmt::Debug>::fmt
00000000 g     F .text._ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4a8498216691f9a9E	0000000a <cortex_m::peripheral::CPUID as core::ops::deref::Deref>::deref
00000000 g     F .text._ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17he4ac11784d0834f9E	00000034 <cortex_m::register::control::Npriv as core::fmt::Debug>::fmt
00000000 g     F .text._ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17hcbaedb7fab7f7139E	00000030 <cortex_m::register::control::Spsel as core::fmt::Debug>::fmt
00000000 g     F .text._ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hbe33ab6703776b0dE	00000006 <cortex_m::peripheral::ITM as core::ops::deref::DerefMut>::deref_mut
00000000 g     F .text._ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17h91280c64c46726a4E	000000a4 <cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt
00000000 g     F .text._ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17ha09c9d718c63dd1cE	00000040 <cortex_m::register::control::Control as core::fmt::Debug>::fmt
00000000 g     F .text._ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ddbf2c6bbe92b47E	00000034 <cortex_m::register::primask::Primask as core::fmt::Debug>::fmt
00000000 g     F .text._ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hf50c1551d9b72e22E	00000098 <cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt
00000000 g     F .text._ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17h1bdf0328878bfa13E	00000086 <cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt
00000000 g     F .text._ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ddbf2c6bbe92b47E	00000034 <cortex_m::register::faultmask::Faultmask as core::fmt::Debug>::fmt
00000000 g     F .text._ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h820885d04892f1bcE	00000034 <cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt
00000000 g     F .text._ZN8cortex_m10peripheral11Peripherals5steal17h9bf741363829216aE	0000000e cortex_m::peripheral::Peripherals::steal
00000000 g     F .text._ZN8cortex_m10peripheral3CBP3new17hd47d726a567d3f5fE	00000002 cortex_m::peripheral::CBP::new
00000000 g     F .text._ZN8cortex_m10peripheral3CBP3ptr17haf45dc473fc0330fE	0000000a cortex_m::peripheral::CBP::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3DCB3ptr17h78b3fe22c2e28e8dE	0000000a cortex_m::peripheral::DCB::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3DWT3ptr17hb496427ebf3fb5ffE	0000000a cortex_m::peripheral::DWT::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3FPB3ptr17h993eba498e294344E	0000000a cortex_m::peripheral::FPB::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3ITM3ptr17h5a0ad36f7b8831f5E	00000006 cortex_m::peripheral::ITM::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3MPU3ptr17h4341f19e794597b3E	0000000a cortex_m::peripheral::MPU::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3SCB3ptr17ha50b864fb61b1ce8E	0000000a cortex_m::peripheral::SCB::ptr
00000000 g     F .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h50aca468eace3c5dE	00000012 cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace
00000000 g     F .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h908af87b05db35d5E	00000012 cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace
00000000 g     F .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h5334a4f75c512362E	00000010 cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::is_debugger_attached
00000000 g     F .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17hfae9c4371b4bdfbbE	0000000c cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::get_cycle_count
00000000 g     F .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h9dfc1aa637f8fe44E	00000012 cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter
00000000 g     F .text._ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h54850ce75c54b604E	0000000c cortex_m::peripheral::itm::Stim::is_fifo_ready
00000000 g     F .text._ZN8cortex_m10peripheral3itm4Stim8write_u817ha48f1a65f0546fcfE	00000004 cortex_m::peripheral::itm::Stim::write_u8
00000000 g     F .text._ZN8cortex_m10peripheral3itm4Stim9write_u1617hec0655698a69cdddE	00000004 cortex_m::peripheral::itm::Stim::write_u16
00000000 g     F .text._ZN8cortex_m10peripheral3itm4Stim9write_u3217h94744c483b717fb9E	00000004 cortex_m::peripheral::itm::Stim::write_u32
00000000 g     F .text._ZN8cortex_m10peripheral3scb10VectActive4from17h718b91aa48909652E	00000060 cortex_m::peripheral::scb::VectActive::from
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h43cfc619e0056636E	00000010 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_pendsv
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17hcd66fda80d8173a2E	00000062 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h19bb3df00c8d0f20E	00000010 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_pendsv
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17heef12dc050ca96bbE	0000001a cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hc14e2fdde1c3bde0E	0000001a cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h6e57780fc2a33faaE	00000026 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17heccfc2309a171a5aE	00000012 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h52971f434ced0cd1E	00000012 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17h0a4e35ebfa35e3d9E	00000012 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17ha6ab7dbe7eea02d8E	00000012 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit
00000000 g     F .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hfd237ace41b397a6E	00000010 cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::is_pendsv_pending
00000000 g     F .text._ZN8cortex_m10peripheral3scb9Exception4irqn17h744f4eb7b4804c75E	00000038 cortex_m::peripheral::scb::Exception::irqn
00000000 g     F .text._ZN8cortex_m10peripheral4NVIC3ptr17h1610280e2ba85438E	0000000a cortex_m::peripheral::NVIC::ptr
00000000 g     F .text._ZN8cortex_m10peripheral4SYST3ptr17hb441d0ab58a77d0aE	0000000a cortex_m::peripheral::SYST::ptr
00000000 g     F .text._ZN8cortex_m10peripheral4TPIU3ptr17h3b26ac5186079818E	00000008 cortex_m::peripheral::TPIU::ptr
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17he01a5b2069b13752E	0000000c cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_reload
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h830e9d7c82191849E	00000016 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_precise
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hb208aed57ba06a6aE	0000000c cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_reload
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17hf9ae224630b79498E	0000000c cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_current
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17h653bffcf632f1590E	00000010 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_wrapped
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17hebd79b1c334fb661E	0000000e cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::clear_current
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17hfbaec3f56e03a2ccE	00000012 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17hd876475e0dc02f5cE	00000012 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hb881bbe636ad5372E	00000012 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h25284f4a2928c83bE	00000016 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17hbfa536111c4075f8E	0000001a cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17hbdf12157e1613375E	00000012 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17h2dced3a2edd34756E	00000010 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_ticks_per_10ms
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha16a6cc554c216c9E	00000010 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_counter_enabled
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17he1e641e4e59c2cc1E	00000010 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_reference_clock
00000000 g     F .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h0ecc3618473c3620E	00000010 cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_interrupt_enabled
00000000 g     F .text._ZN8cortex_m10peripheral5CPUID3ptr17hc80ea147b390cebaE	0000000a cortex_m::peripheral::CPUID::ptr
00000000 g     F .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h7578a0eb00caa034E	00000010 cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::select_cache
00000000 g     F .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17h76fdd13224085b53E	00000024 cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways
00000000 g     F .text._ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE	00000096 cortex_m::itm::write_aligned
00000000 g     F .text._ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE	00000102 cortex_m::itm::write_all
00000000 g     F .text._ZN8cortex_m3itm9write_fmt17h9d53bf32e43e7291E	00000028 cortex_m::itm::write_fmt
00000000 g     F .text._ZN8cortex_m3itm9write_str17hb31653a5b2bf7244E	00000102 cortex_m::itm::write_str
00000000 g     F .text._ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE	0000000c cortex_m::register::control::Fpca::is_not_active
00000000 g     F .text._ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E	0000000a cortex_m::register::control::Fpca::is_active
00000000 g     F .text._ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E	0000000a cortex_m::register::control::Npriv::is_privileged
00000000 g     F .text._ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE	0000000c cortex_m::register::control::Npriv::is_unprivileged
00000000 g     F .text._ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E	0000000a cortex_m::register::control::Spsel::is_msp
00000000 g     F .text._ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE	0000000c cortex_m::register::control::Spsel::is_psp
00000000 g     F .text._ZN8cortex_m8register7control7Control4bits17h250adff5650bed37E	00000004 cortex_m::register::control::Control::bits
00000000 g     F .text._ZN8cortex_m8register7control7Control4fpca17h488d0fcc1527eaaeE	0000000e cortex_m::register::control::Control::fpca
00000000 g     F .text._ZN8cortex_m8register7control7Control5npriv17h40ec33e7c96aea7cE	00000008 cortex_m::register::control::Control::npriv
00000000 g     F .text._ZN8cortex_m8register7control7Control5spsel17hcf383b8c80a858fcE	00000008 cortex_m::register::control::Control::spsel
00000000 g     F .text._ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE	0000000c cortex_m::register::primask::Primask::is_inactive
00000000 g     F .text._ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E	0000000a cortex_m::register::primask::Primask::is_active
00000000 g     F .text._ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE	0000000c cortex_m::register::faultmask::Faultmask::is_inactive
00000000 g     F .text._ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E	0000000a cortex_m::register::faultmask::Faultmask::is_active
00000000         *UND*	00000000 __dsb
00000000         *UND*	00000000 __nop



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h89a04f768ae3c463E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h89a04f768ae3c463E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h9e4fa01cb4d0f6d9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt>

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa68f41eecc6b49aE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa68f41eecc6b49aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	6800      	ldr	r0, [r0, #0]
   2:	f7ff bffe 	b.w	0 <<&T as core::fmt::Debug>::fmt>

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa950f429bc582ecE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa950f429bc582ecE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hf694bc8878de4d72E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17hc64a4a24104a32c0E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17hc64a4a24104a32c0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	4770      	bx	lr

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h11364f783fed9fd8E:

00000000 <<&mut W as core::fmt::Write>::write_char>:
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h11364f783fed9fd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:205
   0:	b081      	sub	sp, #4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:206
   2:	6802      	ldr	r2, [r0, #0]
   4:	2000      	movs	r0, #0
_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817hc0fc9fb3ea00bf56E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:440
   6:	2980      	cmp	r1, #128	; 0x80
_ZN4core3fmt5Write10write_char17hbf980f3190635a19E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:170
   8:	9000      	str	r0, [sp, #0]
_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817hc0fc9fb3ea00bf56E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:440
   a:	d20a      	bcs.n	22 <<&mut W as core::fmt::Write>::write_char+0x22>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:441
   c:	f88d 1000 	strb.w	r1, [sp]
  10:	4608      	mov	r0, r1
_ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:25

struct Port<'p>(&'p mut Stim);

impl<'p> fmt::Write for Port<'p> {
    fn write_str(&mut self, s: &str) -> fmt::Result {
        write_all(self.0, s.as_bytes());
  12:	6812      	ldr	r2, [r2, #0]
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  14:	6811      	ldr	r1, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
            left -= 2;
        }

        // final byte
        if left == 1 {
            while !port.is_fifo_ready() {}
  16:	2901      	cmp	r1, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  18:	bf1c      	itt	ne
  1a:	6811      	ldrne	r1, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  1c:	2901      	cmpne	r1, #1
  1e:	d144      	bne.n	aa <<&mut W as core::fmt::Write>::write_char+0xaa>
  20:	e049      	b.n	b6 <<&mut W as core::fmt::Write>::write_char+0xb6>
_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817hc0fc9fb3ea00bf56E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:443
  22:	ebb0 2fd1 	cmp.w	r0, r1, lsr #11
  26:	d10d      	bne.n	44 <<&mut W as core::fmt::Write>::write_char+0x44>
  28:	2002      	movs	r0, #2
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:444
  2a:	098b      	lsrs	r3, r1, #6
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:445
  2c:	f360 119f 	bfi	r1, r0, #6, #26
  30:	2006      	movs	r0, #6
  32:	f88d 1001 	strb.w	r1, [sp, #1]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:444
  36:	f360 135f 	bfi	r3, r0, #5, #27
  3a:	f88d 3000 	strb.w	r3, [sp]
  3e:	2000      	movs	r0, #0
  40:	2100      	movs	r1, #0
  42:	e01a      	b.n	7a <<&mut W as core::fmt::Write>::write_char+0x7a>
  44:	2000      	movs	r0, #0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:447
  46:	ebb0 4f11 	cmp.w	r0, r1, lsr #16
  4a:	d138      	bne.n	be <<&mut W as core::fmt::Write>::write_char+0xbe>
  4c:	f64f 73fe 	movw	r3, #65534	; 0xfffe
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:450
  50:	4608      	mov	r0, r1
  52:	f2c0 33ff 	movt	r3, #1023	; 0x3ff
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:449
  56:	ea4f 1c91 	mov.w	ip, r1, lsr #6
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:450
  5a:	f363 109f 	bfi	r0, r3, #6, #26
  5e:	2302      	movs	r3, #2
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:449
  60:	f363 1c9f 	bfi	ip, r3, #6, #26
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:448
  64:	0b09      	lsrs	r1, r1, #12
  66:	230e      	movs	r3, #14
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:450
  68:	f88d 0002 	strb.w	r0, [sp, #2]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:448
  6c:	f363 111f 	bfi	r1, r3, #4, #28
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:449
  70:	f88d c001 	strb.w	ip, [sp, #1]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:448
  74:	f88d 1000 	strb.w	r1, [sp]
  78:	2101      	movs	r1, #1
_ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:25
        write_all(self.0, s.as_bytes());
  7a:	6812      	ldr	r2, [r2, #0]
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  7c:	6813      	ldr	r3, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
            while !port.is_fifo_ready() {}
  7e:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  80:	bf1c      	itt	ne
  82:	6813      	ldrne	r3, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  84:	2b01      	cmpne	r3, #1
  86:	d005      	beq.n	94 <<&mut W as core::fmt::Write>::write_char+0x94>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  88:	6813      	ldr	r3, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  8a:	2b01      	cmp	r3, #1
  8c:	d002      	beq.n	94 <<&mut W as core::fmt::Write>::write_char+0x94>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  8e:	6813      	ldr	r3, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  90:	2b01      	cmp	r3, #1
  92:	d1f3      	bne.n	7c <<&mut W as core::fmt::Write>::write_char+0x7c>
  94:	f8bd 3000 	ldrh.w	r3, [sp]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:117
        if left == 1 {
  98:	2900      	cmp	r1, #0
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  9a:	8013      	strh	r3, [r2, #0]
  9c:	d00c      	beq.n	b8 <<&mut W as core::fmt::Write>::write_char+0xb8>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  9e:	6811      	ldr	r1, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
            while !port.is_fifo_ready() {}
  a0:	2901      	cmp	r1, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  a2:	bf1c      	itt	ne
  a4:	6811      	ldrne	r1, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  a6:	2901      	cmpne	r1, #1
  a8:	d005      	beq.n	b6 <<&mut W as core::fmt::Write>::write_char+0xb6>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  aa:	6811      	ldr	r1, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  ac:	2901      	cmp	r1, #1
  ae:	d002      	beq.n	b6 <<&mut W as core::fmt::Write>::write_char+0xb6>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  b0:	6811      	ldr	r1, [r2, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  b2:	2901      	cmp	r1, #1
  b4:	d1f3      	bne.n	9e <<&mut W as core::fmt::Write>::write_char+0x9e>
_ZN4core3ptr14write_volatile17hb66475e637b7fbd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  b6:	7010      	strb	r0, [r2, #0]
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h11364f783fed9fd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:207
  b8:	2000      	movs	r0, #0
  ba:	b001      	add	sp, #4
  bc:	4770      	bx	lr
  be:	2002      	movs	r0, #2
_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817hc0fc9fb3ea00bf56E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:456
  c0:	460b      	mov	r3, r1
  c2:	f360 139f 	bfi	r3, r0, #6, #26
  c6:	f88d 3003 	strb.w	r3, [sp, #3]
  ca:	23f0      	movs	r3, #240	; 0xf0
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:453
  cc:	ea43 4391 	orr.w	r3, r3, r1, lsr #18
  d0:	f88d 3000 	strb.w	r3, [sp]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:455
  d4:	098b      	lsrs	r3, r1, #6
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:454
  d6:	0b09      	lsrs	r1, r1, #12
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:455
  d8:	f360 139f 	bfi	r3, r0, #6, #26
  dc:	f88d 3002 	strb.w	r3, [sp, #2]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/char/methods.rs:454
  e0:	f360 119f 	bfi	r1, r0, #6, #26
  e4:	f88d 1001 	strb.w	r1, [sp, #1]
_ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:25
        write_all(self.0, s.as_bytes());
  e8:	6810      	ldr	r0, [r2, #0]
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  ea:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
        while !stim.is_fifo_ready() {}
  ec:	2901      	cmp	r1, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  ee:	bf1c      	itt	ne
  f0:	6801      	ldrne	r1, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  f2:	2901      	cmpne	r1, #1
  f4:	d005      	beq.n	102 <<&mut W as core::fmt::Write>::write_char+0x102>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  f6:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  f8:	2901      	cmp	r1, #1
  fa:	d002      	beq.n	102 <<&mut W as core::fmt::Write>::write_char+0x102>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  fc:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  fe:	2901      	cmp	r1, #1
 100:	d1f3      	bne.n	ea <<&mut W as core::fmt::Write>::write_char+0xea>
 102:	9900      	ldr	r1, [sp, #0]
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
 104:	6001      	str	r1, [r0, #0]
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h11364f783fed9fd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:207
 106:	2000      	movs	r0, #0
 108:	b001      	add	sp, #4
 10a:	4770      	bx	lr

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h86dc933cd9beccbcE:

00000000 <<&mut W as core::fmt::Write>::write_fmt>:
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h86dc933cd9beccbcE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:209
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b088      	sub	sp, #32
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:210
   4:	6800      	ldr	r0, [r0, #0]
   6:	aa02      	add	r2, sp, #8
   8:	9001      	str	r0, [sp, #4]
_ZN4core3fmt5Write9write_fmt17hfa2c84d9c0480f28E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:195
   a:	e891 5078 	ldmia.w	r1, {r3, r4, r5, r6, ip, lr}
   e:	4610      	mov	r0, r2
  10:	f240 0100 	movw	r1, #0
  14:	f2c0 0100 	movt	r1, #0
  18:	e880 5078 	stmia.w	r0, {r3, r4, r5, r6, ip, lr}
  1c:	a801      	add	r0, sp, #4
  1e:	f7ff fffe 	bl	0 <core::fmt::write>
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h86dc933cd9beccbcE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:211
  22:	b008      	add	sp, #32
  24:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h546e0729d2022c8bE:

00000000 <<&mut W as core::fmt::Write>::write_str>:
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:36
        if len == 0 {
   0:	2a00      	cmp	r2, #0
   2:	d07e      	beq.n	102 <<&mut W as core::fmt::Write>::write_str+0x102>
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h546e0729d2022c8bE():
   4:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:41
        if ptr as usize % 2 == 1 {
   6:	07cb      	lsls	r3, r1, #31
_ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE():
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:41
   a:	d00f      	beq.n	2c <<&mut W as core::fmt::Write>::write_str+0x2c>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   c:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
            while !port.is_fifo_ready() {}
   e:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  10:	bf1c      	itt	ne
  12:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  14:	2b01      	cmpne	r3, #1
  16:	d005      	beq.n	24 <<&mut W as core::fmt::Write>::write_str+0x24>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  18:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  1a:	2b01      	cmp	r3, #1
  1c:	d002      	beq.n	24 <<&mut W as core::fmt::Write>::write_str+0x24>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  1e:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  20:	2b01      	cmp	r3, #1
  22:	d1f3      	bne.n	c <<&mut W as core::fmt::Write>::write_str+0xc>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:43
            port.write_u8(*ptr);
  24:	f811 3b01 	ldrb.w	r3, [r1], #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:47
            len -= 1;
  28:	3a01      	subs	r2, #1
_ZN4core3ptr14write_volatile17hb66475e637b7fbd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  2a:	7003      	strb	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:51
        if ptr as usize % 4 == 2 {
  2c:	f001 0303 	and.w	r3, r1, #3
  30:	2b02      	cmp	r3, #2
  32:	d111      	bne.n	58 <<&mut W as core::fmt::Write>::write_str+0x58>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:52
            if len > 1 {
  34:	2a02      	cmp	r2, #2
  36:	d354      	bcc.n	e2 <<&mut W as core::fmt::Write>::write_str+0xe2>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  38:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
                while !port.is_fifo_ready() {}
  3a:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  3c:	bf1c      	itt	ne
  3e:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  40:	2b01      	cmpne	r3, #1
  42:	d005      	beq.n	50 <<&mut W as core::fmt::Write>::write_str+0x50>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  44:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  46:	2b01      	cmp	r3, #1
  48:	d002      	beq.n	50 <<&mut W as core::fmt::Write>::write_str+0x50>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  4a:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  4c:	2b01      	cmp	r3, #1
  4e:	d1f3      	bne.n	38 <<&mut W as core::fmt::Write>::write_str+0x38>
  50:	f831 3b02 	ldrh.w	r3, [r1], #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:59
                len -= 2;
  54:	3a02      	subs	r2, #2
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  56:	8003      	strh	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:93
        if len == 0 {
  58:	2a00      	cmp	r2, #0
  5a:	d052      	beq.n	102 <<&mut W as core::fmt::Write>::write_str+0x102>
  5c:	b5b0      	push	{r4, r5, r7, lr}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:97
        let split = len & !0b11;
  5e:	f022 0c03 	bic.w	ip, r2, #3
  62:	2300      	movs	r3, #0
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  64:	ebb3 0f92 	cmp.w	r3, r2, lsr #2
  68:	d015      	beq.n	96 <<&mut W as core::fmt::Write>::write_str+0x96>
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
  6a:	ea4f 0e92 	mov.w	lr, r2, lsr #2
  6e:	2300      	movs	r3, #0
  70:	460c      	mov	r4, r1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  72:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
        while !stim.is_fifo_ready() {}
  74:	2d01      	cmp	r5, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  76:	bf1c      	itt	ne
  78:	6805      	ldrne	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  7a:	2d01      	cmpne	r5, #1
  7c:	d005      	beq.n	8a <<&mut W as core::fmt::Write>::write_str+0x8a>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  7e:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  80:	2d01      	cmp	r5, #1
  82:	d002      	beq.n	8a <<&mut W as core::fmt::Write>::write_str+0x8a>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  84:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  86:	2d01      	cmp	r5, #1
  88:	d1f3      	bne.n	72 <<&mut W as core::fmt::Write>::write_str+0x72>
  8a:	f854 5b04 	ldr.w	r5, [r4], #4
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h2dd8ea3cc81a465cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
  8e:	3301      	adds	r3, #1
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  90:	4573      	cmp	r3, lr
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  92:	6005      	str	r5, [r0, #0]
  94:	d1ed      	bne.n	72 <<&mut W as core::fmt::Write>::write_str+0x72>
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:104
        let mut left = len & 0b11;
  96:	f002 0203 	and.w	r2, r2, #3
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb27ccb943d1d1721E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  9a:	4461      	add	r1, ip
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:108
        if left > 1 {
  9c:	2a02      	cmp	r2, #2
  9e:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  a2:	d30f      	bcc.n	c4 <<&mut W as core::fmt::Write>::write_str+0xc4>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  a4:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
            while !port.is_fifo_ready() {}
  a6:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  a8:	bf1c      	itt	ne
  aa:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  ac:	2b01      	cmpne	r3, #1
  ae:	d005      	beq.n	bc <<&mut W as core::fmt::Write>::write_str+0xbc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  b0:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  b2:	2b01      	cmp	r3, #1
  b4:	d002      	beq.n	bc <<&mut W as core::fmt::Write>::write_str+0xbc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  b6:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  b8:	2b01      	cmp	r3, #1
  ba:	d1f3      	bne.n	a4 <<&mut W as core::fmt::Write>::write_str+0xa4>
  bc:	f831 3b02 	ldrh.w	r3, [r1], #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:113
            left -= 2;
  c0:	3a02      	subs	r2, #2
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  c2:	8003      	strh	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:117
        if left == 1 {
  c4:	2a01      	cmp	r2, #1
  c6:	d11c      	bne.n	102 <<&mut W as core::fmt::Write>::write_str+0x102>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  c8:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
            while !port.is_fifo_ready() {}
  ca:	2a01      	cmp	r2, #1
  cc:	d017      	beq.n	fe <<&mut W as core::fmt::Write>::write_str+0xfe>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  ce:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  d0:	2a01      	cmp	r2, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  d2:	bf1c      	itt	ne
  d4:	6802      	ldrne	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  d6:	2a01      	cmpne	r2, #1
  d8:	d011      	beq.n	fe <<&mut W as core::fmt::Write>::write_str+0xfe>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  da:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  dc:	2a01      	cmp	r2, #1
  de:	d1f3      	bne.n	c8 <<&mut W as core::fmt::Write>::write_str+0xc8>
  e0:	e00d      	b.n	fe <<&mut W as core::fmt::Write>::write_str+0xfe>
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:61
                if len == 1 {
  e2:	2a01      	cmp	r2, #1
  e4:	d10d      	bne.n	102 <<&mut W as core::fmt::Write>::write_str+0x102>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  e6:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
                    while !port.is_fifo_ready() {}
  e8:	2a01      	cmp	r2, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  ea:	bf1c      	itt	ne
  ec:	6802      	ldrne	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  ee:	2a01      	cmpne	r2, #1
  f0:	d005      	beq.n	fe <<&mut W as core::fmt::Write>::write_str+0xfe>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  f2:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  f4:	2a01      	cmp	r2, #1
  f6:	d002      	beq.n	fe <<&mut W as core::fmt::Write>::write_str+0xfe>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  f8:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  fa:	2a01      	cmp	r2, #1
  fc:	d1f3      	bne.n	e6 <<&mut W as core::fmt::Write>::write_str+0xe6>
  fe:	7809      	ldrb	r1, [r1, #0]
 100:	7001      	strb	r1, [r0, #0]
_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h546e0729d2022c8bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:203
 102:	2000      	movs	r0, #0
 104:	4770      	bx	lr

Disassembly of section .text._ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE:

00000000 <<cortex_m::itm::Port as core::fmt::Write>::write_str>:
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:36
        if len == 0 {
   0:	2a00      	cmp	r2, #0
   2:	d07d      	beq.n	100 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x100>
_ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE():
   4:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:41
        if ptr as usize % 2 == 1 {
   6:	07cb      	lsls	r3, r1, #31
   8:	d00f      	beq.n	2a <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x2a>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   a:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
            while !port.is_fifo_ready() {}
   c:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   e:	bf1c      	itt	ne
  10:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  12:	2b01      	cmpne	r3, #1
  14:	d005      	beq.n	22 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x22>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  16:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  18:	2b01      	cmp	r3, #1
  1a:	d002      	beq.n	22 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x22>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  1c:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  1e:	2b01      	cmp	r3, #1
  20:	d1f3      	bne.n	a <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xa>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:43
            port.write_u8(*ptr);
  22:	f811 3b01 	ldrb.w	r3, [r1], #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:47
            len -= 1;
  26:	3a01      	subs	r2, #1
_ZN4core3ptr14write_volatile17hb66475e637b7fbd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  28:	7003      	strb	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:51
        if ptr as usize % 4 == 2 {
  2a:	f001 0303 	and.w	r3, r1, #3
  2e:	2b02      	cmp	r3, #2
  30:	d111      	bne.n	56 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x56>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:52
            if len > 1 {
  32:	2a02      	cmp	r2, #2
  34:	d354      	bcc.n	e0 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xe0>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  36:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
                while !port.is_fifo_ready() {}
  38:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  3a:	bf1c      	itt	ne
  3c:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  3e:	2b01      	cmpne	r3, #1
  40:	d005      	beq.n	4e <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x4e>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  42:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  44:	2b01      	cmp	r3, #1
  46:	d002      	beq.n	4e <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x4e>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  48:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  4a:	2b01      	cmp	r3, #1
  4c:	d1f3      	bne.n	36 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x36>
  4e:	f831 3b02 	ldrh.w	r3, [r1], #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:59
                len -= 2;
  52:	3a02      	subs	r2, #2
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  54:	8003      	strh	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:93
        if len == 0 {
  56:	2a00      	cmp	r2, #0
  58:	d052      	beq.n	100 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x100>
  5a:	b5b0      	push	{r4, r5, r7, lr}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:97
        let split = len & !0b11;
  5c:	f022 0c03 	bic.w	ip, r2, #3
  60:	2300      	movs	r3, #0
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  62:	ebb3 0f92 	cmp.w	r3, r2, lsr #2
  66:	d015      	beq.n	94 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x94>
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
  68:	ea4f 0e92 	mov.w	lr, r2, lsr #2
  6c:	2300      	movs	r3, #0
  6e:	460c      	mov	r4, r1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  70:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
        while !stim.is_fifo_ready() {}
  72:	2d01      	cmp	r5, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  74:	bf1c      	itt	ne
  76:	6805      	ldrne	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  78:	2d01      	cmpne	r5, #1
  7a:	d005      	beq.n	88 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x88>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  7c:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  7e:	2d01      	cmp	r5, #1
  80:	d002      	beq.n	88 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x88>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  82:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  84:	2d01      	cmp	r5, #1
  86:	d1f3      	bne.n	70 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x70>
  88:	f854 5b04 	ldr.w	r5, [r4], #4
_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h5826a54f593ea170E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
  8c:	3301      	adds	r3, #1
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  8e:	4573      	cmp	r3, lr
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  90:	6005      	str	r5, [r0, #0]
  92:	d1ed      	bne.n	70 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x70>
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:104
        let mut left = len & 0b11;
  94:	f002 0203 	and.w	r2, r2, #3
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb27ccb943d1d1721E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  98:	4461      	add	r1, ip
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:108
        if left > 1 {
  9a:	2a02      	cmp	r2, #2
  9c:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  a0:	d30f      	bcc.n	c2 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xc2>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  a2:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
            while !port.is_fifo_ready() {}
  a4:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  a6:	bf1c      	itt	ne
  a8:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  aa:	2b01      	cmpne	r3, #1
  ac:	d005      	beq.n	ba <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xba>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  ae:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  b0:	2b01      	cmp	r3, #1
  b2:	d002      	beq.n	ba <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xba>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  b4:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  b6:	2b01      	cmp	r3, #1
  b8:	d1f3      	bne.n	a2 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xa2>
  ba:	f831 3b02 	ldrh.w	r3, [r1], #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:113
            left -= 2;
  be:	3a02      	subs	r2, #2
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  c0:	8003      	strh	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:117
        if left == 1 {
  c2:	2a01      	cmp	r2, #1
  c4:	d11c      	bne.n	100 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x100>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  c6:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
            while !port.is_fifo_ready() {}
  c8:	2a01      	cmp	r2, #1
  ca:	d017      	beq.n	fc <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  cc:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  ce:	2a01      	cmp	r2, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  d0:	bf1c      	itt	ne
  d2:	6802      	ldrne	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  d4:	2a01      	cmpne	r2, #1
  d6:	d011      	beq.n	fc <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  d8:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  da:	2a01      	cmp	r2, #1
  dc:	d1f3      	bne.n	c6 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xc6>
  de:	e00d      	b.n	fc <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xfc>
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:61
                if len == 1 {
  e0:	2a01      	cmp	r2, #1
  e2:	d10d      	bne.n	100 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0x100>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  e4:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
                    while !port.is_fifo_ready() {}
  e6:	2a01      	cmp	r2, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  e8:	bf1c      	itt	ne
  ea:	6802      	ldrne	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  ec:	2a01      	cmpne	r2, #1
  ee:	d005      	beq.n	fc <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  f0:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  f2:	2a01      	cmp	r2, #1
  f4:	d002      	beq.n	fc <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  f6:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  f8:	2a01      	cmp	r2, #1
  fa:	d1f3      	bne.n	e4 <<cortex_m::itm::Port as core::fmt::Write>::write_str+0xe4>
  fc:	7809      	ldrb	r1, [r1, #0]
  fe:	7001      	strb	r1, [r0, #0]
_ZN56_$LT$cortex_m..itm..Port$u20$as$u20$core..fmt..Write$GT$9write_str17h3d802ffc22da5c5eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:27
    }
 100:	2000      	movs	r0, #0
 102:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE:

00000000 <cortex_m::itm::write_all>:
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:36
        if len == 0 {
   0:	2a00      	cmp	r2, #0
   2:	d07d      	beq.n	100 <cortex_m::itm::write_all+0x100>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:41
        if ptr as usize % 2 == 1 {
   4:	07cb      	lsls	r3, r1, #31
   6:	d00f      	beq.n	28 <cortex_m::itm::write_all+0x28>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
            while !port.is_fifo_ready() {}
   a:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   c:	bf1c      	itt	ne
   e:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  10:	2b01      	cmpne	r3, #1
  12:	d005      	beq.n	20 <cortex_m::itm::write_all+0x20>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  14:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  16:	2b01      	cmp	r3, #1
  18:	d002      	beq.n	20 <cortex_m::itm::write_all+0x20>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  1a:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  1c:	2b01      	cmp	r3, #1
  1e:	d1f3      	bne.n	8 <cortex_m::itm::write_all+0x8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:43
            port.write_u8(*ptr);
  20:	f811 3b01 	ldrb.w	r3, [r1], #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:47
            len -= 1;
  24:	3a01      	subs	r2, #1
_ZN4core3ptr14write_volatile17hb66475e637b7fbd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  26:	7003      	strb	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:51
        if ptr as usize % 4 == 2 {
  28:	f001 0303 	and.w	r3, r1, #3
  2c:	2b02      	cmp	r3, #2
  2e:	d111      	bne.n	54 <cortex_m::itm::write_all+0x54>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:52
            if len > 1 {
  30:	2a02      	cmp	r2, #2
  32:	d355      	bcc.n	e0 <cortex_m::itm::write_all+0xe0>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  34:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
                while !port.is_fifo_ready() {}
  36:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  38:	bf1c      	itt	ne
  3a:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  3c:	2b01      	cmpne	r3, #1
  3e:	d005      	beq.n	4c <cortex_m::itm::write_all+0x4c>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  40:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  42:	2b01      	cmp	r3, #1
  44:	d002      	beq.n	4c <cortex_m::itm::write_all+0x4c>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  46:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  48:	2b01      	cmp	r3, #1
  4a:	d1f3      	bne.n	34 <cortex_m::itm::write_all+0x34>
  4c:	f831 3b02 	ldrh.w	r3, [r1], #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:59
                len -= 2;
  50:	3a02      	subs	r2, #2
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  52:	8003      	strh	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:93
        if len == 0 {
  54:	2a00      	cmp	r2, #0
  56:	d053      	beq.n	100 <cortex_m::itm::write_all+0x100>
  58:	b5b0      	push	{r4, r5, r7, lr}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:97
        let split = len & !0b11;
  5a:	f022 0c03 	bic.w	ip, r2, #3
  5e:	2300      	movs	r3, #0
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  60:	ebb3 0f92 	cmp.w	r3, r2, lsr #2
  64:	d015      	beq.n	92 <cortex_m::itm::write_all+0x92>
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
  66:	ea4f 0e92 	mov.w	lr, r2, lsr #2
  6a:	2300      	movs	r3, #0
  6c:	460c      	mov	r4, r1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  6e:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
        while !stim.is_fifo_ready() {}
  70:	2d01      	cmp	r5, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  72:	bf1c      	itt	ne
  74:	6805      	ldrne	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  76:	2d01      	cmpne	r5, #1
  78:	d005      	beq.n	86 <cortex_m::itm::write_all+0x86>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  7a:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  7c:	2d01      	cmp	r5, #1
  7e:	d002      	beq.n	86 <cortex_m::itm::write_all+0x86>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  80:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  82:	2d01      	cmp	r5, #1
  84:	d1f3      	bne.n	6e <cortex_m::itm::write_all+0x6e>
  86:	f854 5b04 	ldr.w	r5, [r4], #4
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h2dd8ea3cc81a465cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
  8a:	3301      	adds	r3, #1
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  8c:	4573      	cmp	r3, lr
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  8e:	6005      	str	r5, [r0, #0]
  90:	d1ed      	bne.n	6e <cortex_m::itm::write_all+0x6e>
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:104
        let mut left = len & 0b11;
  92:	f002 0203 	and.w	r2, r2, #3
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb27ccb943d1d1721E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  96:	4461      	add	r1, ip
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:108
        if left > 1 {
  98:	2a02      	cmp	r2, #2
  9a:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  9e:	d30f      	bcc.n	c0 <cortex_m::itm::write_all+0xc0>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  a0:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
            while !port.is_fifo_ready() {}
  a2:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  a4:	bf1c      	itt	ne
  a6:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  a8:	2b01      	cmpne	r3, #1
  aa:	d005      	beq.n	b8 <cortex_m::itm::write_all+0xb8>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  ac:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  ae:	2b01      	cmp	r3, #1
  b0:	d002      	beq.n	b8 <cortex_m::itm::write_all+0xb8>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  b2:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  b4:	2b01      	cmp	r3, #1
  b6:	d1f3      	bne.n	a0 <cortex_m::itm::write_all+0xa0>
  b8:	f831 3b02 	ldrh.w	r3, [r1], #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:113
            left -= 2;
  bc:	3a02      	subs	r2, #2
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  be:	8003      	strh	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:117
        if left == 1 {
  c0:	2a01      	cmp	r2, #1
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:73
}
  c2:	bf18      	it	ne
  c4:	4770      	bxne	lr
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  c6:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
            while !port.is_fifo_ready() {}
  c8:	2a01      	cmp	r2, #1
  ca:	d017      	beq.n	fc <cortex_m::itm::write_all+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  cc:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  ce:	2a01      	cmp	r2, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  d0:	bf1c      	itt	ne
  d2:	6802      	ldrne	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  d4:	2a01      	cmpne	r2, #1
  d6:	d011      	beq.n	fc <cortex_m::itm::write_all+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  d8:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  da:	2a01      	cmp	r2, #1
  dc:	d1f3      	bne.n	c6 <cortex_m::itm::write_all+0xc6>
  de:	e00d      	b.n	fc <cortex_m::itm::write_all+0xfc>
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:61
                if len == 1 {
  e0:	2a01      	cmp	r2, #1
  e2:	d10d      	bne.n	100 <cortex_m::itm::write_all+0x100>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  e4:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
                    while !port.is_fifo_ready() {}
  e6:	2a01      	cmp	r2, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  e8:	bf1c      	itt	ne
  ea:	6802      	ldrne	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  ec:	2a01      	cmpne	r2, #1
  ee:	d005      	beq.n	fc <cortex_m::itm::write_all+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  f0:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  f2:	2a01      	cmp	r2, #1
  f4:	d002      	beq.n	fc <cortex_m::itm::write_all+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  f6:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  f8:	2a01      	cmp	r2, #1
  fa:	d1f3      	bne.n	e4 <cortex_m::itm::write_all+0xe4>
  fc:	7809      	ldrb	r1, [r1, #0]
  fe:	7001      	strb	r1, [r0, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:73
}
 100:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE:

00000000 <cortex_m::itm::write_aligned>:
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:93
        if len == 0 {
   0:	2a00      	cmp	r2, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:122
            port.write_u8(*ptr);
        }
    }
}
   2:	bf08      	it	eq
   4:	4770      	bxeq	lr
   6:	b5b0      	push	{r4, r5, r7, lr}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:97
        let split = len & !0b11;
   8:	f022 0c03 	bic.w	ip, r2, #3
   c:	2300      	movs	r3, #0
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
   e:	ebb3 0f92 	cmp.w	r3, r2, lsr #2
  12:	d015      	beq.n	40 <cortex_m::itm::write_aligned+0x40>
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
  14:	ea4f 0e92 	mov.w	lr, r2, lsr #2
  18:	2300      	movs	r3, #0
  1a:	460c      	mov	r4, r1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  1c:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
        while !stim.is_fifo_ready() {}
  1e:	2d01      	cmp	r5, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  20:	bf1c      	itt	ne
  22:	6805      	ldrne	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  24:	2d01      	cmpne	r5, #1
  26:	d005      	beq.n	34 <cortex_m::itm::write_aligned+0x34>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  28:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  2a:	2d01      	cmp	r5, #1
  2c:	d002      	beq.n	34 <cortex_m::itm::write_aligned+0x34>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  2e:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  30:	2d01      	cmp	r5, #1
  32:	d1f3      	bne.n	1c <cortex_m::itm::write_aligned+0x1c>
  34:	f854 5b04 	ldr.w	r5, [r4], #4
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h2dd8ea3cc81a465cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
  38:	3301      	adds	r3, #1
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  3a:	4573      	cmp	r3, lr
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  3c:	6005      	str	r5, [r0, #0]
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  3e:	d1ed      	bne.n	1c <cortex_m::itm::write_aligned+0x1c>
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:104
        let mut left = len & 0b11;
  40:	f002 0203 	and.w	r2, r2, #3
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb27ccb943d1d1721E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  44:	4461      	add	r1, ip
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:108
        if left > 1 {
  46:	2a02      	cmp	r2, #2
  48:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  4c:	d202      	bcs.n	54 <cortex_m::itm::write_aligned+0x54>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:117
        if left == 1 {
  4e:	2a01      	cmp	r2, #1
  50:	d012      	beq.n	78 <cortex_m::itm::write_aligned+0x78>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:122
}
  52:	4770      	bx	lr
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  54:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
            while !port.is_fifo_ready() {}
  56:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  58:	bf1c      	itt	ne
  5a:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  5c:	2b01      	cmpne	r3, #1
  5e:	d005      	beq.n	6c <cortex_m::itm::write_aligned+0x6c>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  60:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  62:	2b01      	cmp	r3, #1
  64:	d002      	beq.n	6c <cortex_m::itm::write_aligned+0x6c>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  66:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  68:	2b01      	cmp	r3, #1
  6a:	d1f3      	bne.n	54 <cortex_m::itm::write_aligned+0x54>
  6c:	f831 3b02 	ldrh.w	r3, [r1], #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:113
            left -= 2;
  70:	3a02      	subs	r2, #2
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  72:	8003      	strh	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:117
        if left == 1 {
  74:	2a01      	cmp	r2, #1
  76:	d1ec      	bne.n	52 <cortex_m::itm::write_aligned+0x52>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  78:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
            while !port.is_fifo_ready() {}
  7a:	2a01      	cmp	r2, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  7c:	bf1c      	itt	ne
  7e:	6802      	ldrne	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  80:	2a01      	cmpne	r2, #1
  82:	d005      	beq.n	90 <cortex_m::itm::write_aligned+0x90>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  84:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  86:	2a01      	cmp	r2, #1
  88:	d002      	beq.n	90 <cortex_m::itm::write_aligned+0x90>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  8a:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  8c:	2a01      	cmp	r2, #1
  8e:	d1f3      	bne.n	78 <cortex_m::itm::write_aligned+0x78>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:119
            port.write_u8(*ptr);
  90:	7809      	ldrb	r1, [r1, #0]
_ZN4core3ptr14write_volatile17hb66475e637b7fbd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  92:	7001      	strb	r1, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:122
}
  94:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m3itm9write_fmt17h9d53bf32e43e7291E:

00000000 <cortex_m::itm::write_fmt>:
_ZN8cortex_m3itm9write_fmt17h9d53bf32e43e7291E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:125

/// Writes `fmt::Arguments` to the ITM `port`
pub fn write_fmt(port: &mut Stim, args: fmt::Arguments) {
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b088      	sub	sp, #32
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:128
    use core::fmt::Write;

    Port(port).write_fmt(args).ok();
   4:	9000      	str	r0, [sp, #0]
   6:	4668      	mov	r0, sp
   8:	9001      	str	r0, [sp, #4]
   a:	aa02      	add	r2, sp, #8
_ZN4core3fmt5Write9write_fmt17hfa2c84d9c0480f28E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:195
   c:	e891 5078 	ldmia.w	r1, {r3, r4, r5, r6, ip, lr}
  10:	f240 0100 	movw	r1, #0
  14:	4610      	mov	r0, r2
  16:	f2c0 0100 	movt	r1, #0
  1a:	e880 5078 	stmia.w	r0, {r3, r4, r5, r6, ip, lr}
  1e:	a801      	add	r0, sp, #4
  20:	f7ff fffe 	bl	0 <core::fmt::write>
_ZN8cortex_m3itm9write_fmt17h9d53bf32e43e7291E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:129
}
  24:	b008      	add	sp, #32
  26:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN8cortex_m3itm9write_str17hb31653a5b2bf7244E:

00000000 <cortex_m::itm::write_str>:
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:36
        if len == 0 {
   0:	2a00      	cmp	r2, #0
   2:	d07d      	beq.n	100 <cortex_m::itm::write_str+0x100>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:41
        if ptr as usize % 2 == 1 {
   4:	07cb      	lsls	r3, r1, #31
   6:	d00f      	beq.n	28 <cortex_m::itm::write_str+0x28>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
            while !port.is_fifo_ready() {}
   a:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   c:	bf1c      	itt	ne
   e:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  10:	2b01      	cmpne	r3, #1
  12:	d005      	beq.n	20 <cortex_m::itm::write_str+0x20>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  14:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  16:	2b01      	cmp	r3, #1
  18:	d002      	beq.n	20 <cortex_m::itm::write_str+0x20>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  1a:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:42
  1c:	2b01      	cmp	r3, #1
  1e:	d1f3      	bne.n	8 <cortex_m::itm::write_str+0x8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:43
            port.write_u8(*ptr);
  20:	f811 3b01 	ldrb.w	r3, [r1], #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:47
            len -= 1;
  24:	3a01      	subs	r2, #1
_ZN4core3ptr14write_volatile17hb66475e637b7fbd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  26:	7003      	strb	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:51
        if ptr as usize % 4 == 2 {
  28:	f001 0303 	and.w	r3, r1, #3
  2c:	2b02      	cmp	r3, #2
  2e:	d111      	bne.n	54 <cortex_m::itm::write_str+0x54>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:52
            if len > 1 {
  30:	2a02      	cmp	r2, #2
  32:	d355      	bcc.n	e0 <cortex_m::itm::write_str+0xe0>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  34:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
                while !port.is_fifo_ready() {}
  36:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  38:	bf1c      	itt	ne
  3a:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  3c:	2b01      	cmpne	r3, #1
  3e:	d005      	beq.n	4c <cortex_m::itm::write_str+0x4c>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  40:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  42:	2b01      	cmp	r3, #1
  44:	d002      	beq.n	4c <cortex_m::itm::write_str+0x4c>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  46:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:54
  48:	2b01      	cmp	r3, #1
  4a:	d1f3      	bne.n	34 <cortex_m::itm::write_str+0x34>
  4c:	f831 3b02 	ldrh.w	r3, [r1], #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:59
                len -= 2;
  50:	3a02      	subs	r2, #2
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  52:	8003      	strh	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:93
        if len == 0 {
  54:	2a00      	cmp	r2, #0
  56:	d053      	beq.n	100 <cortex_m::itm::write_str+0x100>
  58:	b5b0      	push	{r4, r5, r7, lr}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:97
        let split = len & !0b11;
  5a:	f022 0c03 	bic.w	ip, r2, #3
  5e:	2300      	movs	r3, #0
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  60:	ebb3 0f92 	cmp.w	r3, r2, lsr #2
  64:	d015      	beq.n	92 <cortex_m::itm::write_str+0x92>
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
  66:	ea4f 0e92 	mov.w	lr, r2, lsr #2
  6a:	2300      	movs	r3, #0
  6c:	460c      	mov	r4, r1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  6e:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
        while !stim.is_fifo_ready() {}
  70:	2d01      	cmp	r5, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  72:	bf1c      	itt	ne
  74:	6805      	ldrne	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  76:	2d01      	cmpne	r5, #1
  78:	d005      	beq.n	86 <cortex_m::itm::write_str+0x86>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  7a:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  7c:	2d01      	cmp	r5, #1
  7e:	d002      	beq.n	86 <cortex_m::itm::write_str+0x86>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  80:	6805      	ldr	r5, [r0, #0]
_ZN8cortex_m3itm11write_words17he453a2396218a5deE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:15
  82:	2d01      	cmp	r5, #1
  84:	d1f3      	bne.n	6e <cortex_m::itm::write_str+0x6e>
  86:	f854 5b04 	ldr.w	r5, [r4], #4
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h2dd8ea3cc81a465cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
  8a:	3301      	adds	r3, #1
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h30e956ebe71272dbE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  8c:	4573      	cmp	r3, lr
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  8e:	6005      	str	r5, [r0, #0]
  90:	d1ed      	bne.n	6e <cortex_m::itm::write_str+0x6e>
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:104
        let mut left = len & 0b11;
  92:	f002 0203 	and.w	r2, r2, #3
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb27ccb943d1d1721E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  96:	4461      	add	r1, ip
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:108
        if left > 1 {
  98:	2a02      	cmp	r2, #2
  9a:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  9e:	d30f      	bcc.n	c0 <cortex_m::itm::write_str+0xc0>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  a0:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
            while !port.is_fifo_ready() {}
  a2:	2b01      	cmp	r3, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  a4:	bf1c      	itt	ne
  a6:	6803      	ldrne	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  a8:	2b01      	cmpne	r3, #1
  aa:	d005      	beq.n	b8 <cortex_m::itm::write_str+0xb8>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  ac:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  ae:	2b01      	cmp	r3, #1
  b0:	d002      	beq.n	b8 <cortex_m::itm::write_str+0xb8>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  b2:	6803      	ldr	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:109
  b4:	2b01      	cmp	r3, #1
  b6:	d1f3      	bne.n	a0 <cortex_m::itm::write_str+0xa0>
  b8:	f831 3b02 	ldrh.w	r3, [r1], #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:113
            left -= 2;
  bc:	3a02      	subs	r2, #2
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  be:	8003      	strh	r3, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:117
        if left == 1 {
  c0:	2a01      	cmp	r2, #1
_ZN8cortex_m3itm9write_str17hb31653a5b2bf7244E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:134

/// Writes a string to the ITM `port`
pub fn write_str(port: &mut Stim, string: &str) {
    write_all(port, string.as_bytes())
}
  c2:	bf18      	it	ne
  c4:	4770      	bxne	lr
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  c6:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
            while !port.is_fifo_ready() {}
  c8:	2a01      	cmp	r2, #1
  ca:	d017      	beq.n	fc <cortex_m::itm::write_str+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  cc:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  ce:	2a01      	cmp	r2, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  d0:	bf1c      	itt	ne
  d2:	6802      	ldrne	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  d4:	2a01      	cmpne	r2, #1
  d6:	d011      	beq.n	fc <cortex_m::itm::write_str+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  d8:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm13write_aligned17h24bc9e12121c3d9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:118
  da:	2a01      	cmp	r2, #1
  dc:	d1f3      	bne.n	c6 <cortex_m::itm::write_str+0xc6>
  de:	e00d      	b.n	fc <cortex_m::itm::write_str+0xfc>
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:61
                if len == 1 {
  e0:	2a01      	cmp	r2, #1
  e2:	d10d      	bne.n	100 <cortex_m::itm::write_str+0x100>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  e4:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
                    while !port.is_fifo_ready() {}
  e6:	2a01      	cmp	r2, #1
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  e8:	bf1c      	itt	ne
  ea:	6802      	ldrne	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  ec:	2a01      	cmpne	r2, #1
  ee:	d005      	beq.n	fc <cortex_m::itm::write_str+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  f0:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  f2:	2a01      	cmp	r2, #1
  f4:	d002      	beq.n	fc <cortex_m::itm::write_str+0xfc>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  f6:	6802      	ldr	r2, [r0, #0]
_ZN8cortex_m3itm9write_all17h58d67c9bafda9aeeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:63
  f8:	2a01      	cmp	r2, #1
  fa:	d1f3      	bne.n	e4 <cortex_m::itm::write_str+0xe4>
  fc:	7809      	ldrb	r1, [r1, #0]
  fe:	7001      	strb	r1, [r0, #0]
_ZN8cortex_m3itm9write_str17hb31653a5b2bf7244E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/itm.rs:134
}
 100:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h7578a0eb00caa034E:

00000000 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::select_cache>:
_ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h7578a0eb00caa034E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:84
    ///
    /// * `level`: the required cache level minus 1, e.g. 0 for L1, 1 for L2
    /// * `ind`: select instruction cache or data/unified cache
    ///
    /// `level` is masked to be between 0 and 7.
    pub fn select_cache(&mut self, level: u8, ind: CsselrCacheType) {
   0:	f64e 5084 	movw	r0, #60804	; 0xed84
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:92
        const CSSELR_LEVEL_POS: u32 = 1;
        const CSSELR_LEVEL_MASK: u32 = 0x7 << CSSELR_LEVEL_POS;

        unsafe {
            self.csselr.write(
                (((level as u32) << CSSELR_LEVEL_POS) & CSSELR_LEVEL_MASK)
   4:	f361 0243 	bfi	r2, r1, #1, #3
   8:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   c:	6002      	str	r2, [r0, #0]
_ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h7578a0eb00caa034E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:96
                    | (((ind as u32) << CSSELR_IND_POS) & CSSELR_IND_MASK),
            )
        }
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17h76fdd13224085b53E:

00000000 <cortex_m::peripheral::cpuid::<impl cortex_m::peripheral::CPUID>::cache_num_sets_ways>:
_ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17h76fdd13224085b53E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:99

    /// Returns the number of sets and ways in the selected cache
    pub fn cache_num_sets_ways(&mut self, level: u8, ind: CsselrCacheType) -> (u16, u16) {
   0:	b510      	push	{r4, lr}
   2:	f64e 5480 	movw	r4, #60800	; 0xed80
_ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$12select_cache17h7578a0eb00caa034E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:92
                (((level as u32) << CSSELR_LEVEL_POS) & CSSELR_LEVEL_MASK)
   6:	f361 0243 	bfi	r2, r1, #1, #3
   a:	f2ce 0400 	movt	r4, #57344	; 0xe000
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6062      	str	r2, [r4, #4]
_ZN8cortex_m3asm3dsb17hff2eff7373b7ee67E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/asm.rs:191
        () => unsafe {
            extern "C" {
                fn __dsb();
            }

            __dsb()
  10:	f7ff fffe 	bl	0 <__dsb>
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  14:	6821      	ldr	r1, [r4, #0]
_ZN8cortex_m10peripheral5cpuid45_$LT$impl$u20$cortex_m..peripheral..CPUID$GT$19cache_num_sets_ways17h76fdd13224085b53E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:109

        self.select_cache(level, ind);
        ::asm::dsb();
        let ccsidr = self.ccsidr.read();
        (
            (1 + ((ccsidr & CCSIDR_NUMSETS_MASK) >> CCSIDR_NUMSETS_POS)) as u16,
  16:	f3c1 304e 	ubfx	r0, r1, #13, #15
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:110
            (1 + ((ccsidr & CCSIDR_ASSOCIATIVITY_MASK) >> CCSIDR_ASSOCIATIVITY_POS)) as u16,
  1a:	f3c1 01c9 	ubfx	r1, r1, #3, #10
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:109
            (1 + ((ccsidr & CCSIDR_NUMSETS_MASK) >> CCSIDR_NUMSETS_POS)) as u16,
  1e:	3001      	adds	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:110
            (1 + ((ccsidr & CCSIDR_ASSOCIATIVITY_MASK) >> CCSIDR_ASSOCIATIVITY_POS)) as u16,
  20:	3101      	adds	r1, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/cpuid.rs:112
        )
    }
  22:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h50aca468eace3c5dE:

00000000 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::enable_trace>:
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h50aca468eace3c5dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dcb.rs:28
impl DCB {
    /// Enables TRACE. This is for example required by the
    /// `peripheral::DWT` cycle counter to work properly.
    /// As by STM documentation, this flag is not reset on
    /// soft-reset, only on power reset.
    pub fn enable_trace(&mut self) {
   0:	f64e 50fc 	movw	r0, #60924	; 0xedfc
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace28_$u7b$$u7b$closure$u7d$$u7d$17hf5bbf01b3c8e32ecE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dcb.rs:31
        // set bit 24 / TRCENA
        unsafe {
            self.demcr.modify(|w| w | DCB_DEMCR_TRCENA);
   a:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$12enable_trace17h50aca468eace3c5dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dcb.rs:33
        }
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h908af87b05db35d5E:

00000000 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::disable_trace>:
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h908af87b05db35d5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dcb.rs:36

    /// Disables TRACE. See `DCB::enable_trace()` for more details
    pub fn disable_trace(&mut self) {
   0:	f64e 50fc 	movw	r0, #60924	; 0xedfc
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace28_$u7b$$u7b$closure$u7d$$u7d$17h99e4f9c8867443ebE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dcb.rs:39
        // unset bit 24 / TRCENA
        unsafe {
            self.demcr.modify(|w| w & !DCB_DEMCR_TRCENA);
   a:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$13disable_trace17h908af87b05db35d5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dcb.rs:41
        }
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h5334a4f75c512362E:

00000000 <cortex_m::peripheral::dcb::<impl cortex_m::peripheral::DCB>::is_debugger_attached>:
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h5334a4f75c512362E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dcb.rs:50
    /// Note: This function is [reported not to
    /// work](http://web.archive.org/web/20180821191012/https://community.nxp.com/thread/424925#comment-782843)
    /// on Cortex-M0 devices. Per the ARM v6-M Architecture Reference Manual, "Access to the DHCSR
    /// from software running on the processor is IMPLEMENTATION DEFINED". Indeed, from the
    /// [Cortex-M0+ r0p1 Technical Reference Manual](http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0484c/BABJHEIG.html), "Note Software cannot access the debug registers."
    pub fn is_debugger_attached() -> bool {
   0:	f64e 50f0 	movw	r0, #60912	; 0xedf0
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h01bcc0833c058e8fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	7800      	ldrb	r0, [r0, #0]
_ZN8cortex_m10peripheral3dcb43_$LT$impl$u20$cortex_m..peripheral..DCB$GT$20is_debugger_attached17h5334a4f75c512362E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dcb.rs:56
        unsafe {
            // do an 8-bit read of the 32-bit DHCSR register, and get the LSB
            let value = ptr::read_volatile(Self::ptr() as *const u8);
            value & 0x1 == 1
        }
    }
   a:	f000 0001 	and.w	r0, r0, #1
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h9dfc1aa637f8fe44E:

00000000 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::enable_cycle_counter>:
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h9dfc1aa637f8fe44E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dwt.rs:68
}

impl DWT {
    /// Enables the cycle counter
    #[cfg(not(armv6m))]
    pub fn enable_cycle_counter(&mut self) {
   0:	f241 0000 	movw	r0, #4096	; 0x1000
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter28_$u7b$$u7b$closure$u7d$$u7d$17h8d08571f8cddc267E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dwt.rs:69
        unsafe { self.ctrl.modify(|r| r | 1) }
   a:	f041 0101 	orr.w	r1, r1, #1
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$20enable_cycle_counter17h9dfc1aa637f8fe44E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dwt.rs:70
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17hfae9c4371b4bdfbbE:

00000000 <cortex_m::peripheral::dwt::<impl cortex_m::peripheral::DWT>::get_cycle_count>:
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17hfae9c4371b4bdfbbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dwt.rs:74

    /// Returns the current clock cycle count
    #[cfg(not(armv6m))]
    pub fn get_cycle_count() -> u32 {
   0:	f241 0004 	movw	r0, #4100	; 0x1004
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral3dwt43_$LT$impl$u20$cortex_m..peripheral..DWT$GT$15get_cycle_count17hfae9c4371b4bdfbbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/dwt.rs:77
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).cyccnt.read() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3itm4Stim8write_u817ha48f1a65f0546fcfE:

00000000 <cortex_m::peripheral::itm::Stim::write_u8>:
_ZN4core3ptr14write_volatile17hb66475e637b7fbd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   0:	7001      	strb	r1, [r0, #0]
_ZN8cortex_m10peripheral3itm4Stim8write_u817ha48f1a65f0546fcfE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/itm.rs:40

impl Stim {
    /// Writes an `u8` payload into the stimulus port
    pub fn write_u8(&mut self, value: u8) {
        unsafe { ptr::write_volatile(self.register.get() as *mut u8, value) }
    }
   2:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3itm4Stim9write_u1617hec0655698a69cdddE:

00000000 <cortex_m::peripheral::itm::Stim::write_u16>:
_ZN4core3ptr14write_volatile17h0197dcfbfca35043E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   0:	8001      	strh	r1, [r0, #0]
_ZN8cortex_m10peripheral3itm4Stim9write_u1617hec0655698a69cdddE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/itm.rs:45

    /// Writes an `u16` payload into the stimulus port
    pub fn write_u16(&mut self, value: u16) {
        unsafe { ptr::write_volatile(self.register.get() as *mut u16, value) }
    }
   2:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3itm4Stim9write_u3217h94744c483b717fb9E:

00000000 <cortex_m::peripheral::itm::Stim::write_u32>:
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   0:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3itm4Stim9write_u3217h94744c483b717fb9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/itm.rs:50

    /// Writes an `u32` payload into the stimulus port
    pub fn write_u32(&mut self, value: u32) {
        unsafe { ptr::write_volatile(self.register.get(), value) }
    }
   2:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h54850ce75c54b604E:

00000000 <cortex_m::peripheral::itm::Stim::is_fifo_ready>:
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   0:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral3itm4Stim13is_fifo_ready17h54850ce75c54b604E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/itm.rs:54

    /// Returns `true` if the stimulus port is ready to accept more data
    pub fn is_fifo_ready(&self) -> bool {
        unsafe { ptr::read_volatile(self.register.get()) == 1 }
   2:	3801      	subs	r0, #1
   4:	fab0 f080 	clz	r0, r0
   8:	0940      	lsrs	r0, r0, #5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/itm.rs:55
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17hcd66fda80d8173a2E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$11vect_active17hcd66fda80d8173a2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:165
    }
}

impl SCB {
    /// Returns the active exception number
    pub fn vect_active() -> VectActive {
   0:	f64e 5004 	movw	r0, #60676	; 0xed04
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
   8:	6800      	ldr	r0, [r0, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:168
        let icsr = unsafe { ptr::read(&(*SCB::ptr()).icsr as *const _ as *const u32) };

        match icsr as u8 {
   a:	b2c2      	uxtb	r2, r0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:169
            0 => VectActive::ThreadMode,
   c:	2a0f      	cmp	r2, #15
   e:	d80c      	bhi.n	2a <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::vect_active+0x2a>
  10:	e8df f002 	tbb	[pc, r2]
  14:	0f080b0e 	.word	0x0f080b0e
  18:	0b181512 	.word	0x0b181512
  1c:	1b0b0b0b 	.word	0x1b0b0b0b
  20:	24210b1e 	.word	0x24210b1e
  24:	2001      	movs	r0, #1
  26:	2100      	movs	r1, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:187
            12 => VectActive::Exception(Exception::DebugMonitor),
            14 => VectActive::Exception(Exception::PendSV),
            15 => VectActive::Exception(Exception::SysTick),
            irqn => VectActive::Interrupt { irqn: irqn - 16 },
        }
    }
  28:	4770      	bx	lr
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:185
            irqn => VectActive::Interrupt { irqn: irqn - 16 },
  2a:	f1a0 0110 	sub.w	r1, r0, #16
  2e:	2002      	movs	r0, #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:187
    }
  30:	4770      	bx	lr
  32:	2101      	movs	r1, #1
  34:	2001      	movs	r0, #1
  36:	4770      	bx	lr
  38:	2001      	movs	r0, #1
  3a:	2102      	movs	r1, #2
  3c:	4770      	bx	lr
  3e:	2001      	movs	r0, #1
  40:	2103      	movs	r1, #3
  42:	4770      	bx	lr
  44:	2001      	movs	r0, #1
  46:	2104      	movs	r1, #4
  48:	4770      	bx	lr
  4a:	2001      	movs	r0, #1
  4c:	2105      	movs	r1, #5
  4e:	4770      	bx	lr
  50:	2001      	movs	r0, #1
  52:	2106      	movs	r1, #6
  54:	4770      	bx	lr
  56:	2001      	movs	r0, #1
  58:	2107      	movs	r1, #7
  5a:	4770      	bx	lr
  5c:	2001      	movs	r0, #1
  5e:	2108      	movs	r1, #8
  60:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb9Exception4irqn17h744f4eb7b4804c75E:

00000000 <cortex_m::peripheral::scb::Exception::irqn>:
_ZN8cortex_m10peripheral3scb9Exception4irqn17h744f4eb7b4804c75E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:235
    /// Returns the IRQ number of this `Exception`
    ///
    /// The return value is always within the closed range `[-1, -14]`
    pub fn irqn(&self) -> i8 {
        match *self {
            Exception::NonMaskableInt => -14,
   0:	7800      	ldrb	r0, [r0, #0]
   2:	3801      	subs	r0, #1
   4:	2807      	cmp	r0, #7
   6:	bf84      	itt	hi
   8:	20f2      	movhi	r0, #242	; 0xf2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:251
            #[cfg(not(armv6m))]
            Exception::DebugMonitor => -4,
            Exception::PendSV => -2,
            Exception::SysTick => -1,
        }
    }
   a:	4770      	bxhi	lr
   c:	e8df f000 	tbb	[pc, r0]
  10:	0a080604 	.word	0x0a080604
  14:	12100e0c 	.word	0x12100e0c
  18:	20f3      	movs	r0, #243	; 0xf3
  1a:	4770      	bx	lr
  1c:	20f4      	movs	r0, #244	; 0xf4
  1e:	4770      	bx	lr
  20:	20f5      	movs	r0, #245	; 0xf5
  22:	4770      	bx	lr
  24:	20f6      	movs	r0, #246	; 0xf6
  26:	4770      	bx	lr
  28:	20fb      	movs	r0, #251	; 0xfb
  2a:	4770      	bx	lr
  2c:	20fc      	movs	r0, #252	; 0xfc
  2e:	4770      	bx	lr
  30:	20fe      	movs	r0, #254	; 0xfe
  32:	4770      	bx	lr
  34:	20ff      	movs	r0, #255	; 0xff
  36:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb10VectActive4from17h718b91aa48909652E:

00000000 <cortex_m::peripheral::scb::VectActive::from>:
_ZN8cortex_m10peripheral3scb10VectActive4from17h718b91aa48909652E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:272
    },
}

impl VectActive {
    /// Converts a `byte` into `VectActive`
    pub fn from(vect_active: u8) -> Option<Self> {
   0:	b2c2      	uxtb	r2, r0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:274
        Some(match vect_active {
            0 => VectActive::ThreadMode,
   2:	2a0f      	cmp	r2, #15
   4:	d80c      	bhi.n	20 <cortex_m::peripheral::scb::VectActive::from+0x20>
   6:	e8df f002 	tbb	[pc, r2]
   a:	0b12      	.short	0x0b12
   c:	19161308 	.word	0x19161308
  10:	0b0b0b1c 	.word	0x0b0b0b1c
  14:	0b221f0b 	.word	0x0b221f0b
  18:	2825      	.short	0x2825
  1a:	2001      	movs	r0, #1
  1c:	2100      	movs	r1, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:293
            14 => VectActive::Exception(Exception::PendSV),
            15 => VectActive::Exception(Exception::SysTick),
            irqn if irqn >= 16 => VectActive::Interrupt { irqn },
            _ => return None,
        })
    }
  1e:	4770      	bx	lr
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:290
            irqn if irqn >= 16 => VectActive::Interrupt { irqn },
  20:	2a0f      	cmp	r2, #15
  22:	bf82      	ittt	hi
  24:	4601      	movhi	r1, r0
  26:	2002      	movhi	r0, #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:293
    }
  28:	4770      	bxhi	lr
  2a:	2100      	movs	r1, #0
  2c:	2003      	movs	r0, #3
  2e:	4770      	bx	lr
  30:	2101      	movs	r1, #1
  32:	2001      	movs	r0, #1
  34:	4770      	bx	lr
  36:	2001      	movs	r0, #1
  38:	2102      	movs	r1, #2
  3a:	4770      	bx	lr
  3c:	2001      	movs	r0, #1
  3e:	2103      	movs	r1, #3
  40:	4770      	bx	lr
  42:	2001      	movs	r0, #1
  44:	2104      	movs	r1, #4
  46:	4770      	bx	lr
  48:	2001      	movs	r0, #1
  4a:	2105      	movs	r1, #5
  4c:	4770      	bx	lr
  4e:	2001      	movs	r0, #1
  50:	2106      	movs	r1, #6
  52:	4770      	bx	lr
  54:	2001      	movs	r0, #1
  56:	2107      	movs	r1, #7
  58:	4770      	bx	lr
  5a:	2001      	movs	r0, #1
  5c:	2108      	movs	r1, #8
  5e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17heccfc2309a171a5aE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleepdeep>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17heccfc2309a171a5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:585

const SCB_SCR_SLEEPDEEP: u32 = 0x1 << 2;

impl SCB {
    /// Set the SLEEPDEEP bit in the SCR register
    pub fn set_sleepdeep(&mut self) {
   0:	f64e 5010 	movw	r0, #60688	; 0xed10
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h7ebc43b24415906dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:587
        unsafe {
            self.scr.modify(|scr| scr | SCB_SCR_SLEEPDEEP);
   a:	f041 0104 	orr.w	r1, r1, #4
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$13set_sleepdeep17heccfc2309a171a5aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:589
        }
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h52971f434ced0cd1E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleepdeep>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h52971f434ced0cd1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:592

    /// Clear the SLEEPDEEP bit in the SCR register
    pub fn clear_sleepdeep(&mut self) {
   0:	f64e 5010 	movw	r0, #60688	; 0xed10
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep28_$u7b$$u7b$closure$u7d$$u7d$17h742f006ab0bccccfE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:594
        unsafe {
            self.scr.modify(|scr| scr & !SCB_SCR_SLEEPDEEP);
   a:	f021 0104 	bic.w	r1, r1, #4
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15clear_sleepdeep17h52971f434ced0cd1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:596
        }
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17h0a4e35ebfa35e3d9E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_sleeponexit>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17h0a4e35ebfa35e3d9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:603

const SCB_SCR_SLEEPONEXIT: u32 = 0x1 << 1;

impl SCB {
    /// Set the SLEEPONEXIT bit in the SCR register
    pub fn set_sleeponexit(&mut self) {
   0:	f64e 5010 	movw	r0, #60688	; 0xed10
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h922bc53ca0e71010E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:605
        unsafe {
            self.scr.modify(|scr| scr | SCB_SCR_SLEEPONEXIT);
   a:	f041 0102 	orr.w	r1, r1, #2
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$15set_sleeponexit17h0a4e35ebfa35e3d9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:607
        }
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17ha6ab7dbe7eea02d8E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_sleeponexit>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17ha6ab7dbe7eea02d8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:610

    /// Clear the SLEEPONEXIT bit in the SCR register
    pub fn clear_sleeponexit(&mut self) {
   0:	f64e 5010 	movw	r0, #60688	; 0xed10
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit28_$u7b$$u7b$closure$u7d$$u7d$17h153a1c53dbdd6078E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:612
        unsafe {
            self.scr.modify(|scr| scr & !SCB_SCR_SLEEPONEXIT);
   a:	f021 0102 	bic.w	r1, r1, #2
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17clear_sleeponexit17ha6ab7dbe7eea02d8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:614
        }
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h6e57780fc2a33faaE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset>:
_ZN8cortex_m3asm3dsb17hff2eff7373b7ee67E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/asm.rs:191
   0:	f7ff fffe 	bl	0 <__dsb>
   4:	f64e 500c 	movw	r0, #60684	; 0xed0c
   8:	2204      	movs	r2, #4
   a:	f2ce 0000 	movt	r0, #57344	; 0xe000
   e:	f2c0 52fa 	movt	r2, #1530	; 0x5fa
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
  12:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset28_$u7b$$u7b$closure$u7d$$u7d$17he0e10065655b02f9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:629
        ::asm::dsb();
        unsafe {
            self.aircr.modify(
                |r| {
                    SCB_AIRCR_VECTKEY | // otherwise the write is ignored
            r & SCB_AIRCR_PRIGROUP_MASK | // keep priority group unchanged
  14:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:628
                    SCB_AIRCR_VECTKEY | // otherwise the write is ignored
  18:	4311      	orrs	r1, r2
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  1a:	6001      	str	r1, [r0, #0]
_ZN8cortex_m3asm3dsb17hff2eff7373b7ee67E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/asm.rs:191
  1c:	f7ff fffe 	bl	0 <__dsb>
_ZN8cortex_m3asm3nop17h8f405f4d7054af71E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/asm.rs:76
            __nop()
  20:	f7ff fffe 	bl	0 <__nop>
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12system_reset17h6e57780fc2a33faaE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:637
            )
        };
        ::asm::dsb();
        loop {
            // wait for the reset
            ::asm::nop(); // avoid rust-lang/rust#28728
  24:	e7fc      	b.n	20 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::system_reset+0x20>

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h43cfc619e0056636E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_pendsv>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h43cfc619e0056636E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:650
const SCB_ICSR_PENDSTSET: u32 = 1 << 26;
const SCB_ICSR_PENDSTCLR: u32 = 1 << 25;

impl SCB {
    /// Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt
    pub fn set_pendsv() {
   0:	f64e 5004 	movw	r0, #60676	; 0xed04
   4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   c:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$10set_pendsv17h43cfc619e0056636E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:654
        unsafe {
            (*Self::ptr()).icsr.write(SCB_ICSR_PENDSVSET);
        }
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hfd237ace41b397a6E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::is_pendsv_pending>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hfd237ace41b397a6E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:657

    /// Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending
    pub fn is_pendsv_pending() -> bool {
   0:	f64e 5004 	movw	r0, #60676	; 0xed04
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN5vcell21VolatileCell$LT$T$GT$3get17hfcf5464297029d58E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$17is_pendsv_pending17hfd237ace41b397a6E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:658
        unsafe { (*Self::ptr()).icsr.read() & SCB_ICSR_PENDSVSET == SCB_ICSR_PENDSVSET }
   a:	f3c0 7000 	ubfx	r0, r0, #28, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:659
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h19bb3df00c8d0f20E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::clear_pendsv>:
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h19bb3df00c8d0f20E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:662

    /// Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt
    pub fn clear_pendsv() {
   0:	f64e 5004 	movw	r0, #60676	; 0xed04
   4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   c:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12clear_pendsv17h19bb3df00c8d0f20E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:666
        unsafe {
            (*Self::ptr()).icsr.write(SCB_ICSR_PENDSVCLR);
        }
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17heef12dc050ca96bbE:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::get_priority>:
_ZN8cortex_m10peripheral3scb13SystemHandler5index17hfa72942de30af55eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:731

impl SystemHandler {
    fn index(&self) -> u8 {
        match *self {
            #[cfg(not(armv6m))]
            SystemHandler::MemoryManagement => 4,
   0:	f240 0100 	movw	r1, #0
   4:	b240      	sxtb	r0, r0
   6:	f2c0 0100 	movt	r1, #0
   a:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
   e:	f64e 5118 	movw	r1, #60696	; 0xed18
  12:	f2ce 0100 	movt	r1, #57344	; 0xe000
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12get_priority17heef12dc050ca96bbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:768
            // NOTE(unsafe) atomic read with no side effects
            let shpr = unsafe { (*Self::ptr()).shpr[usize::from((index - 8) / 4)].read() };
            let prio = (shpr >> (8 * (index % 4))) & 0x000000ff;
            prio as u8
        }
    }
  16:	5c40      	ldrb	r0, [r0, r1]
  18:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hc14e2fdde1c3bde0E:

00000000 <cortex_m::peripheral::scb::<impl cortex_m::peripheral::SCB>::set_priority>:
_ZN8cortex_m10peripheral3scb13SystemHandler5index17hfa72942de30af55eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:731
            SystemHandler::MemoryManagement => 4,
   0:	b248      	sxtb	r0, r1
   2:	f240 0100 	movw	r1, #0
   6:	f2c0 0100 	movt	r1, #0
   a:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
   e:	f64e 5118 	movw	r1, #60696	; 0xed18
  12:	f2ce 0100 	movt	r1, #57344	; 0xe000
_ZN4core3ptr14write_volatile17hb66475e637b7fbd8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
  16:	5442      	strb	r2, [r0, r1]
_ZN8cortex_m10peripheral3scb43_$LT$impl$u20$cortex_m..peripheral..SCB$GT$12set_priority17hc14e2fdde1c3bde0E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:800
                let prio = u32::from(prio) << shift;

                (value & !mask) | prio
            });
        }
    }
  18:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17hebd79b1c334fb661E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::clear_current>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17hebd79b1c334fb661E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:43

impl SYST {
    /// Clears current value to 0
    ///
    /// After calling `clear_current()`, the next call to `has_wrapped()` will return `false`.
    pub fn clear_current(&mut self) {
   0:	f24e 0018 	movw	r0, #57368	; 0xe018
   4:	2100      	movs	r1, #0
   6:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   a:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$13clear_current17hebd79b1c334fb661E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:45
        unsafe { self.cvr.write(0) }
    }
   c:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17hd876475e0dc02f5cE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_counter>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17hd876475e0dc02f5cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:48

    /// Disables counter
    pub fn disable_counter(&mut self) {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter28_$u7b$$u7b$closure$u7d$$u7d$17hafea6ac62474dbccE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:49
        unsafe { self.csr.modify(|v| v & !SYST_CSR_ENABLE) }
   a:	f021 0101 	bic.w	r1, r1, #1
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$15disable_counter17hd876475e0dc02f5cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:50
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17hbdf12157e1613375E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::disable_interrupt>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17hbdf12157e1613375E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:53

    /// Disables SysTick interrupt
    pub fn disable_interrupt(&mut self) {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17h72bcec7f7e8c442cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:54
        unsafe { self.csr.modify(|v| v & !SYST_CSR_TICKINT) }
   a:	f021 0102 	bic.w	r1, r1, #2
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$17disable_interrupt17hbdf12157e1613375E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:55
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17hfbaec3f56e03a2ccE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_counter>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17hfbaec3f56e03a2ccE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:69
    /// - Program reload value
    /// - Clear current value
    /// - Program Control and Status register"
    ///
    /// The sequence translates to `self.set_reload(x); self.clear_current(); self.enable_counter()`
    pub fn enable_counter(&mut self) {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter28_$u7b$$u7b$closure$u7d$$u7d$17hb346b19dd4b237d3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:70
        unsafe { self.csr.modify(|v| v | SYST_CSR_ENABLE) }
   a:	f041 0101 	orr.w	r1, r1, #1
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$14enable_counter17hfbaec3f56e03a2ccE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:71
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hb881bbe636ad5372E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::enable_interrupt>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hb881bbe636ad5372E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:74

    /// Enables SysTick interrupt
    pub fn enable_interrupt(&mut self) {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6801      	ldr	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt28_$u7b$$u7b$closure$u7d$$u7d$17h9ee32181218e7583E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:75
        unsafe { self.csr.modify(|v| v | SYST_CSR_TICKINT) }
   a:	f041 0102 	orr.w	r1, r1, #2
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   e:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16enable_interrupt17hb881bbe636ad5372E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:76
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h25284f4a2928c83bE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_clock_source>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h25284f4a2928c83bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:82

    /// Gets clock source
    ///
    /// *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the
    /// bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)
    pub fn get_clock_source(&mut self) -> SystClkSource {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	2101      	movs	r1, #1
   6:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   a:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16get_clock_source17h25284f4a2928c83bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:84
        // NOTE(unsafe) atomic read with no side effects
        let clk_source_bit = self.csr.read() & SYST_CSR_CLKSOURCE != 0;
   c:	f000 0004 	and.w	r0, r0, #4
  10:	ea81 0090 	eor.w	r0, r1, r0, lsr #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:89
        match clk_source_bit {
            false => SystClkSource::External,
            true => SystClkSource::Core,
        }
    }
  14:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17hf9ae224630b79498E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_current>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17hf9ae224630b79498E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:92

    /// Gets current value
    pub fn get_current() -> u32 {
   0:	f24e 0018 	movw	r0, #57368	; 0xe018
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11get_current17hf9ae224630b79498E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:95
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).cvr.read() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17he01a5b2069b13752E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_reload>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17he01a5b2069b13752E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:98

    /// Gets reload value
    pub fn get_reload() -> u32 {
   0:	f24e 0014 	movw	r0, #57364	; 0xe014
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10get_reload17he01a5b2069b13752E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:101
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).rvr.read() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17h2dced3a2edd34756E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::get_ticks_per_10ms>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17h2dced3a2edd34756E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:108
    /// Returns the reload value with which the counter would wrap once per 10
    /// ms
    ///
    /// Returns `0` if the value is not known (e.g. because the clock can
    /// change dynamically).
    pub fn get_ticks_per_10ms() -> u32 {
   0:	f24e 001c 	movw	r0, #57372	; 0xe01c
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18get_ticks_per_10ms17h2dced3a2edd34756E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:110
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).calib.read() & SYST_COUNTER_MASK }
   a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:111
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17he1e641e4e59c2cc1E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_reference_clock>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17he1e641e4e59c2cc1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:114

    /// Checks if an external reference clock is available
    pub fn has_reference_clock() -> bool {
   0:	f24e 001c 	movw	r0, #57372	; 0xe01c
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$19has_reference_clock17he1e641e4e59c2cc1E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:117
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).calib.read() & SYST_CALIB_NOREF == 0 }
    }
   a:	43c0      	mvns	r0, r0
   c:	0fc0      	lsrs	r0, r0, #31
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17h653bffcf632f1590E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::has_wrapped>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17h653bffcf632f1590E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:123

    /// Checks if the counter wrapped (underflowed) since the last check
    ///
    /// *NOTE* This takes `&mut self` because the read operation is side effectful and will clear
    /// the bit of the read register.
    pub fn has_wrapped(&mut self) -> bool {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN17volatile_register11RW$LT$T$GT$4read17h72a39808f2598fb1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$11has_wrapped17h653bffcf632f1590E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:124
        self.csr.read() & SYST_CSR_COUNTFLAG != 0
   a:	f3c0 4000 	ubfx	r0, r0, #16, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:125
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha16a6cc554c216c9E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_counter_enabled>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha16a6cc554c216c9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:131

    /// Checks if counter is enabled
    ///
    /// *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the
    /// bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)
    pub fn is_counter_enabled(&mut self) -> bool {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$18is_counter_enabled17ha16a6cc554c216c9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:132
        self.csr.read() & SYST_CSR_ENABLE != 0
   a:	f000 0001 	and.w	r0, r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:133
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h0ecc3618473c3620E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_interrupt_enabled>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h0ecc3618473c3620E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:139

    /// Checks if SysTick interrupt is enabled
    ///
    /// *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the
    /// bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)
    pub fn is_interrupt_enabled(&mut self) -> bool {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   8:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$20is_interrupt_enabled17h0ecc3618473c3620E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:140
        self.csr.read() & SYST_CSR_TICKINT != 0
   a:	f3c0 0040 	ubfx	r0, r0, #1, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:141
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h830e9d7c82191849E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::is_precise>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h830e9d7c82191849E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:148
    /// Checks if the calibration value is precise
    ///
    /// Returns `false` if using the reload value returned by
    /// `get_ticks_per_10ms()` may result in a period significantly deviating
    /// from 10 ms.
    pub fn is_precise() -> bool {
   0:	f24e 001c 	movw	r0, #57372	; 0xe01c
   4:	2101      	movs	r1, #1
   6:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr13read_volatile17h196eb0d22de05ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:873
   a:	6800      	ldr	r0, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10is_precise17h830e9d7c82191849E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:150
        // NOTE(unsafe) atomic read with no side effects
        unsafe { (*Self::ptr()).calib.read() & SYST_CALIB_SKEW == 0 }
   c:	f000 4080 	and.w	r0, r0, #1073741824	; 0x40000000
  10:	ea81 7090 	eor.w	r0, r1, r0, lsr #30
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:151
    }
  14:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17hbfa536111c4075f8E:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_clock_source>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$16set_clock_source17hbfa536111c4075f8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:154

    /// Sets clock source
    pub fn set_clock_source(&mut self, clk_source: SystClkSource) {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:156
        match clk_source {
            SystClkSource::External => unsafe { self.csr.modify(|v| v & !SYST_CSR_CLKSOURCE) },
   4:	2900      	cmp	r1, #0
   6:	f2ce 0000 	movt	r0, #57344	; 0xe000
   a:	6802      	ldr	r2, [r0, #0]
   c:	f042 0304 	orr.w	r3, r2, #4
  10:	bf18      	it	ne
  12:	f022 0304 	bicne.w	r3, r2, #4
  16:	6003      	str	r3, [r0, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:159
            SystClkSource::Core => unsafe { self.csr.modify(|v| v | SYST_CSR_CLKSOURCE) },
        }
    }
  18:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hb208aed57ba06a6aE:

00000000 <cortex_m::peripheral::syst::<impl cortex_m::peripheral::SYST>::set_reload>:
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hb208aed57ba06a6aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:166
    /// Sets reload value
    ///
    /// Valid values are between `1` and `0x00ffffff`.
    ///
    /// *NOTE* To make the timer wrap every `N` ticks set the reload value to `N - 1`
    pub fn set_reload(&mut self, value: u32) {
   0:	f24e 0014 	movw	r0, #57364	; 0xe014
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
_ZN4core3ptr14write_volatile17hbcacaee305f4ef33E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:941
   8:	6001      	str	r1, [r0, #0]
_ZN8cortex_m10peripheral4syst44_$LT$impl$u20$cortex_m..peripheral..SYST$GT$10set_reload17hb208aed57ba06a6aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:168
        unsafe { self.rvr.write(value) }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral11Peripherals5steal17h9bf741363829216aE:

00000000 <cortex_m::peripheral::Peripherals::steal>:
_ZN8cortex_m10peripheral11Peripherals5steal17h9bf741363829216aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:172

    /// Unchecked version of `Peripherals::take`
    pub unsafe fn steal() -> Self {
        debug_assert!(!CORE_PERIPHERALS);

        CORE_PERIPHERALS = true;
   0:	f240 0000 	movw	r0, #0
   4:	2101      	movs	r1, #1
   6:	f2c0 0000 	movt	r0, #0
   a:	7001      	strb	r1, [r0, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:212
            },
            TPIU: TPIU {
                _marker: PhantomData,
            },
        }
    }
   c:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3CBP3new17hd47d726a567d3f5fE:

00000000 <cortex_m::peripheral::CBP::new>:
_ZN8cortex_m10peripheral3CBP3new17hd47d726a567d3f5fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:228
impl CBP {
    pub(crate) unsafe fn new() -> Self {
        CBP {
            _marker: PhantomData,
        }
    }
   0:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3CBP3ptr17haf45dc473fc0330fE:

00000000 <cortex_m::peripheral::CBP::ptr>:
_ZN8cortex_m10peripheral3CBP3ptr17haf45dc473fc0330fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:231

    /// Returns a pointer to the register block
    pub fn ptr() -> *const self::cbp::RegisterBlock {
   0:	f64e 7050 	movw	r0, #61264	; 0xef50
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:233
        0xE000_EF50 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7604520799429b15E:

00000000 <<cortex_m::peripheral::CBP as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..CBP$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7604520799429b15E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:240

#[cfg(not(armv6m))]
impl ops::Deref for CBP {
    type Target = self::cbp::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	f64e 7050 	movw	r0, #61264	; 0xef50
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:242
        unsafe { &*Self::ptr() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral5CPUID3ptr17hc80ea147b390cebaE:

00000000 <cortex_m::peripheral::CPUID::ptr>:
_ZN8cortex_m10peripheral5CPUID3ptr17hc80ea147b390cebaE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:254

unsafe impl Send for CPUID {}

impl CPUID {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const self::cpuid::RegisterBlock {
   0:	f64e 5000 	movw	r0, #60672	; 0xed00
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:256
        0xE000_ED00 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4a8498216691f9a9E:

00000000 <<cortex_m::peripheral::CPUID as core::ops::deref::Deref>::deref>:
_ZN71_$LT$cortex_m..peripheral..CPUID$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4a8498216691f9a9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:262
}

impl ops::Deref for CPUID {
    type Target = self::cpuid::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	f64e 5000 	movw	r0, #60672	; 0xed00
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:264
        unsafe { &*Self::ptr() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3DCB3ptr17h78b3fe22c2e28e8dE:

00000000 <cortex_m::peripheral::DCB::ptr>:
_ZN8cortex_m10peripheral3DCB3ptr17h78b3fe22c2e28e8dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:276

unsafe impl Send for DCB {}

impl DCB {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const dcb::RegisterBlock {
   0:	f64e 50f0 	movw	r0, #60912	; 0xedf0
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:278
        0xE000_EDF0 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3cd4328c208b0ff6E:

00000000 <<cortex_m::peripheral::DCB as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..DCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3cd4328c208b0ff6E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:284
}

impl ops::Deref for DCB {
    type Target = self::dcb::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	f64e 50f0 	movw	r0, #60912	; 0xedf0
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:286
        unsafe { &*DCB::ptr() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3DWT3ptr17hb496427ebf3fb5ffE:

00000000 <cortex_m::peripheral::DWT::ptr>:
_ZN8cortex_m10peripheral3DWT3ptr17hb496427ebf3fb5ffE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:298

unsafe impl Send for DWT {}

impl DWT {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const dwt::RegisterBlock {
   0:	f241 0000 	movw	r0, #4096	; 0x1000
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:300
        0xE000_1000 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9d27c4b7e3eb32e6E:

00000000 <<cortex_m::peripheral::DWT as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..DWT$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9d27c4b7e3eb32e6E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:306
}

impl ops::Deref for DWT {
    type Target = self::dwt::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	f241 0000 	movw	r0, #4096	; 0x1000
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:308
        unsafe { &*Self::ptr() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3FPB3ptr17h993eba498e294344E:

00000000 <cortex_m::peripheral::FPB::ptr>:
_ZN8cortex_m10peripheral3FPB3ptr17h993eba498e294344E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:321
unsafe impl Send for FPB {}

#[cfg(not(armv6m))]
impl FPB {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const fpb::RegisterBlock {
   0:	f242 0000 	movw	r0, #8192	; 0x2000
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:323
        0xE000_2000 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf1d116f6024df623E:

00000000 <<cortex_m::peripheral::FPB as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..FPB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf1d116f6024df623E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:330

#[cfg(not(armv6m))]
impl ops::Deref for FPB {
    type Target = self::fpb::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	f242 0000 	movw	r0, #8192	; 0x2000
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:332
        unsafe { &*Self::ptr() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3ITM3ptr17h5a0ad36f7b8831f5E:

00000000 <cortex_m::peripheral::ITM::ptr>:
_ZN8cortex_m10peripheral3ITM3ptr17h5a0ad36f7b8831f5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:371
#[cfg(not(armv6m))]
impl ITM {
    /// Returns a pointer to the register block
    pub fn ptr() -> *mut itm::RegisterBlock {
        0xE000_0000 as *mut _
    }
   0:	f04f 4060 	mov.w	r0, #3758096384	; 0xe0000000
   4:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3d6481ff6e8f2947E:

00000000 <<cortex_m::peripheral::ITM as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3d6481ff6e8f2947E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:380
impl ops::Deref for ITM {
    type Target = self::itm::RegisterBlock;

    fn deref(&self) -> &Self::Target {
        unsafe { &*Self::ptr() }
    }
   0:	f04f 4060 	mov.w	r0, #3758096384	; 0xe0000000
   4:	4770      	bx	lr

Disassembly of section .text._ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hbe33ab6703776b0dE:

00000000 <<cortex_m::peripheral::ITM as core::ops::deref::DerefMut>::deref_mut>:
_ZN72_$LT$cortex_m..peripheral..ITM$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hbe33ab6703776b0dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:387

#[cfg(not(armv6m))]
impl ops::DerefMut for ITM {
    fn deref_mut(&mut self) -> &mut Self::Target {
        unsafe { &mut *Self::ptr() }
    }
   0:	f04f 4060 	mov.w	r0, #3758096384	; 0xe0000000
   4:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3MPU3ptr17h4341f19e794597b3E:

00000000 <cortex_m::peripheral::MPU::ptr>:
_ZN8cortex_m10peripheral3MPU3ptr17h4341f19e794597b3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:399

unsafe impl Send for MPU {}

impl MPU {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const mpu::RegisterBlock {
   0:	f64e 5090 	movw	r0, #60816	; 0xed90
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:401
        0xE000_ED90 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc4f368af222ead4dE:

00000000 <<cortex_m::peripheral::MPU as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..MPU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc4f368af222ead4dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:407
}

impl ops::Deref for MPU {
    type Target = self::mpu::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	f64e 5090 	movw	r0, #60816	; 0xed90
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:409
        unsafe { &*Self::ptr() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4NVIC3ptr17h1610280e2ba85438E:

00000000 <cortex_m::peripheral::NVIC::ptr>:
_ZN8cortex_m10peripheral4NVIC3ptr17h1610280e2ba85438E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:421

unsafe impl Send for NVIC {}

impl NVIC {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const nvic::RegisterBlock {
   0:	f24e 1000 	movw	r0, #57600	; 0xe100
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:423
        0xE000_E100 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd020177778321471E:

00000000 <<cortex_m::peripheral::NVIC as core::ops::deref::Deref>::deref>:
_ZN70_$LT$cortex_m..peripheral..NVIC$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd020177778321471E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:429
}

impl ops::Deref for NVIC {
    type Target = self::nvic::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	f24e 1000 	movw	r0, #57600	; 0xe100
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:431
        unsafe { &*Self::ptr() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral3SCB3ptr17ha50b864fb61b1ce8E:

00000000 <cortex_m::peripheral::SCB::ptr>:
_ZN8cortex_m10peripheral3SCB3ptr17ha50b864fb61b1ce8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:443

unsafe impl Send for SCB {}

impl SCB {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const scb::RegisterBlock {
   0:	f64e 5004 	movw	r0, #60676	; 0xed04
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:445
        0xE000_ED04 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf61c4c875302d123E:

00000000 <<cortex_m::peripheral::SCB as core::ops::deref::Deref>::deref>:
_ZN69_$LT$cortex_m..peripheral..SCB$u20$as$u20$core..ops..deref..Deref$GT$5deref17hf61c4c875302d123E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:451
}

impl ops::Deref for SCB {
    type Target = self::scb::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	f64e 5004 	movw	r0, #60676	; 0xed04
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:453
        unsafe { &*Self::ptr() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4SYST3ptr17hb441d0ab58a77d0aE:

00000000 <cortex_m::peripheral::SYST::ptr>:
_ZN8cortex_m10peripheral4SYST3ptr17hb441d0ab58a77d0aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:465

unsafe impl Send for SYST {}

impl SYST {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const syst::RegisterBlock {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:467
        0xE000_E010 as *const _
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17h30e45bbba036df9eE:

00000000 <<cortex_m::peripheral::SYST as core::ops::deref::Deref>::deref>:
_ZN70_$LT$cortex_m..peripheral..SYST$u20$as$u20$core..ops..deref..Deref$GT$5deref17h30e45bbba036df9eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:473
}

impl ops::Deref for SYST {
    type Target = self::syst::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	f24e 0010 	movw	r0, #57360	; 0xe010
   4:	f2ce 0000 	movt	r0, #57344	; 0xe000
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:475
        unsafe { &*Self::ptr() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m10peripheral4TPIU3ptr17h3b26ac5186079818E:

00000000 <cortex_m::peripheral::TPIU::ptr>:
_ZN8cortex_m10peripheral4TPIU3ptr17h3b26ac5186079818E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:488
unsafe impl Send for TPIU {}

#[cfg(not(armv6m))]
impl TPIU {
    /// Returns a pointer to the register block
    pub fn ptr() -> *const tpiu::RegisterBlock {
   0:	2000      	movs	r0, #0
   2:	f2ce 0004 	movt	r0, #57348	; 0xe004
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:490
        0xE004_0000 as *const _
    }
   6:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc88afccaf062d563E:

00000000 <<cortex_m::peripheral::TPIU as core::ops::deref::Deref>::deref>:
_ZN70_$LT$cortex_m..peripheral..TPIU$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc88afccaf062d563E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:497

#[cfg(not(armv6m))]
impl ops::Deref for TPIU {
    type Target = self::tpiu::RegisterBlock;

    fn deref(&self) -> &Self::Target {
   0:	2000      	movs	r0, #0
   2:	f2ce 0004 	movt	r0, #57348	; 0xe004
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/mod.rs:499
        unsafe { &*Self::ptr() }
    }
   6:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control7Control4bits17h250adff5650bed37E:

00000000 <cortex_m::register::control::Control::bits>:
_ZN8cortex_m8register7control7Control4bits17h250adff5650bed37E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:12
}

impl Control {
    /// Returns the contents of the register as raw bits
    pub fn bits(&self) -> u32 {
        self.bits
   0:	6800      	ldr	r0, [r0, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:13
    }
   2:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control7Control5npriv17h40ec33e7c96aea7cE:

00000000 <cortex_m::register::control::Control::npriv>:
_ZN8cortex_m8register7control7Control5npriv17h40ec33e7c96aea7cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:17

    /// Thread mode privilege level
    pub fn npriv(&self) -> Npriv {
        if self.bits & (1 << 0) == (1 << 0) {
   0:	6800      	ldr	r0, [r0, #0]
   2:	f000 0001 	and.w	r0, r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:22
            Npriv::Unprivileged
        } else {
            Npriv::Privileged
        }
    }
   6:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control7Control5spsel17hcf383b8c80a858fcE:

00000000 <cortex_m::register::control::Control::spsel>:
_ZN8cortex_m8register7control7Control5spsel17hcf383b8c80a858fcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:26

    /// Currently active stack pointer
    pub fn spsel(&self) -> Spsel {
        if self.bits & (1 << 1) == (1 << 1) {
   0:	7800      	ldrb	r0, [r0, #0]
   2:	f3c0 0040 	ubfx	r0, r0, #1, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:31
            Spsel::Psp
        } else {
            Spsel::Msp
        }
    }
   6:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control7Control4fpca17h488d0fcc1527eaaeE:

00000000 <cortex_m::register::control::Control::fpca>:
_ZN8cortex_m8register7control7Control4fpca17h488d0fcc1527eaaeE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:35

    /// Whether context floating-point is currently active
    pub fn fpca(&self) -> Fpca {
        if self.bits & (1 << 2) == (1 << 2) {
   0:	7800      	ldrb	r0, [r0, #0]
   2:	2101      	movs	r1, #1
   4:	f000 0004 	and.w	r0, r0, #4
   8:	ea81 0090 	eor.w	r0, r1, r0, lsr #2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:40
            Fpca::Active
        } else {
            Fpca::NotActive
        }
    }
   c:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E:

00000000 <cortex_m::register::control::Fpca::is_active>:
_ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:96
    NotActive,
}

impl Fpca {
    /// Is a floating-point context active?
    pub fn is_active(&self) -> bool {
   0:	7800      	ldrb	r0, [r0, #0]
_ZN74_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..cmp..PartialEq$GT$2eq17h40b5abdeb9943ef5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:86
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   2:	fab0 f080 	clz	r0, r0
   6:	0940      	lsrs	r0, r0, #5
_ZN8cortex_m8register7control4Fpca9is_active17hced4dbcbfacabed3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:98
        *self == Fpca::Active
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE:

00000000 <cortex_m::register::control::Fpca::is_not_active>:
_ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:101

    /// Is a floating-point context not active?
    pub fn is_not_active(&self) -> bool {
   0:	7800      	ldrb	r0, [r0, #0]
_ZN74_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..cmp..PartialEq$GT$2eq17h40b5abdeb9943ef5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:86
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   2:	3801      	subs	r0, #1
   4:	fab0 f080 	clz	r0, r0
   8:	0940      	lsrs	r0, r0, #5
_ZN8cortex_m8register7control4Fpca13is_not_active17h02088df2aa2085fdE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:103
        *self == Fpca::NotActive
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17h91280c64c46726a4E:

00000000 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt>:
_ZN73_$LT$cortex_m..peripheral..scb..Exception$u20$as$u20$core..fmt..Debug$GT$3fmt17h91280c64c46726a4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:191
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	7800      	ldrb	r0, [r0, #0]
   6:	3801      	subs	r0, #1
   8:	2807      	cmp	r0, #7
   a:	d80c      	bhi.n	26 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x26>
   c:	e8df f000 	tbb	[pc, r0]
  10:	20191204 	.word	0x20191204
  14:	3c342d27 	.word	0x3c342d27
  18:	ac01      	add	r4, sp, #4
  1a:	f240 0200 	movw	r2, #0
  1e:	f2c0 0200 	movt	r2, #0
  22:	2309      	movs	r3, #9
  24:	e036      	b.n	94 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x94>
  26:	ac01      	add	r4, sp, #4
  28:	f240 0200 	movw	r2, #0
  2c:	f2c0 0200 	movt	r2, #0
  30:	230e      	movs	r3, #14
  32:	e02f      	b.n	94 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x94>
  34:	ac01      	add	r4, sp, #4
  36:	f240 0200 	movw	r2, #0
  3a:	f2c0 0200 	movt	r2, #0
  3e:	2310      	movs	r3, #16
  40:	e028      	b.n	94 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x94>
  42:	ac01      	add	r4, sp, #4
  44:	f240 0200 	movw	r2, #0
  48:	f2c0 0200 	movt	r2, #0
  4c:	2308      	movs	r3, #8
  4e:	e021      	b.n	94 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x94>
  50:	ac01      	add	r4, sp, #4
  52:	f240 0200 	movw	r2, #0
  56:	f2c0 0200 	movt	r2, #0
  5a:	230a      	movs	r3, #10
  5c:	e01a      	b.n	94 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x94>
  5e:	f240 0200 	movw	r2, #0
  62:	ac01      	add	r4, sp, #4
  64:	f2c0 0200 	movt	r2, #0
  68:	e00b      	b.n	82 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x82>
  6a:	ac01      	add	r4, sp, #4
  6c:	f240 0200 	movw	r2, #0
  70:	f2c0 0200 	movt	r2, #0
  74:	230c      	movs	r3, #12
  76:	e00d      	b.n	94 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x94>
  78:	f240 0200 	movw	r2, #0
  7c:	ac01      	add	r4, sp, #4
  7e:	f2c0 0200 	movt	r2, #0
  82:	4620      	mov	r0, r4
  84:	2306      	movs	r3, #6
  86:	e006      	b.n	96 <<cortex_m::peripheral::scb::Exception as core::fmt::Debug>::fmt+0x96>
  88:	ac01      	add	r4, sp, #4
  8a:	f240 0200 	movw	r2, #0
  8e:	f2c0 0200 	movt	r2, #0
  92:	2307      	movs	r3, #7
  94:	4620      	mov	r0, r4
  96:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  9a:	4620      	mov	r0, r4
  9c:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  a0:	b004      	add	sp, #16
  a2:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hf50c1551d9b72e22E:

00000000 <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt>:
_ZN74_$LT$cortex_m..peripheral..scb..VectActive$u20$as$u20$core..fmt..Debug$GT$3fmt17hf50c1551d9b72e22E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:255
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b086      	sub	sp, #24
   4:	4604      	mov	r4, r0
   6:	7800      	ldrb	r0, [r0, #0]
   8:	2801      	cmp	r0, #1
   a:	d01f      	beq.n	4c <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x4c>
   c:	2802      	cmp	r0, #2
   e:	d135      	bne.n	7c <<cortex_m::peripheral::scb::VectActive as core::fmt::Debug>::fmt+0x7c>
  10:	ad02      	add	r5, sp, #8
  12:	f240 0200 	movw	r2, #0
  16:	f2c0 0200 	movt	r2, #0
  1a:	2309      	movs	r3, #9
  1c:	4628      	mov	r0, r5
  1e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_struct>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:266
        irqn: u8,
  22:	1c60      	adds	r0, r4, #1
  24:	9005      	str	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:255
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
  26:	f240 0000 	movw	r0, #0
  2a:	f240 0100 	movw	r1, #0
  2e:	f2c0 0000 	movt	r0, #0
  32:	ab05      	add	r3, sp, #20
  34:	9000      	str	r0, [sp, #0]
  36:	f2c0 0100 	movt	r1, #0
  3a:	4628      	mov	r0, r5
  3c:	2204      	movs	r2, #4
  3e:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::field>
  42:	4628      	mov	r0, r5
  44:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::finish>
  48:	b006      	add	sp, #24
  4a:	bdb0      	pop	{r4, r5, r7, pc}
  4c:	ad02      	add	r5, sp, #8
  4e:	f240 0200 	movw	r2, #0
  52:	f2c0 0200 	movt	r2, #0
  56:	2309      	movs	r3, #9
  58:	4628      	mov	r0, r5
  5a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  5e:	f240 0200 	movw	r2, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:261
    Exception(Exception),
  62:	1c60      	adds	r0, r4, #1
  64:	a905      	add	r1, sp, #20
  66:	9005      	str	r0, [sp, #20]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:255
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
  68:	f2c0 0200 	movt	r2, #0
  6c:	4628      	mov	r0, r5
  6e:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::field>
  72:	4628      	mov	r0, r5
  74:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  78:	b006      	add	sp, #24
  7a:	bdb0      	pop	{r4, r5, r7, pc}
  7c:	ac02      	add	r4, sp, #8
  7e:	f240 0200 	movw	r2, #0
  82:	f2c0 0200 	movt	r2, #0
  86:	230a      	movs	r3, #10
  88:	4620      	mov	r0, r4
  8a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  8e:	4620      	mov	r0, r4
  90:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  94:	b006      	add	sp, #24
  96:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17h1bdf0328878bfa13E:

00000000 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt>:
_ZN77_$LT$cortex_m..peripheral..scb..SystemHandler$u20$as$u20$core..fmt..Debug$GT$3fmt17h1bdf0328878bfa13E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/scb.rs:693
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	7800      	ldrb	r0, [r0, #0]
   6:	3801      	subs	r0, #1
   8:	2805      	cmp	r0, #5
   a:	d80b      	bhi.n	24 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x24>
   c:	e8df f000 	tbb	[pc, r0]
  10:	1e181103 	.word	0x1e181103
  14:	2d25      	.short	0x2d25
  16:	ac01      	add	r4, sp, #4
  18:	f240 0200 	movw	r2, #0
  1c:	f2c0 0200 	movt	r2, #0
  20:	2308      	movs	r3, #8
  22:	e028      	b.n	76 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x76>
  24:	ac01      	add	r4, sp, #4
  26:	f240 0200 	movw	r2, #0
  2a:	f2c0 0200 	movt	r2, #0
  2e:	2310      	movs	r3, #16
  30:	e021      	b.n	76 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x76>
  32:	ac01      	add	r4, sp, #4
  34:	f240 0200 	movw	r2, #0
  38:	f2c0 0200 	movt	r2, #0
  3c:	230a      	movs	r3, #10
  3e:	e01a      	b.n	76 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x76>
  40:	f240 0200 	movw	r2, #0
  44:	ac01      	add	r4, sp, #4
  46:	f2c0 0200 	movt	r2, #0
  4a:	e00b      	b.n	64 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x64>
  4c:	ac01      	add	r4, sp, #4
  4e:	f240 0200 	movw	r2, #0
  52:	f2c0 0200 	movt	r2, #0
  56:	230c      	movs	r3, #12
  58:	e00d      	b.n	76 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x76>
  5a:	f240 0200 	movw	r2, #0
  5e:	ac01      	add	r4, sp, #4
  60:	f2c0 0200 	movt	r2, #0
  64:	4620      	mov	r0, r4
  66:	2306      	movs	r3, #6
  68:	e006      	b.n	78 <<cortex_m::peripheral::scb::SystemHandler as core::fmt::Debug>::fmt+0x78>
  6a:	ac01      	add	r4, sp, #4
  6c:	f240 0200 	movw	r2, #0
  70:	f2c0 0200 	movt	r2, #0
  74:	2307      	movs	r3, #7
  76:	4620      	mov	r0, r4
  78:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  7c:	4620      	mov	r0, r4
  7e:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  82:	b004      	add	sp, #16
  84:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h820885d04892f1bcE:

00000000 <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt>:
_ZN78_$LT$cortex_m..peripheral..syst..SystClkSource$u20$as$u20$core..fmt..Debug$GT$3fmt17h820885d04892f1bcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\peripheral/syst.rs:21
#[derive(Clone, Copy, Debug)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	7800      	ldrb	r0, [r0, #0]
   6:	ac01      	add	r4, sp, #4
   8:	2801      	cmp	r0, #1
   a:	d106      	bne.n	1a <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x1a>
   c:	f240 0200 	movw	r2, #0
  10:	4620      	mov	r0, r4
  12:	f2c0 0200 	movt	r2, #0
  16:	2308      	movs	r3, #8
  18:	e005      	b.n	26 <<cortex_m::peripheral::syst::SystClkSource as core::fmt::Debug>::fmt+0x26>
  1a:	f240 0200 	movw	r2, #0
  1e:	4620      	mov	r0, r4
  20:	f2c0 0200 	movt	r2, #0
  24:	2304      	movs	r3, #4
  26:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  2a:	4620      	mov	r0, r4
  2c:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  30:	b004      	add	sp, #16
  32:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17ha09c9d718c63dd1cE:

00000000 <<cortex_m::register::control::Control as core::fmt::Debug>::fmt>:
_ZN73_$LT$cortex_m..register..control..Control$u20$as$u20$core..fmt..Debug$GT$3fmt17ha09c9d718c63dd1cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:4
#[derive(Clone, Copy, Debug)]
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b084      	sub	sp, #16
   4:	ad01      	add	r5, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	4604      	mov	r4, r0
   c:	f2c0 0200 	movt	r2, #0
  10:	4628      	mov	r0, r5
  12:	2307      	movs	r3, #7
  14:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_struct>
  18:	f240 0000 	movw	r0, #0
  1c:	f240 0100 	movw	r1, #0
  20:	f2c0 0000 	movt	r0, #0
  24:	ab03      	add	r3, sp, #12
  26:	9000      	str	r0, [sp, #0]
  28:	f2c0 0100 	movt	r1, #0
  2c:	4628      	mov	r0, r5
  2e:	2204      	movs	r2, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:6
    bits: u32,
  30:	9403      	str	r4, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:4
#[derive(Clone, Copy, Debug)]
  32:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::field>
  36:	4628      	mov	r0, r5
  38:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::finish>
  3c:	b004      	add	sp, #16
  3e:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17he4ac11784d0834f9E:

00000000 <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt>:
_ZN71_$LT$cortex_m..register..control..Npriv$u20$as$u20$core..fmt..Debug$GT$3fmt17he4ac11784d0834f9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:44
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	7800      	ldrb	r0, [r0, #0]
   6:	ac01      	add	r4, sp, #4
   8:	2801      	cmp	r0, #1
   a:	d106      	bne.n	1a <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x1a>
   c:	f240 0200 	movw	r2, #0
  10:	4620      	mov	r0, r4
  12:	f2c0 0200 	movt	r2, #0
  16:	230c      	movs	r3, #12
  18:	e005      	b.n	26 <<cortex_m::register::control::Npriv as core::fmt::Debug>::fmt+0x26>
  1a:	f240 0200 	movw	r2, #0
  1e:	4620      	mov	r0, r4
  20:	f2c0 0200 	movt	r2, #0
  24:	230a      	movs	r3, #10
  26:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  2a:	4620      	mov	r0, r4
  2c:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  30:	b004      	add	sp, #16
  32:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17hcbaedb7fab7f7139E:

00000000 <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt>:
_ZN71_$LT$cortex_m..register..control..Spsel$u20$as$u20$core..fmt..Debug$GT$3fmt17hcbaedb7fab7f7139E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:65
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	7800      	ldrb	r0, [r0, #0]
   6:	ac01      	add	r4, sp, #4
   8:	2801      	cmp	r0, #1
   a:	d104      	bne.n	16 <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0x16>
   c:	f240 0200 	movw	r2, #0
  10:	f2c0 0200 	movt	r2, #0
  14:	e003      	b.n	a <<cortex_m::register::control::Spsel as core::fmt::Debug>::fmt+0xa>
  16:	f240 0200 	movw	r2, #0
  1a:	f2c0 0200 	movt	r2, #0
  1e:	4620      	mov	r0, r4
  20:	2303      	movs	r3, #3
  22:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  26:	4620      	mov	r0, r4
  28:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  2c:	b004      	add	sp, #16
  2e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h5ec04f81b019bd52E:

00000000 <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt>:
_ZN70_$LT$cortex_m..register..control..Fpca$u20$as$u20$core..fmt..Debug$GT$3fmt17h5ec04f81b019bd52E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/control.rs:86
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	7800      	ldrb	r0, [r0, #0]
   6:	ac01      	add	r4, sp, #4
   8:	2801      	cmp	r0, #1
   a:	d106      	bne.n	1a <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x1a>
   c:	f240 0200 	movw	r2, #0
  10:	4620      	mov	r0, r4
  12:	f2c0 0200 	movt	r2, #0
  16:	2309      	movs	r3, #9
  18:	e005      	b.n	26 <<cortex_m::register::control::Fpca as core::fmt::Debug>::fmt+0x26>
  1a:	f240 0200 	movw	r2, #0
  1e:	4620      	mov	r0, r4
  20:	f2c0 0200 	movt	r2, #0
  24:	2306      	movs	r3, #6
  26:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  2a:	4620      	mov	r0, r4
  2c:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  30:	b004      	add	sp, #16
  32:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ddbf2c6bbe92b47E:

00000000 <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt>:
_ZN73_$LT$cortex_m..register..primask..Primask$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ddbf2c6bbe92b47E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src\register/primask.rs:4
//! Priority mask register

/// All exceptions with configurable priority are ...
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	7800      	ldrb	r0, [r0, #0]
   6:	ac01      	add	r4, sp, #4
   8:	2801      	cmp	r0, #1
   a:	d106      	bne.n	1a <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x1a>
   c:	f240 0200 	movw	r2, #0
  10:	4620      	mov	r0, r4
  12:	f2c0 0200 	movt	r2, #0
  16:	2308      	movs	r3, #8
  18:	e005      	b.n	26 <<cortex_m::register::primask::Primask as core::fmt::Debug>::fmt+0x26>
  1a:	f240 0200 	movw	r2, #0
  1e:	4620      	mov	r0, r4
  20:	f2c0 0200 	movt	r2, #0
  24:	2306      	movs	r3, #6
  26:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  2a:	4620      	mov	r0, r4
  2c:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  30:	b004      	add	sp, #16
  32:	bd10      	pop	{r4, pc}

cstr_core-bb4c76c07424b2f3.cstr_core.63fnamm4-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstr_core.63fnamm4-cgu.0
000009a3 l       .debug_str	00000000 
0000244d l       .debug_str	00000000 
00002449 l       .debug_str	00000000 
00002442 l       .debug_str	00000000 
00002414 l       .debug_str	00000000 
000023d9 l       .debug_str	00000000 
000026d7 l       .debug_str	00000000 
000023d7 l       .debug_str	00000000 
000023c1 l       .debug_str	00000000 
000026cc l       .debug_str	00000000 
000023bc l       .debug_str	00000000 
000023a8 l       .debug_str	00000000 
000026c1 l       .debug_str	00000000 
0000236c l       .debug_str	00000000 
00002363 l       .debug_str	00000000 
000026b9 l       .debug_str	00000000 
00002333 l       .debug_str	00000000 
000026b4 l       .debug_str	00000000 
000022ce l       .debug_str	00000000 
000022c6 l       .debug_str	00000000 
000026b0 l       .debug_str	00000000 
00002266 l       .debug_str	00000000 
00002214 l       .debug_str	00000000 
00002186 l       .debug_str	00000000 
0000217c l       .debug_str	00000000 
000020fe l       .debug_str	00000000 
0000268e l       .debug_str	00000000 
000020c4 l       .debug_str	00000000 
0000208f l       .debug_str	00000000 
00002687 l       .debug_str	00000000 
00002084 l       .debug_str	00000000 
0000203c l       .debug_str	00000000 
00002012 l       .debug_str	00000000 
00001fca l       .debug_str	00000000 
00002682 l       .debug_str	00000000 
00001fc2 l       .debug_str	00000000 
00002661 l       .debug_str	00000000 
00001f61 l       .debug_str	00000000 
00002636 l       .debug_str	00000000 
00001f02 l       .debug_str	00000000 
0000262e l       .debug_str	00000000 
00001ef2 l       .debug_str	00000000 
00002607 l       .debug_str	00000000 
00001e81 l       .debug_str	00000000 
000025a4 l       .debug_str	00000000 
00001e65 l       .debug_str	00000000 
00002554 l       .debug_str	00000000 
00001e51 l       .debug_str	00000000 
00001de1 l       .debug_str	00000000 
00001ddd l       .debug_str	00000000 
00001dd7 l       .debug_str	00000000 
00002548 l       .debug_str	00000000 
00001dcf l       .debug_str	00000000 
00001d6d l       .debug_str	00000000 
000024e8 l       .debug_str	00000000 
000024e5 l       .debug_str	00000000 
00002490 l       .debug_str	00000000 
0000246d l       .debug_str	00000000 
00002463 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
0000017c l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
00000183 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
0000018e l       .debug_str	00000000 
00000191 l       .debug_str	00000000 
00000194 l       .debug_str	00000000 
00000199 l       .debug_str	00000000 
0000019f l       .debug_str	00000000 
000001a6 l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001bc l       .debug_str	00000000 
000001bf l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000001d2 l       .debug_str	00000000 
000001db l       .debug_str	00000000 
000001e4 l       .debug_str	00000000 
0000024b l       .debug_str	00000000 
00000250 l       .debug_str	00000000 
00000252 l       .debug_str	00000000 
00000258 l       .debug_str	00000000 
0000025d l       .debug_str	00000000 
00000262 l       .debug_str	00000000 
00000268 l       .debug_str	00000000 
0000026e l       .debug_str	00000000 
00000275 l       .debug_str	00000000 
0000027a l       .debug_str	00000000 
0000027c l       .debug_str	00000000 
00000281 l       .debug_str	00000000 
0000028f l       .debug_str	00000000 
00000299 l       .debug_str	00000000 
0000029d l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002ad l       .debug_str	00000000 
000002c1 l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
000002d8 l       .debug_str	00000000 
000002df l       .debug_str	00000000 
000002e5 l       .debug_str	00000000 
000002e9 l       .debug_str	00000000 
000002ef l       .debug_str	00000000 
000002f5 l       .debug_str	00000000 
000002f8 l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
0000030e l       .debug_str	00000000 
00000312 l       .debug_str	00000000 
0000031b l       .debug_str	00000000 
00000327 l       .debug_str	00000000 
00000340 l       .debug_str	00000000 
00000345 l       .debug_str	00000000 
00000356 l       .debug_str	00000000 
00000360 l       .debug_str	00000000 
000003be l       .debug_str	00000000 
000003c9 l       .debug_str	00000000 
000003e6 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
000003f2 l       .debug_str	00000000 
00000409 l       .debug_str	00000000 
0000042d l       .debug_str	00000000 
00000449 l       .debug_str	00000000 
0000044e l       .debug_str	00000000 
00000457 l       .debug_str	00000000 
0000045e l       .debug_str	00000000 
00000477 l       .debug_str	00000000 
00000481 l       .debug_str	00000000 
0000049b l       .debug_str	00000000 
000004a4 l       .debug_str	00000000 
000004b8 l       .debug_str	00000000 
000004c1 l       .debug_str	00000000 
000004c8 l       .debug_str	00000000 
000004d3 l       .debug_str	00000000 
000004d8 l       .debug_str	00000000 
000004e3 l       .debug_str	00000000 
000004e7 l       .debug_str	00000000 
00000546 l       .debug_str	00000000 
0000054b l       .debug_str	00000000 
00000551 l       .debug_str	00000000 
00000553 l       .debug_str	00000000 
000005e8 l       .debug_str	00000000 
000005f4 l       .debug_str	00000000 
000005fa l       .debug_str	00000000 
000005fe l       .debug_str	00000000 
0000060b l       .debug_str	00000000 
0000062f l       .debug_str	00000000 
00000631 l       .debug_str	00000000 
00000637 l       .debug_str	00000000 
0000063c l       .debug_str	00000000 
000006d3 l       .debug_str	00000000 
000006df l       .debug_str	00000000 
000006e1 l       .debug_str	00000000 
000006e6 l       .debug_str	00000000 
000006f4 l       .debug_str	00000000 
00000719 l       .debug_str	00000000 
0000071b l       .debug_str	00000000 
00000741 l       .debug_str	00000000 
00000749 l       .debug_str	00000000 
0000074b l       .debug_str	00000000 
00000784 l       .debug_str	00000000 
0000079a l       .debug_str	00000000 
000007a5 l       .debug_str	00000000 
000007a7 l       .debug_str	00000000 
000007f2 l       .debug_str	00000000 
00000802 l       .debug_str	00000000 
00000806 l       .debug_str	00000000 
00000814 l       .debug_str	00000000 
00000818 l       .debug_str	00000000 
0000081a l       .debug_str	00000000 
0000081c l       .debug_str	00000000 
00000863 l       .debug_str	00000000 
0000086f l       .debug_str	00000000 
000008c4 l       .debug_str	00000000 
000008ce l       .debug_str	00000000 
000008d5 l       .debug_str	00000000 
000008fc l       .debug_str	00000000 
00000909 l       .debug_str	00000000 
0000090d l       .debug_str	00000000 
00000918 l       .debug_str	00000000 
0000091c l       .debug_str	00000000 
00000956 l       .debug_str	00000000 
00000975 l       .debug_str	00000000 
00000977 l       .debug_str	00000000 
00000979 l       .debug_str	00000000 
0000097d l       .debug_str	00000000 
00001d6a l       .debug_str	00000000 
000009af l       .debug_str	00000000 
000009ba l       .debug_str	00000000 
00000a14 l       .debug_str	00000000 
00000a22 l       .debug_str	00000000 
00000abc l       .debug_str	00000000 
00000acd l       .debug_str	00000000 
00000af2 l       .debug_str	00000000 
00000b12 l       .debug_str	00000000 
00000b17 l       .debug_str	00000000 
00000bc0 l       .debug_str	00000000 
00000bd1 l       .debug_str	00000000 
00000bd7 l       .debug_str	00000000 
00000c24 l       .debug_str	00000000 
00000c28 l       .debug_str	00000000 
00000c2e l       .debug_str	00000000 
00000c81 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c93 l       .debug_str	00000000 
00000d3f l       .debug_str	00000000 
00000d78 l       .debug_str	00000000 
00000d7f l       .debug_str	00000000 
00000d89 l       .debug_str	00000000 
00000d8e l       .debug_str	00000000 
00000d9a l       .debug_str	00000000 
00000da2 l       .debug_str	00000000 
00000dab l       .debug_str	00000000 
00000db0 l       .debug_str	00000000 
00000db3 l       .debug_str	00000000 
00000dbc l       .debug_str	00000000 
00000dc3 l       .debug_str	00000000 
00000dc6 l       .debug_str	00000000 
00000dcc l       .debug_str	00000000 
00000dd6 l       .debug_str	00000000 
00000dde l       .debug_str	00000000 
00000de4 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000df8 l       .debug_str	00000000 
00000e1b l       .debug_str	00000000 
00000e3a l       .debug_str	00000000 
00000e61 l       .debug_str	00000000 
00000e6b l       .debug_str	00000000 
00000e9d l       .debug_str	00000000 
00000ea4 l       .debug_str	00000000 
00000eaa l       .debug_str	00000000 
00000eaf l       .debug_str	00000000 
00000edf l       .debug_str	00000000 
00000ee8 l       .debug_str	00000000 
00000eee l       .debug_str	00000000 
00000eff l       .debug_str	00000000 
00000f05 l       .debug_str	00000000 
00000f88 l       .debug_str	00000000 
00000f92 l       .debug_str	00000000 
00001018 l       .debug_str	00000000 
00001027 l       .debug_str	00000000 
00001029 l       .debug_str	00000000 
0000109e l       .debug_str	00000000 
000010c9 l       .debug_str	00000000 
000010cf l       .debug_str	00000000 
000010d6 l       .debug_str	00000000 
000010de l       .debug_str	00000000 
000010e7 l       .debug_str	00000000 
000010ef l       .debug_str	00000000 
000010f3 l       .debug_str	00000000 
00001104 l       .debug_str	00000000 
0000110d l       .debug_str	00000000 
00001131 l       .debug_str	00000000 
0000113b l       .debug_str	00000000 
00001163 l       .debug_str	00000000 
0000116c l       .debug_str	00000000 
000011d6 l       .debug_str	00000000 
0000121f l       .debug_str	00000000 
00001282 l       .debug_str	00000000 
000012f5 l       .debug_str	00000000 
00001340 l       .debug_str	00000000 
0000134b l       .debug_str	00000000 
00001351 l       .debug_str	00000000 
00001357 l       .debug_str	00000000 
0000139f l       .debug_str	00000000 
000013a7 l       .debug_str	00000000 
000013ee l       .debug_str	00000000 
000013f7 l       .debug_str	00000000 
0000148b l       .debug_str	00000000 
000014eb l       .debug_str	00000000 
00001579 l       .debug_str	00000000 
0000157d l       .debug_str	00000000 
0000160f l       .debug_str	00000000 
00001653 l       .debug_str	00000000 
000016c0 l       .debug_str	00000000 
00001739 l       .debug_str	00000000 
000017ad l       .debug_str	00000000 
000017b6 l       .debug_str	00000000 
000017c2 l       .debug_str	00000000 
000017dd l       .debug_str	00000000 
000017df l       .debug_str	00000000 
0000185f l       .debug_str	00000000 
000018a3 l       .debug_str	00000000 
000018e2 l       .debug_str	00000000 
00001924 l       .debug_str	00000000 
00001937 l       .debug_str	00000000 
0000193e l       .debug_str	00000000 
00001942 l       .debug_str	00000000 
0000197a l       .debug_str	00000000 
00001989 l       .debug_str	00000000 
0000198b l       .debug_str	00000000 
0000198f l       .debug_str	00000000 
000019ff l       .debug_str	00000000 
00001a0c l       .debug_str	00000000 
00001a12 l       .debug_str	00000000 
00001a18 l       .debug_str	00000000 
00001aa4 l       .debug_str	00000000 
00001abd l       .debug_str	00000000 
00001af6 l       .debug_str	00000000 
00001b2c l       .debug_str	00000000 
00001b6b l       .debug_str	00000000 
00001b72 l       .debug_str	00000000 
00001b9b l       .debug_str	00000000 
00001ba2 l       .debug_str	00000000 
00001ba4 l       .debug_str	00000000 
00001bab l       .debug_str	00000000 
00001bd1 l       .debug_str	00000000 
00001bd8 l       .debug_str	00000000 
00001be1 l       .debug_str	00000000 
00001c0b l       .debug_str	00000000 
00001c0f l       .debug_str	00000000 
00001c12 l       .debug_str	00000000 
00001c76 l       .debug_str	00000000 
00001c80 l       .debug_str	00000000 
00001c85 l       .debug_str	00000000 
00001cfe l       .debug_str	00000000 
00001d08 l       .debug_str	00000000 
00001d0c l       .debug_str	00000000 
00001d11 l       .debug_str	00000000 
00001d3a l       .debug_str	00000000 
00001d45 l       .debug_str	00000000 
00002459 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.0	00000010 .Lanon.e200e43722b3d35948c5887a2d30835c.0
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.1	00000010 .Lanon.e200e43722b3d35948c5887a2d30835c.1
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.10	00000015 .Lanon.e200e43722b3d35948c5887a2d30835c.10
00000000 l     O .rodata.cst4	00000004 .Lanon.e200e43722b3d35948c5887a2d30835c.11
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.12	00000010 .Lanon.e200e43722b3d35948c5887a2d30835c.12
00000000 l     O .rodata.cst16	00000010 .Lanon.e200e43722b3d35948c5887a2d30835c.13
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.14	0000000b .Lanon.e200e43722b3d35948c5887a2d30835c.14
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.15	00000010 .Lanon.e200e43722b3d35948c5887a2d30835c.15
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.3	00000008 .Lanon.e200e43722b3d35948c5887a2d30835c.3
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.4	00000000 .Lanon.e200e43722b3d35948c5887a2d30835c.4
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.5	00000001 .Lanon.e200e43722b3d35948c5887a2d30835c.5
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.6	00000023 .Lanon.e200e43722b3d35948c5887a2d30835c.6
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.7	0000002b .Lanon.e200e43722b3d35948c5887a2d30835c.7
00000000 l     O .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.9	00000008 .Lanon.e200e43722b3d35948c5887a2d30835c.9
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9a14318a5806284fE	00000056 <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0d85bc22b87b216E	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN4core3ptr18real_drop_in_place17hb56e08669093e237E	00000002 core::ptr::real_drop_in_place
00000000 l     O .rodata.str.2	00000059 str.2
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9a14318a5806284fE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9a14318a5806284fE
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0d85bc22b87b216E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0d85bc22b87b216E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17hb56e08669093e237E	00000000 .text._ZN4core3ptr18real_drop_in_place17hb56e08669093e237E
00000000 l    d  .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4cd5046aa53f63E	00000000 .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4cd5046aa53f63E
00000000 l    d  .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53296a24673e7ee3E	00000000 .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53296a24673e7ee3E
00000000 l    d  .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hca1cdf0074478c4fE	00000000 .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hca1cdf0074478c4fE
00000000 l    d  .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E	00000000 .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E
00000000 l    d  .text._ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17h2824570b662a4980E	00000000 .text._ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17h2824570b662a4980E
00000000 l    d  .text._ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h92690a66a723a5b3E	00000000 .text._ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h92690a66a723a5b3E
00000000 l    d  .text._ZN9cstr_core4CStr8from_ptr17h2bf3ddfbebbaab74E	00000000 .text._ZN9cstr_core4CStr8from_ptr17h2bf3ddfbebbaab74E
00000000 l    d  .text._ZN9cstr_core4CStr19from_bytes_with_nul17hddd55d7704724dd4E	00000000 .text._ZN9cstr_core4CStr19from_bytes_with_nul17hddd55d7704724dd4E
00000000 l    d  .text._ZN9cstr_core4CStr6to_str17h65d4aecd22b99993E	00000000 .text._ZN9cstr_core4CStr6to_str17h65d4aecd22b99993E
00000000 l    d  .text._ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1af5412716deb497E	00000000 .text._ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1af5412716deb497E
00000000 l    d  .text._ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE	00000000 .text._ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE
00000000 l    d  .text._ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E	00000000 .text._ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E
00000000 l    d  .text._ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd7166af2085cca1cE	00000000 .text._ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd7166af2085cca1cE
00000000 l    d  .text._ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hae2779c5092fda91E	00000000 .text._ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hae2779c5092fda91E
00000000 l    d  .rodata.str.2	00000000 .rodata.str.2
00000000 l    d  .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.2	00000000 .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.2
00000000 l    d  .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.8	00000000 .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.8
00000000 l    d  .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.12	00000000 .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.12
00000000 l    d  .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.15	00000000 .rodata..Lanon.e200e43722b3d35948c5887a2d30835c.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hca1cdf0074478c4fE	0000002c <cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::field
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::field
00000000         *UND*	00000000 core::fmt::builders::DebugStruct::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000         *UND*	00000000 core::fmt::Formatter::debug_struct
00000000         *UND*	00000000 core::fmt::Formatter::debug_lower_hex
00000000         *UND*	00000000 core::fmt::Formatter::debug_upper_hex
00000000         *UND*	00000000 core::fmt::Formatter::write_fmt
00000000         *UND*	00000000 core::fmt::Formatter::write_str
00000000         *UND*	00000000 core::str::from_utf8
00000000         *UND*	00000000 core::slice::slice_index_len_fail
00000000         *UND*	00000000 core::panicking::panic_bounds_check
00000000 g     F .text._ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E	00000050 <cstr_core::CStr as core::cmp::Ord>::cmp
00000000 g     F .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E	000001a2 <cstr_core::CStr as core::fmt::Debug>::fmt
00000000 g     F .text._ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1af5412716deb497E	0000003e <cstr_core::CStr as core::cmp::PartialEq>::eq
00000000         *UND*	00000000 <core::fmt::Formatter as core::fmt::Write>::write_char
00000000 g     F .text._ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE	00000050 <cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp
00000000 g     F .text._ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17h2824570b662a4980E	0000000c <&cstr_core::CStr as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd7166af2085cca1cE	00000040 <cstr_core::FromBytesWithNulError as core::fmt::Debug>::fmt
00000000         *UND*	00000000 memchr::fallback::memchr
00000000 g     F .text._ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h92690a66a723a5b3E	00000074 <cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt
00000000 g     F .text._ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hae2779c5092fda91E	00000058 <cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt
00000000 g     F .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4cd5046aa53f63E	0000002e <cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next
00000000 g     F .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53296a24673e7ee3E	00000016 <cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::size_hint
00000000 g     F .text._ZN9cstr_core4CStr19from_bytes_with_nul17hddd55d7704724dd4E	00000038 cstr_core::CStr::from_bytes_with_nul
00000000 g     F .text._ZN9cstr_core4CStr6to_str17h65d4aecd22b99993E	00000018 cstr_core::CStr::to_str
00000000 g     F .text._ZN9cstr_core4CStr8from_ptr17h2bf3ddfbebbaab74E	00000032 cstr_core::CStr::from_ptr
00000000         *UND*	00000000 memcmp



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9a14318a5806284fE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9a14318a5806284fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b084      	sub	sp, #16
   4:	6805      	ldr	r5, [r0, #0]
   6:	ac01      	add	r4, sp, #4
_ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hae2779c5092fda91E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:325
#[derive(Clone, PartialEq, Eq, Debug)]
pub struct FromBytesWithNulError {
    kind: FromBytesWithNulErrorKind,
}

#[derive(Clone, PartialEq, Eq, Debug)]
   8:	6828      	ldr	r0, [r5, #0]
   a:	2801      	cmp	r0, #1
   c:	d10c      	bne.n	28 <<&T as core::fmt::Debug>::fmt+0x28>
   e:	f240 0200 	movw	r2, #0
  12:	4620      	mov	r0, r4
  14:	f2c0 0200 	movt	r2, #0
  18:	2310      	movs	r3, #16
  1a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  1e:	4620      	mov	r0, r4
  20:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9a14318a5806284fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
  24:	b004      	add	sp, #16
  26:	bdb0      	pop	{r4, r5, r7, pc}
_ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hae2779c5092fda91E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:325
  28:	f240 0200 	movw	r2, #0
  2c:	4620      	mov	r0, r4
  2e:	f2c0 0200 	movt	r2, #0
  32:	230b      	movs	r3, #11
  34:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  38:	f240 0200 	movw	r2, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:327
enum FromBytesWithNulErrorKind {
    InteriorNul(usize),
  3c:	1d28      	adds	r0, r5, #4
  3e:	9000      	str	r0, [sp, #0]
  40:	4669      	mov	r1, sp
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:325
#[derive(Clone, PartialEq, Eq, Debug)]
  42:	f2c0 0200 	movt	r2, #0
  46:	4620      	mov	r0, r4
  48:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::field>
  4c:	4620      	mov	r0, r4
  4e:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9a14318a5806284fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
  52:	b004      	add	sp, #16
  54:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0d85bc22b87b216E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0d85bc22b87b216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hf6dcfdcd0c677f34E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt>

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17hb56e08669093e237E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17hb56e08669093e237E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	4770      	bx	lr

Disassembly of section .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4cd5046aa53f63E:

00000000 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next>:
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4cd5046aa53f63E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:153
        fn next(&mut self) -> Option<u8> {
   0:	e9d0 1200 	ldrd	r1, r2, [r0]
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb337f8e2b64f1c96E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
   4:	4291      	cmp	r1, r2
   6:	d210      	bcs.n	2a <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next+0x2a>
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hff9452e630fa63b7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:154
            self.range.next().map(|i| self.data[i])
   8:	2904      	cmp	r1, #4
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h2dd8ea3cc81a465cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
   a:	f101 0201 	add.w	r2, r1, #1
_ZN4core3ptr5write17hc9761fb8523af708E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:736
   e:	6002      	str	r2, [r0, #0]
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hff9452e630fa63b7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:154
  10:	bf3f      	itttt	cc
  12:	4408      	addcc	r0, r1
  14:	7a01      	ldrbcc	r1, [r0, #8]
  16:	2001      	movcc	r0, #1
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4cd5046aa53f63E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:155
        }
  18:	4770      	bxcc	lr
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hff9452e630fa63b7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:154
            self.range.next().map(|i| self.data[i])
  1a:	f240 0000 	movw	r0, #0
  1e:	2204      	movs	r2, #4
  20:	f2c0 0000 	movt	r0, #0
  24:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
  28:	defe      	udf	#254	; 0xfe
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4cd5046aa53f63E():
  2a:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:155
        }
  2c:	4770      	bx	lr

Disassembly of section .text._ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53296a24673e7ee3E:

00000000 <<cstr_core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::size_hint>:
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53296a24673e7ee3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:156
        fn size_hint(&self) -> (usize, Option<usize>) {
   0:	e9d1 2100 	ldrd	r2, r1, [r1]
   4:	2301      	movs	r3, #1
_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17hcf12637e54b1daf7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:79
   6:	4291      	cmp	r1, r2
   8:	bf98      	it	ls
   a:	4611      	movls	r1, r2
   c:	1a89      	subs	r1, r1, r2
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17h322c9d6613e7510bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:225
   e:	e9c0 1300 	strd	r1, r3, [r0]
  12:	6081      	str	r1, [r0, #8]
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53296a24673e7ee3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:158
        }
  14:	4770      	bx	lr

Disassembly of section .text._ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hca1cdf0074478c4fE:

00000000 <<cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back>:
_ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hca1cdf0074478c4fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:161
        fn next_back(&mut self) -> Option<u8> {
   0:	e9d0 2100 	ldrd	r2, r1, [r0]
_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17hca096c45f87d4bc8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:277
   4:	428a      	cmp	r2, r1
   6:	d20f      	bcs.n	28 <<cstr_core::ascii::EscapeDefault as core::iter::traits::double_ended::DoubleEndedIterator>::next_back+0x28>
_ZN47_$LT$usize$u20$as$u20$core..ops..arith..Sub$GT$3sub17h0eb0a72d4a803eaaE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ops/arith.rs:198
   8:	3901      	subs	r1, #1
_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17hca096c45f87d4bc8E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:278
   a:	6041      	str	r1, [r0, #4]
_ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h3090d5d50d8ee24cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:162
            self.range.next_back().map(|i| self.data[i])
   c:	2904      	cmp	r1, #4
   e:	bf3f      	itttt	cc
  10:	4408      	addcc	r0, r1
  12:	7a01      	ldrbcc	r1, [r0, #8]
  14:	2001      	movcc	r0, #1
_ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hca1cdf0074478c4fE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:163
        }
  16:	4770      	bxcc	lr
_ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h3090d5d50d8ee24cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:162
            self.range.next_back().map(|i| self.data[i])
  18:	f240 0000 	movw	r0, #0
  1c:	2204      	movs	r2, #4
  1e:	f2c0 0000 	movt	r0, #0
  22:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
  26:	defe      	udf	#254	; 0xfe
_ZN105_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hca1cdf0074478c4fE():
  28:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:163
        }
  2a:	4770      	bx	lr

Disassembly of section .text._ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E:

00000000 <<cstr_core::CStr as core::fmt::Debug>::fmt>:
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:670
        s.into_bytes()
    }
}

impl fmt::Debug for CStr {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b093      	sub	sp, #76	; 0x4c
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
   6:	f240 0900 	movw	r9, #0
   a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
   e:	f240 0a00 	movw	sl, #0
  12:	4605      	mov	r5, r0
  14:	2000      	movs	r0, #0
  16:	f2c0 0900 	movt	r9, #0
  1a:	460f      	mov	r7, r1
  1c:	900e      	str	r0, [sp, #56]	; 0x38
  1e:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
  22:	2601      	movs	r6, #1
  24:	e9cd 000b 	strd	r0, r0, [sp, #44]	; 0x2c
  28:	f2c0 0a00 	movt	sl, #0
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:671
        write!(f, "\"")?;
  2c:	4610      	mov	r0, r2
  2e:	4641      	mov	r1, r8
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  30:	960a      	str	r6, [sp, #40]	; 0x28
  32:	4693      	mov	fp, r2
  34:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:671
  38:	f7ff fffe 	bl	0 <core::fmt::Formatter::write_fmt>
  3c:	2800      	cmp	r0, #0
  3e:	f040 809b 	bne.w	178 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x178>
_ZN9cstr_core4CStr8to_bytes17he84c19109741c587E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
    /// assert_eq!(c_str.to_bytes(), b"foo");
    /// ```
    #[inline]
    pub fn to_bytes(&self) -> &[u8] {
        let bytes = self.to_bytes_with_nul();
        &bytes[..bytes.len() - 1]
  42:	1e78      	subs	r0, r7, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2745
  44:	2f00      	cmp	r7, #0
  46:	f000 80a8 	beq.w	19a <<cstr_core::CStr as core::fmt::Debug>::fmt+0x19a>
_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4e2f97d6e3822e29E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:246
  4a:	ab09      	add	r3, sp, #36	; 0x24
  4c:	f10d 0c0c 	add.w	ip, sp, #12
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17he4f83e7412f55bc4E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  50:	182e      	adds	r6, r5, r0
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:672
        for byte in self.to_bytes()
  52:	f108 070c 	add.w	r7, r8, #12
_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4e2f97d6e3822e29E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:246
  56:	cb0e      	ldmia	r3, {r1, r2, r3}
  58:	f04f 0801 	mov.w	r8, #1
  5c:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
  60:	ab06      	add	r3, sp, #24
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:672
  62:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4e2f97d6e3822e29E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/traits/collect.rs:246
  66:	cb0e      	ldmia	r3, {r1, r2, r3}
  68:	e88d 000e 	stmia.w	sp, {r1, r2, r3}
  6c:	2100      	movs	r1, #0
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:672
  6e:	ab03      	add	r3, sp, #12
  70:	910b      	str	r1, [sp, #44]	; 0x2c
  72:	e9cd 5609 	strd	r5, r6, [sp, #36]	; 0x24
  76:	910f      	str	r1, [sp, #60]	; 0x3c
  78:	cb0d      	ldmia	r3, {r0, r2, r3}
  7a:	e88c 000d 	stmia.w	ip, {r0, r2, r3}
  7e:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
  82:	e89d 000d 	ldmia.w	sp, {r0, r2, r3}
  86:	e88c 000d 	stmia.w	ip, {r0, r2, r3}
_ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h61d689ad8aa5a174E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:216
  8a:	07c8      	lsls	r0, r1, #31
  8c:	d003      	beq.n	96 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x96>
  8e:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb337f8e2b64f1c96E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
  92:	4281      	cmp	r1, r0
  94:	d33f      	bcc.n	116 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x116>
_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3e6780fbfb081a17E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3082
  96:	4628      	mov	r0, r5
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3086
  98:	42b5      	cmp	r5, r6
  9a:	f000 8060 	beq.w	15e <<cstr_core::CStr as core::fmt::Debug>::fmt+0x15e>
  9e:	7802      	ldrb	r2, [r0, #0]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17he4f83e7412f55bc4E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  a0:	1c45      	adds	r5, r0, #1
_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17heb92cb68baeedad9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:3041
  a2:	9509      	str	r5, [sp, #36]	; 0x24
_ZN9cstr_core5ascii14escape_default17h4390fb1b54d9def5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:128
            b'\t' => ([b'\\', b't', 0, 0], 2),
  a4:	f1a2 0309 	sub.w	r3, r2, #9
  a8:	2b1e      	cmp	r3, #30
  aa:	d817      	bhi.n	dc <<cstr_core::CStr as core::fmt::Debug>::fmt+0xdc>
  ac:	f247 415c 	movw	r1, #29788	; 0x745c
  b0:	2002      	movs	r0, #2
  b2:	e8df f003 	tbb	[pc, r3]
  b6:	1029      	.short	0x1029
  b8:	18231818 	.word	0x18231818
  bc:	18181818 	.word	0x18181818
  c0:	18181818 	.word	0x18181818
  c4:	18181818 	.word	0x18181818
  c8:	18181818 	.word	0x18181818
  cc:	26181818 	.word	0x26181818
  d0:	18181818 	.word	0x18181818
  d4:	0020      	.short	0x0020
  d6:	f646 615c 	movw	r1, #28252	; 0x6e5c
  da:	e014      	b.n	106 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x106>
  dc:	2a5c      	cmp	r2, #92	; 0x5c
  de:	d102      	bne.n	e6 <<cstr_core::CStr as core::fmt::Debug>::fmt+0xe6>
  e0:	f645 415c 	movw	r1, #23644	; 0x5c5c
  e4:	e00f      	b.n	106 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x106>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:134
            b'\x20'...b'\x7e' => ([c, 0, 0, 0], 1),
  e6:	f1a2 0020 	sub.w	r0, r2, #32
  ea:	b2c0      	uxtb	r0, r0
  ec:	285f      	cmp	r0, #95	; 0x5f
  ee:	d221      	bcs.n	134 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x134>
_ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h61d689ad8aa5a174E():
  f0:	2001      	movs	r0, #1
  f2:	4611      	mov	r1, r2
  f4:	e008      	b.n	108 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x108>
  f6:	f242 715c 	movw	r1, #10076	; 0x275c
  fa:	e004      	b.n	106 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x106>
  fc:	f247 215c 	movw	r1, #29276	; 0x725c
 100:	e001      	b.n	106 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x106>
 102:	f242 215c 	movw	r1, #8796	; 0x225c
 106:	2002      	movs	r0, #2
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/adapters/flatten.rs:221
 108:	e9cd 010d 	strd	r0, r1, [sp, #52]	; 0x34
 10c:	2100      	movs	r1, #0
 10e:	e9cd 810b 	strd	r8, r1, [sp, #44]	; 0x2c
_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hb337f8e2b64f1c96E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/iter/range.rs:206
 112:	4281      	cmp	r1, r0
 114:	d2bf      	bcs.n	96 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x96>
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hff9452e630fa63b7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:154
            self.range.next().map(|i| self.data[i])
 116:	2904      	cmp	r1, #4
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h2dd8ea3cc81a465cE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3347
 118:	f101 0001 	add.w	r0, r1, #1
_ZN4core3ptr5write17hc9761fb8523af708E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:736
 11c:	900c      	str	r0, [sp, #48]	; 0x30
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hff9452e630fa63b7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:154
 11e:	d234      	bcs.n	18a <<cstr_core::CStr as core::fmt::Debug>::fmt+0x18a>
 120:	1878      	adds	r0, r7, r1
 122:	7a01      	ldrb	r1, [r0, #8]
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:676
            f.write_char(byte as char)?;
 124:	4658      	mov	r0, fp
 126:	f7ff fffe 	bl	0 <<core::fmt::Formatter as core::fmt::Write>::write_char>
 12a:	2101      	movs	r1, #1
 12c:	2800      	cmp	r0, #0
 12e:	f43f afac 	beq.w	8a <<cstr_core::CStr as core::fmt::Debug>::fmt+0x8a>
 132:	e025      	b.n	180 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x180>
_ZN9cstr_core5ascii14escape_default17h4390fb1b54d9def5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:135
            _ => ([b'\\', b'x', hexify(c >> 4), hexify(c & 0xf)], 4),
 134:	f002 000f 	and.w	r0, r2, #15
_ZN9cstr_core5ascii14escape_default6hexify17hcfa7f2759215ec0bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:145
                0...9 => b'0' + b,
 138:	2157      	movs	r1, #87	; 0x57
 13a:	280a      	cmp	r0, #10
 13c:	bf38      	it	cc
 13e:	2130      	movcc	r1, #48	; 0x30
 140:	4408      	add	r0, r1
 142:	2157      	movs	r1, #87	; 0x57
 144:	2aa0      	cmp	r2, #160	; 0xa0
 146:	bf38      	it	cc
 148:	2130      	movcc	r1, #48	; 0x30
 14a:	eb01 1112 	add.w	r1, r1, r2, lsr #4
_ZN9cstr_core5ascii14escape_default17h4390fb1b54d9def5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:135
            _ => ([b'\\', b'x', hexify(c >> 4), hexify(c & 0xf)], 4),
 14e:	0409      	lsls	r1, r1, #16
 150:	ea41 6000 	orr.w	r0, r1, r0, lsl #24
 154:	f647 015c 	movw	r1, #30812	; 0x785c
 158:	4301      	orrs	r1, r0
 15a:	2004      	movs	r0, #4
 15c:	e7d4      	b.n	108 <<cstr_core::CStr as core::fmt::Debug>::fmt+0x108>
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E():
 15e:	2000      	movs	r0, #0
 160:	a909      	add	r1, sp, #36	; 0x24
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
 162:	e9cd 900d 	strd	r9, r0, [sp, #52]	; 0x34
 166:	e9cd 000b 	strd	r0, r0, [sp, #44]	; 0x2c
 16a:	2001      	movs	r0, #1
 16c:	e9cd a009 	strd	sl, r0, [sp, #36]	; 0x24
_ZN52_$LT$cstr_core..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h96788db3b40c7cf5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:678
        write!(f, "\"")
 170:	4658      	mov	r0, fp
 172:	f7ff fffe 	bl	0 <core::fmt::Formatter::write_fmt>
 176:	4606      	mov	r6, r0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:679
    }
 178:	4630      	mov	r0, r6
 17a:	b013      	add	sp, #76	; 0x4c
 17c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 180:	2601      	movs	r6, #1
 182:	4630      	mov	r0, r6
 184:	b013      	add	sp, #76	; 0x4c
 186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN90_$LT$cstr_core..ascii..EscapeDefault$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hff9452e630fa63b7E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:154
            self.range.next().map(|i| self.data[i])
 18a:	f240 0000 	movw	r0, #0
 18e:	2204      	movs	r2, #4
 190:	f2c0 0000 	movt	r0, #0
 194:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 198:	defe      	udf	#254	; 0xfe
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2746
 19a:	2100      	movs	r1, #0
 19c:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
 1a0:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17h2824570b662a4980E:

00000000 <<&cstr_core::CStr as core::default::Default>::default>:
_ZN62_$LT$$RF$cstr_core..CStr$u20$as$u20$core..default..Default$GT$7default17h2824570b662a4980E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:686
    }
   0:	f240 0000 	movw	r0, #0
   4:	2101      	movs	r1, #1
   6:	f2c0 0000 	movt	r0, #0
   a:	4770      	bx	lr

Disassembly of section .text._ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h92690a66a723a5b3E:

00000000 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt>:
_ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h92690a66a723a5b3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:820
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	4605      	mov	r5, r0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:822
            FromBytesWithNulErrorKind::InteriorNul(..) => {
   6:	6800      	ldr	r0, [r0, #0]
   8:	460c      	mov	r4, r1
   a:	2801      	cmp	r0, #1
   c:	d10a      	bne.n	24 <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x24>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:826
                f.write_str("data provided is not nul terminated")?
   e:	f240 0100 	movw	r1, #0
  12:	4620      	mov	r0, r4
  14:	f2c0 0100 	movt	r1, #0
  18:	2223      	movs	r2, #35	; 0x23
  1a:	b00a      	add	sp, #40	; 0x28
  1c:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  20:	f7ff bffe 	b.w	0 <core::fmt::Formatter::write_str>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:823
                f.write_str("data provided contains an interior nul byte")?
  24:	f240 0100 	movw	r1, #0
  28:	4620      	mov	r0, r4
  2a:	f2c0 0100 	movt	r1, #0
  2e:	222b      	movs	r2, #43	; 0x2b
  30:	f7ff fffe 	bl	0 <core::fmt::Formatter::write_str>
  34:	4601      	mov	r1, r0
  36:	2001      	movs	r0, #1
  38:	b109      	cbz	r1, 3e <<cstr_core::FromBytesWithNulError as core::fmt::Display>::fmt+0x3e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:833
    }
  3a:	b00a      	add	sp, #40	; 0x28
  3c:	bdb0      	pop	{r4, r5, r7, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:829
        if let FromBytesWithNulErrorKind::InteriorNul(pos) = self.kind {
  3e:	6869      	ldr	r1, [r5, #4]
  40:	9101      	str	r1, [sp, #4]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:830
            write!(f, " at byte pos {}", pos)?;
  42:	f240 0100 	movw	r1, #0
  46:	f2c0 0100 	movt	r1, #0
  4a:	9109      	str	r1, [sp, #36]	; 0x24
  4c:	a901      	add	r1, sp, #4
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  4e:	e9cd 0107 	strd	r0, r1, [sp, #28]
  52:	a908      	add	r1, sp, #32
  54:	9106      	str	r1, [sp, #24]
  56:	2100      	movs	r1, #0
  58:	9105      	str	r1, [sp, #20]
  5a:	e9cd 0103 	strd	r0, r1, [sp, #12]
  5e:	f240 0000 	movw	r0, #0
  62:	f2c0 0000 	movt	r0, #0
  66:	a902      	add	r1, sp, #8
  68:	9002      	str	r0, [sp, #8]
_ZN71_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h92690a66a723a5b3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:830
  6a:	4620      	mov	r0, r4
  6c:	f7ff fffe 	bl	0 <core::fmt::Formatter::write_fmt>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:833
    }
  70:	b00a      	add	sp, #40	; 0x28
  72:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN9cstr_core4CStr8from_ptr17h2bf3ddfbebbaab74E:

00000000 <cstr_core::CStr::from_ptr>:
_ZN9cstr_core4CStr8from_ptr17h2bf3ddfbebbaab74E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:895
    pub unsafe fn from_ptr<'a>(ptr: *const c_char) -> &'a CStr {
   0:	2100      	movs	r1, #0
   2:	e004      	b.n	e <cstr_core::CStr::from_ptr+0xe>
_ZN9cstr_core6strlen17hfa2f2e57f3bd373dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:49
    while *p.offset(n as isize) != 0 {
   4:	78d2      	ldrb	r2, [r2, #3]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:50
        n += 1;
   6:	3104      	adds	r1, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:49
    while *p.offset(n as isize) != 0 {
   8:	2a00      	cmp	r2, #0
_ZN9cstr_core4CStr8from_ptr17h2bf3ddfbebbaab74E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:899
    }
   a:	bf08      	it	eq
   c:	4770      	bxeq	lr
_ZN9cstr_core6strlen17hfa2f2e57f3bd373dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:49
    while *p.offset(n as isize) != 0 {
   e:	5c42      	ldrb	r2, [r0, r1]
  10:	2a00      	cmp	r2, #0
  12:	bf04      	itt	eq
  14:	f041 0101 	orreq.w	r1, r1, #1
_ZN9cstr_core4CStr8from_ptr17h2bf3ddfbebbaab74E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:899
    }
  18:	4770      	bxeq	lr
_ZN9cstr_core6strlen17hfa2f2e57f3bd373dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:49
    while *p.offset(n as isize) != 0 {
  1a:	1842      	adds	r2, r0, r1
  1c:	7853      	ldrb	r3, [r2, #1]
  1e:	2b00      	cmp	r3, #0
  20:	bf04      	itt	eq
  22:	f041 0102 	orreq.w	r1, r1, #2
_ZN9cstr_core4CStr8from_ptr17h2bf3ddfbebbaab74E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:899
    }
  26:	4770      	bxeq	lr
_ZN9cstr_core6strlen17hfa2f2e57f3bd373dE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:49
    while *p.offset(n as isize) != 0 {
  28:	7893      	ldrb	r3, [r2, #2]
  2a:	2b00      	cmp	r3, #0
  2c:	d1ea      	bne.n	4 <cstr_core::CStr::from_ptr+0x4>
  2e:	3103      	adds	r1, #3
_ZN9cstr_core4CStr8from_ptr17h2bf3ddfbebbaab74E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:899
    }
  30:	4770      	bx	lr

Disassembly of section .text._ZN9cstr_core4CStr19from_bytes_with_nul17hddd55d7704724dd4E:

00000000 <cstr_core::CStr::from_bytes_with_nul>:
_ZN9cstr_core4CStr19from_bytes_with_nul17hddd55d7704724dd4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:933
    pub fn from_bytes_with_nul(bytes: &[u8]) -> Result<&CStr, FromBytesWithNulError> {
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4604      	mov	r4, r0
_ZN6memchr6memchr17ha1091d8d33812715E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:156
    #[inline(always)]
    fn imp(n1: u8, haystack: &[u8]) -> Option<usize> {
        fallback::memchr(n1, haystack)
    }

    if haystack.is_empty() {
   4:	b172      	cbz	r2, 24 <cstr_core::CStr::from_bytes_with_nul+0x24>
_ZN6memchr6memchr3imp17h7882e595ca591d05E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/lib.rs:153
        fallback::memchr(n1, haystack)
   6:	2000      	movs	r0, #0
   8:	4615      	mov	r5, r2
   a:	460e      	mov	r6, r1
   c:	f7ff fffe 	bl	0 <memchr::fallback::memchr>
_ZN9cstr_core4CStr19from_bytes_with_nul17hddd55d7704724dd4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:935
        if let Some(nul_pos) = nul_pos {
  10:	2801      	cmp	r0, #1
  12:	d107      	bne.n	24 <cstr_core::CStr::from_bytes_with_nul+0x24>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:936
            if nul_pos + 1 != bytes.len() {
  14:	1c48      	adds	r0, r1, #1
  16:	42a8      	cmp	r0, r5
  18:	d108      	bne.n	2c <cstr_core::CStr::from_bytes_with_nul+0x2c>
  1a:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:939
            Ok(unsafe { CStr::from_bytes_with_nul_unchecked(bytes) })
  1c:	e9c4 6501 	strd	r6, r5, [r4, #4]
  20:	6020      	str	r0, [r4, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:943
    }
  22:	bd70      	pop	{r4, r5, r6, pc}
  24:	2001      	movs	r0, #1
  26:	e9c4 0000 	strd	r0, r0, [r4]
  2a:	bd70      	pop	{r4, r5, r6, pc}
  2c:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:937
                return Err(FromBytesWithNulError::interior_nul(nul_pos));
  2e:	e9c4 0101 	strd	r0, r1, [r4, #4]
  32:	2001      	movs	r0, #1
  34:	6020      	str	r0, [r4, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:943
    }
  36:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN9cstr_core4CStr6to_str17h65d4aecd22b99993E:

00000000 <cstr_core::CStr::to_str>:
_ZN9cstr_core4CStr6to_str17h65d4aecd22b99993E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1080
    /// use cstr_core::CStr;
    ///
    /// let c_str = CStr::from_bytes_with_nul(b"foo\0").unwrap();
    /// assert_eq!(c_str.to_str(), Ok("foo"));
    /// ```
    pub fn to_str(&self) -> Result<&str, Utf8Error> {
   0:	b580      	push	{r7, lr}
   2:	4613      	mov	r3, r2
_ZN9cstr_core4CStr8to_bytes17he84c19109741c587E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
        &bytes[..bytes.len() - 1]
   4:	3a01      	subs	r2, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2745
   6:	b113      	cbz	r3, e <cstr_core::CStr::to_str+0xe>
_ZN9cstr_core4CStr6to_str17h65d4aecd22b99993E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1085
        // NB: When CStr is changed to perform the length check in .to_bytes()
        // instead of in from_ptr(), it may be worth considering if this should
        // be rewritten to do the UTF-8 check inline with the length calculation
        // instead of doing it afterwards.
        str::from_utf8(self.to_bytes())
   8:	f7ff fffe 	bl	0 <core::str::from_utf8>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1086
    }
   c:	bd80      	pop	{r7, pc}
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2746
   e:	4610      	mov	r0, r2
  10:	2100      	movs	r1, #0
  12:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
  16:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1af5412716deb497E:

00000000 <<cstr_core::CStr as core::cmp::PartialEq>::eq>:
_ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1af5412716deb497E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1156
        }
    }
}

impl PartialEq for CStr {
    fn eq(&self, other: &CStr) -> bool {
   0:	b580      	push	{r7, lr}
   2:	4694      	mov	ip, r2
_ZN9cstr_core4CStr8to_bytes17he84c19109741c587E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
        &bytes[..bytes.len() - 1]
   4:	1e4a      	subs	r2, r1, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2745
   6:	b181      	cbz	r1, 2a <<cstr_core::CStr as core::cmp::PartialEq>::eq+0x2a>
_ZN9cstr_core4CStr8to_bytes17he84c19109741c587E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
   8:	1e59      	subs	r1, r3, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2745
   a:	b19b      	cbz	r3, 34 <<cstr_core::CStr as core::cmp::PartialEq>::eq+0x34>
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h56a95321cb71b72aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5312
   c:	428a      	cmp	r2, r1
   e:	bf1c      	itt	ne
  10:	2000      	movne	r0, #0
_ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1af5412716deb497E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1158
        self.to_bytes().eq(other.to_bytes())
    }
  12:	bd80      	popne	{r7, pc}
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h56a95321cb71b72aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  14:	4560      	cmp	r0, ip
  16:	d006      	beq.n	26 <<cstr_core::CStr as core::cmp::PartialEq>::eq+0x26>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  18:	4661      	mov	r1, ip
  1a:	f7ff fffe 	bl	0 <memcmp>
  1e:	fab0 f080 	clz	r0, r0
  22:	0940      	lsrs	r0, r0, #5
_ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1af5412716deb497E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1158
  24:	bd80      	pop	{r7, pc}
  26:	2001      	movs	r0, #1
  28:	bd80      	pop	{r7, pc}
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2746
  2a:	4610      	mov	r0, r2
_ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1af5412716deb497E():
  2c:	2100      	movs	r1, #0
  2e:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
  32:	defe      	udf	#254	; 0xfe
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2746
  34:	4608      	mov	r0, r1
_ZN56_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialEq$GT$2eq17h1af5412716deb497E():
  36:	2100      	movs	r1, #0
  38:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
  3c:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE:

00000000 <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp>:
_ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1162
}
impl Eq for CStr {}
impl PartialOrd for CStr {
    fn partial_cmp(&self, other: &CStr) -> Option<Ordering> {
   0:	b5b0      	push	{r4, r5, r7, lr}
_ZN9cstr_core4CStr8to_bytes17he84c19109741c587E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
        &bytes[..bytes.len() - 1]
   2:	1e4c      	subs	r4, r1, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2745
   4:	b1d1      	cbz	r1, 3c <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp+0x3c>
_ZN9cstr_core4CStr8to_bytes17he84c19109741c587E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
   6:	1e5d      	subs	r5, r3, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2745
   8:	b1eb      	cbz	r3, 46 <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp+0x46>
_ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE():
   a:	4694      	mov	ip, r2
_ZN4core3cmp3Ord3min17hb448d6db397b9e28E():
   c:	4622      	mov	r2, r4
_ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17hf51e3d8b3d53203bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5396
   e:	4661      	mov	r1, ip
_ZN4core3cmp3Ord3min17hb448d6db397b9e28E():
  10:	42ac      	cmp	r4, r5
  12:	bf88      	it	hi
  14:	462a      	movhi	r2, r5
_ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17hf51e3d8b3d53203bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5396
  16:	f7ff fffe 	bl	0 <memcmp>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5399
  1a:	2800      	cmp	r0, #0
  1c:	d005      	beq.n	2a <<cstr_core::CStr as core::cmp::PartialOrd>::partial_cmp+0x2a>
  1e:	f04f 0001 	mov.w	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5401
  22:	bfb8      	it	lt
  24:	f04f 30ff 	movlt.w	r0, #4294967295
_ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1164
        self.to_bytes().partial_cmp(&other.to_bytes())
    }
  28:	bdb0      	pop	{r4, r5, r7, pc}
  2a:	2101      	movs	r1, #1
_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h5e8100122933aa4aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:987
  2c:	42ac      	cmp	r4, r5
  2e:	bf38      	it	cc
  30:	f04f 31ff 	movcc.w	r1, #4294967295
  34:	1b60      	subs	r0, r4, r5
  36:	bf18      	it	ne
  38:	4608      	movne	r0, r1
_ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1164
  3a:	bdb0      	pop	{r4, r5, r7, pc}
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2746
  3c:	4620      	mov	r0, r4
_ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE():
  3e:	2100      	movs	r1, #0
  40:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
  44:	defe      	udf	#254	; 0xfe
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2746
  46:	4628      	mov	r0, r5
_ZN57_$LT$cstr_core..CStr$u20$as$u20$core..cmp..PartialOrd$GT$11partial_cmp17h45385b2373410e3aE():
  48:	2100      	movs	r1, #0
  4a:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E:

00000000 <<cstr_core::CStr as core::cmp::Ord>::cmp>:
_ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1167
}
impl Ord for CStr {
    fn cmp(&self, other: &CStr) -> Ordering {
   0:	b5b0      	push	{r4, r5, r7, lr}
_ZN9cstr_core4CStr8to_bytes17he84c19109741c587E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
        &bytes[..bytes.len() - 1]
   2:	1e4c      	subs	r4, r1, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2745
   4:	b1d1      	cbz	r1, 3c <<cstr_core::CStr as core::cmp::Ord>::cmp+0x3c>
_ZN9cstr_core4CStr8to_bytes17he84c19109741c587E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1033
   6:	1e5d      	subs	r5, r3, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2745
   8:	b1eb      	cbz	r3, 46 <<cstr_core::CStr as core::cmp::Ord>::cmp+0x46>
_ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E():
   a:	4694      	mov	ip, r2
_ZN4core3cmp3Ord3min17hb448d6db397b9e28E():
   c:	4622      	mov	r2, r4
_ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17hf51e3d8b3d53203bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5396
   e:	4661      	mov	r1, ip
_ZN4core3cmp3Ord3min17hb448d6db397b9e28E():
  10:	42ac      	cmp	r4, r5
  12:	bf88      	it	hi
  14:	462a      	movhi	r2, r5
_ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17hf51e3d8b3d53203bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5396
  16:	f7ff fffe 	bl	0 <memcmp>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5399
  1a:	2800      	cmp	r0, #0
  1c:	d005      	beq.n	2a <<cstr_core::CStr as core::cmp::Ord>::cmp+0x2a>
  1e:	f04f 0001 	mov.w	r0, #1
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5401
  22:	bfb8      	it	lt
  24:	f04f 30ff 	movlt.w	r0, #4294967295
_ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1169
        self.to_bytes().cmp(&other.to_bytes())
    }
  28:	bdb0      	pop	{r4, r5, r7, pc}
  2a:	2101      	movs	r1, #1
_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h5e8100122933aa4aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/cmp.rs:987
  2c:	42ac      	cmp	r4, r5
  2e:	bf38      	it	cc
  30:	f04f 31ff 	movcc.w	r1, #4294967295
  34:	1b60      	subs	r0, r4, r5
  36:	bf18      	it	ne
  38:	4608      	movne	r0, r1
_ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:1169
  3a:	bdb0      	pop	{r4, r5, r7, pc}
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2746
  3c:	4620      	mov	r0, r4
_ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E():
  3e:	2100      	movs	r1, #0
  40:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
  44:	defe      	udf	#254	; 0xfe
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h51bcc4bcbb226822E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:2746
  46:	4628      	mov	r0, r5
_ZN50_$LT$cstr_core..CStr$u20$as$u20$core..cmp..Ord$GT$3cmp17h20a60b0b08e83ec3E():
  48:	2100      	movs	r1, #0
  4a:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd7166af2085cca1cE:

00000000 <<cstr_core::FromBytesWithNulError as core::fmt::Debug>::fmt>:
_ZN69_$LT$cstr_core..FromBytesWithNulError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd7166af2085cca1cE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:320
#[derive(Clone, PartialEq, Eq, Debug)]
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b084      	sub	sp, #16
   4:	ad01      	add	r5, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	4604      	mov	r4, r0
   c:	f2c0 0200 	movt	r2, #0
  10:	4628      	mov	r0, r5
  12:	2315      	movs	r3, #21
  14:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_struct>
  18:	f240 0000 	movw	r0, #0
  1c:	f240 0100 	movw	r1, #0
  20:	f2c0 0000 	movt	r0, #0
  24:	ab03      	add	r3, sp, #12
  26:	9000      	str	r0, [sp, #0]
  28:	f2c0 0100 	movt	r1, #0
  2c:	4628      	mov	r0, r5
  2e:	2204      	movs	r2, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:322
    kind: FromBytesWithNulErrorKind,
  30:	9403      	str	r4, [sp, #12]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:320
#[derive(Clone, PartialEq, Eq, Debug)]
  32:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::field>
  36:	4628      	mov	r0, r5
  38:	f7ff fffe 	bl	0 <core::fmt::builders::DebugStruct::finish>
  3c:	b004      	add	sp, #16
  3e:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hae2779c5092fda91E:

00000000 <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt>:
_ZN73_$LT$cstr_core..FromBytesWithNulErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hae2779c5092fda91E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:325
#[derive(Clone, PartialEq, Eq, Debug)]
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b084      	sub	sp, #16
   4:	4604      	mov	r4, r0
   6:	6800      	ldr	r0, [r0, #0]
   8:	2801      	cmp	r0, #1
   a:	d10d      	bne.n	28 <<cstr_core::FromBytesWithNulErrorKind as core::fmt::Debug>::fmt+0x28>
   c:	ac01      	add	r4, sp, #4
   e:	f240 0200 	movw	r2, #0
  12:	f2c0 0200 	movt	r2, #0
  16:	2310      	movs	r3, #16
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  1e:	4620      	mov	r0, r4
  20:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  24:	b004      	add	sp, #16
  26:	bdb0      	pop	{r4, r5, r7, pc}
  28:	ad01      	add	r5, sp, #4
  2a:	f240 0200 	movw	r2, #0
  2e:	f2c0 0200 	movt	r2, #0
  32:	230b      	movs	r3, #11
  34:	4628      	mov	r0, r5
  36:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  3a:	f240 0200 	movw	r2, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:327
    InteriorNul(usize),
  3e:	1d20      	adds	r0, r4, #4
  40:	9000      	str	r0, [sp, #0]
  42:	4669      	mov	r1, sp
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cstr_core-0.1.2\src/lib.rs:325
#[derive(Clone, PartialEq, Eq, Debug)]
  44:	f2c0 0200 	movt	r2, #0
  48:	4628      	mov	r0, r5
  4a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::field>
  4e:	4628      	mov	r0, r5
  50:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  54:	b004      	add	sp, #16
  56:	bdb0      	pop	{r4, r5, r7, pc}

cty-1fbd0c8c5d2ca399.cty.1bucjjx9-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cty.1bucjjx9-cgu.0



cty-3780e3a24a068b13.cty.now4n48r-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cty.now4n48r-cgu.0



generic_array-783b6f34c1f4bc88.generic_array.a62ghij5-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 generic_array.a62ghij5-cgu.0
0000028f l       .debug_str	00000000 
000005bd l       .debug_str	00000000 
000005a7 l       .debug_str	00000000 
00000569 l       .debug_str	00000000 
00000562 l       .debug_str	00000000 
00000530 l       .debug_str	00000000 
000005d4 l       .debug_str	00000000 
000005cd l       .debug_str	00000000 
000005c8 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
00000102 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
000001b7 l       .debug_str	00000000 
000001bc l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000001c6 l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000001d1 l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001d8 l       .debug_str	00000000 
000001db l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001e6 l       .debug_str	00000000 
000001ed l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
00000206 l       .debug_str	00000000 
0000020b l       .debug_str	00000000 
00000217 l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
0000022a l       .debug_str	00000000 
0000022f l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
0000023d l       .debug_str	00000000 
00000240 l       .debug_str	00000000 
00000244 l       .debug_str	00000000 
0000024d l       .debug_str	00000000 
00000254 l       .debug_str	00000000 
00000259 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000264 l       .debug_str	00000000 
0000026a l       .debug_str	00000000 
00000274 l       .debug_str	00000000 
00000277 l       .debug_str	00000000 
0000027d l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
00000526 l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
0000029b l       .debug_str	00000000 
000002a6 l       .debug_str	00000000 
000002af l       .debug_str	00000000 
000002d2 l       .debug_str	00000000 
000002f1 l       .debug_str	00000000 
000002f3 l       .debug_str	00000000 
000002f8 l       .debug_str	00000000 
0000031f l       .debug_str	00000000 
00000324 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
00000330 l       .debug_str	00000000 
00000333 l       .debug_str	00000000 
00000342 l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
0000034d l       .debug_str	00000000 
00000356 l       .debug_str	00000000 
0000035e l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
0000036d l       .debug_str	00000000 
00000381 l       .debug_str	00000000 
0000038d l       .debug_str	00000000 
00000399 l       .debug_str	00000000 
000003b2 l       .debug_str	00000000 
000003b7 l       .debug_str	00000000 
000003c8 l       .debug_str	00000000 
000003d2 l       .debug_str	00000000 
000003e0 l       .debug_str	00000000 
000003e4 l       .debug_str	00000000 
000003ef l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
000003fc l       .debug_str	00000000 
00000400 l       .debug_str	00000000 
00000404 l       .debug_str	00000000 
0000040c l       .debug_str	00000000 
00000423 l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
00000463 l       .debug_str	00000000 
0000046d l       .debug_str	00000000 
00000487 l       .debug_str	00000000 
000004e5 l       .debug_str	00000000 
000004f0 l       .debug_str	00000000 
0000050d l       .debug_str	00000000 
000005bf l       .debug_str	00000000 
00000000 l     O .rodata.cst16	00000010 .Lanon.9ed2c8110020d2b5b382088b094afc8e.0
00000010 l     O .rodata.cst16	00000010 .Lanon.9ed2c8110020d2b5b382088b094afc8e.1
00000000 l     O .rodata..Lanon.9ed2c8110020d2b5b382088b094afc8e.4	00000010 .Lanon.9ed2c8110020d2b5b382088b094afc8e.4
00000000 l     O .rodata..Lanon.9ed2c8110020d2b5b382088b094afc8e.6	00000010 .Lanon.9ed2c8110020d2b5b382088b094afc8e.6
00000000 l    d  .text._ZN13generic_array21from_iter_length_fail17h8d6ade72de06f3f2E	00000000 .text._ZN13generic_array21from_iter_length_fail17h8d6ade72de06f3f2E
00000000 l    d  .rodata..Lanon.9ed2c8110020d2b5b382088b094afc8e.2	00000000 .rodata..Lanon.9ed2c8110020d2b5b382088b094afc8e.2
00000000 l    d  .rodata..Lanon.9ed2c8110020d2b5b382088b094afc8e.3	00000000 .rodata..Lanon.9ed2c8110020d2b5b382088b094afc8e.3
00000000 l    d  .rodata..Lanon.9ed2c8110020d2b5b382088b094afc8e.5	00000000 .rodata..Lanon.9ed2c8110020d2b5b382088b094afc8e.5
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN13generic_array21from_iter_length_fail17h8d6ade72de06f3f2E	00000044 generic_array::from_iter_length_fail
00000000 g     O .rodata._ZN13generic_array3hex11LOWER_CHARS17h645d7f386bfa81a1E	00000008 generic_array::hex::LOWER_CHARS
00000000 g     O .rodata._ZN13generic_array3hex11UPPER_CHARS17he44441314529f82fE	00000008 generic_array::hex::UPPER_CHARS
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
00000000         *UND*	00000000 core::panicking::panic_fmt



Disassembly of section .text._ZN13generic_array21from_iter_length_fail17h8d6ade72de06f3f2E:

00000000 <generic_array::from_iter_length_fail>:
_ZN13generic_array21from_iter_length_fail17h8d6ade72de06f3f2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\generic-array-0.12.0\src/lib.rs:319
    }
}

#[inline(never)]
#[cold]
fn from_iter_length_fail(length: usize, expected: usize) -> ! {
   0:	b08c      	sub	sp, #48	; 0x30
   2:	e9cd 0100 	strd	r0, r1, [sp]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\generic-array-0.12.0\src/lib.rs:320
    panic!(
   6:	f240 0000 	movw	r0, #0
   a:	a901      	add	r1, sp, #4
   c:	f2c0 0000 	movt	r0, #0
  10:	900b      	str	r0, [sp, #44]	; 0x2c
  12:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  16:	4668      	mov	r0, sp
  18:	9008      	str	r0, [sp, #32]
  1a:	2002      	movs	r0, #2
  1c:	a908      	add	r1, sp, #32
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  1e:	9007      	str	r0, [sp, #28]
  20:	9106      	str	r1, [sp, #24]
  22:	2100      	movs	r1, #0
  24:	9105      	str	r1, [sp, #20]
  26:	e9cd 0103 	strd	r0, r1, [sp, #12]
  2a:	f240 0000 	movw	r0, #0
  2e:	f2c0 0000 	movt	r0, #0
_ZN13generic_array21from_iter_length_fail17h8d6ade72de06f3f2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\generic-array-0.12.0\src/lib.rs:320
  32:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  36:	9002      	str	r0, [sp, #8]
  38:	a802      	add	r0, sp, #8
_ZN13generic_array21from_iter_length_fail17h8d6ade72de06f3f2E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\generic-array-0.12.0\src/lib.rs:320
  3a:	f2c0 0100 	movt	r1, #0
  3e:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  42:	defe      	udf	#254	; 0xfe

memchr-0f3a8d204ce12504.memchr.1tfy2n38-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memchr.1tfy2n38-cgu.0
0000059e l       .debug_str	00000000 
00000c2e l       .debug_str	00000000 
00000c46 l       .debug_str	00000000 
00000c24 l       .debug_str	00000000 
00000c42 l       .debug_str	00000000 
00000c20 l       .debug_str	00000000 
00000c3e l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c3a l       .debug_str	00000000 
00000c14 l       .debug_str	00000000 
00000c36 l       .debug_str	00000000 
00000c0b l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000f3 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000108 l       .debug_str	00000000 
0000010b l       .debug_str	00000000 
00000110 l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000125 l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000189 l       .debug_str	00000000 
00000194 l       .debug_str	00000000 
0000019e l       .debug_str	00000000 
000001a3 l       .debug_str	00000000 
000001a9 l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000001f7 l       .debug_str	00000000 
000001ff l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
0000020b l       .debug_str	00000000 
00000297 l       .debug_str	00000000 
000002a9 l       .debug_str	00000000 
000002b2 l       .debug_str	00000000 
000002b9 l       .debug_str	00000000 
000002bf l       .debug_str	00000000 
000002c3 l       .debug_str	00000000 
000002c9 l       .debug_str	00000000 
000002cf l       .debug_str	00000000 
000002d3 l       .debug_str	00000000 
000002d7 l       .debug_str	00000000 
000002e4 l       .debug_str	00000000 
00000367 l       .debug_str	00000000 
00000371 l       .debug_str	00000000 
000003f9 l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
0000040c l       .debug_str	00000000 
00000481 l       .debug_str	00000000 
000004ae l       .debug_str	00000000 
000004b4 l       .debug_str	00000000 
000004bb l       .debug_str	00000000 
000004c4 l       .debug_str	00000000 
000004f9 l       .debug_str	00000000 
00000505 l       .debug_str	00000000 
00000507 l       .debug_str	00000000 
0000050b l       .debug_str	00000000 
0000050f l       .debug_str	00000000 
00000517 l       .debug_str	00000000 
00000519 l       .debug_str	00000000 
00000551 l       .debug_str	00000000 
00000569 l       .debug_str	00000000 
00000570 l       .debug_str	00000000 
00000574 l       .debug_str	00000000 
00000579 l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
0000058c l       .debug_str	00000000 
00000596 l       .debug_str	00000000 
00000bda l       .debug_str	00000000 
000005a6 l       .debug_str	00000000 
000005b1 l       .debug_str	00000000 
000005ef l       .debug_str	00000000 
00000607 l       .debug_str	00000000 
0000060b l       .debug_str	00000000 
0000060f l       .debug_str	00000000 
00000617 l       .debug_str	00000000 
00000655 l       .debug_str	00000000 
0000066a l       .debug_str	00000000 
0000066c l       .debug_str	00000000 
00000670 l       .debug_str	00000000 
000006b8 l       .debug_str	00000000 
000006c5 l       .debug_str	00000000 
000006c9 l       .debug_str	00000000 
00000705 l       .debug_str	00000000 
00000718 l       .debug_str	00000000 
0000071d l       .debug_str	00000000 
0000071f l       .debug_str	00000000 
0000074f l       .debug_str	00000000 
00000757 l       .debug_str	00000000 
0000075b l       .debug_str	00000000 
0000075f l       .debug_str	00000000 
00000797 l       .debug_str	00000000 
0000079f l       .debug_str	00000000 
000007ed l       .debug_str	00000000 
000007f9 l       .debug_str	00000000 
000007fe l       .debug_str	00000000 
00000801 l       .debug_str	00000000 
00000804 l       .debug_str	00000000 
00000834 l       .debug_str	00000000 
0000083c l       .debug_str	00000000 
00000868 l       .debug_str	00000000 
0000086c l       .debug_str	00000000 
0000086e l       .debug_str	00000000 
00000872 l       .debug_str	00000000 
000008aa l       .debug_str	00000000 
000008b2 l       .debug_str	00000000 
00000900 l       .debug_str	00000000 
00000903 l       .debug_str	00000000 
00000907 l       .debug_str	00000000 
0000090b l       .debug_str	00000000 
00000910 l       .debug_str	00000000 
00000939 l       .debug_str	00000000 
00000944 l       .debug_str	00000000 
0000094a l       .debug_str	00000000 
0000096f l       .debug_str	00000000 
00000972 l       .debug_str	00000000 
000009aa l       .debug_str	00000000 
000009c2 l       .debug_str	00000000 
000009fa l       .debug_str	00000000 
00000a03 l       .debug_str	00000000 
00000a52 l       .debug_str	00000000 
00000a8a l       .debug_str	00000000 
00000a93 l       .debug_str	00000000 
00000ae2 l       .debug_str	00000000 
00000b11 l       .debug_str	00000000 
00000b41 l       .debug_str	00000000 
00000b71 l       .debug_str	00000000 
00000ba1 l       .debug_str	00000000 
00000ba9 l       .debug_str	00000000 
00000c32 l       .debug_str	00000000 
00000000 l    d  .text._ZN6memchr8fallback6memchr17hb3f65631971dd679E	00000000 .text._ZN6memchr8fallback6memchr17hb3f65631971dd679E
00000000 l    d  .text._ZN6memchr8fallback7memchr217h308bb4361731fe2eE	00000000 .text._ZN6memchr8fallback7memchr217h308bb4361731fe2eE
00000000 l    d  .text._ZN6memchr8fallback7memchr317h34785bc55c134c83E	00000000 .text._ZN6memchr8fallback7memchr317h34785bc55c134c83E
00000000 l    d  .text._ZN6memchr8fallback7memrchr17h3163f27dc9931b72E	00000000 .text._ZN6memchr8fallback7memrchr17h3163f27dc9931b72E
00000000 l    d  .text._ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E	00000000 .text._ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E
00000000 l    d  .text._ZN6memchr8fallback8memrchr317h6346214141fec5dcE	00000000 .text._ZN6memchr8fallback8memrchr317h6346214141fec5dcE
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN6memchr8fallback6memchr17hb3f65631971dd679E	00000182 memchr::fallback::memchr
00000000 g     F .text._ZN6memchr8fallback7memchr217h308bb4361731fe2eE	000001a2 memchr::fallback::memchr2
00000000 g     F .text._ZN6memchr8fallback7memchr317h34785bc55c134c83E	00000214 memchr::fallback::memchr3
00000000 g     F .text._ZN6memchr8fallback7memrchr17h3163f27dc9931b72E	00000196 memchr::fallback::memrchr
00000000 g     F .text._ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E	000001ba memchr::fallback::memrchr2
00000000 g     F .text._ZN6memchr8fallback8memrchr317h6346214141fec5dcE	00000242 memchr::fallback::memrchr3



Disassembly of section .text._ZN6memchr8fallback6memchr17hb3f65631971dd679E:

00000000 <memchr::fallback::memchr>:
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:45
#[inline(always)]
fn repeat_byte(b: u8) -> usize {
    (b as usize) * (usize::MAX / 255)
}

pub fn memchr(n1: u8, haystack: &[u8]) -> Option<usize> {
   0:	b570      	push	{r4, r5, r6, lr}
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
   2:	eb01 0c02 	add.w	ip, r1, r2
_ZN6memchr8fallback11repeat_byte17h399c8b9950f73dd0E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
   6:	fa5f fe80 	uxtb.w	lr, r0
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:55
    let start_ptr = haystack.as_ptr();
    let end_ptr = haystack[haystack.len()..].as_ptr();
    let mut ptr = start_ptr;

    unsafe {
        if haystack.len() < USIZE_BYTES {
   a:	2a03      	cmp	r2, #3
   c:	d825      	bhi.n	5a <memchr::fallback::memchr+0x5a>
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    confirm: F,
) -> Option<usize> {
    debug_assert!(start_ptr <= ptr);
    debug_assert!(ptr <= end_ptr);

    while ptr < end_ptr {
   e:	2a00      	cmp	r2, #0
  10:	f000 808c 	beq.w	12c <memchr::fallback::memchr+0x12c>
  14:	2000      	movs	r0, #0
  16:	460a      	mov	r2, r1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  18:	5c0b      	ldrb	r3, [r1, r0]
  1a:	4573      	cmp	r3, lr
  1c:	f000 8089 	beq.w	132 <memchr::fallback::memchr+0x132>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  20:	180b      	adds	r3, r1, r0
  22:	1c5c      	adds	r4, r3, #1
  24:	4564      	cmp	r4, ip
  26:	f080 8081 	bcs.w	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  2a:	7824      	ldrb	r4, [r4, #0]
  2c:	4574      	cmp	r4, lr
  2e:	f000 8085 	beq.w	13c <memchr::fallback::memchr+0x13c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  32:	1c9c      	adds	r4, r3, #2
  34:	4564      	cmp	r4, ip
  36:	d279      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  38:	7824      	ldrb	r4, [r4, #0]
  3a:	4574      	cmp	r4, lr
  3c:	f000 8083 	beq.w	146 <memchr::fallback::memchr+0x146>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  40:	3303      	adds	r3, #3
  42:	4563      	cmp	r3, ip
  44:	d272      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  46:	781b      	ldrb	r3, [r3, #0]
  48:	4573      	cmp	r3, lr
  4a:	f000 8081 	beq.w	150 <memchr::fallback::memchr+0x150>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  4e:	3004      	adds	r0, #4
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  50:	3204      	adds	r2, #4
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
  52:	180b      	adds	r3, r1, r0
  54:	4563      	cmp	r3, ip
  56:	d3df      	bcc.n	18 <memchr::fallback::memchr+0x18>
  58:	e068      	b.n	12c <memchr::fallback::memchr+0x12c>
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
  5a:	f04f 3001 	mov.w	r0, #16843009	; 0x1010101
_ZN4core10intrinsics19copy_nonoverlapping17hcd00e47662105ae3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  5e:	680b      	ldr	r3, [r1, #0]
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
  60:	fb0e f000 	mul.w	r0, lr, r0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:60
        if contains_zero_byte(chunk ^ vn1) {
  64:	ea83 0400 	eor.w	r4, r3, r0
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  68:	f1a4 3501 	sub.w	r5, r4, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  6c:	ea25 0404 	bic.w	r4, r5, r4
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:60
        if contains_zero_byte(chunk ^ vn1) {
  70:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
  74:	d01f      	beq.n	b6 <memchr::fallback::memchr+0xb6>
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  76:	2a01      	cmp	r2, #1
  78:	db58      	blt.n	12c <memchr::fallback::memchr+0x12c>
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:60
        if contains_zero_byte(chunk ^ vn1) {
  7a:	b2d8      	uxtb	r0, r3
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  7c:	4570      	cmp	r0, lr
  7e:	4608      	mov	r0, r1
  80:	d058      	beq.n	134 <memchr::fallback::memchr+0x134>
  82:	4608      	mov	r0, r1
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  84:	1c42      	adds	r2, r0, #1
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  86:	4562      	cmp	r2, ip
  88:	d250      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  8a:	7813      	ldrb	r3, [r2, #0]
  8c:	4573      	cmp	r3, lr
  8e:	d064      	beq.n	15a <memchr::fallback::memchr+0x15a>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  90:	1c82      	adds	r2, r0, #2
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  92:	4562      	cmp	r2, ip
  94:	d24a      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  96:	7813      	ldrb	r3, [r2, #0]
  98:	4573      	cmp	r3, lr
  9a:	d068      	beq.n	16e <memchr::fallback::memchr+0x16e>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  9c:	1cc2      	adds	r2, r0, #3
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  9e:	4562      	cmp	r2, ip
  a0:	d244      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  a2:	7813      	ldrb	r3, [r2, #0]
  a4:	4573      	cmp	r3, lr
  a6:	d067      	beq.n	178 <memchr::fallback::memchr+0x178>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  a8:	3004      	adds	r0, #4
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  aa:	4560      	cmp	r0, ip
  ac:	d23e      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  ae:	7802      	ldrb	r2, [r0, #0]
  b0:	4572      	cmp	r2, lr
  b2:	d1e7      	bne.n	84 <memchr::fallback::memchr+0x84>
  b4:	e03e      	b.n	134 <memchr::fallback::memchr+0x134>
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:64
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
  b6:	f001 0303 	and.w	r3, r1, #3
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:67
        while loop_size == LOOP_SIZE && ptr <= ptr_sub(end_ptr, loop_size) {
  ba:	2a08      	cmp	r2, #8
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:64
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
  bc:	f1c3 0304 	rsb	r3, r3, #4
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  c0:	440b      	add	r3, r1
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:67
        while loop_size == LOOP_SIZE && ptr <= ptr_sub(end_ptr, loop_size) {
  c2:	d317      	bcc.n	f4 <memchr::fallback::memchr+0xf4>
  c4:	f1ac 0208 	sub.w	r2, ip, #8
  c8:	4293      	cmp	r3, r2
  ca:	d903      	bls.n	d4 <memchr::fallback::memchr+0xd4>
  cc:	e012      	b.n	f4 <memchr::fallback::memchr+0xf4>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  ce:	3308      	adds	r3, #8
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:67
  d0:	4293      	cmp	r3, r2
  d2:	d80f      	bhi.n	f4 <memchr::fallback::memchr+0xf4>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:70
            let a = *(ptr as *const usize);
  d4:	e9d3 4500 	ldrd	r4, r5, [r3]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:73
            let eqb = contains_zero_byte(b ^ vn1);
  d8:	4045      	eors	r5, r0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:72
            let eqa = contains_zero_byte(a ^ vn1);
  da:	4044      	eors	r4, r0
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  dc:	f1a4 3601 	sub.w	r6, r4, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  e0:	ea26 0404 	bic.w	r4, r6, r4
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  e4:	f1a5 3601 	sub.w	r6, r5, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
  e8:	ea26 0505 	bic.w	r5, r6, r5
  ec:	432c      	orrs	r4, r5
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:74
            if eqa || eqb {
  ee:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
  f2:	d0ec      	beq.n	ce <memchr::fallback::memchr+0xce>
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  f4:	4563      	cmp	r3, ip
  f6:	d219      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  f8:	7818      	ldrb	r0, [r3, #0]
  fa:	4570      	cmp	r0, lr
  fc:	d032      	beq.n	164 <memchr::fallback::memchr+0x164>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  fe:	1c58      	adds	r0, r3, #1
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 100:	4560      	cmp	r0, ip
 102:	d213      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 104:	7802      	ldrb	r2, [r0, #0]
 106:	4572      	cmp	r2, lr
 108:	d014      	beq.n	134 <memchr::fallback::memchr+0x134>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 10a:	1c98      	adds	r0, r3, #2
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 10c:	4560      	cmp	r0, ip
 10e:	d20d      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 110:	7802      	ldrb	r2, [r0, #0]
 112:	4572      	cmp	r2, lr
 114:	d00e      	beq.n	134 <memchr::fallback::memchr+0x134>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 116:	1cd8      	adds	r0, r3, #3
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 118:	4560      	cmp	r0, ip
 11a:	d207      	bcs.n	12c <memchr::fallback::memchr+0x12c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 11c:	7802      	ldrb	r2, [r0, #0]
 11e:	4572      	cmp	r2, lr
 120:	d008      	beq.n	134 <memchr::fallback::memchr+0x134>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 122:	3304      	adds	r3, #4
 124:	2000      	movs	r0, #0
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 126:	4563      	cmp	r3, ip
 128:	d3e6      	bcc.n	f8 <memchr::fallback::memchr+0xf8>
 12a:	e000      	b.n	12e <memchr::fallback::memchr+0x12e>
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
 12c:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:81
}
 12e:	4611      	mov	r1, r2
 130:	bd70      	pop	{r4, r5, r6, pc}
_ZN6memchr8fallback14forward_search17h70203f2d84449443E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 132:	4408      	add	r0, r1
_ZN6memchr8fallback6memchr17hb3f65631971dd679E():
 134:	1a42      	subs	r2, r0, r1
 136:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:81
}
 138:	4611      	mov	r1, r2
 13a:	bd70      	pop	{r4, r5, r6, pc}
 13c:	1c50      	adds	r0, r2, #1
 13e:	1a42      	subs	r2, r0, r1
 140:	2001      	movs	r0, #1
 142:	4611      	mov	r1, r2
 144:	bd70      	pop	{r4, r5, r6, pc}
 146:	1c90      	adds	r0, r2, #2
 148:	1a42      	subs	r2, r0, r1
 14a:	2001      	movs	r0, #1
 14c:	4611      	mov	r1, r2
 14e:	bd70      	pop	{r4, r5, r6, pc}
 150:	1cd0      	adds	r0, r2, #3
 152:	1a42      	subs	r2, r0, r1
 154:	2001      	movs	r0, #1
 156:	4611      	mov	r1, r2
 158:	bd70      	pop	{r4, r5, r6, pc}
 15a:	4610      	mov	r0, r2
 15c:	1a42      	subs	r2, r0, r1
 15e:	2001      	movs	r0, #1
 160:	4611      	mov	r1, r2
 162:	bd70      	pop	{r4, r5, r6, pc}
 164:	4618      	mov	r0, r3
 166:	1a42      	subs	r2, r0, r1
 168:	2001      	movs	r0, #1
 16a:	4611      	mov	r1, r2
 16c:	bd70      	pop	{r4, r5, r6, pc}
 16e:	4610      	mov	r0, r2
 170:	1a42      	subs	r2, r0, r1
 172:	2001      	movs	r0, #1
 174:	4611      	mov	r1, r2
 176:	bd70      	pop	{r4, r5, r6, pc}
 178:	4610      	mov	r0, r2
 17a:	1a42      	subs	r2, r0, r1
 17c:	2001      	movs	r0, #1
 17e:	4611      	mov	r1, r2
 180:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN6memchr8fallback7memchr217h308bb4361731fe2eE:

00000000 <memchr::fallback::memchr2>:
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:84
pub fn memchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
   4:	eb02 0c03 	add.w	ip, r2, r3
_ZN6memchr8fallback11repeat_byte17h399c8b9950f73dd0E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
   8:	fa5f fe81 	uxtb.w	lr, r1
   c:	fa5f f880 	uxtb.w	r8, r0
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:94
        if haystack.len() < USIZE_BYTES {
  10:	2b03      	cmp	r3, #3
  12:	d832      	bhi.n	7a <memchr::fallback::memchr2+0x7a>
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  14:	2b00      	cmp	r3, #0
  16:	f000 80b2 	beq.w	17e <memchr::fallback::memchr2+0x17e>
  1a:	2000      	movs	r0, #0
  1c:	4611      	mov	r1, r2
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  1e:	5c13      	ldrb	r3, [r2, r0]
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  20:	4543      	cmp	r3, r8
  22:	bf18      	it	ne
  24:	4573      	cmpne	r3, lr
  26:	f000 80b2 	beq.w	18e <memchr::fallback::memchr2+0x18e>
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  2a:	1815      	adds	r5, r2, r0
  2c:	1c6e      	adds	r6, r5, #1
  2e:	4566      	cmp	r6, ip
  30:	f080 80a5 	bcs.w	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  34:	7836      	ldrb	r6, [r6, #0]
  36:	1c4b      	adds	r3, r1, #1
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  38:	4546      	cmp	r6, r8
  3a:	bf18      	it	ne
  3c:	4576      	cmpne	r6, lr
  3e:	f000 80a7 	beq.w	190 <memchr::fallback::memchr2+0x190>
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  42:	1cae      	adds	r6, r5, #2
  44:	4566      	cmp	r6, ip
  46:	f080 809a 	bcs.w	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  4a:	7836      	ldrb	r6, [r6, #0]
  4c:	1c8b      	adds	r3, r1, #2
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  4e:	4546      	cmp	r6, r8
  50:	bf18      	it	ne
  52:	4576      	cmpne	r6, lr
  54:	f000 809c 	beq.w	190 <memchr::fallback::memchr2+0x190>
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  58:	3503      	adds	r5, #3
  5a:	4565      	cmp	r5, ip
  5c:	f080 808f 	bcs.w	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  60:	782d      	ldrb	r5, [r5, #0]
  62:	1ccb      	adds	r3, r1, #3
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  64:	4545      	cmp	r5, r8
  66:	bf18      	it	ne
  68:	4575      	cmpne	r5, lr
  6a:	f000 8091 	beq.w	190 <memchr::fallback::memchr2+0x190>
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  6e:	3004      	adds	r0, #4
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  70:	3104      	adds	r1, #4
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
  72:	1813      	adds	r3, r2, r0
  74:	4563      	cmp	r3, ip
  76:	d3d2      	bcc.n	1e <memchr::fallback::memchr2+0x1e>
  78:	e081      	b.n	17e <memchr::fallback::memchr2+0x17e>
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
  7a:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
_ZN4core10intrinsics19copy_nonoverlapping17hcd00e47662105ae3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  7e:	6815      	ldr	r5, [r2, #0]
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
  80:	fb0e f001 	mul.w	r0, lr, r1
  84:	fb08 f101 	mul.w	r1, r8, r1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:99
        let eq1 = contains_zero_byte(chunk ^ vn1);
  88:	ea85 0601 	eor.w	r6, r5, r1
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  8c:	f1a6 3701 	sub.w	r7, r6, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  90:	ea27 0606 	bic.w	r6, r7, r6
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:100
        let eq2 = contains_zero_byte(chunk ^ vn2);
  94:	ea85 0700 	eor.w	r7, r5, r0
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  98:	f1a7 3401 	sub.w	r4, r7, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  9c:	43bc      	bics	r4, r7
  9e:	4334      	orrs	r4, r6
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:101
        if eq1 || eq2 {
  a0:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
  a4:	d02a      	beq.n	fc <memchr::fallback::memchr2+0xfc>
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  a6:	2b01      	cmp	r3, #1
  a8:	db69      	blt.n	17e <memchr::fallback::memchr2+0x17e>
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:101
        if eq1 || eq2 {
  aa:	b2e8      	uxtb	r0, r5
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  ac:	4540      	cmp	r0, r8
  ae:	d069      	beq.n	184 <memchr::fallback::memchr2+0x184>
  b0:	4570      	cmp	r0, lr
  b2:	4610      	mov	r0, r2
  b4:	d067      	beq.n	186 <memchr::fallback::memchr2+0x186>
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
  b6:	4611      	mov	r1, r2
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  b8:	1c48      	adds	r0, r1, #1
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  ba:	4560      	cmp	r0, ip
  bc:	d25f      	bcs.n	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  be:	7803      	ldrb	r3, [r0, #0]
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  c0:	4543      	cmp	r3, r8
  c2:	bf18      	it	ne
  c4:	4573      	cmpne	r3, lr
  c6:	d05e      	beq.n	186 <memchr::fallback::memchr2+0x186>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  c8:	1c88      	adds	r0, r1, #2
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  ca:	4560      	cmp	r0, ip
  cc:	d257      	bcs.n	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  ce:	7803      	ldrb	r3, [r0, #0]
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  d0:	4543      	cmp	r3, r8
  d2:	bf18      	it	ne
  d4:	4573      	cmpne	r3, lr
  d6:	d056      	beq.n	186 <memchr::fallback::memchr2+0x186>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  d8:	1cc8      	adds	r0, r1, #3
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  da:	4560      	cmp	r0, ip
  dc:	d24f      	bcs.n	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  de:	7803      	ldrb	r3, [r0, #0]
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  e0:	4543      	cmp	r3, r8
  e2:	bf18      	it	ne
  e4:	4573      	cmpne	r3, lr
  e6:	d04e      	beq.n	186 <memchr::fallback::memchr2+0x186>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  e8:	1d08      	adds	r0, r1, #4
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  ea:	4560      	cmp	r0, ip
  ec:	d247      	bcs.n	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  ee:	7801      	ldrb	r1, [r0, #0]
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
  f0:	4541      	cmp	r1, r8
  f2:	d048      	beq.n	186 <memchr::fallback::memchr2+0x186>
  f4:	4571      	cmp	r1, lr
  f6:	4601      	mov	r1, r0
  f8:	d1de      	bne.n	b8 <memchr::fallback::memchr2+0xb8>
  fa:	e044      	b.n	186 <memchr::fallback::memchr2+0x186>
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:105
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
  fc:	f002 0303 	and.w	r3, r2, #3
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 100:	f1ac 0504 	sub.w	r5, ip, #4
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:105
 104:	f1c3 0304 	rsb	r3, r3, #4
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 108:	4413      	add	r3, r2
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:108
        while ptr <= ptr_sub(end_ptr, USIZE_BYTES) {
 10a:	42ab      	cmp	r3, r5
 10c:	d903      	bls.n	116 <memchr::fallback::memchr2+0x116>
 10e:	e012      	b.n	136 <memchr::fallback::memchr2+0x136>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 110:	3304      	adds	r3, #4
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:108
 112:	42ab      	cmp	r3, r5
 114:	d80f      	bhi.n	136 <memchr::fallback::memchr2+0x136>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:111
            let chunk = *(ptr as *const usize);
 116:	681c      	ldr	r4, [r3, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:112
            let eq1 = contains_zero_byte(chunk ^ vn1);
 118:	ea84 0601 	eor.w	r6, r4, r1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:113
            let eq2 = contains_zero_byte(chunk ^ vn2);
 11c:	4044      	eors	r4, r0
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 11e:	f1a6 3701 	sub.w	r7, r6, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 122:	ea27 0606 	bic.w	r6, r7, r6
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 126:	f1a4 3701 	sub.w	r7, r4, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
 12a:	ea27 0404 	bic.w	r4, r7, r4
 12e:	4334      	orrs	r4, r6
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:114
            if eq1 || eq2 {
 130:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
 134:	d0ec      	beq.n	110 <memchr::fallback::memchr2+0x110>
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 136:	4563      	cmp	r3, ip
 138:	d221      	bcs.n	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 13a:	7818      	ldrb	r0, [r3, #0]
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
 13c:	4540      	cmp	r0, r8
 13e:	bf18      	it	ne
 140:	4570      	cmpne	r0, lr
 142:	d029      	beq.n	198 <memchr::fallback::memchr2+0x198>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 144:	1c58      	adds	r0, r3, #1
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 146:	4560      	cmp	r0, ip
 148:	d219      	bcs.n	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 14a:	7801      	ldrb	r1, [r0, #0]
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
 14c:	4541      	cmp	r1, r8
 14e:	bf18      	it	ne
 150:	4571      	cmpne	r1, lr
 152:	d018      	beq.n	186 <memchr::fallback::memchr2+0x186>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 154:	1c98      	adds	r0, r3, #2
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 156:	4560      	cmp	r0, ip
 158:	d211      	bcs.n	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 15a:	7801      	ldrb	r1, [r0, #0]
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
 15c:	4541      	cmp	r1, r8
 15e:	bf18      	it	ne
 160:	4571      	cmpne	r1, lr
 162:	d010      	beq.n	186 <memchr::fallback::memchr2+0x186>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 164:	1cd8      	adds	r0, r3, #3
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 166:	4560      	cmp	r0, ip
 168:	d209      	bcs.n	17e <memchr::fallback::memchr2+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 16a:	7801      	ldrb	r1, [r0, #0]
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
 16c:	4541      	cmp	r1, r8
 16e:	bf18      	it	ne
 170:	4571      	cmpne	r1, lr
 172:	d008      	beq.n	186 <memchr::fallback::memchr2+0x186>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 174:	3304      	adds	r3, #4
 176:	2000      	movs	r0, #0
_ZN6memchr8fallback14forward_search17hca1544f7fd31cb6bE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 178:	4563      	cmp	r3, ip
 17a:	d3de      	bcc.n	13a <memchr::fallback::memchr2+0x13a>
 17c:	e000      	b.n	180 <memchr::fallback::memchr2+0x180>
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
 17e:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:121
}
 180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 184:	4610      	mov	r0, r2
 186:	1a81      	subs	r1, r0, r2
 188:	2001      	movs	r0, #1
 18a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
_ZN6memchr8fallback7memchr228_$u7b$$u7b$closure$u7d$$u7d$17hee0a55f7c5dd4542E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:87
    let confirm = |byte| byte == n1 || byte == n2;
 18e:	1813      	adds	r3, r2, r0
_ZN6memchr8fallback3sub17hee88514599f9dc09E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:345

/// Subtract `b` from `a` and return the difference. `a` should be greater than
/// or equal to `b`.
fn sub(a: *const u8, b: *const u8) -> usize {
    debug_assert!(a >= b);
    (a as usize) - (b as usize)
 190:	1a99      	subs	r1, r3, r2
 192:	2001      	movs	r0, #1
_ZN6memchr8fallback7memchr217h308bb4361731fe2eE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:121
}
 194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 198:	4618      	mov	r0, r3
 19a:	1a81      	subs	r1, r0, r2
 19c:	2001      	movs	r0, #1
 19e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

Disassembly of section .text._ZN6memchr8fallback7memchr317h34785bc55c134c83E:

00000000 <memchr::fallback::memchr3>:
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:124
pub fn memchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	9d09      	ldr	r5, [sp, #36]	; 0x24
_ZN6memchr8fallback11repeat_byte17h399c8b9950f73dd0E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
   6:	fa5f f982 	uxtb.w	r9, r2
   a:	fa5f fe81 	uxtb.w	lr, r1
   e:	fa5f f880 	uxtb.w	r8, r0
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  12:	eb03 0c05 	add.w	ip, r3, r5
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:135
        if haystack.len() < USIZE_BYTES {
  16:	2d03      	cmp	r5, #3
  18:	d83e      	bhi.n	98 <memchr::fallback::memchr3+0x98>
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  1a:	2d00      	cmp	r5, #0
  1c:	f000 80e3 	beq.w	1e6 <memchr::fallback::memchr3+0x1e6>
  20:	2000      	movs	r0, #0
  22:	4619      	mov	r1, r3
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  24:	5c1d      	ldrb	r5, [r3, r0]
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  26:	454d      	cmp	r5, r9
  28:	bf18      	it	ne
  2a:	4545      	cmpne	r5, r8
  2c:	f000 80de 	beq.w	1ec <memchr::fallback::memchr3+0x1ec>
  30:	4575      	cmp	r5, lr
  32:	f000 80db 	beq.w	1ec <memchr::fallback::memchr3+0x1ec>
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  36:	181e      	adds	r6, r3, r0
  38:	1c77      	adds	r7, r6, #1
  3a:	4567      	cmp	r7, ip
  3c:	f080 80d3 	bcs.w	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  40:	783f      	ldrb	r7, [r7, #0]
  42:	1c4d      	adds	r5, r1, #1
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  44:	454f      	cmp	r7, r9
  46:	f000 80d2 	beq.w	1ee <memchr::fallback::memchr3+0x1ee>
  4a:	4547      	cmp	r7, r8
  4c:	bf18      	it	ne
  4e:	4577      	cmpne	r7, lr
  50:	f000 80cd 	beq.w	1ee <memchr::fallback::memchr3+0x1ee>
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  54:	1cb7      	adds	r7, r6, #2
  56:	4567      	cmp	r7, ip
  58:	f080 80c5 	bcs.w	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  5c:	783f      	ldrb	r7, [r7, #0]
  5e:	1c8d      	adds	r5, r1, #2
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  60:	454f      	cmp	r7, r9
  62:	f000 80c4 	beq.w	1ee <memchr::fallback::memchr3+0x1ee>
  66:	4547      	cmp	r7, r8
  68:	bf18      	it	ne
  6a:	4577      	cmpne	r7, lr
  6c:	f000 80bf 	beq.w	1ee <memchr::fallback::memchr3+0x1ee>
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  70:	3603      	adds	r6, #3
  72:	4566      	cmp	r6, ip
  74:	f080 80b7 	bcs.w	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  78:	7836      	ldrb	r6, [r6, #0]
  7a:	1ccd      	adds	r5, r1, #3
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  7c:	454e      	cmp	r6, r9
  7e:	f000 80b6 	beq.w	1ee <memchr::fallback::memchr3+0x1ee>
  82:	4546      	cmp	r6, r8
  84:	bf18      	it	ne
  86:	4576      	cmpne	r6, lr
  88:	f000 80b1 	beq.w	1ee <memchr::fallback::memchr3+0x1ee>
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  8c:	3004      	adds	r0, #4
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  8e:	3104      	adds	r1, #4
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
  90:	181a      	adds	r2, r3, r0
  92:	4562      	cmp	r2, ip
  94:	d3c6      	bcc.n	24 <memchr::fallback::memchr3+0x24>
  96:	e0a6      	b.n	1e6 <memchr::fallback::memchr3+0x1e6>
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
  98:	f04f 3601 	mov.w	r6, #16843009	; 0x1010101
_ZN4core10intrinsics19copy_nonoverlapping17hcd00e47662105ae3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  9c:	681f      	ldr	r7, [r3, #0]
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
  9e:	fb09 fa06 	mul.w	sl, r9, r6
  a2:	fb0e fb06 	mul.w	fp, lr, r6
  a6:	fb08 f606 	mul.w	r6, r8, r6
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:140
        let eq1 = contains_zero_byte(chunk ^ vn1);
  aa:	ea87 0406 	eor.w	r4, r7, r6
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  ae:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  b2:	43a2      	bics	r2, r4
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:141
        let eq2 = contains_zero_byte(chunk ^ vn2);
  b4:	ea87 040b 	eor.w	r4, r7, fp
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  b8:	f1a4 3001 	sub.w	r0, r4, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  bc:	43a0      	bics	r0, r4
  be:	4310      	orrs	r0, r2
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:142
        let eq3 = contains_zero_byte(chunk ^ vn3);
  c0:	ea87 020a 	eor.w	r2, r7, sl
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  c4:	f1a2 3401 	sub.w	r4, r2, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  c8:	ea24 0202 	bic.w	r2, r4, r2
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:143
        if eq1 || eq2 || eq3 {
  cc:	4310      	orrs	r0, r2
  ce:	f010 3f80 	tst.w	r0, #2155905152	; 0x80808080
  d2:	d038      	beq.n	146 <memchr::fallback::memchr3+0x146>
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  d4:	2d01      	cmp	r5, #1
  d6:	f2c0 8086 	blt.w	1e6 <memchr::fallback::memchr3+0x1e6>
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:143
        if eq1 || eq2 || eq3 {
  da:	b2f8      	uxtb	r0, r7
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  dc:	4548      	cmp	r0, r9
  de:	f000 808f 	beq.w	200 <memchr::fallback::memchr3+0x200>
  e2:	4540      	cmp	r0, r8
  e4:	f000 8091 	beq.w	20a <memchr::fallback::memchr3+0x20a>
  e8:	4570      	cmp	r0, lr
  ea:	4618      	mov	r0, r3
  ec:	f000 8084 	beq.w	1f8 <memchr::fallback::memchr3+0x1f8>
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
  f0:	4619      	mov	r1, r3
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  f2:	1c48      	adds	r0, r1, #1
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
  f4:	4560      	cmp	r0, ip
  f6:	d276      	bcs.n	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
  f8:	7805      	ldrb	r5, [r0, #0]
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  fa:	454d      	cmp	r5, r9
  fc:	bf18      	it	ne
  fe:	4545      	cmpne	r5, r8
 100:	d07a      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
 102:	4575      	cmp	r5, lr
 104:	d078      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 106:	1c88      	adds	r0, r1, #2
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 108:	4560      	cmp	r0, ip
 10a:	d26c      	bcs.n	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 10c:	7805      	ldrb	r5, [r0, #0]
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 10e:	454d      	cmp	r5, r9
 110:	d072      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
 112:	4545      	cmp	r5, r8
 114:	bf18      	it	ne
 116:	4575      	cmpne	r5, lr
 118:	d06e      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 11a:	1cc8      	adds	r0, r1, #3
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 11c:	4560      	cmp	r0, ip
 11e:	d262      	bcs.n	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 120:	7805      	ldrb	r5, [r0, #0]
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 122:	454d      	cmp	r5, r9
 124:	d068      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
 126:	4545      	cmp	r5, r8
 128:	bf18      	it	ne
 12a:	4575      	cmpne	r5, lr
 12c:	d064      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 12e:	1d08      	adds	r0, r1, #4
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 130:	4560      	cmp	r0, ip
 132:	d258      	bcs.n	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 134:	7801      	ldrb	r1, [r0, #0]
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 136:	4549      	cmp	r1, r9
 138:	bf18      	it	ne
 13a:	4541      	cmpne	r1, r8
 13c:	d05c      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
 13e:	4571      	cmp	r1, lr
 140:	4601      	mov	r1, r0
 142:	d1d6      	bne.n	f2 <memchr::fallback::memchr3+0xf2>
 144:	e058      	b.n	1f8 <memchr::fallback::memchr3+0x1f8>
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:147
        ptr = ptr_add(ptr, USIZE_BYTES - (start_ptr as usize & align));
 146:	f003 0003 	and.w	r0, r3, #3
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 14a:	f1ac 0704 	sub.w	r7, ip, #4
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:147
 14e:	f1c0 0004 	rsb	r0, r0, #4
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 152:	181d      	adds	r5, r3, r0
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:150
        while ptr <= ptr_sub(end_ptr, USIZE_BYTES) {
 154:	42bd      	cmp	r5, r7
 156:	d903      	bls.n	160 <memchr::fallback::memchr3+0x160>
 158:	e019      	b.n	18e <memchr::fallback::memchr3+0x18e>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 15a:	3504      	adds	r5, #4
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:150
 15c:	42bd      	cmp	r5, r7
 15e:	d816      	bhi.n	18e <memchr::fallback::memchr3+0x18e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:153
            let chunk = *(ptr as *const usize);
 160:	6828      	ldr	r0, [r5, #0]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:154
            let eq1 = contains_zero_byte(chunk ^ vn1);
 162:	ea80 0206 	eor.w	r2, r0, r6
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 166:	f1a2 3401 	sub.w	r4, r2, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 16a:	ea24 0202 	bic.w	r2, r4, r2
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:155
            let eq2 = contains_zero_byte(chunk ^ vn2);
 16e:	ea80 040b 	eor.w	r4, r0, fp
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 172:	f1a4 3101 	sub.w	r1, r4, #16843009	; 0x1010101
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:156
            let eq3 = contains_zero_byte(chunk ^ vn3);
 176:	ea80 000a 	eor.w	r0, r0, sl
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 17a:	43a1      	bics	r1, r4
 17c:	4311      	orrs	r1, r2
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 17e:	f1a0 3201 	sub.w	r2, r0, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
 182:	ea22 0000 	bic.w	r0, r2, r0
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:157
            if eq1 || eq2 || eq3 {
 186:	4308      	orrs	r0, r1
 188:	f010 3f80 	tst.w	r0, #2155905152	; 0x80808080
 18c:	d0e5      	beq.n	15a <memchr::fallback::memchr3+0x15a>
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 18e:	4565      	cmp	r5, ip
 190:	d229      	bcs.n	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 192:	7828      	ldrb	r0, [r5, #0]
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 194:	4548      	cmp	r0, r9
 196:	bf18      	it	ne
 198:	4540      	cmpne	r0, r8
 19a:	d02c      	beq.n	1f6 <memchr::fallback::memchr3+0x1f6>
 19c:	4570      	cmp	r0, lr
 19e:	d02a      	beq.n	1f6 <memchr::fallback::memchr3+0x1f6>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 1a0:	1c68      	adds	r0, r5, #1
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 1a2:	4560      	cmp	r0, ip
 1a4:	d21f      	bcs.n	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 1a6:	7801      	ldrb	r1, [r0, #0]
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 1a8:	4549      	cmp	r1, r9
 1aa:	d025      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
 1ac:	4541      	cmp	r1, r8
 1ae:	bf18      	it	ne
 1b0:	4571      	cmpne	r1, lr
 1b2:	d021      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 1b4:	1ca8      	adds	r0, r5, #2
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 1b6:	4560      	cmp	r0, ip
 1b8:	d215      	bcs.n	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 1ba:	7801      	ldrb	r1, [r0, #0]
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 1bc:	4549      	cmp	r1, r9
 1be:	d01b      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
 1c0:	4541      	cmp	r1, r8
 1c2:	bf18      	it	ne
 1c4:	4571      	cmpne	r1, lr
 1c6:	d017      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 1c8:	1ce8      	adds	r0, r5, #3
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 1ca:	4560      	cmp	r0, ip
 1cc:	d20b      	bcs.n	1e6 <memchr::fallback::memchr3+0x1e6>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:296
        if confirm(*ptr) {
 1ce:	7801      	ldrb	r1, [r0, #0]
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 1d0:	4549      	cmp	r1, r9
 1d2:	d011      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
 1d4:	4541      	cmp	r1, r8
 1d6:	bf18      	it	ne
 1d8:	4571      	cmpne	r1, lr
 1da:	d00d      	beq.n	1f8 <memchr::fallback::memchr3+0x1f8>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 1dc:	3504      	adds	r5, #4
 1de:	2000      	movs	r0, #0
_ZN6memchr8fallback14forward_search17hd32a2aafe6b091abE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:295
    while ptr < end_ptr {
 1e0:	4565      	cmp	r5, ip
 1e2:	d3d6      	bcc.n	192 <memchr::fallback::memchr3+0x192>
 1e4:	e000      	b.n	1e8 <memchr::fallback::memchr3+0x1e8>
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
 1e6:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:164
}
 1e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN6memchr8fallback7memchr328_$u7b$$u7b$closure$u7d$$u7d$17hef75c0c938c9d023E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:128
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 1ec:	181d      	adds	r5, r3, r0
_ZN6memchr8fallback3sub17hee88514599f9dc09E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:345
    (a as usize) - (b as usize)
 1ee:	1ae9      	subs	r1, r5, r3
 1f0:	2001      	movs	r0, #1
_ZN6memchr8fallback7memchr317h34785bc55c134c83E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:164
}
 1f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1f6:	4628      	mov	r0, r5
 1f8:	1ac1      	subs	r1, r0, r3
 1fa:	2001      	movs	r0, #1
 1fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 200:	4618      	mov	r0, r3
 202:	1ac1      	subs	r1, r0, r3
 204:	2001      	movs	r0, #1
 206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 20a:	4618      	mov	r0, r3
 20c:	1ac1      	subs	r1, r0, r3
 20e:	2001      	movs	r0, #1
 210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .text._ZN6memchr8fallback7memrchr17h3163f27dc9931b72E:

00000000 <memchr::fallback::memrchr>:
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:167
pub fn memrchr(n1: u8, haystack: &[u8]) -> Option<usize> {
   0:	b570      	push	{r4, r5, r6, lr}
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
   2:	eb01 0e02 	add.w	lr, r1, r2
_ZN4core3cmp3Ord3min17h90273cc75814eb41E():
   6:	2a08      	cmp	r2, #8
   8:	4614      	mov	r4, r2
_ZN6memchr8fallback11repeat_byte17h399c8b9950f73dd0E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
   a:	fa5f fc80 	uxtb.w	ip, r0
_ZN4core3cmp3Ord3min17h90273cc75814eb41E():
   e:	bf28      	it	cs
  10:	2408      	movcs	r4, #8
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:177
        if haystack.len() < USIZE_BYTES {
  12:	2a03      	cmp	r2, #3
  14:	d826      	bhi.n	64 <memchr::fallback::memrchr+0x64>
_ZN6memchr8fallback14reverse_search17h7a37f5fa4b31b4ecE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  16:	1e90      	subs	r0, r2, #2
  18:	1ed3      	subs	r3, r2, #3
  1a:	188d      	adds	r5, r1, r2
  1c:	428d      	cmp	r5, r1
  1e:	f240 808e 	bls.w	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  22:	180c      	adds	r4, r1, r0
  24:	7866      	ldrb	r6, [r4, #1]
  26:	4566      	cmp	r6, ip
  28:	f000 808b 	beq.w	142 <memchr::fallback::memrchr+0x142>
  2c:	3d01      	subs	r5, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  2e:	428d      	cmp	r5, r1
  30:	f240 8085 	bls.w	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  34:	5c0d      	ldrb	r5, [r1, r0]
  36:	4565      	cmp	r5, ip
  38:	f000 8088 	beq.w	14c <memchr::fallback::memrchr+0x14c>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  3c:	428c      	cmp	r4, r1
  3e:	d97e      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  40:	f814 5c01 	ldrb.w	r5, [r4, #-1]
  44:	4565      	cmp	r5, ip
  46:	f000 8086 	beq.w	156 <memchr::fallback::memrchr+0x156>
  4a:	18cd      	adds	r5, r1, r3
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  4c:	428d      	cmp	r5, r1
  4e:	d976      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  50:	f814 4c02 	ldrb.w	r4, [r4, #-2]
  54:	3804      	subs	r0, #4
  56:	3b04      	subs	r3, #4
  58:	3a04      	subs	r2, #4
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  5a:	f1ae 0e04 	sub.w	lr, lr, #4
_ZN6memchr8fallback14reverse_search17h7a37f5fa4b31b4ecE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
  5e:	4564      	cmp	r4, ip
  60:	d1db      	bne.n	1a <memchr::fallback::memrchr+0x1a>
  62:	e02e      	b.n	c2 <memchr::fallback::memrchr+0xc2>
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
  64:	f04f 3001 	mov.w	r0, #16843009	; 0x1010101
_ZN4core10intrinsics19copy_nonoverlapping17hcd00e47662105ae3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  68:	f85e 3c04 	ldr.w	r3, [lr, #-4]
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
  6c:	fb0c f000 	mul.w	r0, ip, r0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:182
        if contains_zero_byte(chunk ^ vn1) {
  70:	4043      	eors	r3, r0
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  72:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  76:	ea25 0303 	bic.w	r3, r5, r3
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:182
        if contains_zero_byte(chunk ^ vn1) {
  7a:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  7e:	d024      	beq.n	ca <memchr::fallback::memrchr+0xca>
_ZN6memchr8fallback14reverse_search17h7a37f5fa4b31b4ecE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  80:	1e90      	subs	r0, r2, #2
  82:	1ed3      	subs	r3, r2, #3
  84:	188d      	adds	r5, r1, r2
  86:	428d      	cmp	r5, r1
  88:	d959      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  8a:	180c      	adds	r4, r1, r0
  8c:	7866      	ldrb	r6, [r4, #1]
  8e:	4566      	cmp	r6, ip
  90:	d066      	beq.n	160 <memchr::fallback::memrchr+0x160>
  92:	3d01      	subs	r5, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  94:	428d      	cmp	r5, r1
  96:	d952      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  98:	5c0d      	ldrb	r5, [r1, r0]
  9a:	4565      	cmp	r5, ip
  9c:	d065      	beq.n	16a <memchr::fallback::memrchr+0x16a>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  9e:	428c      	cmp	r4, r1
  a0:	d94d      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  a2:	f814 5c01 	ldrb.w	r5, [r4, #-1]
  a6:	4565      	cmp	r5, ip
  a8:	d064      	beq.n	174 <memchr::fallback::memrchr+0x174>
  aa:	18cd      	adds	r5, r1, r3
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  ac:	428d      	cmp	r5, r1
  ae:	d946      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  b0:	f814 4c02 	ldrb.w	r4, [r4, #-2]
  b4:	3804      	subs	r0, #4
  b6:	3b04      	subs	r3, #4
  b8:	3a04      	subs	r2, #4
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  ba:	f1ae 0e04 	sub.w	lr, lr, #4
_ZN6memchr8fallback14reverse_search17h7a37f5fa4b31b4ecE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
  be:	4564      	cmp	r4, ip
  c0:	d1e0      	bne.n	84 <memchr::fallback::memrchr+0x84>
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
  c2:	1888      	adds	r0, r1, r2
  c4:	1a41      	subs	r1, r0, r1
  c6:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:202
}
  c8:	bd70      	pop	{r4, r5, r6, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:186
        ptr = (end_ptr as usize & !align) as *const u8;
  ca:	f02e 0303 	bic.w	r3, lr, #3
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:188
        while loop_size == LOOP_SIZE && ptr >= ptr_add(start_ptr, loop_size) {
  ce:	2a08      	cmp	r2, #8
  d0:	d316      	bcc.n	100 <memchr::fallback::memrchr+0x100>
  d2:	f101 0e08 	add.w	lr, r1, #8
  d6:	459e      	cmp	lr, r3
  d8:	d812      	bhi.n	100 <memchr::fallback::memrchr+0x100>
  da:	4264      	negs	r4, r4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:191
            let a = *(ptr_sub(ptr, 2 * USIZE_BYTES) as *const usize);
  dc:	e953 6502 	ldrd	r6, r5, [r3, #-8]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:194
            let eqb = contains_zero_byte(b ^ vn1);
  e0:	4045      	eors	r5, r0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:193
            let eqa = contains_zero_byte(a ^ vn1);
  e2:	4046      	eors	r6, r0
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  e4:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  e8:	43b2      	bics	r2, r6
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  ea:	f1a5 3601 	sub.w	r6, r5, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
  ee:	ea26 0505 	bic.w	r5, r6, r5
  f2:	432a      	orrs	r2, r5
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:195
            if eqa || eqb {
  f4:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  f8:	d102      	bne.n	100 <memchr::fallback::memrchr+0x100>
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  fa:	4423      	add	r3, r4
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:188
        while loop_size == LOOP_SIZE && ptr >= ptr_add(start_ptr, loop_size) {
  fc:	4573      	cmp	r3, lr
  fe:	d2ed      	bcs.n	dc <memchr::fallback::memrchr+0xdc>
_ZN6memchr8fallback14reverse_search17h7a37f5fa4b31b4ecE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 100:	1e98      	subs	r0, r3, #2
 102:	1c82      	adds	r2, r0, #2
 104:	428a      	cmp	r2, r1
 106:	d91a      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 108:	4602      	mov	r2, r0
 10a:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 10e:	4566      	cmp	r6, ip
 110:	d035      	beq.n	17e <memchr::fallback::memrchr+0x17e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 112:	428a      	cmp	r2, r1
 114:	d913      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 116:	7802      	ldrb	r2, [r0, #0]
 118:	4562      	cmp	r2, ip
 11a:	d034      	beq.n	186 <memchr::fallback::memrchr+0x186>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 11c:	4288      	cmp	r0, r1
 11e:	d90e      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 120:	4602      	mov	r2, r0
 122:	f812 6d01 	ldrb.w	r6, [r2, #-1]!
 126:	4566      	cmp	r6, ip
 128:	d031      	beq.n	18e <memchr::fallback::memrchr+0x18e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 12a:	428a      	cmp	r2, r1
 12c:	d907      	bls.n	13e <memchr::fallback::memrchr+0x13e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 12e:	1f02      	subs	r2, r0, #4
 130:	f810 0c02 	ldrb.w	r0, [r0, #-2]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 134:	3b04      	subs	r3, #4
_ZN6memchr8fallback14reverse_search17h7a37f5fa4b31b4ecE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
 136:	4560      	cmp	r0, ip
 138:	4610      	mov	r0, r2
 13a:	d1e2      	bne.n	102 <memchr::fallback::memrchr+0x102>
 13c:	e020      	b.n	180 <memchr::fallback::memrchr+0x180>
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
 13e:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:202
}
 140:	bd70      	pop	{r4, r5, r6, pc}
 142:	f1ae 0001 	sub.w	r0, lr, #1
 146:	1a41      	subs	r1, r0, r1
 148:	2001      	movs	r0, #1
 14a:	bd70      	pop	{r4, r5, r6, pc}
 14c:	f1ae 0002 	sub.w	r0, lr, #2
 150:	1a41      	subs	r1, r0, r1
 152:	2001      	movs	r0, #1
 154:	bd70      	pop	{r4, r5, r6, pc}
 156:	f1ae 0003 	sub.w	r0, lr, #3
 15a:	1a41      	subs	r1, r0, r1
 15c:	2001      	movs	r0, #1
 15e:	bd70      	pop	{r4, r5, r6, pc}
 160:	f1ae 0001 	sub.w	r0, lr, #1
 164:	1a41      	subs	r1, r0, r1
 166:	2001      	movs	r0, #1
 168:	bd70      	pop	{r4, r5, r6, pc}
 16a:	f1ae 0002 	sub.w	r0, lr, #2
 16e:	1a41      	subs	r1, r0, r1
 170:	2001      	movs	r0, #1
 172:	bd70      	pop	{r4, r5, r6, pc}
 174:	f1ae 0003 	sub.w	r0, lr, #3
 178:	1a41      	subs	r1, r0, r1
 17a:	2001      	movs	r0, #1
 17c:	bd70      	pop	{r4, r5, r6, pc}
_ZN6memchr8fallback14reverse_search17h7a37f5fa4b31b4ecE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 17e:	1c43      	adds	r3, r0, #1
_ZN6memchr8fallback3sub17hee88514599f9dc09E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:345
    (a as usize) - (b as usize)
 180:	1a59      	subs	r1, r3, r1
 182:	2001      	movs	r0, #1
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:202
}
 184:	bd70      	pop	{r4, r5, r6, pc}
 186:	3b02      	subs	r3, #2
_ZN6memchr8fallback3sub17hee88514599f9dc09E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:345
    (a as usize) - (b as usize)
 188:	1a59      	subs	r1, r3, r1
 18a:	2001      	movs	r0, #1
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:202
}
 18c:	bd70      	pop	{r4, r5, r6, pc}
 18e:	3b03      	subs	r3, #3
_ZN6memchr8fallback3sub17hee88514599f9dc09E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:345
    (a as usize) - (b as usize)
 190:	1a59      	subs	r1, r3, r1
 192:	2001      	movs	r0, #1
_ZN6memchr8fallback7memrchr17h3163f27dc9931b72E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:202
}
 194:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E:

00000000 <memchr::fallback::memrchr2>:
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:205
pub fn memrchr2(n1: u8, n2: u8, haystack: &[u8]) -> Option<usize> {
   0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
   4:	eb02 0c03 	add.w	ip, r2, r3
_ZN6memchr8fallback11repeat_byte17h399c8b9950f73dd0E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
   8:	fa5f fe81 	uxtb.w	lr, r1
   c:	fa5f f880 	uxtb.w	r8, r0
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:215
        if haystack.len() < USIZE_BYTES {
  10:	2b03      	cmp	r3, #3
  12:	d836      	bhi.n	82 <memchr::fallback::memrchr2+0x82>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  14:	1e99      	subs	r1, r3, #2
  16:	1edc      	subs	r4, r3, #3
  18:	18d7      	adds	r7, r2, r3
  1a:	4297      	cmp	r7, r2
  1c:	f240 80c0 	bls.w	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  20:	1855      	adds	r5, r2, r1
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  22:	f1ac 0601 	sub.w	r6, ip, #1
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
  26:	7868      	ldrb	r0, [r5, #1]
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
  28:	4540      	cmp	r0, r8
  2a:	bf18      	it	ne
  2c:	4570      	cmpne	r0, lr
  2e:	f000 80bb 	beq.w	1a8 <memchr::fallback::memrchr2+0x1a8>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
  32:	1e78      	subs	r0, r7, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  34:	4290      	cmp	r0, r2
  36:	f240 80b3 	bls.w	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  3a:	5c50      	ldrb	r0, [r2, r1]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  3c:	f1ac 0602 	sub.w	r6, ip, #2
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
  40:	4540      	cmp	r0, r8
  42:	bf18      	it	ne
  44:	4570      	cmpne	r0, lr
  46:	f000 80af 	beq.w	1a8 <memchr::fallback::memrchr2+0x1a8>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  4a:	4295      	cmp	r5, r2
  4c:	f240 80a8 	bls.w	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  50:	f815 0c01 	ldrb.w	r0, [r5, #-1]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  54:	f1ac 0603 	sub.w	r6, ip, #3
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
  58:	4540      	cmp	r0, r8
  5a:	bf18      	it	ne
  5c:	4570      	cmpne	r0, lr
  5e:	f000 80a3 	beq.w	1a8 <memchr::fallback::memrchr2+0x1a8>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
  62:	1910      	adds	r0, r2, r4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  64:	4290      	cmp	r0, r2
  66:	f240 809b 	bls.w	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  6a:	f815 5c02 	ldrb.w	r5, [r5, #-2]
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
  6e:	3b04      	subs	r3, #4
  70:	4545      	cmp	r5, r8
  72:	d04d      	beq.n	110 <memchr::fallback::memrchr2+0x110>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
  74:	3904      	subs	r1, #4
  76:	3c04      	subs	r4, #4
  78:	f1ac 0c04 	sub.w	ip, ip, #4
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
  7c:	4575      	cmp	r5, lr
  7e:	d1cb      	bne.n	18 <memchr::fallback::memrchr2+0x18>
  80:	e046      	b.n	110 <memchr::fallback::memrchr2+0x110>
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
  82:	f04f 3001 	mov.w	r0, #16843009	; 0x1010101
  86:	fb08 f500 	mul.w	r5, r8, r0
  8a:	fb0e f900 	mul.w	r9, lr, r0
_ZN4core10intrinsics19copy_nonoverlapping17hcd00e47662105ae3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  8e:	f85c 0c04 	ldr.w	r0, [ip, #-4]
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:220
        let eq1 = contains_zero_byte(chunk ^ vn1);
  92:	ea80 0105 	eor.w	r1, r0, r5
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  96:	f1a1 3601 	sub.w	r6, r1, #16843009	; 0x1010101
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:221
        let eq2 = contains_zero_byte(chunk ^ vn2);
  9a:	ea80 0009 	eor.w	r0, r0, r9
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  9e:	ea26 0101 	bic.w	r1, r6, r1
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  a2:	f1a0 3601 	sub.w	r6, r0, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
  a6:	ea26 0000 	bic.w	r0, r6, r0
  aa:	4308      	orrs	r0, r1
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:222
        if eq1 || eq2 {
  ac:	f010 3f80 	tst.w	r0, #2155905152	; 0x80808080
  b0:	d033      	beq.n	11a <memchr::fallback::memrchr2+0x11a>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  b2:	1e99      	subs	r1, r3, #2
  b4:	1edc      	subs	r4, r3, #3
  b6:	18d7      	adds	r7, r2, r3
  b8:	4297      	cmp	r7, r2
  ba:	d971      	bls.n	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  bc:	1855      	adds	r5, r2, r1
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  be:	f1ac 0601 	sub.w	r6, ip, #1
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
  c2:	7868      	ldrb	r0, [r5, #1]
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
  c4:	4540      	cmp	r0, r8
  c6:	bf18      	it	ne
  c8:	4570      	cmpne	r0, lr
  ca:	d06d      	beq.n	1a8 <memchr::fallback::memrchr2+0x1a8>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
  cc:	1e78      	subs	r0, r7, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  ce:	4290      	cmp	r0, r2
  d0:	d966      	bls.n	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  d2:	5c50      	ldrb	r0, [r2, r1]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  d4:	f1ac 0602 	sub.w	r6, ip, #2
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
  d8:	4540      	cmp	r0, r8
  da:	bf18      	it	ne
  dc:	4570      	cmpne	r0, lr
  de:	d063      	beq.n	1a8 <memchr::fallback::memrchr2+0x1a8>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  e0:	4295      	cmp	r5, r2
  e2:	d95d      	bls.n	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  e4:	f815 0c01 	ldrb.w	r0, [r5, #-1]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  e8:	f1ac 0603 	sub.w	r6, ip, #3
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
  ec:	4540      	cmp	r0, r8
  ee:	bf18      	it	ne
  f0:	4570      	cmpne	r0, lr
  f2:	d059      	beq.n	1a8 <memchr::fallback::memrchr2+0x1a8>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
  f4:	1910      	adds	r0, r2, r4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  f6:	4290      	cmp	r0, r2
  f8:	d952      	bls.n	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  fa:	f815 5c02 	ldrb.w	r5, [r5, #-2]
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
  fe:	3b04      	subs	r3, #4
 100:	4545      	cmp	r5, r8
 102:	d005      	beq.n	110 <memchr::fallback::memrchr2+0x110>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
 104:	3904      	subs	r1, #4
 106:	3c04      	subs	r4, #4
 108:	f1ac 0c04 	sub.w	ip, ip, #4
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
 10c:	4575      	cmp	r5, lr
 10e:	d1d2      	bne.n	b6 <memchr::fallback::memrchr2+0xb6>
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
 110:	18d6      	adds	r6, r2, r3
 112:	1ab1      	subs	r1, r6, r2
 114:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:241
}
 116:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:226
        ptr = (end_ptr as usize & !align) as *const u8;
 11a:	f02c 0003 	bic.w	r0, ip, #3
 11e:	1d16      	adds	r6, r2, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:228
        while ptr >= ptr_add(start_ptr, USIZE_BYTES) {
 120:	1e83      	subs	r3, r0, #2
 122:	1c99      	adds	r1, r3, #2
 124:	461f      	mov	r7, r3
 126:	42b1      	cmp	r1, r6
 128:	d312      	bcc.n	150 <memchr::fallback::memrchr2+0x150>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:231
            let chunk = *(ptr_sub(ptr, USIZE_BYTES) as *const usize);
 12a:	f857 0c02 	ldr.w	r0, [r7, #-2]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:232
            let eq1 = contains_zero_byte(chunk ^ vn1);
 12e:	ea80 0305 	eor.w	r3, r0, r5
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:233
            let eq2 = contains_zero_byte(chunk ^ vn2);
 132:	ea80 0009 	eor.w	r0, r0, r9
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 136:	f1a3 3401 	sub.w	r4, r3, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 13a:	ea24 0303 	bic.w	r3, r4, r3
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 13e:	f1a0 3401 	sub.w	r4, r0, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
 142:	ea24 0000 	bic.w	r0, r4, r0
 146:	4318      	orrs	r0, r3
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:234
            if eq1 || eq2 {
 148:	1f3b      	subs	r3, r7, #4
 14a:	f010 3f80 	tst.w	r0, #2155905152	; 0x80808080
 14e:	d0e8      	beq.n	122 <memchr::fallback::memrchr2+0x122>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 150:	1cb8      	adds	r0, r7, #2
 152:	4290      	cmp	r0, r2
 154:	d924      	bls.n	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 156:	463b      	mov	r3, r7
 158:	f813 0f01 	ldrb.w	r0, [r3, #1]!
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
 15c:	4540      	cmp	r0, r8
 15e:	bf18      	it	ne
 160:	4570      	cmpne	r0, lr
 162:	d020      	beq.n	1a6 <memchr::fallback::memrchr2+0x1a6>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 164:	4293      	cmp	r3, r2
 166:	d91b      	bls.n	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 168:	7838      	ldrb	r0, [r7, #0]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 16a:	1e8e      	subs	r6, r1, #2
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
 16c:	4540      	cmp	r0, r8
 16e:	bf18      	it	ne
 170:	4570      	cmpne	r0, lr
 172:	d019      	beq.n	1a8 <memchr::fallback::memrchr2+0x1a8>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 174:	4297      	cmp	r7, r2
 176:	d913      	bls.n	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 178:	463b      	mov	r3, r7
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 17a:	1ece      	subs	r6, r1, #3
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
 17c:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
 180:	4540      	cmp	r0, r8
 182:	bf18      	it	ne
 184:	4570      	cmpne	r0, lr
 186:	d00f      	beq.n	1a8 <memchr::fallback::memrchr2+0x1a8>
_ZN6memchr8fallback14reverse_search17h2054418b665c1391E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 188:	4293      	cmp	r3, r2
 18a:	d909      	bls.n	1a0 <memchr::fallback::memrchr2+0x1a0>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 18c:	f817 3c02 	ldrb.w	r3, [r7, #-2]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 190:	3904      	subs	r1, #4
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
 192:	4543      	cmp	r3, r8
 194:	d00c      	beq.n	1b0 <memchr::fallback::memrchr2+0x1b0>
 196:	3f04      	subs	r7, #4
 198:	4573      	cmp	r3, lr
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 19a:	460e      	mov	r6, r1
 19c:	d1d8      	bne.n	150 <memchr::fallback::memrchr2+0x150>
 19e:	e003      	b.n	1a8 <memchr::fallback::memrchr2+0x1a8>
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
 1a0:	2000      	movs	r0, #0
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:241
}
 1a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
_ZN6memchr8fallback8memrchr228_$u7b$$u7b$closure$u7d$$u7d$17h0fd3473643cd25f3E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:208
    let confirm = |byte| byte == n1 || byte == n2;
 1a6:	1c7e      	adds	r6, r7, #1
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
 1a8:	1ab1      	subs	r1, r6, r2
 1aa:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:241
}
 1ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 1b0:	460e      	mov	r6, r1
_ZN6memchr8fallback8memrchr217h2ca01dd11c9c1890E():
 1b2:	1ab1      	subs	r1, r6, r2
 1b4:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:241
 1b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .text._ZN6memchr8fallback8memrchr317h6346214141fec5dcE:

00000000 <memchr::fallback::memrchr3>:
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:244
pub fn memrchr3(n1: u8, n2: u8, n3: u8, haystack: &[u8]) -> Option<usize> {
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b082      	sub	sp, #8
   6:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
_ZN6memchr8fallback11repeat_byte17h399c8b9950f73dd0E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:42
    (b as usize) * (usize::MAX / 255)
   a:	b2d5      	uxtb	r5, r2
   c:	fa5f fa81 	uxtb.w	sl, r1
  10:	fa5f f980 	uxtb.w	r9, r0
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  14:	eb03 0e0c 	add.w	lr, r3, ip
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:255
        if haystack.len() < USIZE_BYTES {
  18:	f1bc 0f03 	cmp.w	ip, #3
  1c:	d843      	bhi.n	a6 <memchr::fallback::memrchr3+0xa6>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  1e:	f1ac 0102 	sub.w	r1, ip, #2
  22:	f1ac 0403 	sub.w	r4, ip, #3
  26:	eb03 000c 	add.w	r0, r3, ip
  2a:	4298      	cmp	r0, r3
  2c:	f240 80ff 	bls.w	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  30:	185f      	adds	r7, r3, r1
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  32:	f1ae 0601 	sub.w	r6, lr, #1
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
  36:	787a      	ldrb	r2, [r7, #1]
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  38:	42aa      	cmp	r2, r5
  3a:	f000 809a 	beq.w	172 <memchr::fallback::memrchr3+0x172>
  3e:	454a      	cmp	r2, r9
  40:	bf18      	it	ne
  42:	4552      	cmpne	r2, sl
  44:	f000 8095 	beq.w	172 <memchr::fallback::memrchr3+0x172>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
  48:	3801      	subs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  4a:	4298      	cmp	r0, r3
  4c:	f240 80ef 	bls.w	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  50:	5c58      	ldrb	r0, [r3, r1]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  52:	f1ae 0602 	sub.w	r6, lr, #2
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  56:	42a8      	cmp	r0, r5
  58:	f000 808b 	beq.w	172 <memchr::fallback::memrchr3+0x172>
  5c:	4548      	cmp	r0, r9
  5e:	bf18      	it	ne
  60:	4550      	cmpne	r0, sl
  62:	f000 8086 	beq.w	172 <memchr::fallback::memrchr3+0x172>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  66:	429f      	cmp	r7, r3
  68:	f240 80e1 	bls.w	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  6c:	f817 0c01 	ldrb.w	r0, [r7, #-1]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
  70:	f1ae 0603 	sub.w	r6, lr, #3
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  74:	42a8      	cmp	r0, r5
  76:	d07c      	beq.n	172 <memchr::fallback::memrchr3+0x172>
  78:	4548      	cmp	r0, r9
  7a:	bf18      	it	ne
  7c:	4550      	cmpne	r0, sl
  7e:	d078      	beq.n	172 <memchr::fallback::memrchr3+0x172>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
  80:	1918      	adds	r0, r3, r4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  82:	4298      	cmp	r0, r3
  84:	f240 80d3 	bls.w	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
  88:	f817 0c02 	ldrb.w	r0, [r7, #-2]
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
  8c:	f1ac 0c04 	sub.w	ip, ip, #4
  90:	42a8      	cmp	r0, r5
  92:	bf18      	it	ne
  94:	4548      	cmpne	r0, r9
  96:	d06a      	beq.n	16e <memchr::fallback::memrchr3+0x16e>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
  98:	3904      	subs	r1, #4
  9a:	3c04      	subs	r4, #4
  9c:	f1ae 0e04 	sub.w	lr, lr, #4
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
  a0:	4550      	cmp	r0, sl
  a2:	d1c0      	bne.n	26 <memchr::fallback::memrchr3+0x26>
  a4:	e063      	b.n	16e <memchr::fallback::memrchr3+0x16e>
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
  a6:	f04f 3001 	mov.w	r0, #16843009	; 0x1010101
  aa:	9500      	str	r5, [sp, #0]
  ac:	fb05 fb00 	mul.w	fp, r5, r0
  b0:	f8cd 9004 	str.w	r9, [sp, #4]
  b4:	464d      	mov	r5, r9
  b6:	fb09 f900 	mul.w	r9, r9, r0
  ba:	fb0a f800 	mul.w	r8, sl, r0
_ZN4core10intrinsics19copy_nonoverlapping17hcd00e47662105ae3E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  be:	f85e 0c04 	ldr.w	r0, [lr, #-4]
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:260
        let eq1 = contains_zero_byte(chunk ^ vn1);
  c2:	ea80 0109 	eor.w	r1, r0, r9
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  c6:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  ca:	ea22 0101 	bic.w	r1, r2, r1
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:261
        let eq2 = contains_zero_byte(chunk ^ vn2);
  ce:	ea80 0208 	eor.w	r2, r0, r8
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  d2:	f1a2 3401 	sub.w	r4, r2, #16843009	; 0x1010101
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:262
        let eq3 = contains_zero_byte(chunk ^ vn3);
  d6:	ea80 000b 	eor.w	r0, r0, fp
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
  da:	ea24 0202 	bic.w	r2, r4, r2
  de:	4311      	orrs	r1, r2
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
  e0:	f1a0 3201 	sub.w	r2, r0, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
  e4:	ea22 0000 	bic.w	r0, r2, r0
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:263
        if eq1 || eq2 || eq3 {
  e8:	4308      	orrs	r0, r1
  ea:	f010 3f80 	tst.w	r0, #2155905152	; 0x80808080
  ee:	d045      	beq.n	17c <memchr::fallback::memrchr3+0x17c>
  f0:	e9dd 5800 	ldrd	r5, r8, [sp]
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
  f4:	f1ac 0102 	sub.w	r1, ip, #2
  f8:	f1ac 0403 	sub.w	r4, ip, #3
  fc:	eb03 000c 	add.w	r0, r3, ip
 100:	4298      	cmp	r0, r3
 102:	f240 8094 	bls.w	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 106:	185f      	adds	r7, r3, r1
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 108:	f1ae 0601 	sub.w	r6, lr, #1
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
 10c:	787a      	ldrb	r2, [r7, #1]
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 10e:	42aa      	cmp	r2, r5
 110:	d02f      	beq.n	172 <memchr::fallback::memrchr3+0x172>
 112:	4542      	cmp	r2, r8
 114:	bf18      	it	ne
 116:	4552      	cmpne	r2, sl
 118:	d02b      	beq.n	172 <memchr::fallback::memrchr3+0x172>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
 11a:	3801      	subs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 11c:	4298      	cmp	r0, r3
 11e:	f240 8086 	bls.w	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 122:	5c58      	ldrb	r0, [r3, r1]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 124:	f1ae 0602 	sub.w	r6, lr, #2
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 128:	42a8      	cmp	r0, r5
 12a:	d022      	beq.n	172 <memchr::fallback::memrchr3+0x172>
 12c:	4540      	cmp	r0, r8
 12e:	bf18      	it	ne
 130:	4550      	cmpne	r0, sl
 132:	d01e      	beq.n	172 <memchr::fallback::memrchr3+0x172>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 134:	429f      	cmp	r7, r3
 136:	d97a      	bls.n	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 138:	f817 0c01 	ldrb.w	r0, [r7, #-1]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 13c:	f1ae 0603 	sub.w	r6, lr, #3
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 140:	42a8      	cmp	r0, r5
 142:	d016      	beq.n	172 <memchr::fallback::memrchr3+0x172>
 144:	4540      	cmp	r0, r8
 146:	bf18      	it	ne
 148:	4550      	cmpne	r0, sl
 14a:	d012      	beq.n	172 <memchr::fallback::memrchr3+0x172>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
 14c:	1918      	adds	r0, r3, r4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 14e:	4298      	cmp	r0, r3
 150:	d96d      	bls.n	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 152:	f817 0c02 	ldrb.w	r0, [r7, #-2]
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 156:	f1ac 0c04 	sub.w	ip, ip, #4
 15a:	42a8      	cmp	r0, r5
 15c:	bf18      	it	ne
 15e:	4540      	cmpne	r0, r8
 160:	d005      	beq.n	16e <memchr::fallback::memrchr3+0x16e>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
 162:	3904      	subs	r1, #4
 164:	3c04      	subs	r4, #4
 166:	f1ae 0e04 	sub.w	lr, lr, #4
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
 16a:	4550      	cmp	r0, sl
 16c:	d1c6      	bne.n	fc <memchr::fallback::memrchr3+0xfc>
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
 16e:	eb03 060c 	add.w	r6, r3, ip
 172:	1af1      	subs	r1, r6, r3
 174:	2001      	movs	r0, #1
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:283
}
 176:	b002      	add	sp, #8
 178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:267
        ptr = (end_ptr as usize & !align) as *const u8;
 17c:	f02e 0103 	bic.w	r1, lr, #3
 180:	1d18      	adds	r0, r3, #4
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:269
        while ptr >= ptr_add(start_ptr, USIZE_BYTES) {
 182:	1e8c      	subs	r4, r1, #2
 184:	1ca1      	adds	r1, r4, #2
 186:	4622      	mov	r2, r4
 188:	4281      	cmp	r1, r0
 18a:	d318      	bcc.n	1be <memchr::fallback::memrchr3+0x1be>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:272
            let chunk = *(ptr_sub(ptr, USIZE_BYTES) as *const usize);
 18c:	f852 4c02 	ldr.w	r4, [r2, #-2]
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:273
            let eq1 = contains_zero_byte(chunk ^ vn1);
 190:	ea84 0609 	eor.w	r6, r4, r9
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 194:	f1a6 3701 	sub.w	r7, r6, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 198:	43b7      	bics	r7, r6
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:274
            let eq2 = contains_zero_byte(chunk ^ vn2);
 19a:	ea84 0608 	eor.w	r6, r4, r8
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 19e:	f1a6 3501 	sub.w	r5, r6, #16843009	; 0x1010101
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 1a2:	ea25 0606 	bic.w	r6, r5, r6
 1a6:	4337      	orrs	r7, r6
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:275
            let eq3 = contains_zero_byte(chunk ^ vn3);
 1a8:	ea84 060b 	eor.w	r6, r4, fp
_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hc3905518b94f161aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3069
 1ac:	f1a6 3501 	sub.w	r5, r6, #16843009	; 0x1010101
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:276
            if eq1 || eq2 || eq3 {
 1b0:	1f14      	subs	r4, r2, #4
_ZN6memchr8fallback18contains_zero_byte17h52be376136c2850aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:33
    x.wrapping_sub(LO_USIZE) & !x & HI_USIZE != 0
 1b2:	ea25 0606 	bic.w	r6, r5, r6
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:276
            if eq1 || eq2 || eq3 {
 1b6:	4337      	orrs	r7, r6
 1b8:	f017 3f80 	tst.w	r7, #2155905152	; 0x80808080
 1bc:	d0e2      	beq.n	184 <memchr::fallback::memrchr3+0x184>
 1be:	e9dd 5400 	ldrd	r5, r4, [sp]
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 1c2:	1c90      	adds	r0, r2, #2
 1c4:	4298      	cmp	r0, r3
 1c6:	d932      	bls.n	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 1c8:	4610      	mov	r0, r2
 1ca:	f810 7f01 	ldrb.w	r7, [r0, #1]!
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 1ce:	42af      	cmp	r7, r5
 1d0:	bf18      	it	ne
 1d2:	42a7      	cmpne	r7, r4
 1d4:	d025      	beq.n	222 <memchr::fallback::memrchr3+0x222>
 1d6:	4557      	cmp	r7, sl
 1d8:	d023      	beq.n	222 <memchr::fallback::memrchr3+0x222>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 1da:	4298      	cmp	r0, r3
 1dc:	d927      	bls.n	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 1de:	7810      	ldrb	r0, [r2, #0]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 1e0:	1e8f      	subs	r7, r1, #2
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 1e2:	42a8      	cmp	r0, r5
 1e4:	d01e      	beq.n	224 <memchr::fallback::memrchr3+0x224>
 1e6:	42a0      	cmp	r0, r4
 1e8:	bf18      	it	ne
 1ea:	4550      	cmpne	r0, sl
 1ec:	d01a      	beq.n	224 <memchr::fallback::memrchr3+0x224>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 1ee:	429a      	cmp	r2, r3
 1f0:	d91d      	bls.n	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 1f2:	4610      	mov	r0, r2
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 1f4:	1ecf      	subs	r7, r1, #3
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
 1f6:	f810 6d01 	ldrb.w	r6, [r0, #-1]!
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 1fa:	42ae      	cmp	r6, r5
 1fc:	d012      	beq.n	224 <memchr::fallback::memrchr3+0x224>
 1fe:	42a6      	cmp	r6, r4
 200:	bf18      	it	ne
 202:	4556      	cmpne	r6, sl
 204:	d00e      	beq.n	224 <memchr::fallback::memrchr3+0x224>
_ZN6memchr8fallback14reverse_search17hd2461f7b5f196aa4E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:314
    while ptr > start_ptr {
 206:	4298      	cmp	r0, r3
 208:	d911      	bls.n	22e <memchr::fallback::memrchr3+0x22e>
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:316
        if confirm(*ptr) {
 20a:	f812 0c02 	ldrb.w	r0, [r2, #-2]
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 20e:	3904      	subs	r1, #4
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
    let confirm = |byte| byte == n1 || byte == n2 || byte == n3;
 210:	42a8      	cmp	r0, r5
 212:	bf18      	it	ne
 214:	42a0      	cmpne	r0, r4
 216:	d00e      	beq.n	236 <memchr::fallback::memrchr3+0x236>
 218:	3a04      	subs	r2, #4
 21a:	4550      	cmp	r0, sl
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 21c:	460f      	mov	r7, r1
_ZN6memchr8fallback8memrchr328_$u7b$$u7b$closure$u7d$$u7d$17h22eee4e5eb13f651E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:248
 21e:	d1d0      	bne.n	1c2 <memchr::fallback::memrchr3+0x1c2>
 220:	e000      	b.n	224 <memchr::fallback::memrchr3+0x224>
 222:	1c57      	adds	r7, r2, #1
_ZN6memchr8fallback3sub17hee88514599f9dc09E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:345
    (a as usize) - (b as usize)
 224:	1af9      	subs	r1, r7, r3
 226:	2001      	movs	r0, #1
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:283
}
 228:	b002      	add	sp, #8
 22a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 22e:	2000      	movs	r0, #0
 230:	b002      	add	sp, #8
 232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h42048605940ecd98E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:1079
 236:	460f      	mov	r7, r1
_ZN6memchr8fallback3sub17hee88514599f9dc09E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:345
    (a as usize) - (b as usize)
 238:	1ac9      	subs	r1, r1, r3
 23a:	2001      	movs	r0, #1
_ZN6memchr8fallback8memrchr317h6346214141fec5dcE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\memchr-2.2.0\src/fallback.rs:283
}
 23c:	b002      	add	sp, #8
 23e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

mynewt-f3c8b9b5b2819429.mynewt.7r947ud0-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mynewt.7r947ud0-cgu.0
00002624 l       .debug_str	00000000 
00005d9a l       .debug_str	00000000 
00005d4a l       .debug_str	00000000 
00005d45 l       .debug_str	00000000 
00005cfd l       .debug_str	00000000 
00005cf0 l       .debug_str	00000000 
00005c9f l       .debug_str	00000000 
00005c97 l       .debug_str	00000000 
00005c4c l       .debug_str	00000000 
00005c40 l       .debug_str	00000000 
00005bf0 l       .debug_str	00000000 
00005bc3 l       .debug_str	00000000 
00005bb4 l       .debug_str	00000000 
00005b61 l       .debug_str	00000000 
000067f9 l       .debug_str	00000000 
00005b58 l       .debug_str	00000000 
00005b0c l       .debug_str	00000000 
000067f5 l       .debug_str	00000000 
00005afe l       .debug_str	00000000 
00005aac l       .debug_str	00000000 
000067eb l       .debug_str	00000000 
00005aa0 l       .debug_str	00000000 
000067df l       .debug_str	00000000 
00005a50 l       .debug_str	00000000 
000067d7 l       .debug_str	00000000 
000059e0 l       .debug_str	00000000 
000067d2 l       .debug_str	00000000 
00005962 l       .debug_str	00000000 
000067cd l       .debug_str	00000000 
000058f1 l       .debug_str	00000000 
000067c8 l       .debug_str	00000000 
00005863 l       .debug_str	00000000 
000067bd l       .debug_str	00000000 
000057f3 l       .debug_str	00000000 
000067b2 l       .debug_str	00000000 
00005782 l       .debug_str	00000000 
000067ad l       .debug_str	00000000 
00005713 l       .debug_str	00000000 
000067a8 l       .debug_str	00000000 
00005696 l       .debug_str	00000000 
000067a3 l       .debug_str	00000000 
0000560a l       .debug_str	00000000 
00006795 l       .debug_str	00000000 
00005601 l       .debug_str	00000000 
00006774 l       .debug_str	00000000 
000055cd l       .debug_str	00000000 
00006767 l       .debug_str	00000000 
000055c6 l       .debug_str	00000000 
00006763 l       .debug_str	00000000 
00005594 l       .debug_str	00000000 
00006752 l       .debug_str	00000000 
0000557e l       .debug_str	00000000 
0000674d l       .debug_str	00000000 
0000553e l       .debug_str	00000000 
00006747 l       .debug_str	00000000 
00005516 l       .debug_str	00000000 
00005514 l       .debug_str	00000000 
00005502 l       .debug_str	00000000 
0000673d l       .debug_str	00000000 
000054c6 l       .debug_str	00000000 
000054bb l       .debug_str	00000000 
00006739 l       .debug_str	00000000 
00005486 l       .debug_str	00000000 
00006732 l       .debug_str	00000000 
0000540e l       .debug_str	00000000 
0000672e l       .debug_str	00000000 
00005387 l       .debug_str	00000000 
00006701 l       .debug_str	00000000 
00005316 l       .debug_str	00000000 
000066ff l       .debug_str	00000000 
000052a1 l       .debug_str	00000000 
000066ce l       .debug_str	00000000 
00005224 l       .debug_str	00000000 
000066cc l       .debug_str	00000000 
000051aa l       .debug_str	00000000 
000066bf l       .debug_str	00000000 
00005132 l       .debug_str	00000000 
000066b2 l       .debug_str	00000000 
000050cb l       .debug_str	00000000 
000066ad l       .debug_str	00000000 
00005063 l       .debug_str	00000000 
000066a5 l       .debug_str	00000000 
00004ff3 l       .debug_str	00000000 
0000669c l       .debug_str	00000000 
00004f88 l       .debug_str	00000000 
00006608 l       .debug_str	00000000 
00004f20 l       .debug_str	00000000 
00006602 l       .debug_str	00000000 
00004eb9 l       .debug_str	00000000 
00004e4f l       .debug_str	00000000 
000065f8 l       .debug_str	00000000 
00004de4 l       .debug_str	00000000 
00004ddc l       .debug_str	00000000 
000065f2 l       .debug_str	00000000 
00004d73 l       .debug_str	00000000 
000065c6 l       .debug_str	00000000 
00004d5a l       .debug_str	00000000 
000065c0 l       .debug_str	00000000 
00004d25 l       .debug_str	00000000 
00004d1c l       .debug_str	00000000 
00004cd4 l       .debug_str	00000000 
00004ca5 l       .debug_str	00000000 
00004c5d l       .debug_str	00000000 
00004c15 l       .debug_str	00000000 
00004bf6 l       .debug_str	00000000 
00004bae l       .debug_str	00000000 
00006562 l       .debug_str	00000000 
00004b9f l       .debug_str	00000000 
00004b9a l       .debug_str	00000000 
00004b7e l       .debug_str	00000000 
00004b7b l       .debug_str	00000000 
00006533 l       .debug_str	00000000 
00004b6a l       .debug_str	00000000 
00004b34 l       .debug_str	00000000 
00004b2f l       .debug_str	00000000 
00004b27 l       .debug_str	00000000 
00006529 l       .debug_str	00000000 
00004b21 l       .debug_str	00000000 
00004af0 l       .debug_str	00000000 
00004ae9 l       .debug_str	00000000 
000064eb l       .debug_str	00000000 
00004ab7 l       .debug_str	00000000 
000064dc l       .debug_str	00000000 
00004aa9 l       .debug_str	00000000 
00006498 l       .debug_str	00000000 
00004a9c l       .debug_str	00000000 
0000648b l       .debug_str	00000000 
00004a8e l       .debug_str	00000000 
00006449 l       .debug_str	00000000 
00004a21 l       .debug_str	00000000 
0000641f l       .debug_str	00000000 
00004a1b l       .debug_str	00000000 
0000640e l       .debug_str	00000000 
00004a15 l       .debug_str	00000000 
000063c8 l       .debug_str	00000000 
00004a09 l       .debug_str	00000000 
00004998 l       .debug_str	00000000 
00004995 l       .debug_str	00000000 
000063b1 l       .debug_str	00000000 
00004992 l       .debug_str	00000000 
0000492f l       .debug_str	00000000 
00006365 l       .debug_str	00000000 
00004928 l       .debug_str	00000000 
00004921 l       .debug_str	00000000 
00006354 l       .debug_str	00000000 
00004913 l       .debug_str	00000000 
000048a2 l       .debug_str	00000000 
00006310 l       .debug_str	00000000 
0000489c l       .debug_str	00000000 
00004898 l       .debug_str	00000000 
000062c1 l       .debug_str	00000000 
0000488e l       .debug_str	00000000 
000062a9 l       .debug_str	00000000 
00004815 l       .debug_str	00000000 
0000625e l       .debug_str	00000000 
00004813 l       .debug_str	00000000 
00006254 l       .debug_str	00000000 
0000480e l       .debug_str	00000000 
00006221 l       .debug_str	00000000 
00004804 l       .debug_str	00000000 
000061d9 l       .debug_str	00000000 
000047a0 l       .debug_str	00000000 
000061c9 l       .debug_str	00000000 
0000479e l       .debug_str	00000000 
0000618f l       .debug_str	00000000 
0000479a l       .debug_str	00000000 
00006184 l       .debug_str	00000000 
00004794 l       .debug_str	00000000 
0000614f l       .debug_str	00000000 
00004763 l       .debug_str	00000000 
00006146 l       .debug_str	00000000 
00004754 l       .debug_str	00000000 
00006119 l       .debug_str	00000000 
00004706 l       .debug_str	00000000 
000046fc l       .debug_str	00000000 
000046f1 l       .debug_str	00000000 
000046eb l       .debug_str	00000000 
000046e1 l       .debug_str	00000000 
000046db l       .debug_str	00000000 
000046d3 l       .debug_str	00000000 
00004670 l       .debug_str	00000000 
0000466c l       .debug_str	00000000 
00004662 l       .debug_str	00000000 
0000465e l       .debug_str	00000000 
00004655 l       .debug_str	00000000 
0000464c l       .debug_str	00000000 
00004605 l       .debug_str	00000000 
000045f9 l       .debug_str	00000000 
000045b2 l       .debug_str	00000000 
000045b0 l       .debug_str	00000000 
000045ae l       .debug_str	00000000 
000045aa l       .debug_str	00000000 
0000459c l       .debug_str	00000000 
0000610e l       .debug_str	00000000 
000060de l       .debug_str	00000000 
000060d6 l       .debug_str	00000000 
000060aa l       .debug_str	00000000 
000060a6 l       .debug_str	00000000 
0000607e l       .debug_str	00000000 
00006079 l       .debug_str	00000000 
00005ff4 l       .debug_str	00000000 
00005fec l       .debug_str	00000000 
00005fc5 l       .debug_str	00000000 
00005f3d l       .debug_str	00000000 
00005ebd l       .debug_str	00000000 
00005e41 l       .debug_str	00000000 
00005e2b l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
0000007e l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
0000008a l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b6 l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000d1 l       .debug_str	00000000 
000000d6 l       .debug_str	00000000 
000000dd l       .debug_str	00000000 
000000e1 l       .debug_str	00000000 
000000e6 l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000f0 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
0000012f l       .debug_str	00000000 
00000146 l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001a2 l       .debug_str	00000000 
000001a7 l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
0000020d l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
0000025f l       .debug_str	00000000 
000002ae l       .debug_str	00000000 
000002b8 l       .debug_str	00000000 
000002f5 l       .debug_str	00000000 
0000033a l       .debug_str	00000000 
00000343 l       .debug_str	00000000 
00000353 l       .debug_str	00000000 
0000035b l       .debug_str	00000000 
000003b0 l       .debug_str	00000000 
0000040d l       .debug_str	00000000 
00000419 l       .debug_str	00000000 
00000422 l       .debug_str	00000000 
0000042e l       .debug_str	00000000 
0000043a l       .debug_str	00000000 
00000443 l       .debug_str	00000000 
0000044b l       .debug_str	00000000 
00000455 l       .debug_str	00000000 
0000045d l       .debug_str	00000000 
00000467 l       .debug_str	00000000 
0000047c l       .debug_str	00000000 
00000483 l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
000004aa l       .debug_str	00000000 
000004b2 l       .debug_str	00000000 
000004bc l       .debug_str	00000000 
000004c7 l       .debug_str	00000000 
000004d0 l       .debug_str	00000000 
000004db l       .debug_str	00000000 
000004e7 l       .debug_str	00000000 
000004eb l       .debug_str	00000000 
000004f4 l       .debug_str	00000000 
000004fb l       .debug_str	00000000 
00000503 l       .debug_str	00000000 
0000050b l       .debug_str	00000000 
00000515 l       .debug_str	00000000 
0000051b l       .debug_str	00000000 
00000522 l       .debug_str	00000000 
00000529 l       .debug_str	00000000 
00000556 l       .debug_str	00000000 
0000058b l       .debug_str	00000000 
00000591 l       .debug_str	00000000 
00000597 l       .debug_str	00000000 
000005a6 l       .debug_str	00000000 
000005b6 l       .debug_str	00000000 
000005c6 l       .debug_str	00000000 
000005ce l       .debug_str	00000000 
000005f7 l       .debug_str	00000000 
00000655 l       .debug_str	00000000 
000006bb l       .debug_str	00000000 
000006c2 l       .debug_str	00000000 
000006ca l       .debug_str	00000000 
000006d3 l       .debug_str	00000000 
000006f1 l       .debug_str	00000000 
00000701 l       .debug_str	00000000 
0000070f l       .debug_str	00000000 
0000071a l       .debug_str	00000000 
00000727 l       .debug_str	00000000 
00000736 l       .debug_str	00000000 
0000074c l       .debug_str	00000000 
00000756 l       .debug_str	00000000 
0000075f l       .debug_str	00000000 
00000768 l       .debug_str	00000000 
0000078e l       .debug_str	00000000 
000007a4 l       .debug_str	00000000 
000007af l       .debug_str	00000000 
000007c5 l       .debug_str	00000000 
000007cd l       .debug_str	00000000 
000007ee l       .debug_str	00000000 
00000805 l       .debug_str	00000000 
0000080a l       .debug_str	00000000 
00000812 l       .debug_str	00000000 
0000081b l       .debug_str	00000000 
00000824 l       .debug_str	00000000 
0000082d l       .debug_str	00000000 
00000835 l       .debug_str	00000000 
0000083c l       .debug_str	00000000 
00000848 l       .debug_str	00000000 
00000853 l       .debug_str	00000000 
0000085b l       .debug_str	00000000 
00000863 l       .debug_str	00000000 
0000095f l       .debug_str	00000000 
00000a63 l       .debug_str	00000000 
00000a71 l       .debug_str	00000000 
00000a7c l       .debug_str	00000000 
00000a86 l       .debug_str	00000000 
00000a9a l       .debug_str	00000000 
00000aa5 l       .debug_str	00000000 
00000ad3 l       .debug_str	00000000 
00000b4e l       .debug_str	00000000 
00000bd1 l       .debug_str	00000000 
00000bdf l       .debug_str	00000000 
00000c3e l       .debug_str	00000000 
00000ca5 l       .debug_str	00000000 
00000cbb l       .debug_str	00000000 
00000ccb l       .debug_str	00000000 
00000cda l       .debug_str	00000000 
00000cde l       .debug_str	00000000 
00000ce5 l       .debug_str	00000000 
00000ceb l       .debug_str	00000000 
00000cef l       .debug_str	00000000 
00000cf5 l       .debug_str	00000000 
00000cfb l       .debug_str	00000000 
00000d07 l       .debug_str	00000000 
00000d0f l       .debug_str	00000000 
00000d15 l       .debug_str	00000000 
00000d1d l       .debug_str	00000000 
00000d23 l       .debug_str	00000000 
00000d46 l       .debug_str	00000000 
00000d56 l       .debug_str	00000000 
00000d89 l       .debug_str	00000000 
00000dc9 l       .debug_str	00000000 
00000e11 l       .debug_str	00000000 
00000e15 l       .debug_str	00000000 
00000e1b l       .debug_str	00000000 
00000e21 l       .debug_str	00000000 
00000e27 l       .debug_str	00000000 
00000e39 l       .debug_str	00000000 
00000e6e l       .debug_str	00000000 
00000eb0 l       .debug_str	00000000 
00000efa l       .debug_str	00000000 
00000efe l       .debug_str	00000000 
00000f04 l       .debug_str	00000000 
00000f0a l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f22 l       .debug_str	00000000 
00000f57 l       .debug_str	00000000 
00000f99 l       .debug_str	00000000 
00000fe3 l       .debug_str	00000000 
00000fe7 l       .debug_str	00000000 
00000fed l       .debug_str	00000000 
00000ff3 l       .debug_str	00000000 
00000ff9 l       .debug_str	00000000 
00000fff l       .debug_str	00000000 
00001010 l       .debug_str	00000000 
00001044 l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
000010ce l       .debug_str	00000000 
000010d3 l       .debug_str	00000000 
000010d8 l       .debug_str	00000000 
000010dc l       .debug_str	00000000 
000010e2 l       .debug_str	00000000 
000010e8 l       .debug_str	00000000 
000010ee l       .debug_str	00000000 
000010ff l       .debug_str	00000000 
00001133 l       .debug_str	00000000 
00001174 l       .debug_str	00000000 
000011bd l       .debug_str	00000000 
000011c1 l       .debug_str	00000000 
000011ca l       .debug_str	00000000 
000011db l       .debug_str	00000000 
0000120f l       .debug_str	00000000 
00001250 l       .debug_str	00000000 
00001299 l       .debug_str	00000000 
0000129e l       .debug_str	00000000 
000012a2 l       .debug_str	00000000 
000012ab l       .debug_str	00000000 
000012b2 l       .debug_str	00000000 
000012ba l       .debug_str	00000000 
000012cc l       .debug_str	00000000 
00001301 l       .debug_str	00000000 
00001343 l       .debug_str	00000000 
0000138d l       .debug_str	00000000 
00001391 l       .debug_str	00000000 
00001397 l       .debug_str	00000000 
0000139d l       .debug_str	00000000 
000013a3 l       .debug_str	00000000 
000013a9 l       .debug_str	00000000 
000013b1 l       .debug_str	00000000 
000013bf l       .debug_str	00000000 
000013ce l       .debug_str	00000000 
000013df l       .debug_str	00000000 
000013ea l       .debug_str	00000000 
000013f5 l       .debug_str	00000000 
00001400 l       .debug_str	00000000 
00001407 l       .debug_str	00000000 
0000142a l       .debug_str	00000000 
0000143c l       .debug_str	00000000 
00001471 l       .debug_str	00000000 
000014b3 l       .debug_str	00000000 
000014fd l       .debug_str	00000000 
00001501 l       .debug_str	00000000 
0000150b l       .debug_str	00000000 
0000151d l       .debug_str	00000000 
00001552 l       .debug_str	00000000 
00001594 l       .debug_str	00000000 
000015de l       .debug_str	00000000 
000015e3 l       .debug_str	00000000 
000015ed l       .debug_str	00000000 
000015ff l       .debug_str	00000000 
00001634 l       .debug_str	00000000 
00001676 l       .debug_str	00000000 
000016c0 l       .debug_str	00000000 
000016d4 l       .debug_str	00000000 
000016d8 l       .debug_str	00000000 
000016e6 l       .debug_str	00000000 
000016f6 l       .debug_str	00000000 
000016ff l       .debug_str	00000000 
0000170a l       .debug_str	00000000 
00001719 l       .debug_str	00000000 
0000172e l       .debug_str	00000000 
0000175f l       .debug_str	00000000 
000017fc l       .debug_str	00000000 
000018a1 l       .debug_str	00000000 
000018ac l       .debug_str	00000000 
000018b5 l       .debug_str	00000000 
000018d6 l       .debug_str	00000000 
000018e9 l       .debug_str	00000000 
0000191f l       .debug_str	00000000 
000019a2 l       .debug_str	00000000 
00001a2d l       .debug_str	00000000 
00001a49 l       .debug_str	00000000 
00001a95 l       .debug_str	00000000 
00001ae9 l       .debug_str	00000000 
00001b06 l       .debug_str	00000000 
00001b1a l       .debug_str	00000000 
00001b66 l       .debug_str	00000000 
00001bba l       .debug_str	00000000 
00001bd0 l       .debug_str	00000000 
00001be4 l       .debug_str	00000000 
00001c2b l       .debug_str	00000000 
00001c7a l       .debug_str	00000000 
00001c83 l       .debug_str	00000000 
00001c91 l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001cc8 l       .debug_str	00000000 
00001cd0 l       .debug_str	00000000 
00001cd7 l       .debug_str	00000000 
00001cdf l       .debug_str	00000000 
00001cea l       .debug_str	00000000 
00001cf2 l       .debug_str	00000000 
00001d01 l       .debug_str	00000000 
00001d05 l       .debug_str	00000000 
00001d10 l       .debug_str	00000000 
00001d1c l       .debug_str	00000000 
00001d27 l       .debug_str	00000000 
00001d38 l       .debug_str	00000000 
00001d3e l       .debug_str	00000000 
00001d46 l       .debug_str	00000000 
00001d4d l       .debug_str	00000000 
00001d57 l       .debug_str	00000000 
00001d5f l       .debug_str	00000000 
00001d67 l       .debug_str	00000000 
00001d89 l       .debug_str	00000000 
00001d94 l       .debug_str	00000000 
00001da0 l       .debug_str	00000000 
00001da8 l       .debug_str	00000000 
00001db1 l       .debug_str	00000000 
00001dbc l       .debug_str	00000000 
00001dc3 l       .debug_str	00000000 
00001dce l       .debug_str	00000000 
00001dd9 l       .debug_str	00000000 
00001de9 l       .debug_str	00000000 
00001df3 l       .debug_str	00000000 
00001df9 l       .debug_str	00000000 
00001e1b l       .debug_str	00000000 
00001e53 l       .debug_str	00000000 
00001e93 l       .debug_str	00000000 
00001e9a l       .debug_str	00000000 
00001ea2 l       .debug_str	00000000 
00001eb9 l       .debug_str	00000000 
00001ec2 l       .debug_str	00000000 
00001ed2 l       .debug_str	00000000 
00001f05 l       .debug_str	00000000 
00001f1a l       .debug_str	00000000 
00001f23 l       .debug_str	00000000 
00001f80 l       .debug_str	00000000 
00001fe5 l       .debug_str	00000000 
00001fef l       .debug_str	00000000 
00001fff l       .debug_str	00000000 
00002014 l       .debug_str	00000000 
0000201c l       .debug_str	00000000 
00002080 l       .debug_str	00000000 
000020ec l       .debug_str	00000000 
000020f3 l       .debug_str	00000000 
000020fb l       .debug_str	00000000 
00002119 l       .debug_str	00000000 
00002129 l       .debug_str	00000000 
0000215c l       .debug_str	00000000 
00002171 l       .debug_str	00000000 
00002184 l       .debug_str	00000000 
00002199 l       .debug_str	00000000 
000021a0 l       .debug_str	00000000 
000021b5 l       .debug_str	00000000 
000021df l       .debug_str	00000000 
0000225b l       .debug_str	00000000 
000022df l       .debug_str	00000000 
000022e6 l       .debug_str	00000000 
000022ee l       .debug_str	00000000 
0000230c l       .debug_str	00000000 
0000231c l       .debug_str	00000000 
00002358 l       .debug_str	00000000 
00002361 l       .debug_str	00000000 
0000236e l       .debug_str	00000000 
0000237b l       .debug_str	00000000 
00002386 l       .debug_str	00000000 
00002393 l       .debug_str	00000000 
0000239f l       .debug_str	00000000 
000023e3 l       .debug_str	00000000 
000023f1 l       .debug_str	00000000 
000023fa l       .debug_str	00000000 
00002401 l       .debug_str	00000000 
00002407 l       .debug_str	00000000 
00002469 l       .debug_str	00000000 
000024d3 l       .debug_str	00000000 
000024e1 l       .debug_str	00000000 
000024f5 l       .debug_str	00000000 
0000252a l       .debug_str	00000000 
00002535 l       .debug_str	00000000 
0000253b l       .debug_str	00000000 
00002541 l       .debug_str	00000000 
00002547 l       .debug_str	00000000 
00002553 l       .debug_str	00000000 
00002598 l       .debug_str	00000000 
000025a6 l       .debug_str	00000000 
000025eb l       .debug_str	00000000 
000025f2 l       .debug_str	00000000 
000025f5 l       .debug_str	00000000 
000025f9 l       .debug_str	00000000 
00002600 l       .debug_str	00000000 
00002604 l       .debug_str	00000000 
00002607 l       .debug_str	00000000 
0000260a l       .debug_str	00000000 
0000260f l       .debug_str	00000000 
00002615 l       .debug_str	00000000 
0000261c l       .debug_str	00000000 
0000458c l       .debug_str	00000000 
0000262e l       .debug_str	00000000 
00002631 l       .debug_str	00000000 
00002640 l       .debug_str	00000000 
0000264a l       .debug_str	00000000 
00002652 l       .debug_str	00000000 
0000265d l       .debug_str	00000000 
00002668 l       .debug_str	00000000 
00002675 l       .debug_str	00000000 
00002680 l       .debug_str	00000000 
00002688 l       .debug_str	00000000 
00002693 l       .debug_str	00000000 
0000269e l       .debug_str	00000000 
000026a8 l       .debug_str	00000000 
000026b3 l       .debug_str	00000000 
000026be l       .debug_str	00000000 
000026cb l       .debug_str	00000000 
000026d7 l       .debug_str	00000000 
000026e4 l       .debug_str	00000000 
000026f2 l       .debug_str	00000000 
000026fc l       .debug_str	00000000 
00002709 l       .debug_str	00000000 
00002715 l       .debug_str	00000000 
0000271e l       .debug_str	00000000 
0000277e l       .debug_str	00000000 
00002787 l       .debug_str	00000000 
0000278c l       .debug_str	00000000 
00002798 l       .debug_str	00000000 
000027b3 l       .debug_str	00000000 
000027b5 l       .debug_str	00000000 
000027ba l       .debug_str	00000000 
000027bf l       .debug_str	00000000 
000027c5 l       .debug_str	00000000 
000027d3 l       .debug_str	00000000 
000027dd l       .debug_str	00000000 
000027e1 l       .debug_str	00000000 
000027e9 l       .debug_str	00000000 
000027f1 l       .debug_str	00000000 
000027fd l       .debug_str	00000000 
00002808 l       .debug_str	00000000 
0000280f l       .debug_str	00000000 
00002815 l       .debug_str	00000000 
00002819 l       .debug_str	00000000 
0000281f l       .debug_str	00000000 
00002825 l       .debug_str	00000000 
00002828 l       .debug_str	00000000 
00002837 l       .debug_str	00000000 
0000283b l       .debug_str	00000000 
00002844 l       .debug_str	00000000 
00002850 l       .debug_str	00000000 
00002869 l       .debug_str	00000000 
0000286e l       .debug_str	00000000 
0000287f l       .debug_str	00000000 
00002889 l       .debug_str	00000000 
000028e7 l       .debug_str	00000000 
000028f2 l       .debug_str	00000000 
0000290f l       .debug_str	00000000 
00002913 l       .debug_str	00000000 
0000291b l       .debug_str	00000000 
00002932 l       .debug_str	00000000 
00002956 l       .debug_str	00000000 
00002972 l       .debug_str	00000000 
00002977 l       .debug_str	00000000 
00002980 l       .debug_str	00000000 
00002987 l       .debug_str	00000000 
000029a0 l       .debug_str	00000000 
000029aa l       .debug_str	00000000 
000029c4 l       .debug_str	00000000 
000029cd l       .debug_str	00000000 
000029e1 l       .debug_str	00000000 
000029ea l       .debug_str	00000000 
000029f1 l       .debug_str	00000000 
000029fc l       .debug_str	00000000 
00002a01 l       .debug_str	00000000 
00002a0c l       .debug_str	00000000 
00002a10 l       .debug_str	00000000 
00002a6c l       .debug_str	00000000 
00002ab4 l       .debug_str	00000000 
00002abc l       .debug_str	00000000 
00002b28 l       .debug_str	00000000 
00002b53 l       .debug_str	00000000 
00002bb0 l       .debug_str	00000000 
00002bb5 l       .debug_str	00000000 
00002bb9 l       .debug_str	00000000 
00002be1 l       .debug_str	00000000 
00002c06 l       .debug_str	00000000 
00002c0b l       .debug_str	00000000 
00002c11 l       .debug_str	00000000 
00002c1b l       .debug_str	00000000 
00002c24 l       .debug_str	00000000 
00002c2d l       .debug_str	00000000 
00002c38 l       .debug_str	00000000 
00002c42 l       .debug_str	00000000 
00002c69 l       .debug_str	00000000 
00002c81 l       .debug_str	00000000 
00002c8b l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
00002cb6 l       .debug_str	00000000 
00002cbd l       .debug_str	00000000 
00002ce1 l       .debug_str	00000000 
00002d0a l       .debug_str	00000000 
00002d23 l       .debug_str	00000000 
00002d2e l       .debug_str	00000000 
00002d56 l       .debug_str	00000000 
00002d7d l       .debug_str	00000000 
00002d87 l       .debug_str	00000000 
00002d8f l       .debug_str	00000000 
00002d96 l       .debug_str	00000000 
00002d9d l       .debug_str	00000000 
00002da2 l       .debug_str	00000000 
00002dc5 l       .debug_str	00000000 
00002ded l       .debug_str	00000000 
00002e05 l       .debug_str	00000000 
00002e0f l       .debug_str	00000000 
00002e37 l       .debug_str	00000000 
00002e5d l       .debug_str	00000000 
00002e85 l       .debug_str	00000000 
00002ea8 l       .debug_str	00000000 
00002eb0 l       .debug_str	00000000 
00002eb9 l       .debug_str	00000000 
00002ec7 l       .debug_str	00000000 
00002ece l       .debug_str	00000000 
00002ed5 l       .debug_str	00000000 
00002ee5 l       .debug_str	00000000 
00002eee l       .debug_str	00000000 
00002efc l       .debug_str	00000000 
00002f0a l       .debug_str	00000000 
00002f16 l       .debug_str	00000000 
00002f22 l       .debug_str	00000000 
00002f2b l       .debug_str	00000000 
00002f3a l       .debug_str	00000000 
00002f42 l       .debug_str	00000000 
00002f5b l       .debug_str	00000000 
00002f6c l       .debug_str	00000000 
00002f74 l       .debug_str	00000000 
00002f8e l       .debug_str	00000000 
00002f9a l       .debug_str	00000000 
00002fbf l       .debug_str	00000000 
00002fd8 l       .debug_str	00000000 
00002fdd l       .debug_str	00000000 
00002fe8 l       .debug_str	00000000 
0000300c l       .debug_str	00000000 
00003015 l       .debug_str	00000000 
00003030 l       .debug_str	00000000 
0000303d l       .debug_str	00000000 
00003063 l       .debug_str	00000000 
0000306b l       .debug_str	00000000 
0000308c l       .debug_str	00000000 
000030a2 l       .debug_str	00000000 
000030ad l       .debug_str	00000000 
000030bd l       .debug_str	00000000 
000030c1 l       .debug_str	00000000 
000030dc l       .debug_str	00000000 
000030e4 l       .debug_str	00000000 
0000310c l       .debug_str	00000000 
00003130 l       .debug_str	00000000 
00003158 l       .debug_str	00000000 
0000317f l       .debug_str	00000000 
000031a7 l       .debug_str	00000000 
000031d3 l       .debug_str	00000000 
000031fb l       .debug_str	00000000 
0000321f l       .debug_str	00000000 
00003228 l       .debug_str	00000000 
0000323d l       .debug_str	00000000 
00003248 l       .debug_str	00000000 
0000324f l       .debug_str	00000000 
00003277 l       .debug_str	00000000 
0000329a l       .debug_str	00000000 
000032c2 l       .debug_str	00000000 
000032f6 l       .debug_str	00000000 
0000331e l       .debug_str	00000000 
00003354 l       .debug_str	00000000 
0000337c l       .debug_str	00000000 
000033b5 l       .debug_str	00000000 
000033dd l       .debug_str	00000000 
0000340e l       .debug_str	00000000 
00003436 l       .debug_str	00000000 
00003463 l       .debug_str	00000000 
0000346c l       .debug_str	00000000 
0000347f l       .debug_str	00000000 
0000348a l       .debug_str	00000000 
0000349a l       .debug_str	00000000 
000034b6 l       .debug_str	00000000 
000034c4 l       .debug_str	00000000 
000034ec l       .debug_str	00000000 
00003520 l       .debug_str	00000000 
00003524 l       .debug_str	00000000 
0000352c l       .debug_str	00000000 
00003531 l       .debug_str	00000000 
00003533 l       .debug_str	00000000 
00003544 l       .debug_str	00000000 
0000355d l       .debug_str	00000000 
00003560 l       .debug_str	00000000 
00003571 l       .debug_str	00000000 
0000358a l       .debug_str	00000000 
0000358e l       .debug_str	00000000 
000035a3 l       .debug_str	00000000 
000035c0 l       .debug_str	00000000 
000035ca l       .debug_str	00000000 
000035cf l       .debug_str	00000000 
000035dc l       .debug_str	00000000 
000035e3 l       .debug_str	00000000 
000035eb l       .debug_str	00000000 
000035f3 l       .debug_str	00000000 
000035fa l       .debug_str	00000000 
00003601 l       .debug_str	00000000 
0000360c l       .debug_str	00000000 
00003634 l       .debug_str	00000000 
00003661 l       .debug_str	00000000 
00003688 l       .debug_str	00000000 
000036d4 l       .debug_str	00000000 
00003728 l       .debug_str	00000000 
00003741 l       .debug_str	00000000 
00003769 l       .debug_str	00000000 
000037a2 l       .debug_str	00000000 
000037ca l       .debug_str	00000000 
000037f5 l       .debug_str	00000000 
000037fe l       .debug_str	00000000 
00003840 l       .debug_str	00000000 
0000388a l       .debug_str	00000000 
00003891 l       .debug_str	00000000 
0000389f l       .debug_str	00000000 
000038ac l       .debug_str	00000000 
000038d4 l       .debug_str	00000000 
00003901 l       .debug_str	00000000 
00003909 l       .debug_str	00000000 
00003913 l       .debug_str	00000000 
00003919 l       .debug_str	00000000 
0000391e l       .debug_str	00000000 
00003926 l       .debug_str	00000000 
0000392f l       .debug_str	00000000 
00003945 l       .debug_str	00000000 
00003963 l       .debug_str	00000000 
0000396c l       .debug_str	00000000 
00003975 l       .debug_str	00000000 
0000398b l       .debug_str	00000000 
000039a9 l       .debug_str	00000000 
000039ae l       .debug_str	00000000 
000039b2 l       .debug_str	00000000 
000039bb l       .debug_str	00000000 
000039d1 l       .debug_str	00000000 
000039ef l       .debug_str	00000000 
000039f6 l       .debug_str	00000000 
000039fe l       .debug_str	00000000 
00003a08 l       .debug_str	00000000 
00003a1f l       .debug_str	00000000 
00003a3e l       .debug_str	00000000 
00003a48 l       .debug_str	00000000 
00003a4e l       .debug_str	00000000 
00003a5b l       .debug_str	00000000 
00003a5f l       .debug_str	00000000 
00003a67 l       .debug_str	00000000 
00003ab5 l       .debug_str	00000000 
00003b0b l       .debug_str	00000000 
00003b13 l       .debug_str	00000000 
00003b18 l       .debug_str	00000000 
00003b1e l       .debug_str	00000000 
00003b27 l       .debug_str	00000000 
00003b50 l       .debug_str	00000000 
00003b9e l       .debug_str	00000000 
00003bf4 l       .debug_str	00000000 
00003bfd l       .debug_str	00000000 
00003c26 l       .debug_str	00000000 
00003c74 l       .debug_str	00000000 
00003cca l       .debug_str	00000000 
00003cd4 l       .debug_str	00000000 
00003cfd l       .debug_str	00000000 
00003d4b l       .debug_str	00000000 
00003da1 l       .debug_str	00000000 
00003da7 l       .debug_str	00000000 
00003dd0 l       .debug_str	00000000 
00003e1e l       .debug_str	00000000 
00003e74 l       .debug_str	00000000 
00003e7d l       .debug_str	00000000 
00003ea6 l       .debug_str	00000000 
00003ef4 l       .debug_str	00000000 
00003f4a l       .debug_str	00000000 
00003f65 l       .debug_str	00000000 
00003f6b l       .debug_str	00000000 
00003f74 l       .debug_str	00000000 
00003f7b l       .debug_str	00000000 
00003f88 l       .debug_str	00000000 
00003fba l       .debug_str	00000000 
00003ff4 l       .debug_str	00000000 
00003ffb l       .debug_str	00000000 
0000400e l       .debug_str	00000000 
00004029 l       .debug_str	00000000 
00004043 l       .debug_str	00000000 
00004048 l       .debug_str	00000000 
00004059 l       .debug_str	00000000 
00004072 l       .debug_str	00000000 
00004083 l       .debug_str	00000000 
0000409c l       .debug_str	00000000 
000040ae l       .debug_str	00000000 
000040c8 l       .debug_str	00000000 
000040e0 l       .debug_str	00000000 
000040e6 l       .debug_str	00000000 
00004100 l       .debug_str	00000000 
00004104 l       .debug_str	00000000 
00004108 l       .debug_str	00000000 
00004114 l       .debug_str	00000000 
0000413f l       .debug_str	00000000 
00004149 l       .debug_str	00000000 
00004155 l       .debug_str	00000000 
00004180 l       .debug_str	00000000 
00004185 l       .debug_str	00000000 
0000418c l       .debug_str	00000000 
000041b5 l       .debug_str	00000000 
000041dd l       .debug_str	00000000 
00004226 l       .debug_str	00000000 
0000424e l       .debug_str	00000000 
0000427b l       .debug_str	00000000 
000042a3 l       .debug_str	00000000 
000042dd l       .debug_str	00000000 
00004305 l       .debug_str	00000000 
00004331 l       .debug_str	00000000 
0000433c l       .debug_str	00000000 
0000437a l       .debug_str	00000000 
00004392 l       .debug_str	00000000 
00004396 l       .debug_str	00000000 
0000439a l       .debug_str	00000000 
000043ed l       .debug_str	00000000 
00004401 l       .debug_str	00000000 
0000440b l       .debug_str	00000000 
00004411 l       .debug_str	00000000 
0000441a l       .debug_str	00000000 
00004421 l       .debug_str	00000000 
0000442b l       .debug_str	00000000 
00004430 l       .debug_str	00000000 
00004438 l       .debug_str	00000000 
0000443d l       .debug_str	00000000 
00004442 l       .debug_str	00000000 
00004449 l       .debug_str	00000000 
0000444e l       .debug_str	00000000 
0000445a l       .debug_str	00000000 
00004462 l       .debug_str	00000000 
0000446b l       .debug_str	00000000 
00004470 l       .debug_str	00000000 
00004473 l       .debug_str	00000000 
0000447c l       .debug_str	00000000 
00004483 l       .debug_str	00000000 
00004486 l       .debug_str	00000000 
0000448c l       .debug_str	00000000 
00004496 l       .debug_str	00000000 
0000449e l       .debug_str	00000000 
000044a4 l       .debug_str	00000000 
000044af l       .debug_str	00000000 
000044b8 l       .debug_str	00000000 
000044db l       .debug_str	00000000 
000044fa l       .debug_str	00000000 
00004521 l       .debug_str	00000000 
0000452b l       .debug_str	00000000 
00004541 l       .debug_str	00000000 
00005da6 l       .debug_str	00000000 
00000000 l     O .bss..L_MergedGlobals	00000020 .L_MergedGlobals
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.10	00000018 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.10
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.11	00000001 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.11
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.12	00000004 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.12
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.14	00000018 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.14
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.15	0000000d .Lanon.55424ad65b29f5c97c7496e43e6e85ed.15
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.16	00000001 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.16
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.17	00000006 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.17
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.18	00000006 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.18
00000008 l     O .rodata.cst4	00000004 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.19
00000000 l     O .rodata.cst4	00000004 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.2
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.21	00000018 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.21
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.22	00000009 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.22
0000000c l     O .rodata.cst4	00000004 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.23
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.24	00000018 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.24
00000010 l     O .rodata.cst4	00000004 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.25
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.27	00000018 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.27
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.28	00000010 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.28
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.29	00000010 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.29
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.3	00000010 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.3
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.31	00000010 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.31
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.32	00000010 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.32
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.33	00000010 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.33
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.34	00000010 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.34
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.35	00000010 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.35
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.36	0000000e .Lanon.55424ad65b29f5c97c7496e43e6e85ed.36
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.37	00000002 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.37
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.38	0000000c .Lanon.55424ad65b29f5c97c7496e43e6e85ed.38
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.39	00000009 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.39
00000004 l     O .rodata.cst4	00000004 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.4
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.40	0000000d .Lanon.55424ad65b29f5c97c7496e43e6e85ed.40
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.41	0000000c .Lanon.55424ad65b29f5c97c7496e43e6e85ed.41
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.42	0000000b .Lanon.55424ad65b29f5c97c7496e43e6e85ed.42
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.43	0000000c .Lanon.55424ad65b29f5c97c7496e43e6e85ed.43
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.44	0000000a .Lanon.55424ad65b29f5c97c7496e43e6e85ed.44
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.45	0000000a .Lanon.55424ad65b29f5c97c7496e43e6e85ed.45
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.46	00000009 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.46
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.47	0000000a .Lanon.55424ad65b29f5c97c7496e43e6e85ed.47
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.48	0000000a .Lanon.55424ad65b29f5c97c7496e43e6e85ed.48
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.49	00000007 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.49
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.50	0000000a .Lanon.55424ad65b29f5c97c7496e43e6e85ed.50
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.51	0000000c .Lanon.55424ad65b29f5c97c7496e43e6e85ed.51
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.52	0000000a .Lanon.55424ad65b29f5c97c7496e43e6e85ed.52
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.53	0000000a .Lanon.55424ad65b29f5c97c7496e43e6e85ed.53
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.54	00000007 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.54
00000000 l     O .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.7	00000018 .Lanon.55424ad65b29f5c97c7496e43e6e85ed.7
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2cfb61132b48edccE	00000052 <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h745f41b8e34166b7E	0000003c <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de3d303e9ff9ef1E	00000036 <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbcd7b245d49b6c28E	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN4core3ptr18real_drop_in_place17h3d619037eb1fa5a0E	00000002 core::ptr::real_drop_in_place
00000000 l     O .data._ZN6mynewt2hw6sensor17LISTENER_INTERNAL17hab1386224d3e5d05E	00000018 mynewt::hw::sensor::LISTENER_INTERNAL
00000000 l     F .text._ZN6mynewt2hw6sensor21null_sensor_data_func17h3468416fe3db0831E	00000004 mynewt::hw::sensor::null_sensor_data_func
00000000 l     O .bss..L_MergedGlobals	00000010 mynewt::encoding::coap_context::cbor_encoder0
00000010 l     O .bss..L_MergedGlobals	00000010 mynewt::encoding::coap_context::cbor_encoder1
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2cfb61132b48edccE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2cfb61132b48edccE
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h745f41b8e34166b7E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h745f41b8e34166b7E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de3d303e9ff9ef1E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de3d303e9ff9ef1E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbcd7b245d49b6c28E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbcd7b245d49b6c28E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h3d619037eb1fa5a0E	00000000 .text._ZN4core3ptr18real_drop_in_place17h3d619037eb1fa5a0E
00000000 l    d  .text._ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd906925ffaebbd74E	00000000 .text._ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd906925ffaebbd74E
00000000 l    d  .text._ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h45b310d4aa6bf9fbE	00000000 .text._ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h45b310d4aa6bf9fbE
00000000 l    d  .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hfd661a3a4524fd73E	00000000 .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hfd661a3a4524fd73E
00000000 l    d  .text._ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h32aaad755b93ecc5E	00000000 .text._ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h32aaad755b93ecc5E
00000000 l    d  .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E	00000000 .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E
00000000 l    d  .text._ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h4aa186bd46df2e72E	00000000 .text._ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h4aa186bd46df2e72E
00000000 l    d  .text._ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hc446c89c9d986042E	00000000 .text._ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hc446c89c9d986042E
00000000 l    d  .text._ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17hf8690a07c1e1a635E	00000000 .text._ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17hf8690a07c1e1a635E
00000000 l    d  .text._ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h175edfa151be095dE	00000000 .text._ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h175edfa151be095dE
00000000 l    d  .text._ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17hb7deb7f5eef4418fE	00000000 .text._ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17hb7deb7f5eef4418fE
00000000 l    d  .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17h8ba4744b3a1eee08E	00000000 .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17h8ba4744b3a1eee08E
00000000 l    d  .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h713272558b9bd9b4E	00000000 .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h713272558b9bd9b4E
00000000 l    d  .text._ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17hffc40bbdefb611b9E	00000000 .text._ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17hffc40bbdefb611b9E
00000000 l    d  .text._ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17h967436cb21ec70d9E	00000000 .text._ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17h967436cb21ec70d9E
00000000 l    d  .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000000 .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE
00000000 l    d  .text._ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h066c1f5718bb82caE	00000000 .text._ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h066c1f5718bb82caE
00000000 l    d  .text._ZN6mynewt2hw6sensor10as_untyped17h83128ccc8231d4a0E	00000000 .text._ZN6mynewt2hw6sensor10as_untyped17h83128ccc8231d4a0E
00000000 l    d  .text._ZN6mynewt2hw6sensor17register_listener17ha5269b3027967e6cE	00000000 .text._ZN6mynewt2hw6sensor17register_listener17ha5269b3027967e6cE
00000000 l    d  .text._ZN6mynewt2hw6sensor21null_sensor_data_func17h3468416fe3db0831E	00000000 .text._ZN6mynewt2hw6sensor21null_sensor_data_func17h3468416fe3db0831E
00000000 l    d  .text._ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE	00000000 .text._ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE
00000000 l    d  .text._ZN6mynewt3sys7console6buffer17hdcbb1b64b1219e0dE	00000000 .text._ZN6mynewt3sys7console6buffer17hdcbb1b64b1219e0dE
00000000 l    d  .text._ZN6mynewt3sys7console8printhex17h2e2a147c20047838E	00000000 .text._ZN6mynewt3sys7console8printhex17h2e2a147c20047838E
00000000 l    d  .text._ZN6mynewt3sys7console5flush17h1dcb683b7bea3a79E	00000000 .text._ZN6mynewt3sys7console5flush17h1dcb683b7bea3a79E
00000000 l    d  .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000000 .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE
00000000 l    d  .text._ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8019c096ee200c24E	00000000 .text._ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8019c096ee200c24E
00000000 l    d  .text._ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17hab3d1802aa552e60E	00000000 .text._ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17hab3d1802aa552e60E
00000000 l    d  .text._ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17hf6f87638392b071bE	00000000 .text._ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17hf6f87638392b071bE
00000000 l    d  .text._ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17h17042d8e41e650b9E	00000000 .text._ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17h17042d8e41e650b9E
00000000 l    d  .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E	00000000 .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E
00000000 l    d  .text._ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h230f161a3018d4eaE	00000000 .text._ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h230f161a3018d4eaE
00000000 l    d  .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1385dca7885868d6E	00000000 .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1385dca7885868d6E
00000000 l    d  .text._ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h7c1f9180a575fdc9E	00000000 .text._ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h7c1f9180a575fdc9E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17hc3fa1cc96429c629E	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17hc3fa1cc96429c629E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hd585922d7725a650E	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hd585922d7725a650E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext4fail17h83b1cea6bb910ebaE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext4fail17h83b1cea6bb910ebaE
00000000 l    d  .text._ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h24f1f9ceef68783bE	00000000 .text._ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h24f1f9ceef68783bE
00000000 l    d  .text._ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h775f5fcd63538b2bE	00000000 .text._ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h775f5fcd63538b2bE
00000000 l    d  .text._ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE	00000000 .text._ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE
00000000 l    d  .text._ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h871051176ad7e835E	00000000 .text._ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h871051176ad7e835E
00000000 l    d  .text._ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h80e3b7c802688d72E	00000000 .text._ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h80e3b7c802688d72E
00000000 l    d  .text._ZN6mynewt7sysinit17h4f3b13954addfd2dE	00000000 .text._ZN6mynewt7sysinit17h4f3b13954addfd2dE
00000000 l    d  .text._ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h58e7d36395d633adE	00000000 .text._ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h58e7d36395d633adE
00000000 l    d  .text._ZN6mynewt4Strn3new17h59058c5fcf019697E	00000000 .text._ZN6mynewt4Strn3new17h59058c5fcf019697E
00000000 l    d  .text._ZN6mynewt4Strn7as_cstr17h9b5f295a11917f7eE	00000000 .text._ZN6mynewt4Strn7as_cstr17h9b5f295a11917f7eE
00000000 l    d  .text._ZN6mynewt4Strn10as_bytestr17hbaaa6735911b91b6E	00000000 .text._ZN6mynewt4Strn10as_bytestr17hbaaa6735911b91b6E
00000000 l    d  .text._ZN6mynewt4Strn8validate17h84acf5da8cb8bbf9E	00000000 .text._ZN6mynewt4Strn8validate17h84acf5da8cb8bbf9E
00000000 l    d  .text._ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E	00000000 .text._ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E
00000000 l    d  .text._ZN6mynewt6kernel2os10eventq_run17h1a13961f44fa3993E	00000000 .text._ZN6mynewt6kernel2os10eventq_run17h1a13961f44fa3993E
00000000 l    d  .text._ZN6mynewt6kernel2os15eventq_dflt_get17h5e66559059f6d8a1E	00000000 .text._ZN6mynewt6kernel2os15eventq_dflt_get17h5e66559059f6d8a1E
00000000 l    d  .text._ZN6mynewt6kernel2os9task_init17h9daa8926e9799d12E	00000000 .text._ZN6mynewt6kernel2os9task_init17h9daa8926e9799d12E
00000000 l    d  .text._ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h7dd69905a3b7f7a6E	00000000 .text._ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h7dd69905a3b7f7a6E
00000000 l    d  .text._ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h120a6d01d88ba30aE	00000000 .text._ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h120a6d01d88ba30aE
00000000 l    d  .text._ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc42fa8b39463f26E	00000000 .text._ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc42fa8b39463f26E
00000000 l    d  .text._ZN6mynewt4libs14sensor_network22start_server_transport17h883c417d7c9da1f5E	00000000 .text._ZN6mynewt4libs14sensor_network22start_server_transport17h883c417d7c9da1f5E
00000000 l    d  .text._ZN6mynewt4libs14sensor_network16init_server_post17h243fb9b2b2b78b44E	00000000 .text._ZN6mynewt4libs14sensor_network16init_server_post17h243fb9b2b2b78b44E
00000000 l    d  .text._ZN6mynewt4libs14sensor_network12prepare_post17h76cd3111832683b6E	00000000 .text._ZN6mynewt4libs14sensor_network12prepare_post17h76cd3111832683b6E
00000000 l    d  .text._ZN6mynewt4libs14sensor_network14do_server_post17h26ac10ece205a321E	00000000 .text._ZN6mynewt4libs14sensor_network14do_server_post17h26ac10ece205a321E
00000000 l    d  .text._ZN6mynewt4libs14sensor_network9device_id17h785b2c58018ac3d9E	00000000 .text._ZN6mynewt4libs14sensor_network9device_id17h785b2c58018ac3d9E
00000000 l    d  .text._ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h5491a719a634f5cfE	00000000 .text._ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h5491a719a634f5cfE
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.0	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.0
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.1	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.1
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.3	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.3
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.5	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.5
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.6	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.6
00000000 l    d  .data._ZN6mynewt2hw6sensor17LISTENER_INTERNAL17hab1386224d3e5d05E	00000000 .data._ZN6mynewt2hw6sensor17LISTENER_INTERNAL17hab1386224d3e5d05E
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.8	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.8
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.9	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.9
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.11	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.11
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.13	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.13
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.20	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.20
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.26	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.26
00000000 l    d  .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.30	00000000 .rodata..Lanon.55424ad65b29f5c97c7496e43e6e85ed.30
00000000 l    d  .bss..L_MergedGlobals	00000000 .bss..L_MergedGlobals
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::_bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_time_change_listener__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::os_sanity_check__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::sensor_listener__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::sensor_notifier__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::sensor_type_traits__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::encoding::json::json_value__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::sensor_type_traits__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E	0000000a <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E	0000000a <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_4 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_5 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_6 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::libs::sensor_coap::json_value__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::field
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000         *UND*	00000000 core::fmt::Formatter::debug_lower_hex
00000000         *UND*	00000000 core::fmt::Formatter::debug_upper_hex
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000 g     F .text._ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h5491a719a634f5cfE	0000011a <mynewt::result::MynewtError as core::fmt::Debug>::fmt
00000000 g     F .text._ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h32aaad755b93ecc5E	0000000a <mynewt::kernel::os::os_dev as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h175edfa151be095dE	00000008 <mynewt::kernel::os::os_sem as core::default::Default>::default
00000000 g     F .text._ZN6mynewt2hw6sensor10as_untyped17h83128ccc8231d4a0E	00000002 mynewt::hw::sensor::as_untyped
00000000 g     F .text._ZN6mynewt2hw6sensor17register_listener17ha5269b3027967e6cE	00000038 mynewt::hw::sensor::register_listener
00000000 g     F .text._ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h120a6d01d88ba30aE	00000084 mynewt::hw::sensor::bindings::set_poll_rate_ms
00000000 g     F .text._ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h7dd69905a3b7f7a6E	00000086 mynewt::hw::sensor::bindings::mgr_find_next_bydevname
00000000 g     F .text._ZN6mynewt3sys7console5flush17h1dcb683b7bea3a79E	00000004 mynewt::sys::console::flush
00000000 g     F .text._ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE	0000000e mynewt::sys::console::print
00000000 g     F .text._ZN6mynewt3sys7console6buffer17hdcbb1b64b1219e0dE	00000004 mynewt::sys::console::buffer
00000000 g     F .text._ZN6mynewt3sys7console8printhex17h2e2a147c20047838E	00000006 mynewt::sys::console::printhex
00000000 g     F .text._ZN6mynewt4Strn10as_bytestr17hbaaa6735911b91b6E	00000072 mynewt::Strn::as_bytestr
00000000 g     F .text._ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E	00000072 mynewt::Strn::validate_bytestr
00000000 g     F .text._ZN6mynewt4Strn3new17h59058c5fcf019697E	00000072 mynewt::Strn::new
00000000 g     F .text._ZN6mynewt4Strn7as_cstr17h9b5f295a11917f7eE	00000072 mynewt::Strn::as_cstr
00000000 g     F .text._ZN6mynewt4Strn8validate17h84acf5da8cb8bbf9E	00000072 mynewt::Strn::validate
00000000 g     F .text._ZN6mynewt4libs14sensor_network12prepare_post17h76cd3111832683b6E	00000012 mynewt::libs::sensor_network::prepare_post
00000000 g     F .text._ZN6mynewt4libs14sensor_network14do_server_post17h26ac10ece205a321E	00000010 mynewt::libs::sensor_network::do_server_post
00000000 g     F .text._ZN6mynewt4libs14sensor_network16init_server_post17h243fb9b2b2b78b44E	00000082 mynewt::libs::sensor_network::init_server_post
00000000 g     F .text._ZN6mynewt4libs14sensor_network22start_server_transport17h883c417d7c9da1f5E	0000000e mynewt::libs::sensor_network::start_server_transport
00000000 g     F .text._ZN6mynewt4libs14sensor_network9device_id17h785b2c58018ac3d9E	00000010 mynewt::libs::sensor_network::device_id
00000000 g     F .text._ZN6mynewt6kernel2os10eventq_run17h1a13961f44fa3993E	0000000a mynewt::kernel::os::eventq_run
00000000 g     F .text._ZN6mynewt6kernel2os15eventq_dflt_get17h5e66559059f6d8a1E	00000010 mynewt::kernel::os::eventq_dflt_get
00000000 g     F .text._ZN6mynewt6kernel2os9task_init17h9daa8926e9799d12E	000000a2 mynewt::kernel::os::task_init
00000000 g     F .text._ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h58e7d36395d633adE	00000002 mynewt::result::<impl core::convert::From<mynewt::result::MynewtError> for i32>::from
00000000 g     F .text._ZN6mynewt7sysinit17h4f3b13954addfd2dE	0000000e mynewt::sysinit
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE	00000024 mynewt::encoding::coap_context::CoapContext::key_to_cstr
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE	000000f6 mynewt::encoding::coap_context::CoapContext::new_encoder
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h24f1f9ceef68783bE	00000002 mynewt::encoding::coap_context::CoapContext::to_void_ptr
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E	0000005a mynewt::encoding::coap_context::CoapContext::check_result
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17hc3fa1cc96429c629E	00000038 mynewt::encoding::coap_context::CoapContext::value_to_cstr
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hd585922d7725a650E	0000000a mynewt::encoding::coap_context::CoapContext::global_encoder
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext4fail17h83b1cea6bb910ebaE	0000005e mynewt::encoding::coap_context::CoapContext::fail
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE	00000152 mynewt::encoding::coap_context::CoapContext::encoder
00000000 g     F .text._ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE	00000016 mynewt::encoding::coap_context::CoapContext::cstr_len
00000000 g     O .bss._ZN6mynewt8encoding12coap_context12COAP_CONTEXT17h4b0466955a8c3012E	00000040 mynewt::encoding::coap_context::COAP_CONTEXT
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E	0000000c <mynewt::kernel::os::os_mbuf as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17hf8690a07c1e1a635E	0000000a <mynewt::kernel::os::os_task as core::default::Default>::default
00000000 g     F .text._ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd906925ffaebbd74E	0000000c <mynewt::kernel::os::os_event as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E	0000000a <mynewt::kernel::os::os_mutex as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hfd661a3a4524fd73E	00000010 <mynewt::kernel::os::hal_timer as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E	0000000c <mynewt::kernel::os::os_eventq as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hfd661a3a4524fd73E	00000010 <mynewt::kernel::os::os_mqueue as core::default::Default>::default
00000000 g     F .text._ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h45b310d4aa6bf9fbE	00000014 <mynewt::kernel::os::os_callout as core::default::Default>::default
00000000 g     F .text._ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h4aa186bd46df2e72E	00000012 <mynewt::kernel::os::os_mempool as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_memblock as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_task_obj as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::encoding::tinycbor::File as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E	0000000a <mynewt::kernel::os::os_mbuf_pool as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::kernel::os::os_task_list as core::default::Default>::default
00000000 g     F .text._ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE	00000002 <str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000 g     F .text._ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17hab3d1802aa552e60E	00000010 <mynewt::encoding::json::json_value as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h175edfa151be095dE	00000008 <mynewt::kernel::os::os_mbuf_pkthdr as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h32aaad755b93ecc5E	0000000a <mynewt::kernel::os::os_mempool_ext as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::kernel::os::os_task_stailq as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E	0000000c <mynewt::libs::sensor_coap::os_mbuf as core::default::Default>::default
00000000 g     F .text._ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc42fa8b39463f26E	00000034 <mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt
00000000 g     F .text._ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h7c1f9180a575fdc9E	0000000a <mynewt::encoding::json::json_attr_t as core::default::Default>::default
00000000 g     F .text._ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17h17042d8e41e650b9E	00000008 <mynewt::encoding::json::json_enum_t as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::kernel::os::os_callout_list as core::default::Default>::default
00000000 g     F .text._ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hc446c89c9d986042E	0000000e <mynewt::kernel::os::os_sanity_check as core::default::Default>::default
00000000 g     F .text._ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h58e7d36395d633adE	00000002 <mynewt::result::MynewtError as core::convert::From<i32>>::from
00000000 g     F .text._ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h871051176ad7e835E	00000008 <&str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000 g     F .text._ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h230f161a3018d4eaE	0000000a <mynewt::encoding::json::json_array_t as core::default::Default>::default
00000000 g     F .text._ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17hf6f87638392b071bE	0000000a <mynewt::encoding::json::json_encoder as core::default::Default>::default
00000000 g     F .text._ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17h967436cb21ec70d9E	0000000a <mynewt::hw::sensor::bindings::sensor as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E	0000000c <mynewt::encoding::tinycbor::CborValue as core::default::Default>::default
00000000 g     F .text._ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h4aa186bd46df2e72E	00000012 <mynewt::libs::sensor_coap::os_mempool as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E	0000000a <mynewt::encoding::tinycbor::CborParser as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::encoding::tinycbor::cbor_iovec as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::sensor_coap::os_memblock as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E	0000000c <mynewt::encoding::tinycbor::CborEncoder as core::default::Default>::default
00000000 g     F .text._ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hc446c89c9d986042E	0000000e <mynewt::kernel::os::os_time_change_info as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E	0000000a <mynewt::libs::sensor_coap::os_mbuf_pool as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E	0000000c <mynewt::libs::sensor_coap::sensor_value as core::default::Default>::default
00000000 g     F .text._ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17hffc40bbdefb611b9E	0000000e <mynewt::hw::sensor::bindings::sensor_itf as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_dev__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_sem__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h775f5fcd63538b2bE	00000002 <[u8] as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_mbuf__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_task__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::kernel::os::os_task__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_task__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_event__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_mutex__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h066c1f5718bb82caE	0000000a <mynewt::hw::sensor::bindings::_bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17hb7deb7f5eef4418fE	00000008 <mynewt::hw::sensor::bindings::sensor_data_t as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::kernel::os::hal_timer__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::kernel::os::os_eventq__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::kernel::os::os_mqueue__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E	0000000a <mynewt::kernel::os::os_time_change_listener as core::default::Default>::default
00000000 g     F .text._ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h80e3b7c802688d72E	00000002 <cstr_core::CStr as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::kernel::os::os_callout__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_mempool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_mempool__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17h8ba4744b3a1eee08E	00000010 <mynewt::hw::sensor::bindings::sensor_listener as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E	0000000c <mynewt::hw::sensor::bindings::sensor_notifier as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::hw::sensor::bindings::sensor_read_ctx as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_memblock__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_task_obj__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17h8ba4744b3a1eee08E	00000010 <mynewt::hw::sensor::bindings::sensor_timestamp as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::os_dev__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::sensor__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::sensor__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::sensor__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::sensor__bindgen_ty_4 as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8019c096ee200c24E	0000000c <mynewt::encoding::json::json_value__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17h17042d8e41e650b9E	00000008 <mynewt::hw::sensor::bindings::sensor_read_ev_ctx as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h713272558b9bd9b4E	0000000a <mynewt::hw::sensor::bindings::sensor_type_traits as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_mbuf_pkthdr__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::os_task__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::libs::mynewt_rust::os_task__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::os_task__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::sensor_coap::os_mbuf__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1385dca7885868d6E	0000000a <mynewt::encoding::json::json_attr_t__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17hb7deb7f5eef4418fE	00000008 <mynewt::encoding::json::json_attr_t__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hfd661a3a4524fd73E	00000010 <mynewt::hw::sensor::bindings::sensor_notify_os_ev as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::kernel::os::os_sanity_check__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::os_event__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::os_mutex__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17hab3d1802aa552e60E	00000010 <mynewt::encoding::json::json_array_t__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::os_dev__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::sensor__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::sensor__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::sensor__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::sensor__bindgen_ty_4 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::hw::sensor::bindings::sensor_notify_ev_ctx as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::os_task__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::hw::sensor::bindings::os_task__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::os_task__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8019c096ee200c24E	0000000c <mynewt::libs::sensor_coap::json_value__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::sensor_coap::os_mempool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::sensor_coap::os_mempool__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::os_event__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::os_mutex__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::sensor_coap::os_memblock__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::hw::sensor::bindings::os_eventq__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::sensor_coap::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE	00000006 <mynewt::hw::sensor::bindings::os_callout__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::os_mempool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::os_mempool__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17hffc40bbdefb611b9E	0000000e <mynewt::libs::sensor_network::sensor_network_interface as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::hw::sensor::bindings::os_memblock__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::os_sanity_check__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::sensor_listener__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE	00000004 <mynewt::libs::mynewt_rust::sensor_notifier__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 __aeabi_memclr4
00000000         *UND*	00000000 __aeabi_memclr8
00000000         *UND*	00000000 __aeabi_memcpy
00000000         *UND*	00000000 console_buffer
00000000         *UND*	00000000 console_flush
00000000         *UND*	00000000 console_printhex
00000000         *UND*	00000000 do_server_post
00000000         *UND*	00000000 g_encoder
00000000         *UND*	00000000 get_device_id
00000000         *UND*	00000000 init_server_post
00000000         *UND*	00000000 memcmp
00000000         *UND*	00000000 os_eventq_dflt_get
00000000         *UND*	00000000 os_eventq_run
00000000         *UND*	00000000 os_task_init
00000000         *UND*	00000000 root_map
00000000         *UND*	00000000 rust_sysinit
00000000         *UND*	00000000 sensor_mgr_find_next_bydevname
00000000         *UND*	00000000 sensor_network_prepare_post
00000000         *UND*	00000000 sensor_register_listener
00000000         *UND*	00000000 sensor_set_poll_rate_ms
00000000         *UND*	00000000 start_server_transport



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2cfb61132b48edccE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2cfb61132b48edccE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b084      	sub	sp, #16
   4:	6805      	ldr	r5, [r0, #0]
   6:	466c      	mov	r4, sp
_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h97af2a0ac0ecf15bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
   8:	6828      	ldr	r0, [r5, #0]
   a:	b1a8      	cbz	r0, 38 <<&T as core::fmt::Debug>::fmt+0x38>
   c:	f240 0200 	movw	r2, #0
  10:	4620      	mov	r0, r4
  12:	f2c0 0200 	movt	r2, #0
  16:	2304      	movs	r3, #4
  18:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  1c:	f240 0200 	movw	r2, #0
  20:	a903      	add	r1, sp, #12
  22:	f2c0 0200 	movt	r2, #0
  26:	4620      	mov	r0, r4
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:156
  28:	9503      	str	r5, [sp, #12]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  2a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::field>
  2e:	4620      	mov	r0, r4
  30:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2cfb61132b48edccE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
  34:	b004      	add	sp, #16
  36:	bdb0      	pop	{r4, r5, r7, pc}
_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h97af2a0ac0ecf15bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  38:	f240 0200 	movw	r2, #0
  3c:	4620      	mov	r0, r4
  3e:	f2c0 0200 	movt	r2, #0
  42:	2304      	movs	r3, #4
  44:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  48:	4620      	mov	r0, r4
  4a:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h2cfb61132b48edccE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
  4e:	b004      	add	sp, #16
  50:	bdb0      	pop	{r4, r5, r7, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h745f41b8e34166b7E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h745f41b8e34166b7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6800      	ldr	r0, [r0, #0]
   4:	460c      	mov	r4, r1
   6:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h9e4fa01cb4d0f6d9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   8:	4608      	mov	r0, r1
   a:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   e:	b128      	cbz	r0, 1c <<&T as core::fmt::Debug>::fmt+0x1c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
  10:	4628      	mov	r0, r5
  12:	4621      	mov	r1, r4
  14:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  18:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  1c:	4620      	mov	r0, r4
  1e:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  22:	b128      	cbz	r0, 30 <<&T as core::fmt::Debug>::fmt+0x30>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  24:	4628      	mov	r0, r5
  26:	4621      	mov	r1, r4
  28:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2c:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  30:	4628      	mov	r0, r5
  32:	4621      	mov	r1, r4
  34:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  38:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt>

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de3d303e9ff9ef1E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de3d303e9ff9ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	6800      	ldr	r0, [r0, #0]
   6:	ac01      	add	r4, sp, #4
_ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc42fa8b39463f26E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:118
        ptr as *mut c_void
    }
}

/// Error codes for COAP encoding failure
#[derive(Debug, PartialEq)]
   8:	7800      	ldrb	r0, [r0, #0]
   a:	2801      	cmp	r0, #1
   c:	d106      	bne.n	1c <<&T as core::fmt::Debug>::fmt+0x1c>
   e:	f240 0200 	movw	r2, #0
  12:	4620      	mov	r0, r4
  14:	f2c0 0200 	movt	r2, #0
  18:	230e      	movs	r3, #14
  1a:	e005      	b.n	28 <<&T as core::fmt::Debug>::fmt+0x28>
  1c:	f240 0200 	movw	r2, #0
  20:	4620      	mov	r0, r4
  22:	f2c0 0200 	movt	r2, #0
  26:	2302      	movs	r3, #2
  28:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  2c:	4620      	mov	r0, r4
  2e:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9de3d303e9ff9ef1E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
  32:	b004      	add	sp, #16
  34:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbcd7b245d49b6c28E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbcd7b245d49b6c28E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hf694bc8878de4d72E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h3d619037eb1fa5a0E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h3d619037eb1fa5a0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/ptr/mod.rs:197
   0:	4770      	bx	lr

Disassembly of section .text._ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd906925ffaebbd74E:

00000000 <<mynewt::kernel::os::os_event as core::default::Default>::default>:
_ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd906925ffaebbd74E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:412
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_event {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h4dbc78c9347d8168E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
_ZN71_$LT$mynewt..kernel..os..os_event$u20$as$u20$core..default..Default$GT$7default17hd906925ffaebbd74E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:414
        unsafe { ::core::mem::zeroed() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h45b310d4aa6bf9fbE:

00000000 <<mynewt::kernel::os::os_callout as core::default::Default>::default>:
_ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h45b310d4aa6bf9fbE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:544
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_callout {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h46c864cfee1d829aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
   e:	e9c0 1106 	strd	r1, r1, [r0, #24]
_ZN73_$LT$mynewt..kernel..os..os_callout$u20$as$u20$core..default..Default$GT$7default17h45b310d4aa6bf9fbE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:546
        unsafe { ::core::mem::zeroed() }
    }
  12:	4770      	bx	lr

Disassembly of section .text._ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hfd661a3a4524fd73E:

00000000 <<mynewt::kernel::os::hal_timer as core::default::Default>::default>:
_ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hfd661a3a4524fd73E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:645
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for hal_timer {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17ha7924253a1234fa9E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
_ZN72_$LT$mynewt..kernel..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17hfd661a3a4524fd73E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:647
        unsafe { ::core::mem::zeroed() }
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h32aaad755b93ecc5E:

00000000 <<mynewt::kernel::os::os_dev as core::default::Default>::default>:
_ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h32aaad755b93ecc5E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:815
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_dev {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17h40b528118da0514bE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	2124      	movs	r1, #36	; 0x24
   4:	f7ff fffe 	bl	0 <__aeabi_memclr4>
_ZN69_$LT$mynewt..kernel..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h32aaad755b93ecc5E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:817
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E:

00000000 <<mynewt::kernel::os::os_mbuf as core::default::Default>::default>:
_ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1043
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_mbuf {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17hde118be621ea475eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
_ZN70_$LT$mynewt..kernel..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17he50212a1030d4247E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1045
        unsafe { ::core::mem::zeroed() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h4aa186bd46df2e72E:

00000000 <<mynewt::kernel::os::os_mempool as core::default::Default>::default>:
_ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h4aa186bd46df2e72E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1524
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_mempool {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17ha39b7913ccee4352E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
   e:	6181      	str	r1, [r0, #24]
_ZN73_$LT$mynewt..kernel..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h4aa186bd46df2e72E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1526
        unsafe { ::core::mem::zeroed() }
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hc446c89c9d986042E:

00000000 <<mynewt::kernel::os::os_sanity_check as core::default::Default>::default>:
_ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hc446c89c9d986042E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1783
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_sanity_check {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h1d8eca3caa709a65E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	6101      	str	r1, [r0, #16]
_ZN78_$LT$mynewt..kernel..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17hc446c89c9d986042E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1785
        unsafe { ::core::mem::zeroed() }
    }
   c:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17hf8690a07c1e1a635E:

00000000 <<mynewt::kernel::os::os_task as core::default::Default>::default>:
_ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17hf8690a07c1e1a635E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1921
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_task {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17hd02be6f463e65237E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	2150      	movs	r1, #80	; 0x50
   4:	f7ff fffe 	bl	0 <__aeabi_memclr4>
_ZN70_$LT$mynewt..kernel..os..os_task$u20$as$u20$core..default..Default$GT$7default17hf8690a07c1e1a635E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1923
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h175edfa151be095dE:

00000000 <<mynewt::kernel::os::os_sem as core::default::Default>::default>:
_ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h175edfa151be095dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2134
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_sem {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17hc3b2606bed934ec7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
_ZN69_$LT$mynewt..kernel..os..os_sem$u20$as$u20$core..default..Default$GT$7default17h175edfa151be095dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:2136
        unsafe { ::core::mem::zeroed() }
    }
   6:	4770      	bx	lr

Disassembly of section .text._ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17hb7deb7f5eef4418fE:

00000000 <<mynewt::hw::sensor::bindings::sensor_data_t as core::default::Default>::default>:
_ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17hb7deb7f5eef4418fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:359
    pub spd: __BindgenUnionField<*mut sensor_press_data>,
    pub srhd: __BindgenUnionField<*mut sensor_humid_data>,
    pub bindgen_union_field: u64,
}
impl Default for sensor_data_t {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h9692fec41d3f5db2E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
_ZN86_$LT$mynewt..hw..sensor..bindings..sensor_data_t$u20$as$u20$core..default..Default$GT$7default17hb7deb7f5eef4418fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:361
        unsafe { ::core::mem::zeroed() }
    }
   6:	4770      	bx	lr

Disassembly of section .text._ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17h8ba4744b3a1eee08E:

00000000 <<mynewt::hw::sensor::bindings::sensor_listener as core::default::Default>::default>:
_ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17h8ba4744b3a1eee08E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:443
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for sensor_listener {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17he3537c60e449abfcE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
_ZN88_$LT$mynewt..hw..sensor..bindings..sensor_listener$u20$as$u20$core..default..Default$GT$7default17h8ba4744b3a1eee08E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:445
        unsafe { ::core::mem::zeroed() }
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h713272558b9bd9b4E:

00000000 <<mynewt::hw::sensor::bindings::sensor_type_traits as core::default::Default>::default>:
_ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h713272558b9bd9b4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:503
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for sensor_type_traits {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17hd51f3f21a0b2c64aE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	2130      	movs	r1, #48	; 0x30
   4:	f7ff fffe 	bl	0 <__aeabi_memclr8>
_ZN91_$LT$mynewt..hw..sensor..bindings..sensor_type_traits$u20$as$u20$core..default..Default$GT$7default17h713272558b9bd9b4E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:505
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17hffc40bbdefb611b9E:

00000000 <<mynewt::hw::sensor::bindings::sensor_itf as core::default::Default>::default>:
_ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17hffc40bbdefb611b9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:678
    pub si_low_pin: u8,
    pub si_high_pin: u8,
    pub si_ints: [sensor_int; 2usize],
}
impl Default for sensor_itf {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h222516d67dd8dbebE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	6101      	str	r1, [r0, #16]
_ZN83_$LT$mynewt..hw..sensor..bindings..sensor_itf$u20$as$u20$core..default..Default$GT$7default17hffc40bbdefb611b9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:680
        unsafe { ::core::mem::zeroed() }
    }
   c:	4770      	bx	lr

Disassembly of section .text._ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17h967436cb21ec70d9E:

00000000 <<mynewt::hw::sensor::bindings::sensor as core::default::Default>::default>:
_ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17h967436cb21ec70d9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:739
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for sensor {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17ha3974bffe49b518dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	2188      	movs	r1, #136	; 0x88
   4:	f7ff fffe 	bl	0 <__aeabi_memclr8>
_ZN79_$LT$mynewt..hw..sensor..bindings..sensor$u20$as$u20$core..default..Default$GT$7default17h967436cb21ec70d9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:741
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE:

00000000 <<mynewt::hw::sensor::bindings::_bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default>:
_ZN100_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hd736f35a047995fbE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:1830
    pub slh_first: *mut sensor,
}
impl Default for _bindgen_ty_1__bindgen_ty_1 {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

Disassembly of section .text._ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h066c1f5718bb82caE:

00000000 <<mynewt::hw::sensor::bindings::_bindgen_ty_1 as core::default::Default>::default>:
_ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h066c1f5718bb82caE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:1833
}
impl Default for _bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17h21d524b71fa51532E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	2134      	movs	r1, #52	; 0x34
   4:	f7ff fffe 	bl	0 <__aeabi_memclr4>
_ZN86_$LT$mynewt..hw..sensor..bindings.._bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h066c1f5718bb82caE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:1835
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt2hw6sensor10as_untyped17h83128ccc8231d4a0E:

00000000 <mynewt::hw::sensor::as_untyped>:
_ZN6mynewt2hw6sensor10as_untyped17h83128ccc8231d4a0E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:49
        ::core::mem::transmute::
            <sensor_data_func, sensor_data_func_untyped>
            (typed)
    };
    Some(untyped)
}
   0:	4770      	bx	lr

Disassembly of section .text._ZN6mynewt2hw6sensor17register_listener17ha5269b3027967e6cE:

00000000 <mynewt::hw::sensor::register_listener>:
_ZN6mynewt2hw6sensor17register_listener17ha5269b3027967e6cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:70
///  For more information on the type of callbacks available, see the documentation
///  for the sensor listener structure.
///  `sensor`: The sensor to register a listener on.
///  `listener`: The listener to register onto the sensor.
///  Returns `Ok()` on success, `Err()` containing `MynewtError` error code on failure.
pub fn register_listener(sensor: *mut sensor, listener: sensor_listener) -> MynewtResult<()> {  //  Returns an error code upon error. 
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	b081      	sub	sp, #4
   4:	468c      	mov	ip, r1
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:71
    unsafe { assert!(LISTENER_INTERNAL.sl_sensor_type == 0) };  //  Make sure it's not used.
   6:	f240 0100 	movw	r1, #0
   a:	f2c0 0100 	movt	r1, #0
   e:	e9d1 3200 	ldrd	r3, r2, [r1]
  12:	431a      	orrs	r2, r3
  14:	d109      	bne.n	2a <mynewt::hw::sensor::register_listener+0x2a>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:73
    //  Copy the caller's listener to the internal listener.
    unsafe { LISTENER_INTERNAL = listener };
  16:	e89c 40f8 	ldmia.w	ip, {r3, r4, r5, r6, r7, lr}
  1a:	460a      	mov	r2, r1
  1c:	e882 40f8 	stmia.w	r2, {r3, r4, r5, r6, r7, lr}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:75
    //  Pass the internal listener to the unsafe Mynewt API.
    unsafe { sensor_register_listener(sensor, &mut LISTENER_INTERNAL) };
  20:	f7ff fffe 	bl	0 <sensor_register_listener>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:77
    Ok(())
}
  24:	2001      	movs	r0, #1
  26:	b001      	add	sp, #4
  28:	bdf0      	pop	{r4, r5, r6, r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:71
    unsafe { assert!(LISTENER_INTERNAL.sl_sensor_type == 0) };  //  Make sure it's not used.
  2a:	f240 0000 	movw	r0, #0
  2e:	f2c0 0000 	movt	r0, #0
  32:	f7ff fffe 	bl	0 <core::panicking::panic>
  36:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt2hw6sensor21null_sensor_data_func17h3468416fe3db0831E:

00000000 <mynewt::hw::sensor::null_sensor_data_func>:
_ZN6mynewt2hw6sensor21null_sensor_data_func17h3468416fe3db0831E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw/sensor.rs:93
extern fn null_sensor_data_func(
    _sensor: sensor_ptr, 
    _arg: sensor_arg, 
    _sensor_data: sensor_data_ptr, 
    _sensor_type: sensor_type_t) -> i32
    { 0 }
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

Disassembly of section .text._ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE:

00000000 <mynewt::sys::console::print>:
_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:4
//! Display messages on Arm Semihosting Console (via OpenOCD)

///  Display message `msg` on the Arm Semihosting console (via OpenOCD).
pub fn print(msg: &str) {
   0:	b580      	push	{r7, lr}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
    unsafe {
        //  Call the Semihosting Console API, which is unsafe.
        console_buffer(msg.as_ptr(), msg.len() as u32);
   2:	f7ff fffe 	bl	0 <console_buffer>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:8
        console_flush();  //  TODO: Remove this.
   6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
   a:	f7ff bffe 	b.w	0 <console_flush>

Disassembly of section .text._ZN6mynewt3sys7console6buffer17hdcbb1b64b1219e0dE:

00000000 <mynewt::sys::console::buffer>:
_ZN6mynewt3sys7console6buffer17hdcbb1b64b1219e0dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:15
}

///  Add the string to the output buffer.
pub fn buffer(msg: &str) {
    unsafe {
        console_buffer(msg.as_ptr(), msg.len() as u32);
   0:	f7ff bffe 	b.w	0 <console_buffer>

Disassembly of section .text._ZN6mynewt3sys7console8printhex17h2e2a147c20047838E:

00000000 <mynewt::sys::console::printhex>:
_ZN6mynewt3sys7console8printhex17h2e2a147c20047838E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:22
}

///  Write a byte in hexadecimal to the output buffer.
///  C API: `void console_printhex(uint8_t v)`
pub fn printhex(v: u8) {
    unsafe { console_printhex(v); }
   0:	b2c0      	uxtb	r0, r0
   2:	f7ff bffe 	b.w	0 <console_printhex>

Disassembly of section .text._ZN6mynewt3sys7console5flush17h1dcb683b7bea3a79E:

00000000 <mynewt::sys::console::flush>:
_ZN6mynewt3sys7console5flush17h1dcb683b7bea3a79E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:27
}

///  Flush the output buffer to the console.
pub fn flush() {
    unsafe { console_flush(); }
   0:	f7ff bffe 	b.w	0 <console_flush>

Disassembly of section .text._ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE:

00000000 <<mynewt::encoding::json::json_value__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default>:
_ZN105_$LT$mynewt..encoding..json..json_value__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hdc1eec339b492d0dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:188
    pub values: *mut *mut json_value,
}
impl Default for json_value__bindgen_ty_1__bindgen_ty_1 {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
   0:	2000      	movs	r0, #0
   2:	2100      	movs	r1, #0
   4:	4770      	bx	lr

Disassembly of section .text._ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8019c096ee200c24E:

00000000 <<mynewt::encoding::json::json_value__bindgen_ty_1 as core::default::Default>::default>:
_ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8019c096ee200c24E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:191
}
impl Default for json_value__bindgen_ty_1 {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h87d704dfb64cb9b7E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
_ZN91_$LT$mynewt..encoding..json..json_value__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h8019c096ee200c24E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:193
        unsafe { ::core::mem::zeroed() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17hab3d1802aa552e60E:

00000000 <<mynewt::encoding::json::json_value as core::default::Default>::default>:
_ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17hab3d1802aa552e60E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:196
}
impl Default for json_value {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h3cd6e9e65d42c4e6E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
_ZN77_$LT$mynewt..encoding..json..json_value$u20$as$u20$core..default..Default$GT$7default17hab3d1802aa552e60E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:198
        unsafe { ::core::mem::zeroed() }
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17hf6f87638392b071bE:

00000000 <<mynewt::encoding::json::json_encoder as core::default::Default>::default>:
_ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17hf6f87638392b071bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:215
    pub je_arg: *mut ::cty::c_void,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub je_encode_buf: [::cty::c_char; 64usize],
}
impl Default for json_encoder {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17ha40d6d7aa75475ebE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	214c      	movs	r1, #76	; 0x4c
   4:	f7ff fffe 	bl	0 <__aeabi_memclr4>
_ZN79_$LT$mynewt..encoding..json..json_encoder$u20$as$u20$core..default..Default$GT$7default17hf6f87638392b071bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:217
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17h17042d8e41e650b9E:

00000000 <<mynewt::encoding::json::json_enum_t as core::default::Default>::default>:
_ZN78_$LT$mynewt..encoding..json..json_enum_t$u20$as$u20$core..default..Default$GT$7default17h17042d8e41e650b9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:299
    pub value: ::cty::c_longlong,
}
impl Default for json_enum_t {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
   0:	2000      	movs	r0, #0
   2:	2100      	movs	r1, #0
   4:	2200      	movs	r2, #0
   6:	4770      	bx	lr

Disassembly of section .text._ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E:

00000000 <<mynewt::encoding::json::json_array_t__bindgen_ty_1__bindgen_ty_1 as core::default::Default>::default>:
_ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:325
    pub subtype: *const json_attr_t,
    pub base: *mut ::cty::c_char,
    pub stride: usize,
}
impl Default for json_array_t__bindgen_ty_1__bindgen_ty_1 {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h341d7004c1d26f71E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	6081      	str	r1, [r0, #8]
_ZN107_$LT$mynewt..encoding..json..json_array_t__bindgen_ty_1__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17hfc8059e8c350ed99E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:327
        unsafe { ::core::mem::zeroed() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h230f161a3018d4eaE:

00000000 <<mynewt::encoding::json::json_array_t as core::default::Default>::default>:
_ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h230f161a3018d4eaE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:382
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for json_array_t {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17h8f1d54344f408718E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	2128      	movs	r1, #40	; 0x28
   4:	f7ff fffe 	bl	0 <__aeabi_memclr8>
_ZN79_$LT$mynewt..encoding..json..json_array_t$u20$as$u20$core..default..Default$GT$7default17h230f161a3018d4eaE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:384
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1385dca7885868d6E:

00000000 <<mynewt::encoding::json::json_attr_t__bindgen_ty_1 as core::default::Default>::default>:
_ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1385dca7885868d6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:409
    pub array: __BindgenUnionField<json_array_t>,
    pub offset: __BindgenUnionField<usize>,
    pub bindgen_union_field: [u64; 6usize],
}
impl Default for json_attr_t__bindgen_ty_1 {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17h631b234e9c18077eE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	2130      	movs	r1, #48	; 0x30
   4:	f7ff fffe 	bl	0 <__aeabi_memclr8>
_ZN92_$LT$mynewt..encoding..json..json_attr_t__bindgen_ty_1$u20$as$u20$core..default..Default$GT$7default17h1385dca7885868d6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:411
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h7c1f9180a575fdc9E:

00000000 <<mynewt::encoding::json::json_attr_t as core::default::Default>::default>:
_ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h7c1f9180a575fdc9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:429
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for json_attr_t {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17h7336a5ecb0a6a985E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/mem/mod.rs:454
   2:	2150      	movs	r1, #80	; 0x50
   4:	f7ff fffe 	bl	0 <__aeabi_memclr8>
_ZN78_$LT$mynewt..encoding..json..json_attr_t$u20$as$u20$core..default..Default$GT$7default17h7c1f9180a575fdc9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/json.rs:431
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE:

00000000 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>:
_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:37
    pub fn key_to_cstr(&mut self, s: &[u8]) -> *const c_char {                
   0:	b5b0      	push	{r4, r5, r7, lr}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:41
        assert!(s.len() < COAP_KEY_SIZE);  //  Key too long
   2:	2a20      	cmp	r2, #32
   4:	d207      	bcs.n	16 <mynewt::encoding::coap_context::CoapContext::key_to_cstr+0x16>
   6:	4614      	mov	r4, r2
   8:	4605      	mov	r5, r0
_ZN4core10intrinsics19copy_nonoverlapping17h9aecb48856767335E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
   a:	f7ff fffe 	bl	0 <__aeabi_memcpy>
   e:	2000      	movs	r0, #0
_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:43
        self.key_buffer[s.len()] = 0;
  10:	5528      	strb	r0, [r5, r4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:45
    }
  12:	4628      	mov	r0, r5
  14:	bdb0      	pop	{r4, r5, r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:41
        assert!(s.len() < COAP_KEY_SIZE);  //  Key too long
  16:	f240 0000 	movw	r0, #0
  1a:	f2c0 0000 	movt	r0, #0
  1e:	f7ff fffe 	bl	0 <core::panicking::panic>
  22:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17hc3fa1cc96429c629E:

00000000 <mynewt::encoding::coap_context::CoapContext::value_to_cstr>:
_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17hc3fa1cc96429c629E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:50
    pub fn value_to_cstr(&mut self, s: &[u8]) -> *const c_char {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	4614      	mov	r4, r2
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   4:	3a01      	subs	r2, #1
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
   6:	d303      	bcc.n	10 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x10>
   8:	42a2      	cmp	r2, r4
   a:	d201      	bcs.n	10 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x10>
_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17hc3fa1cc96429c629E():
   c:	5c8a      	ldrb	r2, [r1, r2]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:52
        if s.last() == Some(&0) { return s.as_ptr() as *const c_char; }
   e:	b152      	cbz	r2, 26 <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x26>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:54
        assert!(s.len() < COAP_VALUE_SIZE);  //  Value too long
  10:	2c20      	cmp	r4, #32
  12:	d20a      	bcs.n	2a <mynewt::encoding::coap_context::CoapContext::value_to_cstr+0x2a>
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h5644dcf7d19a9c59E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:413
  14:	f100 0520 	add.w	r5, r0, #32
_ZN4core10intrinsics19copy_nonoverlapping17h9aecb48856767335E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/intrinsics.rs:1412
  18:	4622      	mov	r2, r4
  1a:	4628      	mov	r0, r5
  1c:	f7ff fffe 	bl	0 <__aeabi_memcpy>
  20:	2000      	movs	r0, #0
_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17hc3fa1cc96429c629E():
  22:	4629      	mov	r1, r5
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:56
        self.value_buffer[s.len()] = 0;
  24:	5528      	strb	r0, [r5, r4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:58
    }
  26:	4608      	mov	r0, r1
  28:	bdb0      	pop	{r4, r5, r7, pc}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:54
        assert!(s.len() < COAP_VALUE_SIZE);  //  Value too long
  2a:	f240 0000 	movw	r0, #0
  2e:	f2c0 0000 	movt	r0, #0
  32:	f7ff fffe 	bl	0 <core::panicking::panic>
  36:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE:

00000000 <mynewt::encoding::coap_context::CoapContext::cstr_len>:
_ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:62
    pub fn cstr_len(&self, s: &[u8]) -> usize {
   0:	4610      	mov	r0, r2
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   2:	3a01      	subs	r2, #1
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
   4:	d306      	bcc.n	14 <mynewt::encoding::coap_context::CoapContext::cstr_len+0x14>
   6:	4282      	cmp	r2, r0
_ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE():
   8:	bf28      	it	cs
   a:	4770      	bxcs	lr
   c:	5c89      	ldrb	r1, [r1, r2]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:64
        if s.last() == Some(&0) { return s.len() - 1; }
   e:	2900      	cmp	r1, #0
  10:	bf08      	it	eq
  12:	3801      	subeq	r0, #1
  14:	4770      	bx	lr

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hd585922d7725a650E:

00000000 <mynewt::encoding::coap_context::CoapContext::global_encoder>:
_ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hd585922d7725a650E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:71
    }
   0:	f240 0000 	movw	r0, #0
   4:	f2c0 0000 	movt	r0, #0
   8:	4770      	bx	lr

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE:

00000000 <mynewt::encoding::coap_context::CoapContext::new_encoder>:
_ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:74
    pub fn new_encoder(&self, key: &str, suffix: &str) -> *mut super::tinycbor::CborEncoder {
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	b081      	sub	sp, #4
_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
        console_buffer(msg.as_ptr(), msg.len() as u32);
   4:	f240 0000 	movw	r0, #0
   8:	460e      	mov	r6, r1
   a:	f2c0 0000 	movt	r0, #0
   e:	210d      	movs	r1, #13
  10:	461c      	mov	r4, r3
  12:	4617      	mov	r7, r2
  14:	f7ff fffe 	bl	0 <console_buffer>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:8
        console_flush();  //  TODO: Remove this.
  18:	f7ff fffe 	bl	0 <console_flush>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
        console_buffer(msg.as_ptr(), msg.len() as u32);
  1c:	4630      	mov	r0, r6
  1e:	4639      	mov	r1, r7
  20:	f7ff fffe 	bl	0 <console_buffer>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:8
        console_flush();  //  TODO: Remove this.
  24:	f7ff fffe 	bl	0 <console_flush>
  28:	9d06      	ldr	r5, [sp, #24]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
        console_buffer(msg.as_ptr(), msg.len() as u32);
  2a:	4620      	mov	r0, r4
  2c:	4629      	mov	r1, r5
  2e:	f7ff fffe 	bl	0 <console_buffer>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:8
        console_flush();  //  TODO: Remove this.
  32:	f7ff fffe 	bl	0 <console_flush>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
        console_buffer(msg.as_ptr(), msg.len() as u32);
  36:	f240 0000 	movw	r0, #0
  3a:	2101      	movs	r1, #1
  3c:	f2c0 0000 	movt	r0, #0
  40:	f7ff fffe 	bl	0 <console_buffer>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:8
        console_flush();  //  TODO: Remove this.
  44:	f7ff fffe 	bl	0 <console_flush>
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5312
  48:	2f06      	cmp	r7, #6
  4a:	d14d      	bne.n	e8 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xe8>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  4c:	f240 0700 	movw	r7, #0
  50:	f2c0 0700 	movt	r7, #0
  54:	42be      	cmp	r6, r7
  56:	d008      	beq.n	6a <mynewt::encoding::coap_context::CoapContext::new_encoder+0x6a>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  58:	f240 0100 	movw	r1, #0
  5c:	4630      	mov	r0, r6
  5e:	f2c0 0100 	movt	r1, #0
  62:	2206      	movs	r2, #6
  64:	f7ff fffe 	bl	0 <memcmp>
_ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h9e2dddc40ef659ebE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/tuple.rs:18
  68:	b990      	cbnz	r0, 90 <mynewt::encoding::coap_context::CoapContext::new_encoder+0x90>
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5312
  6a:	2d06      	cmp	r5, #6
  6c:	d10e      	bne.n	8c <mynewt::encoding::coap_context::CoapContext::new_encoder+0x8c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  6e:	f240 0000 	movw	r0, #0
  72:	f2c0 0000 	movt	r0, #0
  76:	4284      	cmp	r4, r0
  78:	d02d      	beq.n	d6 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xd6>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  7a:	f240 0100 	movw	r1, #0
  7e:	4620      	mov	r0, r4
  80:	f2c0 0100 	movt	r1, #0
  84:	2206      	movs	r2, #6
  86:	f7ff fffe 	bl	0 <memcmp>
_ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:77
        if (key, suffix)      == ("values", _ARRAY) { unsafe { &mut cbor_encoder0 } }
  8a:	b320      	cbz	r0, d6 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xd6>
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  8c:	42be      	cmp	r6, r7
  8e:	d029      	beq.n	e4 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xe4>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  90:	f240 0100 	movw	r1, #0
  94:	4630      	mov	r0, r6
  96:	f2c0 0100 	movt	r1, #0
  9a:	2206      	movs	r2, #6
  9c:	f7ff fffe 	bl	0 <memcmp>
_ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h9e2dddc40ef659ebE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/tuple.rs:18
  a0:	2d04      	cmp	r5, #4
  a2:	d121      	bne.n	e8 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xe8>
  a4:	bb00      	cbnz	r0, e8 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xe8>
  a6:	f240 0000 	movw	r0, #0
  aa:	f2c0 0000 	movt	r0, #0
  ae:	f100 0610 	add.w	r6, r0, #16
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  b2:	f240 0000 	movw	r0, #0
  b6:	f2c0 0000 	movt	r0, #0
  ba:	4284      	cmp	r4, r0
  bc:	d008      	beq.n	d0 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xd0>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  be:	f240 0100 	movw	r1, #0
  c2:	4620      	mov	r0, r4
  c4:	f2c0 0100 	movt	r1, #0
  c8:	462a      	mov	r2, r5
  ca:	f7ff fffe 	bl	0 <memcmp>
_ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:78
        else if (key, suffix) == ("values", _MAP)   { unsafe { &mut cbor_encoder1 } }
  ce:	b958      	cbnz	r0, e8 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xe8>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:84
    }
  d0:	4630      	mov	r0, r6
  d2:	b001      	add	sp, #4
  d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  d6:	f240 0600 	movw	r6, #0
  da:	f2c0 0600 	movt	r6, #0
  de:	4630      	mov	r0, r6
  e0:	b001      	add	sp, #4
  e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5312
  e4:	2d04      	cmp	r5, #4
  e6:	d0de      	beq.n	a6 <mynewt::encoding::coap_context::CoapContext::new_encoder+0xa6>
_ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:81
            assert!(false);  //  No such encoder.
  e8:	f240 0000 	movw	r0, #0
  ec:	f2c0 0000 	movt	r0, #0
  f0:	f7ff fffe 	bl	0 <core::panicking::panic>
  f4:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE:

00000000 <mynewt::encoding::coap_context::CoapContext::encoder>:
_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:87
    pub fn encoder(&self, key: &str, suffix: &str) -> *mut super::tinycbor::CborEncoder {
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	b081      	sub	sp, #4
_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
        console_buffer(msg.as_ptr(), msg.len() as u32);
   4:	f240 0000 	movw	r0, #0
   8:	460e      	mov	r6, r1
   a:	f2c0 0000 	movt	r0, #0
   e:	2109      	movs	r1, #9
  10:	461c      	mov	r4, r3
  12:	4617      	mov	r7, r2
  14:	f7ff fffe 	bl	0 <console_buffer>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:8
        console_flush();  //  TODO: Remove this.
  18:	f7ff fffe 	bl	0 <console_flush>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
        console_buffer(msg.as_ptr(), msg.len() as u32);
  1c:	4630      	mov	r0, r6
  1e:	4639      	mov	r1, r7
  20:	f7ff fffe 	bl	0 <console_buffer>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:8
        console_flush();  //  TODO: Remove this.
  24:	f7ff fffe 	bl	0 <console_flush>
  28:	9d06      	ldr	r5, [sp, #24]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
        console_buffer(msg.as_ptr(), msg.len() as u32);
  2a:	4620      	mov	r0, r4
  2c:	4629      	mov	r1, r5
  2e:	f7ff fffe 	bl	0 <console_buffer>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:8
        console_flush();  //  TODO: Remove this.
  32:	f7ff fffe 	bl	0 <console_flush>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:7
        console_buffer(msg.as_ptr(), msg.len() as u32);
  36:	f240 0000 	movw	r0, #0
  3a:	2101      	movs	r1, #1
  3c:	f2c0 0000 	movt	r0, #0
  40:	f7ff fffe 	bl	0 <console_buffer>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:8
        console_flush();  //  TODO: Remove this.
  44:	f7ff fffe 	bl	0 <console_flush>
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5312
  48:	2f06      	cmp	r7, #6
  4a:	d02a      	beq.n	a2 <mynewt::encoding::coap_context::CoapContext::encoder+0xa2>
  4c:	2f04      	cmp	r7, #4
  4e:	d179      	bne.n	144 <mynewt::encoding::coap_context::CoapContext::encoder+0x144>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  50:	f240 0000 	movw	r0, #0
  54:	f2c0 0000 	movt	r0, #0
  58:	4286      	cmp	r6, r0
  5a:	d067      	beq.n	12c <mynewt::encoding::coap_context::CoapContext::encoder+0x12c>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  5c:	6830      	ldr	r0, [r6, #0]
  5e:	f646 7172 	movw	r1, #28530	; 0x6f72
  62:	f2c7 416f 	movt	r1, #29807	; 0x746f
  66:	1a40      	subs	r0, r0, r1
  68:	bf18      	it	ne
  6a:	2001      	movne	r0, #1
_ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h9e2dddc40ef659ebE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/tuple.rs:18
  6c:	2d04      	cmp	r5, #4
  6e:	d169      	bne.n	144 <mynewt::encoding::coap_context::CoapContext::encoder+0x144>
  70:	2800      	cmp	r0, #0
  72:	d167      	bne.n	144 <mynewt::encoding::coap_context::CoapContext::encoder+0x144>
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  74:	f240 0000 	movw	r0, #0
  78:	f2c0 0000 	movt	r0, #0
  7c:	4284      	cmp	r4, r0
  7e:	d009      	beq.n	94 <mynewt::encoding::coap_context::CoapContext::encoder+0x94>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  80:	f240 0100 	movw	r1, #0
  84:	4620      	mov	r0, r4
  86:	f2c0 0100 	movt	r1, #0
  8a:	462a      	mov	r2, r5
  8c:	f7ff fffe 	bl	0 <memcmp>
_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:90
        if (key, suffix)      == ("root", "_map")   { unsafe { &mut super::root_map } }
  90:	2800      	cmp	r0, #0
  92:	d157      	bne.n	144 <mynewt::encoding::coap_context::CoapContext::encoder+0x144>
  94:	f240 0600 	movw	r6, #0
  98:	f2c0 0600 	movt	r6, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:98
    }
  9c:	4630      	mov	r0, r6
  9e:	b001      	add	sp, #4
  a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  a2:	f240 0700 	movw	r7, #0
  a6:	f2c0 0700 	movt	r7, #0
  aa:	42be      	cmp	r6, r7
  ac:	d008      	beq.n	c0 <mynewt::encoding::coap_context::CoapContext::encoder+0xc0>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  ae:	f240 0100 	movw	r1, #0
  b2:	4630      	mov	r0, r6
  b4:	f2c0 0100 	movt	r1, #0
  b8:	2206      	movs	r2, #6
  ba:	f7ff fffe 	bl	0 <memcmp>
_ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h9e2dddc40ef659ebE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/tuple.rs:18
  be:	b990      	cbnz	r0, e6 <mynewt::encoding::coap_context::CoapContext::encoder+0xe6>
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5312
  c0:	2d06      	cmp	r5, #6
  c2:	d10e      	bne.n	e2 <mynewt::encoding::coap_context::CoapContext::encoder+0xe2>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  c4:	f240 0000 	movw	r0, #0
  c8:	f2c0 0000 	movt	r0, #0
  cc:	4284      	cmp	r4, r0
  ce:	d030      	beq.n	132 <mynewt::encoding::coap_context::CoapContext::encoder+0x132>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  d0:	f240 0100 	movw	r1, #0
  d4:	4620      	mov	r0, r4
  d6:	f2c0 0100 	movt	r1, #0
  da:	2206      	movs	r2, #6
  dc:	f7ff fffe 	bl	0 <memcmp>
_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:91
        else if (key, suffix) == ("values", _ARRAY) { unsafe { &mut cbor_encoder0 } }
  e0:	b338      	cbz	r0, 132 <mynewt::encoding::coap_context::CoapContext::encoder+0x132>
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
  e2:	42be      	cmp	r6, r7
  e4:	d02c      	beq.n	140 <mynewt::encoding::coap_context::CoapContext::encoder+0x140>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
  e6:	f240 0100 	movw	r1, #0
  ea:	4630      	mov	r0, r6
  ec:	f2c0 0100 	movt	r1, #0
  f0:	2206      	movs	r2, #6
  f2:	f7ff fffe 	bl	0 <memcmp>
_ZN4core5tuple69_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$A$C$$u20$B$RP$$GT$2eq17h9e2dddc40ef659ebE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/tuple.rs:18
  f6:	2d04      	cmp	r5, #4
  f8:	d124      	bne.n	144 <mynewt::encoding::coap_context::CoapContext::encoder+0x144>
  fa:	bb18      	cbnz	r0, 144 <mynewt::encoding::coap_context::CoapContext::encoder+0x144>
  fc:	f240 0000 	movw	r0, #0
 100:	f2c0 0000 	movt	r0, #0
 104:	f100 0610 	add.w	r6, r0, #16
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5315
 108:	f240 0000 	movw	r0, #0
 10c:	f2c0 0000 	movt	r0, #0
 110:	4284      	cmp	r4, r0
 112:	d008      	beq.n	126 <mynewt::encoding::coap_context::CoapContext::encoder+0x126>
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5320
 114:	f240 0100 	movw	r1, #0
 118:	4620      	mov	r0, r4
 11a:	f2c0 0100 	movt	r1, #0
 11e:	462a      	mov	r2, r5
 120:	f7ff fffe 	bl	0 <memcmp>
_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:92
        else if (key, suffix) == ("values", _MAP)   { unsafe { &mut cbor_encoder1 } }
 124:	b970      	cbnz	r0, 144 <mynewt::encoding::coap_context::CoapContext::encoder+0x144>
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:98
    }
 126:	4630      	mov	r0, r6
 128:	b001      	add	sp, #4
 12a:	bdf0      	pop	{r4, r5, r6, r7, pc}
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5312
 12c:	2d04      	cmp	r5, #4
 12e:	d0a1      	beq.n	74 <mynewt::encoding::coap_context::CoapContext::encoder+0x74>
 130:	e008      	b.n	144 <mynewt::encoding::coap_context::CoapContext::encoder+0x144>
_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE():
 132:	f240 0600 	movw	r6, #0
 136:	f2c0 0600 	movt	r6, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:98
 13a:	4630      	mov	r0, r6
 13c:	b001      	add	sp, #4
 13e:	bdf0      	pop	{r4, r5, r6, r7, pc}
_ZN68_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..SlicePartialEq$LT$A$GT$$GT$5equal17h9a0ae322cff87ff0E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:5312
 140:	2d04      	cmp	r5, #4
 142:	d0db      	beq.n	fc <mynewt::encoding::coap_context::CoapContext::encoder+0xfc>
_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:95
            assert!(false);  //  No such encoder.
 144:	f240 0000 	movw	r0, #0
 148:	f2c0 0000 	movt	r0, #0
 14c:	f7ff fffe 	bl	0 <core::panicking::panic>
 150:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E:

00000000 <mynewt::encoding::coap_context::CoapContext::check_result>:
_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:101
    pub fn check_result(&self, res: u32) {
   0:	b08e      	sub	sp, #56	; 0x38
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:102
        assert_eq!(res, 0);
   2:	2900      	cmp	r1, #0
   4:	9101      	str	r1, [sp, #4]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:103
    }
   6:	bf04      	itt	eq
   8:	b00e      	addeq	sp, #56	; 0x38
   a:	4770      	bxeq	lr
   c:	a801      	add	r0, sp, #4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:102
        assert_eq!(res, 0);
   e:	900c      	str	r0, [sp, #48]	; 0x30
  10:	f240 0000 	movw	r0, #0
  14:	a90d      	add	r1, sp, #52	; 0x34
  16:	f2c0 0000 	movt	r0, #0
  1a:	900b      	str	r0, [sp, #44]	; 0x2c
  1c:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  20:	a80c      	add	r0, sp, #48	; 0x30
  22:	9008      	str	r0, [sp, #32]
  24:	f240 0000 	movw	r0, #0
  28:	f2c0 0000 	movt	r0, #0
  2c:	f240 0100 	movw	r1, #0
  30:	900d      	str	r0, [sp, #52]	; 0x34
  32:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  34:	9007      	str	r0, [sp, #28]
  36:	a808      	add	r0, sp, #32
  38:	9006      	str	r0, [sp, #24]
  3a:	2000      	movs	r0, #0
  3c:	e9cd 0004 	strd	r0, r0, [sp, #16]
  40:	2003      	movs	r0, #3
  42:	9003      	str	r0, [sp, #12]
  44:	f240 0000 	movw	r0, #0
  48:	f2c0 0000 	movt	r0, #0
_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:102
  4c:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  50:	9002      	str	r0, [sp, #8]
  52:	a802      	add	r0, sp, #8
_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:102
  54:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  58:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext4fail17h83b1cea6bb910ebaE:

00000000 <mynewt::encoding::coap_context::CoapContext::fail>:
_ZN6mynewt8encoding12coap_context11CoapContext4fail17h83b1cea6bb910ebaE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:106
    pub fn fail(&mut self, err: CoapError) {
   0:	b08e      	sub	sp, #56	; 0x38
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:107
        assert_eq!(err, CoapError::OK);
   2:	2900      	cmp	r1, #0
   4:	f88d 1007 	strb.w	r1, [sp, #7]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:108
    }
   8:	bf04      	itt	eq
   a:	b00e      	addeq	sp, #56	; 0x38
   c:	4770      	bxeq	lr
   e:	f10d 0007 	add.w	r0, sp, #7
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:107
        assert_eq!(err, CoapError::OK);
  12:	900c      	str	r0, [sp, #48]	; 0x30
  14:	f240 0000 	movw	r0, #0
  18:	a90d      	add	r1, sp, #52	; 0x34
  1a:	f2c0 0000 	movt	r0, #0
  1e:	900b      	str	r0, [sp, #44]	; 0x2c
  20:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  24:	a80c      	add	r0, sp, #48	; 0x30
  26:	9008      	str	r0, [sp, #32]
  28:	f240 0000 	movw	r0, #0
  2c:	f2c0 0000 	movt	r0, #0
  30:	f240 0100 	movw	r1, #0
  34:	900d      	str	r0, [sp, #52]	; 0x34
  36:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  38:	9007      	str	r0, [sp, #28]
  3a:	a808      	add	r0, sp, #32
  3c:	9006      	str	r0, [sp, #24]
  3e:	2000      	movs	r0, #0
  40:	e9cd 0004 	strd	r0, r0, [sp, #16]
  44:	2003      	movs	r0, #3
  46:	9003      	str	r0, [sp, #12]
  48:	f240 0000 	movw	r0, #0
  4c:	f2c0 0000 	movt	r0, #0
_ZN6mynewt8encoding12coap_context11CoapContext4fail17h83b1cea6bb910ebaE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:107
  50:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  54:	9002      	str	r0, [sp, #8]
  56:	a802      	add	r0, sp, #8
_ZN6mynewt8encoding12coap_context11CoapContext4fail17h83b1cea6bb910ebaE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:107
  58:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  5c:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h24f1f9ceef68783bE:

00000000 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>:
_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17h24f1f9ceef68783bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:114
    }
   0:	4770      	bx	lr

Disassembly of section .text._ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h775f5fcd63538b2bE:

00000000 <<[u8] as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>:
_ZN84_$LT$$u5b$u8$u5d$$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h775f5fcd63538b2bE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:137
/// Convert the type to array of bytes that may or may not end with null
impl ToBytesOptionalNull for [u8] {
    /// Convert the type to array of bytes that may or may not end with null
    fn to_bytes_optional_nul(&self) -> &[u8] {
        self
    }
   0:	4770      	bx	lr

Disassembly of section .text._ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE:

00000000 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>:
_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:145
/// Convert the type to array of bytes that may or may not end with null
impl ToBytesOptionalNull for str {
    /// Convert the type to array of bytes that may or may not end with null
    fn to_bytes_optional_nul(&self) -> &[u8] {
        self.as_bytes()
    }
   0:	4770      	bx	lr

Disassembly of section .text._ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h871051176ad7e835E:

00000000 <<&str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>:
_ZN79_$LT$$RF$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h871051176ad7e835E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:152

/// Convert the type to array of bytes that may or may not end with null
impl ToBytesOptionalNull for &str {
    /// Convert the type to array of bytes that may or may not end with null
    fn to_bytes_optional_nul(&self) -> &[u8] {
        self.as_bytes()
   0:	e9d0 2100 	ldrd	r2, r1, [r0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:153
    }
   4:	4610      	mov	r0, r2
   6:	4770      	bx	lr

Disassembly of section .text._ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h80e3b7c802688d72E:

00000000 <<cstr_core::CStr as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>:
_ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h80e3b7c802688d72E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:161
/// Convert the type to array of bytes that may or may not end with null. CStr always includes nulls.
impl ToBytesOptionalNull for CStr {
    /// Convert the type to array of bytes that may or may not end with null. CStr always includes nulls.
    fn to_bytes_optional_nul(&self) -> &[u8] {
        self.to_bytes_with_nul()
    }
   0:	4770      	bx	lr

Disassembly of section .text._ZN6mynewt7sysinit17h4f3b13954addfd2dE:

00000000 <mynewt::sysinit>:
_ZN6mynewt7sysinit17h4f3b13954addfd2dE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:40
#[allow(non_camel_case_types)]    //  Allow type names to have non-camel case
#[allow(non_upper_case_globals)]  //  Allow globals to have lowercase letters
pub mod libs;       //  Mynewt Custom API. Export folder `libs` as Rust module `mynewt::libs`

///  Initialise the Mynewt system.  Start the Mynewt drivers and libraries.  Equivalent to `sysinit()` macro in C.
pub fn sysinit() {
   0:	b580      	push	{r7, lr}
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:41
    unsafe { rust_sysinit(); }
   2:	f7ff fffe 	bl	0 <rust_sysinit>
_ZN6mynewt3sys7console5flush17h1dcb683b7bea3a79E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\sys/console.rs:27
    unsafe { console_flush(); }
   6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
   a:	f7ff bffe 	b.w	0 <console_flush>

Disassembly of section .text._ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h58e7d36395d633adE:

00000000 <mynewt::result::<impl core::convert::From<mynewt::result::MynewtError> for i32>::from>:
_ZN6mynewt6result88_$LT$impl$u20$core..convert..From$LT$mynewt..result..MynewtError$GT$$u20$for$u20$i32$GT$4from17h58e7d36395d633adE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:83
    /// Cast `MynewtError` to `i32`
    impl From<MynewtError> for i32 {
        /// Cast `MynewtError` to `i32`
        fn from(err: MynewtError) -> Self {
            err as i32
        }
   0:	4770      	bx	lr

Disassembly of section .text._ZN6mynewt4Strn3new17h59058c5fcf019697E:

00000000 <mynewt::Strn::new>:
_ZN6mynewt4Strn3new17h59058c5fcf019697E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:111
    /// Create a new byte string. Fail if the last byte is not zero.
    /// ```
    /// Strn::new(b"network\0")
    /// strn!("network")
    /// ```
    pub fn new(bs: &'static [u8]) -> Strn {
   0:	b08e      	sub	sp, #56	; 0x38
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   2:	1e4a      	subs	r2, r1, #1
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   4:	f04f 0300 	mov.w	r3, #0
   8:	bf28      	it	cs
   a:	1883      	addcs	r3, r0, r2
   c:	428a      	cmp	r2, r1
   e:	f04f 0c00 	mov.w	ip, #0
  12:	bf28      	it	cs
  14:	4663      	movcs	r3, ip
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  16:	2b00      	cmp	r3, #0
_ZN6mynewt4Strn3new17h59058c5fcf019697E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:113
        //  Last byte must be 0.
        assert_eq!(bs.last(), Some(&0u8));
  18:	9301      	str	r3, [sp, #4]
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  1a:	d004      	beq.n	26 <mynewt::Strn::new+0x26>
_ZN6mynewt4Strn3new17h59058c5fcf019697E():
  1c:	781a      	ldrb	r2, [r3, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:113
  1e:	2a00      	cmp	r2, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:116
        let res = Strn { bytestr: bs };
        res
    }
  20:	bf04      	itt	eq
  22:	b00e      	addeq	sp, #56	; 0x38
  24:	4770      	bxeq	lr
  26:	a801      	add	r0, sp, #4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:113
        assert_eq!(bs.last(), Some(&0u8));
  28:	900c      	str	r0, [sp, #48]	; 0x30
  2a:	f240 0000 	movw	r0, #0
  2e:	a90d      	add	r1, sp, #52	; 0x34
  30:	f2c0 0000 	movt	r0, #0
  34:	900b      	str	r0, [sp, #44]	; 0x2c
  36:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  3a:	a80c      	add	r0, sp, #48	; 0x30
  3c:	9008      	str	r0, [sp, #32]
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f240 0100 	movw	r1, #0
  4a:	900d      	str	r0, [sp, #52]	; 0x34
  4c:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  4e:	9007      	str	r0, [sp, #28]
  50:	a808      	add	r0, sp, #32
  52:	9006      	str	r0, [sp, #24]
  54:	2003      	movs	r0, #3
  56:	e9cd cc04 	strd	ip, ip, [sp, #16]
_ZN6mynewt4Strn3new17h59058c5fcf019697E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:113
  5a:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  5e:	9003      	str	r0, [sp, #12]
  60:	f240 0000 	movw	r0, #0
  64:	f2c0 0000 	movt	r0, #0
  68:	9002      	str	r0, [sp, #8]
  6a:	a802      	add	r0, sp, #8
_ZN6mynewt4Strn3new17h59058c5fcf019697E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:113
  6c:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  70:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt4Strn7as_cstr17h9b5f295a11917f7eE:

00000000 <mynewt::Strn::as_cstr>:
_ZN6mynewt4Strn7as_cstr17h9b5f295a11917f7eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:120

    /// Return the byte string as a null-terminated `* const char` C-style string.
    /// Fail if the last byte is not zero.
    pub fn as_cstr(self) -> *const ::cty::c_char {
   0:	b08e      	sub	sp, #56	; 0x38
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   2:	1e4a      	subs	r2, r1, #1
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   4:	f04f 0300 	mov.w	r3, #0
   8:	bf28      	it	cs
   a:	1883      	addcs	r3, r0, r2
   c:	428a      	cmp	r2, r1
   e:	f04f 0c00 	mov.w	ip, #0
  12:	bf28      	it	cs
  14:	4663      	movcs	r3, ip
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  16:	2b00      	cmp	r3, #0
_ZN6mynewt4Strn7as_cstr17h9b5f295a11917f7eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:123
        //  Last byte must be 0.
        let bs: &'static [u8] = self.bytestr;
        assert_eq!(bs.last(), Some(&0u8));
  18:	9301      	str	r3, [sp, #4]
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  1a:	d004      	beq.n	26 <mynewt::Strn::as_cstr+0x26>
_ZN6mynewt4Strn7as_cstr17h9b5f295a11917f7eE():
  1c:	7819      	ldrb	r1, [r3, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:123
  1e:	2900      	cmp	r1, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:125
        bs.as_ptr() as *const ::cty::c_char
    }
  20:	bf04      	itt	eq
  22:	b00e      	addeq	sp, #56	; 0x38
  24:	4770      	bxeq	lr
  26:	a801      	add	r0, sp, #4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:123
        assert_eq!(bs.last(), Some(&0u8));
  28:	900c      	str	r0, [sp, #48]	; 0x30
  2a:	f240 0000 	movw	r0, #0
  2e:	a90d      	add	r1, sp, #52	; 0x34
  30:	f2c0 0000 	movt	r0, #0
  34:	900b      	str	r0, [sp, #44]	; 0x2c
  36:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  3a:	a80c      	add	r0, sp, #48	; 0x30
  3c:	9008      	str	r0, [sp, #32]
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f240 0100 	movw	r1, #0
  4a:	900d      	str	r0, [sp, #52]	; 0x34
  4c:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  4e:	9007      	str	r0, [sp, #28]
  50:	a808      	add	r0, sp, #32
  52:	9006      	str	r0, [sp, #24]
  54:	2003      	movs	r0, #3
  56:	e9cd cc04 	strd	ip, ip, [sp, #16]
_ZN6mynewt4Strn7as_cstr17h9b5f295a11917f7eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:123
  5a:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  5e:	9003      	str	r0, [sp, #12]
  60:	f240 0000 	movw	r0, #0
  64:	f2c0 0000 	movt	r0, #0
  68:	9002      	str	r0, [sp, #8]
  6a:	a802      	add	r0, sp, #8
_ZN6mynewt4Strn7as_cstr17h9b5f295a11917f7eE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:123
  6c:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  70:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt4Strn10as_bytestr17hbaaa6735911b91b6E:

00000000 <mynewt::Strn::as_bytestr>:
_ZN6mynewt4Strn10as_bytestr17hbaaa6735911b91b6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:129

    /// Return the byte string.
    /// Fail if the last byte is not zero.
    pub fn as_bytestr(self) -> &'static [u8] {
   0:	b08e      	sub	sp, #56	; 0x38
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   2:	1e4a      	subs	r2, r1, #1
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   4:	f04f 0300 	mov.w	r3, #0
   8:	bf28      	it	cs
   a:	1883      	addcs	r3, r0, r2
   c:	428a      	cmp	r2, r1
   e:	f04f 0c00 	mov.w	ip, #0
  12:	bf28      	it	cs
  14:	4663      	movcs	r3, ip
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  16:	2b00      	cmp	r3, #0
_ZN6mynewt4Strn10as_bytestr17hbaaa6735911b91b6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:132
        //  Last byte must be 0.
        let bs: &'static [u8] = self.bytestr;
        assert_eq!(bs.last(), Some(&0u8));
  18:	9301      	str	r3, [sp, #4]
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  1a:	d004      	beq.n	26 <mynewt::Strn::as_bytestr+0x26>
_ZN6mynewt4Strn10as_bytestr17hbaaa6735911b91b6E():
  1c:	781a      	ldrb	r2, [r3, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:132
  1e:	2a00      	cmp	r2, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:134
        &bs
    }
  20:	bf04      	itt	eq
  22:	b00e      	addeq	sp, #56	; 0x38
  24:	4770      	bxeq	lr
  26:	a801      	add	r0, sp, #4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:132
        assert_eq!(bs.last(), Some(&0u8));
  28:	900c      	str	r0, [sp, #48]	; 0x30
  2a:	f240 0000 	movw	r0, #0
  2e:	a90d      	add	r1, sp, #52	; 0x34
  30:	f2c0 0000 	movt	r0, #0
  34:	900b      	str	r0, [sp, #44]	; 0x2c
  36:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  3a:	a80c      	add	r0, sp, #48	; 0x30
  3c:	9008      	str	r0, [sp, #32]
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f240 0100 	movw	r1, #0
  4a:	900d      	str	r0, [sp, #52]	; 0x34
  4c:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  4e:	9007      	str	r0, [sp, #28]
  50:	a808      	add	r0, sp, #32
  52:	9006      	str	r0, [sp, #24]
  54:	2003      	movs	r0, #3
  56:	e9cd cc04 	strd	ip, ip, [sp, #16]
_ZN6mynewt4Strn10as_bytestr17hbaaa6735911b91b6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:132
  5a:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  5e:	9003      	str	r0, [sp, #12]
  60:	f240 0000 	movw	r0, #0
  64:	f2c0 0000 	movt	r0, #0
  68:	9002      	str	r0, [sp, #8]
  6a:	a802      	add	r0, sp, #8
_ZN6mynewt4Strn10as_bytestr17hbaaa6735911b91b6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:132
  6c:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  70:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt4Strn8validate17h84acf5da8cb8bbf9E:

00000000 <mynewt::Strn::validate>:
_ZN6mynewt4Strn8validate17h84acf5da8cb8bbf9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:137

    /// Fail if the last byte is not zero.
    pub fn validate(self) {
   0:	b08e      	sub	sp, #56	; 0x38
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   2:	1e4a      	subs	r2, r1, #1
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   4:	f04f 0300 	mov.w	r3, #0
   8:	bf28      	it	cs
   a:	1883      	addcs	r3, r0, r2
   c:	428a      	cmp	r2, r1
   e:	f04f 0c00 	mov.w	ip, #0
  12:	bf28      	it	cs
  14:	4663      	movcs	r3, ip
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  16:	2b00      	cmp	r3, #0
_ZN6mynewt4Strn8validate17h84acf5da8cb8bbf9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:140
        //  Last byte must be 0.
        let bs = &self.bytestr;
        assert_eq!(bs.last(), Some(&0u8));
  18:	9301      	str	r3, [sp, #4]
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  1a:	d004      	beq.n	26 <mynewt::Strn::validate+0x26>
_ZN6mynewt4Strn8validate17h84acf5da8cb8bbf9E():
  1c:	7818      	ldrb	r0, [r3, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:140
  1e:	2800      	cmp	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:141
    }
  20:	bf04      	itt	eq
  22:	b00e      	addeq	sp, #56	; 0x38
  24:	4770      	bxeq	lr
  26:	a801      	add	r0, sp, #4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:140
        assert_eq!(bs.last(), Some(&0u8));
  28:	900c      	str	r0, [sp, #48]	; 0x30
  2a:	f240 0000 	movw	r0, #0
  2e:	a90d      	add	r1, sp, #52	; 0x34
  30:	f2c0 0000 	movt	r0, #0
  34:	900b      	str	r0, [sp, #44]	; 0x2c
  36:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  3a:	a80c      	add	r0, sp, #48	; 0x30
  3c:	9008      	str	r0, [sp, #32]
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f240 0100 	movw	r1, #0
  4a:	900d      	str	r0, [sp, #52]	; 0x34
  4c:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  4e:	9007      	str	r0, [sp, #28]
  50:	a808      	add	r0, sp, #32
  52:	9006      	str	r0, [sp, #24]
  54:	2003      	movs	r0, #3
  56:	e9cd cc04 	strd	ip, ip, [sp, #16]
_ZN6mynewt4Strn8validate17h84acf5da8cb8bbf9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:140
  5a:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  5e:	9003      	str	r0, [sp, #12]
  60:	f240 0000 	movw	r0, #0
  64:	f2c0 0000 	movt	r0, #0
  68:	9002      	str	r0, [sp, #8]
  6a:	a802      	add	r0, sp, #8
_ZN6mynewt4Strn8validate17h84acf5da8cb8bbf9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:140
  6c:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  70:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E:

00000000 <mynewt::Strn::validate_bytestr>:
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:144

    /// Fail if the last byte is not zero.
    pub fn validate_bytestr(bs: &'static [u8]) {
   0:	b08e      	sub	sp, #56	; 0x38
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   2:	1e4a      	subs	r2, r1, #1
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   4:	f04f 0300 	mov.w	r3, #0
   8:	bf28      	it	cs
   a:	1883      	addcs	r3, r0, r2
   c:	428a      	cmp	r2, r1
   e:	f04f 0c00 	mov.w	ip, #0
  12:	bf28      	it	cs
  14:	4663      	movcs	r3, ip
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  16:	2b00      	cmp	r3, #0
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
        //  Last byte must be 0.
        assert_eq!(bs.last(), Some(&0u8));
  18:	9301      	str	r3, [sp, #4]
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  1a:	d004      	beq.n	26 <mynewt::Strn::validate_bytestr+0x26>
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
  1c:	7818      	ldrb	r0, [r3, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  1e:	2800      	cmp	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:147
    }
  20:	bf04      	itt	eq
  22:	b00e      	addeq	sp, #56	; 0x38
  24:	4770      	bxeq	lr
  26:	a801      	add	r0, sp, #4
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
        assert_eq!(bs.last(), Some(&0u8));
  28:	900c      	str	r0, [sp, #48]	; 0x30
  2a:	f240 0000 	movw	r0, #0
  2e:	a90d      	add	r1, sp, #52	; 0x34
  30:	f2c0 0000 	movt	r0, #0
  34:	900b      	str	r0, [sp, #44]	; 0x2c
  36:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  3a:	a80c      	add	r0, sp, #48	; 0x30
  3c:	9008      	str	r0, [sp, #32]
  3e:	f240 0000 	movw	r0, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f240 0100 	movw	r1, #0
  4a:	900d      	str	r0, [sp, #52]	; 0x34
  4c:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  4e:	9007      	str	r0, [sp, #28]
  50:	a808      	add	r0, sp, #32
  52:	9006      	str	r0, [sp, #24]
  54:	2003      	movs	r0, #3
  56:	e9cd cc04 	strd	ip, ip, [sp, #16]
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  5a:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  5e:	9003      	str	r0, [sp, #12]
  60:	f240 0000 	movw	r0, #0
  64:	f2c0 0000 	movt	r0, #0
  68:	9002      	str	r0, [sp, #8]
  6a:	a802      	add	r0, sp, #8
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  6c:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  70:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt6kernel2os10eventq_run17h1a13961f44fa3993E:

00000000 <mynewt::kernel::os::eventq_run>:
_ZN6mynewt6kernel2os10eventq_run17h1a13961f44fa3993E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:475
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	f7ff fffe 	bl	0 <os_eventq_run>
   6:	2001      	movs	r0, #1
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt6kernel2os15eventq_dflt_get17h5e66559059f6d8a1E:

00000000 <mynewt::kernel::os::eventq_dflt_get>:
_ZN6mynewt6kernel2os15eventq_dflt_get17h5e66559059f6d8a1E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:506
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f7ff fffe 	bl	0 <os_eventq_dflt_get>
   8:	2100      	movs	r1, #0
   a:	e9c4 1000 	strd	r1, r0, [r4]
   e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN6mynewt6kernel2os9task_init17h9daa8926e9799d12E:

00000000 <mynewt::kernel::os::task_init>:
_ZN6mynewt6kernel2os9task_init17h9daa8926e9799d12E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1936
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b092      	sub	sp, #72	; 0x48
   4:	468c      	mov	ip, r1
   6:	6809      	ldr	r1, [r1, #0]
   8:	f8dc 4004 	ldr.w	r4, [ip, #4]
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   c:	f04f 0e00 	mov.w	lr, #0
  10:	f04f 0c00 	mov.w	ip, #0
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
  14:	1e65      	subs	r5, r4, #1
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
  16:	bf28      	it	cs
  18:	eb01 0e05 	addcs.w	lr, r1, r5
  1c:	42a5      	cmp	r5, r4
  1e:	bf28      	it	cs
  20:	46e6      	movcs	lr, ip
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  22:	f1be 0f00 	cmp.w	lr, #0
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  26:	f8cd e014 	str.w	lr, [sp, #20]
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  2a:	d014      	beq.n	56 <mynewt::kernel::os::task_init+0x56>
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
  2c:	f89e 5000 	ldrb.w	r5, [lr]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  30:	b98d      	cbnz	r5, 56 <mynewt::kernel::os::task_init+0x56>
_ZN6mynewt6kernel2os9task_init17h9daa8926e9799d12E():
  32:	9d1a      	ldr	r5, [sp, #104]	; 0x68
  34:	e9dd 4e16 	ldrd	r4, lr, [sp, #88]	; 0x58
  38:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\kernel/os.rs:1936
  3c:	b2ad      	uxth	r5, r5
  3e:	b2e4      	uxtb	r4, r4
  40:	e9cd 4e00 	strd	r4, lr, [sp]
  44:	e9cd c502 	strd	ip, r5, [sp, #8]
  48:	f7ff fffe 	bl	0 <os_task_init>
  4c:	2800      	cmp	r0, #0
  4e:	bf08      	it	eq
  50:	2001      	moveq	r0, #1
  52:	b012      	add	sp, #72	; 0x48
  54:	bdb0      	pop	{r4, r5, r7, pc}
  56:	a805      	add	r0, sp, #20
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  58:	9010      	str	r0, [sp, #64]	; 0x40
  5a:	f240 0000 	movw	r0, #0
  5e:	a911      	add	r1, sp, #68	; 0x44
  60:	f2c0 0000 	movt	r0, #0
  64:	900f      	str	r0, [sp, #60]	; 0x3c
  66:	e9cd 010d 	strd	r0, r1, [sp, #52]	; 0x34
  6a:	a810      	add	r0, sp, #64	; 0x40
  6c:	900c      	str	r0, [sp, #48]	; 0x30
  6e:	f240 0000 	movw	r0, #0
  72:	f2c0 0000 	movt	r0, #0
  76:	f240 0100 	movw	r1, #0
  7a:	9011      	str	r0, [sp, #68]	; 0x44
  7c:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  7e:	900b      	str	r0, [sp, #44]	; 0x2c
  80:	a80c      	add	r0, sp, #48	; 0x30
  82:	900a      	str	r0, [sp, #40]	; 0x28
  84:	2003      	movs	r0, #3
  86:	e9cd cc08 	strd	ip, ip, [sp, #32]
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  8a:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  8e:	9007      	str	r0, [sp, #28]
  90:	f240 0000 	movw	r0, #0
  94:	f2c0 0000 	movt	r0, #0
  98:	9006      	str	r0, [sp, #24]
  9a:	a806      	add	r0, sp, #24
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  9c:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  a0:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h7dd69905a3b7f7a6E:

00000000 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname>:
_ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h7dd69905a3b7f7a6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:948
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b510      	push	{r4, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	4604      	mov	r4, r0
   6:	4696      	mov	lr, r2
   8:	e9d1 0100 	ldrd	r0, r1, [r1]
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   c:	1e4a      	subs	r2, r1, #1
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   e:	f04f 0300 	mov.w	r3, #0
  12:	f04f 0c00 	mov.w	ip, #0
  16:	bf28      	it	cs
  18:	1883      	addcs	r3, r0, r2
  1a:	428a      	cmp	r2, r1
  1c:	bf28      	it	cs
  1e:	4663      	movcs	r3, ip
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  20:	2b00      	cmp	r3, #0
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  22:	9301      	str	r3, [sp, #4]
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  24:	d009      	beq.n	3a <mynewt::hw::sensor::bindings::mgr_find_next_bydevname+0x3a>
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
  26:	7819      	ldrb	r1, [r3, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  28:	b939      	cbnz	r1, 3a <mynewt::hw::sensor::bindings::mgr_find_next_bydevname+0x3a>
_ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h7dd69905a3b7f7a6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:948
  2a:	4671      	mov	r1, lr
  2c:	f7ff fffe 	bl	0 <sensor_mgr_find_next_bydevname>
  30:	2100      	movs	r1, #0
  32:	e9c4 1000 	strd	r1, r0, [r4]
  36:	b00e      	add	sp, #56	; 0x38
  38:	bd10      	pop	{r4, pc}
  3a:	a801      	add	r0, sp, #4
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  3c:	900c      	str	r0, [sp, #48]	; 0x30
  3e:	f240 0000 	movw	r0, #0
  42:	a90d      	add	r1, sp, #52	; 0x34
  44:	f2c0 0000 	movt	r0, #0
  48:	900b      	str	r0, [sp, #44]	; 0x2c
  4a:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  4e:	a80c      	add	r0, sp, #48	; 0x30
  50:	9008      	str	r0, [sp, #32]
  52:	f240 0000 	movw	r0, #0
  56:	f2c0 0000 	movt	r0, #0
  5a:	f240 0100 	movw	r1, #0
  5e:	900d      	str	r0, [sp, #52]	; 0x34
  60:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  62:	9007      	str	r0, [sp, #28]
  64:	a808      	add	r0, sp, #32
  66:	9006      	str	r0, [sp, #24]
  68:	2003      	movs	r0, #3
  6a:	e9cd cc04 	strd	ip, ip, [sp, #16]
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  6e:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  72:	9003      	str	r0, [sp, #12]
  74:	f240 0000 	movw	r0, #0
  78:	f2c0 0000 	movt	r0, #0
  7c:	9002      	str	r0, [sp, #8]
  7e:	a802      	add	r0, sp, #8
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  80:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  84:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h120a6d01d88ba30aE:

00000000 <mynewt::hw::sensor::bindings::set_poll_rate_ms>:
_ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h120a6d01d88ba30aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:970
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	4602      	mov	r2, r0
   6:	6800      	ldr	r0, [r0, #0]
   8:	f8d2 e004 	ldr.w	lr, [r2, #4]
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   c:	2300      	movs	r3, #0
   e:	f04f 0c00 	mov.w	ip, #0
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
  12:	f1be 0201 	subs.w	r2, lr, #1
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
  16:	bf28      	it	cs
  18:	1883      	addcs	r3, r0, r2
  1a:	4572      	cmp	r2, lr
  1c:	bf28      	it	cs
  1e:	4663      	movcs	r3, ip
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  20:	2b00      	cmp	r3, #0
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  22:	9301      	str	r3, [sp, #4]
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  24:	d008      	beq.n	38 <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x38>
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
  26:	781a      	ldrb	r2, [r3, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  28:	b932      	cbnz	r2, 38 <mynewt::hw::sensor::bindings::set_poll_rate_ms+0x38>
_ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h120a6d01d88ba30aE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\hw\sensor/bindings.rs:970
  2a:	f7ff fffe 	bl	0 <sensor_set_poll_rate_ms>
  2e:	2800      	cmp	r0, #0
  30:	bf08      	it	eq
  32:	2001      	moveq	r0, #1
  34:	b00e      	add	sp, #56	; 0x38
  36:	bd80      	pop	{r7, pc}
  38:	a801      	add	r0, sp, #4
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  3a:	900c      	str	r0, [sp, #48]	; 0x30
  3c:	f240 0000 	movw	r0, #0
  40:	a90d      	add	r1, sp, #52	; 0x34
  42:	f2c0 0000 	movt	r0, #0
  46:	900b      	str	r0, [sp, #44]	; 0x2c
  48:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  4c:	a80c      	add	r0, sp, #48	; 0x30
  4e:	9008      	str	r0, [sp, #32]
  50:	f240 0000 	movw	r0, #0
  54:	f2c0 0000 	movt	r0, #0
  58:	f240 0100 	movw	r1, #0
  5c:	900d      	str	r0, [sp, #52]	; 0x34
  5e:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  60:	9007      	str	r0, [sp, #28]
  62:	a808      	add	r0, sp, #32
  64:	9006      	str	r0, [sp, #24]
  66:	2003      	movs	r0, #3
  68:	e9cd cc04 	strd	ip, ip, [sp, #16]
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  6c:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  70:	9003      	str	r0, [sp, #12]
  72:	f240 0000 	movw	r0, #0
  76:	f2c0 0000 	movt	r0, #0
  7a:	9002      	str	r0, [sp, #8]
  7c:	a802      	add	r0, sp, #8
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  7e:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  82:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc42fa8b39463f26E:

00000000 <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt>:
_ZN78_$LT$mynewt..encoding..coap_context..CoapError$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc42fa8b39463f26E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\encoding/coap_context.rs:118
#[derive(Debug, PartialEq)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	7800      	ldrb	r0, [r0, #0]
   6:	ac01      	add	r4, sp, #4
   8:	2801      	cmp	r0, #1
   a:	d106      	bne.n	1a <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x1a>
   c:	f240 0200 	movw	r2, #0
  10:	4620      	mov	r0, r4
  12:	f2c0 0200 	movt	r2, #0
  16:	230e      	movs	r3, #14
  18:	e005      	b.n	26 <<mynewt::encoding::coap_context::CoapError as core::fmt::Debug>::fmt+0x26>
  1a:	f240 0200 	movw	r2, #0
  1e:	4620      	mov	r0, r4
  20:	f2c0 0200 	movt	r2, #0
  24:	2302      	movs	r3, #2
  26:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  2a:	4620      	mov	r0, r4
  2c:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  30:	b004      	add	sp, #16
  32:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN6mynewt4libs14sensor_network22start_server_transport17h883c417d7c9da1f5E:

00000000 <mynewt::libs::sensor_network::start_server_transport>:
_ZN6mynewt4libs14sensor_network22start_server_transport17h883c417d7c9da1f5E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:40
impl Default for sensor_network_interface {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b580      	push	{r7, lr}
   2:	f7ff fffe 	bl	0 <start_server_transport>
   6:	2800      	cmp	r0, #0
   8:	bf08      	it	eq
   a:	2001      	moveq	r0, #1
   c:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN6mynewt4libs14sensor_network16init_server_post17h243fb9b2b2b78b44E:

00000000 <mynewt::libs::sensor_network::init_server_post>:
_ZN6mynewt4libs14sensor_network16init_server_post17h243fb9b2b2b78b44E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:60
    pub fn register_collector_transport() -> ::cty::c_int;
}
#[proc_macros::safe_wrap(attr)] extern "C" {
    pub fn sensor_network_register_transport(iface_type: u8) -> ::cty::c_int;
}
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b510      	push	{r4, lr}
   2:	b08e      	sub	sp, #56	; 0x38
   4:	4604      	mov	r4, r0
   6:	e9d1 0300 	ldrd	r0, r3, [r1]
_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h3ca7419921dbe441E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/num/mod.rs:3375
   a:	1e59      	subs	r1, r3, #1
_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h215947c5e8ed191dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/slice/mod.rs:234
   c:	f04f 0200 	mov.w	r2, #0
  10:	bf28      	it	cs
  12:	1842      	addcs	r2, r0, r1
  14:	4299      	cmp	r1, r3
  16:	f04f 0c00 	mov.w	ip, #0
  1a:	bf28      	it	cs
  1c:	4662      	movcs	r2, ip
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  1e:	2a00      	cmp	r2, #0
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  20:	9201      	str	r2, [sp, #4]
_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd1a8af8a8b27df23E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/option.rs:148
  22:	d008      	beq.n	36 <mynewt::libs::sensor_network::init_server_post+0x36>
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
  24:	7811      	ldrb	r1, [r2, #0]
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  26:	b931      	cbnz	r1, 36 <mynewt::libs::sensor_network::init_server_post+0x36>
_ZN6mynewt4libs14sensor_network16init_server_post17h243fb9b2b2b78b44E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:60
  28:	f7ff fffe 	bl	0 <init_server_post>
  2c:	7060      	strb	r0, [r4, #1]
  2e:	2000      	movs	r0, #0
  30:	7020      	strb	r0, [r4, #0]
  32:	b00e      	add	sp, #56	; 0x38
  34:	bd10      	pop	{r4, pc}
  36:	a801      	add	r0, sp, #4
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  38:	900c      	str	r0, [sp, #48]	; 0x30
  3a:	f240 0000 	movw	r0, #0
  3e:	a90d      	add	r1, sp, #52	; 0x34
  40:	f2c0 0000 	movt	r0, #0
  44:	900b      	str	r0, [sp, #44]	; 0x2c
  46:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  4a:	a80c      	add	r0, sp, #48	; 0x30
  4c:	9008      	str	r0, [sp, #32]
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f240 0100 	movw	r1, #0
  5a:	900d      	str	r0, [sp, #52]	; 0x34
  5c:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  5e:	9007      	str	r0, [sp, #28]
  60:	a808      	add	r0, sp, #32
  62:	9006      	str	r0, [sp, #24]
  64:	2003      	movs	r0, #3
  66:	e9cd cc04 	strd	ip, ip, [sp, #16]
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  6a:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  6e:	9003      	str	r0, [sp, #12]
  70:	f240 0000 	movw	r0, #0
  74:	f2c0 0000 	movt	r0, #0
  78:	9002      	str	r0, [sp, #8]
  7a:	a802      	add	r0, sp, #8
_ZN6mynewt4Strn16validate_bytestr17h7e32e40ab56bc856E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:146
  7c:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  80:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN6mynewt4libs14sensor_network12prepare_post17h76cd3111832683b6E:

00000000 <mynewt::libs::sensor_network::prepare_post>:
_ZN6mynewt4libs14sensor_network12prepare_post17h76cd3111832683b6E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:69
    pub fn init_collector_post() -> bool;
}
#[proc_macros::safe_wrap(attr)] extern "C" {
    pub fn sensor_network_init_post(iface_type: u8, uri: *const ::cty::c_char) -> bool;
}
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	4608      	mov	r0, r1
   6:	f7ff fffe 	bl	0 <sensor_network_prepare_post>
   a:	7060      	strb	r0, [r4, #1]
   c:	2000      	movs	r0, #0
   e:	7020      	strb	r0, [r4, #0]
  10:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN6mynewt4libs14sensor_network14do_server_post17h26ac10ece205a321E:

00000000 <mynewt::libs::sensor_network::do_server_post>:
_ZN6mynewt4libs14sensor_network14do_server_post17h26ac10ece205a321E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:72
    pub fn sensor_network_prepare_post(encoding: ::cty::c_int) -> bool;
}
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f7ff fffe 	bl	0 <do_server_post>
   8:	7060      	strb	r0, [r4, #1]
   a:	2000      	movs	r0, #0
   c:	7020      	strb	r0, [r4, #0]
   e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN6mynewt4libs14sensor_network9device_id17h785b2c58018ac3d9E:

00000000 <mynewt::libs::sensor_network::device_id>:
_ZN6mynewt4libs14sensor_network9device_id17h785b2c58018ac3d9E():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src\libs/sensor_network.rs:96
    pub fn should_send_to_collector(
        val: *mut sensor_value,
        device_name: *const ::cty::c_char,
    ) -> bool;
}
#[proc_macros::safe_wrap(attr)] extern "C" {
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f7ff fffe 	bl	0 <get_device_id>
   8:	2100      	movs	r1, #0
   a:	e9c4 1000 	strd	r1, r0, [r4]
   e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h5491a719a634f5cfE:

00000000 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt>:
_ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h5491a719a634f5cfE():
c:\stm32bluepill-mynewt-sensor/rust\mynewt\src/lib.rs:55
    #[derive(Debug, PartialEq)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	6802      	ldr	r2, [r0, #0]
   6:	f102 000f 	add.w	r0, r2, #15
   a:	280e      	cmp	r0, #14
   c:	d80f      	bhi.n	2e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x2e>
   e:	e8df f000 	tbb	[pc, r0]
  12:	1908      	.short	0x1908
  14:	352f2721 	.word	0x352f2721
  18:	4f49413b 	.word	0x4f49413b
  1c:	69615b55 	.word	0x69615b55
  20:	006f      	.short	0x006f
  22:	f240 0200 	movw	r2, #0
  26:	ac01      	add	r4, sp, #4
  28:	f2c0 0200 	movt	r2, #0
  2c:	e037      	b.n	9e <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x9e>
  2e:	2001      	movs	r0, #1
  30:	ac01      	add	r4, sp, #4
  32:	f6cf 70ff 	movt	r0, #65535	; 0xffff
  36:	4282      	cmp	r2, r0
  38:	d162      	bne.n	100 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x100>
  3a:	f240 0200 	movw	r2, #0
  3e:	f2c0 0200 	movt	r2, #0
  42:	e04c      	b.n	de <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xde>
  44:	ac01      	add	r4, sp, #4
  46:	f240 0200 	movw	r2, #0
  4a:	f2c0 0200 	movt	r2, #0
  4e:	230d      	movs	r3, #13
  50:	4620      	mov	r0, r4
  52:	e05b      	b.n	10c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x10c>
  54:	f240 0200 	movw	r2, #0
  58:	ac01      	add	r4, sp, #4
  5a:	f2c0 0200 	movt	r2, #0
  5e:	e03e      	b.n	de <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xde>
  60:	ac01      	add	r4, sp, #4
  62:	f240 0200 	movw	r2, #0
  66:	f2c0 0200 	movt	r2, #0
  6a:	230b      	movs	r3, #11
  6c:	4620      	mov	r0, r4
  6e:	e04d      	b.n	10c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x10c>
  70:	f240 0200 	movw	r2, #0
  74:	ac01      	add	r4, sp, #4
  76:	f2c0 0200 	movt	r2, #0
  7a:	e030      	b.n	64 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x64>
  7c:	f240 0200 	movw	r2, #0
  80:	ac01      	add	r4, sp, #4
  82:	f2c0 0200 	movt	r2, #0
  86:	e038      	b.n	74 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x74>
  88:	f240 0200 	movw	r2, #0
  8c:	ac01      	add	r4, sp, #4
  8e:	f2c0 0200 	movt	r2, #0
  92:	e032      	b.n	68 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x68>
  94:	f240 0200 	movw	r2, #0
  98:	ac01      	add	r4, sp, #4
  9a:	f2c0 0200 	movt	r2, #0
  9e:	4620      	mov	r0, r4
  a0:	2309      	movs	r3, #9
  a2:	e033      	b.n	10c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x10c>
  a4:	f240 0200 	movw	r2, #0
  a8:	ac01      	add	r4, sp, #4
  aa:	f2c0 0200 	movt	r2, #0
  ae:	e024      	b.n	4c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x4c>
  b0:	f240 0200 	movw	r2, #0
  b4:	ac01      	add	r4, sp, #4
  b6:	f2c0 0200 	movt	r2, #0
  ba:	e01e      	b.n	40 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x40>
  bc:	f240 0200 	movw	r2, #0
  c0:	ac01      	add	r4, sp, #4
  c2:	f2c0 0200 	movt	r2, #0
  c6:	e01f      	b.n	42 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x42>
  c8:	f240 0200 	movw	r2, #0
  cc:	ac01      	add	r4, sp, #4
  ce:	f2c0 0200 	movt	r2, #0
  d2:	e012      	b.n	28 <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x28>
  d4:	f240 0200 	movw	r2, #0
  d8:	ac01      	add	r4, sp, #4
  da:	f2c0 0200 	movt	r2, #0
  de:	4620      	mov	r0, r4
  e0:	230c      	movs	r3, #12
  e2:	e013      	b.n	10c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x10c>
  e4:	f240 0200 	movw	r2, #0
  e8:	ac01      	add	r4, sp, #4
  ea:	f2c0 0200 	movt	r2, #0
  ee:	e004      	b.n	c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0xc>
  f0:	f240 0200 	movw	r2, #0
  f4:	ac01      	add	r4, sp, #4
  f6:	f2c0 0200 	movt	r2, #0
  fa:	4620      	mov	r0, r4
  fc:	230a      	movs	r3, #10
  fe:	e005      	b.n	10c <<mynewt::result::MynewtError as core::fmt::Debug>::fmt+0x10c>
 100:	f240 0200 	movw	r2, #0
 104:	f2c0 0200 	movt	r2, #0
 108:	4620      	mov	r0, r4
 10a:	2307      	movs	r3, #7
 10c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
 110:	4620      	mov	r0, r4
 112:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
 116:	b004      	add	sp, #16
 118:	bd10      	pop	{r4, pc}

stable_deref_trait-653cdf565d7008c1.stable_deref_trait.acxl2msx-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stable_deref_trait.acxl2msx-cgu.0



typenum-79027948bc4b412c.typenum.cl7r4ytt-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 typenum.cl7r4ytt-cgu.0
000005c6 l       .debug_str	00000000 
000008fc l       .debug_str	00000000 
0000096f l       .debug_str	00000000 
000008e5 l       .debug_str	00000000 
00000969 l       .debug_str	00000000 
000008df l       .debug_str	00000000 
0000095a l       .debug_str	00000000 
000008cd l       .debug_str	00000000 
000008ca l       .debug_str	00000000 
00000955 l       .debug_str	00000000 
000008b8 l       .debug_str	00000000 
0000089e l       .debug_str	00000000 
0000094a l       .debug_str	00000000 
00000894 l       .debug_str	00000000 
0000087b l       .debug_str	00000000 
00000945 l       .debug_str	00000000 
00000874 l       .debug_str	00000000 
0000086b l       .debug_str	00000000 
0000093a l       .debug_str	00000000 
00000866 l       .debug_str	00000000 
0000084a l       .debug_str	00000000 
00000933 l       .debug_str	00000000 
00000826 l       .debug_str	00000000 
0000080f l       .debug_str	00000000 
0000092a l       .debug_str	00000000 
0000080b l       .debug_str	00000000 
000007ee l       .debug_str	00000000 
00000916 l       .debug_str	00000000 
000007e3 l       .debug_str	00000000 
00000785 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000009a l       .debug_str	00000000 
000000e8 l       .debug_str	00000000 
000000ed l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000f7 l       .debug_str	00000000 
000000fa l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000155 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
000001c2 l       .debug_str	00000000 
000001c6 l       .debug_str	00000000 
000001cc l       .debug_str	00000000 
0000026f l       .debug_str	00000000 
00000273 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
000002f1 l       .debug_str	00000000 
000002f5 l       .debug_str	00000000 
00000348 l       .debug_str	00000000 
0000039b l       .debug_str	00000000 
000003f2 l       .debug_str	00000000 
00000445 l       .debug_str	00000000 
0000049d l       .debug_str	00000000 
000004f0 l       .debug_str	00000000 
00000540 l       .debug_str	00000000 
00000591 l       .debug_str	00000000 
00000596 l       .debug_str	00000000 
000005ac l       .debug_str	00000000 
000005b4 l       .debug_str	00000000 
000005bb l       .debug_str	00000000 
000005bf l       .debug_str	00000000 
000005c3 l       .debug_str	00000000 
0000077b l       .debug_str	00000000 
000005ef l       .debug_str	00000000 
000005f1 l       .debug_str	00000000 
00000627 l       .debug_str	00000000 
00000629 l       .debug_str	00000000 
0000062b l       .debug_str	00000000 
00000658 l       .debug_str	00000000 
0000065b l       .debug_str	00000000 
0000066d l       .debug_str	00000000 
0000066f l       .debug_str	00000000 
00000675 l       .debug_str	00000000 
00000679 l       .debug_str	00000000 
0000067e l       .debug_str	00000000 
00000683 l       .debug_str	00000000 
00000689 l       .debug_str	00000000 
0000068f l       .debug_str	00000000 
00000696 l       .debug_str	00000000 
0000069b l       .debug_str	00000000 
000006a1 l       .debug_str	00000000 
000006a6 l       .debug_str	00000000 
000006b4 l       .debug_str	00000000 
000006be l       .debug_str	00000000 
000006c2 l       .debug_str	00000000 
000006ca l       .debug_str	00000000 
000006d2 l       .debug_str	00000000 
000006d9 l       .debug_str	00000000 
000006ed l       .debug_str	00000000 
000006f9 l       .debug_str	00000000 
00000704 l       .debug_str	00000000 
0000070b l       .debug_str	00000000 
00000711 l       .debug_str	00000000 
00000715 l       .debug_str	00000000 
0000071b l       .debug_str	00000000 
00000721 l       .debug_str	00000000 
00000724 l       .debug_str	00000000 
00000733 l       .debug_str	00000000 
00000737 l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
0000074c l       .debug_str	00000000 
00000765 l       .debug_str	00000000 
0000076a l       .debug_str	00000000 
00000904 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.0	00000002 .Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.0
00000000 l     O .rodata..Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.1	00000002 .Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.1
00000000 l     O .rodata..Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.2	00000005 .Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.2
00000000 l     O .rodata..Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.3	00000002 .Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.3
00000000 l     O .rodata..Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.4	00000005 .Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.4
00000000 l     O .rodata..Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.5	00000007 .Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.5
00000000 l     O .rodata.cst4	00000004 .Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.6
00000000 l     O .rodata..Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.7	00000005 .Lanon.ff924f08a3a263b8dc9dd07a0c9dad6b.7
00000000 l    d  .text._ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h4c65e57d8a7148f8E	00000000 .text._ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h4c65e57d8a7148f8E
00000000 l    d  .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000000 .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E
00000000 l    d  .text._ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417hb09f289bacf492e9E	00000000 .text._ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417hb09f289bacf492e9E
00000000 l    d  .text._ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17h6760ac23cc609ac5E	00000000 .text._ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17h6760ac23cc609ac5E
00000000 l    d  .text._ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17hf625494a7d7c5efaE	00000000 .text._ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17hf625494a7d7c5efaE
00000000 l    d  .text._ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h8a753277168fd65aE	00000000 .text._ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h8a753277168fd65aE
00000000 l    d  .text._ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ad29cd0a724e511E	00000000 .text._ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ad29cd0a724e511E
00000000 l    d  .text._ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h08d2c2cb4ae96e06E	00000000 .text._ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h08d2c2cb4ae96e06E
00000000 l    d  .text._ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h67f809fe21431978E	00000000 .text._ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h67f809fe21431978E
00000000 l    d  .text._ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17hadac6db3d06c11cbE	00000000 .text._ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17hadac6db3d06c11cbE
00000000 l    d  .text._ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h90172f1d1914750aE	00000000 .text._ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h90172f1d1914750aE
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UInt<typenum::uint::UTerm,typenum::bit::B1> as core::ops::arith::Sub<typenum::bit::B1>>::sub
00000000         *UND*	00000000 core::fmt::builders::DebugTuple::finish
00000000         *UND*	00000000 core::fmt::Formatter::debug_tuple
00000000 g     F .text._ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17hadac6db3d06c11cbE	00000020 <typenum::Less as core::fmt::Debug>::fmt
00000000 g     F .text._ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h90172f1d1914750aE	00000020 <typenum::Equal as core::fmt::Debug>::fmt
00000000 g     F .text._ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h67f809fe21431978E	00000020 <typenum::Greater as core::fmt::Debug>::fmt
00000000 g     F .text._ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17h6760ac23cc609ac5E	00000020 <typenum::bit::B0 as core::fmt::Debug>::fmt
00000000 g     F .text._ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17hf625494a7d7c5efaE	00000020 <typenum::bit::B1 as core::fmt::Debug>::fmt
00000000 g     F .text._ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ad29cd0a724e511E	00000020 <typenum::int::Z0 as core::fmt::Debug>::fmt
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B0 as core::ops::bit::Not>::not
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B1 as core::ops::bit::Not>::not
00000000 g     F .text._ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h8a753277168fd65aE	00000020 <typenum::uint::UTerm as core::fmt::Debug>::fmt
00000000 g     F .text._ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h08d2c2cb4ae96e06E	00000020 <typenum::array::ATerm as core::fmt::Debug>::fmt
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B0 as core::ops::bit::BitOr>::bitor
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::int::Z0 as core::ops::arith::Neg>::neg
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::int::Z0 as core::ops::arith::Sub>::sub
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B0 as core::ops::bit::BitXor>::bitxor
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B1 as core::ops::bit::BitAnd>::bitand
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B1 as core::ops::bit::BitXor>::bitxor
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::arith::Sub>::sub
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::array::ATerm as core::ops::arith::Add>::add
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::array::ATerm as core::ops::arith::Neg>::neg
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::array::ATerm as core::ops::arith::Sub>::sub
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B0 as typenum::type_operators::Max>::max
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B0 as typenum::type_operators::Min>::min
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B1 as typenum::type_operators::Max>::max
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B1 as typenum::type_operators::Min>::min
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::int::Z0 as typenum::type_operators::Max>::max
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::int::Z0 as typenum::type_operators::Min>::min
00000000 g     F .text._ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h4c65e57d8a7148f8E	00000002 <typenum::uint::UTerm as typenum::type_operators::Len>::len
00000000 g     F .text._ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h4c65e57d8a7148f8E	00000002 <typenum::array::ATerm as typenum::type_operators::Len>::len
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 typenum::array::<impl core::ops::arith::Mul<typenum::array::ATerm> for typenum::int::Z0>::mul
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B0 as core::ops::bit::BitOr<typenum::bit::B1>>::bitor
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B0 as core::ops::bit::BitXor<typenum::bit::B1>>::bitxor
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B1 as core::ops::bit::BitAnd<typenum::bit::B0>>::bitand
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B1 as core::ops::bit::BitXor<typenum::bit::B0>>::bitxor
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::bit::Shl<typenum::bit::B0>>::shl
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::bit::Shl<typenum::bit::B1>>::shl
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::bit::Shr<typenum::bit::B0>>::shr
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::bit::Shr<typenum::bit::B1>>::shr
00000000 g     F .text._ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417hb09f289bacf492e9E	00000006 <typenum::private::InvertedUTerm as typenum::private::InvertedUnsigned>::to_u64
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::arith::Add<typenum::bit::B0>>::add
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::arith::Add<typenum::bit::B1>>::add
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::arith::Mul<typenum::bit::B0>>::mul
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::arith::Mul<typenum::bit::B1>>::mul
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::uint::UTerm as core::ops::arith::Sub<typenum::bit::B0>>::sub
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B0 as typenum::type_operators::Max<typenum::bit::B1>>::max
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B0 as typenum::type_operators::Min<typenum::bit::B1>>::min
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B1 as typenum::type_operators::Max<typenum::bit::B0>>::max
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::bit::B1 as typenum::type_operators::Min<typenum::bit::B0>>::min
00000000 g     F .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E	00000002 <typenum::int::Z0 as typenum::type_operators::Pow<typenum::int::Z0>>::powi



Disassembly of section .text._ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h4c65e57d8a7148f8E:

00000000 <<typenum::uint::UTerm as typenum::type_operators::Len>::len>:
_ZN69_$LT$typenum..uint..UTerm$u20$as$u20$typenum..type_operators..Len$GT$3len17h4c65e57d8a7148f8E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:244
/// Length of `UTerm` by itself is 0
impl Len for UTerm {
    type Output = U0;
    fn len(&self) -> Self::Output {
        UTerm
    }
   0:	4770      	bx	lr

Disassembly of section .text._ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E:

00000000 <<typenum::uint::UInt<typenum::uint::UTerm,typenum::bit::B1> as core::ops::arith::Sub<typenum::bit::B1>>::sub>:
_ZN132_$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$u20$as$u20$core..ops..arith..Sub$LT$typenum..bit..B1$GT$$GT$3sub17ha6db0814459c8435E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:403
/// `UInt<UTerm, B1> - B1 = UTerm`
impl Sub<B1> for UInt<UTerm, B1> {
    type Output = UTerm;
    fn sub(self, _: B1) -> Self::Output {
        UTerm
    }
   0:	4770      	bx	lr

Disassembly of section .text._ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417hb09f289bacf492e9E:

00000000 <<typenum::private::InvertedUTerm as typenum::private::InvertedUnsigned>::to_u64>:
_ZN86_$LT$typenum..private..InvertedUTerm$u20$as$u20$typenum..private..InvertedUnsigned$GT$6to_u6417hb09f289bacf492e9E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/private.rs:116
}

impl InvertedUnsigned for InvertedUTerm {
    fn to_u64() -> u64 {
        0
    }
   0:	2000      	movs	r0, #0
   2:	2100      	movs	r1, #0
   4:	4770      	bx	lr

Disassembly of section .text._ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17h6760ac23cc609ac5E:

00000000 <<typenum::bit::B0 as core::fmt::Debug>::fmt>:
_ZN53_$LT$typenum..bit..B0$u20$as$u20$core..fmt..Debug$GT$3fmt17h6760ac23cc609ac5E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:19
use {Cmp, Equal, Greater, Less, NonZero, PowerOfTwo};

pub use marker_traits::Bit;

/// The type-level bit 0.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	ac01      	add	r4, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	f2c0 0200 	movt	r2, #0
   e:	2302      	movs	r3, #2
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  1c:	b004      	add	sp, #16
  1e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17hf625494a7d7c5efaE:

00000000 <<typenum::bit::B1 as core::fmt::Debug>::fmt>:
_ZN53_$LT$typenum..bit..B1$u20$as$u20$core..fmt..Debug$GT$3fmt17hf625494a7d7c5efaE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/bit.rs:31
        B0
    }
}

/// The type-level bit 1.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	ac01      	add	r4, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	f2c0 0200 	movt	r2, #0
   e:	2302      	movs	r3, #2
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  1c:	b004      	add	sp, #16
  1e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h8a753277168fd65aE:

00000000 <<typenum::uint::UTerm as core::fmt::Debug>::fmt>:
_ZN57_$LT$typenum..uint..UTerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h8a753277168fd65aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/uint.rs:49
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	ac01      	add	r4, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	f2c0 0200 	movt	r2, #0
   e:	2305      	movs	r3, #5
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  1c:	b004      	add	sp, #16
  1e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ad29cd0a724e511E:

00000000 <<typenum::int::Z0 as core::fmt::Debug>::fmt>:
_ZN53_$LT$typenum..int..Z0$u20$as$u20$core..fmt..Debug$GT$3fmt17h9ad29cd0a724e511E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/int.rs:74
        }
    }
}

/// The type-level signed integer 0.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	ac01      	add	r4, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	f2c0 0200 	movt	r2, #0
   e:	2302      	movs	r3, #2
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  1c:	b004      	add	sp, #16
  1e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h08d2c2cb4ae96e06E:

00000000 <<typenum::array::ATerm as core::fmt::Debug>::fmt>:
_ZN58_$LT$typenum..array..ATerm$u20$as$u20$core..fmt..Debug$GT$3fmt17h08d2c2cb4ae96e06E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/array.rs:11
use core::ops::{Add, Div, Mul, Sub};

use super::*;

/// The terminating type for type arrays.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	ac01      	add	r4, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	f2c0 0200 	movt	r2, #0
   e:	2305      	movs	r3, #5
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  1c:	b004      	add	sp, #16
  1e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h67f809fe21431978E:

00000000 <<typenum::Greater as core::fmt::Debug>::fmt>:
_ZN53_$LT$typenum..Greater$u20$as$u20$core..fmt..Debug$GT$3fmt17h67f809fe21431978E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/lib.rs:84
pub use int::{NInt, PInt};
pub use array::{ATerm, TArr};

/// A potential output from `Cmp`, this is the type equivalent to the enum variant
/// `core::cmp::Ordering::Greater`.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	ac01      	add	r4, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	f2c0 0200 	movt	r2, #0
   e:	2307      	movs	r3, #7
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  1c:	b004      	add	sp, #16
  1e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17hadac6db3d06c11cbE:

00000000 <<typenum::Less as core::fmt::Debug>::fmt>:
_ZN50_$LT$typenum..Less$u20$as$u20$core..fmt..Debug$GT$3fmt17hadac6db3d06c11cbE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/lib.rs:89
pub struct Greater;

/// A potential output from `Cmp`, this is the type equivalent to the enum variant
/// `core::cmp::Ordering::Less`.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	ac01      	add	r4, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	f2c0 0200 	movt	r2, #0
   e:	2304      	movs	r3, #4
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  1c:	b004      	add	sp, #16
  1e:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h90172f1d1914750aE:

00000000 <<typenum::Equal as core::fmt::Debug>::fmt>:
_ZN51_$LT$typenum..Equal$u20$as$u20$core..fmt..Debug$GT$3fmt17h90172f1d1914750aE():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\typenum-1.10.0\src/lib.rs:94
pub struct Less;

/// A potential output from `Cmp`, this is the type equivalent to the enum variant
/// `core::cmp::Ordering::Equal`.
#[derive(Eq, PartialEq, Ord, PartialOrd, Clone, Copy, Hash, Debug, Default)]
   0:	b510      	push	{r4, lr}
   2:	b084      	sub	sp, #16
   4:	ac01      	add	r4, sp, #4
   6:	f240 0200 	movw	r2, #0
   a:	f2c0 0200 	movt	r2, #0
   e:	2305      	movs	r3, #5
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_tuple>
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <core::fmt::builders::DebugTuple::finish>
  1c:	b004      	add	sp, #16
  1e:	bd10      	pop	{r4, pc}

vcell-55c9e3cff9acfa7f.vcell.8nu8syzl-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 vcell.8nu8syzl-cgu.0



volatile_register-abc6b56240fedd28.volatile_register.83sbatcd-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 volatile_register.83sbatcd-cgu.0


