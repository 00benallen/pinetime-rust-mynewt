{"packages":[{"name":"cty","version":"0.1.5","id":"cty 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Type aliases to C types like c_int for use with bindgen","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"cty","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cty-0.1.5/src/lib.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cty-0.1.5/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>"],"categories":["embedded","external-ffi-bindings","no-std"],"keywords":["c","types","bindgen","ffi"],"readme":null,"repository":"https://github.com/japaric/cty","edition":"2015","links":null},{"name":"libm","version":"0.2.1","id":"libm 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"libm in pure Rust","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"no-panic","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.8","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"rand","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.5","kind":"build","rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"libm","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","edition":"2018"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/build.rs","edition":"2018"}],"features":{"default":[],"musl-reference-tests":["rand"],"unstable":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>"],"categories":["no-std"],"keywords":["libm","math"],"readme":null,"repository":"https://github.com/rust-lang/libm","edition":"2018","links":null},{"name":"cty","version":"0.2.0","id":"cty 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Type aliases to C types like c_int for use with bindgen","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"cty","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cty-0.2.0/src/lib.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cty-0.2.0/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>"],"categories":["embedded","external-ffi-bindings","no-std"],"keywords":["c","types","bindgen","ffi"],"readme":null,"repository":"https://github.com/japaric/cty","edition":"2015","links":null},{"name":"num-traits","version":"0.2.8","id":"num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"Numeric traits for generic mathematics","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"autocfg","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.3","kind":"build","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"num-traits","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.8/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"cast","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.8/tests/cast.rs","edition":"2015"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.8/build.rs","edition":"2015"}],"features":{"default":["std"],"i128":[],"std":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.8/Cargo.toml","metadata":{"docs":{"rs":{"features":["std"]}}},"authors":["The Rust Project Developers"],"categories":["algorithms","science","no-std"],"keywords":["mathematics","numerics"],"readme":"README.md","repository":"https://github.com/rust-num/num-traits","edition":"2015","links":null},{"name":"piet","version":"0.0.7","id":"piet 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet)","license":"MIT/Apache-2.0","license_file":null,"description":"An abstraction for 2D graphics. Experimental embedded version.","source":null,"dependencies":[{"name":"arrayvec","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.1","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"kurbo","source":null,"req":"^0.5.5","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"libm","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"piet","src_path":"/Users/Luppy/mynewt/piet-embedded/piet/src/lib.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/mynewt/piet-embedded/piet/Cargo.toml","metadata":null,"authors":["Raph Levien <raph.levien@gmail.com>"],"categories":["rendering::graphics-api"],"keywords":["graphics","2d","no-std"],"readme":null,"repository":"https://github.com/lupyuen/piet-embedded","edition":"2018","links":null},{"name":"vcell","version":"0.1.0","id":"vcell 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"`Cell` with volatile read / write operations","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"vcell","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/vcell-0.1.0/src/lib.rs","edition":"2015"}],"features":{"const-fn":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/vcell-0.1.0/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <japaricious@gmail.com>"],"categories":[],"keywords":["no-std","volatile","cell"],"readme":null,"repository":"https://github.com/japaric/vcell","edition":"2015","links":null},{"name":"kurbo","version":"0.5.5","id":"kurbo 0.5.5 (path+file:///Users/Luppy/mynewt/kurbo-embedded)","license":"MIT/Apache-2.0","license_file":null,"description":"A 2D curves library","source":null,"dependencies":[{"name":"arrayvec","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.1","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"introsort","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.0","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"libm","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"mint","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.1","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"rand","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"kurbo","src_path":"/Users/Luppy/mynewt/kurbo-embedded/src/lib.rs","edition":"2018"},{"kind":["example"],"crate_types":["bin"],"name":"circle","src_path":"/Users/Luppy/mynewt/kurbo-embedded/examples/circle.rs","edition":"2018"},{"kind":["example"],"crate_types":["bin"],"name":"arclen_accuracy","src_path":"/Users/Luppy/mynewt/kurbo-embedded/examples/arclen_accuracy.rs","edition":"2018"},{"kind":["example"],"crate_types":["bin"],"name":"cubic_arclen","src_path":"/Users/Luppy/mynewt/kurbo-embedded/examples/cubic_arclen.rs","edition":"2018"},{"kind":["bench"],"crate_types":["bin"],"name":"quad_arclen","src_path":"/Users/Luppy/mynewt/kurbo-embedded/benches/quad_arclen.rs","edition":"2018"},{"kind":["bench"],"crate_types":["bin"],"name":"cubic_arclen","src_path":"/Users/Luppy/mynewt/kurbo-embedded/benches/cubic_arclen.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/mynewt/kurbo-embedded/Cargo.toml","metadata":{"docs":{"rs":{"features":["mint"]}}},"authors":["Raph Levien <raph.levien@gmail.com>"],"categories":["graphics"],"keywords":["graphics","curve","curves","bezier","geometry","no_std"],"readme":"README.md","repository":"https://github.com/linebender/kurbo","edition":"2018","links":null},{"name":"rustc_version","version":"0.2.3","id":"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"A library for querying the version of a installed rustc compiler","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"semver","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.9","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"rustc_version","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc_version-0.2.3/src/lib.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc_version-0.2.3/Cargo.toml","metadata":null,"authors":["Marvin Löbel <loebel.marvin@gmail.com>"],"categories":[],"keywords":["version","rustc"],"readme":"README.md","repository":"https://github.com/Kimundi/rustc-version-rs","edition":"2015","links":null},{"name":"cstr_core","version":"0.1.2","id":"cstr_core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","license":"Apache-2.0/MIT","license_file":null,"description":"Implementation of CStr and CString for no_std environments.","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"cty","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"memchr","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^2.0","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"cstr_core","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cstr_core-0.1.2/src/lib.rs","edition":"2015"}],"features":{"alloc":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cstr_core-0.1.2/Cargo.toml","metadata":null,"authors":["Amanieu d'Antras <amanieu@gmail.com>"],"categories":[],"keywords":["cstr","cstring","no_std","string","c"],"readme":"README.md","repository":"https://github.com/Amanieu/cstr_core","edition":"2015","links":null},{"name":"bare-metal","version":"0.2.4","id":"bare-metal 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Abstractions common to bare metal systems","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"rustc_version","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.3","kind":"build","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"bare-metal","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/bare-metal-0.2.4/src/lib.rs","edition":"2015"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/bare-metal-0.2.4/build.rs","edition":"2015"}],"features":{"const-fn":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/bare-metal-0.2.4/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>"],"categories":["embedded","hardware-support","no-std"],"keywords":["bare-metal","register","peripheral","interrupt"],"readme":null,"repository":"https://github.com/japaric/bare-metal","edition":"2015","links":null},{"name":"aligned","version":"0.3.1","id":"aligned 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"A newtype with alignment of at least `A` bytes","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"as-slice","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"aligned","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/aligned-0.3.1/src/lib.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/aligned-0.3.1/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>"],"categories":["embedded","memory-management","no-std"],"keywords":["alignment","aligned","array","static"],"readme":null,"repository":"https://github.com/japaric/aligned","edition":"2018","links":null},{"name":"macros","version":"0.1.0","id":"macros 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros)","license":null,"license_file":null,"description":null,"source":null,"dependencies":[{"name":"cstr_core","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"cty","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"lazy_static","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.4.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"memchr","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^2","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"proc-macro2","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0.3","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"quote","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"rustc-serialize","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.3","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"syn","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0.5","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":["full","extra-traits"],"target":null,"registry":null}],"targets":[{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"macros","src_path":"/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros/src/lib.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros/Cargo.toml","metadata":null,"authors":["lupyuen <luppy@appkaki.com>"],"categories":[],"keywords":[],"readme":null,"repository":null,"edition":"2018","links":null},{"name":"typenum","version":"1.10.0","id":"typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"Typenum is a Rust library for type-level numbers evaluated at compile time. It currently supports bits, unsigned integers, and signed integers. It also provides a type-level array of type-level numbers, but its implementation is incomplete.","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"typenum","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.10.0/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.10.0/tests/test.rs","edition":"2015"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-main","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.10.0/build/main.rs","edition":"2015"}],"features":{"i128":[],"no_std":[],"strict":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/typenum-1.10.0/Cargo.toml","metadata":null,"authors":["Paho Lurie-Gregg <paho@paholg.com>","Andre Bogus <bogusandre@gmail.com>"],"categories":["no-std"],"keywords":[],"readme":"README.md","repository":"https://github.com/paholg/typenum","edition":"2015","links":null},{"name":"unicode-xid","version":"0.2.0","id":"unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Determine whether characters have the XID_Start\nor XID_Continue properties according to\nUnicode Standard Annex #31.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"unicode-xid","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-xid-0.2.0/src/lib.rs","edition":"2015"}],"features":{"bench":[],"default":[],"no_std":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-xid-0.2.0/Cargo.toml","metadata":null,"authors":["erick.tryzelaar <erick.tryzelaar@gmail.com>","kwantam <kwantam@gmail.com>"],"categories":[],"keywords":["text","unicode","xid"],"readme":"README.md","repository":"https://github.com/unicode-rs/unicode-xid","edition":"2015","links":null},{"name":"void","version":"1.0.2","id":"void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT","license_file":null,"description":"The uninhabited void type for use in statically impossible cases.","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"void","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/src/lib.rs","edition":"2015"}],"features":{"default":["std"],"std":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/void-1.0.2/Cargo.toml","metadata":null,"authors":["Jonathan Reem <jonathan.reem@gmail.com>"],"categories":[],"keywords":[],"readme":"README.md","repository":"https://github.com/reem/rust-void.git","edition":"2015","links":null},{"name":"generic-array","version":"0.12.0","id":"generic-array 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT","license_file":null,"description":"Generic types implementing functionality of arrays","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"serde","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":true,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"typenum","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.10","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"bincode","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"serde_json","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"generic_array","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.0/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"arr","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.0/tests/arr.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"iter","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.0/tests/iter.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"import_name","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.0/tests/import_name.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"generics","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.0/tests/generics.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"mod","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.0/tests/mod.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"hex","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.0/tests/hex.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.0/Cargo.toml","metadata":null,"authors":["Bartłomiej Kamiński <fizyk20@gmail.com>","Aaron Trent <novacrazy@gmail.com>"],"categories":["data-structures","no-std"],"keywords":["generic","array"],"readme":"README.md","repository":"https://github.com/fizyk20/generic-array.git","edition":"2015","links":null},{"name":"mynewt","version":"0.1.0","id":"mynewt 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)","license":null,"license_file":null,"description":null,"source":null,"dependencies":[{"name":"cortex-m","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":["inline-asm"],"target":null,"registry":null},{"name":"cstr_core","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"cty","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"embedded-hal","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.3","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"macros","source":null,"req":"*","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"memchr","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^2","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"mynewt","src_path":"/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt/src/lib.rs","edition":"2018"}],"features":{"default":[],"use_float":[]},"manifest_path":"/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt/Cargo.toml","metadata":null,"authors":["Lee Lup Yuen <luppy@appkaki.com>"],"categories":[],"keywords":[],"readme":"README.md","repository":null,"edition":"2018","links":null},{"name":"st7735-lcd","version":"0.6.1","id":"st7735-lcd 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT","license_file":null,"description":"ST7735 TFT LCD driver with embedded-graphics support","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"embedded-graphics","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"embedded-hal","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"nb","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"num-derive","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"num-traits","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"metro_m4","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"panic-halt","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"st7735-lcd","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/st7735-lcd-0.6.1/src/lib.rs","edition":"2018"},{"kind":["example"],"crate_types":["bin"],"name":"metro_m4_ferris_img","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/st7735-lcd-0.6.1/examples/metro_m4_ferris_img.rs","edition":"2018"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/st7735-lcd-0.6.1/build.rs","edition":"2018"}],"features":{"default":["graphics"],"graphics":["embedded-graphics"]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/st7735-lcd-0.6.1/Cargo.toml","metadata":null,"authors":["Paul Sajna <sajattack@gmail.com>"],"categories":[],"keywords":[],"readme":"README.md","repository":"https://github.com/sajattack/st7735-lcd-rs","edition":"2018","links":null},{"name":"introsort","version":"0.6.0","id":"introsort 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"Apache-2.0/MIT","license_file":null,"description":"Fast sorting compatible with #[no_std].\nAlso has (optional) support for efficient and robust sorting of floating point numbers.\n\nCurrently, introsort only builds on nightly","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"num","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.25","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"unreachable","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.0.2","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"rand","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.3.11","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"introsort","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/introsort-0.6.0/src/lib.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"ex1","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/introsort-0.6.0/examples/ex1.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/introsort-0.6.0/tests/test.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test-floats","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/introsort-0.6.0/tests/test-floats.rs","edition":"2015"},{"kind":["bench"],"crate_types":["bin"],"name":"float","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/introsort-0.6.0/benches/float.rs","edition":"2015"},{"kind":["bench"],"crate_types":["bin"],"name":"bench","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/introsort-0.6.0/benches/bench.rs","edition":"2015"}],"features":{"default":["float"],"float":["num","unreachable"]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/introsort-0.6.0/Cargo.toml","metadata":null,"authors":["Viktor Dahl <pazaconyoman@gmail.com>"],"categories":[],"keywords":["sorting","sort","float"],"readme":"README.md","repository":"https://github.com/veddan/rust-introsort","edition":"2015","links":null},{"name":"cortex-m-rt-macros","version":"0.1.7","id":"cortex-m-rt-macros 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Attributes re-exported in `cortex-m-rt`","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"proc-macro2","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"quote","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"syn","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":["extra-traits","full"],"target":null,"registry":null},{"name":"cortex-m-rt","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"cortex-m-rt-macros","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-macros-0.1.7/src/lib.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-macros-0.1.7/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>"],"categories":["embedded","no-std"],"keywords":["arm","cortex-m","runtime","startup"],"readme":null,"repository":"https://github.com/japaric/cortex-m-rt","edition":"2018","links":null},{"name":"generic-array","version":"0.13.2","id":"generic-array 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT","license_file":null,"description":"Generic types implementing functionality of arrays","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"serde","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":true,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"typenum","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.10","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"bincode","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"serde_json","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"generic_array","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"arr","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/tests/arr.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"iter","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/tests/iter.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"import_name","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/tests/import_name.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"generics","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/tests/generics.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"mod","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/tests/mod.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"hex","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/tests/hex.rs","edition":"2015"}],"features":{"more_lengths":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/Cargo.toml","metadata":null,"authors":["Bartłomiej Kamiński <fizyk20@gmail.com>","Aaron Trent <novacrazy@gmail.com>"],"categories":["data-structures","no-std"],"keywords":["generic","array"],"readme":"README.md","repository":"https://github.com/fizyk20/generic-array.git","edition":"2015","links":null},{"name":"unicode-xid","version":"0.1.0","id":"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"Determine whether characters have the XID_Start\nor XID_Continue properties according to\nUnicode Standard Annex #31.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"unicode-xid","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-xid-0.1.0/src/lib.rs","edition":"2015"}],"features":{"bench":[],"default":[],"no_std":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-xid-0.1.0/Cargo.toml","metadata":null,"authors":["erick.tryzelaar <erick.tryzelaar@gmail.com>","kwantam <kwantam@gmail.com>"],"categories":[],"keywords":["text","unicode","xid"],"readme":"README.md","repository":"https://github.com/unicode-rs/unicode-xid","edition":"2015","links":null},{"name":"semver-parser","version":"0.7.0","id":"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"Parsing of the semver spec.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"semver-parser","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-parser-0.7.0/src/lib.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-parser-0.7.0/Cargo.toml","metadata":null,"authors":["Steve Klabnik <steve@steveklabnik.com>"],"categories":[],"keywords":[],"readme":null,"repository":"https://github.com/steveklabnik/semver-parser","edition":"2015","links":null},{"name":"cortex-m-rt","version":"0.6.11","id":"cortex-m-rt 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Minimal runtime / startup for Cortex-M microcontrollers","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"cortex-m-rt-macros","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"r0","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"cortex-m","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"cortex-m-semihosting","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.3","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"panic-halt","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"compiletest_rs","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.4.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":"cfg(not(target_os = \"none\"))","registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"cortex-m-rt","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/src/lib.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"device","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/device.rs","edition":"2015","required-features":["device"]},{"kind":["example"],"crate_types":["bin"],"name":"override-exception","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/override-exception.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"divergent-default-handler","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/divergent-default-handler.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"unsafe-exception","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/unsafe-exception.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"cfg-static","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/cfg-static.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"alignment","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/alignment.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"unsafety","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/unsafety.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"divergent-exception","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/divergent-exception.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"qemu","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/qemu.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"data_overflow","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/data_overflow.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"state","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/state.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"unsafe-default-handler","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/unsafe-default-handler.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"unsafe-hard-fault","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/unsafe-hard-fault.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"main","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/main.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"entry-static","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/entry-static.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"unsafe-entry","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/unsafe-entry.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"minimal","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/minimal.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"pre_init","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/examples/pre_init.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"compiletest","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/tests/compiletest.rs","edition":"2015","required-features":["device"]},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/build.rs","edition":"2015"}],"features":{"device":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.11/Cargo.toml","metadata":{"docs":{"rs":{"features":["device"]}}},"authors":["The Cortex-M Team <cortex-m@teams.rust-embedded.org>","Jorge Aparicio <jorge@japaric.io>","Hideki Sekine <sekineh@me.com>"],"categories":["embedded","no-std"],"keywords":["arm","cortex-m","runtime","startup"],"readme":"README.md","repository":"https://github.com/rust-embedded/cortex-m-rt","edition":"2015","links":null},{"name":"volatile-register","version":"0.2.0","id":"volatile-register 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Volatile access to memory mapped hardware registers","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"vcell","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"volatile-register","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-register-0.2.0/src/lib.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-register-0.2.0/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <japaricious@gmail.com>","Jonathan 'theJPster' Pallant <github@thejpster.org.uk>"],"categories":[],"keywords":["no-std","volatile","register"],"readme":null,"repository":"https://github.com/japaric/volatile-register","edition":"2015","links":null},{"name":"as-slice","version":"0.1.0","id":"as-slice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"`AsSlice` and `AsMutSlice` traits","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"generic-array","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.12.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"stable_deref_trait","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.1.1","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"as-slice","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/as-slice-0.1.0/src/lib.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/as-slice-0.1.0/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>"],"categories":["no-std"],"keywords":["conversion","slice","array"],"readme":"README.md","repository":"https://github.com/japaric/as-slice","edition":"2015","links":null},{"name":"lazy_static","version":"1.4.0","id":"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"A macro for declaring lazily evaluated statics in Rust.","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"spin","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.0","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"doc-comment","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.3.1","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"lazy_static","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/tests/test.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"no_std","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/tests/no_std.rs","edition":"2015"}],"features":{"spin_no_std":["spin"]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/Cargo.toml","metadata":null,"authors":["Marvin Löbel <loebel.marvin@gmail.com>"],"categories":["no-std","rust-patterns","memory-management"],"keywords":["macro","lazy","static"],"readme":"README.md","repository":"https://github.com/rust-lang-nursery/lazy-static.rs","edition":"2015","links":null},{"name":"piet-embedded-graphics","version":"0.0.1","id":"piet-embedded-graphics 0.0.1 (path+file:///Users/Luppy/mynewt/piet-embedded/piet-embedded-graphics)","license":"MIT/Apache-2.0","license_file":null,"description":"embedded-graphics backend for piet 2D graphics abstraction.","source":null,"dependencies":[{"name":"arrayvec","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.1","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"embedded-graphics","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"embedded-hal","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.3","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"heapless","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"mynewt","source":null,"req":"*","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"piet","source":null,"req":"^0.0.7","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"st7735-lcd","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":["graphics"],"target":null,"registry":null},{"name":"unicode-segmentation","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.3.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"piet-test","source":null,"req":"^0.0.7","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"piet-embedded-graphics","src_path":"/Users/Luppy/mynewt/piet-embedded/piet-embedded-graphics/src/lib.rs","edition":"2018"},{"kind":["example"],"crate_types":["bin"],"name":"basic","src_path":"/Users/Luppy/mynewt/piet-embedded/piet-embedded-graphics/examples/basic.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/mynewt/piet-embedded/piet-embedded-graphics/Cargo.toml","metadata":null,"authors":["Lee Lup Yuen <luppy@appkaki.com>"],"categories":["rendering::graphics-api"],"keywords":["graphics","2d","embedded","no-std"],"readme":null,"repository":"https://github.com/lupyuen/piet-embedded","edition":"2018","links":null},{"name":"nb","version":"0.1.2","id":"nb 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Minimal non-blocking I/O layer","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"futures","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.17","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"nb","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.2/src/lib.rs","edition":"2015"}],"features":{"unstable":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.2/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>"],"categories":["asynchronous","embedded","no-std"],"keywords":["await","futures","IO"],"readme":null,"repository":"https://github.com/japaric/nb","edition":"2015","links":null},{"name":"piet-common","version":"0.0.7","id":"piet-common 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet-common)","license":"MIT/Apache-2.0","license_file":null,"description":"Selection of a single preferred back-end for piet","source":null,"dependencies":[{"name":"embedded-graphics","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.2","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"piet","source":null,"req":"^0.0.7","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"piet-embedded-graphics","source":null,"req":"^0.0.1","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"embedded-graphics","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":"cfg(all(target_arch = \"arm\", target_os = \"none\"))","registry":null},{"name":"piet-embedded-graphics","source":null,"req":"^0.0.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":"cfg(all(target_arch = \"arm\", target_os = \"none\"))","registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"piet-common","src_path":"/Users/Luppy/mynewt/piet-embedded/piet-common/src/lib.rs","edition":"2018"},{"kind":["example"],"crate_types":["bin"],"name":"png","src_path":"/Users/Luppy/mynewt/piet-embedded/piet-common/examples/png.rs","edition":"2018"}],"features":{"embedded":["piet-embedded-graphics","embedded-graphics"]},"manifest_path":"/Users/Luppy/mynewt/piet-embedded/piet-common/Cargo.toml","metadata":null,"authors":["Raph Levien <raph.levien@gmail.com>"],"categories":[],"keywords":["graphics","2d","no_std"],"readme":null,"repository":"https://github.com/linebender/piet","edition":"2018","links":null},{"name":"stable_deref_trait","version":"1.1.1","id":"stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"stable_deref_trait","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.1.1/src/lib.rs","edition":"2015"}],"features":{"alloc":[],"default":["std"],"std":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/stable_deref_trait-1.1.1/Cargo.toml","metadata":null,"authors":["Robert Grosse <n210241048576@gmail.com>"],"categories":["memory-management","no-std"],"keywords":[],"readme":"README.md","repository":"https://github.com/storyyeller/stable_deref_trait","edition":"2015","links":null},{"name":"arrayvec","version":"0.5.1","id":"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements fixed capacity ArrayVec and ArrayString.","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"serde","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":true,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"bencher","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.4","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"matches","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"serde_test","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"arrayvec","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/arrayvec-0.5.1/src/lib.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"serde","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/arrayvec-0.5.1/tests/serde.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"tests","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/arrayvec-0.5.1/tests/tests.rs","edition":"2018"},{"kind":["bench"],"crate_types":["bin"],"name":"extend","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/arrayvec-0.5.1/benches/extend.rs","edition":"2018"},{"kind":["bench"],"crate_types":["bin"],"name":"arraystring","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/arrayvec-0.5.1/benches/arraystring.rs","edition":"2018"}],"features":{"array-sizes-129-255":[],"array-sizes-33-128":[],"default":["std"],"std":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/arrayvec-0.5.1/Cargo.toml","metadata":{"docs":{"rs":{"features":["serde"]}},"release":{"no-dev-version":true,"tag-name":"{{version}}"}},"authors":["bluss"],"categories":["data-structures","no-std"],"keywords":["stack","vector","array","data-structure","no_std"],"readme":null,"repository":"https://github.com/bluss/arrayvec","edition":"2018","links":null},{"name":"hash32","version":"0.1.1","id":"hash32 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"32-bit hashing machinery","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"byteorder","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.2.2","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"hash32-derive","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"hash32","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"derive","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/examples/derive.rs","edition":"2015"}],"features":{"const-fn":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>"],"categories":["no-std"],"keywords":["32-bit","hash","fnv","murmur3"],"readme":null,"repository":"https://github.com/japaric/hash32","edition":"2015","links":null},{"name":"embedded-graphics","version":"0.5.2","id":"embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Embedded graphics library for small hardware displays","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"nalgebra","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.18.0","kind":null,"rename":null,"optional":true,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"tinybmp","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.0","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"tinytga","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.0","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"criterion","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.11","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"embedded-graphics","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/lib.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"chaining","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/tests/chaining.rs","edition":"2018"},{"kind":["bench"],"crate_types":["bin"],"name":"primitives","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/benches/primitives.rs","edition":"2018"},{"kind":["bench"],"crate_types":["bin"],"name":"fonts","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/benches/fonts.rs","edition":"2018"},{"kind":["bench"],"crate_types":["bin"],"name":"image","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/benches/image.rs","edition":"2018","required-features":["bmp"]}],"features":{"bmp":["tinybmp"],"default":[],"nalgebra_support":["nalgebra"],"tga":["tinytga"]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/Cargo.toml","metadata":{"docs":{"rs":{"all-features":true}}},"authors":["James Waples <james@wapl.es>"],"categories":["embedded","no-std"],"keywords":["rtfm","graphics","embedded"],"readme":"../README.md","repository":"https://github.com/jamwaffles/embedded-graphics","edition":"2018","links":null},{"name":"rustc-serialize","version":"0.3.24","id":"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"Generic serialization/deserialization support corresponding to the\n`derive(RustcEncodable, RustcDecodable)` mode in the compiler. Also includes\nsupport for hex, base64, and json encoding and decoding.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"rand","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.3","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"rustc-serialize","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/src/lib.rs","edition":"2015"},{"kind":["bench"],"crate_types":["bin"],"name":"base64","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/benches/base64.rs","edition":"2015"},{"kind":["bench"],"crate_types":["bin"],"name":"json","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/benches/json.rs","edition":"2015"},{"kind":["bench"],"crate_types":["bin"],"name":"hex","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/benches/hex.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.24/Cargo.toml","metadata":null,"authors":["The Rust Project Developers"],"categories":[],"keywords":[],"readme":"README.md","repository":"https://github.com/rust-lang/rustc-serialize","edition":"2015","links":null},{"name":"proc-macro2","version":"0.4.30","id":"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"A stable implementation of the upcoming new `proc_macro` API. Comes with an\noption, off by default, to also reimplement itself in terms of the upstream\nunstable API.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"unicode-xid","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"quote","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"proc-macro2","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-0.4.30/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-0.4.30/tests/test.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"marker","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-0.4.30/tests/marker.rs","edition":"2015"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-0.4.30/build.rs","edition":"2015"}],"features":{"default":["proc-macro"],"nightly":[],"proc-macro":[],"span-locations":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-0.4.30/Cargo.toml","metadata":{"docs":{"rs":{"rustc-args":["--cfg","procmacro2_semver_exempt"],"rustdoc-args":["--cfg","procmacro2_semver_exempt"]}}},"authors":["Alex Crichton <alex@alexcrichton.com>"],"categories":[],"keywords":["macros"],"readme":"README.md","repository":"https://github.com/alexcrichton/proc-macro2","edition":"2015","links":null},{"name":"proc-macro2","version":"1.0.6","id":"proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"A stable implementation of the upcoming new `proc_macro` API. Comes with an\noption, off by default, to also reimplement itself in terms of the upstream\nunstable API.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"unicode-xid","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"quote","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"proc-macro2","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"features","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/tests/features.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/tests/test.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"marker","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/tests/marker.rs","edition":"2018"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/build.rs","edition":"2018"}],"features":{"default":["proc-macro"],"nightly":[],"proc-macro":[],"span-locations":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/Cargo.toml","metadata":{"docs":{"rs":{"rustc-args":["--cfg","procmacro2_semver_exempt"],"rustdoc-args":["--cfg","procmacro2_semver_exempt"]}}},"authors":["Alex Crichton <alex@alexcrichton.com>"],"categories":[],"keywords":["macros"],"readme":"README.md","repository":"https://github.com/alexcrichton/proc-macro2","edition":"2018","links":null},{"name":"druid","version":"0.4.0","id":"druid 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid)","license":"Apache-2.0","license_file":null,"description":"Data-oriented Rust UI design toolkit. Experimental embedded version.","source":null,"dependencies":[{"name":"cortex-m","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"cortex-m-rt","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.10","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"druid-derive","source":null,"req":"^0.1.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"druid-shell","source":null,"req":"^0.4.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"heapless","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"druid","src_path":"/Users/Luppy/mynewt/druid-embedded/druid/src/lib.rs","edition":"2018"},{"kind":["example"],"crate_types":["bin"],"name":"hello","src_path":"/Users/Luppy/mynewt/druid-embedded/druid/examples/hello.rs","edition":"2018"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/mynewt/druid-embedded/druid/build.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/mynewt/druid-embedded/druid/Cargo.toml","metadata":null,"authors":["Raph Levien <raph.levien@gmail.com>"],"categories":["gui"],"keywords":["gui","ui","toolkit","no-std"],"readme":"README.md","repository":"https://github.com/lupyuen/druid-embedded","edition":"2018","links":null},{"name":"cfg-if","version":"0.1.10","id":"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"compiler_builtins","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.2","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"rustc-std-workspace-core","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0.0","kind":null,"rename":"core","optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"cfg-if","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-0.1.10/src/lib.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"xcrate","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-0.1.10/tests/xcrate.rs","edition":"2018"}],"features":{"rustc-dep-of-std":["core","compiler_builtins"]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cfg-if-0.1.10/Cargo.toml","metadata":null,"authors":["Alex Crichton <alex@alexcrichton.com>"],"categories":[],"keywords":[],"readme":"README.md","repository":"https://github.com/alexcrichton/cfg-if","edition":"2018","links":null},{"name":"autocfg","version":"0.1.7","id":"autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)","license":"Apache-2.0/MIT","license_file":null,"description":"Automatic cfg for Rust compiler features","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"autocfg","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/autocfg-0.1.7/src/lib.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"integers","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/autocfg-0.1.7/examples/integers.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"paths","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/autocfg-0.1.7/examples/paths.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"versions","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/autocfg-0.1.7/examples/versions.rs","edition":"2015"},{"kind":["example"],"crate_types":["bin"],"name":"traits","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/autocfg-0.1.7/examples/traits.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"rustflags","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/autocfg-0.1.7/tests/rustflags.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/autocfg-0.1.7/Cargo.toml","metadata":null,"authors":["Josh Stone <cuviper@gmail.com>"],"categories":["development-tools::build-utils"],"keywords":["rustc","build","autoconf"],"readme":"README.md","repository":"https://github.com/cuviper/autocfg","edition":"2015","links":null},{"name":"druid-shell","version":"0.4.0","id":"druid-shell 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-shell)","license":"Apache-2.0","license_file":null,"description":"Platform abstracting application shell used for druid toolkit.","source":null,"dependencies":[{"name":"cfg-if","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.10","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"embedded-graphics","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.2","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"piet-common","source":null,"req":"^0.0.7","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":["embedded"],"target":null,"registry":null},{"name":"embedded-graphics","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":"cfg(all(target_arch = \"arm\", target_os = \"none\"))","registry":null},{"name":"mynewt","source":null,"req":"*","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":"cfg(all(target_arch = \"arm\", target_os = \"none\"))","registry":null},{"name":"st7735-lcd","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":["graphics"],"target":"cfg(all(target_arch = \"arm\", target_os = \"none\"))","registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"druid-shell","src_path":"/Users/Luppy/mynewt/druid-embedded/druid-shell/src/lib.rs","edition":"2018"},{"kind":["example"],"crate_types":["bin"],"name":"shello","src_path":"/Users/Luppy/mynewt/druid-embedded/druid-shell/examples/shello.rs","edition":"2018"},{"kind":["example"],"crate_types":["bin"],"name":"perftest","src_path":"/Users/Luppy/mynewt/druid-embedded/druid-shell/examples/perftest.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/mynewt/druid-embedded/druid-shell/Cargo.toml","metadata":null,"authors":["Raph Levien <raph.levien@gmail.com>"],"categories":["os::macos-apis","os::windows-apis","gui"],"keywords":[],"readme":"README.md","repository":"https://github.com/xi-editor/druid","edition":"2018","links":null},{"name":"r0","version":"0.2.2","id":"r0 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Initialization code ('crt0') written in Rust","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"r0","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/r0-0.2.2/src/lib.rs","edition":"2015"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/r0-0.2.2/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <japaricious@gmail.com>"],"categories":[],"keywords":["initialization","start","crt0","c0"],"readme":null,"repository":"https://github.com/japaric/r0","edition":"2015","links":null},{"name":"byteorder","version":"1.3.2","id":"byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)","license":"Unlicense OR MIT","license_file":null,"description":"Library for reading/writing numbers in big-endian and little-endian.","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"doc-comment","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.3","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"quickcheck","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.8","kind":"dev","rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"rand","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"byteorder","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.3.2/src/lib.rs","edition":"2015"},{"kind":["bench"],"crate_types":["bin"],"name":"bench","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.3.2/benches/bench.rs","edition":"2015"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.3.2/build.rs","edition":"2015"}],"features":{"default":["std"],"i128":[],"std":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.3.2/Cargo.toml","metadata":null,"authors":["Andrew Gallant <jamslam@gmail.com>"],"categories":["encoding","parsing"],"keywords":["byte","endian","big-endian","little-endian","binary"],"readme":"README.md","repository":"https://github.com/BurntSushi/byteorder","edition":"2015","links":null},{"name":"semver","version":"0.9.0","id":"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"Semantic version parsing and comparison.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"semver-parser","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.7.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"serde","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":true,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"crates-index","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"serde_derive","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"serde_json","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"tempdir","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.3.4","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"semver","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.9.0/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"deprecation","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.9.0/tests/deprecation.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"serde","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.9.0/tests/serde.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"regression","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.9.0/tests/regression.rs","edition":"2015"}],"features":{"ci":["serde"],"default":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/semver-0.9.0/Cargo.toml","metadata":null,"authors":["Steve Klabnik <steve@steveklabnik.com>","The Rust Project Developers"],"categories":[],"keywords":[],"readme":"README.md","repository":"https://github.com/steveklabnik/semver","edition":"2015","links":null},{"name":"cortex-m","version":"0.6.1","id":"cortex-m 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Low level access to Cortex-M processors","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"aligned","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.3.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"bare-metal","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":["const-fn"],"target":null,"registry":null},{"name":"volatile-register","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"cortex-m","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.1/src/lib.rs","edition":"2018"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.1/build.rs","edition":"2018"}],"features":{"cm7-r0p1":[],"const-fn":[],"inline-asm":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.1/Cargo.toml","metadata":null,"authors":["The Cortex-M Team <cortex-m@teams.rust-embedded.org>","Jorge Aparicio <jorge@japaric.io>"],"categories":["embedded","hardware-support","no-std"],"keywords":["arm","cortex-m","register","peripheral"],"readme":"README.md","repository":"https://github.com/japaric/cortex-m","edition":"2018","links":"cortex-m"},{"name":"druid-derive","version":"0.1.2","id":"druid-derive 0.1.2 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-derive)","license":"Apache-2.0","license_file":null,"description":"derive impls for druid, a Rust UI toolkit.","source":null,"dependencies":[{"name":"proc-macro2","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0.4","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"quote","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"syn","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0.5","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"druid","source":null,"req":"^0.4.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"druid-derive","src_path":"/Users/Luppy/mynewt/druid-embedded/druid-derive/src/lib.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"with_same","src_path":"/Users/Luppy/mynewt/druid-embedded/druid-derive/tests/with_same.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"data","src_path":"/Users/Luppy/mynewt/druid-embedded/druid-derive/tests/data.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"ignore","src_path":"/Users/Luppy/mynewt/druid-embedded/druid-derive/tests/ignore.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/mynewt/druid-embedded/druid-derive/Cargo.toml","metadata":null,"authors":["Druid authors"],"categories":[],"keywords":[],"readme":null,"repository":"https://github.com/xi-editor/druid","edition":"2018","links":null},{"name":"syn","version":"1.0.5","id":"syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Parser for Rust source code","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"proc-macro2","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"quote","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":true,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"unicode-xid","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"insta","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.9","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"rayon","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"ref-cast","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"regex","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"termcolor","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"walkdir","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^2.1","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/src/lib.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_should_parse","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_should_parse.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_round_trip","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_round_trip.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_size","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_size.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_pat","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_pat.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_precedence","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_precedence.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_lit","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_lit.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_grouping","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_grouping.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_ident","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_ident.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_iterators","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_iterators.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_parse_buffer","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_parse_buffer.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_asyncness","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_asyncness.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_token_trees","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_token_trees.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"zzz_stable","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/zzz_stable.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_meta","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_meta.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_expr","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_expr.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_derive_input","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_derive_input.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_generics","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_generics.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test_attribute","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/tests/test_attribute.rs","edition":"2018"},{"kind":["bench"],"crate_types":["bin"],"name":"rust","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/benches/rust.rs","edition":"2018","required-features":["full","parsing"]},{"kind":["bench"],"crate_types":["bin"],"name":"file","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/benches/file.rs","edition":"2018","required-features":["full","parsing"]},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/build.rs","edition":"2018"}],"features":{"clone-impls":[],"default":["derive","parsing","printing","clone-impls","proc-macro"],"derive":[],"extra-traits":[],"fold":[],"full":[],"parsing":[],"printing":["quote"],"proc-macro":["proc-macro2/proc-macro","quote/proc-macro"],"visit":[],"visit-mut":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.5/Cargo.toml","metadata":{"docs":{"rs":{"all-features":true}},"playground":{"all-features":true}},"authors":["David Tolnay <dtolnay@gmail.com>"],"categories":["development-tools::procedural-macro-helpers"],"keywords":[],"readme":"README.md","repository":"https://github.com/dtolnay/syn","edition":"2018","links":null},{"name":"quote","version":"1.0.2","id":"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Quasi-quoting macro quote!(...)","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"proc-macro2","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"rustversion","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"trybuild","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"quote","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.2/src/lib.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"test","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.2/tests/test.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"compiletest","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.2/tests/compiletest.rs","edition":"2018"}],"features":{"default":["proc-macro"],"proc-macro":["proc-macro2/proc-macro"]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.2/Cargo.toml","metadata":null,"authors":["David Tolnay <dtolnay@gmail.com>"],"categories":["development-tools::procedural-macro-helpers"],"keywords":["syn"],"readme":"README.md","repository":"https://github.com/dtolnay/quote","edition":"2018","links":null},{"name":"memchr","version":"2.2.0","id":"memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"Unlicense/MIT","license_file":null,"description":"Safe interface to memchr.","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"libc","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.18","kind":null,"rename":null,"optional":true,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"quickcheck","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.8","kind":"dev","rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","edition":"2015"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/build.rs","edition":"2015"}],"features":{"default":["use_std"],"use_std":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/Cargo.toml","metadata":null,"authors":["Andrew Gallant <jamslam@gmail.com>","bluss"],"categories":[],"keywords":["memchr","char","scan","strchr","string"],"readme":"README.md","repository":"https://github.com/BurntSushi/rust-memchr","edition":"2015","links":null},{"name":"unicode-segmentation","version":"1.6.0","id":"unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"This crate provides Grapheme Cluster, Word and Sentence boundaries\naccording to Unicode Standard Annex #29 rules.\n","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"quickcheck","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.7","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"unicode-segmentation","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.6.0/src/lib.rs","edition":"2015"}],"features":{"no_std":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.6.0/Cargo.toml","metadata":null,"authors":["kwantam <kwantam@gmail.com>","Manish Goregaokar <manishsmail@gmail.com>"],"categories":[],"keywords":["text","unicode","grapheme","word","boundary"],"readme":"README.md","repository":"https://github.com/unicode-rs/unicode-segmentation","edition":"2015","links":null},{"name":"app","version":"0.1.0","id":"app 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app)","license":null,"license_file":null,"description":null,"source":null,"dependencies":[{"name":"arrayvec","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.1","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"cortex-m","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":["inline-asm"],"target":null,"registry":null},{"name":"cstr_core","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"cty","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"druid","source":null,"req":"*","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"druid-derive","source":null,"req":"*","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"druid-shell","source":null,"req":"*","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"embedded-graphics","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.5.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"embedded-hal","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2.3","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"macros","source":null,"req":"*","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"memchr","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^2","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"mynewt","source":null,"req":"*","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"st7735-lcd","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":["graphics"],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"app","src_path":"/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs","edition":"2018"}],"features":{"default":[],"use_float":[]},"manifest_path":"/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/Cargo.toml","metadata":null,"authors":["Lee Lup Yuen <luppy@appkaki.com>"],"categories":[],"keywords":[],"readme":"README.md","repository":null,"edition":"2018","links":null},{"name":"embedded-hal","version":"0.2.3","id":"embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":" A Hardware Abstraction Layer (HAL) for embedded systems ","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"nb","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"void","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0.2","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"futures","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.17","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"stm32f30x","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"embedded-hal","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/src/lib.rs","edition":"2015"}],"features":{"unproven":["nb/unstable"]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-0.2.3/Cargo.toml","metadata":{"docs":{"rs":{"features":["unproven"]}}},"authors":["Jorge Aparicio <jorge@japaric.io>","Jonathan 'theJPster' Pallant <github@thejpster.org.uk>"],"categories":["asynchronous","embedded","hardware-support","no-std"],"keywords":["hal","IO"],"readme":"README.md","repository":"https://github.com/japaric/embedded-hal","edition":"2015","links":null},{"name":"syn","version":"0.15.44","id":"syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Parser for Rust source code","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"proc-macro2","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.4.4","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"quote","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6","kind":null,"rename":null,"optional":true,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"unicode-xid","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"insta","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.8","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"rayon","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"ref-cast","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"regex","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"termcolor","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1.0","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"walkdir","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^2.1","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_should_parse","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_should_parse.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_round_trip","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_round_trip.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_pat","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_pat.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_precedence","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_precedence.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_lit","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_lit.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_grouping","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_grouping.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_ident","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_ident.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_parse_buffer","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_parse_buffer.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_asyncness","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_asyncness.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_token_trees","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_token_trees.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"zzz_stable","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/zzz_stable.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_meta","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_meta.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_expr","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_expr.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_derive_input","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_derive_input.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_generics","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_generics.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test_attribute","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/tests/test_attribute.rs","edition":"2015"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/build.rs","edition":"2015"}],"features":{"clone-impls":[],"default":["derive","parsing","printing","clone-impls","proc-macro"],"derive":[],"extra-traits":[],"fold":[],"full":[],"parsing":[],"printing":["quote"],"proc-macro":["proc-macro2/proc-macro","quote/proc-macro"],"visit":[],"visit-mut":[]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.15.44/Cargo.toml","metadata":{"docs":{"rs":{"all-features":true}},"playground":{"all-features":true}},"authors":["David Tolnay <dtolnay@gmail.com>"],"categories":["development-tools::procedural-macro-helpers"],"keywords":[],"readme":"README.md","repository":"https://github.com/dtolnay/syn","edition":"2015","links":null},{"name":"heapless","version":"0.5.1","id":"heapless 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"`static` friendly data structures that don't require dynamic memory allocation","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"as-slice","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"generic-array","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.13.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"hash32","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.0","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"serde","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^1","kind":null,"rename":null,"optional":true,"uses_default_features":false,"features":[],"target":null,"registry":null},{"name":"scoped_threadpool","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.1.8","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"heapless","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.1/src/lib.rs","edition":"2018"},{"kind":["test"],"crate_types":["bin"],"name":"tsan","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.1/tests/tsan.rs","edition":"2018"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.1/build.rs","edition":"2018"}],"features":{},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.1/Cargo.toml","metadata":null,"authors":["Jorge Aparicio <jorge@japaric.io>","Per Lindgren <per.lindgren@ltu.se>"],"categories":["data-structures","no-std"],"keywords":["static","no-heap"],"readme":null,"repository":"https://github.com/japaric/heapless","edition":"2018","links":null},{"name":"num-derive","version":"0.2.5","id":"num-derive 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT/Apache-2.0","license_file":null,"description":"Numeric syntax extensions","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"proc-macro2","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.4.2","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"quote","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.6","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"syn","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.15","kind":null,"rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"num","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null},{"name":"num-traits","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.2","kind":"dev","rename":null,"optional":false,"uses_default_features":true,"features":[],"target":null,"registry":null}],"targets":[{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"num_derive","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"trivial","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/tests/trivial.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"newtype","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/tests/newtype.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"num_derive_without_num","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/tests/num_derive_without_num.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"issue-9","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/tests/issue-9.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"empty_enum","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/tests/empty_enum.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"with_custom_values","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/tests/with_custom_values.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"issue-6","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/tests/issue-6.rs","edition":"2015"},{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/build.rs","edition":"2015"}],"features":{"full-syntax":["syn/full"]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/num-derive-0.2.5/Cargo.toml","metadata":null,"authors":["The Rust Project Developers"],"categories":["science"],"keywords":["mathematics","numerics"],"readme":"README.md","repository":"https://github.com/rust-num/num-derive","edition":"2015","links":null},{"name":"quote","version":"0.6.13","id":"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)","license":"MIT OR Apache-2.0","license_file":null,"description":"Quasi-quoting macro quote!(...)","source":"registry+https://github.com/rust-lang/crates.io-index","dependencies":[{"name":"proc-macro2","source":"registry+https://github.com/rust-lang/crates.io-index","req":"^0.4.21","kind":null,"rename":null,"optional":false,"uses_default_features":false,"features":[],"target":null,"registry":null}],"targets":[{"kind":["lib"],"crate_types":["lib"],"name":"quote","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.6.13/src/lib.rs","edition":"2015"},{"kind":["test"],"crate_types":["bin"],"name":"test","src_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.6.13/tests/test.rs","edition":"2015"}],"features":{"default":["proc-macro"],"proc-macro":["proc-macro2/proc-macro"]},"manifest_path":"/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.6.13/Cargo.toml","metadata":null,"authors":["David Tolnay <dtolnay@gmail.com>"],"categories":["development-tools::procedural-macro-helpers"],"keywords":["syn"],"readme":"README.md","repository":"https://github.com/dtolnay/quote","edition":"2015","links":null}],"workspace_members":["app 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app)","macros 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros)","mynewt 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)"],"resolve":{"nodes":[{"id":"aligned 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["as-slice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"as_slice","pkg":"as-slice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"app 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app)","dependencies":["arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","cortex-m 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)","cstr_core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","cty 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","druid 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid)","druid-derive 0.1.2 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-derive)","druid-shell 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-shell)","embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)","embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)","macros 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros)","memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)","mynewt 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)","st7735-lcd 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"arrayvec","pkg":"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"cortex_m","pkg":"cortex-m 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"cstr_core","pkg":"cstr_core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"cty","pkg":"cty 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"druid","pkg":"druid 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid)"},{"name":"druid_derive","pkg":"druid-derive 0.1.2 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-derive)"},{"name":"druid_shell","pkg":"druid-shell 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-shell)"},{"name":"embedded_graphics","pkg":"embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"embedded_hal","pkg":"embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"macros","pkg":"macros 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros)"},{"name":"memchr","pkg":"memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"mynewt","pkg":"mynewt 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)"},{"name":"st7735_lcd","pkg":"st7735-lcd 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["default"]},{"id":"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"as-slice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["generic-array 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)","stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"generic_array","pkg":"generic-array 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"stable_deref_trait","pkg":"stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"bare-metal 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"rustc_version","pkg":"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["const-fn"]},{"id":"byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"cortex-m 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["aligned 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)","bare-metal 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)","volatile-register 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"aligned","pkg":"aligned 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"bare_metal","pkg":"bare-metal 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"volatile_register","pkg":"volatile-register 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["inline-asm"]},{"id":"cortex-m-rt 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["cortex-m-rt-macros 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)","r0 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"cortex_m_rt_macros","pkg":"cortex-m-rt-macros 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"r0","pkg":"r0 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"cortex-m-rt-macros 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)","quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)","syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"proc_macro2","pkg":"proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"quote","pkg":"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"syn","pkg":"syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"cstr_core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["cty 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)","memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"cty","pkg":"cty 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"memchr","pkg":"memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"cty 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"cty 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"druid 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid)","dependencies":["cortex-m 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)","cortex-m-rt 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)","druid-derive 0.1.2 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-derive)","druid-shell 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-shell)","heapless 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"cortex_m","pkg":"cortex-m 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"cortex_m_rt","pkg":"cortex-m-rt 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"druid_derive","pkg":"druid-derive 0.1.2 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-derive)"},{"name":"druid_shell","pkg":"druid-shell 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-shell)"},{"name":"heapless","pkg":"heapless 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"druid-derive 0.1.2 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-derive)","dependencies":["proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)","quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)","syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"proc_macro2","pkg":"proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"quote","pkg":"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"syn","pkg":"syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"druid-shell 0.4.0 (path+file:///Users/Luppy/mynewt/druid-embedded/druid-shell)","dependencies":["cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)","embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)","mynewt 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)","piet-common 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet-common)","st7735-lcd 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"cfg_if","pkg":"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"embedded_graphics","pkg":"embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"mynewt","pkg":"mynewt 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)"},{"name":"piet_common","pkg":"piet-common 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet-common)"},{"name":"st7735_lcd","pkg":"st7735-lcd 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":["default"]},{"id":"embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["nb 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"nb","pkg":"nb 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"void","pkg":"void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"generic-array 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"typenum","pkg":"typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"generic-array 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"typenum","pkg":"typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"hash32 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"byteorder","pkg":"byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"heapless 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["as-slice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","generic-array 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)","hash32 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"as_slice","pkg":"as-slice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"generic_array","pkg":"generic-array 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"hash32","pkg":"hash32 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"introsort 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"kurbo 0.5.5 (path+file:///Users/Luppy/mynewt/kurbo-embedded)","dependencies":["arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","introsort 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)","libm 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"arrayvec","pkg":"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"introsort","pkg":"introsort 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"libm","pkg":"libm 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"libm 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":["default"]},{"id":"macros 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros)","dependencies":["cstr_core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","cty 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)","memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)","proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)","quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)","rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)","syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"cstr_core","pkg":"cstr_core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"cty","pkg":"cty 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"lazy_static","pkg":"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"memchr","pkg":"memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"proc_macro2","pkg":"proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"quote","pkg":"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"rustc_serialize","pkg":"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"syn","pkg":"syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"mynewt 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)","dependencies":["cortex-m 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)","cstr_core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","cty 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)","macros 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros)","memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"cortex_m","pkg":"cortex-m 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"cstr_core","pkg":"cstr_core 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"cty","pkg":"cty 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"embedded_hal","pkg":"embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"macros","pkg":"macros 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros)"},{"name":"memchr","pkg":"memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["default"]},{"id":"nb 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"num-derive 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)","quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)","syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"proc_macro2","pkg":"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"quote","pkg":"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"syn","pkg":"syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"autocfg","pkg":"autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"piet 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet)","dependencies":["arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","kurbo 0.5.5 (path+file:///Users/Luppy/mynewt/kurbo-embedded)","libm 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"arrayvec","pkg":"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"kurbo","pkg":"kurbo 0.5.5 (path+file:///Users/Luppy/mynewt/kurbo-embedded)"},{"name":"libm","pkg":"libm 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"piet-common 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet-common)","dependencies":["embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)","piet 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet)","piet-embedded-graphics 0.0.1 (path+file:///Users/Luppy/mynewt/piet-embedded/piet-embedded-graphics)"],"deps":[{"name":"embedded_graphics","pkg":"embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"piet","pkg":"piet 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet)"},{"name":"piet_embedded_graphics","pkg":"piet-embedded-graphics 0.0.1 (path+file:///Users/Luppy/mynewt/piet-embedded/piet-embedded-graphics)"}],"features":["embedded","embedded-graphics","piet-embedded-graphics"]},{"id":"piet-embedded-graphics 0.0.1 (path+file:///Users/Luppy/mynewt/piet-embedded/piet-embedded-graphics)","dependencies":["arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)","embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)","heapless 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)","mynewt 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)","piet 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet)","st7735-lcd 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)","unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"arrayvec","pkg":"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"embedded_graphics","pkg":"embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"embedded_hal","pkg":"embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"heapless","pkg":"heapless 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"mynewt","pkg":"mynewt 0.1.0 (path+file:///Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)"},{"name":"piet","pkg":"piet 0.0.7 (path+file:///Users/Luppy/mynewt/piet-embedded/piet)"},{"name":"st7735_lcd","pkg":"st7735-lcd 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"unicode_segmentation","pkg":"unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"unicode_xid","pkg":"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["default","proc-macro"]},{"id":"proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"unicode_xid","pkg":"unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["default","proc-macro"]},{"id":"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"proc_macro2","pkg":"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["default","proc-macro","proc-macro2"]},{"id":"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"proc_macro2","pkg":"proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["default","proc-macro","proc-macro2"]},{"id":"r0 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"semver","pkg":"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]},{"id":"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"semver_parser","pkg":"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["default"]},{"id":"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"st7735-lcd 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)","embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)","nb 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)","num-derive 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)","num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"embedded_graphics","pkg":"embedded-graphics 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"embedded_hal","pkg":"embedded-hal 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"nb","pkg":"nb 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"num_derive","pkg":"num-derive 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"num_traits","pkg":"num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["default","embedded-graphics","graphics"]},{"id":"stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)","quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)","unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"proc_macro2","pkg":"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"quote","pkg":"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"unicode_xid","pkg":"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["clone-impls","default","derive","parsing","printing","proc-macro","proc-macro2","quote"]},{"id":"syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)","quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)","unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"proc_macro2","pkg":"proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"quote","pkg":"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"},{"name":"unicode_xid","pkg":"unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":["clone-impls","default","derive","extra-traits","full","parsing","printing","proc-macro","proc-macro2","quote"]},{"id":"typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":["default"]},{"id":"unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":["default"]},{"id":"vcell 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":[],"deps":[],"features":[]},{"id":"volatile-register 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)","dependencies":["vcell 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"],"deps":[{"name":"vcell","pkg":"vcell 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"}],"features":[]}],"root":null},"target_directory":"/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/target","version":1,"workspace_root":"/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor"}
