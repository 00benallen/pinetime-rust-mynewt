In archive target/thumbv7m-none-eabi/release/libapp.rlib:

app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.o6vxcoia-cgu.0
00002321 l       .debug_str	00000000 
00002ca8 l       .debug_str	00000000 
00002cb1 l       .debug_str	00000000 
00002d21 l       .debug_str	00000000 
00002d74 l       .debug_str	00000000 
00002dc3 l       .debug_str	00000000 
00002e03 l       .debug_str	00000000 
00002e2a l       .debug_str	00000000 
00002e2c l       .debug_str	00000000 
00002e2e l       .debug_str	00000000 
00002e38 l       .debug_str	00000000 
00002e41 l       .debug_str	00000000 
00002e4a l       .debug_str	00000000 
00002e55 l       .debug_str	00000000 
00002e5f l       .debug_str	00000000 
00002e86 l       .debug_str	00000000 
00002e9e l       .debug_str	00000000 
00002ea8 l       .debug_str	00000000 
00002ecb l       .debug_str	00000000 
00002f13 l       .debug_str	00000000 
00002f53 l       .debug_str	00000000 
00002f9a l       .debug_str	00000000 
00002fa3 l       .debug_str	00000000 
00002fa7 l       .debug_str	00000000 
00002fd1 l       .debug_str	00000000 
00002fd6 l       .debug_str	00000000 
00002fd9 l       .debug_str	00000000 
00003023 l       .debug_str	00000000 
0000302c l       .debug_str	00000000 
0000305f l       .debug_str	00000000 
0000308a l       .debug_str	00000000 
0000308c l       .debug_str	00000000 
000030c8 l       .debug_str	00000000 
000030db l       .debug_str	00000000 
000030e0 l       .debug_str	00000000 
000030f2 l       .debug_str	00000000 
000030f8 l       .debug_str	00000000 
000030fe l       .debug_str	00000000 
00003100 l       .debug_str	00000000 
00003106 l       .debug_str	00000000 
0000310b l       .debug_str	00000000 
00003118 l       .debug_str	00000000 
0000311d l       .debug_str	00000000 
00003125 l       .debug_str	00000000 
00003129 l       .debug_str	00000000 
0000312e l       .debug_str	00000000 
00003136 l       .debug_str	00000000 
0000314c l       .debug_str	00000000 
0000316a l       .debug_str	00000000 
00003173 l       .debug_str	00000000 
00003178 l       .debug_str	00000000 
0000317d l       .debug_str	00000000 
00003181 l       .debug_str	00000000 
0000318a l       .debug_str	00000000 
00003194 l       .debug_str	00000000 
000031ac l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
000000a2 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000df l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000122 l       .debug_str	00000000 
00000125 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001e3 l       .debug_str	00000000 
000001ef l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
0000020a l       .debug_str	00000000 
00000214 l       .debug_str	00000000 
00000221 l       .debug_str	00000000 
0000022d l       .debug_str	00000000 
00000231 l       .debug_str	00000000 
0000023c l       .debug_str	00000000 
00000247 l       .debug_str	00000000 
0000024e l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
0000026f l       .debug_str	00000000 
00000277 l       .debug_str	00000000 
0000027e l       .debug_str	00000000 
00000282 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
00000290 l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
0000029c l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002ac l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
000002bc l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002cf l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
000002df l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002ed l       .debug_str	00000000 
000002f3 l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
0000034b l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
0000037c l       .debug_str	00000000 
00000382 l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
0000038b l       .debug_str	00000000 
0000039a l       .debug_str	00000000 
000003a1 l       .debug_str	00000000 
000003a5 l       .debug_str	00000000 
000003ae l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003be l       .debug_str	00000000 
000003c5 l       .debug_str	00000000 
000003d9 l       .debug_str	00000000 
000003e5 l       .debug_str	00000000 
000003f1 l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000420 l       .debug_str	00000000 
0000042a l       .debug_str	00000000 
00000438 l       .debug_str	00000000 
0000043c l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
0000044e l       .debug_str	00000000 
00000454 l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
0000045c l       .debug_str	00000000 
00000464 l       .debug_str	00000000 
0000047b l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
000004bb l       .debug_str	00000000 
000004c5 l       .debug_str	00000000 
000004df l       .debug_str	00000000 
0000053d l       .debug_str	00000000 
00000548 l       .debug_str	00000000 
00000565 l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
00000588 l       .debug_str	00000000 
000005ba l       .debug_str	00000000 
000005c1 l       .debug_str	00000000 
000005ca l       .debug_str	00000000 
000005fe l       .debug_str	00000000 
0000060c l       .debug_str	00000000 
00000610 l       .debug_str	00000000 
00000614 l       .debug_str	00000000 
0000064d l       .debug_str	00000000 
0000065d l       .debug_str	00000000 
00000661 l       .debug_str	00000000 
00000665 l       .debug_str	00000000 
0000066a l       .debug_str	00000000 
00000670 l       .debug_str	00000000 
00000674 l       .debug_str	00000000 
00000684 l       .debug_str	00000000 
00000690 l       .debug_str	00000000 
0000069c l       .debug_str	00000000 
000006b3 l       .debug_str	00000000 
000006bf l       .debug_str	00000000 
000006c3 l       .debug_str	00000000 
000006d0 l       .debug_str	00000000 
000006dc l       .debug_str	00000000 
000006ea l       .debug_str	00000000 
00000701 l       .debug_str	00000000 
00000716 l       .debug_str	00000000 
00000719 l       .debug_str	00000000 
00000739 l       .debug_str	00000000 
00000742 l       .debug_str	00000000 
00000745 l       .debug_str	00000000 
0000074c l       .debug_str	00000000 
00000755 l       .debug_str	00000000 
0000075e l       .debug_str	00000000 
0000076a l       .debug_str	00000000 
00000772 l       .debug_str	00000000 
0000077a l       .debug_str	00000000 
00000780 l       .debug_str	00000000 
000007a3 l       .debug_str	00000000 
000007b4 l       .debug_str	00000000 
000007c0 l       .debug_str	00000000 
000007fb l       .debug_str	00000000 
0000080c l       .debug_str	00000000 
0000080e l       .debug_str	00000000 
00000836 l       .debug_str	00000000 
00000852 l       .debug_str	00000000 
00000857 l       .debug_str	00000000 
0000085f l       .debug_str	00000000 
00000868 l       .debug_str	00000000 
00000871 l       .debug_str	00000000 
00000878 l       .debug_str	00000000 
0000087e l       .debug_str	00000000 
000008e0 l       .debug_str	00000000 
0000094a l       .debug_str	00000000 
00000958 l       .debug_str	00000000 
0000096c l       .debug_str	00000000 
000009a1 l       .debug_str	00000000 
000009ac l       .debug_str	00000000 
000009b2 l       .debug_str	00000000 
000009be l       .debug_str	00000000 
000009eb l       .debug_str	00000000 
000009fd l       .debug_str	00000000 
00000a01 l       .debug_str	00000000 
00000a0a l       .debug_str	00000000 
00000a0e l       .debug_str	00000000 
00000a7e l       .debug_str	00000000 
00000aac l       .debug_str	00000000 
00000ad6 l       .debug_str	00000000 
00000adb l       .debug_str	00000000 
00000b1a l       .debug_str	00000000 
00000b30 l       .debug_str	00000000 
00000b36 l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000b40 l       .debug_str	00000000 
00000b4c l       .debug_str	00000000 
00000b54 l       .debug_str	00000000 
00000bae l       .debug_str	00000000 
00000c10 l       .debug_str	00000000 
00000c1b l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000cb1 l       .debug_str	00000000 
00000cbb l       .debug_str	00000000 
00000cf8 l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000d46 l       .debug_str	00000000 
00000d56 l       .debug_str	00000000 
00000d5e l       .debug_str	00000000 
00000db3 l       .debug_str	00000000 
00000e10 l       .debug_str	00000000 
00000e1c l       .debug_str	00000000 
00000e25 l       .debug_str	00000000 
00000e31 l       .debug_str	00000000 
00000e3d l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e4e l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000e75 l       .debug_str	00000000 
00000e7c l       .debug_str	00000000 
00000e9c l       .debug_str	00000000 
00000ea3 l       .debug_str	00000000 
00000eab l       .debug_str	00000000 
00000eb5 l       .debug_str	00000000 
00000ec0 l       .debug_str	00000000 
00000ec9 l       .debug_str	00000000 
00000ed4 l       .debug_str	00000000 
00000ee0 l       .debug_str	00000000 
00000ee4 l       .debug_str	00000000 
00000eed l       .debug_str	00000000 
00000ef4 l       .debug_str	00000000 
00000efc l       .debug_str	00000000 
00000f04 l       .debug_str	00000000 
00000f0e l       .debug_str	00000000 
00000f14 l       .debug_str	00000000 
00000f1b l       .debug_str	00000000 
00000f22 l       .debug_str	00000000 
00000f4f l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f8a l       .debug_str	00000000 
00000f90 l       .debug_str	00000000 
00000f9f l       .debug_str	00000000 
00000faf l       .debug_str	00000000 
00000fbf l       .debug_str	00000000 
00000fc7 l       .debug_str	00000000 
00000ff0 l       .debug_str	00000000 
0000104e l       .debug_str	00000000 
000010b4 l       .debug_str	00000000 
000010bb l       .debug_str	00000000 
000010c3 l       .debug_str	00000000 
000010cc l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
000010fa l       .debug_str	00000000 
00001108 l       .debug_str	00000000 
00001113 l       .debug_str	00000000 
00001120 l       .debug_str	00000000 
0000112f l       .debug_str	00000000 
00001145 l       .debug_str	00000000 
0000114f l       .debug_str	00000000 
00001158 l       .debug_str	00000000 
00001161 l       .debug_str	00000000 
00001187 l       .debug_str	00000000 
0000119d l       .debug_str	00000000 
000011a8 l       .debug_str	00000000 
000011be l       .debug_str	00000000 
000011c6 l       .debug_str	00000000 
000011e7 l       .debug_str	00000000 
000011fe l       .debug_str	00000000 
00001203 l       .debug_str	00000000 
0000120b l       .debug_str	00000000 
00001214 l       .debug_str	00000000 
0000121d l       .debug_str	00000000 
00001226 l       .debug_str	00000000 
0000122e l       .debug_str	00000000 
00001235 l       .debug_str	00000000 
00001241 l       .debug_str	00000000 
0000124c l       .debug_str	00000000 
00001254 l       .debug_str	00000000 
0000125c l       .debug_str	00000000 
000012d8 l       .debug_str	00000000 
0000135c l       .debug_str	00000000 
00001458 l       .debug_str	00000000 
0000155c l       .debug_str	00000000 
0000156a l       .debug_str	00000000 
00001575 l       .debug_str	00000000 
0000157f l       .debug_str	00000000 
0000158a l       .debug_str	00000000 
000015b8 l       .debug_str	00000000 
00001633 l       .debug_str	00000000 
000016b6 l       .debug_str	00000000 
000016c4 l       .debug_str	00000000 
00001723 l       .debug_str	00000000 
0000178a l       .debug_str	00000000 
000017a0 l       .debug_str	00000000 
000017b0 l       .debug_str	00000000 
000017bf l       .debug_str	00000000 
000017c3 l       .debug_str	00000000 
000017c9 l       .debug_str	00000000 
000017cf l       .debug_str	00000000 
000017d5 l       .debug_str	00000000 
000017e5 l       .debug_str	00000000 
00001818 l       .debug_str	00000000 
00001858 l       .debug_str	00000000 
000018a0 l       .debug_str	00000000 
000018a4 l       .debug_str	00000000 
000018aa l       .debug_str	00000000 
000018b0 l       .debug_str	00000000 
000018b6 l       .debug_str	00000000 
000018c8 l       .debug_str	00000000 
000018fd l       .debug_str	00000000 
0000193f l       .debug_str	00000000 
00001989 l       .debug_str	00000000 
0000198d l       .debug_str	00000000 
00001993 l       .debug_str	00000000 
00001999 l       .debug_str	00000000 
0000199f l       .debug_str	00000000 
000019b1 l       .debug_str	00000000 
000019e6 l       .debug_str	00000000 
00001a28 l       .debug_str	00000000 
00001a72 l       .debug_str	00000000 
00001a76 l       .debug_str	00000000 
00001a7c l       .debug_str	00000000 
00001a82 l       .debug_str	00000000 
00001a88 l       .debug_str	00000000 
00001a8e l       .debug_str	00000000 
00001a9f l       .debug_str	00000000 
00001ad3 l       .debug_str	00000000 
00001b14 l       .debug_str	00000000 
00001b5d l       .debug_str	00000000 
00001b62 l       .debug_str	00000000 
00001b67 l       .debug_str	00000000 
00001b6b l       .debug_str	00000000 
00001b71 l       .debug_str	00000000 
00001b77 l       .debug_str	00000000 
00001b7d l       .debug_str	00000000 
00001b8e l       .debug_str	00000000 
00001bc2 l       .debug_str	00000000 
00001c03 l       .debug_str	00000000 
00001c4c l       .debug_str	00000000 
00001c50 l       .debug_str	00000000 
00001c84 l       .debug_str	00000000 
00001cc5 l       .debug_str	00000000 
00001d0e l       .debug_str	00000000 
00001d13 l       .debug_str	00000000 
00001d17 l       .debug_str	00000000 
00001d20 l       .debug_str	00000000 
00001d27 l       .debug_str	00000000 
00001d2f l       .debug_str	00000000 
00001d41 l       .debug_str	00000000 
00001d76 l       .debug_str	00000000 
00001db8 l       .debug_str	00000000 
00001e02 l       .debug_str	00000000 
00001e06 l       .debug_str	00000000 
00001e0c l       .debug_str	00000000 
00001e12 l       .debug_str	00000000 
00001e18 l       .debug_str	00000000 
00001e1e l       .debug_str	00000000 
00001e26 l       .debug_str	00000000 
00001e34 l       .debug_str	00000000 
00001e43 l       .debug_str	00000000 
00001e54 l       .debug_str	00000000 
00001e5f l       .debug_str	00000000 
00001e6a l       .debug_str	00000000 
00001e75 l       .debug_str	00000000 
00001e7c l       .debug_str	00000000 
00001e9f l       .debug_str	00000000 
00001eb1 l       .debug_str	00000000 
00001ee6 l       .debug_str	00000000 
00001f28 l       .debug_str	00000000 
00001f72 l       .debug_str	00000000 
00001f76 l       .debug_str	00000000 
00001f80 l       .debug_str	00000000 
00001f92 l       .debug_str	00000000 
00001fc7 l       .debug_str	00000000 
00002009 l       .debug_str	00000000 
00002053 l       .debug_str	00000000 
00002058 l       .debug_str	00000000 
00002062 l       .debug_str	00000000 
00002074 l       .debug_str	00000000 
000020a9 l       .debug_str	00000000 
000020eb l       .debug_str	00000000 
00002135 l       .debug_str	00000000 
00002149 l       .debug_str	00000000 
0000214d l       .debug_str	00000000 
0000215b l       .debug_str	00000000 
0000216b l       .debug_str	00000000 
00002174 l       .debug_str	00000000 
0000217f l       .debug_str	00000000 
0000218e l       .debug_str	00000000 
000021a3 l       .debug_str	00000000 
000021d4 l       .debug_str	00000000 
00002271 l       .debug_str	00000000 
00002316 l       .debug_str	00000000 
0000232a l       .debug_str	00000000 
0000234b l       .debug_str	00000000 
0000235e l       .debug_str	00000000 
00002394 l       .debug_str	00000000 
00002417 l       .debug_str	00000000 
000024a2 l       .debug_str	00000000 
000024be l       .debug_str	00000000 
0000250a l       .debug_str	00000000 
0000255e l       .debug_str	00000000 
0000257b l       .debug_str	00000000 
0000258f l       .debug_str	00000000 
000025db l       .debug_str	00000000 
0000262f l       .debug_str	00000000 
00002645 l       .debug_str	00000000 
00002659 l       .debug_str	00000000 
000026a0 l       .debug_str	00000000 
000026ef l       .debug_str	00000000 
000026f8 l       .debug_str	00000000 
00002706 l       .debug_str	00000000 
00002737 l       .debug_str	00000000 
0000273d l       .debug_str	00000000 
00002745 l       .debug_str	00000000 
0000274c l       .debug_str	00000000 
00002754 l       .debug_str	00000000 
0000275f l       .debug_str	00000000 
00002767 l       .debug_str	00000000 
00002776 l       .debug_str	00000000 
0000277a l       .debug_str	00000000 
00002785 l       .debug_str	00000000 
00002791 l       .debug_str	00000000 
0000279c l       .debug_str	00000000 
000027ad l       .debug_str	00000000 
000027b3 l       .debug_str	00000000 
000027bb l       .debug_str	00000000 
000027c2 l       .debug_str	00000000 
000027cc l       .debug_str	00000000 
000027d4 l       .debug_str	00000000 
000027dc l       .debug_str	00000000 
000027fe l       .debug_str	00000000 
00002809 l       .debug_str	00000000 
00002815 l       .debug_str	00000000 
0000281d l       .debug_str	00000000 
00002826 l       .debug_str	00000000 
00002831 l       .debug_str	00000000 
00002838 l       .debug_str	00000000 
00002843 l       .debug_str	00000000 
0000284e l       .debug_str	00000000 
0000285e l       .debug_str	00000000 
00002868 l       .debug_str	00000000 
0000286e l       .debug_str	00000000 
00002890 l       .debug_str	00000000 
000028c8 l       .debug_str	00000000 
00002908 l       .debug_str	00000000 
0000290f l       .debug_str	00000000 
00002917 l       .debug_str	00000000 
0000292e l       .debug_str	00000000 
00002937 l       .debug_str	00000000 
00002947 l       .debug_str	00000000 
00002956 l       .debug_str	00000000 
0000295e l       .debug_str	00000000 
00002965 l       .debug_str	00000000 
0000296d l       .debug_str	00000000 
0000298b l       .debug_str	00000000 
0000299b l       .debug_str	00000000 
000029ce l       .debug_str	00000000 
000029e3 l       .debug_str	00000000 
000029ec l       .debug_str	00000000 
00002a49 l       .debug_str	00000000 
00002aae l       .debug_str	00000000 
00002ab8 l       .debug_str	00000000 
00002ac8 l       .debug_str	00000000 
00002add l       .debug_str	00000000 
00002ae5 l       .debug_str	00000000 
00002b49 l       .debug_str	00000000 
00002bb5 l       .debug_str	00000000 
00002bbc l       .debug_str	00000000 
00002bc4 l       .debug_str	00000000 
00002be2 l       .debug_str	00000000 
00002bf2 l       .debug_str	00000000 
00002c25 l       .debug_str	00000000 
00002c3a l       .debug_str	00000000 
00002c4d l       .debug_str	00000000 
00002c62 l       .debug_str	00000000 
00002c69 l       .debug_str	00000000 
00002c7e l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000019 .Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.21	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000000 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000004 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	0000000c .Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	0000004b .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.26
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.30	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.31	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.33	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000f .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E	00000008 _ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000258 _ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	0000000c _ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l     F .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000050 _ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000000 .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE
00000000         *UND*	00000000 _ZN4core5panic8Location4file17h94cc6af18de736c4E
00000000         *UND*	00000000 _ZN4core5panic8Location4line17h3ffc63f14d0a6636E
00000000         *UND*	00000000 _ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E
00000000         *UND*	00000000 _ZN4core9panicking5panic17h53ca63c6ac6312f8E
00000000         *UND*	00000000 _ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E
00000000         *UND*	00000000 _ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17hffcd2d6e43a98b23E
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor10as_untyped17hc683efc51e7df2deE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor17register_listener17he319e84e05fa897bE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h7c5e0a202348e33cE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17hc658a5853b69921dE
00000000         *UND*	00000000 _ZN6mynewt4Strn3new17hd3927fe713482c61E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network14do_server_post17h63b4208c05d74765E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network16init_server_post17h27f63ed9509825d3E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network22start_server_transport17he5c189d769aa6683E
00000000         *UND*	00000000 _ZN6mynewt6kernel2os10eventq_run17h49917a2d6a4028eaE
00000000         *UND*	00000000 _ZN6mynewt6kernel2os15eventq_dflt_get17hb17cddfc29115d4fE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext12check_result17h4fc63e9e40c0702cE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hb62da92cb21c0672E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext4fail17h68cffd9b539196daE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext7encoder17h276b4097dd5ff58dE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hf8908a5278c4cf14E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context12COAP_CONTEXT17h5e91d8ef2e33c9a1E
00000000         *UND*	00000000 _ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 cbor_encode_int
00000000         *UND*	00000000 cbor_encode_text_string
00000000         *UND*	00000000 cbor_encoder_close_container
00000000         *UND*	00000000 cbor_encoder_create_map
00000000         *UND*	00000000 console_buffer
00000000         *UND*	00000000 console_flush
00000000         *UND*	00000000 console_printhex
00000000         *UND*	00000000 get_temp_data
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000 g     F .text.main	000000f0 main
00000000         *UND*	00000000 null_sensor
00000000 g     F .text.rust_begin_unwind	00000072 rust_begin_unwind
00000000         *UND*	00000000 rust_sysinit



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E:

00000000 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE>

Disassembly of section .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E:

00000000 <_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E>:
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E:

00000000 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E>:
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:74
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   4:	b087      	sub	sp, #28
   6:	4605      	mov	r5, r0
_ZN3app8app_base13console_print17h1db64f4bd159062eE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:18
///  Display message `msg` on the Arm Semihosting console (via OpenOCD).
pub fn console_print(msg: &[u8]) {
    let len = msg.len();
    unsafe {
        //  Call the Semihosting Console API, which is unsafe.
        console_buffer(msg.as_ptr(), len as u32);
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:19
        console_flush();  //  TODO: Remove this.
  18:	f7ff fffe 	bl	0 <console_flush>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console_print(b"Rust handle_sensor_data\n");
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  1c:	4620      	mov	r0, r4
  1e:	f7ff fffe 	bl	0 <is_null_sensor_data>
  22:	b120      	cbz	r0, 2e <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x2e>
  24:	f06f 0001 	mvn.w	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:102
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  28:	b007      	add	sp, #28
  2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:80
    assert!(unsafe { !is_null_sensor(sensor) });
  2e:	4628      	mov	r0, r5
  30:	f7ff fffe 	bl	0 <is_null_sensor>
  34:	2800      	cmp	r0, #0
  36:	f040 80f3 	bne.w	220 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x220>
  3a:	e9dd 100e 	ldrd	r1, r0, [sp, #56]	; 0x38
_ZN3app10app_sensor15get_temperature17h6296b9e58d842b05E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:112
#[allow(unreachable_patterns)]
#[allow(unused_variables)]
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
  3e:	f081 6180 	eor.w	r1, r1, #67108864	; 0x4000000
  42:	4308      	orrs	r0, r1
  44:	d11c      	bne.n	80 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x80>
  46:	2000      	movs	r0, #0
  48:	a904      	add	r1, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:114
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  4a:	f88d 0014 	strb.w	r0, [sp, #20]
  4e:	9004      	str	r0, [sp, #16]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            let rc = unsafe { get_temp_raw_data(sensor_data, &mut rawtempdata) };
  50:	4620      	mov	r0, r4
  52:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:116
            assert!(rc == 0);
  56:	2800      	cmp	r0, #0
  58:	f040 80f0 	bne.w	23c <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x23c>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:119

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  5c:	f89d 0014 	ldrb.w	r0, [sp, #20]
  60:	2800      	cmp	r0, #0
  62:	f000 80e4 	beq.w	22e <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x22e>
_ZN3app8app_base13console_print17h1db64f4bd159062eE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  66:	f240 0000 	movw	r0, #0
  6a:	2119      	movs	r1, #25
  6c:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor15get_temperature17h6296b9e58d842b05E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  70:	f8dd 9010 	ldr.w	r9, [sp, #16]
_ZN3app8app_base13console_print17h1db64f4bd159062eE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:18
  74:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:19
        console_flush();  //  TODO: Remove this.
  78:	f7ff fffe 	bl	0 <console_flush>
  7c:	2401      	movs	r4, #1
  7e:	e012      	b.n	a6 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0xa6>
_ZN3app10app_sensor15get_temperature17h6296b9e58d842b05E():
  80:	2000      	movs	r0, #0
  82:	a904      	add	r1, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:127
            console_print(b"TMP listener got rawtmp \n");  // return_value->int_val);
        },
        SENSOR_TYPE_AMBIENT_TEMPERATURE => {      //  If this is computed temperature...
            //  Interpret the sensor data as a sensor_temp_data struct that contains computed temp.
            let mut tempdata = fill_zero!(sensor_temp_data);
  84:	f88d 0014 	strb.w	r0, [sp, #20]
  88:	9004      	str	r0, [sp, #16]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:128
            let rc = unsafe { get_temp_data(sensor_data, &mut tempdata) };
  8a:	4620      	mov	r0, r4
  8c:	f7ff fffe 	bl	0 <get_temp_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:129
            assert!(rc == 0);
  90:	2800      	cmp	r0, #0
  92:	f040 80da 	bne.w	24a <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x24a>
  96:	f89d 0014 	ldrb.w	r0, [sp, #20]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:132

            //  Check that the computed temperature data is valid.
            if tempdata.std_temp_is_valid() == 0 { return return_value; }  //  Exit if data is not valid
  9a:	07c0      	lsls	r0, r0, #31
  9c:	f000 80c7 	beq.w	22e <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x22e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:135

            //  Computed temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Float(tempdata.std_temp);  //  Temperature in floating point.
  a0:	f8dd 9010 	ldr.w	r9, [sp, #16]
  a4:	2402      	movs	r4, #2
_ZN3app8app_base13console_print17h1db64f4bd159062eE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  a6:	f240 0000 	movw	r0, #0
  aa:	2116      	movs	r1, #22
  ac:	f2c0 0000 	movt	r0, #0
  b0:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:19
        console_flush();  //  TODO: Remove this.
  b4:	f7ff fffe 	bl	0 <console_flush>
_ZN3app11app_network16send_sensor_data17h66b8c89222084710E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:76
    if let SensorValueType::None = val.val { assert!(false); }

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post(strn!("")) ? ;
  b8:	f240 0000 	movw	r0, #0
  bc:	2101      	movs	r1, #1
  be:	f2c0 0000 	movt	r0, #0
  c2:	f7ff fffe 	bl	0 <_ZN6mynewt4Strn3new17hd3927fe713482c61E>
  c6:	e9cd 0104 	strd	r0, r1, [sp, #16]
  ca:	a802      	add	r0, sp, #8
  cc:	a904      	add	r1, sp, #16
  ce:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network16init_server_post17h27f63ed9509825d3E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  d2:	9802      	ldr	r0, [sp, #8]
  d4:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17h66b8c89222084710E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:76
  d6:	2901      	cmp	r1, #1
  d8:	d107      	bne.n	ea <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0xea>
  da:	9803      	ldr	r0, [sp, #12]
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:94
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
  dc:	3006      	adds	r0, #6
  de:	f000 808c 	beq.w	1fa <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x1fa>
  e2:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:102
}
  e4:	b007      	add	sp, #28
  e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
_ZN3app11app_network16send_sensor_data17h66b8c89222084710E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:77
    if !rc { return Err(MynewtError::SYS_EAGAIN); }  //  If network transport not ready, tell caller (Sensor Listener) to try again later.
  ea:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  ee:	f000 8084 	beq.w	1fa <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x1fa>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:80

    //  Compose the CoAP Payload using the coap!() macro.
    let _payload = coap!(
  f2:	f240 0500 	movw	r5, #0
  f6:	f240 0100 	movw	r1, #0
  fa:	f240 0300 	movw	r3, #0
  fe:	f2c0 0500 	movt	r5, #0
 102:	f04f 0804 	mov.w	r8, #4
 106:	f2c0 0100 	movt	r1, #0
 10a:	f2c0 0300 	movt	r3, #0
 10e:	4628      	mov	r0, r5
 110:	2204      	movs	r2, #4
 112:	f8cd 8000 	str.w	r8, [sp]
 116:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h276b4097dd5ff58dE>
 11a:	4606      	mov	r6, r0
 11c:	4628      	mov	r0, r5
 11e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hb62da92cb21c0672E>
 122:	4631      	mov	r1, r6
 124:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 128:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 12c:	2c01      	cmp	r4, #1
 12e:	d139      	bne.n	1a4 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x1a4>
 130:	f240 0000 	movw	r0, #0
 134:	2101      	movs	r1, #1
 136:	f2c0 0000 	movt	r0, #0
 13a:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 13e:	f8cd 8000 	str.w	r8, [sp]
 142:	f240 0800 	movw	r8, #0
 146:	f240 0300 	movw	r3, #0
 14a:	460f      	mov	r7, r1
 14c:	f240 0100 	movw	r1, #0
 150:	f2c0 0800 	movt	r8, #0
 154:	4606      	mov	r6, r0
 156:	f2c0 0100 	movt	r1, #0
 15a:	f2c0 0300 	movt	r3, #0
 15e:	4640      	mov	r0, r8
 160:	220c      	movs	r2, #12
 162:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h276b4097dd5ff58dE>
 166:	4605      	mov	r5, r0
 168:	4640      	mov	r0, r8
 16a:	4631      	mov	r1, r6
 16c:	463a      	mov	r2, r7
 16e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 172:	4604      	mov	r4, r0
 174:	4640      	mov	r0, r8
 176:	4631      	mov	r1, r6
 178:	463a      	mov	r2, r7
 17a:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hf8908a5278c4cf14E>
 17e:	4602      	mov	r2, r0
 180:	4628      	mov	r0, r5
 182:	4621      	mov	r1, r4
 184:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 188:	4601      	mov	r1, r0
 18a:	4640      	mov	r0, r8
 18c:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h4fc63e9e40c0702cE>
 190:	4628      	mov	r0, r5
 192:	464a      	mov	r2, r9
 194:	2300      	movs	r3, #0
 196:	f7ff fffe 	bl	0 <cbor_encode_int>
 19a:	4601      	mov	r1, r0
 19c:	4640      	mov	r0, r8
 19e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h4fc63e9e40c0702cE>
 1a2:	e006      	b.n	10 <_ZN6mynewt8encoding12coap_context12COAP_CONTEXT17h5e91d8ef2e33c9a1E+0x10>
 1a4:	f240 0000 	movw	r0, #0
 1a8:	2101      	movs	r1, #1
 1aa:	f2c0 0000 	movt	r0, #0
 1ae:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext4fail17h68cffd9b539196daE>
 1b2:	f240 0400 	movw	r4, #0
 1b6:	f240 0100 	movw	r1, #0
 1ba:	f240 0300 	movw	r3, #0
 1be:	2004      	movs	r0, #4
 1c0:	f2c0 0400 	movt	r4, #0
 1c4:	9000      	str	r0, [sp, #0]
 1c6:	f2c0 0100 	movt	r1, #0
 1ca:	f2c0 0300 	movt	r3, #0
 1ce:	4620      	mov	r0, r4
 1d0:	2204      	movs	r2, #4
 1d2:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h276b4097dd5ff58dE>
 1d6:	4605      	mov	r5, r0
 1d8:	4620      	mov	r0, r4
 1da:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hb62da92cb21c0672E>
 1de:	4629      	mov	r1, r5
 1e0:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 1e4:	a804      	add	r0, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:100
    );

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 1e6:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network14do_server_post17h63b4208c05d74765E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
 1ea:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17h66b8c89222084710E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:100
 1ee:	2801      	cmp	r0, #1
 1f0:	d109      	bne.n	206 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x206>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 1f2:	9805      	ldr	r0, [sp, #20]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:94
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 1f4:	3006      	adds	r0, #6
 1f6:	f47f af74 	bne.w	e2 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0xe2>
_ZN3app8app_base13console_print17h1db64f4bd159062eE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
 1fa:	f240 0000 	movw	r0, #0
 1fe:	2116      	movs	r1, #22
 200:	f2c0 0000 	movt	r0, #0
 204:	e004      	b.n	c <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0xc>
 206:	f240 0000 	movw	r0, #0
 20a:	214b      	movs	r1, #75	; 0x4b
 20c:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 210:	f7ff fffe 	bl	0 <console_buffer>
 214:	f7ff fffe 	bl	0 <console_flush>
 218:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:102
}
 21a:	b007      	add	sp, #28
 21c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:80
    assert!(unsafe { !is_null_sensor(sensor) });
 220:	f240 0000 	movw	r0, #0
 224:	f2c0 0000 	movt	r0, #0
 228:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 22c:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:84
    if let SensorValueType::None = sensor_value.val { assert!(false); }  //  Invalid type
 22e:	f240 0000 	movw	r0, #0
 232:	f2c0 0000 	movt	r0, #0
 236:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 23a:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor15get_temperature17h6296b9e58d842b05E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:116
            assert!(rc == 0);
 23c:	f240 0000 	movw	r0, #0
 240:	f2c0 0000 	movt	r0, #0
 244:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 248:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:129
            assert!(rc == 0);
 24a:	f240 0000 	movw	r0, #0
 24e:	f2c0 0000 	movt	r0, #0
 252:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 256:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:50
use crate::app_base::*;             //  Import `app_base.rs` for common declarations

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:56
    //  Initialise the Mynewt packages and BME280 / temp_stm32 temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    unsafe { app_base::rust_sysinit(); console_flush() };
   2:	f7ff fffe 	bl	0 <rust_sysinit>
   6:	f7ff fffe 	bl	0 <console_flush>
_ZN3app8app_base13console_print17h1db64f4bd159062eE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:18
   a:	f240 0000 	movw	r0, #0
   e:	210f      	movs	r1, #15
  10:	f2c0 0000 	movt	r0, #0
  14:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:19
        console_flush();  //  TODO: Remove this.
  18:	f7ff fffe 	bl	0 <console_flush>
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:52
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  1c:	f240 0000 	movw	r0, #0
  20:	f242 7110 	movw	r1, #10000	; 0x2710
  24:	f2c0 0000 	movt	r0, #0
  28:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h7c5e0a202348e33cE>
  2c:	2801      	cmp	r0, #1
  2e:	d147      	bne.n	c0 <main+0xc0>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, unsafe { null_sensor() }) ? ;
  30:	f7ff fffe 	bl	0 <null_sensor>
  34:	f240 0100 	movw	r1, #0
  38:	4602      	mov	r2, r0
  3a:	4668      	mov	r0, sp
  3c:	f2c0 0100 	movt	r1, #0
  40:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17hc658a5853b69921dE>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h43143ffffefcd0f1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  44:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
  48:	2801      	cmp	r0, #1
  4a:	d017      	beq.n	7c <main+0x7c>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:56
    assert!(unsafe{ !is_null_sensor(sensor) });
  4c:	4620      	mov	r0, r4
  4e:	f7ff fffe 	bl	0 <is_null_sensor>
  52:	2800      	cmp	r0, #0
  54:	d145      	bne.n	e2 <main+0xe2>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:61
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  56:	f240 0000 	movw	r0, #0
  5a:	f2c0 0000 	movt	r0, #0
  5e:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor10as_untyped17hc683efc51e7df2deE>
  62:	2100      	movs	r1, #0
  64:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:66
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  68:	9101      	str	r1, [sp, #4]
  6a:	9200      	str	r2, [sp, #0]
  6c:	9104      	str	r1, [sp, #16]
  6e:	e9cd 0102 	strd	r0, r1, [sp, #8]
  72:	4669      	mov	r1, sp
  74:	4620      	mov	r0, r4
  76:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor17register_listener17he319e84e05fa897bE>
  7a:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  7c:	2c01      	cmp	r4, #1
  7e:	d120      	bne.n	c2 <main+0xc2>
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:63
    //  Starting polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  80:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network22start_server_transport17he5c189d769aa6683E>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  84:	2801      	cmp	r0, #1
  86:	d124      	bne.n	d2 <main+0xd2>
main():
  88:	466c      	mov	r4, sp
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:69
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  8a:	4620      	mov	r0, r4
  8c:	f7ff fffe 	bl	0 <_ZN6mynewt6kernel2os15eventq_dflt_get17hb17cddfc29115d4fE>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  90:	9800      	ldr	r0, [sp, #0]
  92:	2801      	cmp	r0, #1
  94:	d00c      	beq.n	b0 <main+0xb0>
  96:	9801      	ldr	r0, [sp, #4]
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:68
        os::eventq_run(               //  Processing events...
  98:	f7ff fffe 	bl	0 <_ZN6mynewt6kernel2os10eventq_run17h49917a2d6a4028eaE>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  9c:	2801      	cmp	r0, #1
  9e:	d0f4      	beq.n	8a <main+0x8a>
main():
  a0:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  a2:	f240 0000 	movw	r0, #0
  a6:	f2c0 0000 	movt	r0, #0
  aa:	f7ff fffe 	bl	0 <main>
  ae:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  b0:	9901      	ldr	r1, [sp, #4]
  b2:	f240 0000 	movw	r0, #0
  b6:	f2c0 0000 	movt	r0, #0
  ba:	f7ff fffe 	bl	0 <main>
  be:	defe      	udf	#254	; 0xfe
main():
  c0:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  c2:	f240 0000 	movw	r0, #0
  c6:	4621      	mov	r1, r4
  c8:	f2c0 0000 	movt	r0, #0
  cc:	f7ff fffe 	bl	0 <main>
  d0:	defe      	udf	#254	; 0xfe
main():
  d2:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  d4:	f240 0000 	movw	r0, #0
  d8:	f2c0 0000 	movt	r0, #0
  dc:	f7ff fffe 	bl	0 <main>
  e0:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:56
    assert!(unsafe{ !is_null_sensor(sensor) });
  e2:	f240 0000 	movw	r0, #0
  e6:	f2c0 0000 	movt	r0, #0
  ea:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  ee:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <_ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E>
   4:	b338      	cbz	r0, 56 <rust_begin_unwind+0x56>
   6:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let file = location.file();
   8:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4file17h94cc6af18de736c4E>
   c:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        let line = location.line();
   e:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let file = location.file();
  10:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        let line = location.line();
  12:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4line17h3ffc63f14d0a6636E>
  16:	4604      	mov	r4, r0
_ZN3app8app_base13console_print17h1db64f4bd159062eE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:19
        console_flush();  //  TODO: Remove this.
  26:	f7ff fffe 	bl	0 <console_flush>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:84
        console_print(b"panic at ");
        unsafe { console_buffer(file.as_ptr(), file.len() as u32) }
  2a:	4628      	mov	r0, r5
  2c:	4631      	mov	r1, r6
  2e:	f7ff fffe 	bl	0 <console_buffer>
_ZN3app8app_base13console_print17h1db64f4bd159062eE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  32:	f240 0000 	movw	r0, #0
  36:	2108      	movs	r1, #8
  38:	f2c0 0000 	movt	r0, #0
  3c:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:19
        console_flush();  //  TODO: Remove this.
  40:	f7ff fffe 	bl	0 <console_flush>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:86
        console_print(b" line 0x");
        unsafe { console_printhex(line as u8) }  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  44:	b2e0      	uxtb	r0, r4
  46:	f7ff fffe 	bl	0 <console_printhex>
_ZN3app8app_base13console_print17h1db64f4bd159062eE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  4a:	f240 0000 	movw	r0, #0
  4e:	2101      	movs	r1, #1
  50:	f2c0 0000 	movt	r0, #0
  54:	e004      	b.n	c <rust_begin_unwind+0xc>
  56:	f240 0000 	movw	r0, #0
  5a:	2112      	movs	r1, #18
  5c:	f2c0 0000 	movt	r0, #0
rust_begin_unwind():
  60:	f7ff fffe 	bl	0 <console_buffer>
  64:	f7ff fffe 	bl	0 <console_flush>
  68:	f7ff fffe 	bl	0 <console_flush>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  6c:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:96
        unsafe { console_flush() }
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  70:	e7fe      	b.n	70 <rust_begin_unwind+0x70>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.bc.z: File format not recognized
