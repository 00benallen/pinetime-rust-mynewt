//!  Contains Rust Bindings for Mynewt C API, generated by `bindgen`
#![no_std]                   //  Don't link with standard Rust library, which is not compatible with embedded systems
#![feature(trace_macros)]    //  Allow macro tracing: `trace_macros!(true)`
#![feature(concat_idents)]   //  Allow `concat_idents!()` macro used in `coap!()` macro
#![feature(const_transmute)] //  Allow `transmute` for initialising Mynewt structs

#[macro_use]
pub mod macros;         //  Export `macros.rs` as Rust module `macros`. Contains Mynewt macros.
pub mod tinycbor;       //  Export `tinycbor.rs` as Rust module `tinycbor`. Contains `tinycbor` bindings.
pub mod os;             //  Export `os.rs` as Rust module `os`. Contains Mynewt `kernel/os` bindings.
pub mod sensor;         //  Export `sensor.rs` as Rust module `sensor`.  Contains Mynewt `hw/sensor` bindings.
pub mod sensor_network; //  Export `sensor_network.rs` as Rust module `sensor_network`  Contains Mynewt `libs/sensor_network` bindings.

///  Defined in repos/apache-mynewt-core/net/oic/src/api/oc_rep.c
#[link(name = "net_oic")]
extern {
    pub static mut g_encoder: tinycbor::CborEncoder;
    pub static mut root_map: tinycbor::CborEncoder;
}
