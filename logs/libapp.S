In archive target\thumbv7m-none-eabi\release\libapp.rlib:

app-9520d02fe986fe70.app.cpk8ab4b-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.cpk8ab4b-cgu.0
0000109c l       .debug_str	00000000 
00003104 l       .debug_str	00000000 
000030f7 l       .debug_str	00000000 
00003198 l       .debug_str	00000000 
000030f2 l       .debug_str	00000000 
000030ec l       .debug_str	00000000 
000030ea l       .debug_str	00000000 
000030e4 l       .debug_str	00000000 
00003180 l       .debug_str	00000000 
000030de l       .debug_str	00000000 
000030cc l       .debug_str	00000000 
000030c7 l       .debug_str	00000000 
000030b4 l       .debug_str	00000000 
00003078 l       .debug_str	00000000 
00003076 l       .debug_str	00000000 
0000304b l       .debug_str	00000000 
00003018 l       .debug_str	00000000 
0000300f l       .debug_str	00000000 
00002fc5 l       .debug_str	00000000 
00002fc2 l       .debug_str	00000000 
00002fbd l       .debug_str	00000000 
00002f93 l       .debug_str	00000000 
00002f8f l       .debug_str	00000000 
00002f86 l       .debug_str	00000000 
00002f3f l       .debug_str	00000000 
00002eff l       .debug_str	00000000 
00002eb7 l       .debug_str	00000000 
00003176 l       .debug_str	00000000 
00002e94 l       .debug_str	00000000 
00002e8a l       .debug_str	00000000 
00002e72 l       .debug_str	00000000 
00002e4b l       .debug_str	00000000 
00002e41 l       .debug_str	00000000 
00002e36 l       .debug_str	00000000 
00002e2d l       .debug_str	00000000 
00002e24 l       .debug_str	00000000 
0000316d l       .debug_str	00000000 
00002e1a l       .debug_str	00000000 
00002e18 l       .debug_str	00000000 
00002e16 l       .debug_str	00000000 
00002e12 l       .debug_str	00000000 
00002deb l       .debug_str	00000000 
00003169 l       .debug_str	00000000 
00003164 l       .debug_str	00000000 
0000315f l       .debug_str	00000000 
00003156 l       .debug_str	00000000 
00003138 l       .debug_str	00000000 
00003122 l       .debug_str	00000000 
0000311a l       .debug_str	00000000 
00003115 l       .debug_str	00000000 
00003111 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000074 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000091 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000ac l       .debug_str	00000000 
000000b6 l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000111 l       .debug_str	00000000 
00000114 l       .debug_str	00000000 
00000118 l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
0000012e l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
0000014d l       .debug_str	00000000 
00000151 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
0000016f l       .debug_str	00000000 
0000017c l       .debug_str	00000000 
00000187 l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
0000019a l       .debug_str	00000000 
000001a5 l       .debug_str	00000000 
000001af l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001d2 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001f9 l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
00000210 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000220 l       .debug_str	00000000 
0000022b l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
0000023d l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
0000024d l       .debug_str	00000000 
00000252 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
0000026d l       .debug_str	00000000 
00000271 l       .debug_str	00000000 
00000276 l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
00000284 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
0000028b l       .debug_str	00000000 
00000294 l       .debug_str	00000000 
0000029b l       .debug_str	00000000 
000002a0 l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002ab l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002bb l       .debug_str	00000000 
000002be l       .debug_str	00000000 
000002c4 l       .debug_str	00000000 
000002ce l       .debug_str	00000000 
000002d6 l       .debug_str	00000000 
000002dc l       .debug_str	00000000 
000002e2 l       .debug_str	00000000 
000002ed l       .debug_str	00000000 
000002f6 l       .debug_str	00000000 
00000319 l       .debug_str	00000000 
00000338 l       .debug_str	00000000 
0000033a l       .debug_str	00000000 
0000033f l       .debug_str	00000000 
00000366 l       .debug_str	00000000 
0000036b l       .debug_str	00000000 
00000371 l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
0000037a l       .debug_str	00000000 
00000389 l       .debug_str	00000000 
00000390 l       .debug_str	00000000 
00000394 l       .debug_str	00000000 
0000039d l       .debug_str	00000000 
000003a5 l       .debug_str	00000000 
000003ad l       .debug_str	00000000 
000003b4 l       .debug_str	00000000 
000003c8 l       .debug_str	00000000 
000003d4 l       .debug_str	00000000 
000003e0 l       .debug_str	00000000 
000003f9 l       .debug_str	00000000 
000003fe l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000419 l       .debug_str	00000000 
00000427 l       .debug_str	00000000 
0000042b l       .debug_str	00000000 
00000436 l       .debug_str	00000000 
0000043d l       .debug_str	00000000 
00000443 l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
0000044b l       .debug_str	00000000 
00000453 l       .debug_str	00000000 
0000046a l       .debug_str	00000000 
0000048e l       .debug_str	00000000 
000004aa l       .debug_str	00000000 
000004b4 l       .debug_str	00000000 
000004ce l       .debug_str	00000000 
0000052c l       .debug_str	00000000 
00000537 l       .debug_str	00000000 
00000554 l       .debug_str	00000000 
0000056d l       .debug_str	00000000 
00000577 l       .debug_str	00000000 
000005a9 l       .debug_str	00000000 
000005b0 l       .debug_str	00000000 
000005e9 l       .debug_str	00000000 
000005f9 l       .debug_str	00000000 
000005fc l       .debug_str	00000000 
00000603 l       .debug_str	00000000 
00000607 l       .debug_str	00000000 
0000060b l       .debug_str	00000000 
00000610 l       .debug_str	00000000 
00000616 l       .debug_str	00000000 
0000061a l       .debug_str	00000000 
0000062a l       .debug_str	00000000 
00000636 l       .debug_str	00000000 
00000642 l       .debug_str	00000000 
00000659 l       .debug_str	00000000 
00000665 l       .debug_str	00000000 
00000669 l       .debug_str	00000000 
00000676 l       .debug_str	00000000 
0000069a l       .debug_str	00000000 
000006a6 l       .debug_str	00000000 
000006b4 l       .debug_str	00000000 
000006cb l       .debug_str	00000000 
000006e0 l       .debug_str	00000000 
000006e3 l       .debug_str	00000000 
00000703 l       .debug_str	00000000 
0000070c l       .debug_str	00000000 
00000715 l       .debug_str	00000000 
0000071e l       .debug_str	00000000 
0000072a l       .debug_str	00000000 
00000732 l       .debug_str	00000000 
0000073a l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
00000763 l       .debug_str	00000000 
00000774 l       .debug_str	00000000 
00000780 l       .debug_str	00000000 
000007bb l       .debug_str	00000000 
000007cc l       .debug_str	00000000 
000007ce l       .debug_str	00000000 
000007f6 l       .debug_str	00000000 
00000817 l       .debug_str	00000000 
0000081c l       .debug_str	00000000 
00000824 l       .debug_str	00000000 
0000082d l       .debug_str	00000000 
00000836 l       .debug_str	00000000 
0000083d l       .debug_str	00000000 
00000843 l       .debug_str	00000000 
000008a5 l       .debug_str	00000000 
0000090f l       .debug_str	00000000 
0000091d l       .debug_str	00000000 
00000931 l       .debug_str	00000000 
00000966 l       .debug_str	00000000 
00000971 l       .debug_str	00000000 
00000977 l       .debug_str	00000000 
00000983 l       .debug_str	00000000 
000009b0 l       .debug_str	00000000 
000009b4 l       .debug_str	00000000 
000009c6 l       .debug_str	00000000 
000009d5 l       .debug_str	00000000 
000009e9 l       .debug_str	00000000 
000009f2 l       .debug_str	00000000 
000009f6 l       .debug_str	00000000 
00000a66 l       .debug_str	00000000 
00000a94 l       .debug_str	00000000 
00000abe l       .debug_str	00000000 
00000ac3 l       .debug_str	00000000 
00000b02 l       .debug_str	00000000 
00000b18 l       .debug_str	00000000 
00000b1e l       .debug_str	00000000 
00000b25 l       .debug_str	00000000 
00000b28 l       .debug_str	00000000 
00000b34 l       .debug_str	00000000 
00000b3c l       .debug_str	00000000 
00000b96 l       .debug_str	00000000 
00000bf8 l       .debug_str	00000000 
00000c03 l       .debug_str	00000000 
00000c4a l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000ce0 l       .debug_str	00000000 
00000d25 l       .debug_str	00000000 
00000d2e l       .debug_str	00000000 
00000d3e l       .debug_str	00000000 
00000d46 l       .debug_str	00000000 
00000d9b l       .debug_str	00000000 
00000df8 l       .debug_str	00000000 
00000e04 l       .debug_str	00000000 
00000e0d l       .debug_str	00000000 
00000e19 l       .debug_str	00000000 
00000e25 l       .debug_str	00000000 
00000e2e l       .debug_str	00000000 
00000e36 l       .debug_str	00000000 
00000e3e l       .debug_str	00000000 
00000e48 l       .debug_str	00000000 
00000e5d l       .debug_str	00000000 
00000e64 l       .debug_str	00000000 
00000e84 l       .debug_str	00000000 
00000e8b l       .debug_str	00000000 
00000e93 l       .debug_str	00000000 
00000e9d l       .debug_str	00000000 
00000ea8 l       .debug_str	00000000 
00000eb1 l       .debug_str	00000000 
00000ebc l       .debug_str	00000000 
00000ec8 l       .debug_str	00000000 
00000ecc l       .debug_str	00000000 
00000ed5 l       .debug_str	00000000 
00000edc l       .debug_str	00000000 
00000ee4 l       .debug_str	00000000 
00000eec l       .debug_str	00000000 
00000ef6 l       .debug_str	00000000 
00000efc l       .debug_str	00000000 
00000f03 l       .debug_str	00000000 
00000f0a l       .debug_str	00000000 
00000f37 l       .debug_str	00000000 
00000f6c l       .debug_str	00000000 
00000f72 l       .debug_str	00000000 
00000f78 l       .debug_str	00000000 
00000f87 l       .debug_str	00000000 
00000f97 l       .debug_str	00000000 
00000fa7 l       .debug_str	00000000 
00000faf l       .debug_str	00000000 
00000fd8 l       .debug_str	00000000 
00001036 l       .debug_str	00000000 
00002dab l       .debug_str	00000000 
000010a3 l       .debug_str	00000000 
000010ab l       .debug_str	00000000 
000010b4 l       .debug_str	00000000 
000010d2 l       .debug_str	00000000 
000010e2 l       .debug_str	00000000 
000010f0 l       .debug_str	00000000 
000010fb l       .debug_str	00000000 
00001108 l       .debug_str	00000000 
00001117 l       .debug_str	00000000 
0000112d l       .debug_str	00000000 
00001137 l       .debug_str	00000000 
00001140 l       .debug_str	00000000 
00001149 l       .debug_str	00000000 
0000116f l       .debug_str	00000000 
00001185 l       .debug_str	00000000 
00001190 l       .debug_str	00000000 
000011a6 l       .debug_str	00000000 
000011ae l       .debug_str	00000000 
000011cf l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000011eb l       .debug_str	00000000 
000011f3 l       .debug_str	00000000 
000011fc l       .debug_str	00000000 
00001205 l       .debug_str	00000000 
0000120e l       .debug_str	00000000 
00001216 l       .debug_str	00000000 
0000121d l       .debug_str	00000000 
00001229 l       .debug_str	00000000 
00001234 l       .debug_str	00000000 
0000123c l       .debug_str	00000000 
00001244 l       .debug_str	00000000 
000012c0 l       .debug_str	00000000 
00001344 l       .debug_str	00000000 
00001440 l       .debug_str	00000000 
00001544 l       .debug_str	00000000 
00001552 l       .debug_str	00000000 
0000155d l       .debug_str	00000000 
00001567 l       .debug_str	00000000 
00001572 l       .debug_str	00000000 
000015a0 l       .debug_str	00000000 
0000161b l       .debug_str	00000000 
0000169e l       .debug_str	00000000 
000016ac l       .debug_str	00000000 
0000170b l       .debug_str	00000000 
00001772 l       .debug_str	00000000 
00001788 l       .debug_str	00000000 
00001798 l       .debug_str	00000000 
000017a7 l       .debug_str	00000000 
000017ab l       .debug_str	00000000 
000017b1 l       .debug_str	00000000 
000017b7 l       .debug_str	00000000 
000017bd l       .debug_str	00000000 
000017cd l       .debug_str	00000000 
00001800 l       .debug_str	00000000 
00001840 l       .debug_str	00000000 
00001888 l       .debug_str	00000000 
0000188c l       .debug_str	00000000 
00001892 l       .debug_str	00000000 
00001898 l       .debug_str	00000000 
0000189e l       .debug_str	00000000 
000018b0 l       .debug_str	00000000 
000018e5 l       .debug_str	00000000 
00001927 l       .debug_str	00000000 
00001971 l       .debug_str	00000000 
00001975 l       .debug_str	00000000 
0000197b l       .debug_str	00000000 
00001981 l       .debug_str	00000000 
00001987 l       .debug_str	00000000 
00001999 l       .debug_str	00000000 
000019ce l       .debug_str	00000000 
00001a10 l       .debug_str	00000000 
00001a5a l       .debug_str	00000000 
00001a5e l       .debug_str	00000000 
00001a64 l       .debug_str	00000000 
00001a6a l       .debug_str	00000000 
00001a70 l       .debug_str	00000000 
00001a76 l       .debug_str	00000000 
00001a87 l       .debug_str	00000000 
00001abb l       .debug_str	00000000 
00001afc l       .debug_str	00000000 
00001b45 l       .debug_str	00000000 
00001b4a l       .debug_str	00000000 
00001b4f l       .debug_str	00000000 
00001b53 l       .debug_str	00000000 
00001b59 l       .debug_str	00000000 
00001b5f l       .debug_str	00000000 
00001b65 l       .debug_str	00000000 
00001b76 l       .debug_str	00000000 
00001baa l       .debug_str	00000000 
00001beb l       .debug_str	00000000 
00001c34 l       .debug_str	00000000 
00001c38 l       .debug_str	00000000 
00001c6c l       .debug_str	00000000 
00001cad l       .debug_str	00000000 
00001cf6 l       .debug_str	00000000 
00001cfb l       .debug_str	00000000 
00001cff l       .debug_str	00000000 
00001d08 l       .debug_str	00000000 
00001d0f l       .debug_str	00000000 
00001d17 l       .debug_str	00000000 
00001d29 l       .debug_str	00000000 
00001d5e l       .debug_str	00000000 
00001da0 l       .debug_str	00000000 
00001dea l       .debug_str	00000000 
00001dee l       .debug_str	00000000 
00001df4 l       .debug_str	00000000 
00001dfa l       .debug_str	00000000 
00001e00 l       .debug_str	00000000 
00001e06 l       .debug_str	00000000 
00001e0e l       .debug_str	00000000 
00001e1c l       .debug_str	00000000 
00001e2b l       .debug_str	00000000 
00001e3c l       .debug_str	00000000 
00001e47 l       .debug_str	00000000 
00001e52 l       .debug_str	00000000 
00001e5d l       .debug_str	00000000 
00001e64 l       .debug_str	00000000 
00001e87 l       .debug_str	00000000 
00001e99 l       .debug_str	00000000 
00001ece l       .debug_str	00000000 
00001f10 l       .debug_str	00000000 
00001f5a l       .debug_str	00000000 
00001f5e l       .debug_str	00000000 
00001f68 l       .debug_str	00000000 
00001f7a l       .debug_str	00000000 
00001faf l       .debug_str	00000000 
00001ff1 l       .debug_str	00000000 
0000203b l       .debug_str	00000000 
00002040 l       .debug_str	00000000 
0000204a l       .debug_str	00000000 
0000205c l       .debug_str	00000000 
00002091 l       .debug_str	00000000 
000020d3 l       .debug_str	00000000 
0000211d l       .debug_str	00000000 
00002131 l       .debug_str	00000000 
00002135 l       .debug_str	00000000 
00002143 l       .debug_str	00000000 
00002153 l       .debug_str	00000000 
0000215c l       .debug_str	00000000 
00002167 l       .debug_str	00000000 
00002176 l       .debug_str	00000000 
0000218b l       .debug_str	00000000 
000021bc l       .debug_str	00000000 
00002259 l       .debug_str	00000000 
000022fe l       .debug_str	00000000 
00002309 l       .debug_str	00000000 
00002312 l       .debug_str	00000000 
00002333 l       .debug_str	00000000 
00002346 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
000023ff l       .debug_str	00000000 
0000248a l       .debug_str	00000000 
000024a6 l       .debug_str	00000000 
000024f2 l       .debug_str	00000000 
00002546 l       .debug_str	00000000 
00002563 l       .debug_str	00000000 
00002577 l       .debug_str	00000000 
000025c3 l       .debug_str	00000000 
00002617 l       .debug_str	00000000 
0000262d l       .debug_str	00000000 
00002641 l       .debug_str	00000000 
00002688 l       .debug_str	00000000 
000026d7 l       .debug_str	00000000 
000026e0 l       .debug_str	00000000 
000026ee l       .debug_str	00000000 
0000271f l       .debug_str	00000000 
00002725 l       .debug_str	00000000 
0000272d l       .debug_str	00000000 
00002734 l       .debug_str	00000000 
0000273c l       .debug_str	00000000 
00002747 l       .debug_str	00000000 
0000274f l       .debug_str	00000000 
0000275e l       .debug_str	00000000 
00002762 l       .debug_str	00000000 
0000276d l       .debug_str	00000000 
00002779 l       .debug_str	00000000 
00002784 l       .debug_str	00000000 
00002795 l       .debug_str	00000000 
0000279b l       .debug_str	00000000 
000027a3 l       .debug_str	00000000 
000027aa l       .debug_str	00000000 
000027b4 l       .debug_str	00000000 
000027bc l       .debug_str	00000000 
000027c4 l       .debug_str	00000000 
000027e6 l       .debug_str	00000000 
000027f1 l       .debug_str	00000000 
000027fd l       .debug_str	00000000 
00002805 l       .debug_str	00000000 
0000280e l       .debug_str	00000000 
00002819 l       .debug_str	00000000 
00002820 l       .debug_str	00000000 
0000282b l       .debug_str	00000000 
00002836 l       .debug_str	00000000 
00002846 l       .debug_str	00000000 
00002850 l       .debug_str	00000000 
00002856 l       .debug_str	00000000 
00002878 l       .debug_str	00000000 
000028b0 l       .debug_str	00000000 
000028f0 l       .debug_str	00000000 
000028f7 l       .debug_str	00000000 
000028ff l       .debug_str	00000000 
00002916 l       .debug_str	00000000 
0000291f l       .debug_str	00000000 
0000292f l       .debug_str	00000000 
0000293e l       .debug_str	00000000 
00002946 l       .debug_str	00000000 
0000294d l       .debug_str	00000000 
00002955 l       .debug_str	00000000 
00002973 l       .debug_str	00000000 
00002983 l       .debug_str	00000000 
000029b6 l       .debug_str	00000000 
000029cb l       .debug_str	00000000 
000029d4 l       .debug_str	00000000 
00002a31 l       .debug_str	00000000 
00002a96 l       .debug_str	00000000 
00002aa0 l       .debug_str	00000000 
00002ab0 l       .debug_str	00000000 
00002ac5 l       .debug_str	00000000 
00002acd l       .debug_str	00000000 
00002b31 l       .debug_str	00000000 
00002b9d l       .debug_str	00000000 
00002ba4 l       .debug_str	00000000 
00002bac l       .debug_str	00000000 
00002bca l       .debug_str	00000000 
00002bda l       .debug_str	00000000 
00002c0d l       .debug_str	00000000 
00002c22 l       .debug_str	00000000 
00002c35 l       .debug_str	00000000 
00002c4a l       .debug_str	00000000 
00002c51 l       .debug_str	00000000 
00002c66 l       .debug_str	00000000 
00002c90 l       .debug_str	00000000 
00002c99 l       .debug_str	00000000 
00002d09 l       .debug_str	00000000 
00002d5c l       .debug_str	00000000 
00003109 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000019 .Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000004 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.23	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.26	00000005 .Lanon.3ed011473997af99b525cde47c9eaaac.26
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.27	0000004b .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.32	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.33	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.34
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.35	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.35
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000f .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h65a1f7573ec69852E	00000008 _ZN3app10app_sensor13SENSOR_DEVICE17h65a1f7573ec69852E
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E	000003d2 _ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E	0000000c _ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E
00000000 l     F .text._ZN4core6result13unwrap_failed17h70f379387ad3a852E	00000050 _ZN4core6result13unwrap_failed17h70f379387ad3a852E
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h70f379387ad3a852E	00000000 .text._ZN4core6result13unwrap_failed17h70f379387ad3a852E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h65a1f7573ec69852E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h65a1f7573ec69852E
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h8845cd1bde16499dE
00000000         *UND*	00000000 _ZN4core5panic8Location4file17ha9ce911e26883425E
00000000         *UND*	00000000 _ZN4core5panic8Location4line17h997c0352f671f211E
00000000         *UND*	00000000 _ZN4core5panic9PanicInfo8location17h122f9d519f4a246bE
00000000         *UND*	00000000 _ZN4core9panicking5panic17h138a849f37d3ac2dE
00000000         *UND*	00000000 _ZN4core9panicking9panic_fmt17hbfe32cf8392a510cE
00000000         *UND*	00000000 _ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17h5491a719a634f5cfE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor10as_untyped17h83128ccc8231d4a0E
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor17register_listener17ha5269b3027967e6cE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h120a6d01d88ba30aE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h7dd69905a3b7f7a6E
00000000         *UND*	00000000 _ZN6mynewt3sys7console5flush17h1dcb683b7bea3a79E
00000000         *UND*	00000000 _ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE
00000000         *UND*	00000000 _ZN6mynewt3sys7console6buffer17hdcbb1b64b1219e0dE
00000000         *UND*	00000000 _ZN6mynewt3sys7console8printhex17h2e2a147c20047838E
00000000         *UND*	00000000 _ZN6mynewt4Strn3new17h59058c5fcf019697E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network12prepare_post17h76cd3111832683b6E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network14do_server_post17h26ac10ece205a321E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network16init_server_post17h243fb9b2b2b78b44E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network22start_server_transport17h883c417d7c9da1f5E
00000000         *UND*	00000000 _ZN6mynewt6kernel2os10eventq_run17h1a13961f44fa3993E
00000000         *UND*	00000000 _ZN6mynewt6kernel2os15eventq_dflt_get17h5e66559059f6d8a1E
00000000         *UND*	00000000 _ZN6mynewt7sysinit17h4f3b13954addfd2dE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17hc3fa1cc96429c629E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hd585922d7725a650E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context12COAP_CONTEXT17h4b0466955a8c3012E
00000000         *UND*	00000000 _ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 cbor_encode_int
00000000         *UND*	00000000 cbor_encode_text_string
00000000         *UND*	00000000 cbor_encoder_close_container
00000000         *UND*	00000000 cbor_encoder_create_array
00000000         *UND*	00000000 cbor_encoder_create_map
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000 g     F .text.main	000000e8 main
00000000         *UND*	00000000 null_sensor
00000000 g     F .text.rust_begin_unwind	00000066 rust_begin_unwind



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E:

00000000 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc01aaa8ad908a263E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h8845cd1bde16499dE>

Disassembly of section .text._ZN4core6result13unwrap_failed17h70f379387ad3a852E:

00000000 <_ZN4core6result13unwrap_failed17h70f379387ad3a852E>:
_ZN4core6result13unwrap_failed17h70f379387ad3a852E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h70f379387ad3a852E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117h2beb9c2f0caa7216E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h70f379387ad3a852E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17hbfe32cf8392a510cE>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E:

00000000 <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E>:
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:73
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b087      	sub	sp, #28
   6:	4605      	mov	r5, r0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:75
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("Rust handle_sensor_data\n");
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:78
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { sensor::is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <is_null_sensor_data>
  1e:	b120      	cbz	r0, 2a <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0x2a>
  20:	f06f 0001 	mvn.w	r0, #1
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:101
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  24:	b007      	add	sp, #28
  26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
  2a:	4628      	mov	r0, r5
  2c:	f7ff fffe 	bl	0 <is_null_sensor>
  30:	2800      	cmp	r0, #0
  32:	f040 81b9 	bne.w	3a8 <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0x3a8>
  36:	2000      	movs	r0, #0
  38:	a904      	add	r1, sp, #16
_ZN3app10app_sensor15get_temperature17h4b0523761b93c672E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:113
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3a:	f88d 0014 	strb.w	r0, [sp, #20]
  3e:	9004      	str	r0, [sp, #16]
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:114
            let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <get_temp_raw_data>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:115
            assert!(rc == 0);
  46:	2800      	cmp	r0, #0
  48:	f040 81b5 	bne.w	3b6 <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0x3b6>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:118

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  4c:	f89d 0014 	ldrb.w	r0, [sp, #20]
  50:	2800      	cmp	r0, #0
  52:	f000 81b7 	beq.w	3c4 <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0x3c4>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:122

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  56:	f240 0000 	movw	r0, #0
  5a:	2119      	movs	r1, #25
  5c:	f2c0 0000 	movt	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:121
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  60:	f8dd 9010 	ldr.w	r9, [sp, #16]
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:122
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  64:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE>
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:51
///   {"key":"device", "value":"0102030405060708090a0b0c0d0e0f10"},
///   {"key":"t",      "value":1715}
/// ]}
/// ```
pub fn send_sensor_data(val: &SensorValue) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console::print("Rust send_sensor_data\n");
  68:	f240 0000 	movw	r0, #0
  6c:	2116      	movs	r1, #22
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:57
    if let SensorValueType::None = val.val { assert!(false); }

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post(strn!("")) ? ;
  76:	f240 0000 	movw	r0, #0
  7a:	2101      	movs	r1, #1
  7c:	f2c0 0000 	movt	r0, #0
  80:	f7ff fffe 	bl	0 <_ZN6mynewt4Strn3new17h59058c5fcf019697E>
  84:	e9cd 0104 	strd	r0, r1, [sp, #16]
  88:	a802      	add	r0, sp, #8
  8a:	a904      	add	r1, sp, #16
  8c:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network16init_server_post17h243fb9b2b2b78b44E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9f24eae1c4c05d5fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
  90:	9802      	ldr	r0, [sp, #8]
  92:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:57
  94:	2901      	cmp	r1, #1
  96:	d107      	bne.n	a8 <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0xa8>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9f24eae1c4c05d5fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
  98:	9803      	ldr	r0, [sp, #12]
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
  9a:	3006      	adds	r0, #6
  9c:	f000 816e 	beq.w	37c <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0x37c>
  a0:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:101
}
  a2:	b007      	add	sp, #28
  a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:58
    if !rc { return Err(MynewtError::SYS_EAGAIN); }  //  If network transport not ready, tell caller (Sensor Listener) to try again later.
  a8:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  ac:	f000 8166 	beq.w	37c <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0x37c>
  b0:	a804      	add	r0, sp, #16
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:62

    //  Compose the CoAP Payload using the coap!() macro.
    //  Select @json or @cbor To encode CoAP Payload in JSON or CBOR format.
    let _payload = coap!( @cbor {        
  b2:	213c      	movs	r1, #60	; 0x3c
  b4:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network12prepare_post17h76cd3111832683b6E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9f24eae1c4c05d5fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
  b8:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:62
  bc:	2801      	cmp	r0, #1
  be:	f000 8159 	beq.w	374 <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0x374>
  c2:	f240 0a00 	movw	sl, #0
  c6:	f240 0b00 	movw	fp, #0
  ca:	f240 0700 	movw	r7, #0
  ce:	2004      	movs	r0, #4
  d0:	f2c0 0b00 	movt	fp, #0
  d4:	f2c0 0700 	movt	r7, #0
  d8:	f2c0 0a00 	movt	sl, #0
  dc:	9000      	str	r0, [sp, #0]
  de:	4650      	mov	r0, sl
  e0:	4659      	mov	r1, fp
  e2:	2204      	movs	r2, #4
  e4:	463b      	mov	r3, r7
  e6:	f04f 0804 	mov.w	r8, #4
  ea:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
  ee:	4605      	mov	r5, r0
  f0:	4650      	mov	r0, sl
  f2:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hd585922d7725a650E>
  f6:	4629      	mov	r1, r5
  f8:	f04f 32ff 	mov.w	r2, #4294967295
  fc:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 100:	4601      	mov	r1, r0
 102:	4650      	mov	r0, sl
 104:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 108:	f240 0000 	movw	r0, #0
 10c:	2106      	movs	r1, #6
 10e:	f2c0 0000 	movt	r0, #0
 112:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE>
 116:	4605      	mov	r5, r0
 118:	460e      	mov	r6, r1
 11a:	4650      	mov	r0, sl
 11c:	4659      	mov	r1, fp
 11e:	2204      	movs	r2, #4
 120:	463b      	mov	r3, r7
 122:	f8cd 8000 	str.w	r8, [sp]
 126:	46b8      	mov	r8, r7
 128:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 12c:	4607      	mov	r7, r0
 12e:	4650      	mov	r0, sl
 130:	4629      	mov	r1, r5
 132:	4632      	mov	r2, r6
 134:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE>
 138:	4604      	mov	r4, r0
 13a:	4650      	mov	r0, sl
 13c:	4629      	mov	r1, r5
 13e:	4632      	mov	r2, r6
 140:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE>
 144:	4602      	mov	r2, r0
 146:	4638      	mov	r0, r7
 148:	4621      	mov	r1, r4
 14a:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 14e:	4601      	mov	r1, r0
 150:	4650      	mov	r0, sl
 152:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 156:	2004      	movs	r0, #4
 158:	4659      	mov	r1, fp
 15a:	9000      	str	r0, [sp, #0]
 15c:	4650      	mov	r0, sl
 15e:	2204      	movs	r2, #4
 160:	4643      	mov	r3, r8
 162:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 166:	f240 0700 	movw	r7, #0
 16a:	f240 0b00 	movw	fp, #0
 16e:	f2c0 0700 	movt	r7, #0
 172:	f2c0 0b00 	movt	fp, #0
 176:	4604      	mov	r4, r0
 178:	2506      	movs	r5, #6
 17a:	4650      	mov	r0, sl
 17c:	4659      	mov	r1, fp
 17e:	2206      	movs	r2, #6
 180:	463b      	mov	r3, r7
 182:	9500      	str	r5, [sp, #0]
 184:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE>
 188:	4601      	mov	r1, r0
 18a:	4620      	mov	r0, r4
 18c:	f04f 32ff 	mov.w	r2, #4294967295
 190:	f7ff fffe 	bl	0 <cbor_encoder_create_array>
 194:	4601      	mov	r1, r0
 196:	4650      	mov	r0, sl
 198:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 19c:	4650      	mov	r0, sl
 19e:	4659      	mov	r1, fp
 1a0:	2206      	movs	r2, #6
 1a2:	463b      	mov	r3, r7
 1a4:	9500      	str	r5, [sp, #0]
 1a6:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 1aa:	4604      	mov	r4, r0
 1ac:	2004      	movs	r0, #4
 1ae:	9000      	str	r0, [sp, #0]
 1b0:	4650      	mov	r0, sl
 1b2:	4659      	mov	r1, fp
 1b4:	2206      	movs	r2, #6
 1b6:	4643      	mov	r3, r8
 1b8:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11new_encoder17hbbb762fd5af10c4eE>
 1bc:	4601      	mov	r1, r0
 1be:	4620      	mov	r0, r4
 1c0:	f04f 32ff 	mov.w	r2, #4294967295
 1c4:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 1c8:	4601      	mov	r1, r0
 1ca:	4650      	mov	r0, sl
 1cc:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 1d0:	f240 0000 	movw	r0, #0
 1d4:	2103      	movs	r1, #3
 1d6:	f2c0 0000 	movt	r0, #0
 1da:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE>
 1de:	4604      	mov	r4, r0
 1e0:	f240 0000 	movw	r0, #0
 1e4:	460f      	mov	r7, r1
 1e6:	f2c0 0000 	movt	r0, #0
 1ea:	2101      	movs	r1, #1
 1ec:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE>
 1f0:	4605      	mov	r5, r0
 1f2:	2004      	movs	r0, #4
 1f4:	460e      	mov	r6, r1
 1f6:	9000      	str	r0, [sp, #0]
 1f8:	4650      	mov	r0, sl
 1fa:	4659      	mov	r1, fp
 1fc:	2206      	movs	r2, #6
 1fe:	4643      	mov	r3, r8
 200:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 204:	4680      	mov	r8, r0
 206:	4650      	mov	r0, sl
 208:	4621      	mov	r1, r4
 20a:	463a      	mov	r2, r7
 20c:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE>
 210:	4683      	mov	fp, r0
 212:	4650      	mov	r0, sl
 214:	4621      	mov	r1, r4
 216:	463a      	mov	r2, r7
 218:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE>
 21c:	4602      	mov	r2, r0
 21e:	4640      	mov	r0, r8
 220:	4659      	mov	r1, fp
 222:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 226:	4601      	mov	r1, r0
 228:	4650      	mov	r0, sl
 22a:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 22e:	4650      	mov	r0, sl
 230:	4629      	mov	r1, r5
 232:	4632      	mov	r2, r6
 234:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17hc3fa1cc96429c629E>
 238:	4604      	mov	r4, r0
 23a:	4650      	mov	r0, sl
 23c:	4629      	mov	r1, r5
 23e:	4632      	mov	r2, r6
 240:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE>
 244:	4602      	mov	r2, r0
 246:	4640      	mov	r0, r8
 248:	4621      	mov	r1, r4
 24a:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 24e:	4601      	mov	r1, r0
 250:	4650      	mov	r0, sl
 252:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 256:	f240 0000 	movw	r0, #0
 25a:	2105      	movs	r1, #5
 25c:	f2c0 0000 	movt	r0, #0
 260:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha5f34c2fd244506fE>
 264:	f240 0800 	movw	r8, #0
 268:	f240 0300 	movw	r3, #0
 26c:	4604      	mov	r4, r0
 26e:	2004      	movs	r0, #4
 270:	f2c0 0800 	movt	r8, #0
 274:	460d      	mov	r5, r1
 276:	9000      	str	r0, [sp, #0]
 278:	4650      	mov	r0, sl
 27a:	4641      	mov	r1, r8
 27c:	2206      	movs	r2, #6
 27e:	f2c0 0300 	movt	r3, #0
 282:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 286:	4606      	mov	r6, r0
 288:	4650      	mov	r0, sl
 28a:	4621      	mov	r1, r4
 28c:	462a      	mov	r2, r5
 28e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17hb016421119e995faE>
 292:	4607      	mov	r7, r0
 294:	4650      	mov	r0, sl
 296:	4621      	mov	r1, r4
 298:	462a      	mov	r2, r5
 29a:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hfe75f4597d7e29adE>
 29e:	4602      	mov	r2, r0
 2a0:	4630      	mov	r0, r6
 2a2:	4639      	mov	r1, r7
 2a4:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 2a8:	4601      	mov	r1, r0
 2aa:	4650      	mov	r0, sl
 2ac:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 2b0:	4630      	mov	r0, r6
 2b2:	464a      	mov	r2, r9
 2b4:	2300      	movs	r3, #0
 2b6:	f7ff fffe 	bl	0 <cbor_encode_int>
 2ba:	4601      	mov	r1, r0
 2bc:	4650      	mov	r0, sl
 2be:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 2c2:	f240 0b00 	movw	fp, #0
 2c6:	f04f 0906 	mov.w	r9, #6
 2ca:	f2c0 0b00 	movt	fp, #0
 2ce:	4650      	mov	r0, sl
 2d0:	4641      	mov	r1, r8
 2d2:	2206      	movs	r2, #6
 2d4:	465b      	mov	r3, fp
 2d6:	f8cd 9000 	str.w	r9, [sp]
 2da:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 2de:	f240 0600 	movw	r6, #0
 2e2:	4604      	mov	r4, r0
 2e4:	f2c0 0600 	movt	r6, #0
 2e8:	2504      	movs	r5, #4
 2ea:	4650      	mov	r0, sl
 2ec:	4641      	mov	r1, r8
 2ee:	2206      	movs	r2, #6
 2f0:	4633      	mov	r3, r6
 2f2:	9500      	str	r5, [sp, #0]
 2f4:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 2f8:	4601      	mov	r1, r0
 2fa:	4620      	mov	r0, r4
 2fc:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 300:	4601      	mov	r1, r0
 302:	4650      	mov	r0, sl
 304:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 308:	f240 0700 	movw	r7, #0
 30c:	4650      	mov	r0, sl
 30e:	f2c0 0700 	movt	r7, #0
 312:	2204      	movs	r2, #4
 314:	4639      	mov	r1, r7
 316:	4633      	mov	r3, r6
 318:	9500      	str	r5, [sp, #0]
 31a:	2504      	movs	r5, #4
 31c:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 320:	4604      	mov	r4, r0
 322:	4650      	mov	r0, sl
 324:	4641      	mov	r1, r8
 326:	2206      	movs	r2, #6
 328:	465b      	mov	r3, fp
 32a:	f8cd 9000 	str.w	r9, [sp]
 32e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 332:	4601      	mov	r1, r0
 334:	4620      	mov	r0, r4
 336:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 33a:	4601      	mov	r1, r0
 33c:	4650      	mov	r0, sl
 33e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 342:	4650      	mov	r0, sl
 344:	4639      	mov	r1, r7
 346:	2204      	movs	r2, #4
 348:	4633      	mov	r3, r6
 34a:	9500      	str	r5, [sp, #0]
 34c:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h8f9ae13d0f2f984cE>
 350:	4604      	mov	r4, r0
 352:	4650      	mov	r0, sl
 354:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hd585922d7725a650E>
 358:	4621      	mov	r1, r4
 35a:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 35e:	4601      	mov	r1, r0
 360:	4650      	mov	r0, sl
 362:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h5ce620a59ef58c82E>
 366:	a804      	add	r0, sp, #16
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:77
    });

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 368:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network14do_server_post17h26ac10ece205a321E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h9f24eae1c4c05d5fE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
 36c:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:77
 370:	2801      	cmp	r0, #1
 372:	d10e      	bne.n	392 <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0x392>
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
 374:	9805      	ldr	r0, [sp, #20]
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 376:	3006      	adds	r0, #6
 378:	f47f ae92 	bne.w	a0 <_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E+0xa0>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:95
            console::print("TMP network not ready\n");
 37c:	f240 0000 	movw	r0, #0
 380:	2116      	movs	r1, #22
 382:	f2c0 0000 	movt	r0, #0
 386:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE>
 38a:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:101
}
 38c:	b007      	add	sp, #28
 38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17he1bcd6b8eb98b3edE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_network.rs:79

    console::print("NET view your sensor at \nhttps://blue-pill-geolocate.appspot.com?device=%s\n");  //  , device_id);
 392:	f240 0000 	movw	r0, #0
 396:	214b      	movs	r1, #75	; 0x4b
 398:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
 39c:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE>
 3a0:	2000      	movs	r0, #0
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:101
 3a2:	b007      	add	sp, #28
 3a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
 3a8:	f240 0000 	movw	r0, #0
 3ac:	f2c0 0000 	movt	r0, #0
 3b0:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h138a849f37d3ac2dE>
 3b4:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor15get_temperature17h4b0523761b93c672E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:115
            assert!(rc == 0);
 3b6:	f240 0000 	movw	r0, #0
 3ba:	f2c0 0000 	movt	r0, #0
 3be:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h138a849f37d3ac2dE>
 3c2:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor18handle_sensor_data17hce08971183bfa387E():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:83
    if let SensorValueType::None = sensor_value.val { assert!(false); }  //  Invalid type
 3c4:	f240 0000 	movw	r0, #0
 3c8:	f2c0 0000 	movt	r0, #0
 3cc:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h138a849f37d3ac2dE>
 3d0:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:49
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:55
    //  Initialise the Mynewt packages and BME280 / temp_stm32 temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <_ZN6mynewt7sysinit17h4f3b13954addfd2dE>
_ZN3app10app_sensor21start_sensor_listener17h20f422702b305d3dE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:48
    console::print("Rust TMP poll \n");  //  SENSOR_DEVICE "\n";
   6:	f240 0000 	movw	r0, #0
   a:	210f      	movs	r1, #15
   c:	f2c0 0000 	movt	r0, #0
  10:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:51
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  14:	f240 0000 	movw	r0, #0
  18:	f242 7110 	movw	r1, #10000	; 0x2710
  1c:	f2c0 0000 	movt	r0, #0
  20:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17h120a6d01d88ba30aE>
  24:	2801      	cmp	r0, #1
  26:	d147      	bne.n	b8 <main+0xb8>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:54
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, unsafe { sensor::null_sensor() }) ? ;
  28:	f7ff fffe 	bl	0 <null_sensor>
  2c:	f240 0100 	movw	r1, #0
  30:	4602      	mov	r2, r0
  32:	4668      	mov	r0, sp
  34:	f2c0 0100 	movt	r1, #0
  38:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h7dd69905a3b7f7a6E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h35ed244f8afd7e89E():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:1283
  3c:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h20f422702b305d3dE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:54
  40:	2801      	cmp	r0, #1
  42:	d017      	beq.n	74 <main+0x74>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  44:	4620      	mov	r0, r4
  46:	f7ff fffe 	bl	0 <is_null_sensor>
  4a:	2800      	cmp	r0, #0
  4c:	d145      	bne.n	da <main+0xda>
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:60
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor10as_untyped17h83128ccc8231d4a0E>
  5a:	2100      	movs	r1, #0
  5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:65
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  60:	9101      	str	r1, [sp, #4]
  62:	9200      	str	r2, [sp, #0]
  64:	9104      	str	r1, [sp, #16]
  66:	e9cd 0102 	strd	r0, r1, [sp, #8]
  6a:	4669      	mov	r1, sp
  6c:	4620      	mov	r0, r4
  6e:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor17register_listener17ha5269b3027967e6cE>
  72:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  74:	2c01      	cmp	r4, #1
  76:	d120      	bne.n	ba <main+0xba>
main():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:62
    //  Starting polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  78:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network22start_server_transport17h883c417d7c9da1f5E>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  7c:	2801      	cmp	r0, #1
  7e:	d124      	bne.n	ca <main+0xca>
main():
  80:	466c      	mov	r4, sp
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:68
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  82:	4620      	mov	r0, r4
  84:	f7ff fffe 	bl	0 <_ZN6mynewt6kernel2os15eventq_dflt_get17h5e66559059f6d8a1E>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h96559aacd5aa4afdE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  88:	9800      	ldr	r0, [sp, #0]
  8a:	2801      	cmp	r0, #1
  8c:	d00c      	beq.n	a8 <main+0xa8>
  8e:	9801      	ldr	r0, [sp, #4]
main():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:67
        os::eventq_run(               //  Processing events...
  90:	f7ff fffe 	bl	0 <_ZN6mynewt6kernel2os10eventq_run17h1a13961f44fa3993E>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:826
  94:	2801      	cmp	r0, #1
  96:	d0f4      	beq.n	82 <main+0x82>
main():
  98:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	f7ff fffe 	bl	0 <main>
  a6:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h96559aacd5aa4afdE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  a8:	9901      	ldr	r1, [sp, #4]
  aa:	f240 0000 	movw	r0, #0
  ae:	f2c0 0000 	movt	r0, #0
  b2:	f7ff fffe 	bl	0 <main>
  b6:	defe      	udf	#254	; 0xfe
main():
  b8:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  ba:	f240 0000 	movw	r0, #0
  be:	4621      	mov	r1, r4
  c0:	f2c0 0000 	movt	r0, #0
  c4:	f7ff fffe 	bl	0 <main>
  c8:	defe      	udf	#254	; 0xfe
main():
  ca:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17hbad1d608624c6d5dE():
/rustc/03ee55bb1c8c2379fdabf68e306186b390444f61/src/libcore/result.rs:827
  cc:	f240 0000 	movw	r0, #0
  d0:	f2c0 0000 	movt	r0, #0
  d4:	f7ff fffe 	bl	0 <main>
  d8:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h20f422702b305d3dE():
c:\stm32bluepill-mynewt-sensor/rust\app\src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  da:	f240 0000 	movw	r0, #0
  de:	f2c0 0000 	movt	r0, #0
  e2:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h138a849f37d3ac2dE>
  e6:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:79

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <_ZN4core5panic9PanicInfo8location17h122f9d519f4a246bE>
   4:	b318      	cbz	r0, 4e <rust_begin_unwind+0x4e>
   6:	4604      	mov	r4, r0
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:80
        let file = location.file();
   8:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4file17ha9ce911e26883425E>
   c:	4605      	mov	r5, r0
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:81
        let line = location.line();
   e:	4620      	mov	r0, r4
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:80
        let file = location.file();
  10:	460e      	mov	r6, r1
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:81
        let line = location.line();
  12:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4line17h997c0352f671f211E>
  16:	4604      	mov	r4, r0
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:82
        console::print("panic at ");  console::buffer(&file);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE>
  26:	4628      	mov	r0, r5
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console6buffer17hdcbb1b64b1219e0dE>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:83
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  2e:	f240 0000 	movw	r0, #0
  32:	2108      	movs	r1, #8
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE>
  3c:	4620      	mov	r0, r4
  3e:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console8printhex17h2e2a147c20047838E>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:84
        console::print("\n");         console::flush();
  42:	f240 0000 	movw	r0, #0
  46:	2101      	movs	r1, #1
  48:	f2c0 0000 	movt	r0, #0
  4c:	e004      	b.n	c <rust_begin_unwind+0xc>
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:86
    } else {
        console::print("panic unknown loc\n");  console::flush();
  4e:	f240 0000 	movw	r0, #0
  52:	2112      	movs	r1, #18
  54:	f2c0 0000 	movt	r0, #0
  58:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h3cda1e0292b73ceeE>
  5c:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5flush17h1dcb683b7bea3a79E>
_ZN8cortex_m3asm4bkpt17h917bc03351fb7d73E():
C:\Users\guppy\.cargo\registry\src\github.com-1ecc6299db9ec823\cortex-m-0.6.0\src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  60:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
c:\stm32bluepill-mynewt-sensor/rust\app\src/lib.rs:91
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  64:	e7fe      	b.n	64 <rust_begin_unwind+0x64>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-9520d02fe986fe70.app.cpk8ab4b-cgu.0.rcgu.bc.z: File format not recognized
