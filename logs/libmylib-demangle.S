In archive target/thumbv7m-none-eabi/release/libmylib.rlib:

mylib-9b5f404664613177.mylib.9ieylas6-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mylib.9ieylas6-cgu.0
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
0000004c l       .debug_str	00000000 
0000006f l       .debug_str	00000000 
00000075 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000095 l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000b8 l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000cc l       .debug_str	00000000 
000000d2 l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
0000015f l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
0000017d l       .debug_str	00000000 
000001bc l       .debug_str	00000000 
000001c6 l       .debug_str	00000000 
000001d3 l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001e1 l       .debug_str	00000000 
000001ea l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
00000201 l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
0000020e l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
00000220 l       .debug_str	00000000 
00000228 l       .debug_str	00000000 
00000232 l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
0000023f l       .debug_str	00000000 
00000249 l       .debug_str	00000000 
00000250 l       .debug_str	00000000 
00000255 l       .debug_str	00000000 
0000025c l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
00000265 l       .debug_str	00000000 
00000270 l       .debug_str	00000000 
0000027b l       .debug_str	00000000 
00000282 l       .debug_str	00000000 
00000299 l       .debug_str	00000000 
000002c6 l       .debug_str	00000000 
000002c8 l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
000002d1 l       .debug_str	00000000 
00000306 l       .debug_str	00000000 
0000030c l       .debug_str	00000000 
00000312 l       .debug_str	00000000 
00000321 l       .debug_str	00000000 
00000331 l       .debug_str	00000000 
00000341 l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
00000371 l       .debug_str	00000000 
000003ce l       .debug_str	00000000 
00000433 l       .debug_str	00000000 
0000043a l       .debug_str	00000000 
00000442 l       .debug_str	00000000 
0000044b l       .debug_str	00000000 
00000469 l       .debug_str	00000000 
00000479 l       .debug_str	00000000 
00000487 l       .debug_str	00000000 
00000492 l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
000004ae l       .debug_str	00000000 
000004b8 l       .debug_str	00000000 
000004d8 l       .debug_str	00000000 
000004ee l       .debug_str	00000000 
000004f8 l       .debug_str	00000000 
00000501 l       .debug_str	00000000 
0000050a l       .debug_str	00000000 
0000052f l       .debug_str	00000000 
00000545 l       .debug_str	00000000 
00000550 l       .debug_str	00000000 
00000566 l       .debug_str	00000000 
0000056e l       .debug_str	00000000 
000005a4 l       .debug_str	00000000 
000005b7 l       .debug_str	00000000 
000005cb l       .debug_str	00000000 
00000607 l       .debug_str	00000000 
00000618 l       .debug_str	00000000 
0000061d l       .debug_str	00000000 
00000657 l       .debug_str	00000000 
0000065e l       .debug_str	00000000 
00000661 l       .debug_str	00000000 
00000665 l       .debug_str	00000000 
0000066c l       .debug_str	00000000 
00000670 l       .debug_str	00000000 
00000673 l       .debug_str	00000000 
00000676 l       .debug_str	00000000 
0000067b l       .debug_str	00000000 
00000681 l       .debug_str	00000000 
00000688 l       .debug_str	00000000 
00000690 l       .debug_str	00000000 
0000069a l       .debug_str	00000000 
0000069e l       .debug_str	00000000 
000006a7 l       .debug_str	00000000 
00000704 l       .debug_str	00000000 
00000709 l       .debug_str	00000000 
0000070e l       .debug_str	00000000 
00000710 l       .debug_str	00000000 
00000716 l       .debug_str	00000000 
0000071b l       .debug_str	00000000 
00000720 l       .debug_str	00000000 
00000726 l       .debug_str	00000000 
0000072c l       .debug_str	00000000 
00000732 l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
0000074a l       .debug_str	00000000 
0000074e l       .debug_str	00000000 
00000756 l       .debug_str	00000000 
0000075e l       .debug_str	00000000 
00000765 l       .debug_str	00000000 
00000771 l       .debug_str	00000000 
0000077c l       .debug_str	00000000 
00000783 l       .debug_str	00000000 
00000789 l       .debug_str	00000000 
0000078d l       .debug_str	00000000 
00000793 l       .debug_str	00000000 
00000799 l       .debug_str	00000000 
0000079c l       .debug_str	00000000 
000007ab l       .debug_str	00000000 
000007b2 l       .debug_str	00000000 
000007b6 l       .debug_str	00000000 
000007bf l       .debug_str	00000000 
000007cb l       .debug_str	00000000 
000007e4 l       .debug_str	00000000 
000007e9 l       .debug_str	00000000 
000007fa l       .debug_str	00000000 
00000804 l       .debug_str	00000000 
00000862 l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
0000088e l       .debug_str	00000000 
00000896 l       .debug_str	00000000 
000008ad l       .debug_str	00000000 
000008d1 l       .debug_str	00000000 
000008ed l       .debug_str	00000000 
000008f2 l       .debug_str	00000000 
000008fb l       .debug_str	00000000 
00000902 l       .debug_str	00000000 
0000091b l       .debug_str	00000000 
00000925 l       .debug_str	00000000 
0000093f l       .debug_str	00000000 
00000993 l       .debug_str	00000000 
0000099b l       .debug_str	00000000 
000009a6 l       .debug_str	00000000 
000009b0 l       .debug_str	00000000 
000009ba l       .debug_str	00000000 
000009be l       .debug_str	00000000 
00000a10 l       .debug_str	00000000 
00000a6c l       .debug_str	00000000 
00000a70 l       .debug_str	00000000 
00000a79 l       .debug_str	00000000 
00000a7d l       .debug_str	00000000 
00000a87 l       .debug_str	00000000 
00000a8d l       .debug_str	00000000 
00000aae l       .debug_str	00000000 
00000ae5 l       .debug_str	00000000 
00000b24 l       .debug_str	00000000 
00000b2b l       .debug_str	00000000 
00000b33 l       .debug_str	00000000 
00000b4a l       .debug_str	00000000 
00000b53 l       .debug_str	00000000 
00000b7b l       .debug_str	00000000 
00000b9f l       .debug_str	00000000 
00000ba4 l       .debug_str	00000000 
00000baa l       .debug_str	00000000 
00000bb4 l       .debug_str	00000000 
00000bbd l       .debug_str	00000000 
00000bc6 l       .debug_str	00000000 
00000bd1 l       .debug_str	00000000 
00000bdb l       .debug_str	00000000 
00000c01 l       .debug_str	00000000 
00000c19 l       .debug_str	00000000 
00000c23 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000c4d l       .debug_str	00000000 
00000c54 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c9f l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
00000cc3 l       .debug_str	00000000 
00000ceb l       .debug_str	00000000 
00000d11 l       .debug_str	00000000 
00000d1b l       .debug_str	00000000 
00000d23 l       .debug_str	00000000 
00000d2a l       .debug_str	00000000 
00000d31 l       .debug_str	00000000 
00000d36 l       .debug_str	00000000 
00000d58 l       .debug_str	00000000 
00000d7f l       .debug_str	00000000 
00000d97 l       .debug_str	00000000 
00000da1 l       .debug_str	00000000 
00000dc9 l       .debug_str	00000000 
00000dee l       .debug_str	00000000 
00000dfa l       .debug_str	00000000 
00000e02 l       .debug_str	00000000 
00000e21 l       .debug_str	00000000 
00000e7a l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000ee6 l       .debug_str	00000000 
00000f2c l       .debug_str	00000000 
00000f7a l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000fc0 l       .debug_str	00000000 
00001004 l       .debug_str	00000000 
0000100d l       .debug_str	00000000 
0000101d l       .debug_str	00000000 
00001025 l       .debug_str	00000000 
00001079 l       .debug_str	00000000 
000010d5 l       .debug_str	00000000 
000010e1 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
000010f6 l       .debug_str	00000000 
00001102 l       .debug_str	00000000 
0000110b l       .debug_str	00000000 
00001113 l       .debug_str	00000000 
0000111b l       .debug_str	00000000 
00001130 l       .debug_str	00000000 
00001137 l       .debug_str	00000000 
0000115f l       .debug_str	00000000 
00001181 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001192 l       .debug_str	00000000 
000011a0 l       .debug_str	00000000 
000011a7 l       .debug_str	00000000 
000011ae l       .debug_str	00000000 
000011be l       .debug_str	00000000 
000011c7 l       .debug_str	00000000 
000011d5 l       .debug_str	00000000 
000011e3 l       .debug_str	00000000 
000011ef l       .debug_str	00000000 
000011fb l       .debug_str	00000000 
00001204 l       .debug_str	00000000 
00001213 l       .debug_str	00000000 
0000121b l       .debug_str	00000000 
00001234 l       .debug_str	00000000 
00001245 l       .debug_str	00000000 
0000124f l       .debug_str	00000000 
00001257 l       .debug_str	00000000 
00001271 l       .debug_str	00000000 
0000127d l       .debug_str	00000000 
000012a1 l       .debug_str	00000000 
000012ba l       .debug_str	00000000 
000012bf l       .debug_str	00000000 
000012ca l       .debug_str	00000000 
000012ed l       .debug_str	00000000 
000012f6 l       .debug_str	00000000 
00001311 l       .debug_str	00000000 
0000131e l       .debug_str	00000000 
00001343 l       .debug_str	00000000 
0000134b l       .debug_str	00000000 
0000136b l       .debug_str	00000000 
00001381 l       .debug_str	00000000 
0000138c l       .debug_str	00000000 
0000139c l       .debug_str	00000000 
000013a0 l       .debug_str	00000000 
000013bb l       .debug_str	00000000 
000013c3 l       .debug_str	00000000 
000013eb l       .debug_str	00000000 
0000140e l       .debug_str	00000000 
00001436 l       .debug_str	00000000 
0000145c l       .debug_str	00000000 
00001464 l       .debug_str	00000000 
0000147b l       .debug_str	00000000 
00001480 l       .debug_str	00000000 
00001488 l       .debug_str	00000000 
00001491 l       .debug_str	00000000 
0000149a l       .debug_str	00000000 
000014a3 l       .debug_str	00000000 
000014cb l       .debug_str	00000000 
000014ef l       .debug_str	00000000 
00001517 l       .debug_str	00000000 
00001542 l       .debug_str	00000000 
0000156a l       .debug_str	00000000 
0000158d l       .debug_str	00000000 
00001596 l       .debug_str	00000000 
000015ab l       .debug_str	00000000 
000015b6 l       .debug_str	00000000 
000015bd l       .debug_str	00000000 
000015e5 l       .debug_str	00000000 
00001607 l       .debug_str	00000000 
00001616 l       .debug_str	00000000 
00001621 l       .debug_str	00000000 
00001630 l       .debug_str	00000000 
00001645 l       .debug_str	00000000 
0000165d l       .debug_str	00000000 
000016b0 l       .debug_str	00000000 
0000170b l       .debug_str	00000000 
00001720 l       .debug_str	00000000 
00001739 l       .debug_str	00000000 
00001761 l       .debug_str	00000000 
000017a1 l       .debug_str	00000000 
000017a6 l       .debug_str	00000000 
000017d8 l       .debug_str	00000000 
000017e6 l       .debug_str	00000000 
000017ea l       .debug_str	00000000 
000017f0 l       .debug_str	00000000 
000017f4 l       .debug_str	00000000 
00001802 l       .debug_str	00000000 
00001840 l       .debug_str	00000000 
00001850 l       .debug_str	00000000 
00001854 l       .debug_str	00000000 
00001859 l       .debug_str	00000000 
0000185d l       .debug_str	00000000 
00001862 l       .debug_str	00000000 
00001868 l       .debug_str	00000000 
0000186c l       .debug_str	00000000 
0000187c l       .debug_str	00000000 
00001888 l       .debug_str	00000000 
00001894 l       .debug_str	00000000 
000018a0 l       .debug_str	00000000 
000018ad l       .debug_str	00000000 
000018b9 l       .debug_str	00000000 
000018c7 l       .debug_str	00000000 
000018de l       .debug_str	00000000 
000018f0 l       .debug_str	00000000 
000018f3 l       .debug_str	00000000 
00001913 l       .debug_str	00000000 
0000191c l       .debug_str	00000000 
00001925 l       .debug_str	00000000 
00001937 l       .debug_str	00000000 
00001946 l       .debug_str	00000000 
00001980 l       .debug_str	00000000 
00001991 l       .debug_str	00000000 
0000199c l       .debug_str	00000000 
000019b6 l       .debug_str	00000000 
000019c2 l       .debug_str	00000000 
000019cc l       .debug_str	00000000 
000019d2 l       .debug_str	00000000 
000019d7 l       .debug_str	00000000 
000019e8 l       .debug_str	00000000 
000019f1 l       .debug_str	00000000 
000019f9 l       .debug_str	00000000 
00001a03 l       .debug_str	00000000 
00001a10 l       .debug_str	00000000 
00001a57 l       .debug_str	00000000 
00001a75 l       .debug_str	00000000 
00001a7d l       .debug_str	00000000 
00001a82 l       .debug_str	00000000 
00001a8b l       .debug_str	00000000 
00001abb l       .debug_str	00000000 
00001ac4 l       .debug_str	00000000 
00001aca l       .debug_str	00000000 
00001b0e l       .debug_str	00000000 
00001b29 l       .debug_str	00000000 
00001b32 l       .debug_str	00000000 
00001b3c l       .debug_str	00000000 
00001b41 l       .debug_str	00000000 
00001b46 l       .debug_str	00000000 
00001b4b l       .debug_str	00000000 
00001b55 l       .debug_str	00000000 
00001b61 l       .debug_str	00000000 
00001be4 l       .debug_str	00000000 
00001bee l       .debug_str	00000000 
00001bf4 l       .debug_str	00000000 
00001bfa l       .debug_str	00000000 
00001bfe l       .debug_str	00000000 
00001c0b l       .debug_str	00000000 
00001c91 l       .debug_str	00000000 
00001ca0 l       .debug_str	00000000 
00001ca2 l       .debug_str	00000000 
00001d17 l       .debug_str	00000000 
00001d42 l       .debug_str	00000000 
00001d48 l       .debug_str	00000000 
00001d4f l       .debug_str	00000000 
00001d5b l       .debug_str	00000000 
00001d63 l       .debug_str	00000000 
00001d6c l       .debug_str	00000000 
00001d71 l       .debug_str	00000000 
00001d74 l       .debug_str	00000000 
00001d7d l       .debug_str	00000000 
00001d84 l       .debug_str	00000000 
00001d87 l       .debug_str	00000000 
00001d8d l       .debug_str	00000000 
00001d97 l       .debug_str	00000000 
00001d9f l       .debug_str	00000000 
00001da5 l       .debug_str	00000000 
00001db0 l       .debug_str	00000000 
00001db9 l       .debug_str	00000000 
00001ddc l       .debug_str	00000000 
00001dfb l       .debug_str	00000000 
00001e22 l       .debug_str	00000000 
00001e2c l       .debug_str	00000000 
00001e5e l       .debug_str	00000000 
00001e65 l       .debug_str	00000000 
00001ea1 l       .debug_str	00000000 
00001eb4 l       .debug_str	00000000 
00001eb6 l       .debug_str	00000000 
00001ec6 l       .debug_str	00000000 
00001ecc l       .debug_str	00000000 
00001f10 l       .debug_str	00000000 
00001f26 l       .debug_str	00000000 
00001f2f l       .debug_str	00000000 
00001f6e l       .debug_str	00000000 
00001f80 l       .debug_str	00000000 
00001f89 l       .debug_str	00000000 
00001f8d l       .debug_str	00000000 
00001fb7 l       .debug_str	00000000 
00001fbc l       .debug_str	00000000 
00002004 l       .debug_str	00000000 
0000200d l       .debug_str	00000000 
00002055 l       .debug_str	00000000 
00002064 l       .debug_str	00000000 
000020ac l       .debug_str	00000000 
00002116 l       .debug_str	00000000 
0000211e l       .debug_str	00000000 
00002122 l       .debug_str	00000000 
00002128 l       .debug_str	00000000 
0000214b l       .debug_str	00000000 
0000219f l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00002200 l       .debug_str	00000000 
00002252 l       .debug_str	00000000 
000022ac l       .debug_str	00000000 
000022b9 l       .debug_str	00000000 
000022e6 l       .debug_str	00000000 
000022eb l       .debug_str	00000000 
00002353 l       .debug_str	00000000 
000023bd l       .debug_str	00000000 
00002426 l       .debug_str	00000000 
0000248c l       .debug_str	00000000 
000024f3 l       .debug_str	00000000 
0000255d l       .debug_str	00000000 
000025c5 l       .debug_str	00000000 
00002634 l       .debug_str	00000000 
0000269b l       .debug_str	00000000 
00002707 l       .debug_str	00000000 
00002711 l       .debug_str	00000000 
0000271a l       .debug_str	00000000 
00002727 l       .debug_str	00000000 
0000278d l       .debug_str	00000000 
000027d0 l       .debug_str	00000000 
000027e6 l       .debug_str	00000000 
0000286a l       .debug_str	00000000 
000028a9 l       .debug_str	00000000 
000028ba l       .debug_str	00000000 
000028f5 l       .debug_str	00000000 
00002907 l       .debug_str	00000000 
0000290c l       .debug_str	00000000 
0000290e l       .debug_str	00000000 
00002920 l       .debug_str	00000000 
00002926 l       .debug_str	00000000 
0000292e l       .debug_str	00000000 
00002933 l       .debug_str	00000000 
00002940 l       .debug_str	00000000 
0000294d l       .debug_str	00000000 
00002954 l       .debug_str	00000000 
00002964 l       .debug_str	00000000 
00002976 l       .debug_str	00000000 
00002982 l       .debug_str	00000000 
00002987 l       .debug_str	00000000 
0000298f l       .debug_str	00000000 
00002993 l       .debug_str	00000000 
00002998 l       .debug_str	00000000 
000029a0 l       .debug_str	00000000 
000029b6 l       .debug_str	00000000 
000029d4 l       .debug_str	00000000 
000029dd l       .debug_str	00000000 
000029e2 l       .debug_str	00000000 
000029e7 l       .debug_str	00000000 
000029eb l       .debug_str	00000000 
000029f4 l       .debug_str	00000000 
000029fe l       .debug_str	00000000 
00002a16 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.0	00000000 .Lanon.c8f7774afcdcccd4de3635c5cf798096.0
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.10	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.10
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.11	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.11
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.12	00000011 .Lanon.c8f7774afcdcccd4de3635c5cf798096.12
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.14	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.14
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.15	00000016 .Lanon.c8f7774afcdcccd4de3635c5cf798096.15
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.16	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.16
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.17	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.17
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.18	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.18
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.19	00000019 .Lanon.c8f7774afcdcccd4de3635c5cf798096.19
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.20	00000001 .Lanon.c8f7774afcdcccd4de3635c5cf798096.20
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.21	00000013 .Lanon.c8f7774afcdcccd4de3635c5cf798096.21
00000000 l     O .rodata.cst8	00000008 .Lanon.c8f7774afcdcccd4de3635c5cf798096.22
00000000 l     O .rodata.cst4	00000004 .Lanon.c8f7774afcdcccd4de3635c5cf798096.23
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.27	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.27
00000000 l     O .rodata.cst16	00000010 .Lanon.c8f7774afcdcccd4de3635c5cf798096.28
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.29	00000010 .Lanon.c8f7774afcdcccd4de3635c5cf798096.29
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.3	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.3
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.30	0000000a .Lanon.c8f7774afcdcccd4de3635c5cf798096.30
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.32	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.32
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.33	00000010 .Lanon.c8f7774afcdcccd4de3635c5cf798096.33
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.34	00000010 .Lanon.c8f7774afcdcccd4de3635c5cf798096.34
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.35	00000011 .Lanon.c8f7774afcdcccd4de3635c5cf798096.35
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.36	00000011 .Lanon.c8f7774afcdcccd4de3635c5cf798096.36
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.37	00000001 .Lanon.c8f7774afcdcccd4de3635c5cf798096.37
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.38	00000010 .Lanon.c8f7774afcdcccd4de3635c5cf798096.38
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.4	0000000a .Lanon.c8f7774afcdcccd4de3635c5cf798096.4
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.40	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.40
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.41	00000010 .Lanon.c8f7774afcdcccd4de3635c5cf798096.41
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.42	00000010 .Lanon.c8f7774afcdcccd4de3635c5cf798096.42
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.44	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.44
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.45	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.45
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.46	0000004b .Lanon.c8f7774afcdcccd4de3635c5cf798096.46
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.47	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.47
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.48	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.48
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.49	00000021 .Lanon.c8f7774afcdcccd4de3635c5cf798096.49
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.5	0000000d .Lanon.c8f7774afcdcccd4de3635c5cf798096.5
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.50	00000012 .Lanon.c8f7774afcdcccd4de3635c5cf798096.50
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.51	00000009 .Lanon.c8f7774afcdcccd4de3635c5cf798096.51
00000008 l     O .rodata.cst8	00000008 .Lanon.c8f7774afcdcccd4de3635c5cf798096.52
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.53	00000001 .Lanon.c8f7774afcdcccd4de3635c5cf798096.53
00000000 l     O .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.8	00000018 .Lanon.c8f7774afcdcccd4de3635c5cf798096.8
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h13ac8c522a55adacE	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3be7d3bbc933a6e3E	00000050 <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hef1b000013b2e9f1E	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E	0000030c mylib::listen_sensor::read_temperature
00000000 l     O .data._ZN5mylib6mynewt6sensor17LISTENER_INTERNAL17ha3461d708733914cE	00000018 mylib::mynewt::sensor::LISTENER_INTERNAL
00000000 l     F .text._ZN5mylib6mynewt6sensor21null_sensor_data_func17ha06778e2cc6a8ccaE	00000004 mylib::mynewt::sensor::null_sensor_data_func
00000000 l     O .bss._ZN5mylib9send_coap12network_task17h3c7bcb7769301305E	00000050 mylib::send_coap::network_task
00000000 l     O .bss._ZN5mylib9send_coap16NETWORK_IS_READY17h8eedfcb9fe69a092E.0.0	00000001 _ZN5mylib9send_coap16NETWORK_IS_READY17h8eedfcb9fe69a092E.0.0
00000000 l     F .text._ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E	0000011a mylib::send_coap::network_task_func
00000000 l     O .bss._ZN5mylib9send_coap18NETWORK_TASK_STACK17h8b663783da39d672E	00000400 mylib::send_coap::NETWORK_TASK_STACK
00000000 l     O .rodata.str.2	00000010 str.2
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h13ac8c522a55adacE	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h13ac8c522a55adacE
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3be7d3bbc933a6e3E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3be7d3bbc933a6e3E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hef1b000013b2e9f1E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hef1b000013b2e9f1E
00000000 l    d  .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000000 .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E
00000000 l    d  .text._ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hb123f0b65915ae69E	00000000 .text._ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hb123f0b65915ae69E
00000000 l    d  .text._ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17hbb99dd102a62d041E	00000000 .text._ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17hbb99dd102a62d041E
00000000 l    d  .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17h2d6684ff581430f0E	00000000 .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17h2d6684ff581430f0E
00000000 l    d  .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h3275931b791c43e8E	00000000 .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h3275931b791c43e8E
00000000 l    d  .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E	00000000 .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E
00000000 l    d  .text._ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h277cca8a2603c546E	00000000 .text._ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h277cca8a2603c546E
00000000 l    d  .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17h9869505e8db9d124E	00000000 .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17h9869505e8db9d124E
00000000 l    d  .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h3d1cba1549894c26E	00000000 .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h3d1cba1549894c26E
00000000 l    d  .text._ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17h4996347e9cb33f3aE	00000000 .text._ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17h4996347e9cb33f3aE
00000000 l    d  .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000000 .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E
00000000 l    d  .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hbb4f291aae5507aaE	00000000 .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hbb4f291aae5507aaE
00000000 l    d  .text._ZN5mylib6mynewt6sensor21null_sensor_data_func17ha06778e2cc6a8ccaE	00000000 .text._ZN5mylib6mynewt6sensor21null_sensor_data_func17ha06778e2cc6a8ccaE
00000000 l    d  .text._ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hc72dbfc5eee2882aE	00000000 .text._ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hc72dbfc5eee2882aE
00000000 l    d  .text._ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E	00000000 .text._ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E
00000000 l    d  .text._ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E	00000000 .text._ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.1	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.1
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.2	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.2
00000000 l    d  .data._ZN5mylib6mynewt6sensor17LISTENER_INTERNAL17ha3461d708733914cE	00000000 .data._ZN5mylib6mynewt6sensor17LISTENER_INTERNAL17ha3461d708733914cE
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.6	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.6
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.7	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.7
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.9	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.9
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.13	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.13
00000000 l    d  .bss._ZN5mylib9send_coap12network_task17h3c7bcb7769301305E	00000000 .bss._ZN5mylib9send_coap12network_task17h3c7bcb7769301305E
00000000 l    d  .bss._ZN5mylib9send_coap18NETWORK_TASK_STACK17h8b663783da39d672E	00000000 .bss._ZN5mylib9send_coap18NETWORK_TASK_STACK17h8b663783da39d672E
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.24	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.24
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.25	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.25
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.26	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.26
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.31	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.31
00000000 l    d  .rodata.str.2	00000000 .rodata.str.2
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.39	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.39
00000000 l    d  .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.43	00000000 .rodata..Lanon.c8f7774afcdcccd4de3635c5cf798096.43
00000000 l    d  .bss._ZN5mylib9send_coap16NETWORK_IS_READY17h8eedfcb9fe69a092E.0.0	00000000 .bss._ZN5mylib9send_coap16NETWORK_IS_READY17h8eedfcb9fe69a092E.0.0
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
00000000         *UND*	00000000 core::fmt::Formatter::debug_lower_hex
00000000         *UND*	00000000 core::fmt::Formatter::debug_upper_hex
00000000         *UND*	00000000 core::fmt::Formatter::alternate
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::slice::slice_index_len_fail
00000000         *UND*	00000000 core::panicking::panic_bounds_check
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000 g     F .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h3275931b791c43e8E	0000000a <mylib::mynewt::os::os_dev as core::default::Default>::default
00000000 g     F .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hbb4f291aae5507aaE	00000008 <mylib::mynewt::os::os_sem as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E	0000000c <mylib::mynewt::os::os_mbuf as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17h4996347e9cb33f3aE	0000000a <mylib::mynewt::os::os_task as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hb123f0b65915ae69E	0000000c <mylib::mynewt::os::os_event as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17h9869505e8db9d124E	0000000a <mylib::mynewt::os::os_mutex as core::default::Default>::default
00000000 g     F .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17h2d6684ff581430f0E	00000010 <mylib::mynewt::os::hal_timer as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E	0000000c <mylib::mynewt::os::os_eventq as core::default::Default>::default
00000000 g     F .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17h2d6684ff581430f0E	00000010 <mylib::mynewt::os::os_mqueue as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17hbb99dd102a62d041E	00000014 <mylib::mynewt::os::os_callout as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h277cca8a2603c546E	00000012 <mylib::mynewt::os::os_mempool as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::tinycbor::File as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_memblock as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_task_obj as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17h9869505e8db9d124E	0000000a <mylib::mynewt::os::os_mbuf_pool as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000006 <mylib::mynewt::os::os_task_list as core::default::Default>::default
00000000 g     F .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hbb4f291aae5507aaE	00000008 <mylib::mynewt::os::os_mbuf_pkthdr as core::default::Default>::default
00000000 g     F .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h3275931b791c43e8E	0000000a <mylib::mynewt::os::os_mempool_ext as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000006 <mylib::mynewt::os::os_task_stailq as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000006 <mylib::mynewt::os::os_callout_list as core::default::Default>::default
00000000 g     F .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h3d1cba1549894c26E	0000000e <mylib::mynewt::os::os_sanity_check as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E	0000000c <mylib::mynewt::tinycbor::CborValue as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17h9869505e8db9d124E	0000000a <mylib::mynewt::tinycbor::CborParser as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000006 <mylib::mynewt::tinycbor::cbor_iovec as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E	0000000c <mylib::mynewt::tinycbor::CborEncoder as core::default::Default>::default
00000000 g     F .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h3d1cba1549894c26E	0000000e <mylib::mynewt::os::os_time_change_info as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_dev__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_sem__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_mbuf__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_task__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000006 <mylib::mynewt::os::os_task__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_task__bindgen_ty_3 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_event__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_mutex__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000006 <mylib::mynewt::os::hal_timer__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000006 <mylib::mynewt::os::os_eventq__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000006 <mylib::mynewt::os::os_mqueue__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17h9869505e8db9d124E	0000000a <mylib::mynewt::os::os_time_change_listener as core::default::Default>::default
00000000 g     F .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E	00000006 <mylib::mynewt::os::os_callout__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_mempool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_mempool__bindgen_ty_2 as core::default::Default>::default
00000000 g     F .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E	0000000c <mylib::mynewt::sensor_network::sensor_value as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_memblock__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_task_obj__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_mbuf_pool__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_mbuf_pkthdr__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_sanity_check__bindgen_ty_1 as core::default::Default>::default
00000000 g     F .text._ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hc72dbfc5eee2882aE	0000000e <mylib::mynewt::sensor_network::sensor_network_interface as core::default::Default>::default
00000000 g     F .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E	00000004 <mylib::mynewt::os::os_time_change_listener__bindgen_ty_1 as core::default::Default>::default
00000000         *UND*	00000000 cstr_core::CStr::from_ptr
00000000         *UND*	00000000 __aeabi_memclr4
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 cbor_encode_int
00000000         *UND*	00000000 cbor_encode_text_string
00000000         *UND*	00000000 cbor_encoder_close_container
00000000         *UND*	00000000 cbor_encoder_create_map
00000000         *UND*	00000000 console_buffer
00000000         *UND*	00000000 console_flush
00000000         *UND*	00000000 console_printhex
00000000         *UND*	00000000 device_get_name
00000000         *UND*	00000000 do_collector_post
00000000         *UND*	00000000 do_server_post
00000000         *UND*	00000000 g_encoder
00000000         *UND*	00000000 get_device_id
00000000         *UND*	00000000 get_temp_data
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 init_collector_post
00000000         *UND*	00000000 init_server_post
00000000         *UND*	00000000 is_collector_node
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000         *UND*	00000000 is_sensor_node
00000000         *UND*	00000000 is_standalone_node
00000000 g     F .text.main	00000162 main
00000000         *UND*	00000000 null_sensor
00000000         *UND*	00000000 os_eventq_dflt_get
00000000         *UND*	00000000 os_eventq_run
00000000         *UND*	00000000 os_task_init
00000000         *UND*	00000000 os_time_delay
00000000         *UND*	00000000 register_collector_transport
00000000         *UND*	00000000 register_server_transport
00000000         *UND*	00000000 root_map
00000000 g     F .text.rust_begin_unwind	00000072 rust_begin_unwind
00000000         *UND*	00000000 rust_sysinit
00000000         *UND*	00000000 sensor_get_device
00000000         *UND*	00000000 sensor_mgr_find_next_bydevname
00000000         *UND*	00000000 sensor_register_listener
00000000         *UND*	00000000 sensor_set_poll_rate_ms
00000000         *UND*	00000000 should_send_to_collector



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h13ac8c522a55adacE:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h13ac8c522a55adacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hc0a5c2426ccebe61E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt>

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3be7d3bbc933a6e3E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3be7d3bbc933a6e3E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	b082      	sub	sp, #8
_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h643f0848ca3e8146E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2009
   6:	f8d1 8000 	ldr.w	r8, [r1]
   a:	460c      	mov	r4, r1
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2008
   c:	e9d1 6702 	ldrd	r6, r7, [r1, #8]
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3be7d3bbc933a6e3E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
  10:	6805      	ldr	r5, [r0, #0]
_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h643f0848ca3e8146E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2015
  12:	4608      	mov	r0, r1
  14:	f7ff fffe 	bl	0 <core::fmt::Formatter::alternate>
  18:	6821      	ldr	r1, [r4, #0]
  1a:	b148      	cbz	r0, 30 <<&T as core::fmt::Debug>::fmt+0x30>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2016
  1c:	f041 0108 	orr.w	r1, r1, #8
  20:	6021      	str	r1, [r4, #0]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2018
  22:	68a0      	ldr	r0, [r4, #8]
  24:	2800      	cmp	r0, #0
  26:	bf02      	ittt	eq
  28:	2001      	moveq	r0, #1
  2a:	220a      	moveq	r2, #10
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2019
  2c:	e9c4 0202 	strdeq	r0, r2, [r4, #8]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2022
  30:	f041 0004 	orr.w	r0, r1, #4
  34:	6020      	str	r0, [r4, #0]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2024
  36:	6828      	ldr	r0, [r5, #0]
  38:	4621      	mov	r1, r4
  3a:	9001      	str	r0, [sp, #4]
  3c:	a801      	add	r0, sp, #4
  3e:	f7ff fffe 	bl	0 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2026
  42:	e9c4 6702 	strd	r6, r7, [r4, #8]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:2027
  46:	f8c4 8000 	str.w	r8, [r4]
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3be7d3bbc933a6e3E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
  4a:	b002      	add	sp, #8
  4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hef1b000013b2e9f1E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hef1b000013b2e9f1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h271d1c938b44f4eaE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt>

Disassembly of section .text._ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E:

00000000 <<mylib::mynewt::tinycbor::File as core::default::Default>::default>:
_ZN72_$LT$mylib..mynewt..tinycbor..File$u20$as$u20$core..default..Default$GT$7default17h96fc62e004937127E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/tinycbor.rs:31
    pub vmt: *const File_methods,
}
impl Default for File {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hb123f0b65915ae69E:

00000000 <<mylib::mynewt::os::os_event as core::default::Default>::default>:
_ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hb123f0b65915ae69E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:306
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_event {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h167ba3e5d28d6dcbE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
_ZN70_$LT$mylib..mynewt..os..os_event$u20$as$u20$core..default..Default$GT$7default17hb123f0b65915ae69E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:308
        unsafe { ::core::mem::zeroed() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17hbb99dd102a62d041E:

00000000 <<mylib::mynewt::os::os_callout as core::default::Default>::default>:
_ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17hbb99dd102a62d041E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:387
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_callout {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h4059b63c5fcc5fcaE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
   e:	e9c0 1106 	strd	r1, r1, [r0, #24]
_ZN72_$LT$mylib..mynewt..os..os_callout$u20$as$u20$core..default..Default$GT$7default17hbb99dd102a62d041E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:389
        unsafe { ::core::mem::zeroed() }
    }
  12:	4770      	bx	lr

Disassembly of section .text._ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17h2d6684ff581430f0E:

00000000 <<mylib::mynewt::os::hal_timer as core::default::Default>::default>:
_ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17h2d6684ff581430f0E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:444
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for hal_timer {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17he26e64e9c14832e3E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
_ZN71_$LT$mylib..mynewt..os..hal_timer$u20$as$u20$core..default..Default$GT$7default17h2d6684ff581430f0E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:446
        unsafe { ::core::mem::zeroed() }
    }
   e:	4770      	bx	lr

Disassembly of section .text._ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h3275931b791c43e8E:

00000000 <<mylib::mynewt::os::os_dev as core::default::Default>::default>:
_ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h3275931b791c43e8E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:524
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_dev {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17hfe358010eb4c99aaE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	2124      	movs	r1, #36	; 0x24
   4:	f7ff fffe 	bl	0 <__aeabi_memclr4>
_ZN68_$LT$mylib..mynewt..os..os_dev$u20$as$u20$core..default..Default$GT$7default17h3275931b791c43e8E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:526
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E:

00000000 <<mylib::mynewt::os::os_mbuf as core::default::Default>::default>:
_ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:646
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_mbuf {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h1c6956ea7e5b83eeE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
_ZN69_$LT$mylib..mynewt..os..os_mbuf$u20$as$u20$core..default..Default$GT$7default17h25300351dace5d20E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:648
        unsafe { ::core::mem::zeroed() }
    }
   a:	4770      	bx	lr

Disassembly of section .text._ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h277cca8a2603c546E:

00000000 <<mylib::mynewt::os::os_mempool as core::default::Default>::default>:
_ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h277cca8a2603c546E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:851
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_mempool {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17hedd4ec805c7038b0E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	e9c0 1104 	strd	r1, r1, [r0, #16]
   e:	6181      	str	r1, [r0, #24]
_ZN72_$LT$mylib..mynewt..os..os_mempool$u20$as$u20$core..default..Default$GT$7default17h277cca8a2603c546E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:853
        unsafe { ::core::mem::zeroed() }
    }
  10:	4770      	bx	lr

Disassembly of section .text._ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17h9869505e8db9d124E:

00000000 <<mylib::mynewt::os::os_mutex as core::default::Default>::default>:
_ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17h9869505e8db9d124E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:952
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_mutex {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h3546fd01f7f4d102E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	6081      	str	r1, [r0, #8]
_ZN70_$LT$mylib..mynewt..os..os_mutex$u20$as$u20$core..default..Default$GT$7default17h9869505e8db9d124E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:954
        unsafe { ::core::mem::zeroed() }
    }
   8:	4770      	bx	lr

Disassembly of section .text._ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h3d1cba1549894c26E:

00000000 <<mylib::mynewt::os::os_sanity_check as core::default::Default>::default>:
_ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h3d1cba1549894c26E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:986
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_sanity_check {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h50d278ff9c5980c7E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	6101      	str	r1, [r0, #16]
_ZN77_$LT$mylib..mynewt..os..os_sanity_check$u20$as$u20$core..default..Default$GT$7default17h3d1cba1549894c26E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:988
        unsafe { ::core::mem::zeroed() }
    }
   c:	4770      	bx	lr

Disassembly of section .text._ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17h4996347e9cb33f3aE:

00000000 <<mylib::mynewt::os::os_task as core::default::Default>::default>:
_ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17h4996347e9cb33f3aE():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1083
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_task {
    fn default() -> Self {
   0:	b580      	push	{r7, lr}
_ZN4core3mem6zeroed17hfd7a97f372d1c373E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	2150      	movs	r1, #80	; 0x50
   4:	f7ff fffe 	bl	0 <__aeabi_memclr4>
_ZN69_$LT$mylib..mynewt..os..os_task$u20$as$u20$core..default..Default$GT$7default17h4996347e9cb33f3aE():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1085
        unsafe { ::core::mem::zeroed() }
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E:

00000000 <<mylib::mynewt::os::os_task_list as core::default::Default>::default>:
_ZN74_$LT$mylib..mynewt..os..os_task_list$u20$as$u20$core..default..Default$GT$7default17h6c8e4fa8dea61a74E():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1140
    pub tqh_last: *mut *mut os_task,
}
impl Default for os_task_list {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
   0:	2000      	movs	r0, #0
   2:	2100      	movs	r1, #0
   4:	4770      	bx	lr

Disassembly of section .text._ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hbb4f291aae5507aaE:

00000000 <<mylib::mynewt::os::os_sem as core::default::Default>::default>:
_ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hbb4f291aae5507aaE():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1194
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
impl Default for os_sem {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h968740d0a8fa067cE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
_ZN68_$LT$mylib..mynewt..os..os_sem$u20$as$u20$core..default..Default$GT$7default17hbb4f291aae5507aaE():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/os.rs:1196
        unsafe { ::core::mem::zeroed() }
    }
   6:	4770      	bx	lr

Disassembly of section .text._ZN5mylib6mynewt6sensor21null_sensor_data_func17ha06778e2cc6a8ccaE:

00000000 <mylib::mynewt::sensor::null_sensor_data_func>:
_ZN5mylib6mynewt6sensor21null_sensor_data_func17ha06778e2cc6a8ccaE():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:33
    sl_arg        : 0,
    sl_next       : 0,
};

///  Define a dummy sensor data function in case there is none.
extern fn null_sensor_data_func(_sensor: SensorPtr, _arg: SensorArg, _sensor_data: SensorDataPtr, _sensor_type: SensorType) -> i32 { 0 }
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

Disassembly of section .text._ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hc72dbfc5eee2882aE:

00000000 <<mylib::mynewt::sensor_network::sensor_network_interface as core::default::Default>::default>:
_ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hc72dbfc5eee2882aE():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/sensor_network.rs:49
        ) -> ::cty::c_int,
    >,
    pub transport_registered: u8,
}
impl Default for sensor_network_interface {
    fn default() -> Self {
   0:	2100      	movs	r1, #0
_ZN4core3mem6zeroed17h04be15dca37b2f0cE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/mem.rs:447
   2:	e9c0 1100 	strd	r1, r1, [r0]
   6:	e9c0 1102 	strd	r1, r1, [r0, #8]
   a:	6101      	str	r1, [r0, #16]
_ZN98_$LT$mylib..mynewt..sensor_network..sensor_network_interface$u20$as$u20$core..default..Default$GT$7default17hc72dbfc5eee2882aE():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/sensor_network.rs:51
        unsafe { ::core::mem::zeroed() }
    }
   c:	4770      	bx	lr

Disassembly of section .text._ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E:

00000000 <mylib::listen_sensor::read_temperature>:
_ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:70
///  This listener function is called by Mynewt every 10 seconds (for local sensors) or when sensor data is received
///  (for Remote Sensors).  Mynewt has fetched the raw or computed temperature value, passed through `sensor_data`.
///  If this is a Sensor Node, we send the sensor data to the Collector Node.
///  If this is a Collector Node or Standalone Node, we send the sensor data to the CoAP server.  
///  Return 0 if we have processed the sensor data successfully.
extern fn read_temperature(sensor: SensorPtr, _arg: SensorArg, sensor_data: SensorDataPtr, sensor_type: SensorType) -> i32 {
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	b092      	sub	sp, #72	; 0x48
   6:	4604      	mov	r4, r0
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
///  Display message `msg` on the Arm Semihosting console (via OpenOCD).
pub fn console_print(msg: &[u8]) {
    let len = msg.len();
    unsafe {
        //  Call the Semihosting Console API, which is unsafe.
        console_buffer(msg.as_ptr(), len as u32);
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2111      	movs	r1, #17
  12:	4616      	mov	r6, r2
  14:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  18:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:75
    unsafe {
        console_print(b"read_temperature\n");
        //  Check that the temperature data is valid.
        //  TODO
        if is_null_sensor_data(sensor_data) { return SYS_EINVAL; }  //  Exit if data is missing
  1c:	4630      	mov	r0, r6
  1e:	f7ff fffe 	bl	0 <is_null_sensor_data>
  22:	b120      	cbz	r0, 2e <mylib::listen_sensor::read_temperature+0x2e>
  24:	f06f 0001 	mvn.w	r0, #1
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:106
        }
        assert!(rc == 0);
        //#endif  //  MYNEWT_VAL(SENSOR_COAP)
    }
    0
}
  28:	b012      	add	sp, #72	; 0x48
  2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:76
        assert!(!is_null_sensor(sensor));
  2e:	4620      	mov	r0, r4
  30:	f7ff fffe 	bl	0 <is_null_sensor>
  34:	2800      	cmp	r0, #0
  36:	f040 80db 	bne.w	1f0 <mylib::listen_sensor::read_temperature+0x1f0>
  3a:	e9dd 1018 	ldrd	r1, r0, [sp, #96]	; 0x60
_ZN5mylib13listen_sensor15get_temperature17hce65d8bc375fe4dbE():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:114
///  `sensor_type` indicates whether `sensor_data` contains raw or computed temperature.  We return 
///  the raw or computed temperature, as well as the key and value type.
fn get_temperature(sensor_data: *const CVoid, sensor_type: SensorType) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                                //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
  3e:	f081 6180 	eor.w	r1, r1, #67108864	; 0x4000000
  42:	ea41 0500 	orr.w	r5, r1, r0
_ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:80
        let device = sensor_get_device(sensor);
  46:	4620      	mov	r0, r4
  48:	f7ff fffe 	bl	0 <sensor_get_device>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:81
        let device_name_ptr: *const c_char = device_get_name(device);
  4c:	f7ff fffe 	bl	0 <device_get_name>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:82
        let device_name: &CStr = CStr::from_ptr(device_name_ptr);
  50:	f7ff fffe 	bl	0 <cstr_core::CStr::from_ptr>
  54:	4604      	mov	r4, r0
  56:	4688      	mov	r8, r1
  58:	2000      	movs	r0, #0
_ZN5mylib13listen_sensor15get_temperature17hce65d8bc375fe4dbE():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:114
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
  5a:	b9dd      	cbnz	r5, 94 <mylib::listen_sensor::read_temperature+0x94>
  5c:	a906      	add	r1, sp, #24
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:116
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = SensorTempRawData {
  5e:	f88d 001c 	strb.w	r0, [sp, #28]
  62:	9006      	str	r0, [sp, #24]
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:120
                strd_temp_raw: 0,
                strd_temp_raw_is_valid: 0,
            };
            let rc = unsafe { get_temp_raw_data(sensor_data, &mut rawtempdata) };
  64:	4630      	mov	r0, r6
  66:	f7ff fffe 	bl	0 <get_temp_raw_data>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:121
            assert!(rc == 0);
  6a:	2800      	cmp	r0, #0
  6c:	f040 80ce 	bne.w	20c <mylib::listen_sensor::read_temperature+0x20c>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:124

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  70:	f89d 001c 	ldrb.w	r0, [sp, #28]
  74:	b338      	cbz	r0, 52 <mylib::listen_sensor::read_temperature+0x52>
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  76:	f240 0000 	movw	r0, #0
  7a:	2119      	movs	r1, #25
  7c:	f2c0 0000 	movt	r0, #0
  80:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  84:	f7ff fffe 	bl	0 <console_flush>
  88:	f240 0600 	movw	r6, #0
  8c:	2701      	movs	r7, #1
  8e:	f2c0 0600 	movt	r6, #0
  92:	e01d      	b.n	d0 <mylib::listen_sensor::read_temperature+0xd0>
_ZN5mylib13listen_sensor15get_temperature17hce65d8bc375fe4dbE():
  94:	a906      	add	r1, sp, #24
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:132
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console_print(b"TMP listener got rawtmp \n");  // return_value->int_val);
        },
        SENSOR_TYPE_AMBIENT_TEMPERATURE => {      //  If this is computed temperature...
            //  Interpret the sensor data as a sensor_temp_data struct that contains computed temp.
            let mut tempdata = SensorTempData {
  96:	f88d 001c 	strb.w	r0, [sp, #28]
  9a:	9006      	str	r0, [sp, #24]
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:136
                std_temp: 0.0,
                std_temp_is_valid: 0,
            };
            let rc = unsafe { get_temp_data(sensor_data, &mut tempdata) };
  9c:	4630      	mov	r0, r6
  9e:	f7ff fffe 	bl	0 <get_temp_data>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:137
            assert!(rc == 0);
  a2:	2800      	cmp	r0, #0
  a4:	f040 80b9 	bne.w	21a <mylib::listen_sensor::read_temperature+0x21a>
  a8:	f240 0600 	movw	r6, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:140

            //  Check that the computed temperature data is valid.
            if tempdata.std_temp_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  ac:	f89d 701c 	ldrb.w	r7, [sp, #28]
  b0:	f240 0000 	movw	r0, #0
  b4:	f2c0 0600 	movt	r6, #0
  b8:	f2c0 0000 	movt	r0, #0
  bc:	2f00      	cmp	r7, #0
  be:	bf0c      	ite	eq
  c0:	4606      	moveq	r6, r0
  c2:	2701      	movne	r7, #1
  c4:	e004      	b.n	d0 <mylib::listen_sensor::read_temperature+0xd0>
_ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E():
  c6:	f240 0600 	movw	r6, #0
  ca:	2700      	movs	r7, #0
  cc:	f2c0 0600 	movt	r6, #0
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  d0:	f240 0000 	movw	r0, #0
  d4:	2111      	movs	r1, #17
  d6:	f2c0 0000 	movt	r0, #0
  da:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  de:	f7ff fffe 	bl	0 <console_flush>
  e2:	2000      	movs	r0, #0
_ZN5mylib9send_coap16send_sensor_data17h782d51da48ba3b18E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:126
///  so this function will return without waiting for the message to be transmitted.  
///  Return 0 if successful, SYS_EAGAIN if network is not ready yet.
pub fn send_sensor_data(sensor_val: &SensorValue, sensor_node: &CStr) -> i32 {
	console_print(b"send_sensor_data\n");
    //  TODO: Remove val
    let mut val = sensor_value{
  e4:	f240 0500 	movw	r5, #0
  e8:	9004      	str	r0, [sp, #16]
  ea:	f2c0 0500 	movt	r5, #0
  ee:	f8ad 000c 	strh.w	r0, [sp, #12]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:133
        val_type: 0,
        int_val: 0,
        float_val: 0.0,
    };
	//  For Sensor Node: Transmit the sensor data to the Collector Node as CBOR.
	if unsafe { should_send_to_collector(&mut val, sensor_node.as_ptr()) } { 
  f2:	4621      	mov	r1, r4
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:126
    let mut val = sensor_value{
  f4:	9002      	str	r0, [sp, #8]
  f6:	a801      	add	r0, sp, #4
  f8:	9501      	str	r5, [sp, #4]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:133
	if unsafe { should_send_to_collector(&mut val, sensor_node.as_ptr()) } { 
  fa:	f7ff fffe 	bl	0 <should_send_to_collector>
  fe:	b398      	cbz	r0, 6a <mylib::listen_sensor::read_temperature+0x6a>
_ZN5mylib9send_coap29send_sensor_data_to_collector17h661b96fef677c603E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:211
///  to be transmitted.  Return 0 if successful, `SYS_EAGAIN` if network is not ready yet.
///  The CoAP payload needs to be very compact (under 32 bytes) so it will be encoded in CBOR like this:
///  `{ t: 2870 }`
fn send_sensor_data_to_collector(sensor_val: &SensorValue, node_id: &CStr) -> i32 {
	////  TODO: if let SensorValueType::None = sensor_val.val { assert!(false); }
    if unsafe { !NETWORK_IS_READY } { return SYS_EAGAIN; }  //  If network is not ready, tell caller (Sensor Listener) to try later.
 100:	f240 0000 	movw	r0, #0
 104:	f2c0 0000 	movt	r0, #0
 108:	7800      	ldrb	r0, [r0, #0]
 10a:	2801      	cmp	r0, #1
 10c:	d15d      	bne.n	1ca <mylib::listen_sensor::read_temperature+0x1ca>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:216

    //  Start composing the CoAP Collector message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = unsafe { init_collector_post() };  assert!(rc);
 10e:	f7ff fffe 	bl	0 <init_collector_post>
 112:	2800      	cmp	r0, #0
 114:	f000 80b7 	beq.w	286 <mylib::listen_sensor::read_temperature+0x286>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:219

    //  Compose the CoAP Payload in CBOR using the `coap!()` macro.
    let _payload = coap!(@cbor {
 118:	f240 0400 	movw	r4, #0
 11c:	f240 0500 	movw	r5, #0
 120:	f2c0 0400 	movt	r4, #0
 124:	f2c0 0500 	movt	r5, #0
 128:	4620      	mov	r0, r4
 12a:	4629      	mov	r1, r5
 12c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 130:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 134:	4628      	mov	r0, r5
 136:	4631      	mov	r1, r6
 138:	463a      	mov	r2, r7
 13a:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 13e:	4628      	mov	r0, r5
 140:	f240 42d2 	movw	r2, #1234	; 0x4d2
 144:	2300      	movs	r3, #0
 146:	f7ff fffe 	bl	0 <cbor_encode_int>
 14a:	4620      	mov	r0, r4
 14c:	4629      	mov	r1, r5
 14e:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:227
    });

    //  Post the CoAP Collector message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    let rc = unsafe { do_collector_post() };  assert!(rc);
 152:	f7ff fffe 	bl	0 <do_collector_post>
 156:	2800      	cmp	r0, #0
 158:	f000 809c 	beq.w	294 <mylib::listen_sensor::read_temperature+0x294>
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
 15c:	f240 0000 	movw	r0, #0
 160:	2121      	movs	r1, #33	; 0x21
 162:	f2c0 0000 	movt	r0, #0
 166:	e026      	b.n	1b6 <mylib::listen_sensor::read_temperature+0x1b6>
_ZN9cstr_core4CStr8to_bytes17h62ad98c7b7c63aecE():
/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/cstr_core-0.1.2/src/lib.rs:1033
    /// assert_eq!(c_str.to_bytes(), b"foo");
    /// ```
    #[inline]
    pub fn to_bytes(&self) -> &[u8] {
        let bytes = self.to_bytes_with_nul();
        &bytes[..bytes.len() - 1]
 168:	f1a8 0001 	sub.w	r0, r8, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h0359d5933038e6d6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/slice/mod.rs:2745
 16c:	f1b8 0f00 	cmp.w	r8, #0
 170:	d05a      	beq.n	228 <mylib::listen_sensor::read_temperature+0x228>
_ZN5mylib9send_coap26send_sensor_data_to_server17haad837dc68fa5adfE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:161
    assert_ne!(node_id.to_bytes()[0], 0);
 172:	2800      	cmp	r0, #0
 174:	d05c      	beq.n	230 <mylib::listen_sensor::read_temperature+0x230>
 176:	7820      	ldrb	r0, [r4, #0]
 178:	2800      	cmp	r0, #0
 17a:	d062      	beq.n	242 <mylib::listen_sensor::read_temperature+0x242>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:162
	if unsafe { !NETWORK_IS_READY } { return SYS_EAGAIN; }  //  If network is not ready, tell caller (Sensor Listener) to try later.
 17c:	f240 0000 	movw	r0, #0
 180:	f2c0 0000 	movt	r0, #0
 184:	7800      	ldrb	r0, [r0, #0]
 186:	2801      	cmp	r0, #1
 188:	d11f      	bne.n	1ca <mylib::listen_sensor::read_temperature+0x1ca>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:163
	let device_id = unsafe { get_device_id() };  assert_ne!(device_id, 0 as *const ::cty::c_char);
 18a:	f7ff fffe 	bl	0 <get_device_id>
 18e:	2800      	cmp	r0, #0
 190:	9005      	str	r0, [sp, #20]
 192:	f000 8086 	beq.w	2a2 <mylib::listen_sensor::read_temperature+0x2a2>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:168
	let rc = unsafe { init_server_post(0 as *const ::cty::c_char) };  assert!(rc);
 196:	2000      	movs	r0, #0
 198:	f7ff fffe 	bl	0 <init_server_post>
 19c:	2800      	cmp	r0, #0
 19e:	f000 80a7 	beq.w	2f0 <mylib::listen_sensor::read_temperature+0x2f0>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:187
    let rc = unsafe { do_server_post() };  assert!(rc);
 1a2:	f7ff fffe 	bl	0 <do_server_post>
 1a6:	2800      	cmp	r0, #0
 1a8:	f000 80a9 	beq.w	2fe <mylib::listen_sensor::read_temperature+0x2fe>
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
 1ac:	f240 0000 	movw	r0, #0
 1b0:	214b      	movs	r1, #75	; 0x4b
 1b2:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap16send_sensor_data17h782d51da48ba3b18E():
 1b6:	f7ff fffe 	bl	0 <console_buffer>
 1ba:	f7ff fffe 	bl	0 <console_flush>
 1be:	2000      	movs	r0, #0
_ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:98
        if rc == SYS_EAGAIN {
 1c0:	2800      	cmp	r0, #0
 1c2:	d106      	bne.n	1d2 <mylib::listen_sensor::read_temperature+0x1d2>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:106
}
 1c4:	b012      	add	sp, #72	; 0x48
 1c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 1ca:	f06f 0005 	mvn.w	r0, #5
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:98
        if rc == SYS_EAGAIN {
 1ce:	2800      	cmp	r0, #0
 1d0:	d0f8      	beq.n	1c4 <mylib::listen_sensor::read_temperature+0x1c4>
 1d2:	3006      	adds	r0, #6
 1d4:	d113      	bne.n	1fe <mylib::listen_sensor::read_temperature+0x1fe>
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
 1d6:	f240 0000 	movw	r0, #0
 1da:	2116      	movs	r1, #22
 1dc:	f2c0 0000 	movt	r0, #0
 1e0:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
 1e4:	f7ff fffe 	bl	0 <console_flush>
 1e8:	2000      	movs	r0, #0
_ZN5mylib13listen_sensor16read_temperature17hec5e01f7596f0986E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:106
}
 1ea:	b012      	add	sp, #72	; 0x48
 1ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:76
        assert!(!is_null_sensor(sensor));
 1f0:	f240 0000 	movw	r0, #0
 1f4:	f2c0 0000 	movt	r0, #0
 1f8:	f7ff fffe 	bl	0 <core::panicking::panic>
 1fc:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:102
        assert!(rc == 0);
 1fe:	f240 0000 	movw	r0, #0
 202:	f2c0 0000 	movt	r0, #0
 206:	f7ff fffe 	bl	0 <core::panicking::panic>
 20a:	defe      	udf	#254	; 0xfe
_ZN5mylib13listen_sensor15get_temperature17hce65d8bc375fe4dbE():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:121
            assert!(rc == 0);
 20c:	f240 0000 	movw	r0, #0
 210:	f2c0 0000 	movt	r0, #0
 214:	f7ff fffe 	bl	0 <core::panicking::panic>
 218:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:137
            assert!(rc == 0);
 21a:	f240 0000 	movw	r0, #0
 21e:	f2c0 0000 	movt	r0, #0
 222:	f7ff fffe 	bl	0 <core::panicking::panic>
 226:	defe      	udf	#254	; 0xfe
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h0359d5933038e6d6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/slice/mod.rs:2746
 228:	2100      	movs	r1, #0
 22a:	f7ff fffe 	bl	0 <core::slice::slice_index_len_fail>
 22e:	defe      	udf	#254	; 0xfe
_ZN5mylib9send_coap26send_sensor_data_to_server17haad837dc68fa5adfE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:161
    assert_ne!(node_id.to_bytes()[0], 0);
 230:	f240 0000 	movw	r0, #0
 234:	2100      	movs	r1, #0
 236:	f2c0 0000 	movt	r0, #0
 23a:	2200      	movs	r2, #0
 23c:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 240:	defe      	udf	#254	; 0xfe
 242:	f240 0000 	movw	r0, #0
 246:	a911      	add	r1, sp, #68	; 0x44
 248:	f2c0 0000 	movt	r0, #0
 24c:	9410      	str	r4, [sp, #64]	; 0x40
 24e:	900f      	str	r0, [sp, #60]	; 0x3c
 250:	e9cd 010d 	strd	r0, r1, [sp, #52]	; 0x34
 254:	a810      	add	r0, sp, #64	; 0x40
 256:	900c      	str	r0, [sp, #48]	; 0x30
 258:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 25a:	900b      	str	r0, [sp, #44]	; 0x2c
 25c:	a80c      	add	r0, sp, #48	; 0x30
 25e:	900a      	str	r0, [sp, #40]	; 0x28
 260:	2000      	movs	r0, #0
_ZN5mylib9send_coap26send_sensor_data_to_server17haad837dc68fa5adfE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:161
 262:	9511      	str	r5, [sp, #68]	; 0x44
 264:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 268:	e9cd 0008 	strd	r0, r0, [sp, #32]
 26c:	2003      	movs	r0, #3
 26e:	9007      	str	r0, [sp, #28]
 270:	f240 0000 	movw	r0, #0
 274:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap26send_sensor_data_to_server17haad837dc68fa5adfE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:161
 278:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 27c:	9006      	str	r0, [sp, #24]
 27e:	a806      	add	r0, sp, #24
_ZN5mylib9send_coap26send_sensor_data_to_server17haad837dc68fa5adfE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:161
 280:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 284:	defe      	udf	#254	; 0xfe
_ZN5mylib9send_coap29send_sensor_data_to_collector17h661b96fef677c603E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:216
    let rc = unsafe { init_collector_post() };  assert!(rc);
 286:	f240 0000 	movw	r0, #0
 28a:	f2c0 0000 	movt	r0, #0
 28e:	f7ff fffe 	bl	0 <core::panicking::panic>
 292:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:227
    let rc = unsafe { do_collector_post() };  assert!(rc);
 294:	f240 0000 	movw	r0, #0
 298:	f2c0 0000 	movt	r0, #0
 29c:	f7ff fffe 	bl	0 <core::panicking::panic>
 2a0:	defe      	udf	#254	; 0xfe
_ZN5mylib9send_coap16send_sensor_data17h782d51da48ba3b18E():
 2a2:	a805      	add	r0, sp, #20
_ZN5mylib9send_coap26send_sensor_data_to_server17haad837dc68fa5adfE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:163
	let device_id = unsafe { get_device_id() };  assert_ne!(device_id, 0 as *const ::cty::c_char);
 2a4:	9010      	str	r0, [sp, #64]	; 0x40
 2a6:	f240 0000 	movw	r0, #0
 2aa:	a911      	add	r1, sp, #68	; 0x44
 2ac:	f2c0 0000 	movt	r0, #0
 2b0:	900f      	str	r0, [sp, #60]	; 0x3c
 2b2:	e9cd 010d 	strd	r0, r1, [sp, #52]	; 0x34
 2b6:	a810      	add	r0, sp, #64	; 0x40
 2b8:	900c      	str	r0, [sp, #48]	; 0x30
 2ba:	f240 0000 	movw	r0, #0
 2be:	f2c0 0000 	movt	r0, #0
 2c2:	f240 0100 	movw	r1, #0
 2c6:	9011      	str	r0, [sp, #68]	; 0x44
 2c8:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 2ca:	900b      	str	r0, [sp, #44]	; 0x2c
 2cc:	a80c      	add	r0, sp, #48	; 0x30
 2ce:	900a      	str	r0, [sp, #40]	; 0x28
 2d0:	2000      	movs	r0, #0
 2d2:	e9cd 0008 	strd	r0, r0, [sp, #32]
 2d6:	2003      	movs	r0, #3
 2d8:	9007      	str	r0, [sp, #28]
 2da:	f240 0000 	movw	r0, #0
 2de:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap26send_sensor_data_to_server17haad837dc68fa5adfE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:163
 2e2:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 2e6:	9006      	str	r0, [sp, #24]
 2e8:	a806      	add	r0, sp, #24
_ZN5mylib9send_coap26send_sensor_data_to_server17haad837dc68fa5adfE():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:163
 2ea:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 2ee:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:168
	let rc = unsafe { init_server_post(0 as *const ::cty::c_char) };  assert!(rc);
 2f0:	f240 0000 	movw	r0, #0
 2f4:	f2c0 0000 	movt	r0, #0
 2f8:	f7ff fffe 	bl	0 <core::panicking::panic>
 2fc:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:187
    let rc = unsafe { do_server_post() };  assert!(rc);
 2fe:	f240 0000 	movw	r0, #0
 302:	f2c0 0000 	movt	r0, #0
 306:	f7ff fffe 	bl	0 <core::panicking::panic>
 30a:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E:

00000000 <mylib::send_coap::network_task_func>:
_ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:89
extern "C" fn network_task_func(_arg: *mut ::cty::c_void) {
   0:	b08e      	sub	sp, #56	; 0x38
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
   2:	f240 0000 	movw	r0, #0
   6:	210a      	movs	r1, #10
   8:	f2c0 0000 	movt	r0, #0
   c:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  10:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:90
	console_print(b"NET start\n");  assert!(unsafe { !NETWORK_IS_READY });
  14:	f240 0400 	movw	r4, #0
  18:	f2c0 0400 	movt	r4, #0
  1c:	7820      	ldrb	r0, [r4, #0]
  1e:	2801      	cmp	r0, #1
  20:	d026      	beq.n	70 <mylib::send_coap::network_task_func+0x70>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:94
	if unsafe { is_standalone_node() } || unsafe { is_collector_node() } {
  22:	f7ff fffe 	bl	0 <is_standalone_node>
  26:	b910      	cbnz	r0, 8 <is_collector_node+0x8>
  28:	f7ff fffe 	bl	0 <is_collector_node>
  2c:	b120      	cbz	r0, c <register_server_transport+0xc>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:95
		let rc = unsafe { register_server_transport() };  assert_eq!(rc, 0);
  2e:	f7ff fffe 	bl	0 <register_server_transport>
  32:	2800      	cmp	r0, #0
  34:	9001      	str	r0, [sp, #4]
  36:	d122      	bne.n	7e <mylib::send_coap::network_task_func+0x7e>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:99
	if unsafe { is_collector_node() } || unsafe { is_sensor_node() } {
  38:	f7ff fffe 	bl	0 <is_collector_node>
  3c:	b910      	cbnz	r0, 8 <is_sensor_node+0x8>
  3e:	f7ff fffe 	bl	0 <is_sensor_node>
  42:	b120      	cbz	r0, c <register_collector_transport+0xc>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:100
		let rc = unsafe { register_collector_transport() };  assert_eq!(rc, 0);
  44:	f7ff fffe 	bl	0 <register_collector_transport>
  48:	2800      	cmp	r0, #0
  4a:	9001      	str	r0, [sp, #4]
  4c:	d13e      	bne.n	cc <mylib::send_coap::network_task_func+0xcc>
  4e:	2001      	movs	r0, #1
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:105
	unsafe { NETWORK_IS_READY = true; }  //  Indicate that network is ready.
  50:	7020      	strb	r0, [r4, #0]
  52:	f240 0400 	movw	r4, #0
  56:	f2c0 0400 	movt	r4, #0
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  5a:	4620      	mov	r0, r4
  5c:	2111      	movs	r1, #17
  5e:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  62:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:109
		unsafe { os_time_delay(10 * OS_TICKS_PER_SEC); }                   //  Wait 10 seconds before repeating.
  66:	f242 7010 	movw	r0, #10000	; 0x2710
  6a:	f7ff fffe 	bl	0 <os_time_delay>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:107
	loop {  //  Loop forever...        
  6e:	e7f4      	b.n	ffffffec <.Lanon.c8f7774afcdcccd4de3635c5cf798096.52+0xffffffe4>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:90
	console_print(b"NET start\n");  assert!(unsafe { !NETWORK_IS_READY });
  70:	f240 0000 	movw	r0, #0
  74:	f2c0 0000 	movt	r0, #0
  78:	f7ff fffe 	bl	0 <core::panicking::panic>
  7c:	defe      	udf	#254	; 0xfe
  7e:	a801      	add	r0, sp, #4
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:95
		let rc = unsafe { register_server_transport() };  assert_eq!(rc, 0);
  80:	900c      	str	r0, [sp, #48]	; 0x30
  82:	f240 0000 	movw	r0, #0
  86:	a90d      	add	r1, sp, #52	; 0x34
  88:	f2c0 0000 	movt	r0, #0
  8c:	900b      	str	r0, [sp, #44]	; 0x2c
  8e:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  92:	a80c      	add	r0, sp, #48	; 0x30
  94:	9008      	str	r0, [sp, #32]
  96:	f240 0000 	movw	r0, #0
  9a:	f2c0 0000 	movt	r0, #0
  9e:	f240 0100 	movw	r1, #0
  a2:	900d      	str	r0, [sp, #52]	; 0x34
  a4:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  a6:	9007      	str	r0, [sp, #28]
  a8:	a808      	add	r0, sp, #32
  aa:	9006      	str	r0, [sp, #24]
  ac:	2000      	movs	r0, #0
  ae:	e9cd 0004 	strd	r0, r0, [sp, #16]
  b2:	2003      	movs	r0, #3
  b4:	9003      	str	r0, [sp, #12]
  b6:	f240 0000 	movw	r0, #0
  ba:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:95
  be:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  c2:	9002      	str	r0, [sp, #8]
  c4:	a802      	add	r0, sp, #8
_ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:95
  c6:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  ca:	defe      	udf	#254	; 0xfe
  cc:	a801      	add	r0, sp, #4
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:100
		let rc = unsafe { register_collector_transport() };  assert_eq!(rc, 0);
  ce:	900c      	str	r0, [sp, #48]	; 0x30
  d0:	f240 0000 	movw	r0, #0
  d4:	a90d      	add	r1, sp, #52	; 0x34
  d6:	f2c0 0000 	movt	r0, #0
  da:	900b      	str	r0, [sp, #44]	; 0x2c
  dc:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  e0:	a80c      	add	r0, sp, #48	; 0x30
  e2:	9008      	str	r0, [sp, #32]
  e4:	f240 0000 	movw	r0, #0
  e8:	f2c0 0000 	movt	r0, #0
  ec:	f240 0100 	movw	r1, #0
  f0:	900d      	str	r0, [sp, #52]	; 0x34
  f2:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  f4:	9007      	str	r0, [sp, #28]
  f6:	a808      	add	r0, sp, #32
  f8:	9006      	str	r0, [sp, #24]
  fa:	2000      	movs	r0, #0
  fc:	e9cd 0004 	strd	r0, r0, [sp, #16]
 100:	2003      	movs	r0, #3
 102:	9003      	str	r0, [sp, #12]
 104:	f240 0000 	movw	r0, #0
 108:	f2c0 0000 	movt	r0, #0
_ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:100
 10c:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 110:	9002      	str	r0, [sp, #8]
 112:	a802      	add	r0, sp, #8
_ZN5mylib9send_coap17network_task_func17hd9a1eeab35a857d1E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:100
 114:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 118:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:26
use crate::listen_sensor::*;    //  Import listen_sensor.rs for polling the temperature sensor
use crate::send_coap::*;        //  Import send_coap.rs for sending sensor data

///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
pub extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b092      	sub	sp, #72	; 0x48
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:28
    //  Init Mynewt system.
    unsafe { rust_sysinit()  };
   2:	f7ff fffe 	bl	0 <rust_sysinit>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:29
    unsafe { console_flush() };
   6:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
   a:	f240 0000 	movw	r0, #0
   e:	2113      	movs	r1, #19
  10:	f2c0 0000 	movt	r0, #0
  14:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  18:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib9send_coap18start_network_task17hc505bb54690a0879E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:68
  let rc = unsafe { os_task_init( //  Create a new task and start it...
  1c:	f240 0100 	movw	r1, #0
  20:	f44f 7080 	mov.w	r0, #256	; 0x100
  24:	f2c0 0100 	movt	r1, #0
  28:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  2c:	230a      	movs	r3, #10
  2e:	2400      	movs	r4, #0
  30:	e9cd 3200 	strd	r3, r2, [sp]
  34:	f240 0200 	movw	r2, #0
  38:	e9cd 1002 	strd	r1, r0, [sp, #8]
  3c:	f240 0000 	movw	r0, #0
  40:	f240 0100 	movw	r1, #0
  44:	f2c0 0000 	movt	r0, #0
  48:	f2c0 0100 	movt	r1, #0
  4c:	f2c0 0200 	movt	r2, #0
  50:	2300      	movs	r3, #0
  52:	f7ff fffe 	bl	0 <os_task_init>
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:77
  assert_eq!(rc, 0);
  56:	2800      	cmp	r0, #0
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:68
  let rc = unsafe { os_task_init( //  Create a new task and start it...
  58:	9005      	str	r0, [sp, #20]
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:77
  assert_eq!(rc, 0);
  5a:	d140      	bne.n	de <main+0xde>
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  5c:	f240 0000 	movw	r0, #0
  60:	210a      	movs	r1, #10
  62:	f2c0 0000 	movt	r0, #0
  66:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  6a:	f7ff fffe 	bl	0 <console_flush>
_ZN5mylib13listen_sensor21start_sensor_listener17h5ddd5a4b974eb889E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:34
    let rc = unsafe { sensor_set_poll_rate_ms(SENSOR_DEVICE, SENSOR_POLL_TIME) };
  6e:	f240 0000 	movw	r0, #0
  72:	f242 7110 	movw	r1, #10000	; 0x2710
  76:	f2c0 0000 	movt	r0, #0
  7a:	f7ff fffe 	bl	0 <sensor_set_poll_rate_ms>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:35
    assert!(rc == 0);
  7e:	2800      	cmp	r0, #0
  80:	d153      	bne.n	12a <main+0x12a>
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:38
    let listen_sensor = unsafe { sensor_mgr_find_next_bydevname(SENSOR_DEVICE, null_sensor()) };
  82:	f7ff fffe 	bl	0 <null_sensor>
  86:	4601      	mov	r1, r0
  88:	f240 0000 	movw	r0, #0
  8c:	f2c0 0000 	movt	r0, #0
  90:	f7ff fffe 	bl	0 <sensor_mgr_find_next_bydevname>
  94:	4604      	mov	r4, r0
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:39
    assert!(!unsafe{ is_null_sensor(listen_sensor) });
  96:	f7ff fffe 	bl	0 <is_null_sensor>
  9a:	2800      	cmp	r0, #0
  9c:	d14c      	bne.n	138 <main+0x138>
_ZN5mylib6mynewt6sensor17register_listener17h5bc3f120df05213cE():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:15
    unsafe { assert!(LISTENER_INTERNAL.sl_sensor_type == 0) };  //  Make sure it's not used.
  9e:	f240 0100 	movw	r1, #0
  a2:	f2c0 0100 	movt	r1, #0
  a6:	e9d1 0200 	ldrd	r0, r2, [r1]
  aa:	4310      	orrs	r0, r2
  ac:	d14b      	bne.n	146 <main+0x146>
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:17
    unsafe { LISTENER_INTERNAL = listener };
  ae:	f240 0300 	movw	r3, #0
  b2:	2000      	movs	r0, #0
  b4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  b8:	f04f 0c01 	mov.w	ip, #1
  bc:	f2c0 0300 	movt	r3, #0
  c0:	e9c1 2000 	strd	r2, r0, [r1]
  c4:	e9c1 3c02 	strd	r3, ip, [r1, #8]
  c8:	6108      	str	r0, [r1, #16]
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:19
    unsafe { sensor_register_listener(sensor, &mut LISTENER_INTERNAL) }
  ca:	4620      	mov	r0, r4
  cc:	f7ff fffe 	bl	0 <sensor_register_listener>
_ZN5mylib13listen_sensor21start_sensor_listener17h5ddd5a4b974eb889E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:51
    assert!(rc == 0);
  d0:	2800      	cmp	r0, #0
  d2:	d13f      	bne.n	154 <main+0x154>
main():
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:56

    //  Main event loop
    loop {                            //  Loop forever...
        unsafe {
            os_eventq_run(            //  Process events...
                os_eventq_dflt_get()  //  From default event queue.
  d4:	f7ff fffe 	bl	0 <os_eventq_dflt_get>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:55
            os_eventq_run(            //  Process events...
  d8:	f7ff fffe 	bl	0 <os_eventq_run>
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:53
    loop {                            //  Loop forever...
  dc:	e7fa      	b.n	d4 <main+0xd4>
  de:	a805      	add	r0, sp, #20
_ZN5mylib9send_coap18start_network_task17hc505bb54690a0879E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:77
  e0:	9010      	str	r0, [sp, #64]	; 0x40
  e2:	f240 0000 	movw	r0, #0
  e6:	a911      	add	r1, sp, #68	; 0x44
  e8:	f2c0 0000 	movt	r0, #0
  ec:	900f      	str	r0, [sp, #60]	; 0x3c
  ee:	e9cd 010d 	strd	r0, r1, [sp, #52]	; 0x34
  f2:	a810      	add	r0, sp, #64	; 0x40
  f4:	900c      	str	r0, [sp, #48]	; 0x30
  f6:	f240 0000 	movw	r0, #0
  fa:	f2c0 0000 	movt	r0, #0
  fe:	f240 0100 	movw	r1, #0
 102:	9011      	str	r0, [sp, #68]	; 0x44
 104:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 106:	900b      	str	r0, [sp, #44]	; 0x2c
 108:	a80c      	add	r0, sp, #48	; 0x30
 10a:	900a      	str	r0, [sp, #40]	; 0x28
 10c:	2003      	movs	r0, #3
 10e:	e9cd 4408 	strd	r4, r4, [sp, #32]
_ZN5mylib9send_coap18start_network_task17hc505bb54690a0879E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:77
 112:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 116:	9007      	str	r0, [sp, #28]
 118:	f240 0000 	movw	r0, #0
 11c:	f2c0 0000 	movt	r0, #0
 120:	9006      	str	r0, [sp, #24]
 122:	a806      	add	r0, sp, #24
_ZN5mylib9send_coap18start_network_task17hc505bb54690a0879E():
/mnt/c/stm32bluepill-mynewt-sensor/src/send_coap.rs:77
 124:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 128:	defe      	udf	#254	; 0xfe
_ZN5mylib13listen_sensor21start_sensor_listener17h5ddd5a4b974eb889E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:35
    assert!(rc == 0);
 12a:	f240 0000 	movw	r0, #0
 12e:	f2c0 0000 	movt	r0, #0
 132:	f7ff fffe 	bl	0 <core::panicking::panic>
 136:	defe      	udf	#254	; 0xfe
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:39
    assert!(!unsafe{ is_null_sensor(listen_sensor) });
 138:	f240 0000 	movw	r0, #0
 13c:	f2c0 0000 	movt	r0, #0
 140:	f7ff fffe 	bl	0 <core::panicking::panic>
 144:	defe      	udf	#254	; 0xfe
_ZN5mylib6mynewt6sensor17register_listener17h5bc3f120df05213cE():
/mnt/c/stm32bluepill-mynewt-sensor/src/mynewt/sensor.rs:15
    unsafe { assert!(LISTENER_INTERNAL.sl_sensor_type == 0) };  //  Make sure it's not used.
 146:	f240 0000 	movw	r0, #0
 14a:	f2c0 0000 	movt	r0, #0
 14e:	f7ff fffe 	bl	0 <core::panicking::panic>
 152:	defe      	udf	#254	; 0xfe
_ZN5mylib13listen_sensor21start_sensor_listener17h5ddd5a4b974eb889E():
/mnt/c/stm32bluepill-mynewt-sensor/src/listen_sensor.rs:51
    assert!(rc == 0);
 154:	f240 0000 	movw	r0, #0
 158:	f2c0 0000 	movt	r0, #0
 15c:	f7ff fffe 	bl	0 <core::panicking::panic>
 160:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:67

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
   4:	b338      	cbz	r0, 56 <rust_begin_unwind+0x56>
   6:	4604      	mov	r4, r0
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:68
        let file = location.file();
   8:	f7ff fffe 	bl	0 <core::panic::Location::file>
   c:	4605      	mov	r5, r0
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:69
        let line = location.line();
   e:	4620      	mov	r0, r4
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:68
        let file = location.file();
  10:	460e      	mov	r6, r1
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:69
        let line = location.line();
  12:	f7ff fffe 	bl	0 <core::panic::Location::line>
  16:	4604      	mov	r4, r0
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  26:	f7ff fffe 	bl	0 <console_flush>
rust_begin_unwind():
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:71
        console_print(b"panic at ");
        unsafe { console_buffer(file.as_ptr(), file.len() as u32) }
  2a:	4628      	mov	r0, r5
  2c:	4631      	mov	r1, r6
  2e:	f7ff fffe 	bl	0 <console_buffer>
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  32:	f240 0000 	movw	r0, #0
  36:	2108      	movs	r1, #8
  38:	f2c0 0000 	movt	r0, #0
  3c:	f7ff fffe 	bl	0 <console_buffer>
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:12
        console_flush();  //  TODO: Remove this.
  40:	f7ff fffe 	bl	0 <console_flush>
rust_begin_unwind():
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:73
        console_print(b" line 0x");
        unsafe { console_printhex(line as u8) }  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  44:	b2e0      	uxtb	r0, r4
  46:	f7ff fffe 	bl	0 <console_printhex>
_ZN5mylib4base13console_print17h53afd0cf661b2c25E():
/mnt/c/stm32bluepill-mynewt-sensor/src/base.rs:11
        console_buffer(msg.as_ptr(), len as u32);
  4a:	f240 0000 	movw	r0, #0
  4e:	2101      	movs	r1, #1
  50:	f2c0 0000 	movt	r0, #0
  54:	e004      	b.n	c <rust_begin_unwind+0xc>
  56:	f240 0000 	movw	r0, #0
  5a:	2112      	movs	r1, #18
  5c:	f2c0 0000 	movt	r0, #0
rust_begin_unwind():
  60:	f7ff fffe 	bl	0 <console_buffer>
  64:	f7ff fffe 	bl	0 <console_flush>
  68:	f7ff fffe 	bl	0 <console_flush>
_ZN8cortex_m3asm4bkpt17hc1862ddcb43450fcE():
/home/user/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  6c:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/mnt/c/stm32bluepill-mynewt-sensor/src/lib.rs:83
        unsafe { console_flush() }
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  70:	e7fe      	b.n	70 <rust_begin_unwind+0x70>
arm-none-eabi-objdump: rust.metadata.bin: file format not recognized
arm-none-eabi-objdump: mylib-9b5f404664613177.mylib.9ieylas6-cgu.0.rcgu.bc.z: file format not recognized
