In archive target/thumbv7m-none-eabi/release/libapp.rlib:

app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.o6vxcoia-cgu.0
0000225a l       .debug_str	00000000 
00002b99 l       .debug_str	00000000 
00002bae l       .debug_str	00000000 
00002bd8 l       .debug_str	00000000 
00002be1 l       .debug_str	00000000 
00002c51 l       .debug_str	00000000 
00002ca4 l       .debug_str	00000000 
00002cf3 l       .debug_str	00000000 
00002d33 l       .debug_str	00000000 
00002d5a l       .debug_str	00000000 
00002d5e l       .debug_str	00000000 
00002d60 l       .debug_str	00000000 
00002d62 l       .debug_str	00000000 
00002d6c l       .debug_str	00000000 
00002d75 l       .debug_str	00000000 
00002d7e l       .debug_str	00000000 
00002d89 l       .debug_str	00000000 
00002d93 l       .debug_str	00000000 
00002dba l       .debug_str	00000000 
00002dd2 l       .debug_str	00000000 
00002ddc l       .debug_str	00000000 
00002dff l       .debug_str	00000000 
00002e47 l       .debug_str	00000000 
00002e87 l       .debug_str	00000000 
00002ece l       .debug_str	00000000 
00002ed7 l       .debug_str	00000000 
00002edb l       .debug_str	00000000 
00002f05 l       .debug_str	00000000 
00002f0a l       .debug_str	00000000 
00002f0d l       .debug_str	00000000 
00002f57 l       .debug_str	00000000 
00002f60 l       .debug_str	00000000 
00002f93 l       .debug_str	00000000 
00002fbe l       .debug_str	00000000 
00002fc0 l       .debug_str	00000000 
00002ffc l       .debug_str	00000000 
0000300f l       .debug_str	00000000 
00003014 l       .debug_str	00000000 
00003026 l       .debug_str	00000000 
0000302c l       .debug_str	00000000 
00003032 l       .debug_str	00000000 
00003034 l       .debug_str	00000000 
0000303a l       .debug_str	00000000 
0000303f l       .debug_str	00000000 
0000304c l       .debug_str	00000000 
00003051 l       .debug_str	00000000 
00003059 l       .debug_str	00000000 
0000305d l       .debug_str	00000000 
00003062 l       .debug_str	00000000 
0000306a l       .debug_str	00000000 
00003080 l       .debug_str	00000000 
0000309e l       .debug_str	00000000 
000030a7 l       .debug_str	00000000 
000030ac l       .debug_str	00000000 
000030b1 l       .debug_str	00000000 
000030b5 l       .debug_str	00000000 
000030be l       .debug_str	00000000 
000030c8 l       .debug_str	00000000 
000030e0 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
000000a2 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b8 l       .debug_str	00000000 
000000bc l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000cf l       .debug_str	00000000 
000000d6 l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
000000e2 l       .debug_str	00000000 
000000e7 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
0000014f l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000161 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
00000177 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
00000195 l       .debug_str	00000000 
000001a2 l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
00000204 l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000229 l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
00000242 l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
0000025c l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
0000026c l       .debug_str	00000000 
00000273 l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
00000284 l       .debug_str	00000000 
0000028c l       .debug_str	00000000 
00000293 l       .debug_str	00000000 
00000297 l       .debug_str	00000000 
0000029c l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002aa l       .debug_str	00000000 
000002ad l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
000002bd l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002c7 l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
000002d3 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e0 l       .debug_str	00000000 
000002e6 l       .debug_str	00000000 
000002f0 l       .debug_str	00000000 
000002f8 l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000304 l       .debug_str	00000000 
0000030f l       .debug_str	00000000 
00000318 l       .debug_str	00000000 
0000033b l       .debug_str	00000000 
0000035a l       .debug_str	00000000 
0000035c l       .debug_str	00000000 
00000361 l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
0000038d l       .debug_str	00000000 
00000393 l       .debug_str	00000000 
00000399 l       .debug_str	00000000 
0000039c l       .debug_str	00000000 
000003ab l       .debug_str	00000000 
000003b2 l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003bf l       .debug_str	00000000 
000003c7 l       .debug_str	00000000 
000003cf l       .debug_str	00000000 
000003d6 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
00000402 l       .debug_str	00000000 
0000041b l       .debug_str	00000000 
00000420 l       .debug_str	00000000 
00000431 l       .debug_str	00000000 
0000043b l       .debug_str	00000000 
00000449 l       .debug_str	00000000 
0000044d l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
0000045f l       .debug_str	00000000 
00000465 l       .debug_str	00000000 
00000469 l       .debug_str	00000000 
0000046d l       .debug_str	00000000 
00000475 l       .debug_str	00000000 
0000048c l       .debug_str	00000000 
000004b0 l       .debug_str	00000000 
000004cc l       .debug_str	00000000 
000004d6 l       .debug_str	00000000 
000004f0 l       .debug_str	00000000 
0000054e l       .debug_str	00000000 
00000559 l       .debug_str	00000000 
00000576 l       .debug_str	00000000 
0000058f l       .debug_str	00000000 
00000599 l       .debug_str	00000000 
000005cb l       .debug_str	00000000 
000005d2 l       .debug_str	00000000 
0000060b l       .debug_str	00000000 
0000061b l       .debug_str	00000000 
0000061e l       .debug_str	00000000 
00000625 l       .debug_str	00000000 
00000629 l       .debug_str	00000000 
0000062d l       .debug_str	00000000 
00000632 l       .debug_str	00000000 
00000638 l       .debug_str	00000000 
0000063c l       .debug_str	00000000 
0000064c l       .debug_str	00000000 
00000658 l       .debug_str	00000000 
00000664 l       .debug_str	00000000 
0000067b l       .debug_str	00000000 
00000687 l       .debug_str	00000000 
0000068b l       .debug_str	00000000 
00000698 l       .debug_str	00000000 
000006bc l       .debug_str	00000000 
000006c8 l       .debug_str	00000000 
000006d6 l       .debug_str	00000000 
000006ed l       .debug_str	00000000 
00000702 l       .debug_str	00000000 
00000705 l       .debug_str	00000000 
00000725 l       .debug_str	00000000 
0000072e l       .debug_str	00000000 
00000737 l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
0000074c l       .debug_str	00000000 
00000754 l       .debug_str	00000000 
0000075c l       .debug_str	00000000 
00000762 l       .debug_str	00000000 
00000785 l       .debug_str	00000000 
00000796 l       .debug_str	00000000 
000007a2 l       .debug_str	00000000 
000007dd l       .debug_str	00000000 
000007ee l       .debug_str	00000000 
000007f0 l       .debug_str	00000000 
00000818 l       .debug_str	00000000 
00000839 l       .debug_str	00000000 
0000083d l       .debug_str	00000000 
00000847 l       .debug_str	00000000 
0000084c l       .debug_str	00000000 
0000085a l       .debug_str	00000000 
00000863 l       .debug_str	00000000 
00000871 l       .debug_str	00000000 
0000087c l       .debug_str	00000000 
0000088e l       .debug_str	00000000 
000008a2 l       .debug_str	00000000 
000008a6 l       .debug_str	00000000 
000008af l       .debug_str	00000000 
000008e8 l       .debug_str	00000000 
000008f7 l       .debug_str	00000000 
00000929 l       .debug_str	00000000 
00000936 l       .debug_str	00000000 
00000942 l       .debug_str	00000000 
000009b2 l       .debug_str	00000000 
000009e0 l       .debug_str	00000000 
00000a0a l       .debug_str	00000000 
00000a0f l       .debug_str	00000000 
00000a4e l       .debug_str	00000000 
00000a64 l       .debug_str	00000000 
00000a6a l       .debug_str	00000000 
00000a71 l       .debug_str	00000000 
00000a74 l       .debug_str	00000000 
00000a80 l       .debug_str	00000000 
00000a88 l       .debug_str	00000000 
00000ae2 l       .debug_str	00000000 
00000b44 l       .debug_str	00000000 
00000b4f l       .debug_str	00000000 
00000b96 l       .debug_str	00000000 
00000be5 l       .debug_str	00000000 
00000bef l       .debug_str	00000000 
00000c2c l       .debug_str	00000000 
00000c71 l       .debug_str	00000000 
00000c7a l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00000c92 l       .debug_str	00000000 
00000ce7 l       .debug_str	00000000 
00000d44 l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d71 l       .debug_str	00000000 
00000d7a l       .debug_str	00000000 
00000d82 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d94 l       .debug_str	00000000 
00000da9 l       .debug_str	00000000 
00000db0 l       .debug_str	00000000 
00000dd0 l       .debug_str	00000000 
00000dd7 l       .debug_str	00000000 
00000ddf l       .debug_str	00000000 
00000de9 l       .debug_str	00000000 
00000df4 l       .debug_str	00000000 
00000dfd l       .debug_str	00000000 
00000e08 l       .debug_str	00000000 
00000e14 l       .debug_str	00000000 
00000e18 l       .debug_str	00000000 
00000e21 l       .debug_str	00000000 
00000e28 l       .debug_str	00000000 
00000e30 l       .debug_str	00000000 
00000e38 l       .debug_str	00000000 
00000e42 l       .debug_str	00000000 
00000e48 l       .debug_str	00000000 
00000e4f l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e83 l       .debug_str	00000000 
00000eb8 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000ec4 l       .debug_str	00000000 
00000ed3 l       .debug_str	00000000 
00000ee3 l       .debug_str	00000000 
00000ef3 l       .debug_str	00000000 
00000efb l       .debug_str	00000000 
00000f24 l       .debug_str	00000000 
00000f82 l       .debug_str	00000000 
00000fe8 l       .debug_str	00000000 
00000fef l       .debug_str	00000000 
00000ff7 l       .debug_str	00000000 
00001000 l       .debug_str	00000000 
0000101e l       .debug_str	00000000 
0000102e l       .debug_str	00000000 
0000103c l       .debug_str	00000000 
00001047 l       .debug_str	00000000 
00001054 l       .debug_str	00000000 
00001063 l       .debug_str	00000000 
00001079 l       .debug_str	00000000 
00001083 l       .debug_str	00000000 
0000108c l       .debug_str	00000000 
00001095 l       .debug_str	00000000 
000010bb l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010dc l       .debug_str	00000000 
000010f2 l       .debug_str	00000000 
000010fa l       .debug_str	00000000 
0000111b l       .debug_str	00000000 
00001132 l       .debug_str	00000000 
00001137 l       .debug_str	00000000 
0000113f l       .debug_str	00000000 
00001148 l       .debug_str	00000000 
00001151 l       .debug_str	00000000 
0000115a l       .debug_str	00000000 
00001162 l       .debug_str	00000000 
00001169 l       .debug_str	00000000 
00001175 l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001188 l       .debug_str	00000000 
00001190 l       .debug_str	00000000 
0000120c l       .debug_str	00000000 
00001290 l       .debug_str	00000000 
0000138c l       .debug_str	00000000 
00001490 l       .debug_str	00000000 
0000149e l       .debug_str	00000000 
000014a9 l       .debug_str	00000000 
000014b3 l       .debug_str	00000000 
000014be l       .debug_str	00000000 
000014ec l       .debug_str	00000000 
00001567 l       .debug_str	00000000 
000015ea l       .debug_str	00000000 
000015f8 l       .debug_str	00000000 
00001657 l       .debug_str	00000000 
000016be l       .debug_str	00000000 
000016d4 l       .debug_str	00000000 
000016e4 l       .debug_str	00000000 
000016f3 l       .debug_str	00000000 
000016f7 l       .debug_str	00000000 
000016fd l       .debug_str	00000000 
00001703 l       .debug_str	00000000 
00001709 l       .debug_str	00000000 
00001719 l       .debug_str	00000000 
0000174c l       .debug_str	00000000 
0000178c l       .debug_str	00000000 
000017d4 l       .debug_str	00000000 
000017d8 l       .debug_str	00000000 
000017de l       .debug_str	00000000 
000017e4 l       .debug_str	00000000 
000017ea l       .debug_str	00000000 
000017fc l       .debug_str	00000000 
00001831 l       .debug_str	00000000 
00001873 l       .debug_str	00000000 
000018bd l       .debug_str	00000000 
000018c1 l       .debug_str	00000000 
000018c7 l       .debug_str	00000000 
000018cd l       .debug_str	00000000 
000018d3 l       .debug_str	00000000 
000018e5 l       .debug_str	00000000 
0000191a l       .debug_str	00000000 
0000195c l       .debug_str	00000000 
000019a6 l       .debug_str	00000000 
000019aa l       .debug_str	00000000 
000019b0 l       .debug_str	00000000 
000019b6 l       .debug_str	00000000 
000019bc l       .debug_str	00000000 
000019c2 l       .debug_str	00000000 
000019d3 l       .debug_str	00000000 
00001a07 l       .debug_str	00000000 
00001a48 l       .debug_str	00000000 
00001a91 l       .debug_str	00000000 
00001a96 l       .debug_str	00000000 
00001a9b l       .debug_str	00000000 
00001a9f l       .debug_str	00000000 
00001aa5 l       .debug_str	00000000 
00001aab l       .debug_str	00000000 
00001ab1 l       .debug_str	00000000 
00001ac2 l       .debug_str	00000000 
00001af6 l       .debug_str	00000000 
00001b37 l       .debug_str	00000000 
00001b80 l       .debug_str	00000000 
00001b84 l       .debug_str	00000000 
00001bb8 l       .debug_str	00000000 
00001bf9 l       .debug_str	00000000 
00001c42 l       .debug_str	00000000 
00001c47 l       .debug_str	00000000 
00001c4b l       .debug_str	00000000 
00001c54 l       .debug_str	00000000 
00001c5b l       .debug_str	00000000 
00001c63 l       .debug_str	00000000 
00001c75 l       .debug_str	00000000 
00001caa l       .debug_str	00000000 
00001cec l       .debug_str	00000000 
00001d36 l       .debug_str	00000000 
00001d3a l       .debug_str	00000000 
00001d40 l       .debug_str	00000000 
00001d46 l       .debug_str	00000000 
00001d4c l       .debug_str	00000000 
00001d52 l       .debug_str	00000000 
00001d5a l       .debug_str	00000000 
00001d68 l       .debug_str	00000000 
00001d77 l       .debug_str	00000000 
00001d88 l       .debug_str	00000000 
00001d93 l       .debug_str	00000000 
00001d9e l       .debug_str	00000000 
00001da9 l       .debug_str	00000000 
00001db0 l       .debug_str	00000000 
00001dd3 l       .debug_str	00000000 
00001de5 l       .debug_str	00000000 
00001e1a l       .debug_str	00000000 
00001e5c l       .debug_str	00000000 
00001ea6 l       .debug_str	00000000 
00001eaa l       .debug_str	00000000 
00001eb4 l       .debug_str	00000000 
00001ec6 l       .debug_str	00000000 
00001efb l       .debug_str	00000000 
00001f3d l       .debug_str	00000000 
00001f87 l       .debug_str	00000000 
00001f8c l       .debug_str	00000000 
00001f96 l       .debug_str	00000000 
00001fa8 l       .debug_str	00000000 
00001fdd l       .debug_str	00000000 
0000201f l       .debug_str	00000000 
00002069 l       .debug_str	00000000 
0000207d l       .debug_str	00000000 
0000208b l       .debug_str	00000000 
0000209b l       .debug_str	00000000 
000020a4 l       .debug_str	00000000 
000020af l       .debug_str	00000000 
000020be l       .debug_str	00000000 
000020d3 l       .debug_str	00000000 
00002104 l       .debug_str	00000000 
000021a1 l       .debug_str	00000000 
00002246 l       .debug_str	00000000 
00002251 l       .debug_str	00000000 
0000227b l       .debug_str	00000000 
0000228e l       .debug_str	00000000 
000022c4 l       .debug_str	00000000 
00002347 l       .debug_str	00000000 
000023d2 l       .debug_str	00000000 
000023ee l       .debug_str	00000000 
0000243a l       .debug_str	00000000 
0000248e l       .debug_str	00000000 
000024ab l       .debug_str	00000000 
000024bf l       .debug_str	00000000 
0000250b l       .debug_str	00000000 
0000255f l       .debug_str	00000000 
00002575 l       .debug_str	00000000 
00002589 l       .debug_str	00000000 
000025d0 l       .debug_str	00000000 
0000261f l       .debug_str	00000000 
00002628 l       .debug_str	00000000 
00002636 l       .debug_str	00000000 
00002667 l       .debug_str	00000000 
0000266d l       .debug_str	00000000 
00002675 l       .debug_str	00000000 
0000267c l       .debug_str	00000000 
00002684 l       .debug_str	00000000 
0000268f l       .debug_str	00000000 
00002697 l       .debug_str	00000000 
000026a6 l       .debug_str	00000000 
000026aa l       .debug_str	00000000 
000026b5 l       .debug_str	00000000 
000026c1 l       .debug_str	00000000 
000026cc l       .debug_str	00000000 
000026dd l       .debug_str	00000000 
000026e3 l       .debug_str	00000000 
000026eb l       .debug_str	00000000 
000026f2 l       .debug_str	00000000 
000026fc l       .debug_str	00000000 
00002704 l       .debug_str	00000000 
0000270c l       .debug_str	00000000 
0000272e l       .debug_str	00000000 
00002739 l       .debug_str	00000000 
00002745 l       .debug_str	00000000 
0000274d l       .debug_str	00000000 
00002756 l       .debug_str	00000000 
00002761 l       .debug_str	00000000 
00002768 l       .debug_str	00000000 
00002773 l       .debug_str	00000000 
0000277e l       .debug_str	00000000 
0000278e l       .debug_str	00000000 
00002798 l       .debug_str	00000000 
0000279e l       .debug_str	00000000 
000027c0 l       .debug_str	00000000 
000027f8 l       .debug_str	00000000 
00002838 l       .debug_str	00000000 
0000283f l       .debug_str	00000000 
00002847 l       .debug_str	00000000 
0000285e l       .debug_str	00000000 
00002867 l       .debug_str	00000000 
00002877 l       .debug_str	00000000 
00002886 l       .debug_str	00000000 
0000288e l       .debug_str	00000000 
00002895 l       .debug_str	00000000 
0000289d l       .debug_str	00000000 
000028bb l       .debug_str	00000000 
000028cb l       .debug_str	00000000 
000028fe l       .debug_str	00000000 
00002913 l       .debug_str	00000000 
0000291c l       .debug_str	00000000 
00002979 l       .debug_str	00000000 
000029de l       .debug_str	00000000 
000029e8 l       .debug_str	00000000 
000029f8 l       .debug_str	00000000 
00002a0d l       .debug_str	00000000 
00002a15 l       .debug_str	00000000 
00002a79 l       .debug_str	00000000 
00002ae5 l       .debug_str	00000000 
00002aec l       .debug_str	00000000 
00002af4 l       .debug_str	00000000 
00002b12 l       .debug_str	00000000 
00002b22 l       .debug_str	00000000 
00002b55 l       .debug_str	00000000 
00002b6a l       .debug_str	00000000 
00002b7d l       .debug_str	00000000 
00002b92 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000019 .Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.21	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.22	0000000d .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000000 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.26	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.26
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.27	00000005 .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.28	00000048 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.29	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.34	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.34
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.35	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.35
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.36
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000f .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E	0000000c _ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	000002ac _ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	0000000c _ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l     F .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000050 _ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000000 .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE
00000000         *UND*	00000000 _ZN4core5panic8Location4file17h94cc6af18de736c4E
00000000         *UND*	00000000 _ZN4core5panic8Location4line17h3ffc63f14d0a6636E
00000000         *UND*	00000000 _ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E
00000000         *UND*	00000000 _ZN4core9panicking5panic17h53ca63c6ac6312f8E
00000000         *UND*	00000000 _ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E
00000000         *UND*	00000000 _ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17hffcd2d6e43a98b23E
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor10as_untyped17hc683efc51e7df2deE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor17register_listener17he319e84e05fa897bE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17hcde389472a355443E
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h5578d6fbfa9c8a90E
00000000         *UND*	00000000 _ZN6mynewt3sys7console10print_strn17h642e26ec24b7f07fE
00000000         *UND*	00000000 _ZN6mynewt3sys7console5flush17ha743c57e8b1e2e3cE
00000000         *UND*	00000000 _ZN6mynewt3sys7console5print17h578959f818f159a0E
00000000         *UND*	00000000 _ZN6mynewt3sys7console6buffer17h2c2282a002afa912E
00000000         *UND*	00000000 _ZN6mynewt3sys7console8printhex17h075b8327916646d1E
00000000         *UND*	00000000 _ZN6mynewt4Strn3new17h7a223ee4df5e1f9bE
00000000         *UND*	00000000 _ZN6mynewt4Strn9from_cstr17h4cb885e3cfc9807aE
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network12prepare_post17h850eb70da8c09a26E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network14do_server_post17h63b4208c05d74765E
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network16init_server_post17hed16ed94721012abE
00000000         *UND*	00000000 _ZN6mynewt4libs14sensor_network22start_server_transport17he5c189d769aa6683E
00000000         *UND*	00000000 _ZN6mynewt6kernel2os10eventq_run17h49917a2d6a4028eaE
00000000         *UND*	00000000 _ZN6mynewt6kernel2os15eventq_dflt_get17hb17cddfc29115d4fE
00000000         *UND*	00000000 _ZN6mynewt7sysinit17hc2bae3266fb1ff2aE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext20json_set_text_string17hb1ac2c758b431170E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context12COAP_CONTEXT17h5e91d8ef2e33c9a1E
00000000         *UND*	00000000 _ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 get_device_id
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000         *UND*	00000000 json_helper_close_array
00000000         *UND*	00000000 json_helper_object_array_end_item
00000000         *UND*	00000000 json_helper_object_array_start_item
00000000         *UND*	00000000 json_helper_set_array
00000000         *UND*	00000000 json_helper_set_int
00000000         *UND*	00000000 json_helper_set_text_string
00000000         *UND*	00000000 json_rep_end_root_object
00000000         *UND*	00000000 json_rep_start_root_object
00000000 g     F .text.main	000000e8 main
00000000         *UND*	00000000 null_sensor
00000000 g     F .text.rust_begin_unwind	00000066 rust_begin_unwind



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E:

00000000 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE>

Disassembly of section .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E:

00000000 <_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E>:
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E:

00000000 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E>:
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:73
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b08b      	sub	sp, #44	; 0x2c
   6:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:75
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("Rust handle_sensor_data\n");
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:78
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { sensor::is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <is_null_sensor_data>
  1e:	b120      	cbz	r0, 2a <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x2a>
  20:	f06f 0001 	mvn.w	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  24:	b00b      	add	sp, #44	; 0x2c
  26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
  2a:	4628      	mov	r0, r5
  2c:	f7ff fffe 	bl	0 <is_null_sensor>
  30:	2800      	cmp	r0, #0
  32:	f040 8126 	bne.w	282 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x282>
  36:	2000      	movs	r0, #0
  38:	a908      	add	r1, sp, #32
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:113
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3a:	f88d 0024 	strb.w	r0, [sp, #36]	; 0x24
  3e:	9008      	str	r0, [sp, #32]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:114
            let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
  46:	2800      	cmp	r0, #0
  48:	f040 8122 	bne.w	290 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x290>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:118

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  4c:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
  50:	2800      	cmp	r0, #0
  52:	f000 8124 	beq.w	29e <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x29e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  56:	f240 0000 	movw	r0, #0
  5a:	2119      	movs	r1, #25
  5c:	f2c0 0000 	movt	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:121
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  60:	f8dd a020 	ldr.w	sl, [sp, #32]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  64:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:66
///   {"key":"device", "value":"0102030405060708090a0b0c0d0e0f10"},
///   {"key":"t",      "value":1715}
/// ]}
/// ```
pub fn send_sensor_data(val: &SensorValue) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console::print("Rust send_sensor_data\n");
  68:	f240 0000 	movw	r0, #0
  6c:	2116      	movs	r1, #22
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
_ZN3app11app_network14get_device_id217h6175270af85d276dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:48
        let result_value: *const ::cty::c_char = get_device_id();
  76:	f7ff fffe 	bl	0 <get_device_id>
  7a:	4601      	mov	r1, r0
  7c:	a808      	add	r0, sp, #32
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:49
        let wrap_result: Strn = Strn::from_cstr(result_value);
  7e:	f7ff fffe 	bl	0 <_ZN6mynewt4Strn9from_cstr17h4cb885e3cfc9807aE>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:50
        Ok(wrap_result)
  82:	aa08      	add	r2, sp, #32
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:70
    if let SensorValueType::None = val.val { assert!(false); }
    // let device_id = strn2!( sensor_network::get_device_id() ? );
    // let device_id2 = strn2!( "network" );
    let device_id = get_device_id2() ?;
  84:	ab01      	add	r3, sp, #4
  86:	ad08      	add	r5, sp, #32
_ZN3app11app_network14get_device_id217h6175270af85d276dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:50
        Ok(wrap_result)
  88:	ca07      	ldmia	r2, {r0, r1, r2}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:70
    let device_id = get_device_id2() ?;
  8a:	c307      	stmia	r3!, {r0, r1, r2}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:75

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post(strn!("")) ? ;
  8c:	f240 0100 	movw	r1, #0
  90:	f2c0 0100 	movt	r1, #0
  94:	4628      	mov	r0, r5
  96:	2201      	movs	r2, #1
  98:	f7ff fffe 	bl	0 <_ZN6mynewt4Strn3new17h7a223ee4df5e1f9bE>
  9c:	a804      	add	r0, sp, #16
  9e:	4629      	mov	r1, r5
  a0:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network16init_server_post17hed16ed94721012abE>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  a4:	9804      	ldr	r0, [sp, #16]
  a6:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:75
  a8:	2901      	cmp	r1, #1
  aa:	d107      	bne.n	bc <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0xbc>
  ac:	9805      	ldr	r0, [sp, #20]
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
  ae:	3006      	adds	r0, #6
  b0:	f000 80c7 	beq.w	242 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x242>
  b4:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
}
  b6:	b00b      	add	sp, #44	; 0x2c
  b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:76
    if !rc { return Err(MynewtError::SYS_EAGAIN); }  //  If network transport not ready, tell caller (Sensor Listener) to try again later.
  bc:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  c0:	f000 80bf 	beq.w	242 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x242>
  c4:	a808      	add	r0, sp, #32
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:80

    //  Compose the CoAP Payload using the coap!() macro.
    //  Select @json or @cbor To encode CoAP Payload in JSON or CBOR format.
    let _payload = coap!( @json {        
  c6:	2132      	movs	r1, #50	; 0x32
  c8:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network12prepare_post17h850eb70da8c09a26E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  cc:	f89d 0020 	ldrb.w	r0, [sp, #32]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:80
  d0:	2801      	cmp	r0, #1
  d2:	f000 80b2 	beq.w	23a <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x23a>
  d6:	f7ff fffe 	bl	0 <json_rep_start_root_object>
  da:	f240 0b00 	movw	fp, #0
  de:	f2c0 0b00 	movt	fp, #0
  e2:	4658      	mov	r0, fp
  e4:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
  e8:	f240 0100 	movw	r1, #0
  ec:	4607      	mov	r7, r0
  ee:	f2c0 0100 	movt	r1, #0
  f2:	4658      	mov	r0, fp
  f4:	2207      	movs	r2, #7
  f6:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
  fa:	4601      	mov	r1, r0
  fc:	4638      	mov	r0, r7
  fe:	f7ff fffe 	bl	0 <json_helper_set_array>
 102:	f240 0900 	movw	r9, #0
 106:	4658      	mov	r0, fp
 108:	f2c0 0900 	movt	r9, #0
 10c:	220d      	movs	r2, #13
 10e:	4649      	mov	r1, r9
 110:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 114:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 118:	ae04      	add	r6, sp, #16
 11a:	f240 0100 	movw	r1, #0
 11e:	f2c0 0100 	movt	r1, #0
 122:	2204      	movs	r2, #4
 124:	4630      	mov	r0, r6
 126:	f7ff fffe 	bl	0 <_ZN6mynewt4Strn3new17h7a223ee4df5e1f9bE>
 12a:	af08      	add	r7, sp, #32
 12c:	f240 0100 	movw	r1, #0
 130:	f2c0 0100 	movt	r1, #0
 134:	2207      	movs	r2, #7
 136:	4638      	mov	r0, r7
 138:	f7ff fffe 	bl	0 <_ZN6mynewt4Strn3new17h7a223ee4df5e1f9bE>
 13c:	4658      	mov	r0, fp
 13e:	4631      	mov	r1, r6
 140:	463a      	mov	r2, r7
 142:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext20json_set_text_string17hb1ac2c758b431170E>
 146:	ae08      	add	r6, sp, #32
 148:	f240 0100 	movw	r1, #0
 14c:	f2c0 0100 	movt	r1, #0
 150:	2206      	movs	r2, #6
 152:	4630      	mov	r0, r6
 154:	f7ff fffe 	bl	0 <_ZN6mynewt4Strn3new17h7a223ee4df5e1f9bE>
 158:	aa01      	add	r2, sp, #4
 15a:	4658      	mov	r0, fp
 15c:	4631      	mov	r1, r6
 15e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext20json_set_text_string17hb1ac2c758b431170E>
 162:	4658      	mov	r0, fp
 164:	4649      	mov	r1, r9
 166:	220d      	movs	r2, #13
 168:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 16c:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 170:	4658      	mov	r0, fp
 172:	4649      	mov	r1, r9
 174:	220d      	movs	r2, #13
 176:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 17a:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 17e:	f240 0000 	movw	r0, #0
 182:	2103      	movs	r1, #3
 184:	f2c0 0000 	movt	r0, #0
 188:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 18c:	4606      	mov	r6, r0
 18e:	f240 0000 	movw	r0, #0
 192:	460f      	mov	r7, r1
 194:	f2c0 0000 	movt	r0, #0
 198:	2101      	movs	r1, #1
 19a:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 19e:	4604      	mov	r4, r0
 1a0:	4658      	mov	r0, fp
 1a2:	460d      	mov	r5, r1
 1a4:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 1a8:	4680      	mov	r8, r0
 1aa:	4658      	mov	r0, fp
 1ac:	4631      	mov	r1, r6
 1ae:	463a      	mov	r2, r7
 1b0:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 1b4:	4606      	mov	r6, r0
 1b6:	4658      	mov	r0, fp
 1b8:	4621      	mov	r1, r4
 1ba:	462a      	mov	r2, r5
 1bc:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E>
 1c0:	4602      	mov	r2, r0
 1c2:	4640      	mov	r0, r8
 1c4:	4631      	mov	r1, r6
 1c6:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 1ca:	f240 0000 	movw	r0, #0
 1ce:	2105      	movs	r1, #5
 1d0:	f2c0 0000 	movt	r0, #0
 1d4:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 1d8:	4604      	mov	r4, r0
 1da:	4658      	mov	r0, fp
 1dc:	460d      	mov	r5, r1
 1de:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 1e2:	4606      	mov	r6, r0
 1e4:	4658      	mov	r0, fp
 1e6:	4621      	mov	r1, r4
 1e8:	462a      	mov	r2, r5
 1ea:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 1ee:	4601      	mov	r1, r0
 1f0:	4630      	mov	r0, r6
 1f2:	4652      	mov	r2, sl
 1f4:	2300      	movs	r3, #0
 1f6:	f7ff fffe 	bl	0 <json_helper_set_int>
 1fa:	4658      	mov	r0, fp
 1fc:	4649      	mov	r1, r9
 1fe:	220d      	movs	r2, #13
 200:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 204:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 208:	4658      	mov	r0, fp
 20a:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 20e:	f240 0100 	movw	r1, #0
 212:	4604      	mov	r4, r0
 214:	4658      	mov	r0, fp
 216:	f2c0 0100 	movt	r1, #0
 21a:	2207      	movs	r2, #7
 21c:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 220:	4601      	mov	r1, r0
 222:	4620      	mov	r0, r4
 224:	f7ff fffe 	bl	0 <json_helper_close_array>
 228:	f7ff fffe 	bl	0 <json_rep_end_root_object>
 22c:	a808      	add	r0, sp, #32
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:95
    });

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 22e:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network14do_server_post17h63b4208c05d74765E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
 232:	f89d 0020 	ldrb.w	r0, [sp, #32]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:95
 236:	2801      	cmp	r0, #1
 238:	d10e      	bne.n	258 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0x258>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 23a:	9809      	ldr	r0, [sp, #36]	; 0x24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 23c:	3006      	adds	r0, #6
 23e:	f47f af39 	bne.w	b4 <_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E+0xb4>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:95
            console::print("TMP network not ready\n");
 242:	f240 0000 	movw	r0, #0
 246:	2116      	movs	r1, #22
 248:	f2c0 0000 	movt	r0, #0
 24c:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
 250:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
}
 252:	b00b      	add	sp, #44	; 0x2c
 254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:97

    console::print("NET view your sensor at \nhttps://blue-pill-geolocate.appspot.com?device=");
 258:	f240 0000 	movw	r0, #0
 25c:	2148      	movs	r1, #72	; 0x48
 25e:	f2c0 0000 	movt	r0, #0
 262:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
 266:	a801      	add	r0, sp, #4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:98
    console::print_strn(&device_id); console::print("\n");
 268:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console10print_strn17h642e26ec24b7f07fE>
 26c:	f240 0000 	movw	r0, #0
 270:	2101      	movs	r1, #1
 272:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 276:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
 27a:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
 27c:	b00b      	add	sp, #44	; 0x2c
 27e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
 282:	f240 0000 	movw	r0, #0
 286:	f2c0 0000 	movt	r0, #0
 28a:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 28e:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
 290:	f240 0000 	movw	r0, #0
 294:	f2c0 0000 	movt	r0, #0
 298:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 29c:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:83
    if let SensorValueType::None = sensor_value.val { assert!(false); }  //  Invalid type
 29e:	f240 0000 	movw	r0, #0
 2a2:	f2c0 0000 	movt	r0, #0
 2a6:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 2aa:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:49
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:55
    //  Initialise the Mynewt packages and BME280 / temp_stm32 temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <_ZN6mynewt7sysinit17hc2bae3266fb1ff2aE>
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:48
    console::print("Rust TMP poll \n");  //  SENSOR_DEVICE "\n";
   6:	f240 0000 	movw	r0, #0
   a:	210f      	movs	r1, #15
   c:	f2c0 0000 	movt	r0, #0
  10:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:51
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  14:	f240 0000 	movw	r0, #0
  18:	f242 7110 	movw	r1, #10000	; 0x2710
  1c:	f2c0 0000 	movt	r0, #0
  20:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor8bindings16set_poll_rate_ms17hcde389472a355443E>
  24:	2801      	cmp	r0, #1
  26:	d147      	bne.n	b8 <main+0xb8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, unsafe { sensor::null_sensor() }) ? ;
  28:	f7ff fffe 	bl	0 <null_sensor>
  2c:	f240 0100 	movw	r1, #0
  30:	4602      	mov	r2, r0
  32:	4668      	mov	r0, sp
  34:	f2c0 0100 	movt	r1, #0
  38:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor8bindings23mgr_find_next_bydevname17h5578d6fbfa9c8a90E>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h43143ffffefcd0f1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  3c:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
  40:	2801      	cmp	r0, #1
  42:	d017      	beq.n	74 <main+0x74>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  44:	4620      	mov	r0, r4
  46:	f7ff fffe 	bl	0 <is_null_sensor>
  4a:	2800      	cmp	r0, #0
  4c:	d145      	bne.n	da <main+0xda>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:60
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor10as_untyped17hc683efc51e7df2deE>
  5a:	2100      	movs	r1, #0
  5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:65
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  60:	9101      	str	r1, [sp, #4]
  62:	9200      	str	r2, [sp, #0]
  64:	9104      	str	r1, [sp, #16]
  66:	e9cd 0102 	strd	r0, r1, [sp, #8]
  6a:	4669      	mov	r1, sp
  6c:	4620      	mov	r0, r4
  6e:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor17register_listener17he319e84e05fa897bE>
  72:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  74:	2c01      	cmp	r4, #1
  76:	d120      	bne.n	ba <main+0xba>
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:62
    //  Starting polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  78:	f7ff fffe 	bl	0 <_ZN6mynewt4libs14sensor_network22start_server_transport17he5c189d769aa6683E>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  7c:	2801      	cmp	r0, #1
  7e:	d124      	bne.n	ca <main+0xca>
main():
  80:	466c      	mov	r4, sp
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:68
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  82:	4620      	mov	r0, r4
  84:	f7ff fffe 	bl	0 <_ZN6mynewt6kernel2os15eventq_dflt_get17hb17cddfc29115d4fE>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  88:	9800      	ldr	r0, [sp, #0]
  8a:	2801      	cmp	r0, #1
  8c:	d00c      	beq.n	a8 <main+0xa8>
  8e:	9801      	ldr	r0, [sp, #4]
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:67
        os::eventq_run(               //  Processing events...
  90:	f7ff fffe 	bl	0 <_ZN6mynewt6kernel2os10eventq_run17h49917a2d6a4028eaE>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  94:	2801      	cmp	r0, #1
  96:	d0f4      	beq.n	82 <main+0x82>
main():
  98:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	f7ff fffe 	bl	0 <main>
  a6:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  a8:	9901      	ldr	r1, [sp, #4]
  aa:	f240 0000 	movw	r0, #0
  ae:	f2c0 0000 	movt	r0, #0
  b2:	f7ff fffe 	bl	0 <main>
  b6:	defe      	udf	#254	; 0xfe
main():
  b8:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  ba:	f240 0000 	movw	r0, #0
  be:	4621      	mov	r1, r4
  c0:	f2c0 0000 	movt	r0, #0
  c4:	f7ff fffe 	bl	0 <main>
  c8:	defe      	udf	#254	; 0xfe
main():
  ca:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  cc:	f240 0000 	movw	r0, #0
  d0:	f2c0 0000 	movt	r0, #0
  d4:	f7ff fffe 	bl	0 <main>
  d8:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  da:	f240 0000 	movw	r0, #0
  de:	f2c0 0000 	movt	r0, #0
  e2:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  e6:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:79

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <_ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E>
   4:	b318      	cbz	r0, 4e <rust_begin_unwind+0x4e>
   6:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
   8:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4file17h94cc6af18de736c4E>
   c:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
   e:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
  10:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
  12:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4line17h3ffc63f14d0a6636E>
  16:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        console::print("panic at ");  console::buffer(&file);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
  26:	4628      	mov	r0, r5
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console6buffer17h2c2282a002afa912E>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:83
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  2e:	f240 0000 	movw	r0, #0
  32:	2108      	movs	r1, #8
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
  3c:	4620      	mov	r0, r4
  3e:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console8printhex17h075b8327916646d1E>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:84
        console::print("\n");         console::flush();
  42:	f240 0000 	movw	r0, #0
  46:	2101      	movs	r1, #1
  48:	f2c0 0000 	movt	r0, #0
  4c:	e004      	b.n	c <rust_begin_unwind+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:86
    } else {
        console::print("panic unknown loc\n");  console::flush();
  4e:	f240 0000 	movw	r0, #0
  52:	2112      	movs	r1, #18
  54:	f2c0 0000 	movt	r0, #0
  58:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5print17h578959f818f159a0E>
  5c:	f7ff fffe 	bl	0 <_ZN6mynewt3sys7console5flush17ha743c57e8b1e2e3cE>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  60:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:91
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  64:	e7fe      	b.n	64 <rust_begin_unwind+0x64>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.bc.z: File format not recognized
