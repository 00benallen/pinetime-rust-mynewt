In archive target/thumbv7em-none-eabihf/debug/libapp.rlib:

app-64de0327356ea83b.1vlhu7lg5k3q5ofr.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 1vlhu7lg5k3q5ofr
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
0000007f l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
000000a7 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b6 l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000ca l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
000000e7 l       .debug_str	00000000 
000000ee l       .debug_str	00000000 
000000f5 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011c l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
00000127 l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000138 l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
00000148 l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000161 l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
00000168 l       .debug_str	00000000 
0000019e l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001ba l       .debug_str	00000000 
000001ef l       .debug_str	00000000 
000001f1 l       .debug_str	00000000 
000001f3 l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
00000233 l       .debug_str	00000000 
000002c1 l       .debug_str	00000000 
0000032c l       .debug_str	00000000 
00000333 l       .debug_str	00000000 
0000033b l       .debug_str	00000000 
00000342 l       .debug_str	00000000 
0000034b l       .debug_str	00000000 
0000034f l       .debug_str	00000000 
00000351 l       .debug_str	00000000 
00000358 l       .debug_str	00000000 
0000035c l       .debug_str	00000000 
00000369 l       .debug_str	00000000 
00000370 l       .debug_str	00000000 
00000373 l       .debug_str	00000000 
00000379 l       .debug_str	00000000 
00000387 l       .debug_str	00000000 
00000395 l       .debug_str	00000000 
0000039a l       .debug_str	00000000 
000003a2 l       .debug_str	00000000 
000003aa l       .debug_str	00000000 
000003ac l       .debug_str	00000000 
000003c9 l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000417 l       .debug_str	00000000 
0000041e l       .debug_str	00000000 
0000042f l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
00000539 l       .debug_str	00000000 
000005fc l       .debug_str	00000000 
000006e9 l       .debug_str	00000000 
000006f1 l       .debug_str	00000000 
000006f6 l       .debug_str	00000000 
000006fc l       .debug_str	00000000 
00000700 l       .debug_str	00000000 
00000703 l       .debug_str	00000000 
0000072c l       .debug_str	00000000 
00000762 l       .debug_str	00000000 
00000764 l       .debug_str	00000000 
00000791 l       .debug_str	00000000 
000007e1 l       .debug_str	00000000 
0000083e l       .debug_str	00000000 
00000892 l       .debug_str	00000000 
00000895 l       .debug_str	00000000 
0000090c l       .debug_str	00000000 
00000990 l       .debug_str	00000000 
00000a0b l       .debug_str	00000000 
00000aa9 l       .debug_str	00000000 
00000b54 l       .debug_str	00000000 
00000bf6 l       .debug_str	00000000 
00000cbb l       .debug_str	00000000 
00000d8d l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000f42 l       .debug_str	00000000 
0000103b l       .debug_str	00000000 
0000112b l       .debug_str	00000000 
0000123d l       .debug_str	00000000 
0000136c l       .debug_str	00000000 
0000149a l       .debug_str	00000000 
0000149e l       .debug_str	00000000 
000014a4 l       .debug_str	00000000 
000014a6 l       .debug_str	00000000 
000015cc l       .debug_str	00000000 
000015ce l       .debug_str	00000000 
000016d7 l       .debug_str	00000000 
000016e0 l       .debug_str	00000000 
00001710 l       .debug_str	00000000 
00001717 l       .debug_str	00000000 
00001723 l       .debug_str	00000000 
00001728 l       .debug_str	00000000 
0000179a l       .debug_str	00000000 
0000179c l       .debug_str	00000000 
0000182c l       .debug_str	00000000 
000018c3 l       .debug_str	00000000 
000018c9 l       .debug_str	00000000 
000018d2 l       .debug_str	00000000 
000019e9 l       .debug_str	00000000 
00001afc l       .debug_str	00000000 
00001c1c l       .debug_str	00000000 
00001d33 l       .debug_str	00000000 
00001e6c l       .debug_str	00000000 
00001fc2 l       .debug_str	00000000 
00002117 l       .debug_str	00000000 
00002264 l       .debug_str	00000000 
00002394 l       .debug_str	00000000 
0000239f l       .debug_str	00000000 
000023d1 l       .debug_str	00000000 
000023d8 l       .debug_str	00000000 
000023dc l       .debug_str	00000000 
000023e4 l       .debug_str	00000000 
000023eb l       .debug_str	00000000 
000023ef l       .debug_str	00000000 
000023f3 l       .debug_str	00000000 
000023f8 l       .debug_str	00000000 
000023fb l       .debug_str	00000000 
000023ff l       .debug_str	00000000 
00002435 l       .debug_str	00000000 
00002478 l       .debug_str	00000000 
00002517 l       .debug_str	00000000 
00002555 l       .debug_str	00000000 
000025c3 l       .debug_str	00000000 
00002603 l       .debug_str	00000000 
0000269f l       .debug_str	00000000 
000026a4 l       .debug_str	00000000 
000026ae l       .debug_str	00000000 
0000274e l       .debug_str	00000000 
00002750 l       .debug_str	00000000 
000027b3 l       .debug_str	00000000 
0000287d l       .debug_str	00000000 
00002882 l       .debug_str	00000000 
00002918 l       .debug_str	00000000 
00002923 l       .debug_str	00000000 
0000292c l       .debug_str	00000000 
0000293a l       .debug_str	00000000 
00002952 l       .debug_str	00000000 
00002960 l       .debug_str	00000000 
00002995 l       .debug_str	00000000 
000029ef l       .debug_str	00000000 
000029f3 l       .debug_str	00000000 
000029f9 l       .debug_str	00000000 
00002abd l       .debug_str	00000000 
00002ac6 l       .debug_str	00000000 
00002ace l       .debug_str	00000000 
00002ad9 l       .debug_str	00000000 
00002add l       .debug_str	00000000 
00002ae0 l       .debug_str	00000000 
00002ae4 l       .debug_str	00000000 
00002ae8 l       .debug_str	00000000 
00002af1 l       .debug_str	00000000 
00002af4 l       .debug_str	00000000 
00002af7 l       .debug_str	00000000 
00002b36 l       .debug_str	00000000 
00002b86 l       .debug_str	00000000 
00002b8d l       .debug_str	00000000 
00002b94 l       .debug_str	00000000 
00002b98 l       .debug_str	00000000 
00002b9c l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.614f561882859b059637dabd2780bb0f.0	00000005 .Lanon.614f561882859b059637dabd2780bb0f.0
00000000 l     O .rodata..Lanon.614f561882859b059637dabd2780bb0f.2	00000010 .Lanon.614f561882859b059637dabd2780bb0f.2
00000000 l     O .rodata..Lanon.614f561882859b059637dabd2780bb0f.3	00000010 .Lanon.614f561882859b059637dabd2780bb0f.3
00000000 l     O .rodata..Lanon.614f561882859b059637dabd2780bb0f.4	00000010 .Lanon.614f561882859b059637dabd2780bb0f.4
00000000 l     O .rodata..Lanon.614f561882859b059637dabd2780bb0f.5	00000010 .Lanon.614f561882859b059637dabd2780bb0f.5
00000000 l     O .rodata..Lanon.614f561882859b059637dabd2780bb0f.6	00000010 .Lanon.614f561882859b059637dabd2780bb0f.6
00000000 l     O .rodata..Lanon.614f561882859b059637dabd2780bb0f.7	00000010 .Lanon.614f561882859b059637dabd2780bb0f.7
00000000 l     O .rodata.str.0	0000001c str.0
00000000 l    d  .text._ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha322f774bda5592fE	00000000 .text._ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha322f774bda5592fE
00000000 l    d  .text._ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd6425ebdc622c718E	00000000 .text._ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd6425ebdc622c718E
00000000 l    d  .text._ZN22piet_embedded_graphics5batch11draw_blocks17h26b4245874bf60f6E	00000000 .text._ZN22piet_embedded_graphics5batch11draw_blocks17h26b4245874bf60f6E
00000000 l    d  .text._ZN22piet_embedded_graphics5batch7to_rows17h139738545339e97dE	00000000 .text._ZN22piet_embedded_graphics5batch7to_rows17h139738545339e97dE
00000000 l    d  .text._ZN22piet_embedded_graphics5batch9to_blocks17h5afe15c02b76488cE	00000000 .text._ZN22piet_embedded_graphics5batch9to_blocks17h5afe15c02b76488cE
00000000 l    d  .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he1f0b61d840e85ffE	00000000 .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he1f0b61d840e85ffE
00000000 l    d  .rodata..Lanon.614f561882859b059637dabd2780bb0f.1	00000000 .rodata..Lanon.614f561882859b059637dabd2780bb0f.1
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 st7735_lcd::ST7735<SPI,DC,RST>::set_pixels
00000000 g     F .text._ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha322f774bda5592fE	000002be <piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next
00000000 g     F .text._ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd6425ebdc622c718E	000003b6 <piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next
00000000         *UND*	00000000 <embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter
00000000         *UND*	00000000 <embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next
00000000 g     F .text._ZN22piet_embedded_graphics5batch11draw_blocks17h26b4245874bf60f6E	000001c6 piet_embedded_graphics::batch::draw_blocks
00000000 g     F .text._ZN22piet_embedded_graphics5batch7to_rows17h139738545339e97dE	0000005e piet_embedded_graphics::batch::to_rows
00000000 g     F .text._ZN22piet_embedded_graphics5batch9to_blocks17h5afe15c02b76488cE	00000050 piet_embedded_graphics::batch::to_blocks
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::result::Result<T,E>::is_ok
00000000         *UND*	00000000 core::result::Result<T,E>::is_ok
00000000         *UND*	00000000 core::result::Result<T,E>::expect
00000000         *UND*	00000000 core::result::Result<T,E>::expect
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 <T as core::convert::From<T>>::from
00000000 g     F .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he1f0b61d840e85ffE	0000000c <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000         *UND*	00000000 <heapless::vec::Vec<T,N> as core::clone::Clone>::clone
00000000         *UND*	00000000 <heapless::vec::Vec<T,N> as core::clone::Clone>::clone
00000000         *UND*	00000000 <core::result::Result<T,E> as core::ops::try::Try>::from_error
00000000         *UND*	00000000 <core::result::Result<T,E> as core::ops::try::Try>::into_result
00000000         *UND*	00000000 <heapless::vec::Vec<T,N> as core::ops::deref::Deref>::deref
00000000         *UND*	00000000 heapless::vec::Vec<T,N>::extend_from_slice
00000000         *UND*	00000000 heapless::vec::Vec<T,N>::new
00000000         *UND*	00000000 heapless::vec::Vec<T,N>::new
00000000         *UND*	00000000 heapless::vec::Vec<T,N>::push
00000000         *UND*	00000000 heapless::vec::Vec<T,N>::clear
00000000         *UND*	00000000 heapless::vec::Vec<T,N>::clear
00000000         *UND*	00000000 __aeabi_memcpy4



Disassembly of section .text._ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha322f774bda5592fE:

00000000 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next>:
_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha322f774bda5592fE():
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:168
impl<P: Iterator<Item = Pixel<Rgb565>>> Iterator for RowIterator<P> {
    /// This Iterator returns Pixel Rows
    type Item = PixelRow;

    /// Return the next Pixel Row of contiguous pixels on the same row
    fn next(&mut self) -> Option<Self::Item> {
   0:	b580      	push	{r7, lr}
   2:	f5ad 7d46 	sub.w	sp, sp, #792	; 0x318
   6:	9117      	str	r1, [sp, #92]	; 0x5c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:170
        //  Loop over all pixels until we have composed a Pixel Row, or we have run out of pixels.
        loop {
   8:	9016      	str	r0, [sp, #88]	; 0x58
   a:	e7ff      	b.n	c <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0xc>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:172
            //  Get the next pixel.
            let next_pixel = self.pixels.next();
   c:	9917      	ldr	r1, [sp, #92]	; 0x5c
   e:	a818      	add	r0, sp, #96	; 0x60
  10:	f7ff fffe 	bl	0 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next>
  14:	e7ff      	b.n	16 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x16>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:174
            match next_pixel {
                None => {  //  If no more pixels...
  16:	9818      	ldr	r0, [sp, #96]	; 0x60
  18:	2800      	cmp	r0, #0
  1a:	d002      	beq.n	22 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x22>
  1c:	e7ff      	b.n	1e <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x1e>
  1e:	e04e      	b.n	be <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0xbe>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:173
            match next_pixel {
  20:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:175
                    if self.first_pixel {
  22:	9817      	ldr	r0, [sp, #92]	; 0x5c
  24:	f890 008e 	ldrb.w	r0, [r0, #142]	; 0x8e
  28:	07c0      	lsls	r0, r0, #31
  2a:	2800      	cmp	r0, #0
  2c:	d115      	bne.n	5a <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x5a>
  2e:	e7ff      	b.n	30 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x30>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:180
                        return None;  //  No pixels to group
                    }                    
                    //  Else return previous pixels as row.
                    let row = PixelRow {
                        x_left: self.x_left,
  30:	9817      	ldr	r0, [sp, #92]	; 0x5c
  32:	f8b0 1088 	ldrh.w	r1, [r0, #136]	; 0x88
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:181
                        x_right: self.x_right,
  36:	f8b0 208a 	ldrh.w	r2, [r0, #138]	; 0x8a
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:182
                        y: self.y,
  3a:	f8b0 308c 	ldrh.w	r3, [r0, #140]	; 0x8c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:183
                        colors: self.colors.clone(),
  3e:	3020      	adds	r0, #32
  40:	f10d 0ce0 	add.w	ip, sp, #224	; 0xe0
  44:	9015      	str	r0, [sp, #84]	; 0x54
  46:	4660      	mov	r0, ip
  48:	f8dd c054 	ldr.w	ip, [sp, #84]	; 0x54
  4c:	9114      	str	r1, [sp, #80]	; 0x50
  4e:	4661      	mov	r1, ip
  50:	9213      	str	r2, [sp, #76]	; 0x4c
  52:	9312      	str	r3, [sp, #72]	; 0x48
  54:	f7ff fffe 	bl	0 <<heapless::vec::Vec<T,N> as core::clone::Clone>::clone>
  58:	e006      	b.n	68 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x68>
  5a:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:176
                        return None;  //  No pixels to group
  5c:	9916      	ldr	r1, [sp, #88]	; 0x58
  5e:	6008      	str	r0, [r1, #0]
  60:	e7ff      	b.n	62 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x62>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:229
                        .expect("never");
                    return Some(row);
                }
            }
        }
    }
  62:	f50d 7d46 	add.w	sp, sp, #792	; 0x318
  66:	bd80      	pop	{r7, pc}
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:179
                    let row = PixelRow {
  68:	9814      	ldr	r0, [sp, #80]	; 0x50
  6a:	f8ad 00d8 	strh.w	r0, [sp, #216]	; 0xd8
  6e:	9913      	ldr	r1, [sp, #76]	; 0x4c
  70:	f8ad 10da 	strh.w	r1, [sp, #218]	; 0xda
  74:	9a12      	ldr	r2, [sp, #72]	; 0x48
  76:	f8ad 20dc 	strh.w	r2, [sp, #220]	; 0xdc
  7a:	a81c      	add	r0, sp, #112	; 0x70
  7c:	a938      	add	r1, sp, #224	; 0xe0
  7e:	2268      	movs	r2, #104	; 0x68
  80:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:185
                    self.colors.clear();
  84:	9817      	ldr	r0, [sp, #92]	; 0x5c
  86:	3020      	adds	r0, #32
  88:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::clear>
  8c:	e7ff      	b.n	8e <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x8e>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:186
                    self.first_pixel = true;
  8e:	9817      	ldr	r0, [sp, #92]	; 0x5c
  90:	2101      	movs	r1, #1
  92:	f880 108e 	strb.w	r1, [r0, #142]	; 0x8e
  96:	a852      	add	r0, sp, #328	; 0x148
  98:	aa1c      	add	r2, sp, #112	; 0x70
  9a:	2370      	movs	r3, #112	; 0x70
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:187
                    return Some(row);
  9c:	9011      	str	r0, [sp, #68]	; 0x44
  9e:	9110      	str	r1, [sp, #64]	; 0x40
  a0:	4611      	mov	r1, r2
  a2:	461a      	mov	r2, r3
  a4:	930f      	str	r3, [sp, #60]	; 0x3c
  a6:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  aa:	9816      	ldr	r0, [sp, #88]	; 0x58
  ac:	3004      	adds	r0, #4
  ae:	9911      	ldr	r1, [sp, #68]	; 0x44
  b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  b2:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  b6:	9810      	ldr	r0, [sp, #64]	; 0x40
  b8:	9916      	ldr	r1, [sp, #88]	; 0x58
  ba:	6008      	str	r0, [r1, #0]
  bc:	e7d1      	b.n	62 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x62>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:189
                Some(Pixel(coord, color)) => {  //  If there is a pixel...
  be:	9819      	ldr	r0, [sp, #100]	; 0x64
  c0:	991a      	ldr	r1, [sp, #104]	; 0x68
  c2:	906e      	str	r0, [sp, #440]	; 0x1b8
  c4:	916f      	str	r1, [sp, #444]	; 0x1bc
  c6:	f8bd 006c 	ldrh.w	r0, [sp, #108]	; 0x6c
  ca:	f8ad 01c2 	strh.w	r0, [sp, #450]	; 0x1c2
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:190
                    let x = coord.0 as u16;
  ce:	986e      	ldr	r0, [sp, #440]	; 0x1b8
  d0:	f8ad 01c4 	strh.w	r0, [sp, #452]	; 0x1c4
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:191
                    let y = coord.1 as u16;
  d4:	986f      	ldr	r0, [sp, #444]	; 0x1bc
  d6:	f8ad 01c6 	strh.w	r0, [sp, #454]	; 0x1c6
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:192
                    let color = color.0;
  da:	f8bd 01c2 	ldrh.w	r0, [sp, #450]	; 0x1c2
  de:	f8ad 01c8 	strh.w	r0, [sp, #456]	; 0x1c8
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:194
                    if self.first_pixel {
  e2:	9817      	ldr	r0, [sp, #92]	; 0x5c
  e4:	f890 008e 	ldrb.w	r0, [r0, #142]	; 0x8e
  e8:	07c0      	lsls	r0, r0, #31
  ea:	2800      	cmp	r0, #0
  ec:	d10e      	bne.n	10c <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x10c>
  ee:	e7ff      	b.n	f0 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0xf0>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:205
                    if x == self.x_right + 1 && y == self.y {
  f0:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
  f4:	9917      	ldr	r1, [sp, #92]	; 0x5c
  f6:	f8b1 108a 	ldrh.w	r1, [r1, #138]	; 0x8a
  fa:	3101      	adds	r1, #1
  fc:	b28a      	uxth	r2, r1
  fe:	460b      	mov	r3, r1
 100:	428a      	cmp	r2, r1
 102:	900e      	str	r0, [sp, #56]	; 0x38
 104:	930d      	str	r3, [sp, #52]	; 0x34
 106:	f040 80ce 	bne.w	2a6 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x2a6>
 10a:	e048      	b.n	19e <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x19e>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:195
                        self.first_pixel = false;
 10c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 10e:	2100      	movs	r1, #0
 110:	f880 108e 	strb.w	r1, [r0, #142]	; 0x8e
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:196
                        self.x_left = x;
 114:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
 118:	9917      	ldr	r1, [sp, #92]	; 0x5c
 11a:	f8a1 0088 	strh.w	r0, [r1, #136]	; 0x88
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:197
                        self.x_right = x;
 11e:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
 122:	9917      	ldr	r1, [sp, #92]	; 0x5c
 124:	f8a1 008a 	strh.w	r0, [r1, #138]	; 0x8a
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:198
                        self.y = y;
 128:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
 12c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 12e:	f8a1 008c 	strh.w	r0, [r1, #140]	; 0x8c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:199
                        self.colors.clear();
 132:	9817      	ldr	r0, [sp, #92]	; 0x5c
 134:	3020      	adds	r0, #32
 136:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::clear>
 13a:	e7ff      	b.n	13c <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x13c>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:200
                        self.colors.push(color)
 13c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 13e:	3020      	adds	r0, #32
 140:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
 144:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::push>
 148:	900c      	str	r0, [sp, #48]	; 0x30
 14a:	910b      	str	r1, [sp, #44]	; 0x2c
 14c:	e7ff      	b.n	14e <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x14e>
 14e:	f240 0000 	movw	r0, #0
 152:	f2c0 0000 	movt	r0, #0
 156:	4669      	mov	r1, sp
 158:	6008      	str	r0, [r1, #0]
 15a:	f240 0200 	movw	r2, #0
 15e:	f2c0 0200 	movt	r2, #0
 162:	2305      	movs	r3, #5
 164:	980c      	ldr	r0, [sp, #48]	; 0x30
 166:	990b      	ldr	r1, [sp, #44]	; 0x2c
 168:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
 16c:	e7ff      	b.n	16e <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x16e>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:202
                        continue;
 16e:	e7ff      	b.n	170 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x170>
 170:	e74c      	b.n	c <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0xc>
 172:	2001      	movs	r0, #1
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:205
                    if x == self.x_right + 1 && y == self.y {
 174:	f88d 01cb 	strb.w	r0, [sp, #459]	; 0x1cb
 178:	e00b      	b.n	192 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x192>
 17a:	2000      	movs	r0, #0
 17c:	f88d 01cb 	strb.w	r0, [sp, #459]	; 0x1cb
 180:	e007      	b.n	192 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x192>
 182:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
 186:	9917      	ldr	r1, [sp, #92]	; 0x5c
 188:	f8b1 108c 	ldrh.w	r1, [r1, #140]	; 0x8c
 18c:	4288      	cmp	r0, r1
 18e:	d0f0      	beq.n	172 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x172>
 190:	e7f3      	b.n	17a <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x17a>
 192:	f89d 01cb 	ldrb.w	r0, [sp, #459]	; 0x1cb
 196:	07c0      	lsls	r0, r0, #31
 198:	2800      	cmp	r0, #0
 19a:	d107      	bne.n	1ac <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x1ac>
 19c:	e022      	b.n	1e4 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x1e4>
 19e:	980d      	ldr	r0, [sp, #52]	; 0x34
 1a0:	b281      	uxth	r1, r0
 1a2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 1a4:	b293      	uxth	r3, r2
 1a6:	428b      	cmp	r3, r1
 1a8:	d0eb      	beq.n	182 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x182>
 1aa:	e7e6      	b.n	17a <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x17a>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:206
                        if self.colors.push(color).is_ok() {
 1ac:	9817      	ldr	r0, [sp, #92]	; 0x5c
 1ae:	3020      	adds	r0, #32
 1b0:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
 1b4:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::push>
 1b8:	f8ad 11ce 	strh.w	r1, [sp, #462]	; 0x1ce
 1bc:	f8ad 01cc 	strh.w	r0, [sp, #460]	; 0x1cc
 1c0:	e7ff      	b.n	1c2 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x1c2>
 1c2:	a873      	add	r0, sp, #460	; 0x1cc
 1c4:	f7ff fffe 	bl	0 <core::result::Result<T,E>::is_ok>
 1c8:	900a      	str	r0, [sp, #40]	; 0x28
 1ca:	e7ff      	b.n	1cc <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x1cc>
 1cc:	980a      	ldr	r0, [sp, #40]	; 0x28
 1ce:	07c1      	lsls	r1, r0, #31
 1d0:	2900      	cmp	r1, #0
 1d2:	d101      	bne.n	1d8 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x1d8>
 1d4:	e7ff      	b.n	1d6 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x1d6>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:205
                    if x == self.x_right + 1 && y == self.y {
 1d6:	e005      	b.n	1e4 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x1e4>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:208
                            self.x_right = x;
 1d8:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
 1dc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 1de:	f8a1 008a 	strh.w	r0, [r1, #138]	; 0x8a
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:209
                            continue;
 1e2:	e7c5      	b.n	170 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x170>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:214
                        x_left: self.x_left,
 1e4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 1e6:	f8b0 1088 	ldrh.w	r1, [r0, #136]	; 0x88
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:215
                        x_right: self.x_right,
 1ea:	f8b0 208a 	ldrh.w	r2, [r0, #138]	; 0x8a
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:216
                        y: self.y,
 1ee:	f8b0 308c 	ldrh.w	r3, [r0, #140]	; 0x8c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:217
                        colors: self.colors.clone(),
 1f2:	3020      	adds	r0, #32
 1f4:	f50d 7c10 	add.w	ip, sp, #576	; 0x240
 1f8:	9009      	str	r0, [sp, #36]	; 0x24
 1fa:	4660      	mov	r0, ip
 1fc:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 200:	9108      	str	r1, [sp, #32]
 202:	4661      	mov	r1, ip
 204:	9207      	str	r2, [sp, #28]
 206:	9306      	str	r3, [sp, #24]
 208:	f7ff fffe 	bl	0 <<heapless::vec::Vec<T,N> as core::clone::Clone>::clone>
 20c:	e7ff      	b.n	20e <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x20e>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:213
                    let row = PixelRow {
 20e:	9808      	ldr	r0, [sp, #32]
 210:	f8ad 0238 	strh.w	r0, [sp, #568]	; 0x238
 214:	9907      	ldr	r1, [sp, #28]
 216:	f8ad 123a 	strh.w	r1, [sp, #570]	; 0x23a
 21a:	9a06      	ldr	r2, [sp, #24]
 21c:	f8ad 223c 	strh.w	r2, [sp, #572]	; 0x23c
 220:	a874      	add	r0, sp, #464	; 0x1d0
 222:	a990      	add	r1, sp, #576	; 0x240
 224:	2268      	movs	r2, #104	; 0x68
 226:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:219
                    self.x_left = x;
 22a:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
 22e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 230:	f8a1 0088 	strh.w	r0, [r1, #136]	; 0x88
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:220
                    self.x_right = x;
 234:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
 238:	9917      	ldr	r1, [sp, #92]	; 0x5c
 23a:	f8a1 008a 	strh.w	r0, [r1, #138]	; 0x8a
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:221
                    self.y = y;
 23e:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
 242:	9917      	ldr	r1, [sp, #92]	; 0x5c
 244:	f8a1 008c 	strh.w	r0, [r1, #140]	; 0x8c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:222
                    self.colors.clear();
 248:	9817      	ldr	r0, [sp, #92]	; 0x5c
 24a:	3020      	adds	r0, #32
 24c:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::clear>
 250:	e7ff      	b.n	252 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x252>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:223
                    self.colors.push(color)
 252:	9817      	ldr	r0, [sp, #92]	; 0x5c
 254:	3020      	adds	r0, #32
 256:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
 25a:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::push>
 25e:	9005      	str	r0, [sp, #20]
 260:	9104      	str	r1, [sp, #16]
 262:	e7ff      	b.n	264 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x264>
 264:	f240 0000 	movw	r0, #0
 268:	f2c0 0000 	movt	r0, #0
 26c:	4669      	mov	r1, sp
 26e:	6008      	str	r0, [r1, #0]
 270:	f240 0200 	movw	r2, #0
 274:	f2c0 0200 	movt	r2, #0
 278:	2305      	movs	r3, #5
 27a:	9805      	ldr	r0, [sp, #20]
 27c:	9904      	ldr	r1, [sp, #16]
 27e:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
 282:	e7ff      	b.n	284 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x284>
 284:	a8aa      	add	r0, sp, #680	; 0x2a8
 286:	a974      	add	r1, sp, #464	; 0x1d0
 288:	2270      	movs	r2, #112	; 0x70
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:225
                    return Some(row);
 28a:	9003      	str	r0, [sp, #12]
 28c:	9202      	str	r2, [sp, #8]
 28e:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
 292:	9816      	ldr	r0, [sp, #88]	; 0x58
 294:	3004      	adds	r0, #4
 296:	9903      	ldr	r1, [sp, #12]
 298:	9a02      	ldr	r2, [sp, #8]
 29a:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
 29e:	2001      	movs	r0, #1
 2a0:	9916      	ldr	r1, [sp, #88]	; 0x58
 2a2:	6008      	str	r0, [r1, #0]
 2a4:	e6dd      	b.n	62 <<piet_embedded_graphics::batch::RowIterator<P> as core::iter::traits::iterator::Iterator>::next+0x62>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:205
                    if x == self.x_right + 1 && y == self.y {
 2a6:	f240 0000 	movw	r0, #0
 2aa:	f2c0 0000 	movt	r0, #0
 2ae:	f240 0200 	movw	r2, #0
 2b2:	f2c0 0200 	movt	r2, #0
 2b6:	211c      	movs	r1, #28
 2b8:	f7ff fffe 	bl	0 <core::panicking::panic>
 2bc:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd6425ebdc622c718E:

00000000 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next>:
_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd6425ebdc622c718E():
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:239
impl<R: Iterator<Item = PixelRow>> Iterator for BlockIterator<R> {
    /// This Iterator returns Pixel Blocks
    type Item = PixelBlock;

    /// Return the next Pixel Block of contiguous Pixel Rows with the same start and end column number
    fn next(&mut self) -> Option<Self::Item> {
   0:	b580      	push	{r7, lr}
   2:	f5ad 6dca 	sub.w	sp, sp, #1616	; 0x650
   6:	911e      	str	r1, [sp, #120]	; 0x78
   8:	2100      	movs	r1, #0
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:241
        //  Loop over all Pixel Rows until we have composed a Pixel Block, or we have run out of Pixel Rows.
        loop {
   a:	f88d 164f 	strb.w	r1, [sp, #1615]	; 0x64f
   e:	901d      	str	r0, [sp, #116]	; 0x74
  10:	e7ff      	b.n	12 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x12>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:243
            //  Get the next Pixel Row.
            let next_row = self.rows.next();
  12:	991e      	ldr	r1, [sp, #120]	; 0x78
  14:	2001      	movs	r0, #1
  16:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
  1a:	a81f      	add	r0, sp, #124	; 0x7c
  1c:	f7ff fffe 	bl	0 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next>
  20:	e7ff      	b.n	22 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x22>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:245
            match next_row {
                None => {  //  If no more Pixel Rows...
  22:	981f      	ldr	r0, [sp, #124]	; 0x7c
  24:	2800      	cmp	r0, #0
  26:	d002      	beq.n	2e <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x2e>
  28:	e7ff      	b.n	2a <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x2a>
  2a:	e052      	b.n	d2 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0xd2>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:244
            match next_row {
  2c:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:246
                    if self.first_row {
  2e:	981e      	ldr	r0, [sp, #120]	; 0x78
  30:	f890 0164 	ldrb.w	r0, [r0, #356]	; 0x164
  34:	07c0      	lsls	r0, r0, #31
  36:	2800      	cmp	r0, #0
  38:	d119      	bne.n	6e <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x6e>
  3a:	e7ff      	b.n	3c <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x3c>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:251
                        return None;  //  No rows to group
                    }                    
                    //  Else return previous rows as block.
                    let row = PixelBlock {
                        x_left: self.x_left,
  3c:	981e      	ldr	r0, [sp, #120]	; 0x78
  3e:	f8b0 115c 	ldrh.w	r1, [r0, #348]	; 0x15c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:252
                        x_right: self.x_right,
  42:	f8b0 215e 	ldrh.w	r2, [r0, #350]	; 0x15e
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:253
                        y_top: self.y_top,
  46:	f8b0 3160 	ldrh.w	r3, [r0, #352]	; 0x160
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:254
                        y_bottom: self.y_bottom,
  4a:	f8b0 c162 	ldrh.w	ip, [r0, #354]	; 0x162
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:255
                        colors: self.colors.clone(),
  4e:	3090      	adds	r0, #144	; 0x90
  50:	f50d 7ee2 	add.w	lr, sp, #452	; 0x1c4
  54:	901c      	str	r0, [sp, #112]	; 0x70
  56:	4670      	mov	r0, lr
  58:	f8dd e070 	ldr.w	lr, [sp, #112]	; 0x70
  5c:	911b      	str	r1, [sp, #108]	; 0x6c
  5e:	4671      	mov	r1, lr
  60:	921a      	str	r2, [sp, #104]	; 0x68
  62:	9319      	str	r3, [sp, #100]	; 0x64
  64:	f8cd c060 	str.w	ip, [sp, #96]	; 0x60
  68:	f7ff fffe 	bl	0 <<heapless::vec::Vec<T,N> as core::clone::Clone>::clone>
  6c:	e003      	b.n	76 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x76>
  6e:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:247
                        return None;  //  No rows to group
  70:	991d      	ldr	r1, [sp, #116]	; 0x74
  72:	6008      	str	r0, [r1, #0]
  74:	e187      	b.n	386 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x386>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:250
                    let row = PixelBlock {
  76:	981b      	ldr	r0, [sp, #108]	; 0x6c
  78:	f8ad 01bc 	strh.w	r0, [sp, #444]	; 0x1bc
  7c:	991a      	ldr	r1, [sp, #104]	; 0x68
  7e:	f8ad 11be 	strh.w	r1, [sp, #446]	; 0x1be
  82:	9a19      	ldr	r2, [sp, #100]	; 0x64
  84:	f8ad 21c0 	strh.w	r2, [sp, #448]	; 0x1c0
  88:	9b18      	ldr	r3, [sp, #96]	; 0x60
  8a:	f8ad 31c2 	strh.w	r3, [sp, #450]	; 0x1c2
  8e:	a83c      	add	r0, sp, #240	; 0xf0
  90:	a971      	add	r1, sp, #452	; 0x1c4
  92:	22cc      	movs	r2, #204	; 0xcc
  94:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:257
                    };
                    self.colors.clear();
  98:	981e      	ldr	r0, [sp, #120]	; 0x78
  9a:	3090      	adds	r0, #144	; 0x90
  9c:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::clear>
  a0:	e7ff      	b.n	a2 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0xa2>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:258
                    self.first_row = true;
  a2:	981e      	ldr	r0, [sp, #120]	; 0x78
  a4:	2101      	movs	r1, #1
  a6:	f880 1164 	strb.w	r1, [r0, #356]	; 0x164
  aa:	a8a4      	add	r0, sp, #656	; 0x290
  ac:	aa3c      	add	r2, sp, #240	; 0xf0
  ae:	23d4      	movs	r3, #212	; 0xd4
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:259
                    return Some(row);
  b0:	9017      	str	r0, [sp, #92]	; 0x5c
  b2:	9116      	str	r1, [sp, #88]	; 0x58
  b4:	4611      	mov	r1, r2
  b6:	461a      	mov	r2, r3
  b8:	9315      	str	r3, [sp, #84]	; 0x54
  ba:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  be:	981d      	ldr	r0, [sp, #116]	; 0x74
  c0:	3004      	adds	r0, #4
  c2:	9917      	ldr	r1, [sp, #92]	; 0x5c
  c4:	9a15      	ldr	r2, [sp, #84]	; 0x54
  c6:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  ca:	9816      	ldr	r0, [sp, #88]	; 0x58
  cc:	991d      	ldr	r1, [sp, #116]	; 0x74
  ce:	6008      	str	r0, [r1, #0]
  d0:	e159      	b.n	386 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x386>
  d2:	a81f      	add	r0, sp, #124	; 0x7c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:261
                }
                Some(PixelRow { x_left, x_right, y, colors, .. }) => {  //  If there is a Pixel Row...
  d4:	1d01      	adds	r1, r0, #4
  d6:	f8bd 00e8 	ldrh.w	r0, [sp, #232]	; 0xe8
  da:	f8ad 0366 	strh.w	r0, [sp, #870]	; 0x366
  de:	f8bd 00ea 	ldrh.w	r0, [sp, #234]	; 0xea
  e2:	f8ad 0368 	strh.w	r0, [sp, #872]	; 0x368
  e6:	f8bd 00ec 	ldrh.w	r0, [sp, #236]	; 0xec
  ea:	f8ad 036a 	strh.w	r0, [sp, #874]	; 0x36a
  ee:	2000      	movs	r0, #0
  f0:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
  f4:	a8db      	add	r0, sp, #876	; 0x36c
  f6:	2268      	movs	r2, #104	; 0x68
  f8:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:263
                    //  Save the first row as the block start and handle next block.
                    if self.first_row {
  fc:	981e      	ldr	r0, [sp, #120]	; 0x78
  fe:	f890 0164 	ldrb.w	r0, [r0, #356]	; 0x164
 102:	07c0      	lsls	r0, r0, #31
 104:	2800      	cmp	r0, #0
 106:	d10e      	bne.n	126 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x126>
 108:	e7ff      	b.n	10a <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x10a>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:275
                        self.colors.extend_from_slice(&colors)
                            .expect("never");
                        continue;
                    }
                    //  If this row is adjacent to the previous row and same size, add to the block.
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
 10a:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
 10e:	991e      	ldr	r1, [sp, #120]	; 0x78
 110:	f8b1 1162 	ldrh.w	r1, [r1, #354]	; 0x162
 114:	3101      	adds	r1, #1
 116:	b28a      	uxth	r2, r1
 118:	460b      	mov	r3, r1
 11a:	428a      	cmp	r2, r1
 11c:	9014      	str	r0, [sp, #80]	; 0x50
 11e:	9313      	str	r3, [sp, #76]	; 0x4c
 120:	f040 813d 	bne.w	39e <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x39e>
 124:	e072      	b.n	20c <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x20c>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:264
                        self.first_row = false;
 126:	981e      	ldr	r0, [sp, #120]	; 0x78
 128:	2100      	movs	r1, #0
 12a:	f880 1164 	strb.w	r1, [r0, #356]	; 0x164
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:265
                        self.x_left = x_left;
 12e:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
 132:	991e      	ldr	r1, [sp, #120]	; 0x78
 134:	f8a1 015c 	strh.w	r0, [r1, #348]	; 0x15c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:266
                        self.x_right = x_right;
 138:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
 13c:	991e      	ldr	r1, [sp, #120]	; 0x78
 13e:	f8a1 015e 	strh.w	r0, [r1, #350]	; 0x15e
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:267
                        self.y_top = y;
 142:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
 146:	991e      	ldr	r1, [sp, #120]	; 0x78
 148:	f8a1 0160 	strh.w	r0, [r1, #352]	; 0x160
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:268
                        self.y_bottom = y;
 14c:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
 150:	991e      	ldr	r1, [sp, #120]	; 0x78
 152:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:269
                        self.colors.clear();
 156:	981e      	ldr	r0, [sp, #120]	; 0x78
 158:	3090      	adds	r0, #144	; 0x90
 15a:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::clear>
 15e:	e7ff      	b.n	160 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x160>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:270
                        self.colors.extend_from_slice(&colors)
 160:	981e      	ldr	r0, [sp, #120]	; 0x78
 162:	3090      	adds	r0, #144	; 0x90
 164:	a9db      	add	r1, sp, #876	; 0x36c
 166:	9012      	str	r0, [sp, #72]	; 0x48
 168:	4608      	mov	r0, r1
 16a:	f7ff fffe 	bl	0 <<heapless::vec::Vec<T,N> as core::ops::deref::Deref>::deref>
 16e:	9011      	str	r0, [sp, #68]	; 0x44
 170:	9110      	str	r1, [sp, #64]	; 0x40
 172:	e7ff      	b.n	174 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x174>
 174:	9812      	ldr	r0, [sp, #72]	; 0x48
 176:	9911      	ldr	r1, [sp, #68]	; 0x44
 178:	9a10      	ldr	r2, [sp, #64]	; 0x40
 17a:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::extend_from_slice>
 17e:	900f      	str	r0, [sp, #60]	; 0x3c
 180:	e7ff      	b.n	182 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x182>
 182:	980f      	ldr	r0, [sp, #60]	; 0x3c
 184:	f000 0001 	and.w	r0, r0, #1
 188:	f240 0100 	movw	r1, #0
 18c:	f2c0 0100 	movt	r1, #0
 190:	f240 0300 	movw	r3, #0
 194:	f2c0 0300 	movt	r3, #0
 198:	2205      	movs	r2, #5
 19a:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
 19e:	e7ff      	b.n	1a0 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1a0>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:272
                        continue;
 1a0:	e7ff      	b.n	1a2 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1a2>
 1a2:	a8db      	add	r0, sp, #876	; 0x36c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:299
                    self.colors.clear();
                    self.colors.extend_from_slice(&colors)
                        .expect("never");
                    return Some(row);
                }
            }
 1a4:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
 1a8:	e7ff      	b.n	1aa <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1aa>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:300
        }
 1aa:	981f      	ldr	r0, [sp, #124]	; 0x7c
 1ac:	2801      	cmp	r0, #1
 1ae:	f000 80ee 	beq.w	38e <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x38e>
 1b2:	e0f0      	b.n	396 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x396>
 1b4:	2001      	movs	r0, #1
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:275
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
 1b6:	f88d 03d5 	strb.w	r0, [sp, #981]	; 0x3d5
 1ba:	e00b      	b.n	1d4 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1d4>
 1bc:	2000      	movs	r0, #0
 1be:	f88d 03d5 	strb.w	r0, [sp, #981]	; 0x3d5
 1c2:	e007      	b.n	1d4 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1d4>
 1c4:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
 1c8:	991e      	ldr	r1, [sp, #120]	; 0x78
 1ca:	f8b1 115e 	ldrh.w	r1, [r1, #350]	; 0x15e
 1ce:	4288      	cmp	r0, r1
 1d0:	d0f0      	beq.n	1b4 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1b4>
 1d2:	e7f3      	b.n	1bc <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1bc>
 1d4:	f89d 03d5 	ldrb.w	r0, [sp, #981]	; 0x3d5
 1d8:	07c0      	lsls	r0, r0, #31
 1da:	2800      	cmp	r0, #0
 1dc:	d11d      	bne.n	21a <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x21a>
 1de:	e040      	b.n	262 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x262>
 1e0:	2001      	movs	r0, #1
 1e2:	f88d 03d6 	strb.w	r0, [sp, #982]	; 0x3d6
 1e6:	e00b      	b.n	200 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x200>
 1e8:	2000      	movs	r0, #0
 1ea:	f88d 03d6 	strb.w	r0, [sp, #982]	; 0x3d6
 1ee:	e007      	b.n	200 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x200>
 1f0:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
 1f4:	991e      	ldr	r1, [sp, #120]	; 0x78
 1f6:	f8b1 115c 	ldrh.w	r1, [r1, #348]	; 0x15c
 1fa:	4288      	cmp	r0, r1
 1fc:	d0f0      	beq.n	1e0 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1e0>
 1fe:	e7f3      	b.n	1e8 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1e8>
 200:	f89d 03d6 	ldrb.w	r0, [sp, #982]	; 0x3d6
 204:	07c0      	lsls	r0, r0, #31
 206:	2800      	cmp	r0, #0
 208:	d1dc      	bne.n	1c4 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1c4>
 20a:	e7d7      	b.n	1bc <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1bc>
 20c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 20e:	b281      	uxth	r1, r0
 210:	9a14      	ldr	r2, [sp, #80]	; 0x50
 212:	b293      	uxth	r3, r2
 214:	428b      	cmp	r3, r1
 216:	d0eb      	beq.n	1f0 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1f0>
 218:	e7e6      	b.n	1e8 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1e8>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:277
                        if self.colors.extend_from_slice(&colors).is_ok() {
 21a:	981e      	ldr	r0, [sp, #120]	; 0x78
 21c:	3090      	adds	r0, #144	; 0x90
 21e:	a9db      	add	r1, sp, #876	; 0x36c
 220:	900e      	str	r0, [sp, #56]	; 0x38
 222:	4608      	mov	r0, r1
 224:	f7ff fffe 	bl	0 <<heapless::vec::Vec<T,N> as core::ops::deref::Deref>::deref>
 228:	900d      	str	r0, [sp, #52]	; 0x34
 22a:	910c      	str	r1, [sp, #48]	; 0x30
 22c:	e7ff      	b.n	22e <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x22e>
 22e:	980e      	ldr	r0, [sp, #56]	; 0x38
 230:	990d      	ldr	r1, [sp, #52]	; 0x34
 232:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 234:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::extend_from_slice>
 238:	f88d 03d7 	strb.w	r0, [sp, #983]	; 0x3d7
 23c:	e7ff      	b.n	23e <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x23e>
 23e:	f20d 30d7 	addw	r0, sp, #983	; 0x3d7
 242:	f7ff fffe 	bl	0 <core::result::Result<T,E>::is_ok>
 246:	900b      	str	r0, [sp, #44]	; 0x2c
 248:	e7ff      	b.n	24a <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x24a>
 24a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 24c:	07c1      	lsls	r1, r0, #31
 24e:	2900      	cmp	r1, #0
 250:	d101      	bne.n	256 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x256>
 252:	e7ff      	b.n	254 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x254>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:275
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
 254:	e005      	b.n	262 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x262>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:278
                            self.y_bottom = y;
 256:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
 25a:	991e      	ldr	r1, [sp, #120]	; 0x78
 25c:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:279
                            continue;    
 260:	e79f      	b.n	1a2 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x1a2>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:284
                        x_left: self.x_left,
 262:	981e      	ldr	r0, [sp, #120]	; 0x78
 264:	f8b0 115c 	ldrh.w	r1, [r0, #348]	; 0x15c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:285
                        x_right: self.x_right,
 268:	f8b0 215e 	ldrh.w	r2, [r0, #350]	; 0x15e
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:286
                        y_top: self.y_top,
 26c:	f8b0 3160 	ldrh.w	r3, [r0, #352]	; 0x160
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:287
                        y_bottom: self.y_bottom,
 270:	f8b0 c162 	ldrh.w	ip, [r0, #354]	; 0x162
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:288
                        colors: self.colors.clone(),
 274:	3090      	adds	r0, #144	; 0x90
 276:	f20d 4eac 	addw	lr, sp, #1196	; 0x4ac
 27a:	900a      	str	r0, [sp, #40]	; 0x28
 27c:	4670      	mov	r0, lr
 27e:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 282:	9109      	str	r1, [sp, #36]	; 0x24
 284:	4671      	mov	r1, lr
 286:	9208      	str	r2, [sp, #32]
 288:	9307      	str	r3, [sp, #28]
 28a:	f8cd c018 	str.w	ip, [sp, #24]
 28e:	f7ff fffe 	bl	0 <<heapless::vec::Vec<T,N> as core::clone::Clone>::clone>
 292:	e7ff      	b.n	294 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x294>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:283
                    let row = PixelBlock {
 294:	9809      	ldr	r0, [sp, #36]	; 0x24
 296:	f8ad 04a4 	strh.w	r0, [sp, #1188]	; 0x4a4
 29a:	9908      	ldr	r1, [sp, #32]
 29c:	f8ad 14a6 	strh.w	r1, [sp, #1190]	; 0x4a6
 2a0:	9a07      	ldr	r2, [sp, #28]
 2a2:	f8ad 24a8 	strh.w	r2, [sp, #1192]	; 0x4a8
 2a6:	9b06      	ldr	r3, [sp, #24]
 2a8:	f8ad 34aa 	strh.w	r3, [sp, #1194]	; 0x4aa
 2ac:	a8f6      	add	r0, sp, #984	; 0x3d8
 2ae:	f20d 41ac 	addw	r1, sp, #1196	; 0x4ac
 2b2:	22cc      	movs	r2, #204	; 0xcc
 2b4:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:290
                    self.x_left = x_left;
 2b8:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
 2bc:	991e      	ldr	r1, [sp, #120]	; 0x78
 2be:	f8a1 015c 	strh.w	r0, [r1, #348]	; 0x15c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:291
                    self.x_right = x_right;
 2c2:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
 2c6:	991e      	ldr	r1, [sp, #120]	; 0x78
 2c8:	f8a1 015e 	strh.w	r0, [r1, #350]	; 0x15e
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:292
                    self.y_top = y;
 2cc:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
 2d0:	991e      	ldr	r1, [sp, #120]	; 0x78
 2d2:	f8a1 0160 	strh.w	r0, [r1, #352]	; 0x160
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:293
                    self.y_bottom = y;
 2d6:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
 2da:	991e      	ldr	r1, [sp, #120]	; 0x78
 2dc:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:294
                    self.colors.clear();
 2e0:	981e      	ldr	r0, [sp, #120]	; 0x78
 2e2:	3090      	adds	r0, #144	; 0x90
 2e4:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::clear>
 2e8:	e7ff      	b.n	2ea <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x2ea>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:295
                    self.colors.extend_from_slice(&colors)
 2ea:	981e      	ldr	r0, [sp, #120]	; 0x78
 2ec:	3090      	adds	r0, #144	; 0x90
 2ee:	a9db      	add	r1, sp, #876	; 0x36c
 2f0:	9005      	str	r0, [sp, #20]
 2f2:	4608      	mov	r0, r1
 2f4:	f7ff fffe 	bl	0 <<heapless::vec::Vec<T,N> as core::ops::deref::Deref>::deref>
 2f8:	9004      	str	r0, [sp, #16]
 2fa:	9103      	str	r1, [sp, #12]
 2fc:	e7ff      	b.n	2fe <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x2fe>
 2fe:	9805      	ldr	r0, [sp, #20]
 300:	9904      	ldr	r1, [sp, #16]
 302:	9a03      	ldr	r2, [sp, #12]
 304:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::extend_from_slice>
 308:	9002      	str	r0, [sp, #8]
 30a:	e7ff      	b.n	30c <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x30c>
 30c:	9802      	ldr	r0, [sp, #8]
 30e:	f000 0001 	and.w	r0, r0, #1
 312:	f240 0100 	movw	r1, #0
 316:	f2c0 0100 	movt	r1, #0
 31a:	f240 0300 	movw	r3, #0
 31e:	f2c0 0300 	movt	r3, #0
 322:	2205      	movs	r2, #5
 324:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
 328:	e7ff      	b.n	32a <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x32a>
 32a:	f50d 60af 	add.w	r0, sp, #1400	; 0x578
 32e:	a9f6      	add	r1, sp, #984	; 0x3d8
 330:	22d4      	movs	r2, #212	; 0xd4
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:297
                    return Some(row);
 332:	9001      	str	r0, [sp, #4]
 334:	9200      	str	r2, [sp, #0]
 336:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
 33a:	981d      	ldr	r0, [sp, #116]	; 0x74
 33c:	3004      	adds	r0, #4
 33e:	9901      	ldr	r1, [sp, #4]
 340:	9a00      	ldr	r2, [sp, #0]
 342:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
 346:	2001      	movs	r0, #1
 348:	991d      	ldr	r1, [sp, #116]	; 0x74
 34a:	6008      	str	r0, [r1, #0]
 34c:	a8db      	add	r0, sp, #876	; 0x36c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:299
            }
 34e:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
 352:	e7ff      	b.n	354 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x354>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:297
                    return Some(row);
 354:	e017      	b.n	386 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x386>
 356:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:300
        }
 358:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:301
    }
 35c:	f50d 6dca 	add.w	sp, sp, #1616	; 0x650
 360:	bd80      	pop	{r7, pc}
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:300
        }
 362:	f89d 064f 	ldrb.w	r0, [sp, #1615]	; 0x64f
 366:	07c0      	lsls	r0, r0, #31
 368:	2800      	cmp	r0, #0
 36a:	d0f4      	beq.n	356 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x356>
 36c:	e7ff      	b.n	36e <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x36e>
 36e:	2000      	movs	r0, #0
 370:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
 374:	a81f      	add	r0, sp, #124	; 0x7c
 376:	3004      	adds	r0, #4
 378:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
 37c:	e7eb      	b.n	356 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x356>
 37e:	a81f      	add	r0, sp, #124	; 0x7c
 380:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
 384:	e7e7      	b.n	356 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x356>
 386:	981f      	ldr	r0, [sp, #124]	; 0x7c
 388:	2801      	cmp	r0, #1
 38a:	d0ea      	beq.n	362 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x362>
 38c:	e7f7      	b.n	37e <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x37e>
 38e:	2000      	movs	r0, #0
 390:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:272
                        continue;
 394:	e63d      	b.n	12 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0x12>
 396:	a81f      	add	r0, sp, #124	; 0x7c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:300
        }
 398:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
 39c:	e7f7      	b.n	fffffff2 <<piet_embedded_graphics::batch::BlockIterator<R> as core::iter::traits::iterator::Iterator>::next+0xfffffff2>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:275
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
 39e:	f240 0000 	movw	r0, #0
 3a2:	f2c0 0000 	movt	r0, #0
 3a6:	f240 0200 	movw	r2, #0
 3aa:	f2c0 0200 	movt	r2, #0
 3ae:	211c      	movs	r1, #28
 3b0:	f7ff fffe 	bl	0 <core::panicking::panic>
 3b4:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN22piet_embedded_graphics5batch11draw_blocks17h26b4245874bf60f6E:

00000000 <piet_embedded_graphics::batch::draw_blocks>:
_ZN22piet_embedded_graphics5batch11draw_blocks17h26b4245874bf60f6E():
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:99
pub fn draw_blocks<SPI, DC, RST, T>(display: &mut ST7735<SPI, DC, RST>, item_pixels: T) -> Result<(),()>
   0:	b570      	push	{r4, r5, r6, lr}
   2:	f5ad 6d46 	sub.w	sp, sp, #3168	; 0xc60
   6:	b082      	sub	sp, #8
   8:	9011      	str	r0, [sp, #68]	; 0x44
   a:	a81b      	add	r0, sp, #108	; 0x6c
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:106
    let pixels = item_pixels.into_iter();
   c:	4602      	mov	r2, r0
   e:	e891 5078 	ldmia.w	r1, {r3, r4, r5, r6, ip, lr}
  12:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
  16:	a913      	add	r1, sp, #76	; 0x4c
  18:	9010      	str	r0, [sp, #64]	; 0x40
  1a:	4608      	mov	r0, r1
  1c:	9910      	ldr	r1, [sp, #64]	; 0x40
  1e:	f7ff fffe 	bl	0 <<embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter>
  22:	e7ff      	b.n	24 <piet_embedded_graphics::batch::draw_blocks+0x24>
  24:	a813      	add	r0, sp, #76	; 0x4c
  26:	a945      	add	r1, sp, #276	; 0x114
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:108
    let rows = to_rows(pixels);
  28:	460a      	mov	r2, r1
  2a:	e8b0 5018 	ldmia.w	r0!, {r3, r4, ip, lr}
  2e:	e8a2 5018 	stmia.w	r2!, {r3, r4, ip, lr}
  32:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
  36:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
  3a:	a821      	add	r0, sp, #132	; 0x84
  3c:	f7ff fffe 	bl	0 <piet_embedded_graphics::batch::draw_blocks>
  40:	e7ff      	b.n	42 <piet_embedded_graphics::batch::draw_blocks+0x42>
  42:	a8a7      	add	r0, sp, #668	; 0x29c
  44:	a921      	add	r1, sp, #132	; 0x84
  46:	2290      	movs	r2, #144	; 0x90
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:110
    let blocks = to_blocks(rows);
  48:	900f      	str	r0, [sp, #60]	; 0x3c
  4a:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  4e:	a84d      	add	r0, sp, #308	; 0x134
  50:	990f      	ldr	r1, [sp, #60]	; 0x3c
  52:	f7ff fffe 	bl	0 <piet_embedded_graphics::batch::draw_blocks>
  56:	e7ff      	b.n	58 <piet_embedded_graphics::batch::draw_blocks+0x58>
  58:	f20d 4094 	addw	r0, sp, #1172	; 0x494
  5c:	a94d      	add	r1, sp, #308	; 0x134
  5e:	f44f 72b4 	mov.w	r2, #360	; 0x168
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:112
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
  62:	900e      	str	r0, [sp, #56]	; 0x38
  64:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  68:	a8cb      	add	r0, sp, #812	; 0x32c
  6a:	990e      	ldr	r1, [sp, #56]	; 0x38
  6c:	f7ff fffe 	bl	0 <piet_embedded_graphics::batch::draw_blocks>
  70:	e7ff      	b.n	72 <piet_embedded_graphics::batch::draw_blocks+0x72>
  72:	f20d 50fc 	addw	r0, sp, #1532	; 0x5fc
  76:	a9cb      	add	r1, sp, #812	; 0x32c
  78:	f44f 72b4 	mov.w	r2, #360	; 0x168
  7c:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  80:	e7ff      	b.n	82 <piet_embedded_graphics::batch::draw_blocks+0x82>
  82:	f60d 0038 	addw	r0, sp, #2104	; 0x838
  86:	f20d 51fc 	addw	r1, sp, #1532	; 0x5fc
  8a:	f7ff fffe 	bl	0 <piet_embedded_graphics::batch::draw_blocks>
  8e:	e7ff      	b.n	90 <piet_embedded_graphics::batch::draw_blocks+0x90>
  90:	f8dd 0838 	ldr.w	r0, [sp, #2104]	; 0x838
  94:	2800      	cmp	r0, #0
  96:	d001      	beq.n	9c <piet_embedded_graphics::batch::draw_blocks+0x9c>
  98:	e7ff      	b.n	9a <piet_embedded_graphics::batch::draw_blocks+0x9a>
  9a:	e005      	b.n	a8 <piet_embedded_graphics::batch::draw_blocks+0xa8>
  9c:	f60d 0038 	addw	r0, sp, #2104	; 0x838
  a0:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
  a4:	e01c      	b.n	e0 <piet_embedded_graphics::batch::draw_blocks+0xe0>
  a6:	defe      	udf	#254	; 0xfe
  a8:	f60d 0038 	addw	r0, sp, #2104	; 0x838
  ac:	1d01      	adds	r1, r0, #4
  ae:	f50d 6011 	add.w	r0, sp, #2320	; 0x910
  b2:	22d4      	movs	r2, #212	; 0xd4
  b4:	900d      	str	r0, [sp, #52]	; 0x34
  b6:	920c      	str	r2, [sp, #48]	; 0x30
  b8:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  bc:	f60d 10e4 	addw	r0, sp, #2532	; 0x9e4
  c0:	900b      	str	r0, [sp, #44]	; 0x2c
  c2:	990d      	ldr	r1, [sp, #52]	; 0x34
  c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  c6:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  ca:	f20d 7064 	addw	r0, sp, #1892	; 0x764
  ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
  d0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  d2:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  d6:	f8dd 0838 	ldr.w	r0, [sp, #2104]	; 0x838
  da:	2801      	cmp	r0, #1
  dc:	d02d      	beq.n	13a <piet_embedded_graphics::batch::draw_blocks+0x13a>
  de:	e06d      	b.n	1bc <piet_embedded_graphics::batch::draw_blocks+0x1bc>
  e0:	f20d 50fc 	addw	r0, sp, #1532	; 0x5fc
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:126
    }
  e4:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
  e8:	e023      	b.n	132 <piet_embedded_graphics::batch::draw_blocks+0x132>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:114
        display.set_pixels(
  ea:	f89d 0b8f 	ldrb.w	r0, [sp, #2959]	; 0xb8f
  ee:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
  f2:	f88d 0b8e 	strb.w	r0, [sp, #2958]	; 0xb8e
  f6:	e7ff      	b.n	f8 <piet_embedded_graphics::batch::draw_blocks+0xf8>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:119
            colors) ? ;
  f8:	f89d 0b8e 	ldrb.w	r0, [sp, #2958]	; 0xb8e
  fc:	07c1      	lsls	r1, r0, #31
  fe:	2900      	cmp	r1, #0
 100:	d016      	beq.n	130 <piet_embedded_graphics::batch::draw_blocks+0x130>
 102:	e7ff      	b.n	104 <piet_embedded_graphics::batch::draw_blocks+0x104>
 104:	e000      	b.n	108 <piet_embedded_graphics::batch::draw_blocks+0x108>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:114
        display.set_pixels(
 106:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:119
            colors) ? ;
 108:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
 10c:	e005      	b.n	11a <piet_embedded_graphics::batch::draw_blocks+0x11a>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:128
}
 10e:	f89d 004b 	ldrb.w	r0, [sp, #75]	; 0x4b
 112:	f50d 6d46 	add.w	sp, sp, #3168	; 0xc60
 116:	b002      	add	sp, #8
 118:	bd70      	pop	{r4, r5, r6, pc}
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:119
            colors) ? ;
 11a:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
 11e:	f88d 004b 	strb.w	r0, [sp, #75]	; 0x4b
 122:	e7ff      	b.n	124 <piet_embedded_graphics::batch::draw_blocks+0x124>
 124:	f20d 50fc 	addw	r0, sp, #1532	; 0x5fc
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:126
    }
 128:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
 12c:	e7ff      	b.n	12e <piet_embedded_graphics::batch::draw_blocks+0x12e>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:128
}
 12e:	e7ee      	b.n	10e <piet_embedded_graphics::batch::draw_blocks+0x10e>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:112
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
 130:	e7a7      	b.n	82 <piet_embedded_graphics::batch::draw_blocks+0x82>
 132:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:127
    Ok(())
 134:	f88d 004b 	strb.w	r0, [sp, #75]	; 0x4b
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:128
}
 138:	e7e9      	b.n	10e <piet_embedded_graphics::batch::draw_blocks+0x10e>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:112
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
 13a:	f8bd 0830 	ldrh.w	r0, [sp, #2096]	; 0x830
 13e:	f8ad 0ab8 	strh.w	r0, [sp, #2744]	; 0xab8
 142:	f8bd 0832 	ldrh.w	r0, [sp, #2098]	; 0x832
 146:	f8ad 0aba 	strh.w	r0, [sp, #2746]	; 0xaba
 14a:	f8bd 0834 	ldrh.w	r0, [sp, #2100]	; 0x834
 14e:	f8ad 0abc 	strh.w	r0, [sp, #2748]	; 0xabc
 152:	f8bd 0836 	ldrh.w	r0, [sp, #2102]	; 0x836
 156:	f8ad 0abe 	strh.w	r0, [sp, #2750]	; 0xabe
 15a:	f50d 602c 	add.w	r0, sp, #2752	; 0xac0
 15e:	f20d 7164 	addw	r1, sp, #1892	; 0x764
 162:	22cc      	movs	r2, #204	; 0xcc
 164:	900a      	str	r0, [sp, #40]	; 0x28
 166:	9209      	str	r2, [sp, #36]	; 0x24
 168:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:114
        display.set_pixels(
 16c:	9811      	ldr	r0, [sp, #68]	; 0x44
 16e:	f8bd 3aba 	ldrh.w	r3, [sp, #2746]	; 0xaba
 172:	f8bd 2abc 	ldrh.w	r2, [sp, #2748]	; 0xabc
 176:	f8bd 1ab8 	ldrh.w	r1, [sp, #2744]	; 0xab8
 17a:	f8bd cabe 	ldrh.w	ip, [sp, #2750]	; 0xabe
 17e:	f50d 6e39 	add.w	lr, sp, #2960	; 0xb90
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:119
            colors) ? ;
 182:	9008      	str	r0, [sp, #32]
 184:	4670      	mov	r0, lr
 186:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 188:	9107      	str	r1, [sp, #28]
 18a:	4621      	mov	r1, r4
 18c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 18e:	9206      	str	r2, [sp, #24]
 190:	462a      	mov	r2, r5
 192:	9305      	str	r3, [sp, #20]
 194:	f8cd c010 	str.w	ip, [sp, #16]
 198:	f8cd e00c 	str.w	lr, [sp, #12]
 19c:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:114
        display.set_pixels(
 1a0:	4668      	mov	r0, sp
 1a2:	9903      	ldr	r1, [sp, #12]
 1a4:	6041      	str	r1, [r0, #4]
 1a6:	9a04      	ldr	r2, [sp, #16]
 1a8:	6002      	str	r2, [r0, #0]
 1aa:	9808      	ldr	r0, [sp, #32]
 1ac:	9907      	ldr	r1, [sp, #28]
 1ae:	9a06      	ldr	r2, [sp, #24]
 1b0:	9b05      	ldr	r3, [sp, #20]
 1b2:	f7ff fffe 	bl	0 <st7735_lcd::ST7735<SPI,DC,RST>::set_pixels>
 1b6:	f88d 0b8f 	strb.w	r0, [sp, #2959]	; 0xb8f
 1ba:	e796      	b.n	ea <piet_embedded_graphics::batch::draw_blocks+0xea>
 1bc:	f60d 0038 	addw	r0, sp, #2104	; 0x838
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:112
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
 1c0:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
 1c4:	e7b9      	b.n	13a <piet_embedded_graphics::batch::draw_blocks+0x13a>

Disassembly of section .text._ZN22piet_embedded_graphics5batch7to_rows17h139738545339e97dE:

00000000 <piet_embedded_graphics::batch::to_rows>:
_ZN22piet_embedded_graphics5batch7to_rows17h139738545339e97dE():
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:132
fn to_rows<P>(pixels: P) -> RowIterator<P>
   0:	b510      	push	{r4, lr}
   2:	b0a4      	sub	sp, #144	; 0x90
   4:	aa02      	add	r2, sp, #8
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:136
        pixels,
   6:	e8b1 5018 	ldmia.w	r1!, {r3, r4, ip, lr}
   a:	e8a2 5018 	stmia.w	r2!, {r3, r4, ip, lr}
   e:	e891 5018 	ldmia.w	r1, {r3, r4, ip, lr}
  12:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
  16:	a90a      	add	r1, sp, #40	; 0x28
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:140
        colors: RowColors::new(),
  18:	9001      	str	r0, [sp, #4]
  1a:	4608      	mov	r0, r1
  1c:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::new>
  20:	e7ff      	b.n	22 <piet_embedded_graphics::batch::to_rows+0x22>
  22:	a802      	add	r0, sp, #8
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:135
    RowIterator::<P> {
  24:	9901      	ldr	r1, [sp, #4]
  26:	e8b0 500c 	ldmia.w	r0!, {r2, r3, ip, lr}
  2a:	e8a1 500c 	stmia.w	r1!, {r2, r3, ip, lr}
  2e:	e890 500c 	ldmia.w	r0, {r2, r3, ip, lr}
  32:	e881 500c 	stmia.w	r1, {r2, r3, ip, lr}
  36:	2000      	movs	r0, #0
  38:	9901      	ldr	r1, [sp, #4]
  3a:	f8a1 0088 	strh.w	r0, [r1, #136]	; 0x88
  3e:	f8a1 008a 	strh.w	r0, [r1, #138]	; 0x8a
  42:	f8a1 008c 	strh.w	r0, [r1, #140]	; 0x8c
  46:	f101 0020 	add.w	r0, r1, #32
  4a:	a90a      	add	r1, sp, #40	; 0x28
  4c:	2268      	movs	r2, #104	; 0x68
  4e:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  52:	2001      	movs	r0, #1
  54:	9901      	ldr	r1, [sp, #4]
  56:	f881 008e 	strb.w	r0, [r1, #142]	; 0x8e
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:143
}
  5a:	b024      	add	sp, #144	; 0x90
  5c:	bd10      	pop	{r4, pc}

Disassembly of section .text._ZN22piet_embedded_graphics5batch9to_blocks17h5afe15c02b76488cE:

00000000 <piet_embedded_graphics::batch::to_blocks>:
_ZN22piet_embedded_graphics5batch9to_blocks17h5afe15c02b76488cE():
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:147
fn to_blocks<R>(rows: R) -> BlockIterator<R>
   0:	b580      	push	{r7, lr}
   2:	b0d8      	sub	sp, #352	; 0x160
   4:	aa01      	add	r2, sp, #4
   6:	2390      	movs	r3, #144	; 0x90
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:151
        rows,
   8:	9000      	str	r0, [sp, #0]
   a:	4610      	mov	r0, r2
   c:	461a      	mov	r2, r3
   e:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  12:	a825      	add	r0, sp, #148	; 0x94
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:156
        colors: BlockColors::new(),
  14:	f7ff fffe 	bl	0 <heapless::vec::Vec<T,N>::new>
  18:	e7ff      	b.n	1a <piet_embedded_graphics::batch::to_blocks+0x1a>
  1a:	a901      	add	r1, sp, #4
  1c:	2290      	movs	r2, #144	; 0x90
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:150
    BlockIterator::<R> {
  1e:	9800      	ldr	r0, [sp, #0]
  20:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  24:	2000      	movs	r0, #0
  26:	9900      	ldr	r1, [sp, #0]
  28:	f8a1 015c 	strh.w	r0, [r1, #348]	; 0x15c
  2c:	f8a1 015e 	strh.w	r0, [r1, #350]	; 0x15e
  30:	f8a1 0160 	strh.w	r0, [r1, #352]	; 0x160
  34:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
  38:	f101 0090 	add.w	r0, r1, #144	; 0x90
  3c:	a925      	add	r1, sp, #148	; 0x94
  3e:	22cc      	movs	r2, #204	; 0xcc
  40:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
  44:	2001      	movs	r0, #1
  46:	9900      	ldr	r1, [sp, #0]
  48:	f881 0164 	strb.w	r0, [r1, #356]	; 0x164
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/batch.rs:159
}    
  4c:	b058      	add	sp, #352	; 0x160
  4e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he1f0b61d840e85ffE:

00000000 <<I as core::iter::traits::collect::IntoIterator>::into_iter>:
_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he1f0b61d840e85ffE():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/iter/traits/collect.rs:247
   0:	b580      	push	{r7, lr}
   2:	f44f 72b4 	mov.w	r2, #360	; 0x168
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/iter/traits/collect.rs:248
   6:	f7ff fffe 	bl	0 <__aeabi_memcpy4>
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/iter/traits/collect.rs:249
   a:	bd80      	pop	{r7, pc}

app-64de0327356ea83b.1vsvaoo9izfswooh.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 1vsvaoo9izfswooh
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
0000008a l       .debug_str	00000000 
00000092 l       .debug_str	00000000 
000000a4 l       .debug_str	00000000 
000000af l       .debug_str	00000000 
000000b6 l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
000000d2 l       .debug_str	00000000 
000000d6 l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000de l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f5 l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
0000010c l       .debug_str	00000000 
00000110 l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
00000127 l       .debug_str	00000000 
0000012e l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
0000016b l       .debug_str	00000000 
00000178 l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
00000188 l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
000001bf l       .debug_str	00000000 
000001c1 l       .debug_str	00000000 
000001f7 l       .debug_str	00000000 
00000240 l       .debug_str	00000000 
000002ae l       .debug_str	00000000 
00000000 l     O .rodata.cst16	00000010 .Lanon.516372a82cc47de9d4400d21bc858a2d.0
00000000 l     O .rodata..Lanon.516372a82cc47de9d4400d21bc858a2d.2	00000010 .Lanon.516372a82cc47de9d4400d21bc858a2d.2
00000000 l    d  .text._ZN22piet_embedded_graphics7display15draw_to_display17hba7486d1f1322e73E	00000000 .text._ZN22piet_embedded_graphics7display15draw_to_display17hba7486d1f1322e73E
00000000 l    d  .rodata..Lanon.516372a82cc47de9d4400d21bc858a2d.1	00000000 .rodata..Lanon.516372a82cc47de9d4400d21bc858a2d.1
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 piet_embedded_graphics::batch::draw_blocks
00000000 g     F .text._ZN22piet_embedded_graphics7display15draw_to_display17hba7486d1f1322e73E	00000042 piet_embedded_graphics::display::draw_to_display
00000000         *UND*	00000000 piet_embedded_graphics::display::DISPLAY
00000000         *UND*	00000000 core::result::Result<T,E>::expect



Disassembly of section .text._ZN22piet_embedded_graphics7display15draw_to_display17hba7486d1f1322e73E:

00000000 <piet_embedded_graphics::display::draw_to_display>:
_ZN22piet_embedded_graphics7display15draw_to_display17hba7486d1f1322e73E():
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/display.rs:126
    }
    Ok(())
}

/// Draw the item to the display
pub fn draw_to_display<T>(item: T)
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b088      	sub	sp, #32
   4:	a902      	add	r1, sp, #8
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/display.rs:134
    unsafe { DISPLAY.draw(item) };        //  Draw text or graphics the usual slow way

    #[cfg(feature = "noblock_spi")]       //  If batching is enabled...
    super::batch::draw_blocks(            //  Draw text or graphics the new faster way, as pixel blocks
        unsafe { &mut DISPLAY },
        item
   6:	460a      	mov	r2, r1
   8:	e890 5078 	ldmia.w	r0, {r3, r4, r5, r6, ip, lr}
   c:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/display.rs:132
    super::batch::draw_blocks(            //  Draw text or graphics the new faster way, as pixel blocks
  10:	f240 0000 	movw	r0, #0
  14:	f2c0 0000 	movt	r0, #0
  18:	f7ff fffe 	bl	0 <piet_embedded_graphics::batch::draw_blocks>
  1c:	9001      	str	r0, [sp, #4]
  1e:	e7ff      	b.n	20 <piet_embedded_graphics::display::draw_to_display+0x20>
  20:	9801      	ldr	r0, [sp, #4]
  22:	f000 0001 	and.w	r0, r0, #1
  26:	f240 0100 	movw	r1, #0
  2a:	f2c0 0100 	movt	r1, #0
  2e:	f240 0300 	movw	r3, #0
  32:	f2c0 0300 	movt	r3, #0
  36:	2210      	movs	r2, #16
  38:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  3c:	e7ff      	b.n	3e <piet_embedded_graphics::display::draw_to_display+0x3e>
/home/pi/pinetime-rust-mynewt/rust/piet-embedded/piet-embedded-graphics/src/display.rs:136
    ).expect("draw blocks fail");
}
  3e:	b008      	add	sp, #32
  40:	bd70      	pop	{r4, r5, r6, pc}

app-64de0327356ea83b.2mh4kgt9xr3mfq1p.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 2mh4kgt9xr3mfq1p
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
0000007a l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000088 l       .debug_str	00000000 
0000008c l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
0000009f l       .debug_str	00000000 
000000aa l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000ca l       .debug_str	00000000 
000000d5 l       .debug_str	00000000 
000000e0 l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000f5 l       .debug_str	00000000 
00000100 l       .debug_str	00000000 
0000010d l       .debug_str	00000000 
00000119 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000015c l       .debug_str	00000000 
00000160 l       .debug_str	00000000 
00000163 l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
00000184 l       .debug_str	00000000 
00000187 l       .debug_str	00000000 
0000018b l       .debug_str	00000000 
00000192 l       .debug_str	00000000 
00000195 l       .debug_str	00000000 
0000019f l       .debug_str	00000000 
000001aa l       .debug_str	00000000 
000001b3 l       .debug_str	00000000 
000001be l       .debug_str	00000000 
000001ca l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001d7 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001e6 l       .debug_str	00000000 
000001ee l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
000001fe l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
0000020f l       .debug_str	00000000 
00000216 l       .debug_str	00000000 
0000021d l       .debug_str	00000000 
00000222 l       .debug_str	00000000 
00000239 l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
00000268 l       .debug_str	00000000 
0000026d l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000002a8 l       .debug_str	00000000 
000002ae l       .debug_str	00000000 
000002bd l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e5 l       .debug_str	00000000 
0000030e l       .debug_str	00000000 
0000036c l       .debug_str	00000000 
000003d2 l       .debug_str	00000000 
000003d9 l       .debug_str	00000000 
000003e1 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
00000408 l       .debug_str	00000000 
00000418 l       .debug_str	00000000 
00000426 l       .debug_str	00000000 
00000431 l       .debug_str	00000000 
0000043e l       .debug_str	00000000 
0000044d l       .debug_str	00000000 
00000457 l       .debug_str	00000000 
0000046d l       .debug_str	00000000 
00000477 l       .debug_str	00000000 
00000480 l       .debug_str	00000000 
00000489 l       .debug_str	00000000 
000004af l       .debug_str	00000000 
000004c5 l       .debug_str	00000000 
000004d0 l       .debug_str	00000000 
000004e6 l       .debug_str	00000000 
000004ee l       .debug_str	00000000 
0000050f l       .debug_str	00000000 
00000518 l       .debug_str	00000000 
00000521 l       .debug_str	00000000 
0000052c l       .debug_str	00000000 
00000536 l       .debug_str	00000000 
0000053c l       .debug_str	00000000 
00000574 l       .debug_str	00000000 
000005b4 l       .debug_str	00000000 
000005bb l       .debug_str	00000000 
000005c3 l       .debug_str	00000000 
000005da l       .debug_str	00000000 
000005e3 l       .debug_str	00000000 
00000605 l       .debug_str	00000000 
0000060f l       .debug_str	00000000 
00000636 l       .debug_str	00000000 
0000064e l       .debug_str	00000000 
00000658 l       .debug_str	00000000 
0000067b l       .debug_str	00000000 
0000067d l       .debug_str	00000000 
00000681 l       .debug_str	00000000 
000006c9 l       .debug_str	00000000 
00000709 l       .debug_str	00000000 
00000750 l       .debug_str	00000000 
00000754 l       .debug_str	00000000 
0000075d l       .debug_str	00000000 
00000764 l       .debug_str	00000000 
0000076a l       .debug_str	00000000 
0000076f l       .debug_str	00000000 
00000771 l       .debug_str	00000000 
00000773 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3b2c120e17487affbfca698ca03a14fb.0	00000010 .Lanon.3b2c120e17487affbfca698ca03a14fb.0
00000000 l    d  .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h2db8410297a946f3E	00000000 .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h2db8410297a946f3E
00000000 l    d  .rodata..Lanon.3b2c120e17487affbfca698ca03a14fb.0	00000000 .rodata..Lanon.3b2c120e17487affbfca698ca03a14fb.0
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 core::ptr::real_drop_in_place
00000000         *UND*	00000000 core::result::unwrap_failed
00000000 g     F .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h2db8410297a946f3E	00000052 core::result::Result<T,E>::expect
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::fmt::Debug>::fmt



Disassembly of section .text._ZN4core6result19Result$LT$T$C$E$GT$6expect17h2db8410297a946f3E:

00000000 <core::result::Result<T,E>::expect>:
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2db8410297a946f3E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/result.rs:987
   0:	b088      	sub	sp, #32
   2:	9104      	str	r1, [sp, #16]
   4:	9205      	str	r2, [sp, #20]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/result.rs:989
   6:	6801      	ldr	r1, [r0, #0]
   8:	2900      	cmp	r1, #0
   a:	9303      	str	r3, [sp, #12]
   c:	9002      	str	r0, [sp, #8]
   e:	d002      	beq.n	16 <core::result::Result<T,E>::expect+0x16>
  10:	e7ff      	b.n	12 <core::result::Result<T,E>::expect+0x12>
  12:	e00a      	b.n	2a <core::result::Result<T,E>::expect+0x2a>
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/result.rs:988
  14:	defe      	udf	#254	; 0xfe
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/result.rs:989
  16:	9802      	ldr	r0, [sp, #8]
  18:	6841      	ldr	r1, [r0, #4]
  1a:	9106      	str	r1, [sp, #24]
  1c:	9806      	ldr	r0, [sp, #24]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/result.rs:992
  1e:	9902      	ldr	r1, [sp, #8]
  20:	680a      	ldr	r2, [r1, #0]
  22:	2a00      	cmp	r2, #0
  24:	9001      	str	r0, [sp, #4]
  26:	d010      	beq.n	4a <core::result::Result<T,E>::expect+0x4a>
  28:	e012      	b.n	50 <core::result::Result<T,E>::expect+0x50>
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/result.rs:990
  2a:	9802      	ldr	r0, [sp, #8]
  2c:	6841      	ldr	r1, [r0, #4]
  2e:	9107      	str	r1, [sp, #28]
  30:	9804      	ldr	r0, [sp, #16]
  32:	9905      	ldr	r1, [sp, #20]
  34:	466a      	mov	r2, sp
  36:	9b03      	ldr	r3, [sp, #12]
  38:	6013      	str	r3, [r2, #0]
  3a:	f240 0300 	movw	r3, #0
  3e:	f2c0 0300 	movt	r3, #0
  42:	aa07      	add	r2, sp, #28
  44:	f7ff fffe 	bl	0 <core::result::unwrap_failed>
  48:	defe      	udf	#254	; 0xfe
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/result.rs:992
  4a:	9801      	ldr	r0, [sp, #4]
  4c:	b008      	add	sp, #32
  4e:	4770      	bx	lr
  50:	e7fb      	b.n	4a <core::result::Result<T,E>::expect+0x4a>

app-64de0327356ea83b.3dzu8dxdhnv32vdt.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3dzu8dxdhnv32vdt
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
0000007f l       .debug_str	00000000 
00000083 l       .debug_str	00000000 
00000088 l       .debug_str	00000000 
0000008c l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000aa l       .debug_str	00000000 
000000b5 l       .debug_str	00000000 
000000bc l       .debug_str	00000000 
000000c0 l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
00000101 l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000108 l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
00000160 l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
0000016d l       .debug_str	00000000 
00000172 l       .debug_str	00000000 
00000178 l       .debug_str	00000000 
00000186 l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
0000019d l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001c3 l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001fa l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
00000207 l       .debug_str	00000000 
0000020e l       .debug_str	00000000 
00000217 l       .debug_str	00000000 
0000021c l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
00000228 l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
000002fc l       .debug_str	00000000 
00000356 l       .debug_str	00000000 
00000392 l       .debug_str	00000000 
000003a0 l       .debug_str	00000000 
000003a2 l       .debug_str	00000000 
000003a4 l       .debug_str	00000000 
000003a9 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3437268fd6751338a3b0637e8d6334a5.0	0000002b .Lanon.3437268fd6751338a3b0637e8d6334a5.0
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$3map17h81cf31c3ab5a8377E	00000000 .text._ZN4core6option15Option$LT$T$GT$3map17h81cf31c3ab5a8377E
00000000 l    d  .text._ZN4core6option15Option$LT$T$GT$6unwrap17h9fb4aa7aa1d4ea79E	00000000 .text._ZN4core6option15Option$LT$T$GT$6unwrap17h9fb4aa7aa1d4ea79E
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next::{{closure}}
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$3map17h81cf31c3ab5a8377E	000000ba core::option::Option<T>::map
00000000 g     F .text._ZN4core6option15Option$LT$T$GT$6unwrap17h9fb4aa7aa1d4ea79E	00000044 core::option::Option<T>::unwrap
00000000         *UND*	00000000 core::panicking::panic



Disassembly of section .text._ZN4core6option15Option$LT$T$GT$3map17h81cf31c3ab5a8377E:

00000000 <core::option::Option<T>::map>:
_ZN4core6option15Option$LT$T$GT$3map17h81cf31c3ab5a8377E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:447
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	2200      	movs	r2, #0
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:449
   6:	f88d 203e 	strb.w	r2, [sp, #62]	; 0x3e
   a:	f88d 203f 	strb.w	r2, [sp, #63]	; 0x3f
   e:	2201      	movs	r2, #1
  10:	f88d 203f 	strb.w	r2, [sp, #63]	; 0x3f
  14:	f88d 203e 	strb.w	r2, [sp, #62]	; 0x3e
  18:	680a      	ldr	r2, [r1, #0]
  1a:	2a00      	cmp	r2, #0
  1c:	9101      	str	r1, [sp, #4]
  1e:	9000      	str	r0, [sp, #0]
  20:	d001      	beq.n	26 <core::option::Option<T>::map+0x26>
  22:	e7ff      	b.n	24 <core::option::Option<T>::map+0x24>
  24:	e004      	b.n	30 <core::option::Option<T>::map+0x30>
  26:	2000      	movs	r0, #0
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:450
  28:	9900      	ldr	r1, [sp, #0]
  2a:	6008      	str	r0, [r1, #0]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:448
  2c:	e032      	b.n	94 <core::option::Option<T>::map+0x94>
  2e:	defe      	udf	#254	; 0xfe
  30:	2000      	movs	r0, #0
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:449
  32:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
  36:	9901      	ldr	r1, [sp, #4]
  38:	684a      	ldr	r2, [r1, #4]
  3a:	688b      	ldr	r3, [r1, #8]
  3c:	f8d1 c00c 	ldr.w	ip, [r1, #12]
  40:	f8cd c014 	str.w	ip, [sp, #20]
  44:	9304      	str	r3, [sp, #16]
  46:	9203      	str	r2, [sp, #12]
  48:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
  4c:	9803      	ldr	r0, [sp, #12]
  4e:	9a04      	ldr	r2, [sp, #16]
  50:	9b05      	ldr	r3, [sp, #20]
  52:	930e      	str	r3, [sp, #56]	; 0x38
  54:	920d      	str	r2, [sp, #52]	; 0x34
  56:	900c      	str	r0, [sp, #48]	; 0x30
  58:	980c      	ldr	r0, [sp, #48]	; 0x30
  5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  5e:	930b      	str	r3, [sp, #44]	; 0x2c
  60:	920a      	str	r2, [sp, #40]	; 0x28
  62:	9009      	str	r0, [sp, #36]	; 0x24
  64:	a806      	add	r0, sp, #24
  66:	a909      	add	r1, sp, #36	; 0x24
  68:	f7ff fffe 	bl	0 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next::{{closure}}>
  6c:	e7ff      	b.n	6e <core::option::Option<T>::map+0x6e>
  6e:	9806      	ldr	r0, [sp, #24]
  70:	9907      	ldr	r1, [sp, #28]
  72:	9a08      	ldr	r2, [sp, #32]
  74:	9b00      	ldr	r3, [sp, #0]
  76:	60da      	str	r2, [r3, #12]
  78:	6099      	str	r1, [r3, #8]
  7a:	6058      	str	r0, [r3, #4]
  7c:	2001      	movs	r0, #1
  7e:	6018      	str	r0, [r3, #0]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:452
  80:	e008      	b.n	94 <core::option::Option<T>::map+0x94>
  82:	9801      	ldr	r0, [sp, #4]
  84:	6801      	ldr	r1, [r0, #0]
  86:	2901      	cmp	r1, #1
  88:	d00c      	beq.n	a4 <core::option::Option<T>::map+0xa4>
  8a:	e015      	b.n	b8 <core::option::Option<T>::map+0xb8>
  8c:	2000      	movs	r0, #0
  8e:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
  92:	e7f6      	b.n	82 <core::option::Option<T>::map+0x82>
  94:	f89d 003e 	ldrb.w	r0, [sp, #62]	; 0x3e
  98:	07c0      	lsls	r0, r0, #31
  9a:	2800      	cmp	r0, #0
  9c:	d1f6      	bne.n	8c <core::option::Option<T>::map+0x8c>
  9e:	e7f0      	b.n	82 <core::option::Option<T>::map+0x82>
  a0:	b010      	add	sp, #64	; 0x40
  a2:	bd80      	pop	{r7, pc}
  a4:	f89d 003f 	ldrb.w	r0, [sp, #63]	; 0x3f
  a8:	07c0      	lsls	r0, r0, #31
  aa:	2800      	cmp	r0, #0
  ac:	d0f8      	beq.n	a0 <core::option::Option<T>::map+0xa0>
  ae:	e7ff      	b.n	b0 <core::option::Option<T>::map+0xb0>
  b0:	2000      	movs	r0, #0
  b2:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
  b6:	e7f3      	b.n	a0 <core::option::Option<T>::map+0xa0>
  b8:	e7f2      	b.n	a0 <core::option::Option<T>::map+0xa0>

Disassembly of section .text._ZN4core6option15Option$LT$T$GT$6unwrap17h9fb4aa7aa1d4ea79E:

00000000 <core::option::Option<T>::unwrap>:
_ZN4core6option15Option$LT$T$GT$6unwrap17h9fb4aa7aa1d4ea79E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:377
   0:	b084      	sub	sp, #16
   2:	9002      	str	r0, [sp, #8]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:379
   4:	9802      	ldr	r0, [sp, #8]
   6:	2800      	cmp	r0, #0
   8:	4602      	mov	r2, r0
   a:	bf18      	it	ne
   c:	2201      	movne	r2, #1
   e:	2800      	cmp	r0, #0
  10:	9101      	str	r1, [sp, #4]
  12:	d001      	beq.n	18 <core::option::Option<T>::unwrap+0x18>
  14:	e7ff      	b.n	16 <core::option::Option<T>::unwrap+0x16>
  16:	e009      	b.n	2c <core::option::Option<T>::unwrap+0x2c>
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/macros/mod.rs:10
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	212b      	movs	r1, #43	; 0x2b
  22:	9a01      	ldr	r2, [sp, #4]
  24:	f7ff fffe 	bl	0 <core::panicking::panic>
  28:	defe      	udf	#254	; 0xfe
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:378
  2a:	defe      	udf	#254	; 0xfe
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:379
  2c:	9802      	ldr	r0, [sp, #8]
  2e:	9003      	str	r0, [sp, #12]
  30:	9803      	ldr	r0, [sp, #12]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/option.rs:382
  32:	9902      	ldr	r1, [sp, #8]
  34:	2900      	cmp	r1, #0
  36:	9000      	str	r0, [sp, #0]
  38:	d003      	beq.n	42 <core::option::Option<T>::unwrap+0x42>
  3a:	e7ff      	b.n	3c <core::option::Option<T>::unwrap+0x3c>
  3c:	9800      	ldr	r0, [sp, #0]
  3e:	b004      	add	sp, #16
  40:	4770      	bx	lr
  42:	e7fb      	b.n	3c <core::option::Option<T>::unwrap+0x3c>

app-64de0327356ea83b.3erkq1nfprj38ic8.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3erkq1nfprj38ic8
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
000000df l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000e9 l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
0000011a l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
00000000 l    d  .text._ZN58_$LT$core..any..TypeId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h194d27a4fb410c95E	00000000 .text._ZN58_$LT$core..any..TypeId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h194d27a4fb410c95E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN58_$LT$core..any..TypeId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h194d27a4fb410c95E	0000002a .hidden <core::any::TypeId as core::cmp::PartialEq>::eq



Disassembly of section .text._ZN58_$LT$core..any..TypeId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h194d27a4fb410c95E:

00000000 <<core::any::TypeId as core::cmp::PartialEq>::eq>:
_ZN58_$LT$core..any..TypeId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h194d27a4fb410c95E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:411
   0:	b084      	sub	sp, #16
   2:	9000      	str	r0, [sp, #0]
   4:	9101      	str	r1, [sp, #4]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:414
   6:	9801      	ldr	r0, [sp, #4]
   8:	9002      	str	r0, [sp, #8]
   a:	9800      	ldr	r0, [sp, #0]
   c:	9003      	str	r0, [sp, #12]
   e:	9803      	ldr	r0, [sp, #12]
  10:	6801      	ldr	r1, [r0, #0]
  12:	6840      	ldr	r0, [r0, #4]
  14:	9a02      	ldr	r2, [sp, #8]
  16:	6813      	ldr	r3, [r2, #0]
  18:	6852      	ldr	r2, [r2, #4]
  1a:	4050      	eors	r0, r2
  1c:	4059      	eors	r1, r3
  1e:	4308      	orrs	r0, r1
  20:	fab0 f080 	clz	r0, r0
  24:	0940      	lsrs	r0, r0, #5
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:411
  26:	b004      	add	sp, #16
  28:	4770      	bx	lr

app-64de0327356ea83b.3wj6vjxv4swb8lkk.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3wj6vjxv4swb8lkk
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
0000007f l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
0000008a l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
00000097 l       .debug_str	00000000 
0000009f l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b3 l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
000000be l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000d8 l       .debug_str	00000000 
000000df l       .debug_str	00000000 
000000e5 l       .debug_str	00000000 
000000ea l       .debug_str	00000000 
000000f6 l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000105 l       .debug_str	00000000 
00000109 l       .debug_str	00000000 
0000010e l       .debug_str	00000000 
00000117 l       .debug_str	00000000 
0000011c l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
00000123 l       .debug_str	00000000 
0000012c l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
00000138 l       .debug_str	00000000 
0000013d l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
00000153 l       .debug_str	00000000 
00000156 l       .debug_str	00000000 
0000015c l       .debug_str	00000000 
00000166 l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
00000174 l       .debug_str	00000000 
0000017a l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
0000018e l       .debug_str	00000000 
000001b1 l       .debug_str	00000000 
000001d0 l       .debug_str	00000000 
000001d2 l       .debug_str	00000000 
000001d7 l       .debug_str	00000000 
000001fe l       .debug_str	00000000 
00000203 l       .debug_str	00000000 
00000209 l       .debug_str	00000000 
0000020f l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
00000221 l       .debug_str	00000000 
00000228 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000235 l       .debug_str	00000000 
0000023d l       .debug_str	00000000 
00000245 l       .debug_str	00000000 
0000024c l       .debug_str	00000000 
00000260 l       .debug_str	00000000 
0000026c l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
00000291 l       .debug_str	00000000 
00000296 l       .debug_str	00000000 
000002a7 l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002bf l       .debug_str	00000000 
000002c3 l       .debug_str	00000000 
000002ce l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
000002db l       .debug_str	00000000 
000002df l       .debug_str	00000000 
000002e8 l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
0000030b l       .debug_str	00000000 
00000313 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
0000034e l       .debug_str	00000000 
0000036a l       .debug_str	00000000 
00000374 l       .debug_str	00000000 
0000038e l       .debug_str	00000000 
000003ec l       .debug_str	00000000 
000003f7 l       .debug_str	00000000 
00000414 l       .debug_str	00000000 
0000042d l       .debug_str	00000000 
00000437 l       .debug_str	00000000 
00000469 l       .debug_str	00000000 
00000000 l    d  .text._ZN4core3fmt9Arguments6new_v117hd27595ab628a7ffbE	00000000 .text._ZN4core3fmt9Arguments6new_v117hd27595ab628a7ffbE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3fmt9Arguments6new_v117hd27595ab628a7ffbE	00000038 .hidden core::fmt::Arguments::new_v1



Disassembly of section .text._ZN4core3fmt9Arguments6new_v117hd27595ab628a7ffbE:

00000000 <core::fmt::Arguments::new_v1>:
_ZN4core3fmt9Arguments6new_v117hd27595ab628a7ffbE():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/fmt/mod.rs:313
   0:	b086      	sub	sp, #24
   2:	f8dd c018 	ldr.w	ip, [sp, #24]
   6:	9100      	str	r1, [sp, #0]
   8:	9201      	str	r2, [sp, #4]
   a:	9302      	str	r3, [sp, #8]
   c:	f8cd c00c 	str.w	ip, [sp, #12]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/fmt/mod.rs:314
  10:	9900      	ldr	r1, [sp, #0]
  12:	9a01      	ldr	r2, [sp, #4]
  14:	2300      	movs	r3, #0
  16:	9305      	str	r3, [sp, #20]
  18:	9304      	str	r3, [sp, #16]
  1a:	9304      	str	r3, [sp, #16]
  1c:	9b02      	ldr	r3, [sp, #8]
  1e:	f8dd c00c 	ldr.w	ip, [sp, #12]
  22:	6001      	str	r1, [r0, #0]
  24:	6042      	str	r2, [r0, #4]
  26:	9904      	ldr	r1, [sp, #16]
  28:	9a05      	ldr	r2, [sp, #20]
  2a:	6081      	str	r1, [r0, #8]
  2c:	60c2      	str	r2, [r0, #12]
  2e:	6103      	str	r3, [r0, #16]
  30:	f8c0 c014 	str.w	ip, [r0, #20]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/fmt/mod.rs:315
  34:	b006      	add	sp, #24
  36:	4770      	bx	lr

app-64de0327356ea83b.3xbp7ejhxu6hk8zc.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 3xbp7ejhxu6hk8zc
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
0000007a l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
0000008d l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000a3 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000d9 l       .debug_str	00000000 
000000e3 l       .debug_str	00000000 
000000ee l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000155 l       .debug_str	00000000 
00000159 l       .debug_str	00000000 
00000170 l       .debug_str	00000000 
00000176 l       .debug_str	00000000 
0000017d l       .debug_str	00000000 
0000018f l       .debug_str	00000000 
0000019a l       .debug_str	00000000 
000001a1 l       .debug_str	00000000 
000001a8 l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001bd l       .debug_str	00000000 
000001c1 l       .debug_str	00000000 
000001c5 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d2 l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001dc l       .debug_str	00000000 
000001e7 l       .debug_str	00000000 
000001ee l       .debug_str	00000000 
000001f2 l       .debug_str	00000000 
000001f7 l       .debug_str	00000000 
00000202 l       .debug_str	00000000 
00000209 l       .debug_str	00000000 
00000210 l       .debug_str	00000000 
00000212 l       .debug_str	00000000 
00000217 l       .debug_str	00000000 
0000024d l       .debug_str	00000000 
0000025a l       .debug_str	00000000 
00000267 l       .debug_str	00000000 
0000026a l       .debug_str	00000000 
0000026c l       .debug_str	00000000 
000002a1 l       .debug_str	00000000 
000002a3 l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002a7 l       .debug_str	00000000 
000002e5 l       .debug_str	00000000 
000002ec l       .debug_str	00000000 
000002f4 l       .debug_str	00000000 
000002fb l       .debug_str	00000000 
00000304 l       .debug_str	00000000 
00000308 l       .debug_str	00000000 
0000030a l       .debug_str	00000000 
00000311 l       .debug_str	00000000 
00000315 l       .debug_str	00000000 
00000322 l       .debug_str	00000000 
00000329 l       .debug_str	00000000 
0000032c l       .debug_str	00000000 
00000332 l       .debug_str	00000000 
00000340 l       .debug_str	00000000 
0000034e l       .debug_str	00000000 
00000353 l       .debug_str	00000000 
0000035b l       .debug_str	00000000 
00000363 l       .debug_str	00000000 
00000365 l       .debug_str	00000000 
00000382 l       .debug_str	00000000 
000003c8 l       .debug_str	00000000 
000003d0 l       .debug_str	00000000 
000003d7 l       .debug_str	00000000 
000003e8 l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
000004f2 l       .debug_str	00000000 
000005b5 l       .debug_str	00000000 
000006a2 l       .debug_str	00000000 
000006aa l       .debug_str	00000000 
000006af l       .debug_str	00000000 
000006b5 l       .debug_str	00000000 
000006b9 l       .debug_str	00000000 
000006bc l       .debug_str	00000000 
000006e5 l       .debug_str	00000000 
0000071b l       .debug_str	00000000 
0000071d l       .debug_str	00000000 
0000074a l       .debug_str	00000000 
0000079a l       .debug_str	00000000 
000007f7 l       .debug_str	00000000 
0000084b l       .debug_str	00000000 
0000084e l       .debug_str	00000000 
000008c5 l       .debug_str	00000000 
00000949 l       .debug_str	00000000 
000009c4 l       .debug_str	00000000 
00000a62 l       .debug_str	00000000 
00000b0d l       .debug_str	00000000 
00000baf l       .debug_str	00000000 
00000c74 l       .debug_str	00000000 
00000d46 l       .debug_str	00000000 
00000e0f l       .debug_str	00000000 
00000efb l       .debug_str	00000000 
00000ff4 l       .debug_str	00000000 
000010e4 l       .debug_str	00000000 
000011f6 l       .debug_str	00000000 
00001325 l       .debug_str	00000000 
00001453 l       .debug_str	00000000 
00001457 l       .debug_str	00000000 
0000145d l       .debug_str	00000000 
0000145f l       .debug_str	00000000 
00001585 l       .debug_str	00000000 
00001587 l       .debug_str	00000000 
00001690 l       .debug_str	00000000 
0000169c l       .debug_str	00000000 
000016a1 l       .debug_str	00000000 
00001713 l       .debug_str	00000000 
00001748 l       .debug_str	00000000 
000017ed l       .debug_str	00000000 
00001822 l       .debug_str	00000000 
0000194e l       .debug_str	00000000 
00001983 l       .debug_str	00000000 
000019b3 l       .debug_str	00000000 
000019b8 l       .debug_str	00000000 
000019be l       .debug_str	00000000 
000019c7 l       .debug_str	00000000 
00001ade l       .debug_str	00000000 
00001bf1 l       .debug_str	00000000 
00001d11 l       .debug_str	00000000 
00001e28 l       .debug_str	00000000 
00001f61 l       .debug_str	00000000 
000020b7 l       .debug_str	00000000 
0000220c l       .debug_str	00000000 
00002359 l       .debug_str	00000000 
00002489 l       .debug_str	00000000 
00002493 l       .debug_str	00000000 
00002495 l       .debug_str	00000000 
00002535 l       .debug_str	00000000 
0000256a l       .debug_str	00000000 
0000263d l       .debug_str	00000000 
00002648 l       .debug_str	00000000 
0000267a l       .debug_str	00000000 
000026af l       .debug_str	00000000 
00002703 l       .debug_str	00000000 
00002738 l       .debug_str	00000000 
00002776 l       .debug_str	00000000 
0000277f l       .debug_str	00000000 
000027b4 l       .debug_str	00000000 
000027f0 l       .debug_str	00000000 
00002820 l       .debug_str	00000000 
00002855 l       .debug_str	00000000 
000028a7 l       .debug_str	00000000 
000028dc l       .debug_str	00000000 
00002a2f l       .debug_str	00000000 
00002ac5 l       .debug_str	00000000 
00002be2 l       .debug_str	00000000 
00002c03 l       .debug_str	00000000 
00002cc7 l       .debug_str	00000000 
00002d0c l       .debug_str	00000000 
00002d3b l       .debug_str	00000000 
00002d68 l       .debug_str	00000000 
00002dab l       .debug_str	00000000 
00000000 l     F .text._ZN4core3ptr18real_drop_in_place17h0c745db88d236b1eE	00000014 core::ptr::real_drop_in_place
00000000 l     F .text._ZN4core3ptr18real_drop_in_place17hb653ce9f616c8dc3E	00000012 core::ptr::real_drop_in_place
00000000 l     F .text._ZN4core3ptr18real_drop_in_place17hbf43e02f0aa978f9E	00000012 core::ptr::real_drop_in_place
00000000 l     F .text._ZN4core3ptr18real_drop_in_place17hd48eee82a4619797E	00000012 core::ptr::real_drop_in_place
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h0c745db88d236b1eE	00000000 .text._ZN4core3ptr18real_drop_in_place17h0c745db88d236b1eE
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h20399ebe6fe285caE	00000000 .text._ZN4core3ptr18real_drop_in_place17h20399ebe6fe285caE
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h72e5bb9c5df3b316E	00000000 .text._ZN4core3ptr18real_drop_in_place17h72e5bb9c5df3b316E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h7f2157468d5cda27E	00000000 .text._ZN4core3ptr18real_drop_in_place17h7f2157468d5cda27E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17h9b3b608fd289cbe5E	00000000 .text._ZN4core3ptr18real_drop_in_place17h9b3b608fd289cbe5E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17hb653ce9f616c8dc3E	00000000 .text._ZN4core3ptr18real_drop_in_place17hb653ce9f616c8dc3E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17hbf43e02f0aa978f9E	00000000 .text._ZN4core3ptr18real_drop_in_place17hbf43e02f0aa978f9E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17hcf96d4e6256b2ce9E	00000000 .text._ZN4core3ptr18real_drop_in_place17hcf96d4e6256b2ce9E
00000000 l    d  .text._ZN4core3ptr18real_drop_in_place17hd48eee82a4619797E	00000000 .text._ZN4core3ptr18real_drop_in_place17hd48eee82a4619797E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17h20399ebe6fe285caE	00000012 .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17h72e5bb9c5df3b316E	00000008 .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17h7f2157468d5cda27E	0000001c .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17h9b3b608fd289cbe5E	0000001e .hidden core::ptr::real_drop_in_place
00000000 g     F .text._ZN4core3ptr18real_drop_in_place17hcf96d4e6256b2ce9E	0000001e .hidden core::ptr::real_drop_in_place
00000000         *UND*	00000000 <heapless::vec::Vec<T,N> as core::ops::drop::Drop>::drop
00000000         *UND*	00000000 <heapless::vec::Vec<T,N> as core::ops::drop::Drop>::drop



Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h0c745db88d236b1eE:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h0c745db88d236b1eE():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/ptr/mod.rs:184
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	3020      	adds	r0, #32
   a:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
   e:	e7ff      	b.n	10 <core::ptr::real_drop_in_place+0x10>
  10:	b002      	add	sp, #8
  12:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h20399ebe6fe285caE:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h20399ebe6fe285caE():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/ptr/mod.rs:184
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	f7ff fffe 	bl	0 <<heapless::vec::Vec<T,N> as core::ops::drop::Drop>::drop>
   c:	e7ff      	b.n	e <core::ptr::real_drop_in_place+0xe>
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h72e5bb9c5df3b316E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h72e5bb9c5df3b316E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/ptr/mod.rs:184
   0:	b081      	sub	sp, #4
   2:	9000      	str	r0, [sp, #0]
   4:	b001      	add	sp, #4
   6:	4770      	bx	lr

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h7f2157468d5cda27E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h7f2157468d5cda27E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/ptr/mod.rs:184
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
   c:	e001      	b.n	12 <core::ptr::real_drop_in_place+0x12>
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}
  12:	9801      	ldr	r0, [sp, #4]
  14:	3090      	adds	r0, #144	; 0x90
  16:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
  1a:	e7f8      	b.n	e <core::ptr::real_drop_in_place+0xe>

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17h9b3b608fd289cbe5E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17h9b3b608fd289cbe5E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/ptr/mod.rs:184
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	6800      	ldr	r0, [r0, #0]
   a:	2800      	cmp	r0, #0
   c:	d102      	bne.n	14 <core::ptr::real_drop_in_place+0x14>
   e:	e7ff      	b.n	10 <core::ptr::real_drop_in_place+0x10>
  10:	b002      	add	sp, #8
  12:	bd80      	pop	{r7, pc}
  14:	9801      	ldr	r0, [sp, #4]
  16:	3004      	adds	r0, #4
  18:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
  1c:	e7f8      	b.n	10 <core::ptr::real_drop_in_place+0x10>

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17hb653ce9f616c8dc3E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17hb653ce9f616c8dc3E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/ptr/mod.rs:184
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
   c:	e7ff      	b.n	e <core::ptr::real_drop_in_place+0xe>
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17hbf43e02f0aa978f9E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17hbf43e02f0aa978f9E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/ptr/mod.rs:184
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
   c:	e7ff      	b.n	e <core::ptr::real_drop_in_place+0xe>
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17hcf96d4e6256b2ce9E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17hcf96d4e6256b2ce9E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/ptr/mod.rs:184
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	6800      	ldr	r0, [r0, #0]
   a:	2800      	cmp	r0, #0
   c:	d102      	bne.n	14 <core::ptr::real_drop_in_place+0x14>
   e:	e7ff      	b.n	10 <core::ptr::real_drop_in_place+0x10>
  10:	b002      	add	sp, #8
  12:	bd80      	pop	{r7, pc}
  14:	9801      	ldr	r0, [sp, #4]
  16:	3004      	adds	r0, #4
  18:	f7ff fffe 	bl	0 <core::ptr::real_drop_in_place>
  1c:	e7f8      	b.n	10 <core::ptr::real_drop_in_place+0x10>

Disassembly of section .text._ZN4core3ptr18real_drop_in_place17hd48eee82a4619797E:

00000000 <core::ptr::real_drop_in_place>:
_ZN4core3ptr18real_drop_in_place17hd48eee82a4619797E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/ptr/mod.rs:184
   0:	b580      	push	{r7, lr}
   2:	b082      	sub	sp, #8
   4:	9001      	str	r0, [sp, #4]
   6:	9801      	ldr	r0, [sp, #4]
   8:	f7ff fffe 	bl	0 <<heapless::vec::Vec<T,N> as core::ops::drop::Drop>::drop>
   c:	e7ff      	b.n	e <core::ptr::real_drop_in_place+0xe>
   e:	b002      	add	sp, #8
  10:	bd80      	pop	{r7, pc}

app-64de0327356ea83b.4arywuiw9pa2pf61.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 4arywuiw9pa2pf61
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
00000097 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a5 l       .debug_str	00000000 
000000ac l       .debug_str	00000000 
000000b2 l       .debug_str	00000000 
000000c1 l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000c9 l       .debug_str	00000000 
000000cd l       .debug_str	00000000 
000000d3 l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000de l       .debug_str	00000000 
000000e4 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
000000fb l       .debug_str	00000000 
000000ff l       .debug_str	00000000 
00000104 l       .debug_str	00000000 
0000010f l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
00000124 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000167 l       .debug_str	00000000 
00000174 l       .debug_str	00000000 
00000177 l       .debug_str	00000000 
00000179 l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001b0 l       .debug_str	00000000 
000001e6 l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
000002b8 l       .debug_str	00000000 
000002ba l       .debug_str	00000000 
000002bc l       .debug_str	00000000 
000002fa l       .debug_str	00000000 
00000391 l       .debug_str	00000000 
000003c5 l       .debug_str	00000000 
00000462 l       .debug_str	00000000 
000004fb l       .debug_str	00000000 
0000052f l       .debug_str	00000000 
00000538 l       .debug_str	00000000 
00000546 l       .debug_str	00000000 
0000055e l       .debug_str	00000000 
0000056c l       .debug_str	00000000 
000005a1 l       .debug_str	00000000 
000005fb l       .debug_str	00000000 
000006b2 l       .debug_str	00000000 
000006ed l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
00000773 l       .debug_str	00000000 
00000778 l       .debug_str	00000000 
0000077e l       .debug_str	00000000 
000007dc l       .debug_str	00000000 
00000846 l       .debug_str	00000000 
00000849 l       .debug_str	00000000 
0000084c l       .debug_str	00000000 
00000859 l       .debug_str	00000000 
00000863 l       .debug_str	00000000 
00000873 l       .debug_str	00000000 
00000878 l       .debug_str	00000000 
0000087c l       .debug_str	00000000 
000008b6 l       .debug_str	00000000 
000008f8 l       .debug_str	00000000 
000008fb l       .debug_str	00000000 
000008fe l       .debug_str	00000000 
00000902 l       .debug_str	00000000 
0000090c l       .debug_str	00000000 
00000911 l       .debug_str	00000000 
00000919 l       .debug_str	00000000 
0000091b l       .debug_str	00000000 
00000925 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.1	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.1
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.10	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.10
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.11	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.11
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.12	00000018 .Lanon.277aa98410f3319fb5528b9f3403b18a.12
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.13	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.13
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.14	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.14
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.15	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.15
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.16	00000016 .Lanon.277aa98410f3319fb5528b9f3403b18a.16
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.17	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.17
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.18	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.18
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.19	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.19
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.2	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.2
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.20	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.20
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.3	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.3
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.4	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.4
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.5	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.5
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.6	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.6
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.7	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.7
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.8	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.8
00000000 l     O .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.9	00000010 .Lanon.277aa98410f3319fb5528b9f3403b18a.9
00000000 l     O .rodata.str.0	0000001f str.0
00000000 l     O .rodata.str.1	00000021 str.1
00000000 l     O .rodata.str.2	0000001c str.2
00000000 l     O .rodata.str.3	00000021 str.3
00000000 l    d  .text._ZN116_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0dd7b413d18314c0E	00000000 .text._ZN116_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0dd7b413d18314c0E
00000000 l    d  .text._ZN119_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17h602b6b820d2ca90bE	00000000 .text._ZN119_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17h602b6b820d2ca90bE
00000000 l    d  .text._ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h14106d8d0058d0c8E	00000000 .text._ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h14106d8d0058d0c8E
00000000 l    d  .text._ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5cbcfc92b8f56ff1E	00000000 .text._ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5cbcfc92b8f56ff1E
00000000 l    d  .text._ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h536069dff34081b8E	00000000 .text._ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h536069dff34081b8E
00000000 l    d  .text._ZN17embedded_graphics10primitives6circle15Circle$LT$C$GT$3new17h799cd9b852f2d147E	00000000 .text._ZN17embedded_graphics10primitives6circle15Circle$LT$C$GT$3new17h799cd9b852f2d147E
00000000 l    d  .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.0	00000000 .rodata..Lanon.277aa98410f3319fb5528b9f3403b18a.0
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <embedded_graphics::coord::internal_coord::Coord as core::ops::index::Index<usize>>::index
00000000         *UND*	00000000 <embedded_graphics::coord::internal_coord::Coord as embedded_graphics::coord::ToUnsigned>::to_unsigned
00000000 g     F .text._ZN116_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0dd7b413d18314c0E	0000000a <embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter
00000000 g     F .text._ZN119_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17h602b6b820d2ca90bE	00000028 <embedded_graphics::primitives::circle::Circle<C> as embedded_graphics::style::WithStyle<C>>::fill
00000000 g     F .text._ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h14106d8d0058d0c8E	000000b2 <&embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter
00000000 g     F .text._ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5cbcfc92b8f56ff1E	00000558 <embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next
00000000 g     F .text._ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h536069dff34081b8E	00000048 <embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next::{{closure}}
00000000 g     F .text._ZN17embedded_graphics10primitives6circle15Circle$LT$C$GT$3new17h799cd9b852f2d147E	0000004e embedded_graphics::primitives::circle::Circle<C>::new
00000000         *UND*	00000000 embedded_graphics::coord::internal_coord::Coord::new
00000000         *UND*	00000000 core::option::Option<T>::map
00000000         *UND*	00000000 core::option::Option<T>::expect
00000000         *UND*	00000000 core::option::Option<T>::is_none
00000000         *UND*	00000000 core::option::Option<T>::is_some
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 <embedded_graphics::style::Style<P> as core::default::Default>::default



Disassembly of section .text._ZN116_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0dd7b413d18314c0E:

00000000 <<embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter>:
_ZN116_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0dd7b413d18314c0E():
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:128
    C: PixelColor,
{
    type Item = Pixel<C>;
    type IntoIter = CircleIterator<C>;

    fn into_iter(self) -> Self::IntoIter {
   0:	b580      	push	{r7, lr}
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:129
        (&self).into_iter()
   2:	f7ff fffe 	bl	0 <<embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter>
   6:	e7ff      	b.n	8 <<embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter+0x8>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:130
    }
   8:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN119_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17h602b6b820d2ca90bE:

00000000 <<embedded_graphics::primitives::circle::Circle<C> as embedded_graphics::style::WithStyle<C>>::fill>:
_ZN119_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17h602b6b820d2ca90bE():
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:114
    fn fill(mut self, color: Option<C>) -> Self {
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	b081      	sub	sp, #4
   4:	469c      	mov	ip, r3
   6:	4696      	mov	lr, r2
   8:	f8ad 2000 	strh.w	r2, [sp]
   c:	f8ad 3002 	strh.w	r3, [sp, #2]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:115
        self.style.fill_color = color;
  10:	f8bd 2000 	ldrh.w	r2, [sp]
  14:	f8bd 3002 	ldrh.w	r3, [sp, #2]
  18:	818a      	strh	r2, [r1, #12]
  1a:	81cb      	strh	r3, [r1, #14]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:117
        self
  1c:	e891 00fc 	ldmia.w	r1, {r2, r3, r4, r5, r6, r7}
  20:	e880 00fc 	stmia.w	r0, {r2, r3, r4, r5, r6, r7}
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:118
    }
  24:	b001      	add	sp, #4
  26:	bdf0      	pop	{r4, r5, r6, r7, pc}

Disassembly of section .text._ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h14106d8d0058d0c8E:

00000000 <<&embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter>:
_ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h14106d8d0058d0c8E():
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:140
    C: PixelColor,
{
    type Item = Pixel<C>;
    type IntoIter = CircleIterator<C>;

    fn into_iter(self) -> Self::IntoIter {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b08c      	sub	sp, #48	; 0x30
   4:	9108      	str	r1, [sp, #32]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:142
        CircleIterator {
            center: self.center,
   6:	9908      	ldr	r1, [sp, #32]
   8:	680a      	ldr	r2, [r1, #0]
   a:	684b      	ldr	r3, [r1, #4]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:143
            radius: self.radius,
   c:	f8d1 c008 	ldr.w	ip, [r1, #8]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:144
            style: self.style,
  10:	f8b1 e014 	ldrh.w	lr, [r1, #20]
  14:	f8ad e02c 	strh.w	lr, [sp, #44]	; 0x2c
  18:	f8d1 e00c 	ldr.w	lr, [r1, #12]
  1c:	6909      	ldr	r1, [r1, #16]
  1e:	910a      	str	r1, [sp, #40]	; 0x28
  20:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:145
            x: -(self.radius as i32),
  24:	9908      	ldr	r1, [sp, #32]
  26:	6889      	ldr	r1, [r1, #8]
  28:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  2c:	9007      	str	r0, [sp, #28]
  2e:	9206      	str	r2, [sp, #24]
  30:	9305      	str	r3, [sp, #20]
  32:	f8cd c010 	str.w	ip, [sp, #16]
  36:	9103      	str	r1, [sp, #12]
  38:	d023      	beq.n	82 <<&embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter+0x82>
  3a:	e7ff      	b.n	3c <<&embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter+0x3c>
  3c:	9803      	ldr	r0, [sp, #12]
  3e:	4241      	negs	r1, r0
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:146
            y: -(self.radius as i32),
  40:	9a08      	ldr	r2, [sp, #32]
  42:	6892      	ldr	r2, [r2, #8]
  44:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  48:	9102      	str	r1, [sp, #8]
  4a:	9201      	str	r2, [sp, #4]
  4c:	d025      	beq.n	9a <<&embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter+0x9a>
  4e:	e7ff      	b.n	50 <<&embedded_graphics::primitives::circle::Circle<C> as core::iter::traits::collect::IntoIterator>::into_iter+0x50>
  50:	9801      	ldr	r0, [sp, #4]
  52:	4241      	negs	r1, r0
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:141
        CircleIterator {
  54:	9a06      	ldr	r2, [sp, #24]
  56:	9b07      	ldr	r3, [sp, #28]
  58:	601a      	str	r2, [r3, #0]
  5a:	f8dd c014 	ldr.w	ip, [sp, #20]
  5e:	f8c3 c004 	str.w	ip, [r3, #4]
  62:	f8dd e010 	ldr.w	lr, [sp, #16]
  66:	f8c3 e008 	str.w	lr, [r3, #8]
  6a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
  6e:	839c      	strh	r4, [r3, #28]
  70:	9c09      	ldr	r4, [sp, #36]	; 0x24
  72:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  74:	619d      	str	r5, [r3, #24]
  76:	615c      	str	r4, [r3, #20]
  78:	9c02      	ldr	r4, [sp, #8]
  7a:	60dc      	str	r4, [r3, #12]
  7c:	6119      	str	r1, [r3, #16]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:148
        }
    }
  7e:	b00c      	add	sp, #48	; 0x30
  80:	bdb0      	pop	{r4, r5, r7, pc}
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:145
            x: -(self.radius as i32),
  82:	f240 0000 	movw	r0, #0
  86:	f2c0 0000 	movt	r0, #0
  8a:	f240 0200 	movw	r2, #0
  8e:	f2c0 0200 	movt	r2, #0
  92:	211f      	movs	r1, #31
  94:	f7ff fffe 	bl	0 <core::panicking::panic>
  98:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:146
            y: -(self.radius as i32),
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	f240 0200 	movw	r2, #0
  a6:	f2c0 0200 	movt	r2, #0
  aa:	211f      	movs	r1, #31
  ac:	f7ff fffe 	bl	0 <core::panicking::panic>
  b0:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5cbcfc92b8f56ff1E:

00000000 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next>:
_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5cbcfc92b8f56ff1E():
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:168
    C: PixelColor,
{
    type Item = Pixel<C>;

    // https://stackoverflow.com/questions/1201200/fast-algorithm-for-drawing-filled-circles
    fn next(&mut self) -> Option<Self::Item> {
   0:	b580      	push	{r7, lr}
   2:	b0c2      	sub	sp, #264	; 0x108
   4:	911d      	str	r1, [sp, #116]	; 0x74
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:170
        // If border or stroke colour is `None`, treat entire object as transparent and exit early
        if self.style.stroke_color.is_none() && self.style.fill_color.is_none() {
   6:	991d      	ldr	r1, [sp, #116]	; 0x74
   8:	3118      	adds	r1, #24
   a:	901c      	str	r0, [sp, #112]	; 0x70
   c:	4608      	mov	r0, r1
   e:	f7ff fffe 	bl	0 <core::option::Option<T>::is_none>
  12:	901b      	str	r0, [sp, #108]	; 0x6c
  14:	e013      	b.n	3e <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3e>
  16:	2001      	movs	r0, #1
  18:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
  1c:	e009      	b.n	32 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x32>
  1e:	2000      	movs	r0, #0
  20:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
  24:	e005      	b.n	32 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x32>
  26:	981d      	ldr	r0, [sp, #116]	; 0x74
  28:	3014      	adds	r0, #20
  2a:	f7ff fffe 	bl	0 <core::option::Option<T>::is_none>
  2e:	901a      	str	r0, [sp, #104]	; 0x68
  30:	e00a      	b.n	48 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x48>
  32:	f89d 007b 	ldrb.w	r0, [sp, #123]	; 0x7b
  36:	07c0      	lsls	r0, r0, #31
  38:	2800      	cmp	r0, #0
  3a:	d110      	bne.n	5e <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x5e>
  3c:	e009      	b.n	52 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x52>
  3e:	981b      	ldr	r0, [sp, #108]	; 0x6c
  40:	07c1      	lsls	r1, r0, #31
  42:	2900      	cmp	r1, #0
  44:	d1ef      	bne.n	26 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x26>
  46:	e7ea      	b.n	1e <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1e>
  48:	981a      	ldr	r0, [sp, #104]	; 0x68
  4a:	07c1      	lsls	r1, r0, #31
  4c:	2900      	cmp	r1, #0
  4e:	d1e2      	bne.n	16 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x16>
  50:	e7e5      	b.n	1e <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1e>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:174
            return None;
        }

        let cx = self.center[0];
  52:	981d      	ldr	r0, [sp, #116]	; 0x74
  54:	2100      	movs	r1, #0
  56:	f7ff fffe 	bl	0 <<embedded_graphics::coord::internal_coord::Coord as core::ops::index::Index<usize>>::index>
  5a:	9019      	str	r0, [sp, #100]	; 0x64
  5c:	e005      	b.n	6a <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x6a>
  5e:	2000      	movs	r0, #0
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:171
            return None;
  60:	991c      	ldr	r1, [sp, #112]	; 0x70
  62:	6008      	str	r0, [r1, #0]
  64:	e7ff      	b.n	66 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x66>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:228
                }
            }
        };

        item.map(|(x, y, c)| Pixel(Coord::new(x, y).to_unsigned(), c))
    }
  66:	b042      	add	sp, #264	; 0x108
  68:	bd80      	pop	{r7, pc}
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:174
        let cx = self.center[0];
  6a:	9819      	ldr	r0, [sp, #100]	; 0x64
  6c:	6801      	ldr	r1, [r0, #0]
  6e:	911f      	str	r1, [sp, #124]	; 0x7c
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:175
        let cy = self.center[1];
  70:	981d      	ldr	r0, [sp, #116]	; 0x74
  72:	2101      	movs	r1, #1
  74:	f7ff fffe 	bl	0 <<embedded_graphics::coord::internal_coord::Coord as core::ops::index::Index<usize>>::index>
  78:	9018      	str	r0, [sp, #96]	; 0x60
  7a:	e7ff      	b.n	7c <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x7c>
  7c:	9818      	ldr	r0, [sp, #96]	; 0x60
  7e:	6801      	ldr	r1, [r0, #0]
  80:	9120      	str	r1, [sp, #128]	; 0x80
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:177
        let radius = self.radius as i32 - self.style.stroke_width as i32 + 1;
  82:	991d      	ldr	r1, [sp, #116]	; 0x74
  84:	688a      	ldr	r2, [r1, #8]
  86:	7f09      	ldrb	r1, [r1, #28]
  88:	1a53      	subs	r3, r2, r1
  8a:	428a      	cmp	r2, r1
  8c:	9317      	str	r3, [sp, #92]	; 0x5c
  8e:	f180 81a3 	bvs.w	3d8 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3d8>
  92:	e7ff      	b.n	94 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x94>
  94:	9817      	ldr	r0, [sp, #92]	; 0x5c
  96:	1c41      	adds	r1, r0, #1
  98:	460a      	mov	r2, r1
  9a:	4281      	cmp	r1, r0
  9c:	9216      	str	r2, [sp, #88]	; 0x58
  9e:	f180 81a7 	bvs.w	3f0 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3f0>
  a2:	e7ff      	b.n	a4 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0xa4>
  a4:	9816      	ldr	r0, [sp, #88]	; 0x58
  a6:	9021      	str	r0, [sp, #132]	; 0x84
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:178
        let outer_radius = self.radius as i32;
  a8:	991d      	ldr	r1, [sp, #116]	; 0x74
  aa:	6889      	ldr	r1, [r1, #8]
  ac:	9122      	str	r1, [sp, #136]	; 0x88
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:180
        let radius_sq = radius * radius;
  ae:	9921      	ldr	r1, [sp, #132]	; 0x84
  b0:	fb01 f201 	mul.w	r2, r1, r1
  b4:	fb81 1301 	smull	r1, r3, r1, r1
  b8:	ebb3 7fe1 	cmp.w	r3, r1, asr #31
  bc:	9215      	str	r2, [sp, #84]	; 0x54
  be:	f040 81a3 	bne.w	408 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x408>
  c2:	e7ff      	b.n	c4 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0xc4>
  c4:	9815      	ldr	r0, [sp, #84]	; 0x54
  c6:	9023      	str	r0, [sp, #140]	; 0x8c
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:181
        let outer_radius_sq = outer_radius * outer_radius;
  c8:	9922      	ldr	r1, [sp, #136]	; 0x88
  ca:	fb01 f201 	mul.w	r2, r1, r1
  ce:	fb81 1301 	smull	r1, r3, r1, r1
  d2:	ebb3 7fe1 	cmp.w	r3, r1, asr #31
  d6:	9214      	str	r2, [sp, #80]	; 0x50
  d8:	f040 81a2 	bne.w	420 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x420>
  dc:	e7ff      	b.n	de <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0xde>
  de:	9814      	ldr	r0, [sp, #80]	; 0x50
  e0:	9024      	str	r0, [sp, #144]	; 0x90
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:183
        let item = loop {
  e2:	e7ff      	b.n	e4 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0xe4>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:184
            let tx = self.x;
  e4:	981d      	ldr	r0, [sp, #116]	; 0x74
  e6:	68c0      	ldr	r0, [r0, #12]
  e8:	9029      	str	r0, [sp, #164]	; 0xa4
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:185
            let ty = self.y;
  ea:	981d      	ldr	r0, [sp, #116]	; 0x74
  ec:	6900      	ldr	r0, [r0, #16]
  ee:	902a      	str	r0, [sp, #168]	; 0xa8
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:186
            let len = tx * tx + ty * ty;
  f0:	9829      	ldr	r0, [sp, #164]	; 0xa4
  f2:	fb00 f100 	mul.w	r1, r0, r0
  f6:	fb80 0200 	smull	r0, r2, r0, r0
  fa:	ebb2 7fe0 	cmp.w	r2, r0, asr #31
  fe:	9113      	str	r1, [sp, #76]	; 0x4c
 100:	f040 819a 	bne.w	438 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x438>
 104:	e7ff      	b.n	106 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x106>
 106:	982a      	ldr	r0, [sp, #168]	; 0xa8
 108:	fb00 f100 	mul.w	r1, r0, r0
 10c:	fb80 0200 	smull	r0, r2, r0, r0
 110:	ebb2 7fe0 	cmp.w	r2, r0, asr #31
 114:	9112      	str	r1, [sp, #72]	; 0x48
 116:	f040 819b 	bne.w	450 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x450>
 11a:	e7ff      	b.n	11c <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x11c>
 11c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 11e:	9912      	ldr	r1, [sp, #72]	; 0x48
 120:	1842      	adds	r2, r0, r1
 122:	4613      	mov	r3, r2
 124:	4282      	cmp	r2, r0
 126:	9311      	str	r3, [sp, #68]	; 0x44
 128:	f180 819e 	bvs.w	468 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x468>
 12c:	e7ff      	b.n	12e <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x12e>
 12e:	9811      	ldr	r0, [sp, #68]	; 0x44
 130:	902b      	str	r0, [sp, #172]	; 0xac
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:188
            let is_border = len > radius_sq - radius && len < outer_radius_sq + radius;
 132:	992b      	ldr	r1, [sp, #172]	; 0xac
 134:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 136:	9b21      	ldr	r3, [sp, #132]	; 0x84
 138:	eba2 0c03 	sub.w	ip, r2, r3
 13c:	429a      	cmp	r2, r3
 13e:	9110      	str	r1, [sp, #64]	; 0x40
 140:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 144:	f180 819c 	bvs.w	480 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x480>
 148:	e021      	b.n	18e <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x18e>
 14a:	2001      	movs	r0, #1
 14c:	f88d 00b2 	strb.w	r0, [sp, #178]	; 0xb2
 150:	e00e      	b.n	170 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x170>
 152:	2000      	movs	r0, #0
 154:	f88d 00b2 	strb.w	r0, [sp, #178]	; 0xb2
 158:	e00a      	b.n	170 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x170>
 15a:	982b      	ldr	r0, [sp, #172]	; 0xac
 15c:	9924      	ldr	r1, [sp, #144]	; 0x90
 15e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 160:	440a      	add	r2, r1
 162:	4613      	mov	r3, r2
 164:	428a      	cmp	r2, r1
 166:	900e      	str	r0, [sp, #56]	; 0x38
 168:	930d      	str	r3, [sp, #52]	; 0x34
 16a:	f180 8195 	bvs.w	498 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x498>
 16e:	e013      	b.n	198 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x198>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:191
            let is_fill = len <= outer_radius_sq;
 170:	982b      	ldr	r0, [sp, #172]	; 0xac
 172:	9924      	ldr	r1, [sp, #144]	; 0x90
 174:	2200      	movs	r2, #0
 176:	4288      	cmp	r0, r1
 178:	bfd8      	it	le
 17a:	2201      	movle	r2, #1
 17c:	f88d 20b3 	strb.w	r2, [sp, #179]	; 0xb3
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:193
            let item = if is_border && self.style.stroke_color.is_some() {
 180:	f89d 00b2 	ldrb.w	r0, [sp, #178]	; 0xb2
 184:	ea4f 70c0 	mov.w	r0, r0, lsl #31
 188:	2800      	cmp	r0, #0
 18a:	d112      	bne.n	1b2 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1b2>
 18c:	e00d      	b.n	1aa <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1aa>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:188
            let is_border = len > radius_sq - radius && len < outer_radius_sq + radius;
 18e:	9810      	ldr	r0, [sp, #64]	; 0x40
 190:	990f      	ldr	r1, [sp, #60]	; 0x3c
 192:	4288      	cmp	r0, r1
 194:	dce1      	bgt.n	15a <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x15a>
 196:	e7dc      	b.n	152 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x152>
 198:	980e      	ldr	r0, [sp, #56]	; 0x38
 19a:	990d      	ldr	r1, [sp, #52]	; 0x34
 19c:	4288      	cmp	r0, r1
 19e:	dbd4      	blt.n	14a <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x14a>
 1a0:	e7d7      	b.n	152 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x152>
 1a2:	2001      	movs	r0, #1
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:193
            let item = if is_border && self.style.stroke_color.is_some() {
 1a4:	f88d 00c7 	strb.w	r0, [sp, #199]	; 0xc7
 1a8:	e009      	b.n	1be <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1be>
 1aa:	2000      	movs	r0, #0
 1ac:	f88d 00c7 	strb.w	r0, [sp, #199]	; 0xc7
 1b0:	e005      	b.n	1be <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1be>
 1b2:	981d      	ldr	r0, [sp, #116]	; 0x74
 1b4:	3018      	adds	r0, #24
 1b6:	f7ff fffe 	bl	0 <core::option::Option<T>::is_some>
 1ba:	900c      	str	r0, [sp, #48]	; 0x30
 1bc:	e005      	b.n	1ca <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1ca>
 1be:	f89d 00c7 	ldrb.w	r0, [sp, #199]	; 0xc7
 1c2:	07c0      	lsls	r0, r0, #31
 1c4:	2800      	cmp	r0, #0
 1c6:	d10b      	bne.n	1e0 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1e0>
 1c8:	e004      	b.n	1d4 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1d4>
 1ca:	980c      	ldr	r0, [sp, #48]	; 0x30
 1cc:	07c1      	lsls	r1, r0, #31
 1ce:	2900      	cmp	r1, #0
 1d0:	d1e7      	bne.n	1a2 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1a2>
 1d2:	e7ea      	b.n	1aa <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1aa>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:199
            } else if is_fill && self.style.fill_color.is_some() {
 1d4:	f89d 00b3 	ldrb.w	r0, [sp, #179]	; 0xb3
 1d8:	07c0      	lsls	r0, r0, #31
 1da:	2800      	cmp	r0, #0
 1dc:	d140      	bne.n	260 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x260>
 1de:	e03b      	b.n	258 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x258>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:195
                    cx + tx,
 1e0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 1e2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 1e4:	4401      	add	r1, r0
 1e6:	460a      	mov	r2, r1
 1e8:	4281      	cmp	r1, r0
 1ea:	920b      	str	r2, [sp, #44]	; 0x2c
 1ec:	f180 8160 	bvs.w	4b0 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x4b0>
 1f0:	e7ff      	b.n	1f2 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x1f2>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:196
                    cy + ty,
 1f2:	9820      	ldr	r0, [sp, #128]	; 0x80
 1f4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 1f6:	4401      	add	r1, r0
 1f8:	460a      	mov	r2, r1
 1fa:	4281      	cmp	r1, r0
 1fc:	920a      	str	r2, [sp, #40]	; 0x28
 1fe:	f180 8163 	bvs.w	4c8 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x4c8>
 202:	e7ff      	b.n	204 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x204>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:197
                    self.style.stroke_color.expect("Border color not defined"),
 204:	981d      	ldr	r0, [sp, #116]	; 0x74
 206:	8b41      	ldrh	r1, [r0, #26]
 208:	8b00      	ldrh	r0, [r0, #24]
 20a:	f240 0200 	movw	r2, #0
 20e:	f2c0 0200 	movt	r2, #0
 212:	466b      	mov	r3, sp
 214:	601a      	str	r2, [r3, #0]
 216:	f240 0200 	movw	r2, #0
 21a:	f2c0 0200 	movt	r2, #0
 21e:	2318      	movs	r3, #24
 220:	f7ff fffe 	bl	0 <core::option::Option<T>::expect>
 224:	9009      	str	r0, [sp, #36]	; 0x24
 226:	e7ff      	b.n	228 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x228>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:194
                Some((
 228:	980b      	ldr	r0, [sp, #44]	; 0x2c
 22a:	9032      	str	r0, [sp, #200]	; 0xc8
 22c:	990a      	ldr	r1, [sp, #40]	; 0x28
 22e:	9133      	str	r1, [sp, #204]	; 0xcc
 230:	9a09      	ldr	r2, [sp, #36]	; 0x24
 232:	f8ad 20d0 	strh.w	r2, [sp, #208]	; 0xd0
 236:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 238:	f8dd c0cc 	ldr.w	ip, [sp, #204]	; 0xcc
 23c:	f8dd e0d0 	ldr.w	lr, [sp, #208]	; 0xd0
 240:	f8cd e0c0 	str.w	lr, [sp, #192]	; 0xc0
 244:	f8cd c0bc 	str.w	ip, [sp, #188]	; 0xbc
 248:	932e      	str	r3, [sp, #184]	; 0xb8
 24a:	2301      	movs	r3, #1
 24c:	932d      	str	r3, [sp, #180]	; 0xb4
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:193
            let item = if is_border && self.style.stroke_color.is_some() {
 24e:	e054      	b.n	2fa <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x2fa>
 250:	2001      	movs	r0, #1
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:199
            } else if is_fill && self.style.fill_color.is_some() {
 252:	f88d 00d7 	strb.w	r0, [sp, #215]	; 0xd7
 256:	e009      	b.n	26c <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x26c>
 258:	2000      	movs	r0, #0
 25a:	f88d 00d7 	strb.w	r0, [sp, #215]	; 0xd7
 25e:	e005      	b.n	26c <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x26c>
 260:	981d      	ldr	r0, [sp, #116]	; 0x74
 262:	3014      	adds	r0, #20
 264:	f7ff fffe 	bl	0 <core::option::Option<T>::is_some>
 268:	9008      	str	r0, [sp, #32]
 26a:	e005      	b.n	278 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x278>
 26c:	f89d 00d7 	ldrb.w	r0, [sp, #215]	; 0xd7
 270:	07c0      	lsls	r0, r0, #31
 272:	2800      	cmp	r0, #0
 274:	d108      	bne.n	288 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x288>
 276:	e004      	b.n	282 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x282>
 278:	9808      	ldr	r0, [sp, #32]
 27a:	07c1      	lsls	r1, r0, #31
 27c:	2900      	cmp	r1, #0
 27e:	d1e7      	bne.n	250 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x250>
 280:	e7ea      	b.n	258 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x258>
 282:	2000      	movs	r0, #0
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:206
                None
 284:	902d      	str	r0, [sp, #180]	; 0xb4
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:199
            } else if is_fill && self.style.fill_color.is_some() {
 286:	e037      	b.n	2f8 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x2f8>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:201
                    cx + tx,
 288:	981f      	ldr	r0, [sp, #124]	; 0x7c
 28a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 28c:	4401      	add	r1, r0
 28e:	460a      	mov	r2, r1
 290:	4281      	cmp	r1, r0
 292:	9207      	str	r2, [sp, #28]
 294:	f180 8124 	bvs.w	4e0 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x4e0>
 298:	e7ff      	b.n	29a <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x29a>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:202
                    cy + ty,
 29a:	9820      	ldr	r0, [sp, #128]	; 0x80
 29c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 29e:	4401      	add	r1, r0
 2a0:	460a      	mov	r2, r1
 2a2:	4281      	cmp	r1, r0
 2a4:	9206      	str	r2, [sp, #24]
 2a6:	f180 8127 	bvs.w	4f8 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x4f8>
 2aa:	e7ff      	b.n	2ac <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x2ac>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:203
                    self.style.fill_color.expect("Fill color not defined"),
 2ac:	981d      	ldr	r0, [sp, #116]	; 0x74
 2ae:	8ac1      	ldrh	r1, [r0, #22]
 2b0:	8a80      	ldrh	r0, [r0, #20]
 2b2:	f240 0200 	movw	r2, #0
 2b6:	f2c0 0200 	movt	r2, #0
 2ba:	466b      	mov	r3, sp
 2bc:	601a      	str	r2, [r3, #0]
 2be:	f240 0200 	movw	r2, #0
 2c2:	f2c0 0200 	movt	r2, #0
 2c6:	2316      	movs	r3, #22
 2c8:	f7ff fffe 	bl	0 <core::option::Option<T>::expect>
 2cc:	9005      	str	r0, [sp, #20]
 2ce:	e7ff      	b.n	2d0 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x2d0>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:200
                Some((
 2d0:	9807      	ldr	r0, [sp, #28]
 2d2:	9036      	str	r0, [sp, #216]	; 0xd8
 2d4:	9906      	ldr	r1, [sp, #24]
 2d6:	9137      	str	r1, [sp, #220]	; 0xdc
 2d8:	9a05      	ldr	r2, [sp, #20]
 2da:	f8ad 20e0 	strh.w	r2, [sp, #224]	; 0xe0
 2de:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 2e0:	f8dd c0dc 	ldr.w	ip, [sp, #220]	; 0xdc
 2e4:	f8dd e0e0 	ldr.w	lr, [sp, #224]	; 0xe0
 2e8:	f8cd e0c0 	str.w	lr, [sp, #192]	; 0xc0
 2ec:	f8cd c0bc 	str.w	ip, [sp, #188]	; 0xbc
 2f0:	932e      	str	r3, [sp, #184]	; 0xb8
 2f2:	2301      	movs	r3, #1
 2f4:	932d      	str	r3, [sp, #180]	; 0xb4
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:199
            } else if is_fill && self.style.fill_color.is_some() {
 2f6:	e7ff      	b.n	2f8 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x2f8>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:193
            let item = if is_border && self.style.stroke_color.is_some() {
 2f8:	e7ff      	b.n	2fa <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x2fa>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:209
            self.x += 1;
 2fa:	981d      	ldr	r0, [sp, #116]	; 0x74
 2fc:	68c0      	ldr	r0, [r0, #12]
 2fe:	1c41      	adds	r1, r0, #1
 300:	460a      	mov	r2, r1
 302:	4281      	cmp	r1, r0
 304:	9204      	str	r2, [sp, #16]
 306:	f180 8103 	bvs.w	510 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x510>
 30a:	e7ff      	b.n	30c <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x30c>
 30c:	981d      	ldr	r0, [sp, #116]	; 0x74
 30e:	9904      	ldr	r1, [sp, #16]
 310:	60c1      	str	r1, [r0, #12]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:211
            if self.x > self.radius as i32 {
 312:	981d      	ldr	r0, [sp, #116]	; 0x74
 314:	6882      	ldr	r2, [r0, #8]
 316:	68c0      	ldr	r0, [r0, #12]
 318:	4290      	cmp	r0, r2
 31a:	dd19      	ble.n	350 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x350>
 31c:	e7ff      	b.n	31e <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x31e>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:212
                self.x = -(self.radius as i32);
 31e:	981d      	ldr	r0, [sp, #116]	; 0x74
 320:	6880      	ldr	r0, [r0, #8]
 322:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 326:	9003      	str	r0, [sp, #12]
 328:	f000 80fe 	beq.w	528 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x528>
 32c:	e7ff      	b.n	32e <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x32e>
 32e:	981d      	ldr	r0, [sp, #116]	; 0x74
 330:	9903      	ldr	r1, [sp, #12]
 332:	424a      	negs	r2, r1
 334:	60c2      	str	r2, [r0, #12]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:213
                self.y += 1;
 336:	981d      	ldr	r0, [sp, #116]	; 0x74
 338:	6900      	ldr	r0, [r0, #16]
 33a:	1c42      	adds	r2, r0, #1
 33c:	4613      	mov	r3, r2
 33e:	4282      	cmp	r2, r0
 340:	9302      	str	r3, [sp, #8]
 342:	f180 80fd 	bvs.w	540 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x540>
 346:	e7ff      	b.n	348 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x348>
 348:	981d      	ldr	r0, [sp, #116]	; 0x74
 34a:	9902      	ldr	r1, [sp, #8]
 34c:	6101      	str	r1, [r0, #16]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:211
            if self.x > self.radius as i32 {
 34e:	e7ff      	b.n	350 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x350>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:216
            if self.y > self.radius as i32 {
 350:	981d      	ldr	r0, [sp, #116]	; 0x74
 352:	6881      	ldr	r1, [r0, #8]
 354:	6900      	ldr	r0, [r0, #16]
 356:	4288      	cmp	r0, r1
 358:	dc04      	bgt.n	364 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x364>
 35a:	e7ff      	b.n	35c <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x35c>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:220
            if let Some(i) = item {
 35c:	982d      	ldr	r0, [sp, #180]	; 0xb4
 35e:	2801      	cmp	r0, #1
 360:	d010      	beq.n	384 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x384>
 362:	e037      	b.n	3d4 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3d4>
 364:	2000      	movs	r0, #0
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:217
                break None;
 366:	9025      	str	r0, [sp, #148]	; 0x94
 368:	e7ff      	b.n	36a <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x36a>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:227
        item.map(|(x, y, c)| Pixel(Coord::new(x, y).to_unsigned(), c))
 36a:	9825      	ldr	r0, [sp, #148]	; 0x94
 36c:	9926      	ldr	r1, [sp, #152]	; 0x98
 36e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 370:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 372:	9340      	str	r3, [sp, #256]	; 0x100
 374:	923f      	str	r2, [sp, #252]	; 0xfc
 376:	913e      	str	r1, [sp, #248]	; 0xf8
 378:	903d      	str	r0, [sp, #244]	; 0xf4
 37a:	a93d      	add	r1, sp, #244	; 0xf4
 37c:	981c      	ldr	r0, [sp, #112]	; 0x70
 37e:	f7ff fffe 	bl	0 <core::option::Option<T>::map>
 382:	e028      	b.n	3d6 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3d6>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:220
            if let Some(i) = item {
 384:	982e      	ldr	r0, [sp, #184]	; 0xb8
 386:	992f      	ldr	r1, [sp, #188]	; 0xbc
 388:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 38a:	923b      	str	r2, [sp, #236]	; 0xec
 38c:	913a      	str	r1, [sp, #232]	; 0xe8
 38e:	9039      	str	r0, [sp, #228]	; 0xe4
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:221
                if i.0 >= 0 && i.1 >= 0 {
 390:	9839      	ldr	r0, [sp, #228]	; 0xe4
 392:	f1b0 3fff 	cmp.w	r0, #4294967295
 396:	dc08      	bgt.n	3aa <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3aa>
 398:	e003      	b.n	3a2 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3a2>
 39a:	2001      	movs	r0, #1
 39c:	f88d 00f3 	strb.w	r0, [sp, #243]	; 0xf3
 3a0:	e008      	b.n	3b4 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3b4>
 3a2:	2000      	movs	r0, #0
 3a4:	f88d 00f3 	strb.w	r0, [sp, #243]	; 0xf3
 3a8:	e004      	b.n	3b4 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3b4>
 3aa:	983a      	ldr	r0, [sp, #232]	; 0xe8
 3ac:	f1b0 3fff 	cmp.w	r0, #4294967295
 3b0:	dcf3      	bgt.n	39a <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x39a>
 3b2:	e7f6      	b.n	3a2 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3a2>
 3b4:	f89d 00f3 	ldrb.w	r0, [sp, #243]	; 0xf3
 3b8:	07c0      	lsls	r0, r0, #31
 3ba:	2800      	cmp	r0, #0
 3bc:	d101      	bne.n	3c2 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3c2>
 3be:	e7ff      	b.n	3c0 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3c0>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:220
            if let Some(i) = item {
 3c0:	e008      	b.n	3d4 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x3d4>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:222
                    break item;
 3c2:	982d      	ldr	r0, [sp, #180]	; 0xb4
 3c4:	992e      	ldr	r1, [sp, #184]	; 0xb8
 3c6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 3c8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 3ca:	9328      	str	r3, [sp, #160]	; 0xa0
 3cc:	9227      	str	r2, [sp, #156]	; 0x9c
 3ce:	9126      	str	r1, [sp, #152]	; 0x98
 3d0:	9025      	str	r0, [sp, #148]	; 0x94
 3d2:	e7ca      	b.n	36a <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x36a>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:183
        let item = loop {
 3d4:	e686      	b.n	e4 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0xe4>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:228
    }
 3d6:	e646      	b.n	66 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next+0x66>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:177
        let radius = self.radius as i32 - self.style.stroke_width as i32 + 1;
 3d8:	f240 0000 	movw	r0, #0
 3dc:	f2c0 0000 	movt	r0, #0
 3e0:	f240 0200 	movw	r2, #0
 3e4:	f2c0 0200 	movt	r2, #0
 3e8:	2121      	movs	r1, #33	; 0x21
 3ea:	f7ff fffe 	bl	0 <core::panicking::panic>
 3ee:	defe      	udf	#254	; 0xfe
 3f0:	f240 0000 	movw	r0, #0
 3f4:	f2c0 0000 	movt	r0, #0
 3f8:	f240 0200 	movw	r2, #0
 3fc:	f2c0 0200 	movt	r2, #0
 400:	211c      	movs	r1, #28
 402:	f7ff fffe 	bl	0 <core::panicking::panic>
 406:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:180
        let radius_sq = radius * radius;
 408:	f240 0000 	movw	r0, #0
 40c:	f2c0 0000 	movt	r0, #0
 410:	f240 0200 	movw	r2, #0
 414:	f2c0 0200 	movt	r2, #0
 418:	2121      	movs	r1, #33	; 0x21
 41a:	f7ff fffe 	bl	0 <core::panicking::panic>
 41e:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:181
        let outer_radius_sq = outer_radius * outer_radius;
 420:	f240 0000 	movw	r0, #0
 424:	f2c0 0000 	movt	r0, #0
 428:	f240 0200 	movw	r2, #0
 42c:	f2c0 0200 	movt	r2, #0
 430:	2121      	movs	r1, #33	; 0x21
 432:	f7ff fffe 	bl	0 <core::panicking::panic>
 436:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:186
            let len = tx * tx + ty * ty;
 438:	f240 0000 	movw	r0, #0
 43c:	f2c0 0000 	movt	r0, #0
 440:	f240 0200 	movw	r2, #0
 444:	f2c0 0200 	movt	r2, #0
 448:	2121      	movs	r1, #33	; 0x21
 44a:	f7ff fffe 	bl	0 <core::panicking::panic>
 44e:	defe      	udf	#254	; 0xfe
 450:	f240 0000 	movw	r0, #0
 454:	f2c0 0000 	movt	r0, #0
 458:	f240 0200 	movw	r2, #0
 45c:	f2c0 0200 	movt	r2, #0
 460:	2121      	movs	r1, #33	; 0x21
 462:	f7ff fffe 	bl	0 <core::panicking::panic>
 466:	defe      	udf	#254	; 0xfe
 468:	f240 0000 	movw	r0, #0
 46c:	f2c0 0000 	movt	r0, #0
 470:	f240 0200 	movw	r2, #0
 474:	f2c0 0200 	movt	r2, #0
 478:	211c      	movs	r1, #28
 47a:	f7ff fffe 	bl	0 <core::panicking::panic>
 47e:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:188
            let is_border = len > radius_sq - radius && len < outer_radius_sq + radius;
 480:	f240 0000 	movw	r0, #0
 484:	f2c0 0000 	movt	r0, #0
 488:	f240 0200 	movw	r2, #0
 48c:	f2c0 0200 	movt	r2, #0
 490:	2121      	movs	r1, #33	; 0x21
 492:	f7ff fffe 	bl	0 <core::panicking::panic>
 496:	defe      	udf	#254	; 0xfe
 498:	f240 0000 	movw	r0, #0
 49c:	f2c0 0000 	movt	r0, #0
 4a0:	f240 0200 	movw	r2, #0
 4a4:	f2c0 0200 	movt	r2, #0
 4a8:	211c      	movs	r1, #28
 4aa:	f7ff fffe 	bl	0 <core::panicking::panic>
 4ae:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:195
                    cx + tx,
 4b0:	f240 0000 	movw	r0, #0
 4b4:	f2c0 0000 	movt	r0, #0
 4b8:	f240 0200 	movw	r2, #0
 4bc:	f2c0 0200 	movt	r2, #0
 4c0:	211c      	movs	r1, #28
 4c2:	f7ff fffe 	bl	0 <core::panicking::panic>
 4c6:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:196
                    cy + ty,
 4c8:	f240 0000 	movw	r0, #0
 4cc:	f2c0 0000 	movt	r0, #0
 4d0:	f240 0200 	movw	r2, #0
 4d4:	f2c0 0200 	movt	r2, #0
 4d8:	211c      	movs	r1, #28
 4da:	f7ff fffe 	bl	0 <core::panicking::panic>
 4de:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:201
                    cx + tx,
 4e0:	f240 0000 	movw	r0, #0
 4e4:	f2c0 0000 	movt	r0, #0
 4e8:	f240 0200 	movw	r2, #0
 4ec:	f2c0 0200 	movt	r2, #0
 4f0:	211c      	movs	r1, #28
 4f2:	f7ff fffe 	bl	0 <core::panicking::panic>
 4f6:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:202
                    cy + ty,
 4f8:	f240 0000 	movw	r0, #0
 4fc:	f2c0 0000 	movt	r0, #0
 500:	f240 0200 	movw	r2, #0
 504:	f2c0 0200 	movt	r2, #0
 508:	211c      	movs	r1, #28
 50a:	f7ff fffe 	bl	0 <core::panicking::panic>
 50e:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:209
            self.x += 1;
 510:	f240 0000 	movw	r0, #0
 514:	f2c0 0000 	movt	r0, #0
 518:	f240 0200 	movw	r2, #0
 51c:	f2c0 0200 	movt	r2, #0
 520:	211c      	movs	r1, #28
 522:	f7ff fffe 	bl	0 <core::panicking::panic>
 526:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:212
                self.x = -(self.radius as i32);
 528:	f240 0000 	movw	r0, #0
 52c:	f2c0 0000 	movt	r0, #0
 530:	f240 0200 	movw	r2, #0
 534:	f2c0 0200 	movt	r2, #0
 538:	211f      	movs	r1, #31
 53a:	f7ff fffe 	bl	0 <core::panicking::panic>
 53e:	defe      	udf	#254	; 0xfe
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:213
                self.y += 1;
 540:	f240 0000 	movw	r0, #0
 544:	f2c0 0000 	movt	r0, #0
 548:	f240 0200 	movw	r2, #0
 54c:	f2c0 0200 	movt	r2, #0
 550:	211c      	movs	r1, #28
 552:	f7ff fffe 	bl	0 <core::panicking::panic>
 556:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h536069dff34081b8E:

00000000 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next::{{closure}}>:
_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h536069dff34081b8E():
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:227
        item.map(|(x, y, c)| Pixel(Coord::new(x, y).to_unsigned(), c))
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	680a      	ldr	r2, [r1, #0]
   6:	9207      	str	r2, [sp, #28]
   8:	684a      	ldr	r2, [r1, #4]
   a:	9208      	str	r2, [sp, #32]
   c:	8909      	ldrh	r1, [r1, #8]
   e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
  12:	9907      	ldr	r1, [sp, #28]
  14:	9a08      	ldr	r2, [sp, #32]
  16:	9005      	str	r0, [sp, #20]
  18:	4608      	mov	r0, r1
  1a:	4611      	mov	r1, r2
  1c:	f7ff fffe 	bl	0 <embedded_graphics::coord::internal_coord::Coord::new>
  20:	9004      	str	r0, [sp, #16]
  22:	9103      	str	r1, [sp, #12]
  24:	e7ff      	b.n	26 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next::{{closure}}+0x26>
  26:	9804      	ldr	r0, [sp, #16]
  28:	9903      	ldr	r1, [sp, #12]
  2a:	f7ff fffe 	bl	0 <<embedded_graphics::coord::internal_coord::Coord as embedded_graphics::coord::ToUnsigned>::to_unsigned>
  2e:	9002      	str	r0, [sp, #8]
  30:	9101      	str	r1, [sp, #4]
  32:	e7ff      	b.n	34 <<embedded_graphics::primitives::circle::CircleIterator<C> as core::iter::traits::iterator::Iterator>::next::{{closure}}+0x34>
  34:	f8bd 0026 	ldrh.w	r0, [sp, #38]	; 0x26
  38:	9902      	ldr	r1, [sp, #8]
  3a:	9a05      	ldr	r2, [sp, #20]
  3c:	6011      	str	r1, [r2, #0]
  3e:	9b01      	ldr	r3, [sp, #4]
  40:	6053      	str	r3, [r2, #4]
  42:	8110      	strh	r0, [r2, #8]
  44:	b00a      	add	sp, #40	; 0x28
  46:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN17embedded_graphics10primitives6circle15Circle$LT$C$GT$3new17h799cd9b852f2d147E:

00000000 <embedded_graphics::primitives::circle::Circle<C>::new>:
_ZN17embedded_graphics10primitives6circle15Circle$LT$C$GT$3new17h799cd9b852f2d147E():
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:62
    pub fn new(center: Coord, radius: u32) -> Self {
   0:	b580      	push	{r7, lr}
   2:	b08a      	sub	sp, #40	; 0x28
   4:	9104      	str	r1, [sp, #16]
   6:	9205      	str	r2, [sp, #20]
   8:	9306      	str	r3, [sp, #24]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:64
            center,
   a:	9904      	ldr	r1, [sp, #16]
   c:	9a05      	ldr	r2, [sp, #20]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:65
            radius,
   e:	9b06      	ldr	r3, [sp, #24]
  10:	f10d 0c1c 	add.w	ip, sp, #28
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:66
            style: Style::default(),
  14:	9003      	str	r0, [sp, #12]
  16:	4660      	mov	r0, ip
  18:	9102      	str	r1, [sp, #8]
  1a:	9201      	str	r2, [sp, #4]
  1c:	9300      	str	r3, [sp, #0]
  1e:	f7ff fffe 	bl	0 <<embedded_graphics::style::Style<P> as core::default::Default>::default>
  22:	e7ff      	b.n	24 <embedded_graphics::primitives::circle::Circle<C>::new+0x24>
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:63
        Circle {
  24:	9802      	ldr	r0, [sp, #8]
  26:	9903      	ldr	r1, [sp, #12]
  28:	6008      	str	r0, [r1, #0]
  2a:	9a01      	ldr	r2, [sp, #4]
  2c:	604a      	str	r2, [r1, #4]
  2e:	9b00      	ldr	r3, [sp, #0]
  30:	608b      	str	r3, [r1, #8]
  32:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
  36:	f8a1 c014 	strh.w	ip, [r1, #20]
  3a:	f8dd c01c 	ldr.w	ip, [sp, #28]
  3e:	f8dd e020 	ldr.w	lr, [sp, #32]
  42:	f8c1 e010 	str.w	lr, [r1, #16]
  46:	f8c1 c00c 	str.w	ip, [r1, #12]
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-graphics-0.5.2/src/primitives/circle.rs:68
    }
  4a:	b00a      	add	sp, #40	; 0x28
  4c:	bd80      	pop	{r7, pc}

app-64de0327356ea83b.4br1ws4odbst9zpv.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 4br1ws4odbst9zpv
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
00000097 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
0000009e l       .debug_str	00000000 
000000a6 l       .debug_str	00000000 
000000aa l       .debug_str	00000000 
000000b3 l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c4 l       .debug_str	00000000 
000000ca l       .debug_str	00000000 
000000d0 l       .debug_str	00000000 
000000d5 l       .debug_str	00000000 
000000dd l       .debug_str	00000000 
000000e2 l       .debug_str	00000000 
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hbefc56996e173af8E	0000000c app::app_sensor::SENSOR_DEVICE
00000000 l    d  .rodata..Lanon.d41d8cd98f00b204e9800998ecf8427e.0	00000000 .rodata..Lanon.d41d8cd98f00b204e9800998ecf8427e.0
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hbefc56996e173af8E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hbefc56996e173af8E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line



app-64de0327356ea83b.4ywj6h555ouoa23u.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 4ywj6h555ouoa23u
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
00000077 l       .debug_str	00000000 
00000084 l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
00000097 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
0000009f l       .debug_str	00000000 
000000a3 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000df l       .debug_str	00000000 
000000eb l       .debug_str	00000000 
000000f1 l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
0000013b l       .debug_str	00000000 
0000013d l       .debug_str	00000000 
00000141 l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
0000014a l       .debug_str	00000000 
0000014d l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
0000016c l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
00000186 l       .debug_str	00000000 
00000190 l       .debug_str	00000000 
0000019f l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001d9 l       .debug_str	00000000 
00000207 l       .debug_str	00000000 
00000213 l       .debug_str	00000000 
0000021a l       .debug_str	00000000 
0000021d l       .debug_str	00000000 
00000227 l       .debug_str	00000000 
0000022d l       .debug_str	00000000 
00000232 l       .debug_str	00000000 
00000239 l       .debug_str	00000000 
0000023d l       .debug_str	00000000 
00000242 l       .debug_str	00000000 
00000264 l       .debug_str	00000000 
0000029c l       .debug_str	00000000 
0000029e l       .debug_str	00000000 
000002a3 l       .debug_str	00000000 
000002a7 l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002ee l       .debug_str	00000000 
000002f2 l       .debug_str	00000000 
000002fd l       .debug_str	00000000 
00000308 l       .debug_str	00000000 
0000030f l       .debug_str	00000000 
00000326 l       .debug_str	00000000 
0000032e l       .debug_str	00000000 
00000338 l       .debug_str	00000000 
0000034f l       .debug_str	00000000 
00000358 l       .debug_str	00000000 
0000038f l       .debug_str	00000000 
00000398 l       .debug_str	00000000 
0000039b l       .debug_str	00000000 
000003a3 l       .debug_str	00000000 
000003a7 l       .debug_str	00000000 
000003ae l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003ca l       .debug_str	00000000 
000003fd l       .debug_str	00000000 
00000408 l       .debug_str	00000000 
0000043e l       .debug_str	00000000 
00000445 l       .debug_str	00000000 
0000044d l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
00000463 l       .debug_str	00000000 
00000470 l       .debug_str	00000000 
0000047b l       .debug_str	00000000 
00000483 l       .debug_str	00000000 
0000048e l       .debug_str	00000000 
00000499 l       .debug_str	00000000 
000004a3 l       .debug_str	00000000 
000004ae l       .debug_str	00000000 
000004b9 l       .debug_str	00000000 
000004c6 l       .debug_str	00000000 
000004d2 l       .debug_str	00000000 
000004df l       .debug_str	00000000 
000004ed l       .debug_str	00000000 
000004f7 l       .debug_str	00000000 
00000504 l       .debug_str	00000000 
00000510 l       .debug_str	00000000 
00000514 l       .debug_str	00000000 
00000517 l       .debug_str	00000000 
0000051a l       .debug_str	00000000 
0000051f l       .debug_str	00000000 
00000525 l       .debug_str	00000000 
0000052c l       .debug_str	00000000 
00000534 l       .debug_str	00000000 
0000053e l       .debug_str	00000000 
00000541 l       .debug_str	00000000 
00000545 l       .debug_str	00000000 
0000054c l       .debug_str	00000000 
0000058a l       .debug_str	00000000 
0000059d l       .debug_str	00000000 
000005a0 l       .debug_str	00000000 
000005a2 l       .debug_str	00000000 
000005ca l       .debug_str	00000000 
0000060d l       .debug_str	00000000 
00000625 l       .debug_str	00000000 
00000665 l       .debug_str	00000000 
0000067a l       .debug_str	00000000 
000006b4 l       .debug_str	00000000 
000006c3 l       .debug_str	00000000 
00000702 l       .debug_str	00000000 
00000716 l       .debug_str	00000000 
0000071a l       .debug_str	00000000 
0000071d l       .debug_str	00000000 
00000726 l       .debug_str	00000000 
0000072b l       .debug_str	00000000 
00000735 l       .debug_str	00000000 
0000073a l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
00000745 l       .debug_str	00000000 
0000074a l       .debug_str	00000000 
00000751 l       .debug_str	00000000 
0000075a l       .debug_str	00000000 
00000764 l       .debug_str	00000000 
0000076b l       .debug_str	00000000 
00000771 l       .debug_str	00000000 
00000776 l       .debug_str	00000000 
00000782 l       .debug_str	00000000 
0000078a l       .debug_str	00000000 
00000793 l       .debug_str	00000000 
00000798 l       .debug_str	00000000 
0000079b l       .debug_str	00000000 
000007a4 l       .debug_str	00000000 
000007ab l       .debug_str	00000000 
000007b0 l       .debug_str	00000000 
000007b5 l       .debug_str	00000000 
000007bb l       .debug_str	00000000 
000007c1 l       .debug_str	00000000 
000007cb l       .debug_str	00000000 
000007ce l       .debug_str	00000000 
000007d4 l       .debug_str	00000000 
000007de l       .debug_str	00000000 
000007e6 l       .debug_str	00000000 
000007ec l       .debug_str	00000000 
000007f2 l       .debug_str	00000000 
000007fd l       .debug_str	00000000 
00000806 l       .debug_str	00000000 
00000829 l       .debug_str	00000000 
00000848 l       .debug_str	00000000 
0000086f l       .debug_str	00000000 
00000874 l       .debug_str	00000000 
0000087a l       .debug_str	00000000 
00000880 l       .debug_str	00000000 
0000088f l       .debug_str	00000000 
00000896 l       .debug_str	00000000 
0000089a l       .debug_str	00000000 
000008a3 l       .debug_str	00000000 
000008ab l       .debug_str	00000000 
000008b2 l       .debug_str	00000000 
000008be l       .debug_str	00000000 
000008ca l       .debug_str	00000000 
000008e3 l       .debug_str	00000000 
000008e8 l       .debug_str	00000000 
000008f9 l       .debug_str	00000000 
00000903 l       .debug_str	00000000 
00000911 l       .debug_str	00000000 
0000091c l       .debug_str	00000000 
00000923 l       .debug_str	00000000 
00000929 l       .debug_str	00000000 
0000092d l       .debug_str	00000000 
00000936 l       .debug_str	00000000 
00000955 l       .debug_str	00000000 
00000959 l       .debug_str	00000000 
00000961 l       .debug_str	00000000 
00000978 l       .debug_str	00000000 
0000099c l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000009c2 l       .debug_str	00000000 
000009dc l       .debug_str	00000000 
00000a3a l       .debug_str	00000000 
00000a45 l       .debug_str	00000000 
00000a62 l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
00000a85 l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
00000a9f l       .debug_str	00000000 
00000aa5 l       .debug_str	00000000 
00000aaf l       .debug_str	00000000 
00000aba l       .debug_str	00000000 
00000ac3 l       .debug_str	00000000 
00000ace l       .debug_str	00000000 
00000ada l       .debug_str	00000000 
00000ae3 l       .debug_str	00000000 
00000aea l       .debug_str	00000000 
00000af2 l       .debug_str	00000000 
00000afa l       .debug_str	00000000 
00000b04 l       .debug_str	00000000 
00000b0a l       .debug_str	00000000 
00000b11 l       .debug_str	00000000 
00000b18 l       .debug_str	00000000 
00000b45 l       .debug_str	00000000 
00000b7a l       .debug_str	00000000 
00000b80 l       .debug_str	00000000 
00000b86 l       .debug_str	00000000 
00000b95 l       .debug_str	00000000 
00000ba5 l       .debug_str	00000000 
00000bb5 l       .debug_str	00000000 
00000bbd l       .debug_str	00000000 
00000be6 l       .debug_str	00000000 
00000c44 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000cb1 l       .debug_str	00000000 
00000cb9 l       .debug_str	00000000 
00000cc2 l       .debug_str	00000000 
00000ce0 l       .debug_str	00000000 
00000cf0 l       .debug_str	00000000 
00000cfe l       .debug_str	00000000 
00000d09 l       .debug_str	00000000 
00000d16 l       .debug_str	00000000 
00000d25 l       .debug_str	00000000 
00000d3b l       .debug_str	00000000 
00000d45 l       .debug_str	00000000 
00000d4e l       .debug_str	00000000 
00000d57 l       .debug_str	00000000 
00000d7d l       .debug_str	00000000 
00000d93 l       .debug_str	00000000 
00000d9e l       .debug_str	00000000 
00000db4 l       .debug_str	00000000 
00000dbc l       .debug_str	00000000 
00000ddd l       .debug_str	00000000 
00000de6 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000dfa l       .debug_str	00000000 
00000e04 l       .debug_str	00000000 
00000e2b l       .debug_str	00000000 
00000e43 l       .debug_str	00000000 
00000e4d l       .debug_str	00000000 
00000e70 l       .debug_str	00000000 
00000e77 l       .debug_str	00000000 
00000e7c l       .debug_str	00000000 
00000e82 l       .debug_str	00000000 
00000e88 l       .debug_str	00000000 
00000e8c l       .debug_str	00000000 
00000e99 l       .debug_str	00000000 
00000ea0 l       .debug_str	00000000 
00000ea4 l       .debug_str	00000000 
00000ea6 l       .debug_str	00000000 
00000eab l       .debug_str	00000000 
00000ed2 l       .debug_str	00000000 
00000eda l       .debug_str	00000000 
00000ee1 l       .debug_str	00000000 
00000ee7 l       .debug_str	00000000 
00000eee l       .debug_str	00000000 
00000ef4 l       .debug_str	00000000 
00000ef9 l       .debug_str	00000000 
00000f08 l       .debug_str	00000000 
00000f16 l       .debug_str	00000000 
00000f20 l       .debug_str	00000000 
00000f25 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.0	00000012 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.0
00000000 l     O .rodata.cst4	00000004 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.1
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.10	00000004 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.10
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.12	00000004 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.12
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.14	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.14
00000000 l     O .rodata.cst8	00000008 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.15
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.16	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.16
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.17	0000000e .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.17
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.18	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.18
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.19	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.19
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.2	00000004 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.2
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.20	00000013 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.20
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.21	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.21
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.22	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.22
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.23	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.23
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.24	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.24
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.25	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.25
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.26	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.26
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.27	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.27
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.28	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.28
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.29	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.29
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.30	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.30
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.31	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.31
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.32	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.32
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.33	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.33
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.34	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.34
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.35	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.35
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.36	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.36
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.37	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.37
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.38	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.38
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.39	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.39
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.40	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.40
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.41	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.41
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.42	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.42
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.43	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.43
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.44	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.44
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.45	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.45
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.46	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.46
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.47	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.47
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.48	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.48
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.49	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.49
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.50	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.50
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.51	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.51
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.52	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.52
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.53	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.53
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.54	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.54
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.55	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.55
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.56	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.56
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.57	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.57
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.58	00000007 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.58
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.59	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.59
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.60	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.60
00000008 l     O .rodata.cst8	00000008 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.61
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.62	00000010 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.62
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.63	00000009 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.63
00000000 l     O .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.7	00000004 .Lanon.338d0483c01d23e6a22b8791b7cbaa8a.7
00000000 l     O .bss._ZN3app12touch_sensor10I2C_BUFFER17h949d99f33b407be9E	00000001 app::touch_sensor::I2C_BUFFER
00000000 l     O .bss._ZN3app12touch_sensor10TOUCH_DATA17h32f1cff0a5ee3110E	00000052 app::touch_sensor::TOUCH_DATA
00000000 l     O .bss._ZN3app12touch_sensor11TOUCH_DELAY17h8edbb84413749f38E	00000000 app::touch_sensor::TOUCH_DELAY
00000000 l     O .bss._ZN3app12touch_sensor11TOUCH_EVENT17h52039241eaa519dcE	00000010 app::touch_sensor::TOUCH_EVENT
00000000 l     O .bss._ZN3app12touch_sensor11TOUCH_RESET17hff499e904a2cb3e1E	00000004 app::touch_sensor::TOUCH_RESET
00000000 l     F .text._ZN3app12touch_sensor14read_touchdata17h5ebe7c47a4a8f067E	00000766 app::touch_sensor::read_touchdata
00000000 l     F .text._ZN3app12touch_sensor19read_register_range17h519f050f1483bae5E	0000019a app::touch_sensor::read_register_range
00000000 l     F .text._ZN3app12touch_sensor20touch_event_callback17h7837b5d44e650745E	00000136 app::touch_sensor::touch_event_callback
00000000 l     F .text._ZN3app12touch_sensor23touch_interrupt_handler17h074223758f63fa5eE	0000004a app::touch_sensor::touch_interrupt_handler
00000000 l     O .bss._ZN3app12touch_sensor3buf17h79780ffe30c9f49aE	0000003f app::touch_sensor::buf
00000000 l     O .bss._ZN3app12touch_sensor8I2C_DATA17h31d6d68748a3216cE	00000008 app::touch_sensor::I2C_DATA
00000000 l     O .rodata.str.0	00000021 str.0
00000000 l     O .rodata.str.1	0000001c str.1
00000000 l    d  .text._ZN3app12touch_sensor18start_touch_sensor17h4df4eeb6c3dc4f33E	00000000 .text._ZN3app12touch_sensor18start_touch_sensor17h4df4eeb6c3dc4f33E
00000000 l    d  .text._ZN3app12touch_sensor23touch_interrupt_handler17h074223758f63fa5eE	00000000 .text._ZN3app12touch_sensor23touch_interrupt_handler17h074223758f63fa5eE
00000000 l    d  .text._ZN3app12touch_sensor20touch_event_callback17h7837b5d44e650745E	00000000 .text._ZN3app12touch_sensor20touch_event_callback17h7837b5d44e650745E
00000000 l    d  .text._ZN3app12touch_sensor14read_touchdata17h5ebe7c47a4a8f067E	00000000 .text._ZN3app12touch_sensor14read_touchdata17h5ebe7c47a4a8f067E
00000000 l    d  .text._ZN3app12touch_sensor19read_register_range17h519f050f1483bae5E	00000000 .text._ZN3app12touch_sensor19read_register_range17h519f050f1483bae5E
00000000 l    d  .bss._ZN3app12touch_sensor11TOUCH_RESET17hff499e904a2cb3e1E	00000000 .bss._ZN3app12touch_sensor11TOUCH_RESET17hff499e904a2cb3e1E
00000000 l    d  .bss._ZN3app12touch_sensor11TOUCH_DELAY17h8edbb84413749f38E	00000000 .bss._ZN3app12touch_sensor11TOUCH_DELAY17h8edbb84413749f38E
00000000 l    d  .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.3	00000000 .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.3
00000000 l    d  .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.4	00000000 .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.4
00000000 l    d  .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.5	00000000 .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.5
00000000 l    d  .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.6	00000000 .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.6
00000000 l    d  .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.8	00000000 .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.8
00000000 l    d  .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.9	00000000 .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.9
00000000 l    d  .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.11	00000000 .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.11
00000000 l    d  .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.13	00000000 .rodata..Lanon.338d0483c01d23e6a22b8791b7cbaa8a.13
00000000 l    d  .bss._ZN3app12touch_sensor10TOUCH_DATA17h32f1cff0a5ee3110E	00000000 .bss._ZN3app12touch_sensor10TOUCH_DATA17h32f1cff0a5ee3110E
00000000 l    d  .bss._ZN3app12touch_sensor3buf17h79780ffe30c9f49aE	00000000 .bss._ZN3app12touch_sensor3buf17h79780ffe30c9f49aE
00000000 l    d  .bss._ZN3app12touch_sensor11TOUCH_EVENT17h52039241eaa519dcE	00000000 .bss._ZN3app12touch_sensor11TOUCH_EVENT17h52039241eaa519dcE
00000000 l    d  .bss._ZN3app12touch_sensor8I2C_DATA17h31d6d68748a3216cE	00000000 .bss._ZN3app12touch_sensor8I2C_DATA17h31d6d68748a3216cE
00000000 l    d  .bss._ZN3app12touch_sensor10I2C_BUFFER17h949d99f33b407be9E	00000000 .bss._ZN3app12touch_sensor10I2C_BUFFER17h949d99f33b407be9E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN3app12touch_sensor18start_touch_sensor17h4df4eeb6c3dc4f33E	0000027a .hidden app::touch_sensor::start_touch_sensor
00000000         *UND*	00000000 <&T as core::fmt::Debug>::fmt
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 core::fmt::ArgumentV1::new
00000000         *UND*	00000000 .hidden core::fmt::Arguments::new_v1
00000000         *UND*	00000000 core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
00000000         *UND*	00000000 core::panic::Location::caller
00000000         *UND*	00000000 core::slice::<impl [T]>::as_mut_ptr
00000000         *UND*	00000000 core::slice::<impl [T]>::len
00000000         *UND*	00000000 core::result::Result<T,E>::expect
00000000         *UND*	00000000 core::result::Result<T,E>::expect
00000000         *UND*	00000000 core::panicking::panic_bounds_check
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <T as core::convert::From<T>>::from
00000000         *UND*	00000000 <core::fmt::Arguments as core::fmt::Display>::fmt
00000000         *UND*	00000000 druid::win_handler::handle_touch
00000000         *UND*	00000000 <I as core::iter::traits::collect::IntoIterator>::into_iter
00000000         *UND*	00000000 mynewt::hal::GPIO::init
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 mynewt::kernel::os::eventq_dflt_get
00000000         *UND*	00000000 <core::result::Result<T,E> as core::ops::try::Try>::from_error
00000000         *UND*	00000000 <core::result::Result<T,E> as core::ops::try::Try>::into_result
00000000         *UND*	00000000 <mynewt::hal::GPIO as embedded_hal::digital::v2::OutputPin>::set_low
00000000         *UND*	00000000 <mynewt::hal::GPIO as embedded_hal::digital::v2::OutputPin>::set_high
00000000         *UND*	00000000 <mynewt::hal::Delay as embedded_hal::blocking::delay::DelayMs<u8>>::delay_ms
00000000         *UND*	00000000 __aeabi_memclr
00000000         *UND*	00000000 __aeabi_memcpy
00000000         *UND*	00000000 hal_gpio_irq_enable
00000000         *UND*	00000000 hal_gpio_irq_init
00000000         *UND*	00000000 hal_i2c_master_read
00000000         *UND*	00000000 hal_i2c_master_write
00000000         *UND*	00000000 os_eventq_put



Disassembly of section .text._ZN3app12touch_sensor18start_touch_sensor17h4df4eeb6c3dc4f33E:

00000000 <app::touch_sensor::start_touch_sensor>:
_ZN3app12touch_sensor18start_touch_sensor17h4df4eeb6c3dc4f33E():
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:39
/// ```rust
/// let peripherals = nrf52::Peripherals::take().unwrap();
/// let nfcpins = peripherals.UICR.nfcpins.read().bits();
/// console::print("nfcpins = "); console::printhex(nfcpins as u8); console::print("\n");
/// ```
pub fn start_touch_sensor() -> MynewtResult<()> {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b0bc      	sub	sp, #240	; 0xf0
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:40
    console::print("Rust touch sensor\n");
   4:	f240 0000 	movw	r0, #0
   8:	f2c0 0000 	movt	r0, #0
   c:	2112      	movs	r1, #18
   e:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  12:	e7ff      	b.n	2 <app::touch_sensor::start_touch_sensor+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:43

    //  Init GPIO for the Reset Pin
    unsafe { TOUCH_RESET.init(TOUCH_RESET_PIN) ? };
  14:	f240 0000 	movw	r0, #0
  18:	f2c0 0000 	movt	r0, #0
  1c:	210a      	movs	r1, #10
  1e:	f7ff fffe 	bl	0 <mynewt::hal::GPIO::init>
  22:	9010      	str	r0, [sp, #64]	; 0x40
  24:	e7ff      	b.n	26 <app::touch_sensor::start_touch_sensor+0x26>
  26:	9810      	ldr	r0, [sp, #64]	; 0x40
  28:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
  2c:	9012      	str	r0, [sp, #72]	; 0x48
  2e:	e7ff      	b.n	30 <app::touch_sensor::start_touch_sensor+0x30>
  30:	9812      	ldr	r0, [sp, #72]	; 0x48
  32:	1e41      	subs	r1, r0, #1
  34:	bf18      	it	ne
  36:	2101      	movne	r1, #1
  38:	2801      	cmp	r0, #1
  3a:	d012      	beq.n	62 <app::touch_sensor::start_touch_sensor+0x62>
  3c:	e7ff      	b.n	3e <app::touch_sensor::start_touch_sensor+0x3e>
  3e:	e000      	b.n	42 <app::touch_sensor::start_touch_sensor+0x42>
  40:	defe      	udf	#254	; 0xfe
  42:	9812      	ldr	r0, [sp, #72]	; 0x48
  44:	9013      	str	r0, [sp, #76]	; 0x4c
  46:	9813      	ldr	r0, [sp, #76]	; 0x4c
  48:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
  4c:	900f      	str	r0, [sp, #60]	; 0x3c
  4e:	e002      	b.n	56 <app::touch_sensor::start_touch_sensor+0x56>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:69
    assert_eq!(rc, 0, "IRQ init fail");

    //  Start monitoring for touch controller interrupts
    unsafe { hal::hal_gpio_irq_enable(TOUCH_INTERRUPT_PIN) };
    Ok(())
}
  50:	9811      	ldr	r0, [sp, #68]	; 0x44
  52:	b03c      	add	sp, #240	; 0xf0
  54:	bdb0      	pop	{r4, r5, r7, pc}
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:43
    unsafe { TOUCH_RESET.init(TOUCH_RESET_PIN) ? };
  56:	980f      	ldr	r0, [sp, #60]	; 0x3c
  58:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
  5c:	9011      	str	r0, [sp, #68]	; 0x44
  5e:	e7ff      	b.n	60 <app::touch_sensor::start_touch_sensor+0x60>
  60:	e7f6      	b.n	50 <app::touch_sensor::start_touch_sensor+0x50>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:47
        TOUCH_RESET.set_low() ? ;
  62:	f240 0000 	movw	r0, #0
  66:	f2c0 0000 	movt	r0, #0
  6a:	f7ff fffe 	bl	0 <<mynewt::hal::GPIO as embedded_hal::digital::v2::OutputPin>::set_low>
  6e:	900e      	str	r0, [sp, #56]	; 0x38
  70:	e7ff      	b.n	72 <app::touch_sensor::start_touch_sensor+0x72>
  72:	980e      	ldr	r0, [sp, #56]	; 0x38
  74:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
  78:	9015      	str	r0, [sp, #84]	; 0x54
  7a:	e7ff      	b.n	7c <app::touch_sensor::start_touch_sensor+0x7c>
  7c:	9815      	ldr	r0, [sp, #84]	; 0x54
  7e:	1e41      	subs	r1, r0, #1
  80:	bf18      	it	ne
  82:	2101      	movne	r1, #1
  84:	2801      	cmp	r0, #1
  86:	d010      	beq.n	aa <app::touch_sensor::start_touch_sensor+0xaa>
  88:	e7ff      	b.n	8a <app::touch_sensor::start_touch_sensor+0x8a>
  8a:	e000      	b.n	8e <app::touch_sensor::start_touch_sensor+0x8e>
  8c:	defe      	udf	#254	; 0xfe
  8e:	9815      	ldr	r0, [sp, #84]	; 0x54
  90:	9016      	str	r0, [sp, #88]	; 0x58
  92:	9816      	ldr	r0, [sp, #88]	; 0x58
  94:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
  98:	900d      	str	r0, [sp, #52]	; 0x34
  9a:	e7ff      	b.n	9c <app::touch_sensor::start_touch_sensor+0x9c>
  9c:	980d      	ldr	r0, [sp, #52]	; 0x34
  9e:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
  a2:	9011      	str	r0, [sp, #68]	; 0x44
  a4:	e7ff      	b.n	a6 <app::touch_sensor::start_touch_sensor+0xa6>
  a6:	e7ff      	b.n	a8 <app::touch_sensor::start_touch_sensor+0xa8>
  a8:	e7d2      	b.n	50 <app::touch_sensor::start_touch_sensor+0x50>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:48
        TOUCH_DELAY.delay_ms(20);
  aa:	f240 0000 	movw	r0, #0
  ae:	f2c0 0000 	movt	r0, #0
  b2:	2114      	movs	r1, #20
  b4:	f7ff fffe 	bl	0 <<mynewt::hal::Delay as embedded_hal::blocking::delay::DelayMs<u8>>::delay_ms>
  b8:	e7ff      	b.n	2 <app::touch_sensor::start_touch_sensor+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:49
        TOUCH_RESET.set_high() ? ;
  ba:	f240 0000 	movw	r0, #0
  be:	f2c0 0000 	movt	r0, #0
  c2:	f7ff fffe 	bl	0 <<mynewt::hal::GPIO as embedded_hal::digital::v2::OutputPin>::set_high>
  c6:	900c      	str	r0, [sp, #48]	; 0x30
  c8:	e7ff      	b.n	ca <app::touch_sensor::start_touch_sensor+0xca>
  ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  cc:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::into_result>
  d0:	9018      	str	r0, [sp, #96]	; 0x60
  d2:	e7ff      	b.n	d4 <app::touch_sensor::start_touch_sensor+0xd4>
  d4:	9818      	ldr	r0, [sp, #96]	; 0x60
  d6:	1e41      	subs	r1, r0, #1
  d8:	bf18      	it	ne
  da:	2101      	movne	r1, #1
  dc:	2801      	cmp	r0, #1
  de:	d00f      	beq.n	100 <app::touch_sensor::start_touch_sensor+0x100>
  e0:	e7ff      	b.n	e2 <app::touch_sensor::start_touch_sensor+0xe2>
  e2:	e000      	b.n	e6 <app::touch_sensor::start_touch_sensor+0xe6>
  e4:	defe      	udf	#254	; 0xfe
  e6:	9818      	ldr	r0, [sp, #96]	; 0x60
  e8:	9019      	str	r0, [sp, #100]	; 0x64
  ea:	9819      	ldr	r0, [sp, #100]	; 0x64
  ec:	f7ff fffe 	bl	0 <<T as core::convert::From<T>>::from>
  f0:	900b      	str	r0, [sp, #44]	; 0x2c
  f2:	e7ff      	b.n	f4 <app::touch_sensor::start_touch_sensor+0xf4>
  f4:	980b      	ldr	r0, [sp, #44]	; 0x2c
  f6:	f7ff fffe 	bl	0 <<core::result::Result<T,E> as core::ops::try::Try>::from_error>
  fa:	9011      	str	r0, [sp, #68]	; 0x44
  fc:	e7ff      	b.n	fe <app::touch_sensor::start_touch_sensor+0xfe>
  fe:	e7d3      	b.n	a8 <app::touch_sensor::start_touch_sensor+0xa8>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:50
        TOUCH_DELAY.delay_ms(200); TOUCH_DELAY.delay_ms(200);    
 100:	f240 0000 	movw	r0, #0
 104:	f2c0 0000 	movt	r0, #0
 108:	21c8      	movs	r1, #200	; 0xc8
 10a:	f7ff fffe 	bl	0 <<mynewt::hal::Delay as embedded_hal::blocking::delay::DelayMs<u8>>::delay_ms>
 10e:	e7ff      	b.n	2 <app::touch_sensor::start_touch_sensor+0x2>
 110:	f240 0000 	movw	r0, #0
 114:	f2c0 0000 	movt	r0, #0
 118:	21c8      	movs	r1, #200	; 0xc8
 11a:	f7ff fffe 	bl	0 <<mynewt::hal::Delay as embedded_hal::blocking::delay::DelayMs<u8>>::delay_ms>
 11e:	e7ff      	b.n	2 <app::touch_sensor::start_touch_sensor+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:54
    unsafe { TOUCH_EVENT.ev_cb = Some( touch_event_callback ) };
 120:	f240 0000 	movw	r0, #0
 124:	f2c0 0000 	movt	r0, #0
 128:	901b      	str	r0, [sp, #108]	; 0x6c
 12a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 12c:	f240 0100 	movw	r1, #0
 130:	f2c0 0100 	movt	r1, #0
 134:	6048      	str	r0, [r1, #4]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:59
        Some( touch_interrupt_handler ),  //  Call `touch_interrupt_handler()` upon detecting interrupt
 136:	f240 0000 	movw	r0, #0
 13a:	f2c0 0000 	movt	r0, #0
 13e:	901d      	str	r0, [sp, #116]	; 0x74
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:60
        core::ptr::null_mut(),            //  No arguments for `touch_interrupt_handler()`
 140:	e7ff      	b.n	142 <app::touch_sensor::start_touch_sensor+0x142>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:57
    let rc = unsafe { hal::hal_gpio_irq_init(
 142:	991d      	ldr	r1, [sp, #116]	; 0x74
 144:	4668      	mov	r0, sp
 146:	2201      	movs	r2, #1
 148:	6002      	str	r2, [r0, #0]
 14a:	201c      	movs	r0, #28
 14c:	2200      	movs	r2, #0
 14e:	2302      	movs	r3, #2
 150:	f7ff fffe 	bl	0 <hal_gpio_irq_init>
 154:	901c      	str	r0, [sp, #112]	; 0x70
 156:	e7ff      	b.n	158 <app::touch_sensor::start_touch_sensor+0x158>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:64
    assert_eq!(rc, 0, "IRQ init fail");
 158:	f240 0000 	movw	r0, #0
 15c:	f2c0 0000 	movt	r0, #0
 160:	6800      	ldr	r0, [r0, #0]
 162:	a91c      	add	r1, sp, #112	; 0x70
 164:	911e      	str	r1, [sp, #120]	; 0x78
 166:	901f      	str	r0, [sp, #124]	; 0x7c
 168:	981e      	ldr	r0, [sp, #120]	; 0x78
 16a:	9020      	str	r0, [sp, #128]	; 0x80
 16c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 16e:	9021      	str	r0, [sp, #132]	; 0x84
 170:	9820      	ldr	r0, [sp, #128]	; 0x80
 172:	6800      	ldr	r0, [r0, #0]
 174:	9921      	ldr	r1, [sp, #132]	; 0x84
 176:	6809      	ldr	r1, [r1, #0]
 178:	4288      	cmp	r0, r1
 17a:	d104      	bne.n	186 <app::touch_sensor::start_touch_sensor+0x186>
 17c:	e7ff      	b.n	17e <app::touch_sensor::start_touch_sensor+0x17e>
 17e:	201c      	movs	r0, #28
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:67
    unsafe { hal::hal_gpio_irq_enable(TOUCH_INTERRUPT_PIN) };
 180:	f7ff fffe 	bl	0 <hal_gpio_irq_enable>
 184:	e074      	b.n	ec <app::touch_sensor::start_touch_sensor+0xec>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:64
    assert_eq!(rc, 0, "IRQ init fail");
 186:	f240 0000 	movw	r0, #0
 18a:	f2c0 0000 	movt	r0, #0
 18e:	6801      	ldr	r1, [r0, #0]
 190:	9820      	ldr	r0, [sp, #128]	; 0x80
 192:	9031      	str	r0, [sp, #196]	; 0xc4
 194:	9821      	ldr	r0, [sp, #132]	; 0x84
 196:	9032      	str	r0, [sp, #200]	; 0xc8
 198:	f240 0000 	movw	r0, #0
 19c:	f2c0 0000 	movt	r0, #0
 1a0:	6800      	ldr	r0, [r0, #0]
 1a2:	f240 0200 	movw	r2, #0
 1a6:	f2c0 0200 	movt	r2, #0
 1aa:	6813      	ldr	r3, [r2, #0]
 1ac:	466a      	mov	r2, sp
 1ae:	f04f 0c00 	mov.w	ip, #0
 1b2:	f8c2 c000 	str.w	ip, [r2]
 1b6:	aa33      	add	r2, sp, #204	; 0xcc
 1b8:	f04f 0c01 	mov.w	ip, #1
 1bc:	900a      	str	r0, [sp, #40]	; 0x28
 1be:	4610      	mov	r0, r2
 1c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 1c2:	9109      	str	r1, [sp, #36]	; 0x24
 1c4:	4611      	mov	r1, r2
 1c6:	4662      	mov	r2, ip
 1c8:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 1cc:	e7ff      	b.n	1ce <app::touch_sensor::start_touch_sensor+0x1ce>
 1ce:	a831      	add	r0, sp, #196	; 0xc4
 1d0:	902e      	str	r0, [sp, #184]	; 0xb8
 1d2:	a832      	add	r0, sp, #200	; 0xc8
 1d4:	902f      	str	r0, [sp, #188]	; 0xbc
 1d6:	a833      	add	r0, sp, #204	; 0xcc
 1d8:	9030      	str	r0, [sp, #192]	; 0xc0
 1da:	982e      	ldr	r0, [sp, #184]	; 0xb8
 1dc:	9039      	str	r0, [sp, #228]	; 0xe4
 1de:	982f      	ldr	r0, [sp, #188]	; 0xbc
 1e0:	903a      	str	r0, [sp, #232]	; 0xe8
 1e2:	9830      	ldr	r0, [sp, #192]	; 0xc0
 1e4:	903b      	str	r0, [sp, #236]	; 0xec
 1e6:	9839      	ldr	r0, [sp, #228]	; 0xe4
 1e8:	f240 0100 	movw	r1, #0
 1ec:	f2c0 0100 	movt	r1, #0
 1f0:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 1f4:	9008      	str	r0, [sp, #32]
 1f6:	9107      	str	r1, [sp, #28]
 1f8:	e7ff      	b.n	1fa <app::touch_sensor::start_touch_sensor+0x1fa>
 1fa:	983a      	ldr	r0, [sp, #232]	; 0xe8
 1fc:	f240 0100 	movw	r1, #0
 200:	f2c0 0100 	movt	r1, #0
 204:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 208:	9006      	str	r0, [sp, #24]
 20a:	9105      	str	r1, [sp, #20]
 20c:	e7ff      	b.n	20e <app::touch_sensor::start_touch_sensor+0x20e>
 20e:	983b      	ldr	r0, [sp, #236]	; 0xec
 210:	f240 0100 	movw	r1, #0
 214:	f2c0 0100 	movt	r1, #0
 218:	f7ff fffe 	bl	0 <core::fmt::ArgumentV1::new>
 21c:	9004      	str	r0, [sp, #16]
 21e:	9103      	str	r1, [sp, #12]
 220:	e7ff      	b.n	222 <app::touch_sensor::start_touch_sensor+0x222>
 222:	9808      	ldr	r0, [sp, #32]
 224:	9028      	str	r0, [sp, #160]	; 0xa0
 226:	9907      	ldr	r1, [sp, #28]
 228:	9129      	str	r1, [sp, #164]	; 0xa4
 22a:	9a06      	ldr	r2, [sp, #24]
 22c:	922a      	str	r2, [sp, #168]	; 0xa8
 22e:	9b05      	ldr	r3, [sp, #20]
 230:	932b      	str	r3, [sp, #172]	; 0xac
 232:	f8dd c010 	ldr.w	ip, [sp, #16]
 236:	f8cd c0b0 	str.w	ip, [sp, #176]	; 0xb0
 23a:	f8dd e00c 	ldr.w	lr, [sp, #12]
 23e:	f8cd e0b4 	str.w	lr, [sp, #180]	; 0xb4
 242:	466c      	mov	r4, sp
 244:	2503      	movs	r5, #3
 246:	6025      	str	r5, [r4, #0]
 248:	a822      	add	r0, sp, #136	; 0x88
 24a:	ab28      	add	r3, sp, #160	; 0xa0
 24c:	9909      	ldr	r1, [sp, #36]	; 0x24
 24e:	462a      	mov	r2, r5
 250:	f7ff fffe 	bl	0 <core::fmt::Arguments::new_v1>
 254:	e7ff      	b.n	2 <app::touch_sensor::start_touch_sensor+0x2>
 256:	f240 0000 	movw	r0, #0
 25a:	f2c0 0000 	movt	r0, #0
 25e:	f7ff fffe 	bl	0 <core::panic::Location::caller>
 262:	9002      	str	r0, [sp, #8]
 264:	e7ff      	b.n	266 <app::touch_sensor::start_touch_sensor+0x266>
 266:	a822      	add	r0, sp, #136	; 0x88
 268:	9902      	ldr	r1, [sp, #8]
 26a:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 26e:	defe      	udf	#254	; 0xfe
 270:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:68
    Ok(())
 272:	9011      	str	r0, [sp, #68]	; 0x44
 274:	2001      	movs	r0, #1
 276:	9011      	str	r0, [sp, #68]	; 0x44
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:69
}
 278:	e6ea      	b.n	50 <app::touch_sensor::start_touch_sensor+0x50>

Disassembly of section .text._ZN3app12touch_sensor23touch_interrupt_handler17h074223758f63fa5eE:

00000000 <app::touch_sensor::touch_interrupt_handler>:
_ZN3app12touch_sensor23touch_interrupt_handler17h074223758f63fa5eE():
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:72

/// Interrupt handler for the touch controller, triggered when a touch is detected
extern "C" fn touch_interrupt_handler(arg: *mut core::ffi::c_void) {
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	9000      	str	r0, [sp, #0]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:74
    //  We forward a touch event to the Default Event Queue for deferred processing.  Don't do any processing here.
    unsafe { TOUCH_EVENT.ev_arg = arg };
   6:	9800      	ldr	r0, [sp, #0]
   8:	f240 0100 	movw	r1, #0
   c:	f2c0 0100 	movt	r1, #0
  10:	6088      	str	r0, [r1, #8]
  12:	a802      	add	r0, sp, #8
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:76
    //  Fetch the Default Event Queue. TODO: Use dedicated Event Queue for higher priority processing.
    let queue = os::eventq_dflt_get()
  14:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_dflt_get>
  18:	e7ff      	b.n	2 <app::touch_sensor::touch_interrupt_handler+0x2>
  1a:	f240 0100 	movw	r1, #0
  1e:	f2c0 0100 	movt	r1, #0
  22:	f240 0300 	movw	r3, #0
  26:	f2c0 0300 	movt	r3, #0
  2a:	a802      	add	r0, sp, #8
  2c:	2208      	movs	r2, #8
  2e:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  32:	9001      	str	r0, [sp, #4]
  34:	e7ff      	b.n	36 <app::touch_sensor::touch_interrupt_handler+0x36>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:78
        .expect("GET fail");
    unsafe { os::os_eventq_put(queue, &mut TOUCH_EVENT) };  //  Trigger the callback function `touch_event_callback()`
  36:	9801      	ldr	r0, [sp, #4]
  38:	f240 0100 	movw	r1, #0
  3c:	f2c0 0100 	movt	r1, #0
  40:	f7ff fffe 	bl	0 <os_eventq_put>
  44:	e7ff      	b.n	46 <app::touch_sensor::touch_interrupt_handler+0x46>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:80
    //console::print("touch\n"); ////
}
  46:	b004      	add	sp, #16
  48:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN3app12touch_sensor20touch_event_callback17h7837b5d44e650745E:

00000000 <app::touch_sensor::touch_event_callback>:
_ZN3app12touch_sensor20touch_event_callback17h7837b5d44e650745E():
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:83

/// Callback for the touch event that is triggered when a touch is detected
extern "C" fn touch_event_callback(_event: *mut os_event) {
   0:	b580      	push	{r7, lr}
   2:	b090      	sub	sp, #64	; 0x40
   4:	9004      	str	r0, [sp, #16]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:87
    //  console::printhex(unsafe { os::os_time_get() } as u8); console::print(" touch\n");
    unsafe { 
        //  Fetch the touch data from the touch controller
        read_touchdata(&mut TOUCH_DATA)
   6:	f240 0000 	movw	r0, #0
   a:	f2c0 0000 	movt	r0, #0
   e:	f7ff fffe 	bl	0 <app::touch_sensor::touch_event_callback>
  12:	9003      	str	r0, [sp, #12]
  14:	e7ff      	b.n	16 <app::touch_sensor::touch_event_callback+0x16>
  16:	f240 0100 	movw	r1, #0
  1a:	f2c0 0100 	movt	r1, #0
  1e:	f240 0300 	movw	r3, #0
  22:	f2c0 0300 	movt	r3, #0
  26:	220e      	movs	r2, #14
  28:	9803      	ldr	r0, [sp, #12]
  2a:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  2e:	e7ff      	b.n	2 <app::touch_sensor::touch_event_callback+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:90
            .expect("touchdata fail");
        //  Handle each touch data info
        for i in 0..TOUCH_DATA.count as usize {
  30:	f240 0000 	movw	r0, #0
  34:	f2c0 0000 	movt	r0, #0
  38:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
  3c:	2100      	movs	r1, #0
  3e:	9105      	str	r1, [sp, #20]
  40:	9006      	str	r0, [sp, #24]
  42:	9805      	ldr	r0, [sp, #20]
  44:	9906      	ldr	r1, [sp, #24]
  46:	f7ff fffe 	bl	0 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
  4a:	9002      	str	r0, [sp, #8]
  4c:	9101      	str	r1, [sp, #4]
  4e:	e7ff      	b.n	50 <app::touch_sensor::touch_event_callback+0x50>
  50:	9802      	ldr	r0, [sp, #8]
  52:	9007      	str	r0, [sp, #28]
  54:	9901      	ldr	r1, [sp, #4]
  56:	9108      	str	r1, [sp, #32]
  58:	e7ff      	b.n	5a <app::touch_sensor::touch_event_callback+0x5a>
  5a:	a807      	add	r0, sp, #28
  5c:	f7ff fffe 	bl	0 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next>
  60:	910b      	str	r1, [sp, #44]	; 0x2c
  62:	900a      	str	r0, [sp, #40]	; 0x28
  64:	e7ff      	b.n	66 <app::touch_sensor::touch_event_callback+0x66>
  66:	980a      	ldr	r0, [sp, #40]	; 0x28
  68:	2800      	cmp	r0, #0
  6a:	d001      	beq.n	70 <app::touch_sensor::touch_event_callback+0x70>
  6c:	e7ff      	b.n	6e <app::touch_sensor::touch_event_callback+0x6e>
  6e:	e002      	b.n	76 <app::touch_sensor::touch_event_callback+0x76>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:129
            console::print(", x: "); console::printint(x as i32); 
            console::print(", y: "); console::printint(y as i32); console::print("\n");
        }
        console::flush();   
    } */
}
  70:	b010      	add	sp, #64	; 0x40
  72:	bd80      	pop	{r7, pc}
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:90
        for i in 0..TOUCH_DATA.count as usize {
  74:	defe      	udf	#254	; 0xfe
  76:	980b      	ldr	r0, [sp, #44]	; 0x2c
  78:	900c      	str	r0, [sp, #48]	; 0x30
  7a:	980c      	ldr	r0, [sp, #48]	; 0x30
  7c:	9009      	str	r0, [sp, #36]	; 0x24
  7e:	9809      	ldr	r0, [sp, #36]	; 0x24
  80:	900d      	str	r0, [sp, #52]	; 0x34
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:91
            let TouchInfo{ x, y, action, .. } = TOUCH_DATA.touches[i];
  82:	980d      	ldr	r0, [sp, #52]	; 0x34
  84:	2809      	cmp	r0, #9
  86:	9000      	str	r0, [sp, #0]
  88:	d84c      	bhi.n	124 <app::touch_sensor::touch_event_callback+0x124>
  8a:	e7ff      	b.n	8c <app::touch_sensor::touch_event_callback+0x8c>
  8c:	f240 0000 	movw	r0, #0
  90:	f2c0 0000 	movt	r0, #0
  94:	9900      	ldr	r1, [sp, #0]
  96:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
  9a:	f830 0031 	ldrh.w	r0, [r0, r1, lsl #3]
  9e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
  a2:	8850      	ldrh	r0, [r2, #2]
  a4:	f8ad 003a 	strh.w	r0, [sp, #58]	; 0x3a
  a8:	7910      	ldrb	r0, [r2, #4]
  aa:	f88d 003d 	strb.w	r0, [sp, #61]	; 0x3d
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:93
            if x == 0 && y == 0 { continue; }
  ae:	f8bd 0038 	ldrh.w	r0, [sp, #56]	; 0x38
  b2:	2800      	cmp	r0, #0
  b4:	d008      	beq.n	c8 <app::touch_sensor::touch_event_callback+0xc8>
  b6:	e003      	b.n	c0 <app::touch_sensor::touch_event_callback+0xc0>
  b8:	2001      	movs	r0, #1
  ba:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
  be:	e008      	b.n	d2 <app::touch_sensor::touch_event_callback+0xd2>
  c0:	2000      	movs	r0, #0
  c2:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
  c6:	e004      	b.n	d2 <app::touch_sensor::touch_event_callback+0xd2>
  c8:	f8bd 003a 	ldrh.w	r0, [sp, #58]	; 0x3a
  cc:	2800      	cmp	r0, #0
  ce:	d0f3      	beq.n	b8 <app::touch_sensor::touch_event_callback+0xb8>
  d0:	e7f6      	b.n	c0 <app::touch_sensor::touch_event_callback+0xc0>
  d2:	f89d 003e 	ldrb.w	r0, [sp, #62]	; 0x3e
  d6:	07c0      	lsls	r0, r0, #31
  d8:	2800      	cmp	r0, #0
  da:	d105      	bne.n	e8 <app::touch_sensor::touch_event_callback+0xe8>
  dc:	e7ff      	b.n	de <app::touch_sensor::touch_event_callback+0xde>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:95
            if action != 0 && action != 2 { continue; }
  de:	f89d 003d 	ldrb.w	r0, [sp, #61]	; 0x3d
  e2:	2800      	cmp	r0, #0
  e4:	d10a      	bne.n	fc <app::touch_sensor::touch_event_callback+0xfc>
  e6:	e005      	b.n	f4 <app::touch_sensor::touch_event_callback+0xf4>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:93
            if x == 0 && y == 0 { continue; }
  e8:	e7ff      	b.n	ea <app::touch_sensor::touch_event_callback+0xea>
  ea:	e7b6      	b.n	5a <app::touch_sensor::touch_event_callback+0x5a>
  ec:	2001      	movs	r0, #1
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:95
            if action != 0 && action != 2 { continue; }
  ee:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
  f2:	e008      	b.n	106 <app::touch_sensor::touch_event_callback+0x106>
  f4:	2000      	movs	r0, #0
  f6:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
  fa:	e004      	b.n	106 <app::touch_sensor::touch_event_callback+0x106>
  fc:	f89d 003d 	ldrb.w	r0, [sp, #61]	; 0x3d
 100:	2802      	cmp	r0, #2
 102:	d1f3      	bne.n	ec <app::touch_sensor::touch_event_callback+0xec>
 104:	e7f6      	b.n	f4 <app::touch_sensor::touch_event_callback+0xf4>
 106:	f89d 003f 	ldrb.w	r0, [sp, #63]	; 0x3f
 10a:	07c0      	lsls	r0, r0, #31
 10c:	2800      	cmp	r0, #0
 10e:	d107      	bne.n	120 <app::touch_sensor::touch_event_callback+0x120>
 110:	e7ff      	b.n	112 <app::touch_sensor::touch_event_callback+0x112>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:97
            druid::handle_touch(x, y);
 112:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 116:	f8bd 0038 	ldrh.w	r0, [sp, #56]	; 0x38
 11a:	f7ff fffe 	bl	0 <druid::win_handler::handle_touch>
 11e:	e000      	b.n	122 <app::touch_sensor::touch_event_callback+0x122>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:95
            if action != 0 && action != 2 { continue; }
 120:	e7e3      	b.n	ea <app::touch_sensor::touch_event_callback+0xea>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:90
        for i in 0..TOUCH_DATA.count as usize {
 122:	e79a      	b.n	5a <app::touch_sensor::touch_event_callback+0x5a>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:91
            let TouchInfo{ x, y, action, .. } = TOUCH_DATA.touches[i];
 124:	f240 0000 	movw	r0, #0
 128:	f2c0 0000 	movt	r0, #0
 12c:	220a      	movs	r2, #10
 12e:	9900      	ldr	r1, [sp, #0]
 130:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 134:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app12touch_sensor14read_touchdata17h5ebe7c47a4a8f067E:

00000000 <app::touch_sensor::read_touchdata>:
_ZN3app12touch_sensor14read_touchdata17h5ebe7c47a4a8f067E():
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:136
/// Touch data will be populated here
static mut TOUCH_DATA: TouchEventInfo = fill_zero!(TouchEventInfo);

/// Read touch controller data. This only works when the screen has been tapped and the touch controller wakes up.
/// Ported from https://github.com/lupyuen/hynitron_i2c_cst0xxse/blob/master/cst0xx_core.c#L407-L466
fn read_touchdata(data: &mut TouchEventInfo) -> MynewtResult<()> {
   0:	b580      	push	{r7, lr}
   2:	b0e2      	sub	sp, #392	; 0x188
   4:	902c      	str	r0, [sp, #176]	; 0xb0
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:137
    read_register_range(           //  Read the range of I2C registers...
   6:	4668      	mov	r0, sp
   8:	213f      	movs	r1, #63	; 0x3f
   a:	6001      	str	r1, [r0, #0]
   c:	f240 0300 	movw	r3, #0
  10:	f2c0 0300 	movt	r3, #0
  14:	2015      	movs	r0, #21
  16:	2200      	movs	r2, #0
  18:	912b      	str	r1, [sp, #172]	; 0xac
  1a:	4611      	mov	r1, r2
  1c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
  1e:	f7ff fffe 	bl	0 <app::touch_sensor::read_touchdata>
  22:	902a      	str	r0, [sp, #168]	; 0xa8
  24:	e7ff      	b.n	26 <app::touch_sensor::read_touchdata+0x26>
  26:	f240 0100 	movw	r1, #0
  2a:	f2c0 0100 	movt	r1, #0
  2e:	f240 0300 	movw	r3, #0
  32:	f2c0 0300 	movt	r3, #0
  36:	2213      	movs	r2, #19
  38:	982a      	ldr	r0, [sp, #168]	; 0xa8
  3a:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  3e:	e7ff      	b.n	40 <app::touch_sensor::read_touchdata+0x40>
  40:	f50d 7083 	add.w	r0, sp, #262	; 0x106
  44:	2152      	movs	r1, #82	; 0x52
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:143
        TOUCH_CONTROLLER_ADDRESS,  //  From the touch controller
        0,                         //  Starting from register 0
        POINT_READ_BUF as u8,      //  Number of registers to read
        unsafe { &mut buf }        //  Save the read data into `buf`
    ).expect("read touchdata fail");
    *data = fill_zero!(TouchEventInfo);
  46:	9029      	str	r0, [sp, #164]	; 0xa4
  48:	9128      	str	r1, [sp, #160]	; 0xa0
  4a:	f7ff fffe 	bl	0 <__aeabi_memclr>
  4e:	a82d      	add	r0, sp, #180	; 0xb4
  50:	9929      	ldr	r1, [sp, #164]	; 0xa4
  52:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  54:	f7ff fffe 	bl	0 <__aeabi_memcpy>
  58:	e7ff      	b.n	5a <app::touch_sensor::read_touchdata+0x5a>
  5a:	982c      	ldr	r0, [sp, #176]	; 0xb0
  5c:	a92d      	add	r1, sp, #180	; 0xb4
  5e:	2252      	movs	r2, #82	; 0x52
  60:	f7ff fffe 	bl	0 <__aeabi_memcpy>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:144
    data.point_num = unsafe { buf[FT_TOUCH_POINT_NUM] & 0x0F };
  64:	f240 0100 	movw	r1, #0
  68:	f2c0 0100 	movt	r1, #0
  6c:	7889      	ldrb	r1, [r1, #2]
  6e:	f001 010f 	and.w	r1, r1, #15
  72:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
  74:	f882 1051 	strb.w	r1, [r2, #81]	; 0x51
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:145
    data.count     = 0;
  78:	992c      	ldr	r1, [sp, #176]	; 0xb0
  7a:	2200      	movs	r2, #0
  7c:	f881 2050 	strb.w	r2, [r1, #80]	; 0x50
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:148

    //  Populate the first 5 touch points
    for i in 0..CFG_MAX_TOUCH_POINTS {
  80:	9256      	str	r2, [sp, #344]	; 0x158
  82:	2105      	movs	r1, #5
  84:	9157      	str	r1, [sp, #348]	; 0x15c
  86:	9956      	ldr	r1, [sp, #344]	; 0x158
  88:	9a57      	ldr	r2, [sp, #348]	; 0x15c
  8a:	9027      	str	r0, [sp, #156]	; 0x9c
  8c:	4608      	mov	r0, r1
  8e:	4611      	mov	r1, r2
  90:	f7ff fffe 	bl	0 <<I as core::iter::traits::collect::IntoIterator>::into_iter>
  94:	9026      	str	r0, [sp, #152]	; 0x98
  96:	9125      	str	r1, [sp, #148]	; 0x94
  98:	e7ff      	b.n	9a <app::touch_sensor::read_touchdata+0x9a>
  9a:	9826      	ldr	r0, [sp, #152]	; 0x98
  9c:	9058      	str	r0, [sp, #352]	; 0x160
  9e:	9925      	ldr	r1, [sp, #148]	; 0x94
  a0:	9159      	str	r1, [sp, #356]	; 0x164
  a2:	e7ff      	b.n	a4 <app::touch_sensor::read_touchdata+0xa4>
  a4:	a858      	add	r0, sp, #352	; 0x160
  a6:	f7ff fffe 	bl	0 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next>
  aa:	915c      	str	r1, [sp, #368]	; 0x170
  ac:	905b      	str	r0, [sp, #364]	; 0x16c
  ae:	e7ff      	b.n	b0 <app::touch_sensor::read_touchdata+0xb0>
  b0:	985b      	ldr	r0, [sp, #364]	; 0x16c
  b2:	2800      	cmp	r0, #0
  b4:	d001      	beq.n	ba <app::touch_sensor::read_touchdata+0xba>
  b6:	e7ff      	b.n	b8 <app::touch_sensor::read_touchdata+0xb8>
  b8:	e001      	b.n	be <app::touch_sensor::read_touchdata+0xbe>
  ba:	e00f      	b.n	dc <app::touch_sensor::read_touchdata+0xdc>
  bc:	defe      	udf	#254	; 0xfe
  be:	985c      	ldr	r0, [sp, #368]	; 0x170
  c0:	905d      	str	r0, [sp, #372]	; 0x174
  c2:	985d      	ldr	r0, [sp, #372]	; 0x174
  c4:	905a      	str	r0, [sp, #360]	; 0x168
  c6:	985a      	ldr	r0, [sp, #360]	; 0x168
  c8:	905e      	str	r0, [sp, #376]	; 0x178
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:149
        let pointid = unsafe { buf[HYN_TOUCH_ID_POS + HYN_TOUCH_STEP * i] } >> 4;
  ca:	985e      	ldr	r0, [sp, #376]	; 0x178
  cc:	2106      	movs	r1, #6
  ce:	fba1 0100 	umull	r0, r1, r1, r0
  d2:	2900      	cmp	r1, #0
  d4:	9024      	str	r0, [sp, #144]	; 0x90
  d6:	f040 81c9 	bne.w	46c <app::touch_sensor::read_touchdata+0x46c>
  da:	e002      	b.n	e2 <app::touch_sensor::read_touchdata+0xe2>
  dc:	2001      	movs	r0, #1
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:181
            && (data.point_num == 0) {
            break;
        }
    }
    Ok(())
}
  de:	b062      	add	sp, #392	; 0x188
  e0:	bd80      	pop	{r7, pc}
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:149
        let pointid = unsafe { buf[HYN_TOUCH_ID_POS + HYN_TOUCH_STEP * i] } >> 4;
  e2:	9824      	ldr	r0, [sp, #144]	; 0x90
  e4:	1d41      	adds	r1, r0, #5
  e6:	460a      	mov	r2, r1
  e8:	4281      	cmp	r1, r0
  ea:	9223      	str	r2, [sp, #140]	; 0x8c
  ec:	f0c0 81ca 	bcc.w	484 <app::touch_sensor::read_touchdata+0x484>
  f0:	e7ff      	b.n	f2 <app::touch_sensor::read_touchdata+0xf2>
  f2:	9823      	ldr	r0, [sp, #140]	; 0x8c
  f4:	283e      	cmp	r0, #62	; 0x3e
  f6:	f200 81d1 	bhi.w	49c <app::touch_sensor::read_touchdata+0x49c>
  fa:	e7ff      	b.n	2 <app::touch_sensor::read_touchdata+0x2>
  fc:	f240 0000 	movw	r0, #0
 100:	f2c0 0000 	movt	r0, #0
 104:	9923      	ldr	r1, [sp, #140]	; 0x8c
 106:	5c40      	ldrb	r0, [r0, r1]
 108:	0900      	lsrs	r0, r0, #4
 10a:	9022      	str	r0, [sp, #136]	; 0x88
 10c:	e7ff      	b.n	10e <app::touch_sensor::read_touchdata+0x10e>
 10e:	9822      	ldr	r0, [sp, #136]	; 0x88
 110:	f88d 017d 	strb.w	r0, [sp, #381]	; 0x17d
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:150
        if pointid >= HYN_MAX_ID { break; }
 114:	f89d 117d 	ldrb.w	r1, [sp, #381]	; 0x17d
 118:	290e      	cmp	r1, #14
 11a:	d80b      	bhi.n	134 <app::touch_sensor::read_touchdata+0x134>
 11c:	e7ff      	b.n	11e <app::touch_sensor::read_touchdata+0x11e>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:153
        data.count += 1;
 11e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 120:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 124:	3001      	adds	r0, #1
 126:	b2c1      	uxtb	r1, r0
 128:	4602      	mov	r2, r0
 12a:	4281      	cmp	r1, r0
 12c:	9221      	str	r2, [sp, #132]	; 0x84
 12e:	f040 81be 	bne.w	4ae <app::touch_sensor::read_touchdata+0x4ae>
 132:	e001      	b.n	138 <app::touch_sensor::read_touchdata+0x138>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:150
        if pointid >= HYN_MAX_ID { break; }
 134:	e7ff      	b.n	136 <app::touch_sensor::read_touchdata+0x136>
 136:	e7d1      	b.n	dc <app::touch_sensor::read_touchdata+0xdc>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:153
        data.count += 1;
 138:	982c      	ldr	r0, [sp, #176]	; 0xb0
 13a:	9921      	ldr	r1, [sp, #132]	; 0x84
 13c:	f880 1050 	strb.w	r1, [r0, #80]	; 0x50
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:154
        let x_high = unsafe { buf[HYN_TOUCH_X_H_POS + HYN_TOUCH_STEP * i] & 0x0F } as u16;
 140:	985e      	ldr	r0, [sp, #376]	; 0x178
 142:	2206      	movs	r2, #6
 144:	fba2 0200 	umull	r0, r2, r2, r0
 148:	2a00      	cmp	r2, #0
 14a:	9020      	str	r0, [sp, #128]	; 0x80
 14c:	f040 81bb 	bne.w	4c6 <app::touch_sensor::read_touchdata+0x4c6>
 150:	e7ff      	b.n	152 <app::touch_sensor::read_touchdata+0x152>
 152:	9820      	ldr	r0, [sp, #128]	; 0x80
 154:	1cc1      	adds	r1, r0, #3
 156:	460a      	mov	r2, r1
 158:	4281      	cmp	r1, r0
 15a:	921f      	str	r2, [sp, #124]	; 0x7c
 15c:	f0c0 81bf 	bcc.w	4de <app::touch_sensor::read_touchdata+0x4de>
 160:	e7ff      	b.n	162 <app::touch_sensor::read_touchdata+0x162>
 162:	981f      	ldr	r0, [sp, #124]	; 0x7c
 164:	283e      	cmp	r0, #62	; 0x3e
 166:	f200 81c6 	bhi.w	4f6 <app::touch_sensor::read_touchdata+0x4f6>
 16a:	e7ff      	b.n	2 <app::touch_sensor::read_touchdata+0x2>
 16c:	f240 0000 	movw	r0, #0
 170:	f2c0 0000 	movt	r0, #0
 174:	991f      	ldr	r1, [sp, #124]	; 0x7c
 176:	5c40      	ldrb	r0, [r0, r1]
 178:	f000 000f 	and.w	r0, r0, #15
 17c:	f8ad 017e 	strh.w	r0, [sp, #382]	; 0x17e
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:155
        let x_low  = unsafe { buf[HYN_TOUCH_X_L_POS + HYN_TOUCH_STEP * i] } as u16;
 180:	985e      	ldr	r0, [sp, #376]	; 0x178
 182:	2206      	movs	r2, #6
 184:	fba2 0200 	umull	r0, r2, r2, r0
 188:	2a00      	cmp	r2, #0
 18a:	901e      	str	r0, [sp, #120]	; 0x78
 18c:	f040 81bc 	bne.w	508 <app::touch_sensor::read_touchdata+0x508>
 190:	e7ff      	b.n	192 <app::touch_sensor::read_touchdata+0x192>
 192:	981e      	ldr	r0, [sp, #120]	; 0x78
 194:	1d01      	adds	r1, r0, #4
 196:	460a      	mov	r2, r1
 198:	4281      	cmp	r1, r0
 19a:	921d      	str	r2, [sp, #116]	; 0x74
 19c:	f0c0 81c0 	bcc.w	520 <app::touch_sensor::read_touchdata+0x520>
 1a0:	e7ff      	b.n	1a2 <app::touch_sensor::read_touchdata+0x1a2>
 1a2:	981d      	ldr	r0, [sp, #116]	; 0x74
 1a4:	283e      	cmp	r0, #62	; 0x3e
 1a6:	f200 81c7 	bhi.w	538 <app::touch_sensor::read_touchdata+0x538>
 1aa:	e7ff      	b.n	2 <app::touch_sensor::read_touchdata+0x2>
 1ac:	f240 0000 	movw	r0, #0
 1b0:	f2c0 0000 	movt	r0, #0
 1b4:	991d      	ldr	r1, [sp, #116]	; 0x74
 1b6:	5c40      	ldrb	r0, [r0, r1]
 1b8:	f8ad 0180 	strh.w	r0, [sp, #384]	; 0x180
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:156
        data.touches[i].x  = (x_high << 8) | x_low;
 1bc:	f8bd 017e 	ldrh.w	r0, [sp, #382]	; 0x17e
 1c0:	0200      	lsls	r0, r0, #8
 1c2:	901c      	str	r0, [sp, #112]	; 0x70
 1c4:	e7ff      	b.n	1c6 <app::touch_sensor::read_touchdata+0x1c6>
 1c6:	f8bd 0180 	ldrh.w	r0, [sp, #384]	; 0x180
 1ca:	995e      	ldr	r1, [sp, #376]	; 0x178
 1cc:	2909      	cmp	r1, #9
 1ce:	901b      	str	r0, [sp, #108]	; 0x6c
 1d0:	911a      	str	r1, [sp, #104]	; 0x68
 1d2:	f200 81ba 	bhi.w	54a <app::touch_sensor::read_touchdata+0x54a>
 1d6:	e7ff      	b.n	1d8 <app::touch_sensor::read_touchdata+0x1d8>
 1d8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 1da:	991c      	ldr	r1, [sp, #112]	; 0x70
 1dc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 1de:	ea41 0302 	orr.w	r3, r1, r2
 1e2:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
 1e6:	f820 303c 	strh.w	r3, [r0, ip, lsl #3]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:158
        let y_high = unsafe { buf[HYN_TOUCH_Y_H_POS + HYN_TOUCH_STEP * i] & 0x0F } as u16;
 1ea:	985e      	ldr	r0, [sp, #376]	; 0x178
 1ec:	2306      	movs	r3, #6
 1ee:	fba3 0300 	umull	r0, r3, r3, r0
 1f2:	2b00      	cmp	r3, #0
 1f4:	9019      	str	r0, [sp, #100]	; 0x64
 1f6:	f040 81b1 	bne.w	55c <app::touch_sensor::read_touchdata+0x55c>
 1fa:	e7ff      	b.n	1fc <app::touch_sensor::read_touchdata+0x1fc>
 1fc:	9819      	ldr	r0, [sp, #100]	; 0x64
 1fe:	1d41      	adds	r1, r0, #5
 200:	460a      	mov	r2, r1
 202:	4281      	cmp	r1, r0
 204:	9218      	str	r2, [sp, #96]	; 0x60
 206:	f0c0 81b5 	bcc.w	574 <app::touch_sensor::read_touchdata+0x574>
 20a:	e7ff      	b.n	20c <app::touch_sensor::read_touchdata+0x20c>
 20c:	9818      	ldr	r0, [sp, #96]	; 0x60
 20e:	283e      	cmp	r0, #62	; 0x3e
 210:	f200 81bc 	bhi.w	58c <app::touch_sensor::read_touchdata+0x58c>
 214:	e7ff      	b.n	2 <app::touch_sensor::read_touchdata+0x2>
 216:	f240 0000 	movw	r0, #0
 21a:	f2c0 0000 	movt	r0, #0
 21e:	9918      	ldr	r1, [sp, #96]	; 0x60
 220:	5c40      	ldrb	r0, [r0, r1]
 222:	f000 000f 	and.w	r0, r0, #15
 226:	f8ad 0182 	strh.w	r0, [sp, #386]	; 0x182
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:159
        let y_low  = unsafe { buf[HYN_TOUCH_Y_L_POS + HYN_TOUCH_STEP * i] } as u16;
 22a:	985e      	ldr	r0, [sp, #376]	; 0x178
 22c:	2206      	movs	r2, #6
 22e:	fba2 0200 	umull	r0, r2, r2, r0
 232:	2a00      	cmp	r2, #0
 234:	9017      	str	r0, [sp, #92]	; 0x5c
 236:	f040 81b2 	bne.w	59e <app::touch_sensor::read_touchdata+0x59e>
 23a:	e7ff      	b.n	23c <app::touch_sensor::read_touchdata+0x23c>
 23c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 23e:	1d81      	adds	r1, r0, #6
 240:	460a      	mov	r2, r1
 242:	4281      	cmp	r1, r0
 244:	9216      	str	r2, [sp, #88]	; 0x58
 246:	f0c0 81b6 	bcc.w	5b6 <app::touch_sensor::read_touchdata+0x5b6>
 24a:	e7ff      	b.n	24c <app::touch_sensor::read_touchdata+0x24c>
 24c:	9816      	ldr	r0, [sp, #88]	; 0x58
 24e:	283e      	cmp	r0, #62	; 0x3e
 250:	f200 81bd 	bhi.w	5ce <app::touch_sensor::read_touchdata+0x5ce>
 254:	e7ff      	b.n	2 <app::touch_sensor::read_touchdata+0x2>
 256:	f240 0000 	movw	r0, #0
 25a:	f2c0 0000 	movt	r0, #0
 25e:	9916      	ldr	r1, [sp, #88]	; 0x58
 260:	5c40      	ldrb	r0, [r0, r1]
 262:	f8ad 0184 	strh.w	r0, [sp, #388]	; 0x184
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:160
        data.touches[i].y  = (y_high << 8) | y_low;
 266:	f8bd 0182 	ldrh.w	r0, [sp, #386]	; 0x182
 26a:	0200      	lsls	r0, r0, #8
 26c:	9015      	str	r0, [sp, #84]	; 0x54
 26e:	e7ff      	b.n	270 <app::touch_sensor::read_touchdata+0x270>
 270:	f8bd 0184 	ldrh.w	r0, [sp, #388]	; 0x184
 274:	995e      	ldr	r1, [sp, #376]	; 0x178
 276:	2909      	cmp	r1, #9
 278:	9014      	str	r0, [sp, #80]	; 0x50
 27a:	9113      	str	r1, [sp, #76]	; 0x4c
 27c:	f200 81b0 	bhi.w	5e0 <app::touch_sensor::read_touchdata+0x5e0>
 280:	e7ff      	b.n	282 <app::touch_sensor::read_touchdata+0x282>
 282:	982c      	ldr	r0, [sp, #176]	; 0xb0
 284:	9913      	ldr	r1, [sp, #76]	; 0x4c
 286:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 28a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 28c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 28e:	ea42 0c03 	orr.w	ip, r2, r3
 292:	f8a0 c002 	strh.w	ip, [r0, #2]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:164
            unsafe { buf[HYN_TOUCH_EVENT_POS + HYN_TOUCH_STEP * i] } >> 6;
 296:	985e      	ldr	r0, [sp, #376]	; 0x178
 298:	f04f 0c06 	mov.w	ip, #6
 29c:	fbac 0c00 	umull	r0, ip, ip, r0
 2a0:	f1bc 0f00 	cmp.w	ip, #0
 2a4:	9012      	str	r0, [sp, #72]	; 0x48
 2a6:	f040 81a4 	bne.w	5f2 <app::touch_sensor::read_touchdata+0x5f2>
 2aa:	e7ff      	b.n	2ac <app::touch_sensor::read_touchdata+0x2ac>
 2ac:	9812      	ldr	r0, [sp, #72]	; 0x48
 2ae:	1cc1      	adds	r1, r0, #3
 2b0:	460a      	mov	r2, r1
 2b2:	4281      	cmp	r1, r0
 2b4:	9211      	str	r2, [sp, #68]	; 0x44
 2b6:	f0c0 81a8 	bcc.w	60a <app::touch_sensor::read_touchdata+0x60a>
 2ba:	e7ff      	b.n	2bc <app::touch_sensor::read_touchdata+0x2bc>
 2bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 2be:	283e      	cmp	r0, #62	; 0x3e
 2c0:	f200 81af 	bhi.w	622 <app::touch_sensor::read_touchdata+0x622>
 2c4:	e7ff      	b.n	2 <app::touch_sensor::read_touchdata+0x2>
 2c6:	f240 0000 	movw	r0, #0
 2ca:	f2c0 0000 	movt	r0, #0
 2ce:	9911      	ldr	r1, [sp, #68]	; 0x44
 2d0:	5c40      	ldrb	r0, [r0, r1]
 2d2:	0980      	lsrs	r0, r0, #6
 2d4:	9010      	str	r0, [sp, #64]	; 0x40
 2d6:	e7ff      	b.n	2d8 <app::touch_sensor::read_touchdata+0x2d8>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:163
        data.touches[i].action =
 2d8:	985e      	ldr	r0, [sp, #376]	; 0x178
 2da:	2809      	cmp	r0, #9
 2dc:	900f      	str	r0, [sp, #60]	; 0x3c
 2de:	f200 81a9 	bhi.w	634 <app::touch_sensor::read_touchdata+0x634>
 2e2:	e7ff      	b.n	2e4 <app::touch_sensor::read_touchdata+0x2e4>
 2e4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 2e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 2e8:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 2ec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 2ee:	7102      	strb	r2, [r0, #4]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:166
            unsafe { buf[HYN_TOUCH_ID_POS    + HYN_TOUCH_STEP * i] } >> 4;
 2f0:	985e      	ldr	r0, [sp, #376]	; 0x178
 2f2:	2306      	movs	r3, #6
 2f4:	fba3 0300 	umull	r0, r3, r3, r0
 2f8:	2b00      	cmp	r3, #0
 2fa:	900e      	str	r0, [sp, #56]	; 0x38
 2fc:	f040 81a3 	bne.w	646 <app::touch_sensor::read_touchdata+0x646>
 300:	e7ff      	b.n	302 <app::touch_sensor::read_touchdata+0x302>
 302:	980e      	ldr	r0, [sp, #56]	; 0x38
 304:	1d41      	adds	r1, r0, #5
 306:	460a      	mov	r2, r1
 308:	4281      	cmp	r1, r0
 30a:	920d      	str	r2, [sp, #52]	; 0x34
 30c:	f0c0 81a7 	bcc.w	65e <app::touch_sensor::read_touchdata+0x65e>
 310:	e7ff      	b.n	312 <app::touch_sensor::read_touchdata+0x312>
 312:	980d      	ldr	r0, [sp, #52]	; 0x34
 314:	283e      	cmp	r0, #62	; 0x3e
 316:	f200 81ae 	bhi.w	676 <app::touch_sensor::read_touchdata+0x676>
 31a:	e7ff      	b.n	2 <app::touch_sensor::read_touchdata+0x2>
 31c:	f240 0000 	movw	r0, #0
 320:	f2c0 0000 	movt	r0, #0
 324:	990d      	ldr	r1, [sp, #52]	; 0x34
 326:	5c40      	ldrb	r0, [r0, r1]
 328:	0900      	lsrs	r0, r0, #4
 32a:	900c      	str	r0, [sp, #48]	; 0x30
 32c:	e7ff      	b.n	32e <app::touch_sensor::read_touchdata+0x32e>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:165
        data.touches[i].finger =
 32e:	985e      	ldr	r0, [sp, #376]	; 0x178
 330:	2809      	cmp	r0, #9
 332:	900b      	str	r0, [sp, #44]	; 0x2c
 334:	f200 81a8 	bhi.w	688 <app::touch_sensor::read_touchdata+0x688>
 338:	e7ff      	b.n	33a <app::touch_sensor::read_touchdata+0x33a>
 33a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 33c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 33e:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 342:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 344:	7142      	strb	r2, [r0, #5]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:170
            unsafe { buf[HYN_TOUCH_XY_POS + HYN_TOUCH_STEP * i] };  //  Can't be constant value
 346:	985e      	ldr	r0, [sp, #376]	; 0x178
 348:	2306      	movs	r3, #6
 34a:	fba3 0300 	umull	r0, r3, r3, r0
 34e:	2b00      	cmp	r3, #0
 350:	900a      	str	r0, [sp, #40]	; 0x28
 352:	f040 81a2 	bne.w	69a <app::touch_sensor::read_touchdata+0x69a>
 356:	e7ff      	b.n	358 <app::touch_sensor::read_touchdata+0x358>
 358:	980a      	ldr	r0, [sp, #40]	; 0x28
 35a:	1dc1      	adds	r1, r0, #7
 35c:	460a      	mov	r2, r1
 35e:	4281      	cmp	r1, r0
 360:	9209      	str	r2, [sp, #36]	; 0x24
 362:	f0c0 81a6 	bcc.w	6b2 <app::touch_sensor::read_touchdata+0x6b2>
 366:	e7ff      	b.n	368 <app::touch_sensor::read_touchdata+0x368>
 368:	9809      	ldr	r0, [sp, #36]	; 0x24
 36a:	283e      	cmp	r0, #62	; 0x3e
 36c:	f200 81ad 	bhi.w	6ca <app::touch_sensor::read_touchdata+0x6ca>
 370:	e7ff      	b.n	2 <app::touch_sensor::read_touchdata+0x2>
 372:	f240 0000 	movw	r0, #0
 376:	f2c0 0000 	movt	r0, #0
 37a:	9909      	ldr	r1, [sp, #36]	; 0x24
 37c:	5c40      	ldrb	r0, [r0, r1]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:169
        data.touches[i].pressure =
 37e:	9a5e      	ldr	r2, [sp, #376]	; 0x178
 380:	2a09      	cmp	r2, #9
 382:	9008      	str	r0, [sp, #32]
 384:	9207      	str	r2, [sp, #28]
 386:	f200 81a9 	bhi.w	6dc <app::touch_sensor::read_touchdata+0x6dc>
 38a:	e7ff      	b.n	38c <app::touch_sensor::read_touchdata+0x38c>
 38c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 38e:	9907      	ldr	r1, [sp, #28]
 390:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 394:	9a08      	ldr	r2, [sp, #32]
 396:	7182      	strb	r2, [r0, #6]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:172
            unsafe { buf[HYN_TOUCH_MISC   + HYN_TOUCH_STEP * i] } >> 4;
 398:	985e      	ldr	r0, [sp, #376]	; 0x178
 39a:	2306      	movs	r3, #6
 39c:	fba3 0300 	umull	r0, r3, r3, r0
 3a0:	2b00      	cmp	r3, #0
 3a2:	9006      	str	r0, [sp, #24]
 3a4:	f040 81a3 	bne.w	6ee <app::touch_sensor::read_touchdata+0x6ee>
 3a8:	e7ff      	b.n	3aa <app::touch_sensor::read_touchdata+0x3aa>
 3aa:	9806      	ldr	r0, [sp, #24]
 3ac:	f100 0108 	add.w	r1, r0, #8
 3b0:	460a      	mov	r2, r1
 3b2:	4281      	cmp	r1, r0
 3b4:	9205      	str	r2, [sp, #20]
 3b6:	f0c0 81a6 	bcc.w	706 <app::touch_sensor::read_touchdata+0x706>
 3ba:	e7ff      	b.n	3bc <app::touch_sensor::read_touchdata+0x3bc>
 3bc:	9805      	ldr	r0, [sp, #20]
 3be:	283e      	cmp	r0, #62	; 0x3e
 3c0:	f200 81ad 	bhi.w	71e <app::touch_sensor::read_touchdata+0x71e>
 3c4:	e7ff      	b.n	2 <app::touch_sensor::read_touchdata+0x2>
 3c6:	f240 0000 	movw	r0, #0
 3ca:	f2c0 0000 	movt	r0, #0
 3ce:	9905      	ldr	r1, [sp, #20]
 3d0:	5c40      	ldrb	r0, [r0, r1]
 3d2:	0900      	lsrs	r0, r0, #4
 3d4:	9004      	str	r0, [sp, #16]
 3d6:	e7ff      	b.n	3d8 <app::touch_sensor::read_touchdata+0x3d8>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:171
        data.touches[i].area =
 3d8:	985e      	ldr	r0, [sp, #376]	; 0x178
 3da:	2809      	cmp	r0, #9
 3dc:	9003      	str	r0, [sp, #12]
 3de:	f200 81a7 	bhi.w	730 <app::touch_sensor::read_touchdata+0x730>
 3e2:	e7ff      	b.n	3e4 <app::touch_sensor::read_touchdata+0x3e4>
 3e4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 3e6:	9903      	ldr	r1, [sp, #12]
 3e8:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 3ec:	9a04      	ldr	r2, [sp, #16]
 3ee:	71c2      	strb	r2, [r0, #7]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:175
        if (data.touches[i].action == 0 || data.touches[i].action == 2)  //  If touch is down or contact
 3f0:	985e      	ldr	r0, [sp, #376]	; 0x178
 3f2:	280a      	cmp	r0, #10
 3f4:	9002      	str	r0, [sp, #8]
 3f6:	d327      	bcc.n	448 <app::touch_sensor::read_touchdata+0x448>
 3f8:	e1a3      	b.n	742 <app::touch_sensor::read_touchdata+0x742>
 3fa:	2001      	movs	r0, #1
 3fc:	f88d 0186 	strb.w	r0, [sp, #390]	; 0x186
 400:	e009      	b.n	416 <app::touch_sensor::read_touchdata+0x416>
 402:	2000      	movs	r0, #0
 404:	f88d 0186 	strb.w	r0, [sp, #390]	; 0x186
 408:	e005      	b.n	416 <app::touch_sensor::read_touchdata+0x416>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:176
            && (data.point_num == 0) {
 40a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 40c:	f890 0051 	ldrb.w	r0, [r0, #81]	; 0x51
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:175
        if (data.touches[i].action == 0 || data.touches[i].action == 2)  //  If touch is down or contact
 410:	2800      	cmp	r0, #0
 412:	d0f2      	beq.n	3fa <app::touch_sensor::read_touchdata+0x3fa>
 414:	e7f5      	b.n	402 <app::touch_sensor::read_touchdata+0x402>
 416:	f89d 0186 	ldrb.w	r0, [sp, #390]	; 0x186
 41a:	07c0      	lsls	r0, r0, #31
 41c:	2800      	cmp	r0, #0
 41e:	d124      	bne.n	46a <app::touch_sensor::read_touchdata+0x46a>
 420:	e022      	b.n	468 <app::touch_sensor::read_touchdata+0x468>
 422:	2001      	movs	r0, #1
 424:	f88d 0187 	strb.w	r0, [sp, #391]	; 0x187
 428:	e008      	b.n	43c <app::touch_sensor::read_touchdata+0x43c>
 42a:	2000      	movs	r0, #0
 42c:	f88d 0187 	strb.w	r0, [sp, #391]	; 0x187
 430:	e004      	b.n	43c <app::touch_sensor::read_touchdata+0x43c>
 432:	985e      	ldr	r0, [sp, #376]	; 0x178
 434:	280a      	cmp	r0, #10
 436:	9001      	str	r0, [sp, #4]
 438:	d30e      	bcc.n	458 <app::touch_sensor::read_touchdata+0x458>
 43a:	e18b      	b.n	754 <app::touch_sensor::read_touchdata+0x754>
 43c:	f89d 0187 	ldrb.w	r0, [sp, #391]	; 0x187
 440:	07c0      	lsls	r0, r0, #31
 442:	2800      	cmp	r0, #0
 444:	d1e1      	bne.n	40a <app::touch_sensor::read_touchdata+0x40a>
 446:	e7dc      	b.n	402 <app::touch_sensor::read_touchdata+0x402>
 448:	982c      	ldr	r0, [sp, #176]	; 0xb0
 44a:	9902      	ldr	r1, [sp, #8]
 44c:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 450:	7900      	ldrb	r0, [r0, #4]
 452:	2800      	cmp	r0, #0
 454:	d0e5      	beq.n	422 <app::touch_sensor::read_touchdata+0x422>
 456:	e7ec      	b.n	432 <app::touch_sensor::read_touchdata+0x432>
 458:	982c      	ldr	r0, [sp, #176]	; 0xb0
 45a:	9901      	ldr	r1, [sp, #4]
 45c:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
 460:	7900      	ldrb	r0, [r0, #4]
 462:	2802      	cmp	r0, #2
 464:	d0dd      	beq.n	422 <app::touch_sensor::read_touchdata+0x422>
 466:	e7e0      	b.n	42a <app::touch_sensor::read_touchdata+0x42a>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:148
    for i in 0..CFG_MAX_TOUCH_POINTS {
 468:	e61c      	b.n	a4 <app::touch_sensor::read_touchdata+0xa4>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:177
            break;
 46a:	e664      	b.n	136 <app::touch_sensor::read_touchdata+0x136>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:149
        let pointid = unsafe { buf[HYN_TOUCH_ID_POS + HYN_TOUCH_STEP * i] } >> 4;
 46c:	f240 0000 	movw	r0, #0
 470:	f2c0 0000 	movt	r0, #0
 474:	f240 0200 	movw	r2, #0
 478:	f2c0 0200 	movt	r2, #0
 47c:	2121      	movs	r1, #33	; 0x21
 47e:	f7ff fffe 	bl	0 <core::panicking::panic>
 482:	defe      	udf	#254	; 0xfe
 484:	f240 0000 	movw	r0, #0
 488:	f2c0 0000 	movt	r0, #0
 48c:	f240 0200 	movw	r2, #0
 490:	f2c0 0200 	movt	r2, #0
 494:	211c      	movs	r1, #28
 496:	f7ff fffe 	bl	0 <core::panicking::panic>
 49a:	defe      	udf	#254	; 0xfe
 49c:	f240 0000 	movw	r0, #0
 4a0:	f2c0 0000 	movt	r0, #0
 4a4:	223f      	movs	r2, #63	; 0x3f
 4a6:	9923      	ldr	r1, [sp, #140]	; 0x8c
 4a8:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 4ac:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:153
        data.count += 1;
 4ae:	f240 0000 	movw	r0, #0
 4b2:	f2c0 0000 	movt	r0, #0
 4b6:	f240 0200 	movw	r2, #0
 4ba:	f2c0 0200 	movt	r2, #0
 4be:	211c      	movs	r1, #28
 4c0:	f7ff fffe 	bl	0 <core::panicking::panic>
 4c4:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:154
        let x_high = unsafe { buf[HYN_TOUCH_X_H_POS + HYN_TOUCH_STEP * i] & 0x0F } as u16;
 4c6:	f240 0000 	movw	r0, #0
 4ca:	f2c0 0000 	movt	r0, #0
 4ce:	f240 0200 	movw	r2, #0
 4d2:	f2c0 0200 	movt	r2, #0
 4d6:	2121      	movs	r1, #33	; 0x21
 4d8:	f7ff fffe 	bl	0 <core::panicking::panic>
 4dc:	defe      	udf	#254	; 0xfe
 4de:	f240 0000 	movw	r0, #0
 4e2:	f2c0 0000 	movt	r0, #0
 4e6:	f240 0200 	movw	r2, #0
 4ea:	f2c0 0200 	movt	r2, #0
 4ee:	211c      	movs	r1, #28
 4f0:	f7ff fffe 	bl	0 <core::panicking::panic>
 4f4:	defe      	udf	#254	; 0xfe
 4f6:	f240 0000 	movw	r0, #0
 4fa:	f2c0 0000 	movt	r0, #0
 4fe:	223f      	movs	r2, #63	; 0x3f
 500:	991f      	ldr	r1, [sp, #124]	; 0x7c
 502:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 506:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:155
        let x_low  = unsafe { buf[HYN_TOUCH_X_L_POS + HYN_TOUCH_STEP * i] } as u16;
 508:	f240 0000 	movw	r0, #0
 50c:	f2c0 0000 	movt	r0, #0
 510:	f240 0200 	movw	r2, #0
 514:	f2c0 0200 	movt	r2, #0
 518:	2121      	movs	r1, #33	; 0x21
 51a:	f7ff fffe 	bl	0 <core::panicking::panic>
 51e:	defe      	udf	#254	; 0xfe
 520:	f240 0000 	movw	r0, #0
 524:	f2c0 0000 	movt	r0, #0
 528:	f240 0200 	movw	r2, #0
 52c:	f2c0 0200 	movt	r2, #0
 530:	211c      	movs	r1, #28
 532:	f7ff fffe 	bl	0 <core::panicking::panic>
 536:	defe      	udf	#254	; 0xfe
 538:	f240 0000 	movw	r0, #0
 53c:	f2c0 0000 	movt	r0, #0
 540:	223f      	movs	r2, #63	; 0x3f
 542:	991d      	ldr	r1, [sp, #116]	; 0x74
 544:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 548:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:156
        data.touches[i].x  = (x_high << 8) | x_low;
 54a:	f240 0000 	movw	r0, #0
 54e:	f2c0 0000 	movt	r0, #0
 552:	220a      	movs	r2, #10
 554:	991a      	ldr	r1, [sp, #104]	; 0x68
 556:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 55a:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:158
        let y_high = unsafe { buf[HYN_TOUCH_Y_H_POS + HYN_TOUCH_STEP * i] & 0x0F } as u16;
 55c:	f240 0000 	movw	r0, #0
 560:	f2c0 0000 	movt	r0, #0
 564:	f240 0200 	movw	r2, #0
 568:	f2c0 0200 	movt	r2, #0
 56c:	2121      	movs	r1, #33	; 0x21
 56e:	f7ff fffe 	bl	0 <core::panicking::panic>
 572:	defe      	udf	#254	; 0xfe
 574:	f240 0000 	movw	r0, #0
 578:	f2c0 0000 	movt	r0, #0
 57c:	f240 0200 	movw	r2, #0
 580:	f2c0 0200 	movt	r2, #0
 584:	211c      	movs	r1, #28
 586:	f7ff fffe 	bl	0 <core::panicking::panic>
 58a:	defe      	udf	#254	; 0xfe
 58c:	f240 0000 	movw	r0, #0
 590:	f2c0 0000 	movt	r0, #0
 594:	223f      	movs	r2, #63	; 0x3f
 596:	9918      	ldr	r1, [sp, #96]	; 0x60
 598:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 59c:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:159
        let y_low  = unsafe { buf[HYN_TOUCH_Y_L_POS + HYN_TOUCH_STEP * i] } as u16;
 59e:	f240 0000 	movw	r0, #0
 5a2:	f2c0 0000 	movt	r0, #0
 5a6:	f240 0200 	movw	r2, #0
 5aa:	f2c0 0200 	movt	r2, #0
 5ae:	2121      	movs	r1, #33	; 0x21
 5b0:	f7ff fffe 	bl	0 <core::panicking::panic>
 5b4:	defe      	udf	#254	; 0xfe
 5b6:	f240 0000 	movw	r0, #0
 5ba:	f2c0 0000 	movt	r0, #0
 5be:	f240 0200 	movw	r2, #0
 5c2:	f2c0 0200 	movt	r2, #0
 5c6:	211c      	movs	r1, #28
 5c8:	f7ff fffe 	bl	0 <core::panicking::panic>
 5cc:	defe      	udf	#254	; 0xfe
 5ce:	f240 0000 	movw	r0, #0
 5d2:	f2c0 0000 	movt	r0, #0
 5d6:	223f      	movs	r2, #63	; 0x3f
 5d8:	9916      	ldr	r1, [sp, #88]	; 0x58
 5da:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 5de:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:160
        data.touches[i].y  = (y_high << 8) | y_low;
 5e0:	f240 0000 	movw	r0, #0
 5e4:	f2c0 0000 	movt	r0, #0
 5e8:	220a      	movs	r2, #10
 5ea:	9913      	ldr	r1, [sp, #76]	; 0x4c
 5ec:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 5f0:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:164
            unsafe { buf[HYN_TOUCH_EVENT_POS + HYN_TOUCH_STEP * i] } >> 6;
 5f2:	f240 0000 	movw	r0, #0
 5f6:	f2c0 0000 	movt	r0, #0
 5fa:	f240 0200 	movw	r2, #0
 5fe:	f2c0 0200 	movt	r2, #0
 602:	2121      	movs	r1, #33	; 0x21
 604:	f7ff fffe 	bl	0 <core::panicking::panic>
 608:	defe      	udf	#254	; 0xfe
 60a:	f240 0000 	movw	r0, #0
 60e:	f2c0 0000 	movt	r0, #0
 612:	f240 0200 	movw	r2, #0
 616:	f2c0 0200 	movt	r2, #0
 61a:	211c      	movs	r1, #28
 61c:	f7ff fffe 	bl	0 <core::panicking::panic>
 620:	defe      	udf	#254	; 0xfe
 622:	f240 0000 	movw	r0, #0
 626:	f2c0 0000 	movt	r0, #0
 62a:	223f      	movs	r2, #63	; 0x3f
 62c:	9911      	ldr	r1, [sp, #68]	; 0x44
 62e:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 632:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:163
        data.touches[i].action =
 634:	f240 0000 	movw	r0, #0
 638:	f2c0 0000 	movt	r0, #0
 63c:	220a      	movs	r2, #10
 63e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 640:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 644:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:166
            unsafe { buf[HYN_TOUCH_ID_POS    + HYN_TOUCH_STEP * i] } >> 4;
 646:	f240 0000 	movw	r0, #0
 64a:	f2c0 0000 	movt	r0, #0
 64e:	f240 0200 	movw	r2, #0
 652:	f2c0 0200 	movt	r2, #0
 656:	2121      	movs	r1, #33	; 0x21
 658:	f7ff fffe 	bl	0 <core::panicking::panic>
 65c:	defe      	udf	#254	; 0xfe
 65e:	f240 0000 	movw	r0, #0
 662:	f2c0 0000 	movt	r0, #0
 666:	f240 0200 	movw	r2, #0
 66a:	f2c0 0200 	movt	r2, #0
 66e:	211c      	movs	r1, #28
 670:	f7ff fffe 	bl	0 <core::panicking::panic>
 674:	defe      	udf	#254	; 0xfe
 676:	f240 0000 	movw	r0, #0
 67a:	f2c0 0000 	movt	r0, #0
 67e:	223f      	movs	r2, #63	; 0x3f
 680:	990d      	ldr	r1, [sp, #52]	; 0x34
 682:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 686:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:165
        data.touches[i].finger =
 688:	f240 0000 	movw	r0, #0
 68c:	f2c0 0000 	movt	r0, #0
 690:	220a      	movs	r2, #10
 692:	990b      	ldr	r1, [sp, #44]	; 0x2c
 694:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 698:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:170
            unsafe { buf[HYN_TOUCH_XY_POS + HYN_TOUCH_STEP * i] };  //  Can't be constant value
 69a:	f240 0000 	movw	r0, #0
 69e:	f2c0 0000 	movt	r0, #0
 6a2:	f240 0200 	movw	r2, #0
 6a6:	f2c0 0200 	movt	r2, #0
 6aa:	2121      	movs	r1, #33	; 0x21
 6ac:	f7ff fffe 	bl	0 <core::panicking::panic>
 6b0:	defe      	udf	#254	; 0xfe
 6b2:	f240 0000 	movw	r0, #0
 6b6:	f2c0 0000 	movt	r0, #0
 6ba:	f240 0200 	movw	r2, #0
 6be:	f2c0 0200 	movt	r2, #0
 6c2:	211c      	movs	r1, #28
 6c4:	f7ff fffe 	bl	0 <core::panicking::panic>
 6c8:	defe      	udf	#254	; 0xfe
 6ca:	f240 0000 	movw	r0, #0
 6ce:	f2c0 0000 	movt	r0, #0
 6d2:	223f      	movs	r2, #63	; 0x3f
 6d4:	9909      	ldr	r1, [sp, #36]	; 0x24
 6d6:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 6da:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:169
        data.touches[i].pressure =
 6dc:	f240 0000 	movw	r0, #0
 6e0:	f2c0 0000 	movt	r0, #0
 6e4:	220a      	movs	r2, #10
 6e6:	9907      	ldr	r1, [sp, #28]
 6e8:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 6ec:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:172
            unsafe { buf[HYN_TOUCH_MISC   + HYN_TOUCH_STEP * i] } >> 4;
 6ee:	f240 0000 	movw	r0, #0
 6f2:	f2c0 0000 	movt	r0, #0
 6f6:	f240 0200 	movw	r2, #0
 6fa:	f2c0 0200 	movt	r2, #0
 6fe:	2121      	movs	r1, #33	; 0x21
 700:	f7ff fffe 	bl	0 <core::panicking::panic>
 704:	defe      	udf	#254	; 0xfe
 706:	f240 0000 	movw	r0, #0
 70a:	f2c0 0000 	movt	r0, #0
 70e:	f240 0200 	movw	r2, #0
 712:	f2c0 0200 	movt	r2, #0
 716:	211c      	movs	r1, #28
 718:	f7ff fffe 	bl	0 <core::panicking::panic>
 71c:	defe      	udf	#254	; 0xfe
 71e:	f240 0000 	movw	r0, #0
 722:	f2c0 0000 	movt	r0, #0
 726:	223f      	movs	r2, #63	; 0x3f
 728:	9905      	ldr	r1, [sp, #20]
 72a:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 72e:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:171
        data.touches[i].area =
 730:	f240 0000 	movw	r0, #0
 734:	f2c0 0000 	movt	r0, #0
 738:	220a      	movs	r2, #10
 73a:	9903      	ldr	r1, [sp, #12]
 73c:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 740:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:175
        if (data.touches[i].action == 0 || data.touches[i].action == 2)  //  If touch is down or contact
 742:	f240 0000 	movw	r0, #0
 746:	f2c0 0000 	movt	r0, #0
 74a:	220a      	movs	r2, #10
 74c:	9902      	ldr	r1, [sp, #8]
 74e:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 752:	defe      	udf	#254	; 0xfe
 754:	f240 0000 	movw	r0, #0
 758:	f2c0 0000 	movt	r0, #0
 75c:	220a      	movs	r2, #10
 75e:	9901      	ldr	r1, [sp, #4]
 760:	f7ff fffe 	bl	0 <core::panicking::panic_bounds_check>
 764:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app12touch_sensor19read_register_range17h519f050f1483bae5E:

00000000 <app::touch_sensor::read_register_range>:
_ZN3app12touch_sensor19read_register_range17h519f050f1483bae5E():
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:240

/// Event that will be forwarded to the Event Queue when a touch interrupt is triggered
static mut TOUCH_EVENT: os_event = fill_zero!(os_event);  //  Init all fields to 0 or NULL

/// Read a range of I2C registers from the I2C address `addr` (7-bit address), starting at `start_register` for count `num_registers`. Save into `buffer`.
fn read_register_range(addr: u8, start_register: u8, num_registers: u8, buffer: &mut[u8]) -> MynewtResult<()> {
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	b092      	sub	sp, #72	; 0x48
   4:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
   8:	4696      	mov	lr, r2
   a:	460c      	mov	r4, r1
   c:	4605      	mov	r5, r0
   e:	f88d 0031 	strb.w	r0, [sp, #49]	; 0x31
  12:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
  16:	f88d 2033 	strb.w	r2, [sp, #51]	; 0x33
  1a:	930d      	str	r3, [sp, #52]	; 0x34
  1c:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:241
    assert!(buffer.len() >= num_registers as usize, "i2c buf");  //  Buffer too small
  20:	980d      	ldr	r0, [sp, #52]	; 0x34
  22:	990e      	ldr	r1, [sp, #56]	; 0x38
  24:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
  28:	940a      	str	r4, [sp, #40]	; 0x28
  2a:	9509      	str	r5, [sp, #36]	; 0x24
  2c:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  30:	9008      	str	r0, [sp, #32]
  32:	e7ff      	b.n	34 <app::touch_sensor::read_register_range+0x34>
  34:	f89d 0033 	ldrb.w	r0, [sp, #51]	; 0x33
  38:	9908      	ldr	r1, [sp, #32]
  3a:	4281      	cmp	r1, r0
  3c:	d30c      	bcc.n	58 <app::touch_sensor::read_register_range+0x58>
  3e:	e7ff      	b.n	40 <app::touch_sensor::read_register_range+0x40>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:242
    assert!(start_register + num_registers < 128, "i2c addr");   //  Not 7-bit address
  40:	f89d 0032 	ldrb.w	r0, [sp, #50]	; 0x32
  44:	f89d 1033 	ldrb.w	r1, [sp, #51]	; 0x33
  48:	4408      	add	r0, r1
  4a:	b2c1      	uxtb	r1, r0
  4c:	4602      	mov	r2, r0
  4e:	4281      	cmp	r1, r0
  50:	9207      	str	r2, [sp, #28]
  52:	f040 8096 	bne.w	182 <app::touch_sensor::read_register_range+0x182>
  56:	e00b      	b.n	1a <app::touch_sensor::read_register_range+0x1a>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:241
    assert!(buffer.len() >= num_registers as usize, "i2c buf");  //  Buffer too small
  58:	f240 0000 	movw	r0, #0
  5c:	f2c0 0000 	movt	r0, #0
  60:	f240 0200 	movw	r2, #0
  64:	f2c0 0200 	movt	r2, #0
  68:	2107      	movs	r1, #7
  6a:	f7ff fffe 	bl	0 <core::panicking::panic>
  6e:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:242
    assert!(start_register + num_registers < 128, "i2c addr");   //  Not 7-bit address
  70:	9807      	ldr	r0, [sp, #28]
  72:	b241      	sxtb	r1, r0
  74:	2900      	cmp	r1, #0
  76:	d416      	bmi.n	a6 <app::touch_sensor::read_register_range+0xa6>
  78:	e7ff      	b.n	7a <app::touch_sensor::read_register_range+0x7a>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:251
    //    Send the Start Condition (High to Low SDA Transition)...
    //    Followed by I2C Address (7 bits)...
    //    Followed by Write Mode (1 bit, value 0)...
    //    Followed by starting Register Number (8 bits)
    unsafe { 
        I2C_BUFFER[0] = start_register;  //  I2C Packet buffer contains starting Register Number (1 byte)
  7a:	f89d 0032 	ldrb.w	r0, [sp, #50]	; 0x32
  7e:	f240 0100 	movw	r1, #0
  82:	f2c0 0100 	movt	r1, #0
  86:	7008      	strb	r0, [r1, #0]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:252
        I2C_DATA.address = addr;         //  I2C Packet address (7 bits)
  88:	f89d 0031 	ldrb.w	r0, [sp, #49]	; 0x31
  8c:	f240 0200 	movw	r2, #0
  90:	f2c0 0200 	movt	r2, #0
  94:	7010      	strb	r0, [r2, #0]
  96:	2001      	movs	r0, #1
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:253
        I2C_DATA.len = I2C_BUFFER.len() as u16;     //  I2C Packet data size is 1 byte
  98:	9006      	str	r0, [sp, #24]
  9a:	4608      	mov	r0, r1
  9c:	9906      	ldr	r1, [sp, #24]
  9e:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::len>
  a2:	9005      	str	r0, [sp, #20]
  a4:	e00b      	b.n	be <app::touch_sensor::read_register_range+0xbe>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:242
    assert!(start_register + num_registers < 128, "i2c addr");   //  Not 7-bit address
  a6:	f240 0000 	movw	r0, #0
  aa:	f2c0 0000 	movt	r0, #0
  ae:	f240 0200 	movw	r2, #0
  b2:	f2c0 0200 	movt	r2, #0
  b6:	2108      	movs	r1, #8
  b8:	f7ff fffe 	bl	0 <core::panicking::panic>
  bc:	defe      	udf	#254	; 0xfe
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:253
        I2C_DATA.len = I2C_BUFFER.len() as u16;     //  I2C Packet data size is 1 byte
  be:	f240 0000 	movw	r0, #0
  c2:	f2c0 0000 	movt	r0, #0
  c6:	9905      	ldr	r1, [sp, #20]
  c8:	8041      	strh	r1, [r0, #2]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:254
        I2C_DATA.buffer = I2C_BUFFER.as_mut_ptr();  //  I2C Packet data points to packet buffer
  ca:	f240 0000 	movw	r0, #0
  ce:	f2c0 0000 	movt	r0, #0
  d2:	2101      	movs	r1, #1
  d4:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_mut_ptr>
  d8:	9004      	str	r0, [sp, #16]
  da:	e7ff      	b.n	dc <app::touch_sensor::read_register_range+0xdc>
  dc:	f240 0000 	movw	r0, #0
  e0:	f2c0 0000 	movt	r0, #0
  e4:	9904      	ldr	r1, [sp, #16]
  e6:	6041      	str	r1, [r0, #4]
  e8:	2201      	movs	r2, #1
  ea:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
  ee:	f04f 0c00 	mov.w	ip, #0
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:256
    };
    let _rc1 = unsafe { hal::hal_i2c_master_write(1, &mut I2C_DATA, 1000, 0) };  //  No stop yet, must continue even if we hit an error
  f2:	9003      	str	r0, [sp, #12]
  f4:	4610      	mov	r0, r2
  f6:	9903      	ldr	r1, [sp, #12]
  f8:	461a      	mov	r2, r3
  fa:	4663      	mov	r3, ip
  fc:	f7ff fffe 	bl	0 <hal_i2c_master_write>
 100:	9010      	str	r0, [sp, #64]	; 0x40
 102:	e7ff      	b.n	104 <app::touch_sensor::read_register_range+0x104>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:262
    //  Step 3: Prepare to receive the stream of I2C Device Register values...
    //    Send the Start Condition (High to Low SDA Transition)...
    //    Followed by I2C Address (7 bits)...
    //    Followed by Read Mode (1 bit, value 1)
    unsafe { 
        I2C_BUFFER[0] = 0x00;     //  I2C Packet buffer should be empty (provided by caller)
 104:	f240 0000 	movw	r0, #0
 108:	f2c0 0000 	movt	r0, #0
 10c:	2100      	movs	r1, #0
 10e:	7001      	strb	r1, [r0, #0]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:263
        I2C_DATA.address = addr;  //  I2C Packet address (7 bits)
 110:	f89d 0031 	ldrb.w	r0, [sp, #49]	; 0x31
 114:	f240 0100 	movw	r1, #0
 118:	f2c0 0100 	movt	r1, #0
 11c:	7008      	strb	r0, [r1, #0]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:264
        I2C_DATA.len = num_registers as u16;    //  I2C Packet data size is number of Registers to read
 11e:	f89d 0033 	ldrb.w	r0, [sp, #51]	; 0x33
 122:	8048      	strh	r0, [r1, #2]
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:265
        I2C_DATA.buffer = buffer.as_mut_ptr();  //  I2C Packet data points to packet buffer
 124:	980d      	ldr	r0, [sp, #52]	; 0x34
 126:	990e      	ldr	r1, [sp, #56]	; 0x38
 128:	f7ff fffe 	bl	0 <core::slice::<impl [T]>::as_mut_ptr>
 12c:	9002      	str	r0, [sp, #8]
 12e:	e7ff      	b.n	130 <app::touch_sensor::read_register_range+0x130>
 130:	f240 0000 	movw	r0, #0
 134:	f2c0 0000 	movt	r0, #0
 138:	9902      	ldr	r1, [sp, #8]
 13a:	6041      	str	r1, [r0, #4]
 13c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 140:	2301      	movs	r3, #1
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:269
    };
    //  Step 4: Receive the requested number of Register values from I2C Device (1 byte per register)
    //  Step 5: Send the Stop Condition (Low to High SDA Transition)
    let rc2 = unsafe { hal::hal_i2c_master_read(1, &mut I2C_DATA, 1000, 1) };
 142:	9001      	str	r0, [sp, #4]
 144:	4618      	mov	r0, r3
 146:	9901      	ldr	r1, [sp, #4]
 148:	f7ff fffe 	bl	0 <hal_i2c_master_read>
 14c:	9011      	str	r0, [sp, #68]	; 0x44
 14e:	e7ff      	b.n	150 <app::touch_sensor::read_register_range+0x150>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:270
    if rc2 == hal::HAL_I2C_ERR_ADDR_NACK as i32 {
 150:	9811      	ldr	r0, [sp, #68]	; 0x44
 152:	2804      	cmp	r0, #4
 154:	d005      	beq.n	162 <app::touch_sensor::read_register_range+0x162>
 156:	e7ff      	b.n	158 <app::touch_sensor::read_register_range+0x158>
 158:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:275
        ////assert!(false, "i2c fail");  //  I2C read failed
        console::print("i2c fail\n"); ////
        return Ok(());               //  TODO: Return an error
    }
    Ok(())
 15a:	900f      	str	r0, [sp, #60]	; 0x3c
 15c:	2001      	movs	r0, #1
 15e:	900f      	str	r0, [sp, #60]	; 0x3c
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:276
}
 160:	e00c      	b.n	17c <app::touch_sensor::read_register_range+0x17c>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:272
        console::print("i2c fail\n"); ////
 162:	f240 0000 	movw	r0, #0
 166:	f2c0 0000 	movt	r0, #0
 16a:	2109      	movs	r1, #9
 16c:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 170:	e7ff      	b.n	172 <app::touch_sensor::read_register_range+0x172>
 172:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:273
        return Ok(());               //  TODO: Return an error
 174:	900f      	str	r0, [sp, #60]	; 0x3c
 176:	2001      	movs	r0, #1
 178:	900f      	str	r0, [sp, #60]	; 0x3c
 17a:	e7ff      	b.n	17c <app::touch_sensor::read_register_range+0x17c>
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:276
}
 17c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 17e:	b012      	add	sp, #72	; 0x48
 180:	bdb0      	pop	{r4, r5, r7, pc}
/home/pi/pinetime-rust-mynewt/rust/app/src/touch_sensor.rs:242
    assert!(start_register + num_registers < 128, "i2c addr");   //  Not 7-bit address
 182:	f240 0000 	movw	r0, #0
 186:	f2c0 0000 	movt	r0, #0
 18a:	f240 0200 	movw	r2, #0
 18e:	f2c0 0200 	movt	r2, #0
 192:	211c      	movs	r1, #28
 194:	f7ff fffe 	bl	0 <core::panicking::panic>
 198:	defe      	udf	#254	; 0xfe

app-64de0327356ea83b.55k9ceqnndxrxho0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 55k9ceqnndxrxho0
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
0000007f l       .debug_str	00000000 
00000082 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
0000008a l       .debug_str	00000000 
00000090 l       .debug_str	00000000 
00000097 l       .debug_str	00000000 
0000009f l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b3 l       .debug_str	00000000 
000000b7 l       .debug_str	00000000 
000000be l       .debug_str	00000000 
000000c2 l       .debug_str	00000000 
000000cb l       .debug_str	00000000 
000000cf l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
000000fe l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000115 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000120 l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
0000012c l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
0000013c l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
0000015d l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
0000016e l       .debug_str	00000000 
00000176 l       .debug_str	00000000 
0000017d l       .debug_str	00000000 
00000181 l       .debug_str	00000000 
00000186 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
00000196 l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001a7 l       .debug_str	00000000 
000001ac l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001c9 l       .debug_str	00000000 
000001ce l       .debug_str	00000000 
000001d1 l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001e5 l       .debug_str	00000000 
000001ea l       .debug_str	00000000 
000001ef l       .debug_str	00000000 
000001f5 l       .debug_str	00000000 
000001fb l       .debug_str	00000000 
00000205 l       .debug_str	00000000 
00000208 l       .debug_str	00000000 
0000020e l       .debug_str	00000000 
00000218 l       .debug_str	00000000 
00000220 l       .debug_str	00000000 
00000226 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000237 l       .debug_str	00000000 
00000240 l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
00000282 l       .debug_str	00000000 
00000284 l       .debug_str	00000000 
00000289 l       .debug_str	00000000 
000002b0 l       .debug_str	00000000 
000002b5 l       .debug_str	00000000 
000002bb l       .debug_str	00000000 
000002c1 l       .debug_str	00000000 
000002c4 l       .debug_str	00000000 
000002d3 l       .debug_str	00000000 
000002da l       .debug_str	00000000 
000002de l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002f3 l       .debug_str	00000000 
0000030c l       .debug_str	00000000 
00000311 l       .debug_str	00000000 
00000322 l       .debug_str	00000000 
0000032c l       .debug_str	00000000 
0000033a l       .debug_str	00000000 
0000033e l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000356 l       .debug_str	00000000 
0000035a l       .debug_str	00000000 
00000363 l       .debug_str	00000000 
00000382 l       .debug_str	00000000 
00000386 l       .debug_str	00000000 
0000038e l       .debug_str	00000000 
000003a5 l       .debug_str	00000000 
000003c9 l       .debug_str	00000000 
000003e5 l       .debug_str	00000000 
000003ef l       .debug_str	00000000 
00000409 l       .debug_str	00000000 
00000467 l       .debug_str	00000000 
00000472 l       .debug_str	00000000 
0000048f l       .debug_str	00000000 
000004a8 l       .debug_str	00000000 
000004b2 l       .debug_str	00000000 
000004c8 l       .debug_str	00000000 
000004e6 l       .debug_str	00000000 
000004ef l       .debug_str	00000000 
000004f4 l       .debug_str	00000000 
000004f9 l       .debug_str	00000000 
000004fd l       .debug_str	00000000 
00000506 l       .debug_str	00000000 
0000051d l       .debug_str	00000000 
00000527 l       .debug_str	00000000 
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	0000000d .Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.8
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 piet_embedded_graphics::display::start_display
00000000         *UND*	00000000 .hidden app::touch_sensor::start_touch_sensor
00000000         *UND*	00000000 .hidden app::display::test_display
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::payload
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::option::Option<T>::unwrap
00000000         *UND*	00000000 core::result::Result<T,E>::expect
00000000         *UND*	00000000 core::result::Result<T,E>::expect
00000000         *UND*	00000000 <dyn core::any::Any+core::marker::Send>::downcast_ref
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 mynewt::sys::console::buffer
00000000         *UND*	00000000 mynewt::sys::console::printint
00000000         *UND*	00000000 mynewt::kernel::os::eventq_run
00000000         *UND*	00000000 mynewt::kernel::os::eventq_dflt_get
00000000         *UND*	00000000 mynewt::sysinit
00000000 g     F .text.main	000000ba main
00000000 g     F .text.rust_begin_unwind	000000f8 rust_begin_unwind



Disassembly of section .text.main:

00000000 <main>:
main():
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:58
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                 //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b088      	sub	sp, #32
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:63
    //  Initialise the Mynewt packages and internal temperature sensor driver. Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/nrf52_my_sensor/generated/src/nrf52_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <mynewt::sysinit>
   6:	e7ff      	b.n	2 <piet_embedded_graphics::display::start_display+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:79
    //  extern { fn start_ble() -> i32; }
    //  let rc = unsafe { start_ble() };
    //  assert!(rc == 0, "BLE fail");

    //  Start the display
    druid::start_display()
   8:	f7ff fffe 	bl	0 <piet_embedded_graphics::display::start_display>
   c:	9005      	str	r0, [sp, #20]
   e:	e7ff      	b.n	10 <main+0x10>
  10:	f240 0100 	movw	r1, #0
  14:	f2c0 0100 	movt	r1, #0
  18:	f240 0300 	movw	r3, #0
  1c:	f2c0 0300 	movt	r3, #0
  20:	2208      	movs	r2, #8
  22:	9805      	ldr	r0, [sp, #20]
  24:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  28:	e7ff      	b.n	2 <app::display::test_display+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:84
        .expect("DSP fail");

    //  Test the display
    #[cfg(feature = "display_app")]  //  If graphics display app is enabled...
    display::test_display()
  2a:	f7ff fffe 	bl	0 <app::display::test_display>
  2e:	9004      	str	r0, [sp, #16]
  30:	e7ff      	b.n	32 <main+0x32>
  32:	f240 0100 	movw	r1, #0
  36:	f2c0 0100 	movt	r1, #0
  3a:	f240 0300 	movw	r3, #0
  3e:	f2c0 0300 	movt	r3, #0
  42:	220d      	movs	r2, #13
  44:	9804      	ldr	r0, [sp, #16]
  46:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  4a:	e7ff      	b.n	2 <app::touch_sensor::start_touch_sensor+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:88
        .expect("DSP test fail");

    //  Start the touch sensor
    touch_sensor::start_touch_sensor()
  4c:	f7ff fffe 	bl	0 <app::touch_sensor::start_touch_sensor>
  50:	9003      	str	r0, [sp, #12]
  52:	e7ff      	b.n	54 <main+0x54>
  54:	f240 0100 	movw	r1, #0
  58:	f2c0 0100 	movt	r1, #0
  5c:	f240 0300 	movw	r3, #0
  60:	f2c0 0300 	movt	r3, #0
  64:	2208      	movs	r2, #8
  66:	9803      	ldr	r0, [sp, #12]
  68:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  6c:	e7ff      	b.n	6e <main+0x6e>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:100
    //  Launch the druid UI app
    #[cfg(feature = "ui_app")]  //  If druid UI app is enabled...
    ui::launch();

    //  Main event loop
    loop {                            //  Loop forever...
  6e:	e7ff      	b.n	70 <main+0x70>
  70:	a806      	add	r0, sp, #24
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:102
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  72:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_dflt_get>
  76:	e7ff      	b.n	12 <main+0x12>
  78:	f240 0100 	movw	r1, #0
  7c:	f2c0 0100 	movt	r1, #0
  80:	f240 0300 	movw	r3, #0
  84:	f2c0 0300 	movt	r3, #0
  88:	a806      	add	r0, sp, #24
  8a:	2208      	movs	r2, #8
  8c:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  90:	9002      	str	r0, [sp, #8]
  92:	e7ff      	b.n	94 <main+0x94>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:101
        os::eventq_run(               //  Processing events...
  94:	9802      	ldr	r0, [sp, #8]
  96:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_run>
  9a:	9001      	str	r0, [sp, #4]
  9c:	e7ff      	b.n	9e <main+0x9e>
  9e:	f240 0100 	movw	r1, #0
  a2:	f2c0 0100 	movt	r1, #0
  a6:	f240 0300 	movw	r3, #0
  aa:	f2c0 0300 	movt	r3, #0
  ae:	2208      	movs	r2, #8
  b0:	9801      	ldr	r0, [sp, #4]
  b2:	f7ff fffe 	bl	0 <core::result::Result<T,E>::expect>
  b6:	e7ff      	b.n	b8 <main+0xb8>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:100
    loop {                            //  Loop forever...
  b8:	e7da      	b.n	70 <main+0x70>

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:111
    //  Never comes here
}

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
   0:	b08a      	sub	sp, #40	; 0x28
   2:	9004      	str	r0, [sp, #16]
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:113
    //  Display the filename and line number to the Semihosting Console.
    console::print("panic ");
   4:	f240 0000 	movw	r0, #0
   8:	f2c0 0000 	movt	r0, #0
   c:	2106      	movs	r1, #6
   e:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  12:	e7ff      	b.n	14 <rust_begin_unwind+0x14>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:114
    if let Some(location) = info.location() {
  14:	9804      	ldr	r0, [sp, #16]
  16:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
  1a:	9005      	str	r0, [sp, #20]
  1c:	e7ff      	b.n	1e <rust_begin_unwind+0x1e>
  1e:	9805      	ldr	r0, [sp, #20]
  20:	2800      	cmp	r0, #0
  22:	d108      	bne.n	36 <rust_begin_unwind+0x36>
  24:	e7ff      	b.n	26 <rust_begin_unwind+0x26>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:121
        let line = location.line();
        console::print("at ");       console::buffer(&file);
        console::print(" line ");    console::printint(line as i32);
        console::print("\n");        console::flush();
    } else {
        console::print("no loc\n");  console::flush();
  26:	f240 0000 	movw	r0, #0
  2a:	f2c0 0000 	movt	r0, #0
  2e:	2107      	movs	r1, #7
  30:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  34:	e031      	b.n	9a <rust_begin_unwind+0x9a>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:114
    if let Some(location) = info.location() {
  36:	9805      	ldr	r0, [sp, #20]
  38:	9006      	str	r0, [sp, #24]
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:115
        let file = location.file();
  3a:	9806      	ldr	r0, [sp, #24]
  3c:	f7ff fffe 	bl	0 <core::panic::Location::file>
  40:	9108      	str	r1, [sp, #32]
  42:	9007      	str	r0, [sp, #28]
  44:	e7ff      	b.n	46 <rust_begin_unwind+0x46>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:116
        let line = location.line();
  46:	9806      	ldr	r0, [sp, #24]
  48:	f7ff fffe 	bl	0 <core::panic::Location::line>
  4c:	9009      	str	r0, [sp, #36]	; 0x24
  4e:	e7ff      	b.n	50 <rust_begin_unwind+0x50>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:117
        console::print("at ");       console::buffer(&file);
  50:	f240 0000 	movw	r0, #0
  54:	f2c0 0000 	movt	r0, #0
  58:	2103      	movs	r1, #3
  5a:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  5e:	e7ff      	b.n	60 <rust_begin_unwind+0x60>
  60:	9807      	ldr	r0, [sp, #28]
  62:	9908      	ldr	r1, [sp, #32]
  64:	f7ff fffe 	bl	0 <mynewt::sys::console::buffer>
  68:	e7ff      	b.n	2 <rust_begin_unwind+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:118
        console::print(" line ");    console::printint(line as i32);
  6a:	f240 0000 	movw	r0, #0
  6e:	f2c0 0000 	movt	r0, #0
  72:	2106      	movs	r1, #6
  74:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  78:	e7ff      	b.n	7a <rust_begin_unwind+0x7a>
  7a:	9809      	ldr	r0, [sp, #36]	; 0x24
  7c:	f7ff fffe 	bl	0 <mynewt::sys::console::printint>
  80:	e7ff      	b.n	2 <rust_begin_unwind+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:119
        console::print("\n");        console::flush();
  82:	f240 0000 	movw	r0, #0
  86:	f2c0 0000 	movt	r0, #0
  8a:	2101      	movs	r1, #1
  8c:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  90:	e7ff      	b.n	2 <mynewt::sys::console::flush+0x2>
  92:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
  96:	e7ff      	b.n	98 <rust_begin_unwind+0x98>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:114
    if let Some(location) = info.location() {
  98:	e003      	b.n	a2 <rust_begin_unwind+0xa2>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:121
        console::print("no loc\n");  console::flush();
  9a:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
  9e:	e7ff      	b.n	a0 <rust_begin_unwind+0xa0>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:114
    if let Some(location) = info.location() {
  a0:	e7ff      	b.n	a2 <rust_begin_unwind+0xa2>
_ZN8cortex_m3asm4bkpt17h1becbae5035abe7aE():
/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.1/src/asm.rs:11
/// exception.
#[inline(always)]
pub fn bkpt() {
    match () {
        #[cfg(all(cortex_m, feature = "inline-asm"))]
        () => unsafe { asm!("bkpt" :::: "volatile") },
  a2:	be00      	bkpt	0x0000
rust_begin_unwind():
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:124
    }
    //  Pause in the debugger.
    bkpt();
  a4:	e7ff      	b.n	a6 <rust_begin_unwind+0xa6>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:126
    //  Display the payload.
    console::print(info.payload().downcast_ref::<&str>().unwrap());
  a6:	9804      	ldr	r0, [sp, #16]
  a8:	f7ff fffe 	bl	0 <core::panic::PanicInfo::payload>
  ac:	9003      	str	r0, [sp, #12]
  ae:	9102      	str	r1, [sp, #8]
  b0:	e7ff      	b.n	b2 <rust_begin_unwind+0xb2>
  b2:	9803      	ldr	r0, [sp, #12]
  b4:	9902      	ldr	r1, [sp, #8]
  b6:	f7ff fffe 	bl	0 <<dyn core::any::Any+core::marker::Send>::downcast_ref>
  ba:	9001      	str	r0, [sp, #4]
  bc:	e7ff      	b.n	be <rust_begin_unwind+0xbe>
  be:	f240 0100 	movw	r1, #0
  c2:	f2c0 0100 	movt	r1, #0
  c6:	9801      	ldr	r0, [sp, #4]
  c8:	f7ff fffe 	bl	0 <core::option::Option<T>::unwrap>
  cc:	9000      	str	r0, [sp, #0]
  ce:	e7ff      	b.n	d0 <rust_begin_unwind+0xd0>
  d0:	9800      	ldr	r0, [sp, #0]
  d2:	6800      	ldr	r0, [r0, #0]
  d4:	9900      	ldr	r1, [sp, #0]
  d6:	6849      	ldr	r1, [r1, #4]
  d8:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  dc:	e7ff      	b.n	2 <rust_begin_unwind+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:127
    console::print("\n");  console::flush();
  de:	f240 0000 	movw	r0, #0
  e2:	f2c0 0000 	movt	r0, #0
  e6:	2101      	movs	r1, #1
  e8:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  ec:	e7ff      	b.n	2 <mynewt::sys::console::flush+0x2>
  ee:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
  f2:	e7ff      	b.n	f4 <rust_begin_unwind+0xf4>
/home/pi/pinetime-rust-mynewt/rust/app/src/lib.rs:129
    //  Loop forever so that device won't restart.
    loop {}
  f4:	e7ff      	b.n	f6 <rust_begin_unwind+0xf6>
  f6:	e7fe      	b.n	f6 <rust_begin_unwind+0xf6>

app-64de0327356ea83b.fwcvbuvt7ot1nwf.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 fwcvbuvt7ot1nwf
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
0000007a l       .debug_str	00000000 
00000081 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
0000008d l       .debug_str	00000000 
00000098 l       .debug_str	00000000 
000000a3 l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000bb l       .debug_str	00000000 
000000c3 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000d9 l       .debug_str	00000000 
000000e3 l       .debug_str	00000000 
000000ee l       .debug_str	00000000 
000000f9 l       .debug_str	00000000 
00000106 l       .debug_str	00000000 
00000112 l       .debug_str	00000000 
0000011f l       .debug_str	00000000 
0000012d l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
00000144 l       .debug_str	00000000 
00000150 l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015c l       .debug_str	00000000 
0000018e l       .debug_str	00000000 
0000019b l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001a4 l       .debug_str	00000000 
000001a7 l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001b0 l       .debug_str	00000000 
000001b2 l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
000001de l       .debug_str	00000000 
000001e9 l       .debug_str	00000000 
000001fb l       .debug_str	00000000 
00000206 l       .debug_str	00000000 
00000210 l       .debug_str	00000000 
00000219 l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
0000022e l       .debug_str	00000000 
00000232 l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
00000245 l       .debug_str	00000000 
0000024b l       .debug_str	00000000 
00000256 l       .debug_str	00000000 
0000025d l       .debug_str	00000000 
00000261 l       .debug_str	00000000 
00000266 l       .debug_str	00000000 
00000271 l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
0000027f l       .debug_str	00000000 
00000284 l       .debug_str	00000000 
000002ba l       .debug_str	00000000 
000002c7 l       .debug_str	00000000 
000002d4 l       .debug_str	00000000 
000002d7 l       .debug_str	00000000 
000002d9 l       .debug_str	00000000 
0000030e l       .debug_str	00000000 
00000310 l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000357 l       .debug_str	00000000 
0000035e l       .debug_str	00000000 
00000394 l       .debug_str	00000000 
0000039b l       .debug_str	00000000 
000003a0 l       .debug_str	00000000 
000003a6 l       .debug_str	00000000 
000003b3 l       .debug_str	00000000 
000003b7 l       .debug_str	00000000 
000003c0 l       .debug_str	00000000 
000003ca l       .debug_str	00000000 
000003d1 l       .debug_str	00000000 
000003d7 l       .debug_str	00000000 
000003dc l       .debug_str	00000000 
000003e2 l       .debug_str	00000000 
000003e9 l       .debug_str	00000000 
000003f3 l       .debug_str	00000000 
00000401 l       .debug_str	00000000 
00000441 l       .debug_str	00000000 
00000446 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.9bcd8efb381731a0929e348b90cde72b.0	00000012 .Lanon.9bcd8efb381731a0929e348b90cde72b.0
00000000 l     O .rodata..Lanon.9bcd8efb381731a0929e348b90cde72b.1	0000000d .Lanon.9bcd8efb381731a0929e348b90cde72b.1
00000000 l    d  .text._ZN3app7display12test_display17h57b930071b38aee6E	00000000 .text._ZN3app7display12test_display17h57b930071b38aee6E
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <embedded_graphics::primitives::circle::Circle<C> as embedded_graphics::style::WithStyle<C>>::fill
00000000         *UND*	00000000 <embedded_graphics::pixelcolor::rgb565::Rgb565 as core::convert::From<(u8, u8, u8)>>::from
00000000         *UND*	00000000 <embedded_graphics::primitives::rectangle::Rectangle<C> as embedded_graphics::style::WithStyle<C>>::fill
00000000         *UND*	00000000 <embedded_graphics::fonts::font_builder::FontBuilder<C,Conf> as embedded_graphics::fonts::Font<C>>::render_str
00000000         *UND*	00000000 <embedded_graphics::fonts::font_builder::FontBuilder<C,Conf> as embedded_graphics::transform::Transform>::translate
00000000         *UND*	00000000 <embedded_graphics::fonts::font_builder::FontBuilder<C,Conf> as embedded_graphics::style::WithStyle<C>>::fill
00000000         *UND*	00000000 <embedded_graphics::fonts::font_builder::FontBuilder<C,Conf> as embedded_graphics::style::WithStyle<C>>::stroke
00000000         *UND*	00000000 embedded_graphics::primitives::circle::Circle<C>::new
00000000         *UND*	00000000 embedded_graphics::primitives::rectangle::Rectangle<C>::new
00000000         *UND*	00000000 embedded_graphics::coord::internal_coord::Coord::new
00000000         *UND*	00000000 piet_embedded_graphics::display::draw_to_display
00000000         *UND*	00000000 piet_embedded_graphics::display::draw_to_display
00000000         *UND*	00000000 piet_embedded_graphics::display::draw_to_display
00000000 g     F .text._ZN3app7display12test_display17h57b930071b38aee6E	0000028e .hidden app::display::test_display
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print



Disassembly of section .text._ZN3app7display12test_display17h57b930071b38aee6E:

00000000 <app::display::test_display>:
_ZN3app7display12test_display17h57b930071b38aee6E():
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:17
    result::*,
    sys::console,
};

/// Render some graphics and text to the PineTime display. `start_display()` must have been called earlier.
pub fn test_display() -> MynewtResult<()> {
   0:	b570      	push	{r4, r5, r6, lr}
   2:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:18
    console::print("Rust test display\n"); console::flush();
   6:	f240 0000 	movw	r0, #0
   a:	f2c0 0000 	movt	r0, #0
   e:	2112      	movs	r1, #18
  10:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  14:	e7ff      	b.n	2 <mynewt::sys::console::flush+0x2>
  16:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
  1a:	e7ff      	b.n	1c <app::display::test_display+0x1c>
  1c:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:22
    
    //  Create black background
    let background = Rectangle::<Rgb565>
        ::new( Coord::new( 0, 0 ), Coord::new( 239, 239 ) )   //  Rectangle coordinates
  1e:	9016      	str	r0, [sp, #88]	; 0x58
  20:	9916      	ldr	r1, [sp, #88]	; 0x58
  22:	f7ff fffe 	bl	0 <embedded_graphics::coord::internal_coord::Coord::new>
  26:	9015      	str	r0, [sp, #84]	; 0x54
  28:	9114      	str	r1, [sp, #80]	; 0x50
  2a:	e7ff      	b.n	2c <app::display::test_display+0x2c>
  2c:	20ef      	movs	r0, #239	; 0xef
  2e:	9013      	str	r0, [sp, #76]	; 0x4c
  30:	9913      	ldr	r1, [sp, #76]	; 0x4c
  32:	f7ff fffe 	bl	0 <embedded_graphics::coord::internal_coord::Coord::new>
  36:	9012      	str	r0, [sp, #72]	; 0x48
  38:	9111      	str	r1, [sp, #68]	; 0x44
  3a:	e7ff      	b.n	3c <app::display::test_display+0x3c>
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:21
    let background = Rectangle::<Rgb565>
  3c:	4668      	mov	r0, sp
  3e:	9911      	ldr	r1, [sp, #68]	; 0x44
  40:	6001      	str	r1, [r0, #0]
  42:	a81e      	add	r0, sp, #120	; 0x78
  44:	9915      	ldr	r1, [sp, #84]	; 0x54
  46:	9a14      	ldr	r2, [sp, #80]	; 0x50
  48:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4a:	f7ff fffe 	bl	0 <embedded_graphics::primitives::rectangle::Rectangle<C>::new>
  4e:	e7ff      	b.n	50 <app::display::test_display+0x50>
  50:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:23
        .fill( Some( Rgb565::from(( 0x00, 0x00, 0x00 )) ) );  //  Black
  52:	f88d 0098 	strb.w	r0, [sp, #152]	; 0x98
  56:	f88d 0099 	strb.w	r0, [sp, #153]	; 0x99
  5a:	f88d 009a 	strb.w	r0, [sp, #154]	; 0x9a
  5e:	f89d 009a 	ldrb.w	r0, [sp, #154]	; 0x9a
  62:	f8bd 1098 	ldrh.w	r1, [sp, #152]	; 0x98
  66:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
  6a:	f7ff fffe 	bl	0 <<embedded_graphics::pixelcolor::rgb565::Rgb565 as core::convert::From<(u8, u8, u8)>>::from>
  6e:	9010      	str	r0, [sp, #64]	; 0x40
  70:	e7ff      	b.n	72 <app::display::test_display+0x72>
  72:	9810      	ldr	r0, [sp, #64]	; 0x40
  74:	f8ad 0096 	strh.w	r0, [sp, #150]	; 0x96
  78:	2101      	movs	r1, #1
  7a:	f8ad 1094 	strh.w	r1, [sp, #148]	; 0x94
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:21
    let background = Rectangle::<Rgb565>
  7e:	f8bd 3096 	ldrh.w	r3, [sp, #150]	; 0x96
  82:	f8bd 2094 	ldrh.w	r2, [sp, #148]	; 0x94
  86:	a817      	add	r0, sp, #92	; 0x5c
  88:	a91e      	add	r1, sp, #120	; 0x78
  8a:	f7ff fffe 	bl	0 <<embedded_graphics::primitives::rectangle::Rectangle<C> as embedded_graphics::style::WithStyle<C>>::fill>
  8e:	e7ff      	b.n	90 <app::display::test_display+0x90>
  90:	2028      	movs	r0, #40	; 0x28
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:27

    //  Create circle
    let circle = Circle::<Rgb565>
        ::new( Coord::new( 40, 40 ), 40 )                     //  Circle centre and radius
  92:	900f      	str	r0, [sp, #60]	; 0x3c
  94:	990f      	ldr	r1, [sp, #60]	; 0x3c
  96:	f7ff fffe 	bl	0 <embedded_graphics::coord::internal_coord::Coord::new>
  9a:	900e      	str	r0, [sp, #56]	; 0x38
  9c:	910d      	str	r1, [sp, #52]	; 0x34
  9e:	e7ff      	b.n	a0 <app::display::test_display+0xa0>
  a0:	a82d      	add	r0, sp, #180	; 0xb4
  a2:	2328      	movs	r3, #40	; 0x28
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:26
    let circle = Circle::<Rgb565>
  a4:	990e      	ldr	r1, [sp, #56]	; 0x38
  a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  a8:	f7ff fffe 	bl	0 <embedded_graphics::primitives::circle::Circle<C>::new>
  ac:	e7ff      	b.n	ae <app::display::test_display+0xae>
  ae:	20ff      	movs	r0, #255	; 0xff
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:28
        .fill( Some( Rgb565::from(( 0xff, 0x00, 0xff )) ) );  //  Magenta
  b0:	f88d 00d0 	strb.w	r0, [sp, #208]	; 0xd0
  b4:	2100      	movs	r1, #0
  b6:	f88d 10d1 	strb.w	r1, [sp, #209]	; 0xd1
  ba:	f88d 00d2 	strb.w	r0, [sp, #210]	; 0xd2
  be:	f89d 00d2 	ldrb.w	r0, [sp, #210]	; 0xd2
  c2:	f8bd 10d0 	ldrh.w	r1, [sp, #208]	; 0xd0
  c6:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
  ca:	f7ff fffe 	bl	0 <<embedded_graphics::pixelcolor::rgb565::Rgb565 as core::convert::From<(u8, u8, u8)>>::from>
  ce:	900c      	str	r0, [sp, #48]	; 0x30
  d0:	e7ff      	b.n	d2 <app::display::test_display+0xd2>
  d2:	980c      	ldr	r0, [sp, #48]	; 0x30
  d4:	f8ad 00ce 	strh.w	r0, [sp, #206]	; 0xce
  d8:	2101      	movs	r1, #1
  da:	f8ad 10cc 	strh.w	r1, [sp, #204]	; 0xcc
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:26
    let circle = Circle::<Rgb565>
  de:	f8bd 30ce 	ldrh.w	r3, [sp, #206]	; 0xce
  e2:	f8bd 20cc 	ldrh.w	r2, [sp, #204]	; 0xcc
  e6:	a827      	add	r0, sp, #156	; 0x9c
  e8:	a92d      	add	r1, sp, #180	; 0xb4
  ea:	f7ff fffe 	bl	0 <<embedded_graphics::primitives::circle::Circle<C> as embedded_graphics::style::WithStyle<C>>::fill>
  ee:	e7ff      	b.n	f0 <app::display::test_display+0xf0>
  f0:	203c      	movs	r0, #60	; 0x3c
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:32

    //  Create square
    let square = Rectangle::<Rgb565>
        ::new( Coord::new( 60, 60 ), Coord::new( 150, 150 ) ) //  Square coordinates
  f2:	900b      	str	r0, [sp, #44]	; 0x2c
  f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  f6:	f7ff fffe 	bl	0 <embedded_graphics::coord::internal_coord::Coord::new>
  fa:	900a      	str	r0, [sp, #40]	; 0x28
  fc:	9109      	str	r1, [sp, #36]	; 0x24
  fe:	e7ff      	b.n	100 <app::display::test_display+0x100>
 100:	2096      	movs	r0, #150	; 0x96
 102:	9008      	str	r0, [sp, #32]
 104:	9908      	ldr	r1, [sp, #32]
 106:	f7ff fffe 	bl	0 <embedded_graphics::coord::internal_coord::Coord::new>
 10a:	9007      	str	r0, [sp, #28]
 10c:	9106      	str	r1, [sp, #24]
 10e:	e7ff      	b.n	110 <app::display::test_display+0x110>
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:31
    let square = Rectangle::<Rgb565>
 110:	4668      	mov	r0, sp
 112:	9906      	ldr	r1, [sp, #24]
 114:	6001      	str	r1, [r0, #0]
 116:	a83c      	add	r0, sp, #240	; 0xf0
 118:	990a      	ldr	r1, [sp, #40]	; 0x28
 11a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 11c:	9b07      	ldr	r3, [sp, #28]
 11e:	f7ff fffe 	bl	0 <embedded_graphics::primitives::rectangle::Rectangle<C>::new>
 122:	e7ff      	b.n	124 <app::display::test_display+0x124>
 124:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:33
        .fill( Some( Rgb565::from(( 0x00, 0x00, 0xff )) ) );  //  Blue
 126:	f88d 0110 	strb.w	r0, [sp, #272]	; 0x110
 12a:	f88d 0111 	strb.w	r0, [sp, #273]	; 0x111
 12e:	20ff      	movs	r0, #255	; 0xff
 130:	f88d 0112 	strb.w	r0, [sp, #274]	; 0x112
 134:	f89d 0112 	ldrb.w	r0, [sp, #274]	; 0x112
 138:	f8bd 1110 	ldrh.w	r1, [sp, #272]	; 0x110
 13c:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
 140:	f7ff fffe 	bl	0 <<embedded_graphics::pixelcolor::rgb565::Rgb565 as core::convert::From<(u8, u8, u8)>>::from>
 144:	9005      	str	r0, [sp, #20]
 146:	e7ff      	b.n	148 <app::display::test_display+0x148>
 148:	9805      	ldr	r0, [sp, #20]
 14a:	f8ad 010e 	strh.w	r0, [sp, #270]	; 0x10e
 14e:	2101      	movs	r1, #1
 150:	f8ad 110c 	strh.w	r1, [sp, #268]	; 0x10c
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:31
    let square = Rectangle::<Rgb565>
 154:	f8bd 310e 	ldrh.w	r3, [sp, #270]	; 0x10e
 158:	f8bd 210c 	ldrh.w	r2, [sp, #268]	; 0x10c
 15c:	a835      	add	r0, sp, #212	; 0xd4
 15e:	a93c      	add	r1, sp, #240	; 0xf0
 160:	f7ff fffe 	bl	0 <<embedded_graphics::primitives::rectangle::Rectangle<C> as embedded_graphics::style::WithStyle<C>>::fill>
 164:	e7ff      	b.n	2 <app::display::test_display+0x2>
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:36

    //  Create text
    let text = fonts::Font12x16::<Rgb565>
 166:	f240 0100 	movw	r1, #0
 16a:	f2c0 0100 	movt	r1, #0
 16e:	a85a      	add	r0, sp, #360	; 0x168
 170:	220d      	movs	r2, #13
 172:	f7ff fffe 	bl	0 <<embedded_graphics::fonts::font_builder::FontBuilder<C,Conf> as embedded_graphics::fonts::Font<C>>::render_str>
 176:	e7ff      	b.n	178 <app::display::test_display+0x178>
 178:	2000      	movs	r0, #0
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:38
        ::render_str("I AM PINETIME")                          //  Text to be rendered
        .stroke( Some( Rgb565::from(( 0x00, 0x00, 0x00 )) ) )  //  Black text
 17a:	f88d 0188 	strb.w	r0, [sp, #392]	; 0x188
 17e:	f88d 0189 	strb.w	r0, [sp, #393]	; 0x189
 182:	f88d 018a 	strb.w	r0, [sp, #394]	; 0x18a
 186:	f89d 018a 	ldrb.w	r0, [sp, #394]	; 0x18a
 18a:	f8bd 1188 	ldrh.w	r1, [sp, #392]	; 0x188
 18e:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
 192:	f7ff fffe 	bl	0 <<embedded_graphics::pixelcolor::rgb565::Rgb565 as core::convert::From<(u8, u8, u8)>>::from>
 196:	9004      	str	r0, [sp, #16]
 198:	e7ff      	b.n	19a <app::display::test_display+0x19a>
 19a:	9804      	ldr	r0, [sp, #16]
 19c:	f8ad 0186 	strh.w	r0, [sp, #390]	; 0x186
 1a0:	2101      	movs	r1, #1
 1a2:	f8ad 1184 	strh.w	r1, [sp, #388]	; 0x184
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:36
    let text = fonts::Font12x16::<Rgb565>
 1a6:	f8bd 3186 	ldrh.w	r3, [sp, #390]	; 0x186
 1aa:	f8bd 2184 	ldrh.w	r2, [sp, #388]	; 0x184
 1ae:	a853      	add	r0, sp, #332	; 0x14c
 1b0:	a95a      	add	r1, sp, #360	; 0x168
 1b2:	f7ff fffe 	bl	0 <<embedded_graphics::fonts::font_builder::FontBuilder<C,Conf> as embedded_graphics::style::WithStyle<C>>::stroke>
 1b6:	e7ff      	b.n	1b8 <app::display::test_display+0x1b8>
 1b8:	20ff      	movs	r0, #255	; 0xff
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:39
        .fill(   Some( Rgb565::from(( 0xff, 0xff, 0x00 )) ) )  //  Yellow background
 1ba:	f88d 0190 	strb.w	r0, [sp, #400]	; 0x190
 1be:	f88d 0191 	strb.w	r0, [sp, #401]	; 0x191
 1c2:	2000      	movs	r0, #0
 1c4:	f88d 0192 	strb.w	r0, [sp, #402]	; 0x192
 1c8:	f89d 0192 	ldrb.w	r0, [sp, #402]	; 0x192
 1cc:	f8bd 1190 	ldrh.w	r1, [sp, #400]	; 0x190
 1d0:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
 1d4:	f7ff fffe 	bl	0 <<embedded_graphics::pixelcolor::rgb565::Rgb565 as core::convert::From<(u8, u8, u8)>>::from>
 1d8:	9003      	str	r0, [sp, #12]
 1da:	e7ff      	b.n	1dc <app::display::test_display+0x1dc>
 1dc:	9803      	ldr	r0, [sp, #12]
 1de:	f8ad 018e 	strh.w	r0, [sp, #398]	; 0x18e
 1e2:	2101      	movs	r1, #1
 1e4:	f8ad 118c 	strh.w	r1, [sp, #396]	; 0x18c
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:36
    let text = fonts::Font12x16::<Rgb565>
 1e8:	f8bd 318e 	ldrh.w	r3, [sp, #398]	; 0x18e
 1ec:	f8bd 218c 	ldrh.w	r2, [sp, #396]	; 0x18c
 1f0:	a84c      	add	r0, sp, #304	; 0x130
 1f2:	a953      	add	r1, sp, #332	; 0x14c
 1f4:	f7ff fffe 	bl	0 <<embedded_graphics::fonts::font_builder::FontBuilder<C,Conf> as embedded_graphics::style::WithStyle<C>>::fill>
 1f8:	e7ff      	b.n	1fa <app::display::test_display+0x1fa>
 1fa:	2014      	movs	r0, #20
 1fc:	2110      	movs	r1, #16
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:40
        .translate( Coord::new( 20, 16 ));                     //  Shift the text
 1fe:	f7ff fffe 	bl	0 <embedded_graphics::coord::internal_coord::Coord::new>
 202:	9002      	str	r0, [sp, #8]
 204:	9101      	str	r1, [sp, #4]
 206:	e7ff      	b.n	208 <app::display::test_display+0x208>
 208:	a845      	add	r0, sp, #276	; 0x114
 20a:	a94c      	add	r1, sp, #304	; 0x130
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:36
    let text = fonts::Font12x16::<Rgb565>
 20c:	9a02      	ldr	r2, [sp, #8]
 20e:	9b01      	ldr	r3, [sp, #4]
 210:	f7ff fffe 	bl	0 <<embedded_graphics::fonts::font_builder::FontBuilder<C,Conf> as embedded_graphics::transform::Transform>::translate>
 214:	e7ff      	b.n	216 <app::display::test_display+0x216>
 216:	a817      	add	r0, sp, #92	; 0x5c
 218:	a965      	add	r1, sp, #404	; 0x194
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:43

    //  Render background, circle, square and text to display
    druid::draw_to_display(background);
 21a:	460a      	mov	r2, r1
 21c:	e8b0 5008 	ldmia.w	r0!, {r3, ip, lr}
 220:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
 224:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
 228:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
 22c:	4608      	mov	r0, r1
 22e:	f7ff fffe 	bl	0 <piet_embedded_graphics::display::draw_to_display>
 232:	e7ff      	b.n	234 <app::display::test_display+0x234>
 234:	a827      	add	r0, sp, #156	; 0x9c
 236:	a96c      	add	r1, sp, #432	; 0x1b0
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:44
    druid::draw_to_display(circle);
 238:	460a      	mov	r2, r1
 23a:	e890 5078 	ldmia.w	r0, {r3, r4, r5, r6, ip, lr}
 23e:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
 242:	4608      	mov	r0, r1
 244:	f7ff fffe 	bl	0 <piet_embedded_graphics::display::draw_to_display>
 248:	e7ff      	b.n	24a <app::display::test_display+0x24a>
 24a:	a835      	add	r0, sp, #212	; 0xd4
 24c:	a972      	add	r1, sp, #456	; 0x1c8
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:45
    druid::draw_to_display(square);
 24e:	460a      	mov	r2, r1
 250:	e8b0 5008 	ldmia.w	r0!, {r3, ip, lr}
 254:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
 258:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
 25c:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
 260:	4608      	mov	r0, r1
 262:	f7ff fffe 	bl	0 <piet_embedded_graphics::display::draw_to_display>
 266:	e7ff      	b.n	268 <app::display::test_display+0x268>
 268:	a845      	add	r0, sp, #276	; 0x114
 26a:	a979      	add	r1, sp, #484	; 0x1e4
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:46
    druid::draw_to_display(text);    
 26c:	460a      	mov	r2, r1
 26e:	e8b0 5008 	ldmia.w	r0!, {r3, ip, lr}
 272:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
 276:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
 27a:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
 27e:	4608      	mov	r0, r1
 280:	f7ff fffe 	bl	0 <piet_embedded_graphics::display::draw_to_display>
 284:	e7ff      	b.n	286 <app::display::test_display+0x286>
 286:	2001      	movs	r0, #1
/home/pi/pinetime-rust-mynewt/rust/app/src/display.rs:50

    //  Return success to the caller
    Ok(())
 288:	f50d 7d00 	add.w	sp, sp, #512	; 0x200
 28c:	bd70      	pop	{r4, r5, r6, pc}

app-64de0327356ea83b.ymirq93oxk61xh0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ymirq93oxk61xh0
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000073 l       .debug_str	00000000 
00000078 l       .debug_str	00000000 
0000007c l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000087 l       .debug_str	00000000 
0000008b l       .debug_str	00000000 
00000092 l       .debug_str	00000000 
0000009b l       .debug_str	00000000 
0000009e l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000af l       .debug_str	00000000 
000000b5 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000bc l       .debug_str	00000000 
00000103 l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011d l       .debug_str	00000000 
00000121 l       .debug_str	00000000 
00000126 l       .debug_str	00000000 
0000012c l       .debug_str	00000000 
00000131 l       .debug_str	00000000 
00000135 l       .debug_str	00000000 
00000143 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
00000188 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
000001b8 l       .debug_str	00000000 
000001c1 l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000224 l       .debug_str	00000000 
0000022c l       .debug_str	00000000 
00000234 l       .debug_str	00000000 
0000023b l       .debug_str	00000000 
0000024f l       .debug_str	00000000 
0000025b l       .debug_str	00000000 
00000260 l       .debug_str	00000000 
00000000 l    d  .text._ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17hc26e679800acc2bdE	00000000 .text._ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17hc26e679800acc2bdE
00000000 l    d  .text._ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h1d3ba31cc5337b81E	00000000 .text._ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h1d3ba31cc5337b81E
00000000 l    d  .text._ZN4core3any6TypeId2of17h8c9bbc6193a34626E	00000000 .text._ZN4core3any6TypeId2of17h8c9bbc6193a34626E
00000000 l    d  .text._ZN54_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$12downcast_ref17hcc6f8be311eacc9bE	00000000 .text._ZN54_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$12downcast_ref17hcc6f8be311eacc9bE
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000 g     F .text._ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17hc26e679800acc2bdE	00000030 <dyn core::any::Any>::downcast_ref
00000000 g     F .text._ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h1d3ba31cc5337b81E	00000036 <dyn core::any::Any>::is
00000000 g     F .text._ZN4core3any6TypeId2of17h8c9bbc6193a34626E	00000030 core::any::TypeId::of
00000000 g     F .text._ZN54_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$12downcast_ref17hcc6f8be311eacc9bE	0000001a <dyn core::any::Any+core::marker::Send>::downcast_ref
00000000         *UND*	00000000 .hidden <core::any::TypeId as core::cmp::PartialEq>::eq



Disassembly of section .text._ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17hc26e679800acc2bdE:

00000000 <<dyn core::any::Any>::downcast_ref>:
_ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17hc26e679800acc2bdE():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:195
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	9001      	str	r0, [sp, #4]
   6:	9102      	str	r1, [sp, #8]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:196
   8:	9801      	ldr	r0, [sp, #4]
   a:	9902      	ldr	r1, [sp, #8]
   c:	f7ff fffe 	bl	0 <<dyn core::any::Any>::downcast_ref>
  10:	9000      	str	r0, [sp, #0]
  12:	e7ff      	b.n	14 <<dyn core::any::Any>::downcast_ref+0x14>
  14:	9800      	ldr	r0, [sp, #0]
  16:	07c1      	lsls	r1, r0, #31
  18:	2900      	cmp	r1, #0
  1a:	d103      	bne.n	24 <<dyn core::any::Any>::downcast_ref+0x24>
  1c:	e7ff      	b.n	1e <<dyn core::any::Any>::downcast_ref+0x1e>
  1e:	2000      	movs	r0, #0
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:200
  20:	9003      	str	r0, [sp, #12]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:196
  22:	e002      	b.n	2a <<dyn core::any::Any>::downcast_ref+0x2a>
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:198
  24:	9801      	ldr	r0, [sp, #4]
  26:	9003      	str	r0, [sp, #12]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:196
  28:	e7ff      	b.n	2a <<dyn core::any::Any>::downcast_ref+0x2a>
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:202
  2a:	9803      	ldr	r0, [sp, #12]
  2c:	b004      	add	sp, #16
  2e:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h1d3ba31cc5337b81E:

00000000 <<dyn core::any::Any>::is>:
_ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h1d3ba31cc5337b81E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:163
   0:	b580      	push	{r7, lr}
   2:	b088      	sub	sp, #32
   4:	9002      	str	r0, [sp, #8]
   6:	9103      	str	r1, [sp, #12]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:165
   8:	f7ff fffe 	bl	0 <<dyn core::any::Any>::is>
   c:	9105      	str	r1, [sp, #20]
   e:	9004      	str	r0, [sp, #16]
  10:	e7ff      	b.n	12 <<dyn core::any::Any>::is+0x12>
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:168
  12:	9802      	ldr	r0, [sp, #8]
  14:	9903      	ldr	r1, [sp, #12]
  16:	68c9      	ldr	r1, [r1, #12]
  18:	4788      	blx	r1
  1a:	9107      	str	r1, [sp, #28]
  1c:	9006      	str	r0, [sp, #24]
  1e:	e7ff      	b.n	20 <<dyn core::any::Any>::is+0x20>
  20:	a804      	add	r0, sp, #16
  22:	a906      	add	r1, sp, #24
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:171
  24:	f7ff fffe 	bl	0 <<core::any::TypeId as core::cmp::PartialEq>::eq>
  28:	9001      	str	r0, [sp, #4]
  2a:	e7ff      	b.n	2c <<dyn core::any::Any>::is+0x2c>
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:172
  2c:	9801      	ldr	r0, [sp, #4]
  2e:	f000 0001 	and.w	r0, r0, #1
  32:	b008      	add	sp, #32
  34:	bd80      	pop	{r7, pc}

Disassembly of section .text._ZN4core3any6TypeId2of17h8c9bbc6193a34626E:

00000000 <core::any::TypeId::of>:
_ZN4core3any6TypeId2of17h8c9bbc6193a34626E():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:435
   0:	b086      	sub	sp, #24
   2:	f249 40d9 	movw	r0, #38105	; 0x94d9
   6:	f2c1 1010 	movt	r0, #4368	; 0x1110
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:436
   a:	9005      	str	r0, [sp, #20]
   c:	f249 7064 	movw	r0, #38756	; 0x9764
  10:	f2c7 00b0 	movt	r0, #28848	; 0x70b0
  14:	9004      	str	r0, [sp, #16]
  16:	9804      	ldr	r0, [sp, #16]
  18:	9905      	ldr	r1, [sp, #20]
  1a:	9001      	str	r0, [sp, #4]
  1c:	9100      	str	r1, [sp, #0]
  1e:	e7ff      	b.n	20 <core::any::TypeId::of+0x20>
  20:	9801      	ldr	r0, [sp, #4]
  22:	9002      	str	r0, [sp, #8]
  24:	9900      	ldr	r1, [sp, #0]
  26:	9103      	str	r1, [sp, #12]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:437
  28:	9802      	ldr	r0, [sp, #8]
  2a:	9903      	ldr	r1, [sp, #12]
  2c:	b006      	add	sp, #24
  2e:	4770      	bx	lr

Disassembly of section .text._ZN54_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$12downcast_ref17hcc6f8be311eacc9bE:

00000000 <<dyn core::any::Any+core::marker::Send>::downcast_ref>:
_ZN54_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$12downcast_ref17hcc6f8be311eacc9bE():
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:284
   0:	b580      	push	{r7, lr}
   2:	b084      	sub	sp, #16
   4:	9002      	str	r0, [sp, #8]
   6:	9103      	str	r1, [sp, #12]
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:285
   8:	9802      	ldr	r0, [sp, #8]
   a:	9903      	ldr	r1, [sp, #12]
   c:	f7ff fffe 	bl	0 <<dyn core::any::Any+core::marker::Send>::downcast_ref>
  10:	9001      	str	r0, [sp, #4]
  12:	e7ff      	b.n	14 <<dyn core::any::Any+core::marker::Send>::downcast_ref+0x14>
/rustc/689fca01c5a1eac2d240bf08aa728171a28f2285/src/libcore/any.rs:286
  14:	9801      	ldr	r0, [sp, #4]
  16:	b004      	add	sp, #16
  18:	bd80      	pop	{r7, pc}
arm-none-eabi-objdump: lib.rmeta: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.1vlhu7lg5k3q5ofr.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.1vsvaoo9izfswooh.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.2mh4kgt9xr3mfq1p.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.3dzu8dxdhnv32vdt.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.3erkq1nfprj38ic8.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.3wj6vjxv4swb8lkk.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.3xbp7ejhxu6hk8zc.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.4arywuiw9pa2pf61.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.4br1ws4odbst9zpv.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.4ywj6h555ouoa23u.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.55k9ceqnndxrxho0.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.fwcvbuvt7ot1nwf.rcgu.bc.z: file format not recognized
arm-none-eabi-objdump: app-64de0327356ea83b.ymirq93oxk61xh0.rcgu.bc.z: file format not recognized
