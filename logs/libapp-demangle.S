In archive target/thumbv7m-none-eabi/release/libapp.rlib:

app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.o6vxcoia-cgu.0
0000229f l       .debug_str	00000000 
00002bde l       .debug_str	00000000 
00002bf3 l       .debug_str	00000000 
00002c1d l       .debug_str	00000000 
00002c26 l       .debug_str	00000000 
00002c96 l       .debug_str	00000000 
00002ce9 l       .debug_str	00000000 
00002d38 l       .debug_str	00000000 
00002d78 l       .debug_str	00000000 
00002d9f l       .debug_str	00000000 
00002da3 l       .debug_str	00000000 
00002da5 l       .debug_str	00000000 
00002da7 l       .debug_str	00000000 
00002db1 l       .debug_str	00000000 
00002dba l       .debug_str	00000000 
00002dc3 l       .debug_str	00000000 
00002dce l       .debug_str	00000000 
00002dd8 l       .debug_str	00000000 
00002dff l       .debug_str	00000000 
00002e17 l       .debug_str	00000000 
00002e21 l       .debug_str	00000000 
00002e44 l       .debug_str	00000000 
00002e8c l       .debug_str	00000000 
00002ecc l       .debug_str	00000000 
00002f13 l       .debug_str	00000000 
00002f1c l       .debug_str	00000000 
00002f20 l       .debug_str	00000000 
00002f4a l       .debug_str	00000000 
00002f4f l       .debug_str	00000000 
00002f52 l       .debug_str	00000000 
00002f9c l       .debug_str	00000000 
00002fa5 l       .debug_str	00000000 
00002fd8 l       .debug_str	00000000 
00003003 l       .debug_str	00000000 
00003005 l       .debug_str	00000000 
00003041 l       .debug_str	00000000 
00003054 l       .debug_str	00000000 
00003059 l       .debug_str	00000000 
0000306b l       .debug_str	00000000 
00003071 l       .debug_str	00000000 
00003077 l       .debug_str	00000000 
00003079 l       .debug_str	00000000 
0000307f l       .debug_str	00000000 
00003084 l       .debug_str	00000000 
00003091 l       .debug_str	00000000 
00003096 l       .debug_str	00000000 
0000309e l       .debug_str	00000000 
000030a2 l       .debug_str	00000000 
000030a7 l       .debug_str	00000000 
000030af l       .debug_str	00000000 
000030c5 l       .debug_str	00000000 
000030e3 l       .debug_str	00000000 
000030ec l       .debug_str	00000000 
000030f1 l       .debug_str	00000000 
000030f6 l       .debug_str	00000000 
000030fa l       .debug_str	00000000 
00003103 l       .debug_str	00000000 
0000310d l       .debug_str	00000000 
00003125 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
000000a2 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b8 l       .debug_str	00000000 
000000bc l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000cf l       .debug_str	00000000 
000000d6 l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
000000e2 l       .debug_str	00000000 
000000e7 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
0000014f l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000161 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
00000177 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
00000195 l       .debug_str	00000000 
000001a2 l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
00000204 l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000229 l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
00000242 l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
0000025c l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
0000026c l       .debug_str	00000000 
00000273 l       .debug_str	00000000 
00000278 l       .debug_str	00000000 
00000284 l       .debug_str	00000000 
0000028c l       .debug_str	00000000 
00000293 l       .debug_str	00000000 
00000297 l       .debug_str	00000000 
0000029c l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002aa l       .debug_str	00000000 
000002ad l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
000002bd l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002c7 l       .debug_str	00000000 
000002cd l       .debug_str	00000000 
000002d3 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e0 l       .debug_str	00000000 
000002e6 l       .debug_str	00000000 
000002f0 l       .debug_str	00000000 
000002f8 l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000304 l       .debug_str	00000000 
0000030f l       .debug_str	00000000 
00000318 l       .debug_str	00000000 
0000033b l       .debug_str	00000000 
0000035a l       .debug_str	00000000 
0000035c l       .debug_str	00000000 
00000361 l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
0000038d l       .debug_str	00000000 
00000393 l       .debug_str	00000000 
00000399 l       .debug_str	00000000 
0000039c l       .debug_str	00000000 
000003ab l       .debug_str	00000000 
000003b2 l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003bf l       .debug_str	00000000 
000003c7 l       .debug_str	00000000 
000003cf l       .debug_str	00000000 
000003d6 l       .debug_str	00000000 
000003ea l       .debug_str	00000000 
000003f6 l       .debug_str	00000000 
00000402 l       .debug_str	00000000 
0000041b l       .debug_str	00000000 
00000420 l       .debug_str	00000000 
00000431 l       .debug_str	00000000 
0000043b l       .debug_str	00000000 
00000449 l       .debug_str	00000000 
0000044d l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
0000045f l       .debug_str	00000000 
00000465 l       .debug_str	00000000 
00000469 l       .debug_str	00000000 
0000046d l       .debug_str	00000000 
00000475 l       .debug_str	00000000 
0000048c l       .debug_str	00000000 
000004b0 l       .debug_str	00000000 
000004cc l       .debug_str	00000000 
000004d6 l       .debug_str	00000000 
000004f0 l       .debug_str	00000000 
0000054e l       .debug_str	00000000 
00000559 l       .debug_str	00000000 
00000576 l       .debug_str	00000000 
0000058f l       .debug_str	00000000 
00000599 l       .debug_str	00000000 
000005cb l       .debug_str	00000000 
000005d2 l       .debug_str	00000000 
0000060b l       .debug_str	00000000 
0000061b l       .debug_str	00000000 
0000061e l       .debug_str	00000000 
00000625 l       .debug_str	00000000 
00000629 l       .debug_str	00000000 
0000062d l       .debug_str	00000000 
00000632 l       .debug_str	00000000 
00000638 l       .debug_str	00000000 
0000063c l       .debug_str	00000000 
0000064c l       .debug_str	00000000 
00000658 l       .debug_str	00000000 
00000664 l       .debug_str	00000000 
0000067b l       .debug_str	00000000 
00000687 l       .debug_str	00000000 
0000068b l       .debug_str	00000000 
00000698 l       .debug_str	00000000 
000006bc l       .debug_str	00000000 
000006c8 l       .debug_str	00000000 
000006d6 l       .debug_str	00000000 
000006ed l       .debug_str	00000000 
00000702 l       .debug_str	00000000 
00000705 l       .debug_str	00000000 
00000725 l       .debug_str	00000000 
0000072e l       .debug_str	00000000 
00000737 l       .debug_str	00000000 
00000740 l       .debug_str	00000000 
0000074c l       .debug_str	00000000 
00000754 l       .debug_str	00000000 
0000075c l       .debug_str	00000000 
00000762 l       .debug_str	00000000 
00000785 l       .debug_str	00000000 
00000796 l       .debug_str	00000000 
000007a2 l       .debug_str	00000000 
000007dd l       .debug_str	00000000 
000007ee l       .debug_str	00000000 
000007f0 l       .debug_str	00000000 
00000818 l       .debug_str	00000000 
00000839 l       .debug_str	00000000 
0000083d l       .debug_str	00000000 
00000847 l       .debug_str	00000000 
0000084c l       .debug_str	00000000 
0000085a l       .debug_str	00000000 
00000863 l       .debug_str	00000000 
00000871 l       .debug_str	00000000 
0000087c l       .debug_str	00000000 
0000088e l       .debug_str	00000000 
000008a2 l       .debug_str	00000000 
000008a6 l       .debug_str	00000000 
000008af l       .debug_str	00000000 
0000091f l       .debug_str	00000000 
00000955 l       .debug_str	00000000 
00000987 l       .debug_str	00000000 
0000098c l       .debug_str	00000000 
000009fc l       .debug_str	00000000 
00000a2a l       .debug_str	00000000 
00000a54 l       .debug_str	00000000 
00000a93 l       .debug_str	00000000 
00000aa9 l       .debug_str	00000000 
00000aaf l       .debug_str	00000000 
00000ab6 l       .debug_str	00000000 
00000ab9 l       .debug_str	00000000 
00000ac5 l       .debug_str	00000000 
00000acd l       .debug_str	00000000 
00000b27 l       .debug_str	00000000 
00000b89 l       .debug_str	00000000 
00000b94 l       .debug_str	00000000 
00000bdb l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c34 l       .debug_str	00000000 
00000c71 l       .debug_str	00000000 
00000cb6 l       .debug_str	00000000 
00000cbf l       .debug_str	00000000 
00000ccf l       .debug_str	00000000 
00000cd7 l       .debug_str	00000000 
00000d2c l       .debug_str	00000000 
00000d89 l       .debug_str	00000000 
00000d95 l       .debug_str	00000000 
00000d9e l       .debug_str	00000000 
00000daa l       .debug_str	00000000 
00000db6 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000dc7 l       .debug_str	00000000 
00000dcf l       .debug_str	00000000 
00000dd9 l       .debug_str	00000000 
00000dee l       .debug_str	00000000 
00000df5 l       .debug_str	00000000 
00000e15 l       .debug_str	00000000 
00000e1c l       .debug_str	00000000 
00000e24 l       .debug_str	00000000 
00000e2e l       .debug_str	00000000 
00000e39 l       .debug_str	00000000 
00000e42 l       .debug_str	00000000 
00000e4d l       .debug_str	00000000 
00000e59 l       .debug_str	00000000 
00000e5d l       .debug_str	00000000 
00000e66 l       .debug_str	00000000 
00000e6d l       .debug_str	00000000 
00000e75 l       .debug_str	00000000 
00000e7d l       .debug_str	00000000 
00000e87 l       .debug_str	00000000 
00000e8d l       .debug_str	00000000 
00000e94 l       .debug_str	00000000 
00000e9b l       .debug_str	00000000 
00000ec8 l       .debug_str	00000000 
00000efd l       .debug_str	00000000 
00000f03 l       .debug_str	00000000 
00000f09 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f28 l       .debug_str	00000000 
00000f38 l       .debug_str	00000000 
00000f40 l       .debug_str	00000000 
00000f69 l       .debug_str	00000000 
00000fc7 l       .debug_str	00000000 
0000102d l       .debug_str	00000000 
00001034 l       .debug_str	00000000 
0000103c l       .debug_str	00000000 
00001045 l       .debug_str	00000000 
00001063 l       .debug_str	00000000 
00001073 l       .debug_str	00000000 
00001081 l       .debug_str	00000000 
0000108c l       .debug_str	00000000 
00001099 l       .debug_str	00000000 
000010a8 l       .debug_str	00000000 
000010be l       .debug_str	00000000 
000010c8 l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010da l       .debug_str	00000000 
00001100 l       .debug_str	00000000 
00001116 l       .debug_str	00000000 
00001121 l       .debug_str	00000000 
00001137 l       .debug_str	00000000 
0000113f l       .debug_str	00000000 
00001160 l       .debug_str	00000000 
00001177 l       .debug_str	00000000 
0000117c l       .debug_str	00000000 
00001184 l       .debug_str	00000000 
0000118d l       .debug_str	00000000 
00001196 l       .debug_str	00000000 
0000119f l       .debug_str	00000000 
000011a7 l       .debug_str	00000000 
000011ae l       .debug_str	00000000 
000011ba l       .debug_str	00000000 
000011c5 l       .debug_str	00000000 
000011cd l       .debug_str	00000000 
000011d5 l       .debug_str	00000000 
00001251 l       .debug_str	00000000 
000012d5 l       .debug_str	00000000 
000013d1 l       .debug_str	00000000 
000014d5 l       .debug_str	00000000 
000014e3 l       .debug_str	00000000 
000014ee l       .debug_str	00000000 
000014f8 l       .debug_str	00000000 
00001503 l       .debug_str	00000000 
00001531 l       .debug_str	00000000 
000015ac l       .debug_str	00000000 
0000162f l       .debug_str	00000000 
0000163d l       .debug_str	00000000 
0000169c l       .debug_str	00000000 
00001703 l       .debug_str	00000000 
00001719 l       .debug_str	00000000 
00001729 l       .debug_str	00000000 
00001738 l       .debug_str	00000000 
0000173c l       .debug_str	00000000 
00001742 l       .debug_str	00000000 
00001748 l       .debug_str	00000000 
0000174e l       .debug_str	00000000 
0000175e l       .debug_str	00000000 
00001791 l       .debug_str	00000000 
000017d1 l       .debug_str	00000000 
00001819 l       .debug_str	00000000 
0000181d l       .debug_str	00000000 
00001823 l       .debug_str	00000000 
00001829 l       .debug_str	00000000 
0000182f l       .debug_str	00000000 
00001841 l       .debug_str	00000000 
00001876 l       .debug_str	00000000 
000018b8 l       .debug_str	00000000 
00001902 l       .debug_str	00000000 
00001906 l       .debug_str	00000000 
0000190c l       .debug_str	00000000 
00001912 l       .debug_str	00000000 
00001918 l       .debug_str	00000000 
0000192a l       .debug_str	00000000 
0000195f l       .debug_str	00000000 
000019a1 l       .debug_str	00000000 
000019eb l       .debug_str	00000000 
000019ef l       .debug_str	00000000 
000019f5 l       .debug_str	00000000 
000019fb l       .debug_str	00000000 
00001a01 l       .debug_str	00000000 
00001a07 l       .debug_str	00000000 
00001a18 l       .debug_str	00000000 
00001a4c l       .debug_str	00000000 
00001a8d l       .debug_str	00000000 
00001ad6 l       .debug_str	00000000 
00001adb l       .debug_str	00000000 
00001ae0 l       .debug_str	00000000 
00001ae4 l       .debug_str	00000000 
00001aea l       .debug_str	00000000 
00001af0 l       .debug_str	00000000 
00001af6 l       .debug_str	00000000 
00001b07 l       .debug_str	00000000 
00001b3b l       .debug_str	00000000 
00001b7c l       .debug_str	00000000 
00001bc5 l       .debug_str	00000000 
00001bc9 l       .debug_str	00000000 
00001bfd l       .debug_str	00000000 
00001c3e l       .debug_str	00000000 
00001c87 l       .debug_str	00000000 
00001c8c l       .debug_str	00000000 
00001c90 l       .debug_str	00000000 
00001c99 l       .debug_str	00000000 
00001ca0 l       .debug_str	00000000 
00001ca8 l       .debug_str	00000000 
00001cba l       .debug_str	00000000 
00001cef l       .debug_str	00000000 
00001d31 l       .debug_str	00000000 
00001d7b l       .debug_str	00000000 
00001d7f l       .debug_str	00000000 
00001d85 l       .debug_str	00000000 
00001d8b l       .debug_str	00000000 
00001d91 l       .debug_str	00000000 
00001d97 l       .debug_str	00000000 
00001d9f l       .debug_str	00000000 
00001dad l       .debug_str	00000000 
00001dbc l       .debug_str	00000000 
00001dcd l       .debug_str	00000000 
00001dd8 l       .debug_str	00000000 
00001de3 l       .debug_str	00000000 
00001dee l       .debug_str	00000000 
00001df5 l       .debug_str	00000000 
00001e18 l       .debug_str	00000000 
00001e2a l       .debug_str	00000000 
00001e5f l       .debug_str	00000000 
00001ea1 l       .debug_str	00000000 
00001eeb l       .debug_str	00000000 
00001eef l       .debug_str	00000000 
00001ef9 l       .debug_str	00000000 
00001f0b l       .debug_str	00000000 
00001f40 l       .debug_str	00000000 
00001f82 l       .debug_str	00000000 
00001fcc l       .debug_str	00000000 
00001fd1 l       .debug_str	00000000 
00001fdb l       .debug_str	00000000 
00001fed l       .debug_str	00000000 
00002022 l       .debug_str	00000000 
00002064 l       .debug_str	00000000 
000020ae l       .debug_str	00000000 
000020c2 l       .debug_str	00000000 
000020d0 l       .debug_str	00000000 
000020e0 l       .debug_str	00000000 
000020e9 l       .debug_str	00000000 
000020f4 l       .debug_str	00000000 
00002103 l       .debug_str	00000000 
00002118 l       .debug_str	00000000 
00002149 l       .debug_str	00000000 
000021e6 l       .debug_str	00000000 
0000228b l       .debug_str	00000000 
00002296 l       .debug_str	00000000 
000022c0 l       .debug_str	00000000 
000022d3 l       .debug_str	00000000 
00002309 l       .debug_str	00000000 
0000238c l       .debug_str	00000000 
00002417 l       .debug_str	00000000 
00002433 l       .debug_str	00000000 
0000247f l       .debug_str	00000000 
000024d3 l       .debug_str	00000000 
000024f0 l       .debug_str	00000000 
00002504 l       .debug_str	00000000 
00002550 l       .debug_str	00000000 
000025a4 l       .debug_str	00000000 
000025ba l       .debug_str	00000000 
000025ce l       .debug_str	00000000 
00002615 l       .debug_str	00000000 
00002664 l       .debug_str	00000000 
0000266d l       .debug_str	00000000 
0000267b l       .debug_str	00000000 
000026ac l       .debug_str	00000000 
000026b2 l       .debug_str	00000000 
000026ba l       .debug_str	00000000 
000026c1 l       .debug_str	00000000 
000026c9 l       .debug_str	00000000 
000026d4 l       .debug_str	00000000 
000026dc l       .debug_str	00000000 
000026eb l       .debug_str	00000000 
000026ef l       .debug_str	00000000 
000026fa l       .debug_str	00000000 
00002706 l       .debug_str	00000000 
00002711 l       .debug_str	00000000 
00002722 l       .debug_str	00000000 
00002728 l       .debug_str	00000000 
00002730 l       .debug_str	00000000 
00002737 l       .debug_str	00000000 
00002741 l       .debug_str	00000000 
00002749 l       .debug_str	00000000 
00002751 l       .debug_str	00000000 
00002773 l       .debug_str	00000000 
0000277e l       .debug_str	00000000 
0000278a l       .debug_str	00000000 
00002792 l       .debug_str	00000000 
0000279b l       .debug_str	00000000 
000027a6 l       .debug_str	00000000 
000027ad l       .debug_str	00000000 
000027b8 l       .debug_str	00000000 
000027c3 l       .debug_str	00000000 
000027d3 l       .debug_str	00000000 
000027dd l       .debug_str	00000000 
000027e3 l       .debug_str	00000000 
00002805 l       .debug_str	00000000 
0000283d l       .debug_str	00000000 
0000287d l       .debug_str	00000000 
00002884 l       .debug_str	00000000 
0000288c l       .debug_str	00000000 
000028a3 l       .debug_str	00000000 
000028ac l       .debug_str	00000000 
000028bc l       .debug_str	00000000 
000028cb l       .debug_str	00000000 
000028d3 l       .debug_str	00000000 
000028da l       .debug_str	00000000 
000028e2 l       .debug_str	00000000 
00002900 l       .debug_str	00000000 
00002910 l       .debug_str	00000000 
00002943 l       .debug_str	00000000 
00002958 l       .debug_str	00000000 
00002961 l       .debug_str	00000000 
000029be l       .debug_str	00000000 
00002a23 l       .debug_str	00000000 
00002a2d l       .debug_str	00000000 
00002a3d l       .debug_str	00000000 
00002a52 l       .debug_str	00000000 
00002a5a l       .debug_str	00000000 
00002abe l       .debug_str	00000000 
00002b2a l       .debug_str	00000000 
00002b31 l       .debug_str	00000000 
00002b39 l       .debug_str	00000000 
00002b57 l       .debug_str	00000000 
00002b67 l       .debug_str	00000000 
00002b9a l       .debug_str	00000000 
00002baf l       .debug_str	00000000 
00002bc2 l       .debug_str	00000000 
00002bd7 l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000019 .Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.21	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.22	0000000d .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000000 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.26	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.26
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.27	00000005 .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.28	00000048 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.29	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.34	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.34
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.35	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.35
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.36
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000f .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E	0000000c app::app_sensor::SENSOR_DEVICE
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000298 app::app_sensor::handle_sensor_data
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	0000000c <&T as core::fmt::Display>::fmt
00000000 l     F .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000050 core::result::unwrap_failed
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000000 .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <str as core::fmt::Display>::fmt
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::fmt::Debug>::fmt
00000000         *UND*	00000000 mynewt::hw::sensor::as_untyped
00000000         *UND*	00000000 mynewt::hw::sensor::register_listener
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::set_poll_rate_ms
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::mgr_find_next_bydevname
00000000         *UND*	00000000 mynewt::sys::console::print_strn
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 mynewt::sys::console::buffer
00000000         *UND*	00000000 mynewt::sys::console::printhex
00000000         *UND*	00000000 mynewt::Strn::new
00000000         *UND*	00000000 mynewt::libs::sensor_network::prepare_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::get_device_id
00000000         *UND*	00000000 mynewt::libs::sensor_network::do_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::init_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::start_server_transport
00000000         *UND*	00000000 mynewt::kernel::os::eventq_run
00000000         *UND*	00000000 mynewt::kernel::os::eventq_dflt_get
00000000         *UND*	00000000 mynewt::sysinit
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::key_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::to_void_ptr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::value_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::json_set_text_string
00000000         *UND*	00000000 mynewt::encoding::coap_context::COAP_CONTEXT
00000000         *UND*	00000000 <str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000         *UND*	00000000 json_helper_close_array
00000000         *UND*	00000000 json_helper_object_array_end_item
00000000         *UND*	00000000 json_helper_object_array_start_item
00000000         *UND*	00000000 json_helper_set_array
00000000         *UND*	00000000 json_helper_set_int
00000000         *UND*	00000000 json_helper_set_text_string
00000000         *UND*	00000000 json_rep_end_root_object
00000000         *UND*	00000000 json_rep_start_root_object
00000000 g     F .text.main	000000e8 main
00000000         *UND*	00000000 null_sensor
00000000 g     F .text.rust_begin_unwind	00000066 rust_begin_unwind



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E:

00000000 <<&T as core::fmt::Display>::fmt>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <<str as core::fmt::Display>::fmt>

Disassembly of section .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E:

00000000 <core::result::unwrap_failed>:
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E:

00000000 <app::app_sensor::handle_sensor_data>:
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:73
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b08b      	sub	sp, #44	; 0x2c
   6:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:75
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("Rust handle_sensor_data\n");
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:78
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { sensor::is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <is_null_sensor_data>
  1e:	b120      	cbz	r0, 2a <app::app_sensor::handle_sensor_data+0x2a>
  20:	f06f 0001 	mvn.w	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  24:	b00b      	add	sp, #44	; 0x2c
  26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
  2a:	4628      	mov	r0, r5
  2c:	f7ff fffe 	bl	0 <is_null_sensor>
  30:	2800      	cmp	r0, #0
  32:	f040 811c 	bne.w	26e <app::app_sensor::handle_sensor_data+0x26e>
  36:	2000      	movs	r0, #0
  38:	a904      	add	r1, sp, #16
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:113
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3a:	f88d 0014 	strb.w	r0, [sp, #20]
  3e:	9004      	str	r0, [sp, #16]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:114
            let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
  46:	2800      	cmp	r0, #0
  48:	f040 8118 	bne.w	27c <app::app_sensor::handle_sensor_data+0x27c>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:118

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  4c:	f89d 0014 	ldrb.w	r0, [sp, #20]
  50:	2800      	cmp	r0, #0
  52:	f000 811a 	beq.w	28a <app::app_sensor::handle_sensor_data+0x28a>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  56:	f240 0000 	movw	r0, #0
  5a:	2119      	movs	r1, #25
  5c:	f2c0 0000 	movt	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:121
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  60:	9c04      	ldr	r4, [sp, #16]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:122
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  62:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:51
///   {"key":"device", "value":"0102030405060708090a0b0c0d0e0f10"},
///   {"key":"t",      "value":1715}
/// ]}
/// ```
pub fn send_sensor_data(val: &SensorValue) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console::print("Rust send_sensor_data\n");
  66:	f240 0000 	movw	r0, #0
  6a:	2116      	movs	r1, #22
  6c:	f2c0 0000 	movt	r0, #0
  70:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  74:	a804      	add	r0, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:53
    //  Get a randomly-generated device ID that changes each time we restart the device.
    let device_id = sensor_network::get_device_id() ?;
  76:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::get_device_id>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h99ed3ab290884f4dE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  7a:	e9dd 1004 	ldrd	r1, r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:53
  7e:	2901      	cmp	r1, #1
  80:	d015      	beq.n	ae <app::app_sensor::handle_sensor_data+0xae>
  82:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
  86:	ab01      	add	r3, sp, #4
  88:	ad04      	add	r5, sp, #16
  8a:	c307      	stmia	r3!, {r0, r1, r2}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:58

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post(strn!("")) ? ;
  8c:	f240 0100 	movw	r1, #0
  90:	f2c0 0100 	movt	r1, #0
  94:	4628      	mov	r0, r5
  96:	2201      	movs	r2, #1
  98:	f7ff fffe 	bl	0 <mynewt::Strn::new>
  9c:	a808      	add	r0, sp, #32
  9e:	4629      	mov	r1, r5
  a0:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::init_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  a4:	9808      	ldr	r0, [sp, #32]
  a6:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:58
  a8:	2901      	cmp	r1, #1
  aa:	d10d      	bne.n	c8 <app::app_sensor::handle_sensor_data+0xc8>
  ac:	9809      	ldr	r0, [sp, #36]	; 0x24
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
  ae:	3006      	adds	r0, #6
  b0:	d106      	bne.n	c0 <app::app_sensor::handle_sensor_data+0xc0>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:95
            console::print("TMP network not ready\n");
  b2:	f240 0000 	movw	r0, #0
  b6:	2116      	movs	r1, #22
  b8:	f2c0 0000 	movt	r0, #0
  bc:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  c0:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
}
  c2:	b00b      	add	sp, #44	; 0x2c
  c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:61

    //  If network transport not ready, tell caller (Sensor Listener) to try again later.
    if !rc { return Err(MynewtError::SYS_EAGAIN); }
  c8:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  cc:	d0f1      	beq.n	b2 <app::app_sensor::handle_sensor_data+0xb2>
  ce:	a804      	add	r0, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:65

    //  Compose the CoAP Payload using the coap!() macro.
    //  Select @json or @cbor To encode CoAP Payload in JSON or CBOR format.
    let _payload = coap!( @json {        
  d0:	2132      	movs	r1, #50	; 0x32
  d2:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::prepare_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  d6:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:65
  da:	2801      	cmp	r0, #1
  dc:	f000 80b2 	beq.w	244 <app::app_sensor::handle_sensor_data+0x244>
  e0:	f7ff fffe 	bl	0 <json_rep_start_root_object>
  e4:	f240 0a00 	movw	sl, #0
  e8:	f2c0 0a00 	movt	sl, #0
  ec:	4650      	mov	r0, sl
  ee:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
  f2:	f240 0100 	movw	r1, #0
  f6:	4607      	mov	r7, r0
  f8:	f2c0 0100 	movt	r1, #0
  fc:	4650      	mov	r0, sl
  fe:	2207      	movs	r2, #7
 100:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 104:	4601      	mov	r1, r0
 106:	4638      	mov	r0, r7
 108:	f7ff fffe 	bl	0 <json_helper_set_array>
 10c:	f240 0900 	movw	r9, #0
 110:	4650      	mov	r0, sl
 112:	f2c0 0900 	movt	r9, #0
 116:	220d      	movs	r2, #13
 118:	4649      	mov	r1, r9
 11a:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 11e:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 122:	ae08      	add	r6, sp, #32
 124:	f240 0100 	movw	r1, #0
 128:	f2c0 0100 	movt	r1, #0
 12c:	2204      	movs	r2, #4
 12e:	4630      	mov	r0, r6
 130:	f7ff fffe 	bl	0 <mynewt::Strn::new>
 134:	af04      	add	r7, sp, #16
 136:	f240 0100 	movw	r1, #0
 13a:	f2c0 0100 	movt	r1, #0
 13e:	2207      	movs	r2, #7
 140:	4638      	mov	r0, r7
 142:	f7ff fffe 	bl	0 <mynewt::Strn::new>
 146:	4650      	mov	r0, sl
 148:	4631      	mov	r1, r6
 14a:	463a      	mov	r2, r7
 14c:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::json_set_text_string>
 150:	ae04      	add	r6, sp, #16
 152:	f240 0100 	movw	r1, #0
 156:	f2c0 0100 	movt	r1, #0
 15a:	2206      	movs	r2, #6
 15c:	4630      	mov	r0, r6
 15e:	f7ff fffe 	bl	0 <mynewt::Strn::new>
 162:	aa01      	add	r2, sp, #4
 164:	4650      	mov	r0, sl
 166:	4631      	mov	r1, r6
 168:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::json_set_text_string>
 16c:	4650      	mov	r0, sl
 16e:	4649      	mov	r1, r9
 170:	220d      	movs	r2, #13
 172:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 176:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 17a:	4650      	mov	r0, sl
 17c:	4649      	mov	r1, r9
 17e:	220d      	movs	r2, #13
 180:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 184:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 188:	f240 0000 	movw	r0, #0
 18c:	2103      	movs	r1, #3
 18e:	f2c0 0000 	movt	r0, #0
 192:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 196:	4683      	mov	fp, r0
 198:	f240 0000 	movw	r0, #0
 19c:	460f      	mov	r7, r1
 19e:	f2c0 0000 	movt	r0, #0
 1a2:	2101      	movs	r1, #1
 1a4:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 1a8:	4605      	mov	r5, r0
 1aa:	4650      	mov	r0, sl
 1ac:	460e      	mov	r6, r1
 1ae:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
 1b2:	4680      	mov	r8, r0
 1b4:	4650      	mov	r0, sl
 1b6:	4659      	mov	r1, fp
 1b8:	463a      	mov	r2, r7
 1ba:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 1be:	4607      	mov	r7, r0
 1c0:	4650      	mov	r0, sl
 1c2:	4629      	mov	r1, r5
 1c4:	4632      	mov	r2, r6
 1c6:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::value_to_cstr>
 1ca:	4602      	mov	r2, r0
 1cc:	4640      	mov	r0, r8
 1ce:	4639      	mov	r1, r7
 1d0:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 1d4:	f240 0000 	movw	r0, #0
 1d8:	2105      	movs	r1, #5
 1da:	f2c0 0000 	movt	r0, #0
 1de:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 1e2:	4605      	mov	r5, r0
 1e4:	4650      	mov	r0, sl
 1e6:	460e      	mov	r6, r1
 1e8:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
 1ec:	4607      	mov	r7, r0
 1ee:	4650      	mov	r0, sl
 1f0:	4629      	mov	r1, r5
 1f2:	4632      	mov	r2, r6
 1f4:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 1f8:	4601      	mov	r1, r0
 1fa:	4638      	mov	r0, r7
 1fc:	4622      	mov	r2, r4
 1fe:	2300      	movs	r3, #0
 200:	f7ff fffe 	bl	0 <json_helper_set_int>
 204:	4650      	mov	r0, sl
 206:	4649      	mov	r1, r9
 208:	220d      	movs	r2, #13
 20a:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 20e:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 212:	4650      	mov	r0, sl
 214:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
 218:	f240 0100 	movw	r1, #0
 21c:	4604      	mov	r4, r0
 21e:	4650      	mov	r0, sl
 220:	f2c0 0100 	movt	r1, #0
 224:	2207      	movs	r2, #7
 226:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 22a:	4601      	mov	r1, r0
 22c:	4620      	mov	r0, r4
 22e:	f7ff fffe 	bl	0 <json_helper_close_array>
 232:	f7ff fffe 	bl	0 <json_rep_end_root_object>
 236:	a804      	add	r0, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:80
    });

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 238:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::do_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
 23c:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:80
 240:	2801      	cmp	r0, #1
 242:	d104      	bne.n	24e <app::app_sensor::handle_sensor_data+0x24e>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 244:	9805      	ldr	r0, [sp, #20]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:93
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 246:	3006      	adds	r0, #6
 248:	f43f af33 	beq.w	b2 <app::app_sensor::handle_sensor_data+0xb2>
 24c:	e738      	b.n	fffffe74 <.Lanon.3ed011473997af99b525cde47c9eaaac.36+0xfffffe54>
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:83

    //  Display the URL with the random device ID for viewing the sensor data.
    console::print("NET view your sensor at \nhttps://blue-pill-geolocate.appspot.com?device=");
 24e:	f240 0000 	movw	r0, #0
 252:	2148      	movs	r1, #72	; 0x48
 254:	f2c0 0000 	movt	r0, #0
 258:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 25c:	a801      	add	r0, sp, #4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:84
    console::print_strn(&device_id); console::print("\n");
 25e:	f7ff fffe 	bl	0 <mynewt::sys::console::print_strn>
 262:	f240 0000 	movw	r0, #0
 266:	2101      	movs	r1, #1
 268:	f2c0 0000 	movt	r0, #0
 26c:	e726      	b.n	fffffe50 <.Lanon.3ed011473997af99b525cde47c9eaaac.36+0xfffffe30>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
 26e:	f240 0000 	movw	r0, #0
 272:	f2c0 0000 	movt	r0, #0
 276:	f7ff fffe 	bl	0 <core::panicking::panic>
 27a:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
            assert!(rc == 0);
 27c:	f240 0000 	movw	r0, #0
 280:	f2c0 0000 	movt	r0, #0
 284:	f7ff fffe 	bl	0 <core::panicking::panic>
 288:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:83
    if let SensorValueType::None = sensor_value.val { assert!(false); }  //  Invalid type
 28a:	f240 0000 	movw	r0, #0
 28e:	f2c0 0000 	movt	r0, #0
 292:	f7ff fffe 	bl	0 <core::panicking::panic>
 296:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:49
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:55
    //  Initialise the Mynewt packages and BME280 / temp_stm32 temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <mynewt::sysinit>
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:48
    console::print("Rust TMP poll \n");  //  SENSOR_DEVICE "\n";
   6:	f240 0000 	movw	r0, #0
   a:	210f      	movs	r1, #15
   c:	f2c0 0000 	movt	r0, #0
  10:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:51
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  14:	f240 0000 	movw	r0, #0
  18:	f242 7110 	movw	r1, #10000	; 0x2710
  1c:	f2c0 0000 	movt	r0, #0
  20:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::set_poll_rate_ms>
  24:	2801      	cmp	r0, #1
  26:	d147      	bne.n	b8 <main+0xb8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, unsafe { sensor::null_sensor() }) ? ;
  28:	f7ff fffe 	bl	0 <null_sensor>
  2c:	f240 0100 	movw	r1, #0
  30:	4602      	mov	r2, r0
  32:	4668      	mov	r0, sp
  34:	f2c0 0100 	movt	r1, #0
  38:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h43143ffffefcd0f1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  3c:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
  40:	2801      	cmp	r0, #1
  42:	d017      	beq.n	74 <main+0x74>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  44:	4620      	mov	r0, r4
  46:	f7ff fffe 	bl	0 <is_null_sensor>
  4a:	2800      	cmp	r0, #0
  4c:	d145      	bne.n	da <main+0xda>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:60
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f7ff fffe 	bl	0 <mynewt::hw::sensor::as_untyped>
  5a:	2100      	movs	r1, #0
  5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:65
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  60:	9101      	str	r1, [sp, #4]
  62:	9200      	str	r2, [sp, #0]
  64:	9104      	str	r1, [sp, #16]
  66:	e9cd 0102 	strd	r0, r1, [sp, #8]
  6a:	4669      	mov	r1, sp
  6c:	4620      	mov	r0, r4
  6e:	f7ff fffe 	bl	0 <mynewt::hw::sensor::register_listener>
  72:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  74:	2c01      	cmp	r4, #1
  76:	d120      	bne.n	ba <main+0xba>
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:62
    //  Starting polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  78:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::start_server_transport>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  7c:	2801      	cmp	r0, #1
  7e:	d124      	bne.n	ca <main+0xca>
main():
  80:	466c      	mov	r4, sp
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:68
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  82:	4620      	mov	r0, r4
  84:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_dflt_get>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  88:	9800      	ldr	r0, [sp, #0]
  8a:	2801      	cmp	r0, #1
  8c:	d00c      	beq.n	a8 <main+0xa8>
  8e:	9801      	ldr	r0, [sp, #4]
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:67
        os::eventq_run(               //  Processing events...
  90:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_run>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  94:	2801      	cmp	r0, #1
  96:	d0f4      	beq.n	82 <main+0x82>
main():
  98:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	f7ff fffe 	bl	0 <main>
  a6:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  a8:	9901      	ldr	r1, [sp, #4]
  aa:	f240 0000 	movw	r0, #0
  ae:	f2c0 0000 	movt	r0, #0
  b2:	f7ff fffe 	bl	0 <main>
  b6:	defe      	udf	#254	; 0xfe
main():
  b8:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  ba:	f240 0000 	movw	r0, #0
  be:	4621      	mov	r1, r4
  c0:	f2c0 0000 	movt	r0, #0
  c4:	f7ff fffe 	bl	0 <main>
  c8:	defe      	udf	#254	; 0xfe
main():
  ca:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  cc:	f240 0000 	movw	r0, #0
  d0:	f2c0 0000 	movt	r0, #0
  d4:	f7ff fffe 	bl	0 <main>
  d8:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  da:	f240 0000 	movw	r0, #0
  de:	f2c0 0000 	movt	r0, #0
  e2:	f7ff fffe 	bl	0 <core::panicking::panic>
  e6:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:79

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
   4:	b318      	cbz	r0, 4e <rust_begin_unwind+0x4e>
   6:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
   8:	f7ff fffe 	bl	0 <core::panic::Location::file>
   c:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
   e:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
  10:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
  12:	f7ff fffe 	bl	0 <core::panic::Location::line>
  16:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        console::print("panic at ");  console::buffer(&file);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  26:	4628      	mov	r0, r5
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <mynewt::sys::console::buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:83
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  2e:	f240 0000 	movw	r0, #0
  32:	2108      	movs	r1, #8
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  3c:	4620      	mov	r0, r4
  3e:	f7ff fffe 	bl	0 <mynewt::sys::console::printhex>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:84
        console::print("\n");         console::flush();
  42:	f240 0000 	movw	r0, #0
  46:	2101      	movs	r1, #1
  48:	f2c0 0000 	movt	r0, #0
  4c:	e004      	b.n	c <rust_begin_unwind+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:86
    } else {
        console::print("panic unknown loc\n");  console::flush();
  4e:	f240 0000 	movw	r0, #0
  52:	2112      	movs	r1, #18
  54:	f2c0 0000 	movt	r0, #0
  58:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  5c:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  60:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:91
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  64:	e7fe      	b.n	64 <rust_begin_unwind+0x64>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.bc.z: File format not recognized
