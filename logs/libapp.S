In archive target/thumbv7m-none-eabi/release/libapp.rlib:

app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.o6vxcoia-cgu.0
00002363 l       .debug_str	00000000 
00002ca5 l       .debug_str	00000000 
00002caf l       .debug_str	00000000 
00002cb7 l       .debug_str	00000000 
00002cbf l       .debug_str	00000000 
00002ce1 l       .debug_str	00000000 
00002cec l       .debug_str	00000000 
00002cf8 l       .debug_str	00000000 
00002d00 l       .debug_str	00000000 
00002d09 l       .debug_str	00000000 
00002d14 l       .debug_str	00000000 
00002d1b l       .debug_str	00000000 
00002d26 l       .debug_str	00000000 
00002d31 l       .debug_str	00000000 
00002d41 l       .debug_str	00000000 
00002d4b l       .debug_str	00000000 
00002d51 l       .debug_str	00000000 
00002d73 l       .debug_str	00000000 
00002dab l       .debug_str	00000000 
00002deb l       .debug_str	00000000 
00002df2 l       .debug_str	00000000 
00002dfa l       .debug_str	00000000 
00002e11 l       .debug_str	00000000 
00002e1a l       .debug_str	00000000 
00002e2a l       .debug_str	00000000 
00002e39 l       .debug_str	00000000 
00002e41 l       .debug_str	00000000 
00002e48 l       .debug_str	00000000 
00002e50 l       .debug_str	00000000 
00002e6e l       .debug_str	00000000 
00002e7e l       .debug_str	00000000 
00002eb1 l       .debug_str	00000000 
00002ec6 l       .debug_str	00000000 
00002ecf l       .debug_str	00000000 
00002f2c l       .debug_str	00000000 
00002f91 l       .debug_str	00000000 
00002f9b l       .debug_str	00000000 
00002fab l       .debug_str	00000000 
00002fc0 l       .debug_str	00000000 
00002fc8 l       .debug_str	00000000 
0000302c l       .debug_str	00000000 
00003098 l       .debug_str	00000000 
0000309f l       .debug_str	00000000 
000030a7 l       .debug_str	00000000 
000030c5 l       .debug_str	00000000 
000030d5 l       .debug_str	00000000 
00003108 l       .debug_str	00000000 
0000311d l       .debug_str	00000000 
00003130 l       .debug_str	00000000 
00003145 l       .debug_str	00000000 
0000314c l       .debug_str	00000000 
00003161 l       .debug_str	00000000 
0000318b l       .debug_str	00000000 
00003194 l       .debug_str	00000000 
00003198 l       .debug_str	00000000 
000031d8 l       .debug_str	00000000 
000031ff l       .debug_str	00000000 
00003201 l       .debug_str	00000000 
00003203 l       .debug_str	00000000 
0000320c l       .debug_str	00000000 
00003210 l       .debug_str	00000000 
0000323a l       .debug_str	00000000 
0000323f l       .debug_str	00000000 
00003287 l       .debug_str	00000000 
0000328f l       .debug_str	00000000 
000032d7 l       .debug_str	00000000 
000032e0 l       .debug_str	00000000 
000032e3 l       .debug_str	00000000 
0000332d l       .debug_str	00000000 
00003336 l       .debug_str	00000000 
00003369 l       .debug_str	00000000 
00003394 l       .debug_str	00000000 
00003396 l       .debug_str	00000000 
000033d3 l       .debug_str	00000000 
000033e4 l       .debug_str	00000000 
0000341d l       .debug_str	00000000 
0000342f l       .debug_str	00000000 
00003439 l       .debug_str	00000000 
0000344b l       .debug_str	00000000 
00003451 l       .debug_str	00000000 
00003457 l       .debug_str	00000000 
0000345d l       .debug_str	00000000 
00003462 l       .debug_str	00000000 
00003469 l       .debug_str	00000000 
00003479 l       .debug_str	00000000 
0000348b l       .debug_str	00000000 
00003497 l       .debug_str	00000000 
0000349c l       .debug_str	00000000 
000034a4 l       .debug_str	00000000 
000034a8 l       .debug_str	00000000 
000034ad l       .debug_str	00000000 
000034b5 l       .debug_str	00000000 
000034cb l       .debug_str	00000000 
000034e9 l       .debug_str	00000000 
000034f2 l       .debug_str	00000000 
000034f7 l       .debug_str	00000000 
000034fc l       .debug_str	00000000 
00003500 l       .debug_str	00000000 
00003509 l       .debug_str	00000000 
00003513 l       .debug_str	00000000 
0000352b l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000093 l       .debug_str	00000000 
000000a0 l       .debug_str	00000000 
000000a8 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000b4 l       .debug_str	00000000 
000000be l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000cb l       .debug_str	00000000 
000000d1 l       .debug_str	00000000 
000000d6 l       .debug_str	00000000 
0000010a l       .debug_str	00000000 
00000117 l       .debug_str	00000000 
0000011e l       .debug_str	00000000 
00000125 l       .debug_str	00000000 
00000128 l       .debug_str	00000000 
00000133 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
00000140 l       .debug_str	00000000 
0000014b l       .debug_str	00000000 
00000157 l       .debug_str	00000000 
0000015b l       .debug_str	00000000 
00000164 l       .debug_str	00000000 
0000016b l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
0000017b l       .debug_str	00000000 
00000185 l       .debug_str	00000000 
0000018b l       .debug_str	00000000 
00000192 l       .debug_str	00000000 
00000199 l       .debug_str	00000000 
0000019e l       .debug_str	00000000 
000001a5 l       .debug_str	00000000 
000001aa l       .debug_str	00000000 
000001ae l       .debug_str	00000000 
000001b9 l       .debug_str	00000000 
000001c4 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001e2 l       .debug_str	00000000 
0000020f l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
00000216 l       .debug_str	00000000 
0000021a l       .debug_str	00000000 
0000024f l       .debug_str	00000000 
00000255 l       .debug_str	00000000 
0000025b l       .debug_str	00000000 
0000026a l       .debug_str	00000000 
0000027a l       .debug_str	00000000 
0000028a l       .debug_str	00000000 
00000292 l       .debug_str	00000000 
00000296 l       .debug_str	00000000 
000002bf l       .debug_str	00000000 
0000031d l       .debug_str	00000000 
00000383 l       .debug_str	00000000 
0000038a l       .debug_str	00000000 
00000392 l       .debug_str	00000000 
0000039b l       .debug_str	00000000 
000003b9 l       .debug_str	00000000 
000003c9 l       .debug_str	00000000 
000003d7 l       .debug_str	00000000 
000003e2 l       .debug_str	00000000 
000003ef l       .debug_str	00000000 
000003fe l       .debug_str	00000000 
00000408 l       .debug_str	00000000 
00000429 l       .debug_str	00000000 
0000043f l       .debug_str	00000000 
00000449 l       .debug_str	00000000 
00000452 l       .debug_str	00000000 
0000045b l       .debug_str	00000000 
00000481 l       .debug_str	00000000 
00000497 l       .debug_str	00000000 
000004a2 l       .debug_str	00000000 
000004b8 l       .debug_str	00000000 
000004c0 l       .debug_str	00000000 
000004f4 l       .debug_str	00000000 
00000507 l       .debug_str	00000000 
0000051b l       .debug_str	00000000 
00000555 l       .debug_str	00000000 
00000566 l       .debug_str	00000000 
0000056b l       .debug_str	00000000 
000005a3 l       .debug_str	00000000 
000005aa l       .debug_str	00000000 
000005ad l       .debug_str	00000000 
000005b1 l       .debug_str	00000000 
000005b8 l       .debug_str	00000000 
000005bc l       .debug_str	00000000 
000005bf l       .debug_str	00000000 
000005c2 l       .debug_str	00000000 
000005c7 l       .debug_str	00000000 
000005cd l       .debug_str	00000000 
000005d4 l       .debug_str	00000000 
000005dc l       .debug_str	00000000 
000005e6 l       .debug_str	00000000 
000005ee l       .debug_str	00000000 
000005f9 l       .debug_str	00000000 
00000604 l       .debug_str	00000000 
00000611 l       .debug_str	00000000 
0000061c l       .debug_str	00000000 
00000624 l       .debug_str	00000000 
0000062f l       .debug_str	00000000 
0000063a l       .debug_str	00000000 
00000644 l       .debug_str	00000000 
0000064f l       .debug_str	00000000 
0000065a l       .debug_str	00000000 
00000667 l       .debug_str	00000000 
00000673 l       .debug_str	00000000 
00000680 l       .debug_str	00000000 
0000068e l       .debug_str	00000000 
00000698 l       .debug_str	00000000 
000006a5 l       .debug_str	00000000 
000006b1 l       .debug_str	00000000 
000006b5 l       .debug_str	00000000 
000006be l       .debug_str	00000000 
0000071a l       .debug_str	00000000 
0000071f l       .debug_str	00000000 
00000723 l       .debug_str	00000000 
00000725 l       .debug_str	00000000 
0000072b l       .debug_str	00000000 
00000730 l       .debug_str	00000000 
00000735 l       .debug_str	00000000 
0000073b l       .debug_str	00000000 
00000741 l       .debug_str	00000000 
0000074f l       .debug_str	00000000 
00000759 l       .debug_str	00000000 
0000075d l       .debug_str	00000000 
00000765 l       .debug_str	00000000 
0000076d l       .debug_str	00000000 
00000774 l       .debug_str	00000000 
00000780 l       .debug_str	00000000 
0000078b l       .debug_str	00000000 
00000792 l       .debug_str	00000000 
00000798 l       .debug_str	00000000 
0000079c l       .debug_str	00000000 
000007a2 l       .debug_str	00000000 
000007a8 l       .debug_str	00000000 
000007ab l       .debug_str	00000000 
000007ba l       .debug_str	00000000 
000007c1 l       .debug_str	00000000 
000007c5 l       .debug_str	00000000 
000007ce l       .debug_str	00000000 
000007da l       .debug_str	00000000 
000007f3 l       .debug_str	00000000 
000007f8 l       .debug_str	00000000 
00000809 l       .debug_str	00000000 
00000813 l       .debug_str	00000000 
00000871 l       .debug_str	00000000 
0000087c l       .debug_str	00000000 
00000899 l       .debug_str	00000000 
0000089d l       .debug_str	00000000 
000008a5 l       .debug_str	00000000 
000008bc l       .debug_str	00000000 
000008e0 l       .debug_str	00000000 
000008fc l       .debug_str	00000000 
00000901 l       .debug_str	00000000 
0000091a l       .debug_str	00000000 
00000924 l       .debug_str	00000000 
0000093e l       .debug_str	00000000 
0000099b l       .debug_str	00000000 
000009a0 l       .debug_str	00000000 
000009a7 l       .debug_str	00000000 
000009ac l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000009c0 l       .debug_str	00000000 
000009c9 l       .debug_str	00000000 
000009ce l       .debug_str	00000000 
000009d1 l       .debug_str	00000000 
000009da l       .debug_str	00000000 
000009e1 l       .debug_str	00000000 
000009e4 l       .debug_str	00000000 
000009ea l       .debug_str	00000000 
000009f4 l       .debug_str	00000000 
000009fc l       .debug_str	00000000 
00000a02 l       .debug_str	00000000 
00000a0d l       .debug_str	00000000 
00000a16 l       .debug_str	00000000 
00000a39 l       .debug_str	00000000 
00000a58 l       .debug_str	00000000 
00000a7f l       .debug_str	00000000 
00000a89 l       .debug_str	00000000 
00000abb l       .debug_str	00000000 
00000ac2 l       .debug_str	00000000 
00000ac7 l       .debug_str	00000000 
00000af7 l       .debug_str	00000000 
00000b05 l       .debug_str	00000000 
00000b09 l       .debug_str	00000000 
00000b0d l       .debug_str	00000000 
00000b1b l       .debug_str	00000000 
00000b57 l       .debug_str	00000000 
00000b67 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00000b6f l       .debug_str	00000000 
00000b74 l       .debug_str	00000000 
00000b7a l       .debug_str	00000000 
00000b7e l       .debug_str	00000000 
00000b8e l       .debug_str	00000000 
00000b9a l       .debug_str	00000000 
00000ba6 l       .debug_str	00000000 
00000bb2 l       .debug_str	00000000 
00000bb6 l       .debug_str	00000000 
00000bc3 l       .debug_str	00000000 
00000bcf l       .debug_str	00000000 
00000bdd l       .debug_str	00000000 
00000bf4 l       .debug_str	00000000 
00000c09 l       .debug_str	00000000 
00000c0c l       .debug_str	00000000 
00000c2c l       .debug_str	00000000 
00000c35 l       .debug_str	00000000 
00000c38 l       .debug_str	00000000 
00000c3f l       .debug_str	00000000 
00000c48 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c65 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c73 l       .debug_str	00000000 
00000c96 l       .debug_str	00000000 
00000ca7 l       .debug_str	00000000 
00000cdf l       .debug_str	00000000 
00000cf0 l       .debug_str	00000000 
00000cf2 l       .debug_str	00000000 
00000d1a l       .debug_str	00000000 
00000d25 l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000d49 l       .debug_str	00000000 
00000d53 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d5e l       .debug_str	00000000 
00000d6f l       .debug_str	00000000 
00000d74 l       .debug_str	00000000 
00000d80 l       .debug_str	00000000 
00000d89 l       .debug_str	00000000 
00000d91 l       .debug_str	00000000 
00000d9b l       .debug_str	00000000 
00000da8 l       .debug_str	00000000 
00000ded l       .debug_str	00000000 
00000e0b l       .debug_str	00000000 
00000e14 l       .debug_str	00000000 
00000e1c l       .debug_str	00000000 
00000e25 l       .debug_str	00000000 
00000e2e l       .debug_str	00000000 
00000e35 l       .debug_str	00000000 
00000e3b l       .debug_str	00000000 
00000e9d l       .debug_str	00000000 
00000f07 l       .debug_str	00000000 
00000f15 l       .debug_str	00000000 
00000f29 l       .debug_str	00000000 
00000f5e l       .debug_str	00000000 
00000f69 l       .debug_str	00000000 
00000f6f l       .debug_str	00000000 
00000f7b l       .debug_str	00000000 
00000fa8 l       .debug_str	00000000 
00000fba l       .debug_str	00000000 
00000fbe l       .debug_str	00000000 
00000fc7 l       .debug_str	00000000 
00000ff7 l       .debug_str	00000000 
00001000 l       .debug_str	00000000 
00001006 l       .debug_str	00000000 
00001048 l       .debug_str	00000000 
00001063 l       .debug_str	00000000 
0000106b l       .debug_str	00000000 
00001074 l       .debug_str	00000000 
0000107e l       .debug_str	00000000 
00001083 l       .debug_str	00000000 
00001088 l       .debug_str	00000000 
0000108d l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
000010a5 l       .debug_str	00000000 
000010b3 l       .debug_str	00000000 
000010c7 l       .debug_str	00000000 
000010cb l       .debug_str	00000000 
0000114e l       .debug_str	00000000 
00001158 l       .debug_str	00000000 
0000115e l       .debug_str	00000000 
00001164 l       .debug_str	00000000 
00001168 l       .debug_str	00000000 
00001175 l       .debug_str	00000000 
000011fb l       .debug_str	00000000 
0000120a l       .debug_str	00000000 
0000120c l       .debug_str	00000000 
00001281 l       .debug_str	00000000 
000012ac l       .debug_str	00000000 
000012b2 l       .debug_str	00000000 
000012ec l       .debug_str	00000000 
000012ff l       .debug_str	00000000 
00001305 l       .debug_str	00000000 
00001347 l       .debug_str	00000000 
0000135d l       .debug_str	00000000 
00001363 l       .debug_str	00000000 
0000136f l       .debug_str	00000000 
00001377 l       .debug_str	00000000 
000013d1 l       .debug_str	00000000 
00001433 l       .debug_str	00000000 
0000143e l       .debug_str	00000000 
00001485 l       .debug_str	00000000 
000014d4 l       .debug_str	00000000 
000014de l       .debug_str	00000000 
0000151b l       .debug_str	00000000 
00001560 l       .debug_str	00000000 
00001569 l       .debug_str	00000000 
00001579 l       .debug_str	00000000 
00001581 l       .debug_str	00000000 
000015d6 l       .debug_str	00000000 
00001633 l       .debug_str	00000000 
0000163f l       .debug_str	00000000 
00001648 l       .debug_str	00000000 
00001654 l       .debug_str	00000000 
00001660 l       .debug_str	00000000 
00001669 l       .debug_str	00000000 
00001671 l       .debug_str	00000000 
00001679 l       .debug_str	00000000 
0000168e l       .debug_str	00000000 
00001695 l       .debug_str	00000000 
000016b5 l       .debug_str	00000000 
000016bc l       .debug_str	00000000 
000016c4 l       .debug_str	00000000 
000016ce l       .debug_str	00000000 
000016e5 l       .debug_str	00000000 
000016ea l       .debug_str	00000000 
000016f2 l       .debug_str	00000000 
000016fb l       .debug_str	00000000 
00001704 l       .debug_str	00000000 
0000170d l       .debug_str	00000000 
00001715 l       .debug_str	00000000 
0000171c l       .debug_str	00000000 
00001728 l       .debug_str	00000000 
00001733 l       .debug_str	00000000 
0000173b l       .debug_str	00000000 
00001743 l       .debug_str	00000000 
000017bf l       .debug_str	00000000 
00001843 l       .debug_str	00000000 
0000193f l       .debug_str	00000000 
00001a43 l       .debug_str	00000000 
00001a51 l       .debug_str	00000000 
00001a5c l       .debug_str	00000000 
00001a66 l       .debug_str	00000000 
00001a71 l       .debug_str	00000000 
00001a9f l       .debug_str	00000000 
00001b1a l       .debug_str	00000000 
00001b9d l       .debug_str	00000000 
00001bab l       .debug_str	00000000 
00001c0a l       .debug_str	00000000 
00001c71 l       .debug_str	00000000 
00001c87 l       .debug_str	00000000 
00001c97 l       .debug_str	00000000 
00001ca6 l       .debug_str	00000000 
00001caa l       .debug_str	00000000 
00001cb0 l       .debug_str	00000000 
00001cb6 l       .debug_str	00000000 
00001cbc l       .debug_str	00000000 
00001ccc l       .debug_str	00000000 
00001cff l       .debug_str	00000000 
00001d3f l       .debug_str	00000000 
00001d87 l       .debug_str	00000000 
00001d8b l       .debug_str	00000000 
00001d91 l       .debug_str	00000000 
00001d97 l       .debug_str	00000000 
00001d9d l       .debug_str	00000000 
00001daf l       .debug_str	00000000 
00001de4 l       .debug_str	00000000 
00001e26 l       .debug_str	00000000 
00001e70 l       .debug_str	00000000 
00001e74 l       .debug_str	00000000 
00001e7a l       .debug_str	00000000 
00001e80 l       .debug_str	00000000 
00001e86 l       .debug_str	00000000 
00001e98 l       .debug_str	00000000 
00001ecd l       .debug_str	00000000 
00001f0f l       .debug_str	00000000 
00001f59 l       .debug_str	00000000 
00001f5d l       .debug_str	00000000 
00001f63 l       .debug_str	00000000 
00001f69 l       .debug_str	00000000 
00001f6f l       .debug_str	00000000 
00001f75 l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
00001fba l       .debug_str	00000000 
00001ffb l       .debug_str	00000000 
00002044 l       .debug_str	00000000 
00002049 l       .debug_str	00000000 
0000204e l       .debug_str	00000000 
00002052 l       .debug_str	00000000 
00002058 l       .debug_str	00000000 
0000205e l       .debug_str	00000000 
00002064 l       .debug_str	00000000 
00002075 l       .debug_str	00000000 
000020a9 l       .debug_str	00000000 
000020ea l       .debug_str	00000000 
00002133 l       .debug_str	00000000 
00002137 l       .debug_str	00000000 
0000216b l       .debug_str	00000000 
000021ac l       .debug_str	00000000 
000021f5 l       .debug_str	00000000 
000021fa l       .debug_str	00000000 
000021fe l       .debug_str	00000000 
00002207 l       .debug_str	00000000 
0000220e l       .debug_str	00000000 
00002216 l       .debug_str	00000000 
00002228 l       .debug_str	00000000 
0000225d l       .debug_str	00000000 
0000229f l       .debug_str	00000000 
000022e9 l       .debug_str	00000000 
000022ed l       .debug_str	00000000 
000022f3 l       .debug_str	00000000 
000022f9 l       .debug_str	00000000 
000022ff l       .debug_str	00000000 
00002305 l       .debug_str	00000000 
0000230d l       .debug_str	00000000 
0000231b l       .debug_str	00000000 
0000232a l       .debug_str	00000000 
0000233b l       .debug_str	00000000 
00002346 l       .debug_str	00000000 
00002351 l       .debug_str	00000000 
0000235c l       .debug_str	00000000 
00002386 l       .debug_str	00000000 
00002398 l       .debug_str	00000000 
000023cd l       .debug_str	00000000 
0000240f l       .debug_str	00000000 
00002459 l       .debug_str	00000000 
0000245d l       .debug_str	00000000 
00002467 l       .debug_str	00000000 
00002479 l       .debug_str	00000000 
000024ae l       .debug_str	00000000 
000024f0 l       .debug_str	00000000 
0000253a l       .debug_str	00000000 
0000253f l       .debug_str	00000000 
00002549 l       .debug_str	00000000 
0000255b l       .debug_str	00000000 
00002590 l       .debug_str	00000000 
000025d2 l       .debug_str	00000000 
0000261c l       .debug_str	00000000 
00002630 l       .debug_str	00000000 
0000263e l       .debug_str	00000000 
0000264e l       .debug_str	00000000 
00002657 l       .debug_str	00000000 
00002662 l       .debug_str	00000000 
00002671 l       .debug_str	00000000 
00002686 l       .debug_str	00000000 
000026b7 l       .debug_str	00000000 
00002754 l       .debug_str	00000000 
000027f9 l       .debug_str	00000000 
00002804 l       .debug_str	00000000 
0000280d l       .debug_str	00000000 
0000282e l       .debug_str	00000000 
00002841 l       .debug_str	00000000 
00002877 l       .debug_str	00000000 
000028fa l       .debug_str	00000000 
00002985 l       .debug_str	00000000 
000029a1 l       .debug_str	00000000 
000029ed l       .debug_str	00000000 
00002a41 l       .debug_str	00000000 
00002a5e l       .debug_str	00000000 
00002a72 l       .debug_str	00000000 
00002abe l       .debug_str	00000000 
00002b12 l       .debug_str	00000000 
00002b28 l       .debug_str	00000000 
00002b3c l       .debug_str	00000000 
00002b83 l       .debug_str	00000000 
00002bd2 l       .debug_str	00000000 
00002bdb l       .debug_str	00000000 
00002be9 l       .debug_str	00000000 
00002c1a l       .debug_str	00000000 
00002c20 l       .debug_str	00000000 
00002c28 l       .debug_str	00000000 
00002c2f l       .debug_str	00000000 
00002c37 l       .debug_str	00000000 
00002c42 l       .debug_str	00000000 
00002c4a l       .debug_str	00000000 
00002c59 l       .debug_str	00000000 
00002c5d l       .debug_str	00000000 
00002c68 l       .debug_str	00000000 
00002c74 l       .debug_str	00000000 
00002c7f l       .debug_str	00000000 
00002c90 l       .debug_str	00000000 
00002c96 l       .debug_str	00000000 
00002c9e l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.11	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.11
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.13	00000010 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.13
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.15	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.15
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.16	00000011 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.16
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.17	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.17
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.19	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.19
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.2	00000010 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.2
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.20	00000016 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.20
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.22	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.22
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.23	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.23
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.24	00000019 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.24
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.25	00000001 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.25
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.26	0000000a .Lanon.c0556ace3a6b1bc7fbe933c546100e25.26
00000000 l     O .rodata.cst8	00000008 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.27
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.29	00000010 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.29
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.31	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.31
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.32	00000010 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.32
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.33	00000010 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.33
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.34	00000011 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.34
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.35	00000011 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.35
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.36	00000010 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.36
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.37	00000001 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.37
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.39	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.39
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.4	00000010 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.4
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.40	00000010 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.40
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.42	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.42
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.43	00000007 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.43
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.44	0000000d .Lanon.c0556ace3a6b1bc7fbe933c546100e25.44
00000004 l     O .rodata.cst4	00000004 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.45
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.46	00000006 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.46
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.47	00000006 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.47
00000008 l     O .rodata.cst4	00000004 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.48
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.49	00000003 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.49
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.5	0000000a .Lanon.c0556ace3a6b1bc7fbe933c546100e25.5
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.50	00000005 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.50
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.51	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.51
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.52	0000004b .Lanon.c0556ace3a6b1bc7fbe933c546100e25.52
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.53	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.53
0000000c l     O .rodata.cst4	00000004 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.54
00000010 l     O .rodata.cst4	00000004 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.55
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.56	0000000c .Lanon.c0556ace3a6b1bc7fbe933c546100e25.56
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.57	00000018 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.57
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.58	00000021 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.58
00000008 l     O .rodata.cst8	00000008 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.59
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.6	0000000d .Lanon.c0556ace3a6b1bc7fbe933c546100e25.6
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.60	00000012 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.60
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.61	00000009 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.61
00000010 l     O .rodata.cst8	00000008 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.62
00000000 l     O .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.63	00000001 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.63
00000000 l     O .rodata.cst4	00000004 .Lanon.c0556ace3a6b1bc7fbe933c546100e25.7
00000000 l     F .text._ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E	000005b2 _ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E
00000000 l     O .bss._ZN3app9send_coap12NETWORK_TASK17hae9039aabdb3449aE	00000050 _ZN3app9send_coap12NETWORK_TASK17hae9039aabdb3449aE
00000000 l     O .bss._ZN3app9send_coap16NETWORK_IS_READY17hf0f2d3e5295e626bE.0.0	00000001 _ZN3app9send_coap16NETWORK_IS_READY17hf0f2d3e5295e626bE.0.0
00000000 l     F .text._ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E	0000011a _ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E
00000000 l     O .bss._ZN3app9send_coap18NETWORK_TASK_STACK17h76ae7a6807945796E	00000400 _ZN3app9send_coap18NETWORK_TASK_STACK17h76ae7a6807945796E
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E	0000003a _ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E	0000003a _ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	0000000c _ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l     F .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000050 _ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l     O .rodata.str.3	00000019 str.3
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000000 .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E	00000000 .text._ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E
00000000 l    d  .text._ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E	00000000 .text._ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E
00000000 l    d  .text.rust_main	00000000 .text.rust_main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.0	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.0
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.1	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.1
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.3	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.3
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.8	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.8
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.9	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.9
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.10	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.10
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.12	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.12
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.14	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.14
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.18	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.18
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.21	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.21
00000000 l    d  .bss._ZN3app9send_coap12NETWORK_TASK17hae9039aabdb3449aE	00000000 .bss._ZN3app9send_coap12NETWORK_TASK17hae9039aabdb3449aE
00000000 l    d  .bss._ZN3app9send_coap18NETWORK_TASK_STACK17h76ae7a6807945796E	00000000 .bss._ZN3app9send_coap18NETWORK_TASK_STACK17h76ae7a6807945796E
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.28	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.28
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.30	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.30
00000000 l    d  .rodata.str.3	00000000 .rodata.str.3
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.38	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.38
00000000 l    d  .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.41	00000000 .rodata..Lanon.c0556ace3a6b1bc7fbe933c546100e25.41
00000000 l    d  .bss._ZN3app9send_coap16NETWORK_IS_READY17hf0f2d3e5295e626bE.0.0	00000000 .bss._ZN3app9send_coap16NETWORK_IS_READY17hf0f2d3e5295e626bE.0.0
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 _ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE
00000000         *UND*	00000000 _ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17heb4d046d241d78d0E
00000000         *UND*	00000000 _ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h33b3bbdbc74b88baE
00000000         *UND*	00000000 _ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17he275dc913fe9b8e5E
00000000         *UND*	00000000 _ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h1d24bfddebe6efa8E
00000000         *UND*	00000000 _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hb2119167a92723afE
00000000         *UND*	00000000 _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hc44988ae29d24532E
00000000         *UND*	00000000 _ZN4core3fmt9Formatter15debug_lower_hex17h6ead2f28bb05b574E
00000000         *UND*	00000000 _ZN4core3fmt9Formatter15debug_upper_hex17hd6d96e6aa5cb78d8E
00000000         *UND*	00000000 _ZN4core5panic8Location4file17h94cc6af18de736c4E
00000000         *UND*	00000000 _ZN4core5panic8Location4line17h3ffc63f14d0a6636E
00000000         *UND*	00000000 _ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E
00000000         *UND*	00000000 _ZN4core5slice20slice_index_len_fail17hedb5bb240677a6b7E
00000000         *UND*	00000000 _ZN4core9panicking18panic_bounds_check17h946762cd0671aec9E
00000000         *UND*	00000000 _ZN4core9panicking5panic17h53ca63c6ac6312f8E
00000000         *UND*	00000000 _ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E
00000000         *UND*	00000000 _ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17hffcd2d6e43a98b23E
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor10as_untyped17hc683efc51e7df2deE
00000000         *UND*	00000000 _ZN6mynewt2hw6sensor17register_listener17he319e84e05fa897bE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext12check_result17h4fc63e9e40c0702cE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hb62da92cb21c0672E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext4fail17h68cffd9b539196daE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext7encoder17h276b4097dd5ff58dE
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hf8908a5278c4cf14E
00000000         *UND*	00000000 _ZN6mynewt8encoding12coap_context12COAP_CONTEXT17h5e91d8ef2e33c9a1E
00000000         *UND*	00000000 _ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE
00000000         *UND*	00000000 _ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha0a0ed57ad8f2c54E
00000000         *UND*	00000000 _ZN9cstr_core4CStr8from_ptr17h8dd780023dafede8E
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 cbor_encode_int
00000000         *UND*	00000000 cbor_encode_text_string
00000000         *UND*	00000000 cbor_encoder_close_container
00000000         *UND*	00000000 cbor_encoder_create_map
00000000         *UND*	00000000 console_buffer
00000000         *UND*	00000000 console_flush
00000000         *UND*	00000000 console_printhex
00000000         *UND*	00000000 device_get_name
00000000         *UND*	00000000 do_collector_post
00000000         *UND*	00000000 do_server_post
00000000         *UND*	00000000 get_device_id
00000000         *UND*	00000000 get_temp_data
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 init_collector_post
00000000         *UND*	00000000 init_server_post
00000000         *UND*	00000000 is_collector_node
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000         *UND*	00000000 is_sensor_node
00000000         *UND*	00000000 is_standalone_node
00000000         *UND*	00000000 json_helper_close_array
00000000         *UND*	00000000 json_helper_object_array_end_item
00000000         *UND*	00000000 json_helper_object_array_start_item
00000000         *UND*	00000000 json_helper_set_array
00000000         *UND*	00000000 json_helper_set_int
00000000         *UND*	00000000 json_helper_set_text_string
00000000         *UND*	00000000 json_rep_end_root_object
00000000         *UND*	00000000 json_rep_start_root_object
00000000         *UND*	00000000 null_sensor
00000000         *UND*	00000000 os_eventq_dflt_get
00000000         *UND*	00000000 os_eventq_run
00000000         *UND*	00000000 os_task_init
00000000         *UND*	00000000 os_time_delay
00000000         *UND*	00000000 register_collector_transport
00000000         *UND*	00000000 register_server_transport
00000000 g     F .text.rust_begin_unwind	00000072 rust_begin_unwind
00000000 g     F .text.rust_main	0000018c rust_main
00000000         *UND*	00000000 rust_sysinit
00000000         *UND*	00000000 sensor_get_device
00000000         *UND*	00000000 sensor_mgr_find_next_bydevname
00000000         *UND*	00000000 sensor_set_poll_rate_ms
00000000         *UND*	00000000 should_send_to_collector



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E:

00000000 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h271d1c938b44f4eaE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <_ZN4core3fmt9Formatter15debug_lower_hex17h6ead2f28bb05b574E>
   c:	b128      	cbz	r0, 1a <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E+0x1a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17he275dc913fe9b8e5E>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <_ZN4core3fmt9Formatter15debug_upper_hex17hd6d96e6aa5cb78d8E>
  20:	b128      	cbz	r0, 2e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E+0x2e>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h1d24bfddebe6efa8E>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17heb4d046d241d78d0E>

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E:

00000000 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hc0a5c2426ccebe61E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <_ZN4core3fmt9Formatter15debug_lower_hex17h6ead2f28bb05b574E>
   c:	b128      	cbz	r0, 1a <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E+0x1a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hb2119167a92723afE>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <_ZN4core3fmt9Formatter15debug_upper_hex17hd6d96e6aa5cb78d8E>
  20:	b128      	cbz	r0, 2e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E+0x2e>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hc44988ae29d24532E>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h33b3bbdbc74b88baE>

Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E:

00000000 <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h3a34938e29ce59dcE>

Disassembly of section .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E:

00000000 <_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E>:
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E:

00000000 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E>:
_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:81
///  This listener function is called by Mynewt every 10 seconds (for local sensors) or when sensor data is received
///  (for Remote Sensors).  Mynewt has fetched the raw or computed temperature value, passed through `sensor_data`.
///  If this is a Sensor Node, we send the sensor data to the Collector Node.
///  If this is a Collector Node or Standalone Node, we send the sensor data to the CoAP server.  
///  Return 0 if we have processed the sensor data successfully.
extern fn read_temperature(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b095      	sub	sp, #84	; 0x54
   6:	4605      	mov	r5, r0
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
///  Display message `msg` on the Arm Semihosting console (via OpenOCD).
pub fn console_print(msg: &[u8]) {
    let len = msg.len();
    unsafe {
        //  Call the Semihosting Console API, which is unsafe.
        console_buffer(msg.as_ptr(), len as u32);
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2111      	movs	r1, #17
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
  18:	f7ff fffe 	bl	0 <console_flush>
_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:86
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console_print(b"read_temperature\n");
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  1c:	4620      	mov	r0, r4
  1e:	f7ff fffe 	bl	0 <is_null_sensor_data>
  22:	b120      	cbz	r0, 2e <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x2e>
  24:	f06f 0001 	mvn.w	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:117
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  28:	b015      	add	sp, #84	; 0x54
  2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:87
    assert!(unsafe { !is_null_sensor(sensor) });
  2e:	4628      	mov	r0, r5
  30:	f7ff fffe 	bl	0 <is_null_sensor>
  34:	2800      	cmp	r0, #0
  36:	f040 8251 	bne.w	4dc <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x4dc>
  3a:	e9dd 101e 	ldrd	r1, r0, [sp, #120]	; 0x78
_ZN3app13listen_sensor15get_temperature17h9dee3b5a80c357c9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:127
#[allow(unreachable_patterns)]
#[allow(unused_variables)]
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
  3e:	f081 6180 	eor.w	r1, r1, #67108864	; 0x4000000
  42:	ea41 0600 	orr.w	r6, r1, r0
_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:92
    let device = unsafe { sensor_get_device(sensor) };
  46:	4628      	mov	r0, r5
  48:	f7ff fffe 	bl	0 <sensor_get_device>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:93
    let device_name_ptr: *const c_char = unsafe { device_get_name(device) };
  4c:	f7ff fffe 	bl	0 <device_get_name>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:94
    let device_name: &CStr = unsafe { CStr::from_ptr(device_name_ptr) };
  50:	f7ff fffe 	bl	0 <_ZN9cstr_core4CStr8from_ptr17h8dd780023dafede8E>
  54:	4605      	mov	r5, r0
  56:	460f      	mov	r7, r1
  58:	2000      	movs	r0, #0
_ZN3app13listen_sensor15get_temperature17h9dee3b5a80c357c9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:127
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
  5a:	b9de      	cbnz	r6, 94 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x94>
  5c:	a909      	add	r1, sp, #36	; 0x24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:129
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  5e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
  62:	9009      	str	r0, [sp, #36]	; 0x24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:130
            let rc = unsafe { get_temp_raw_data(sensor_data, &mut rawtempdata) };
  64:	4620      	mov	r0, r4
  66:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:131
            assert!(rc == 0);
  6a:	2800      	cmp	r0, #0
  6c:	f040 8244 	bne.w	4f8 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x4f8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:134

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  70:	f89d 0028 	ldrb.w	r0, [sp, #40]	; 0x28
  74:	2800      	cmp	r0, #0
  76:	f000 8238 	beq.w	4ea <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x4ea>
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  7a:	f240 0000 	movw	r0, #0
  7e:	2119      	movs	r1, #25
  80:	f2c0 0000 	movt	r0, #0
_ZN3app13listen_sensor15get_temperature17h9dee3b5a80c357c9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:137

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  84:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
  88:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
  8c:	f7ff fffe 	bl	0 <console_flush>
  90:	2601      	movs	r6, #1
  92:	e011      	b.n	b8 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0xb8>
_ZN3app13listen_sensor15get_temperature17h9dee3b5a80c357c9E():
  94:	a909      	add	r1, sp, #36	; 0x24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:142
            console_print(b"TMP listener got rawtmp \n");  // return_value->int_val);
        },
        SENSOR_TYPE_AMBIENT_TEMPERATURE => {      //  If this is computed temperature...
            //  Interpret the sensor data as a sensor_temp_data struct that contains computed temp.
            let mut tempdata = fill_zero!(sensor_temp_data);
  96:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
  9a:	9009      	str	r0, [sp, #36]	; 0x24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:143
            let rc = unsafe { get_temp_data(sensor_data, &mut tempdata) };
  9c:	4620      	mov	r0, r4
  9e:	f7ff fffe 	bl	0 <get_temp_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:144
            assert!(rc == 0);
  a2:	2800      	cmp	r0, #0
  a4:	f040 822f 	bne.w	506 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x506>
  a8:	f89d 0028 	ldrb.w	r0, [sp, #40]	; 0x28
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:147

            //  Check that the computed temperature data is valid.
            if tempdata.std_temp_is_valid() == 0 { return return_value; }  //  Exit if data is not valid
  ac:	07c0      	lsls	r0, r0, #31
  ae:	f000 821c 	beq.w	4ea <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x4ea>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:150

            //  Computed temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Float(tempdata.std_temp);  //  Temperature in floating point.
  b2:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
  b6:	2602      	movs	r6, #2
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  b8:	f240 0000 	movw	r0, #0
  bc:	2111      	movs	r1, #17
  be:	f2c0 0000 	movt	r0, #0
  c2:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
  c6:	f7ff fffe 	bl	0 <console_flush>
  ca:	2000      	movs	r0, #0
_ZN3app9send_coap16send_sensor_data17h94e4bbb65956569fE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:312
pub fn send_sensor_data(sensor_val: &SensorValue, sensor_node: &CStr) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console_print(b"send_sensor_data\n");
    //  TODO: Remove val
    let mut val = fill_zero!(sensor_value);
    //  For Sensor Node: Transmit the sensor data to the Collector Node as CBOR.
    if unsafe { sensor_network::should_send_to_collector(&mut val, sensor_node.as_ptr()) } { 
  cc:	4629      	mov	r1, r5
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:310
    let mut val = fill_zero!(sensor_value);
  ce:	e9cd 0007 	strd	r0, r0, [sp, #28]
  d2:	e9cd 0005 	strd	r0, r0, [sp, #20]
  d6:	a805      	add	r0, sp, #20
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:312
    if unsafe { sensor_network::should_send_to_collector(&mut val, sensor_node.as_ptr()) } { 
  d8:	f7ff fffe 	bl	0 <should_send_to_collector>
  dc:	2800      	cmp	r0, #0
  de:	d066      	beq.n	1ae <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x1ae>
_ZN3app9send_coap29send_sensor_data_to_collector17h9839e168e65e6832E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:391
///  to be transmitted.  Return 0 if successful, `SYS_EAGAIN` if network is not ready yet.
///  The CoAP payload needs to be very compact (under 32 bytes) so it will be encoded in CBOR like this:
///  `{ t: 2870 }`
fn send_sensor_data_to_collector(sensor_val: &SensorValue, _node_id: &CStr) -> MynewtResult<()>  {  //  Returns an error code upon error.
    ////  TODO: if let SensorValueType::None = sensor_val.val { assert!(false); }
    if unsafe { !NETWORK_IS_READY } { return Err(MynewtError::SYS_EAGAIN); }  //  If network is not ready, tell caller (Sensor Listener) to try later.
  e0:	f240 0000 	movw	r0, #0
  e4:	f2c0 0000 	movt	r0, #0
  e8:	7800      	ldrb	r0, [r0, #0]
  ea:	2801      	cmp	r0, #1
  ec:	f040 818c 	bne.w	408 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x408>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:396

    //  Start composing the CoAP Collector message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = unsafe { sensor_network::init_collector_post() };  assert!(rc);
  f0:	f7ff fffe 	bl	0 <init_collector_post>
  f4:	2800      	cmp	r0, #0
  f6:	f000 8240 	beq.w	57a <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x57a>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:399

    //  Compose the CoAP Payload in CBOR using the `coap!()` macro.
    let _payload = coap!(@cbor {
  fa:	f240 0400 	movw	r4, #0
  fe:	f240 0100 	movw	r1, #0
 102:	f240 0300 	movw	r3, #0
 106:	f2c0 0400 	movt	r4, #0
 10a:	f04f 0804 	mov.w	r8, #4
 10e:	f2c0 0100 	movt	r1, #0
 112:	f2c0 0300 	movt	r3, #0
 116:	4620      	mov	r0, r4
 118:	2204      	movs	r2, #4
 11a:	f8cd 8000 	str.w	r8, [sp]
 11e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h276b4097dd5ff58dE>
 122:	4605      	mov	r5, r0
 124:	4620      	mov	r0, r4
 126:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hb62da92cb21c0672E>
 12a:	4629      	mov	r1, r5
 12c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 130:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
 134:	2e01      	cmp	r6, #1
 136:	f040 8178 	bne.w	42a <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x42a>
 13a:	f240 0000 	movw	r0, #0
 13e:	2101      	movs	r1, #1
 140:	f2c0 0000 	movt	r0, #0
 144:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 148:	f240 0900 	movw	r9, #0
 14c:	f240 0300 	movw	r3, #0
 150:	460e      	mov	r6, r1
 152:	f240 0100 	movw	r1, #0
 156:	f2c0 0900 	movt	r9, #0
 15a:	4605      	mov	r5, r0
 15c:	f2c0 0100 	movt	r1, #0
 160:	f2c0 0300 	movt	r3, #0
 164:	4648      	mov	r0, r9
 166:	220c      	movs	r2, #12
 168:	f8cd 8000 	str.w	r8, [sp]
 16c:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h276b4097dd5ff58dE>
 170:	4680      	mov	r8, r0
 172:	4648      	mov	r0, r9
 174:	4629      	mov	r1, r5
 176:	4632      	mov	r2, r6
 178:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 17c:	4604      	mov	r4, r0
 17e:	4648      	mov	r0, r9
 180:	4629      	mov	r1, r5
 182:	4632      	mov	r2, r6
 184:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext8cstr_len17hf8908a5278c4cf14E>
 188:	4602      	mov	r2, r0
 18a:	4640      	mov	r0, r8
 18c:	4621      	mov	r1, r4
 18e:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 192:	4601      	mov	r1, r0
 194:	4648      	mov	r0, r9
 196:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h4fc63e9e40c0702cE>
 19a:	4640      	mov	r0, r8
 19c:	4652      	mov	r2, sl
 19e:	2300      	movs	r3, #0
 1a0:	f7ff fffe 	bl	0 <cbor_encode_int>
 1a4:	4601      	mov	r1, r0
 1a6:	4648      	mov	r0, r9
 1a8:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext12check_result17h4fc63e9e40c0702cE>
 1ac:	e144      	b.n	438 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x438>
_ZN9cstr_core4CStr8to_bytes17h01698a6d2c5e5247E():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cstr_core-0.1.2/src/lib.rs:1033
    /// assert_eq!(c_str.to_bytes(), b"foo");
    /// ```
    #[inline]
    pub fn to_bytes(&self) -> &[u8] {
        let bytes = self.to_bytes_with_nul();
        &bytes[..bytes.len() - 1]
 1ae:	1e78      	subs	r0, r7, #1
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hd2f28addb3b1e8b5E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/slice/mod.rs:2745
 1b0:	2f00      	cmp	r7, #0
 1b2:	f000 81af 	beq.w	514 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x514>
_ZN3app9send_coap26send_sensor_data_to_server17h23f6550a46896ad2E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:340
    assert_ne!(node_id.to_bytes()[0], 0);
 1b6:	2800      	cmp	r0, #0
 1b8:	f000 81b0 	beq.w	51c <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x51c>
 1bc:	7828      	ldrb	r0, [r5, #0]
 1be:	2800      	cmp	r0, #0
 1c0:	f000 81b5 	beq.w	52e <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x52e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:341
    if unsafe { !NETWORK_IS_READY } { return Err(MynewtError::SYS_EAGAIN); }  //  If network is not ready, tell caller (Sensor Listener) to try later.
 1c4:	f240 0000 	movw	r0, #0
 1c8:	f2c0 0000 	movt	r0, #0
 1cc:	7800      	ldrb	r0, [r0, #0]
 1ce:	2801      	cmp	r0, #1
 1d0:	f040 811a 	bne.w	408 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x408>
 1d4:	e9cd 5603 	strd	r5, r6, [sp, #12]
 1d8:	e9cd a701 	strd	sl, r7, [sp, #4]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:342
    let device_id_ptr = unsafe { sensor_network::get_device_id() };
 1dc:	f7ff fffe 	bl	0 <get_device_id>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:343
    let device_id: &CStr = unsafe { CStr::from_ptr(device_id_ptr) };
 1e0:	f7ff fffe 	bl	0 <_ZN9cstr_core4CStr8from_ptr17h8dd780023dafede8E>
 1e4:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:348
    let rc = unsafe { sensor_network::init_server_post(0 as *const c_char) };  assert!(rc);
 1e6:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:343
    let device_id: &CStr = unsafe { CStr::from_ptr(device_id_ptr) };
 1e8:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:348
    let rc = unsafe { sensor_network::init_server_post(0 as *const c_char) };  assert!(rc);
 1ea:	f7ff fffe 	bl	0 <init_server_post>
 1ee:	2800      	cmp	r0, #0
 1f0:	f000 81ca 	beq.w	588 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x588>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:351
    let _payload = coap!(@json {
 1f4:	f7ff fffe 	bl	0 <json_rep_start_root_object>
 1f8:	f240 0b00 	movw	fp, #0
 1fc:	f2c0 0b00 	movt	fp, #0
 200:	4658      	mov	r0, fp
 202:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 206:	f240 0100 	movw	r1, #0
 20a:	4604      	mov	r4, r0
 20c:	f2c0 0100 	movt	r1, #0
 210:	4658      	mov	r0, fp
 212:	2207      	movs	r2, #7
 214:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 218:	4601      	mov	r1, r0
 21a:	4620      	mov	r0, r4
 21c:	f7ff fffe 	bl	0 <json_helper_set_array>
 220:	f240 0100 	movw	r1, #0
 224:	4658      	mov	r0, fp
 226:	f2c0 0100 	movt	r1, #0
 22a:	220d      	movs	r2, #13
 22c:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 230:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 234:	f240 0000 	movw	r0, #0
 238:	2106      	movs	r1, #6
 23a:	f2c0 0000 	movt	r0, #0
 23e:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 242:	4604      	mov	r4, r0
 244:	4658      	mov	r0, fp
 246:	4689      	mov	r9, r1
 248:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 24c:	f240 0100 	movw	r1, #0
 250:	4682      	mov	sl, r0
 252:	f2c0 0100 	movt	r1, #0
 256:	4658      	mov	r0, fp
 258:	2204      	movs	r2, #4
 25a:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 25e:	4680      	mov	r8, r0
 260:	4658      	mov	r0, fp
 262:	4621      	mov	r1, r4
 264:	464a      	mov	r2, r9
 266:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E>
 26a:	4602      	mov	r2, r0
 26c:	4650      	mov	r0, sl
 26e:	4641      	mov	r1, r8
 270:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 274:	4628      	mov	r0, r5
 276:	4631      	mov	r1, r6
 278:	f7ff fffe 	bl	0 <_ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha0a0ed57ad8f2c54E>
 27c:	4604      	mov	r4, r0
 27e:	4658      	mov	r0, fp
 280:	460e      	mov	r6, r1
 282:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 286:	f240 0800 	movw	r8, #0
 28a:	4605      	mov	r5, r0
 28c:	f2c0 0800 	movt	r8, #0
 290:	4658      	mov	r0, fp
 292:	4641      	mov	r1, r8
 294:	2206      	movs	r2, #6
 296:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 29a:	4607      	mov	r7, r0
 29c:	4658      	mov	r0, fp
 29e:	4621      	mov	r1, r4
 2a0:	4632      	mov	r2, r6
 2a2:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E>
 2a6:	4602      	mov	r2, r0
 2a8:	4628      	mov	r0, r5
 2aa:	4639      	mov	r1, r7
 2ac:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 2b0:	f240 0900 	movw	r9, #0
 2b4:	4658      	mov	r0, fp
 2b6:	f2c0 0900 	movt	r9, #0
 2ba:	220d      	movs	r2, #13
 2bc:	4649      	mov	r1, r9
 2be:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 2c2:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 2c6:	4658      	mov	r0, fp
 2c8:	4649      	mov	r1, r9
 2ca:	220d      	movs	r2, #13
 2cc:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 2d0:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 2d4:	f240 0000 	movw	r0, #0
 2d8:	2104      	movs	r1, #4
 2da:	f2c0 0000 	movt	r0, #0
 2de:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 2e2:	4604      	mov	r4, r0
 2e4:	4658      	mov	r0, fp
 2e6:	460d      	mov	r5, r1
 2e8:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 2ec:	f240 0100 	movw	r1, #0
 2f0:	4606      	mov	r6, r0
 2f2:	4658      	mov	r0, fp
 2f4:	f2c0 0100 	movt	r1, #0
 2f8:	2204      	movs	r2, #4
 2fa:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 2fe:	4607      	mov	r7, r0
 300:	4658      	mov	r0, fp
 302:	4621      	mov	r1, r4
 304:	462a      	mov	r2, r5
 306:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E>
 30a:	4602      	mov	r2, r0
 30c:	4630      	mov	r0, r6
 30e:	4639      	mov	r1, r7
 310:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 314:	e9dd 1002 	ldrd	r1, r0, [sp, #8]
 318:	f7ff fffe 	bl	0 <_ZN87_$LT$cstr_core..CStr$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17ha0a0ed57ad8f2c54E>
 31c:	4604      	mov	r4, r0
 31e:	4658      	mov	r0, fp
 320:	460d      	mov	r5, r1
 322:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 326:	4606      	mov	r6, r0
 328:	4658      	mov	r0, fp
 32a:	4641      	mov	r1, r8
 32c:	2206      	movs	r2, #6
 32e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 332:	4607      	mov	r7, r0
 334:	4658      	mov	r0, fp
 336:	4621      	mov	r1, r4
 338:	462a      	mov	r2, r5
 33a:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E>
 33e:	4602      	mov	r2, r0
 340:	4630      	mov	r0, r6
 342:	4639      	mov	r1, r7
 344:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 348:	4658      	mov	r0, fp
 34a:	4649      	mov	r1, r9
 34c:	220d      	movs	r2, #13
 34e:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 352:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 356:	9804      	ldr	r0, [sp, #16]
 358:	2801      	cmp	r0, #1
 35a:	f040 8091 	bne.w	480 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x480>
 35e:	f240 0900 	movw	r9, #0
 362:	f240 0800 	movw	r8, #0
 366:	f2c0 0900 	movt	r9, #0
 36a:	f2c0 0800 	movt	r8, #0
 36e:	4648      	mov	r0, r9
 370:	4641      	mov	r1, r8
 372:	220d      	movs	r2, #13
 374:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 378:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 37c:	f240 0000 	movw	r0, #0
 380:	2103      	movs	r1, #3
 382:	f2c0 0000 	movt	r0, #0
 386:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 38a:	4682      	mov	sl, r0
 38c:	f240 0000 	movw	r0, #0
 390:	460f      	mov	r7, r1
 392:	f2c0 0000 	movt	r0, #0
 396:	2101      	movs	r1, #1
 398:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 39c:	4605      	mov	r5, r0
 39e:	4648      	mov	r0, r9
 3a0:	460c      	mov	r4, r1
 3a2:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 3a6:	4606      	mov	r6, r0
 3a8:	4648      	mov	r0, r9
 3aa:	4651      	mov	r1, sl
 3ac:	463a      	mov	r2, r7
 3ae:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 3b2:	4607      	mov	r7, r0
 3b4:	4648      	mov	r0, r9
 3b6:	4629      	mov	r1, r5
 3b8:	4622      	mov	r2, r4
 3ba:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext13value_to_cstr17h4eb8afb9652b8128E>
 3be:	4602      	mov	r2, r0
 3c0:	4630      	mov	r0, r6
 3c2:	4639      	mov	r1, r7
 3c4:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 3c8:	f240 0000 	movw	r0, #0
 3cc:	2105      	movs	r1, #5
 3ce:	f2c0 0000 	movt	r0, #0
 3d2:	f7ff fffe 	bl	0 <_ZN75_$LT$str$u20$as$u20$mynewt..encoding..coap_context..ToBytesOptionalNull$GT$21to_bytes_optional_nul17h04bf219ed69c9cdbE>
 3d6:	4604      	mov	r4, r0
 3d8:	4648      	mov	r0, r9
 3da:	460d      	mov	r5, r1
 3dc:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 3e0:	4606      	mov	r6, r0
 3e2:	4648      	mov	r0, r9
 3e4:	4621      	mov	r1, r4
 3e6:	462a      	mov	r2, r5
 3e8:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 3ec:	9a01      	ldr	r2, [sp, #4]
 3ee:	4601      	mov	r1, r0
 3f0:	4630      	mov	r0, r6
 3f2:	2300      	movs	r3, #0
 3f4:	f7ff fffe 	bl	0 <json_helper_set_int>
 3f8:	4648      	mov	r0, r9
 3fa:	4641      	mov	r1, r8
 3fc:	220d      	movs	r2, #13
 3fe:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 402:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 406:	e042      	b.n	48e <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x48e>
_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E():
 408:	f06f 0005 	mvn.w	r0, #5
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:109
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 40c:	3006      	adds	r0, #6
 40e:	d108      	bne.n	422 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x422>
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
 410:	f240 0000 	movw	r0, #0
 414:	2116      	movs	r1, #22
 416:	f2c0 0000 	movt	r0, #0
 41a:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
 41e:	f7ff fffe 	bl	0 <console_flush>
_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E():
 422:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:117
}
 424:	b015      	add	sp, #84	; 0x54
 426:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app9send_coap29send_sensor_data_to_collector17h9839e168e65e6832E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:399
    let _payload = coap!(@cbor {
 42a:	f240 0000 	movw	r0, #0
 42e:	2101      	movs	r1, #1
 430:	f2c0 0000 	movt	r0, #0
 434:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext4fail17h68cffd9b539196daE>
 438:	f240 0400 	movw	r4, #0
 43c:	f240 0100 	movw	r1, #0
 440:	f240 0300 	movw	r3, #0
 444:	2004      	movs	r0, #4
 446:	f2c0 0400 	movt	r4, #0
 44a:	9000      	str	r0, [sp, #0]
 44c:	f2c0 0100 	movt	r1, #0
 450:	f2c0 0300 	movt	r3, #0
 454:	4620      	mov	r0, r4
 456:	2204      	movs	r2, #4
 458:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext7encoder17h276b4097dd5ff58dE>
 45c:	4605      	mov	r5, r0
 45e:	4620      	mov	r0, r4
 460:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext14global_encoder17hb62da92cb21c0672E>
 464:	4629      	mov	r1, r5
 466:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:407
    });

    //  Post the CoAP Collector message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    let rc = unsafe { sensor_network::do_collector_post() };  assert!(rc);
 46a:	f7ff fffe 	bl	0 <do_collector_post>
 46e:	2800      	cmp	r0, #0
 470:	f000 8091 	beq.w	596 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x596>
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
 474:	f240 0000 	movw	r0, #0
 478:	2121      	movs	r1, #33	; 0x21
 47a:	f2c0 0000 	movt	r0, #0
 47e:	e025      	b.n	4e <_ZN6mynewt8encoding12coap_context12COAP_CONTEXT17h5e91d8ef2e33c9a1E+0x4e>
_ZN3app9send_coap26send_sensor_data_to_server17h23f6550a46896ad2E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:351
    let _payload = coap!(@json {
 480:	f240 0000 	movw	r0, #0
 484:	2101      	movs	r1, #1
 486:	f2c0 0000 	movt	r0, #0
 48a:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext4fail17h68cffd9b539196daE>
 48e:	f240 0400 	movw	r4, #0
 492:	f2c0 0400 	movt	r4, #0
 496:	4620      	mov	r0, r4
 498:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11to_void_ptr17hb3808f319694c4fdE>
 49c:	f240 0100 	movw	r1, #0
 4a0:	4605      	mov	r5, r0
 4a2:	f2c0 0100 	movt	r1, #0
 4a6:	4620      	mov	r0, r4
 4a8:	2207      	movs	r2, #7
 4aa:	f7ff fffe 	bl	0 <_ZN6mynewt8encoding12coap_context11CoapContext11key_to_cstr17h0f82664be59056e7E>
 4ae:	4601      	mov	r1, r0
 4b0:	4628      	mov	r0, r5
 4b2:	f7ff fffe 	bl	0 <json_helper_close_array>
 4b6:	f7ff fffe 	bl	0 <json_rep_end_root_object>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:367
    let rc = unsafe { sensor_network::do_server_post() };  assert!(rc);
 4ba:	f7ff fffe 	bl	0 <do_server_post>
 4be:	2800      	cmp	r0, #0
 4c0:	d070      	beq.n	5a4 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x5a4>
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
 4c2:	f240 0000 	movw	r0, #0
 4c6:	214b      	movs	r1, #75	; 0x4b
 4c8:	f2c0 0000 	movt	r0, #0
_ZN3app9send_coap16send_sensor_data17h94e4bbb65956569fE():
 4cc:	f7ff fffe 	bl	0 <console_buffer>
 4d0:	f7ff fffe 	bl	0 <console_flush>
 4d4:	2001      	movs	r0, #1
_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:109
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 4d6:	3006      	adds	r0, #6
 4d8:	d1a3      	bne.n	422 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x422>
 4da:	e799      	b.n	410 <_ZN3app13listen_sensor16read_temperature17h0910b2605b7e8618E+0x410>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:87
    assert!(unsafe { !is_null_sensor(sensor) });
 4dc:	f240 0000 	movw	r0, #0
 4e0:	f2c0 0000 	movt	r0, #0
 4e4:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 4e8:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:99
    if let SensorValueType::None = temp_sensor_value.val { assert!(false); }  //  Invalid type
 4ea:	f240 0000 	movw	r0, #0
 4ee:	f2c0 0000 	movt	r0, #0
 4f2:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 4f6:	defe      	udf	#254	; 0xfe
_ZN3app13listen_sensor15get_temperature17h9dee3b5a80c357c9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:131
            assert!(rc == 0);
 4f8:	f240 0000 	movw	r0, #0
 4fc:	f2c0 0000 	movt	r0, #0
 500:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 504:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:144
            assert!(rc == 0);
 506:	f240 0000 	movw	r0, #0
 50a:	f2c0 0000 	movt	r0, #0
 50e:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 512:	defe      	udf	#254	; 0xfe
_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hd2f28addb3b1e8b5E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/slice/mod.rs:2746
 514:	2100      	movs	r1, #0
 516:	f7ff fffe 	bl	0 <_ZN4core5slice20slice_index_len_fail17hedb5bb240677a6b7E>
 51a:	defe      	udf	#254	; 0xfe
_ZN3app9send_coap26send_sensor_data_to_server17h23f6550a46896ad2E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:340
    assert_ne!(node_id.to_bytes()[0], 0);
 51c:	f240 0000 	movw	r0, #0
 520:	2100      	movs	r1, #0
 522:	f2c0 0000 	movt	r0, #0
 526:	2200      	movs	r2, #0
 528:	f7ff fffe 	bl	0 <_ZN4core9panicking18panic_bounds_check17h946762cd0671aec9E>
 52c:	defe      	udf	#254	; 0xfe
 52e:	f240 0000 	movw	r0, #0
 532:	a914      	add	r1, sp, #80	; 0x50
 534:	f2c0 0000 	movt	r0, #0
 538:	9513      	str	r5, [sp, #76]	; 0x4c
 53a:	9012      	str	r0, [sp, #72]	; 0x48
 53c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 540:	a813      	add	r0, sp, #76	; 0x4c
 542:	900f      	str	r0, [sp, #60]	; 0x3c
 544:	f240 0000 	movw	r0, #0
 548:	f2c0 0000 	movt	r0, #0
 54c:	f240 0100 	movw	r1, #0
 550:	9014      	str	r0, [sp, #80]	; 0x50
 552:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 554:	900e      	str	r0, [sp, #56]	; 0x38
 556:	a80f      	add	r0, sp, #60	; 0x3c
 558:	900d      	str	r0, [sp, #52]	; 0x34
 55a:	2000      	movs	r0, #0
 55c:	e9cd 000b 	strd	r0, r0, [sp, #44]	; 0x2c
 560:	2003      	movs	r0, #3
 562:	900a      	str	r0, [sp, #40]	; 0x28
 564:	f240 0000 	movw	r0, #0
 568:	f2c0 0000 	movt	r0, #0
_ZN3app9send_coap26send_sensor_data_to_server17h23f6550a46896ad2E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:340
 56c:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 570:	9009      	str	r0, [sp, #36]	; 0x24
 572:	a809      	add	r0, sp, #36	; 0x24
_ZN3app9send_coap26send_sensor_data_to_server17h23f6550a46896ad2E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:340
 574:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
 578:	defe      	udf	#254	; 0xfe
_ZN3app9send_coap29send_sensor_data_to_collector17h9839e168e65e6832E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:396
    let rc = unsafe { sensor_network::init_collector_post() };  assert!(rc);
 57a:	f240 0000 	movw	r0, #0
 57e:	f2c0 0000 	movt	r0, #0
 582:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 586:	defe      	udf	#254	; 0xfe
_ZN3app9send_coap26send_sensor_data_to_server17h23f6550a46896ad2E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:348
    let rc = unsafe { sensor_network::init_server_post(0 as *const c_char) };  assert!(rc);
 588:	f240 0000 	movw	r0, #0
 58c:	f2c0 0000 	movt	r0, #0
 590:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 594:	defe      	udf	#254	; 0xfe
_ZN3app9send_coap29send_sensor_data_to_collector17h9839e168e65e6832E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:407
    let rc = unsafe { sensor_network::do_collector_post() };  assert!(rc);
 596:	f240 0000 	movw	r0, #0
 59a:	f2c0 0000 	movt	r0, #0
 59e:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 5a2:	defe      	udf	#254	; 0xfe
_ZN3app9send_coap26send_sensor_data_to_server17h23f6550a46896ad2E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:367
    let rc = unsafe { sensor_network::do_server_post() };  assert!(rc);
 5a4:	f240 0000 	movw	r0, #0
 5a8:	f2c0 0000 	movt	r0, #0
 5ac:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 5b0:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E:

00000000 <_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E>:
_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:267
extern "C" fn network_task_func(_arg: *mut ::cty::c_void) {
   0:	b08e      	sub	sp, #56	; 0x38
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
   2:	f240 0000 	movw	r0, #0
   6:	210a      	movs	r1, #10
   8:	f2c0 0000 	movt	r0, #0
   c:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
  10:	f7ff fffe 	bl	0 <console_flush>
_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:268
    console_print(b"NET start\n");  assert!(unsafe { !NETWORK_IS_READY });
  14:	f240 0400 	movw	r4, #0
  18:	f2c0 0400 	movt	r4, #0
  1c:	7820      	ldrb	r0, [r4, #0]
  1e:	2801      	cmp	r0, #1
  20:	d026      	beq.n	70 <_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E+0x70>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:273
        sensor_network::is_standalone_node() || 
  22:	f7ff fffe 	bl	0 <is_standalone_node>
  26:	b910      	cbnz	r0, 8 <is_collector_node+0x8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:274
        sensor_network::is_collector_node() 
  28:	f7ff fffe 	bl	0 <is_collector_node>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:272
    if unsafe { 
  2c:	b120      	cbz	r0, c <register_server_transport+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:276
        let rc = unsafe { sensor_network::register_server_transport() };  assert_eq!(rc, 0);
  2e:	f7ff fffe 	bl	0 <register_server_transport>
  32:	2800      	cmp	r0, #0
  34:	9001      	str	r0, [sp, #4]
  36:	d122      	bne.n	7e <_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E+0x7e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:281
        sensor_network::is_collector_node() || 
  38:	f7ff fffe 	bl	0 <is_collector_node>
  3c:	b910      	cbnz	r0, 8 <is_sensor_node+0x8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:282
        sensor_network::is_sensor_node() 
  3e:	f7ff fffe 	bl	0 <is_sensor_node>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:280
    if unsafe { 
  42:	b120      	cbz	r0, c <register_collector_transport+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:284
        let rc = unsafe { sensor_network::register_collector_transport() };  assert_eq!(rc, 0);
  44:	f7ff fffe 	bl	0 <register_collector_transport>
  48:	2800      	cmp	r0, #0
  4a:	9001      	str	r0, [sp, #4]
  4c:	d13e      	bne.n	cc <_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E+0xcc>
  4e:	2001      	movs	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:289
    unsafe { NETWORK_IS_READY = true; }  //  Indicate that network is ready.
  50:	7020      	strb	r0, [r4, #0]
  52:	f240 0400 	movw	r4, #0
  56:	f2c0 0400 	movt	r4, #0
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  5a:	4620      	mov	r0, r4
  5c:	2111      	movs	r1, #17
  5e:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
  62:	f7ff fffe 	bl	0 <console_flush>
_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:293
        unsafe { os::os_time_delay(10 * os::OS_TICKS_PER_SEC); }                   //  Wait 10 seconds before repeating.
  66:	f242 7010 	movw	r0, #10000	; 0x2710
  6a:	f7ff fffe 	bl	0 <os_time_delay>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:291
    loop {  //  Loop forever...        
  6e:	e7f4      	b.n	ffffffec <.Lanon.c0556ace3a6b1bc7fbe933c546100e25.55+0xffffffdc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:268
    console_print(b"NET start\n");  assert!(unsafe { !NETWORK_IS_READY });
  70:	f240 0000 	movw	r0, #0
  74:	f2c0 0000 	movt	r0, #0
  78:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
  7c:	defe      	udf	#254	; 0xfe
  7e:	a801      	add	r0, sp, #4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:276
        let rc = unsafe { sensor_network::register_server_transport() };  assert_eq!(rc, 0);
  80:	900c      	str	r0, [sp, #48]	; 0x30
  82:	f240 0000 	movw	r0, #0
  86:	a90d      	add	r1, sp, #52	; 0x34
  88:	f2c0 0000 	movt	r0, #0
  8c:	900b      	str	r0, [sp, #44]	; 0x2c
  8e:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  92:	a80c      	add	r0, sp, #48	; 0x30
  94:	9008      	str	r0, [sp, #32]
  96:	f240 0000 	movw	r0, #0
  9a:	f2c0 0000 	movt	r0, #0
  9e:	f240 0100 	movw	r1, #0
  a2:	900d      	str	r0, [sp, #52]	; 0x34
  a4:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  a6:	9007      	str	r0, [sp, #28]
  a8:	a808      	add	r0, sp, #32
  aa:	9006      	str	r0, [sp, #24]
  ac:	2000      	movs	r0, #0
  ae:	e9cd 0004 	strd	r0, r0, [sp, #16]
  b2:	2003      	movs	r0, #3
  b4:	9003      	str	r0, [sp, #12]
  b6:	f240 0000 	movw	r0, #0
  ba:	f2c0 0000 	movt	r0, #0
_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:276
  be:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  c2:	9002      	str	r0, [sp, #8]
  c4:	a802      	add	r0, sp, #8
_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:276
  c6:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
  ca:	defe      	udf	#254	; 0xfe
  cc:	a801      	add	r0, sp, #4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:284
        let rc = unsafe { sensor_network::register_collector_transport() };  assert_eq!(rc, 0);
  ce:	900c      	str	r0, [sp, #48]	; 0x30
  d0:	f240 0000 	movw	r0, #0
  d4:	a90d      	add	r1, sp, #52	; 0x34
  d6:	f2c0 0000 	movt	r0, #0
  da:	900b      	str	r0, [sp, #44]	; 0x2c
  dc:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
  e0:	a80c      	add	r0, sp, #48	; 0x30
  e2:	9008      	str	r0, [sp, #32]
  e4:	f240 0000 	movw	r0, #0
  e8:	f2c0 0000 	movt	r0, #0
  ec:	f240 0100 	movw	r1, #0
  f0:	900d      	str	r0, [sp, #52]	; 0x34
  f2:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  f4:	9007      	str	r0, [sp, #28]
  f6:	a808      	add	r0, sp, #32
  f8:	9006      	str	r0, [sp, #24]
  fa:	2000      	movs	r0, #0
  fc:	e9cd 0004 	strd	r0, r0, [sp, #16]
 100:	2003      	movs	r0, #3
 102:	9003      	str	r0, [sp, #12]
 104:	f240 0000 	movw	r0, #0
 108:	f2c0 0000 	movt	r0, #0
_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:284
 10c:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 110:	9002      	str	r0, [sp, #8]
 112:	a802      	add	r0, sp, #8
_ZN3app9send_coap17network_task_func17h641063a53a1b9cb3E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:284
 114:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
 118:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_main:

00000000 <rust_main>:
rust_main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:30
use mynewt::kernel::os;         //  Import Mynewt OS API
use crate::base::*;             //  Import `base.rs` for common declarations

///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn rust_main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b092      	sub	sp, #72	; 0x48
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:32
    //  Init Mynewt system.
    unsafe { base::rust_sysinit()  };
   2:	f7ff fffe 	bl	0 <rust_sysinit>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:33
    unsafe { console_flush() };
   6:	f7ff fffe 	bl	0 <console_flush>
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
   a:	f240 0000 	movw	r0, #0
   e:	210a      	movs	r1, #10
  10:	f2c0 0000 	movt	r0, #0
  14:	240a      	movs	r4, #10
  16:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
  1a:	f7ff fffe 	bl	0 <console_flush>
_ZN3app9send_coap18start_network_task17h2a398c27c459523fE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:239
        os::os_task_init(                    //  Create a new task and start it...
  1e:	f240 0100 	movw	r1, #0
  22:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  26:	f44f 7080 	mov.w	r0, #256	; 0x100
  2a:	f2c0 0100 	movt	r1, #0
  2e:	e9cd 4200 	strd	r4, r2, [sp]
  32:	f240 0200 	movw	r2, #0
  36:	e9cd 1002 	strd	r1, r0, [sp, #8]
  3a:	f240 0000 	movw	r0, #0
  3e:	f240 0100 	movw	r1, #0
  42:	f2c0 0000 	movt	r0, #0
  46:	f2c0 0100 	movt	r1, #0
  4a:	f2c0 0200 	movt	r2, #0
  4e:	2300      	movs	r3, #0
  50:	2400      	movs	r4, #0
  52:	f7ff fffe 	bl	0 <os_task_init>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:256
    assert_eq!(rc, 0);  //  Check for error
  56:	2800      	cmp	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:239
        os::os_task_init(                    //  Create a new task and start it...
  58:	9009      	str	r0, [sp, #36]	; 0x24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:256
    assert_eq!(rc, 0);  //  Check for error
  5a:	d13b      	bne.n	d4 <rust_main+0xd4>
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  5c:	f240 0000 	movw	r0, #0
  60:	210a      	movs	r1, #10
  62:	f2c0 0000 	movt	r0, #0
  66:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
  6a:	f7ff fffe 	bl	0 <console_flush>
_ZN3app13listen_sensor21start_sensor_listener17h1fe770f3b0c9319cE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:46
    let rc = unsafe { sensor::sensor_set_poll_rate_ms(SENSOR_DEVICE, SENSOR_POLL_TIME) };
  6e:	f240 0000 	movw	r0, #0
  72:	f242 7110 	movw	r1, #10000	; 0x2710
  76:	f2c0 0000 	movt	r0, #0
  7a:	f7ff fffe 	bl	0 <sensor_set_poll_rate_ms>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:47
    assert_eq!(rc, 0);
  7e:	2800      	cmp	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:46
    let rc = unsafe { sensor::sensor_set_poll_rate_ms(SENSOR_DEVICE, SENSOR_POLL_TIME) };
  80:	9009      	str	r0, [sp, #36]	; 0x24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:47
    assert_eq!(rc, 0);
  82:	d14d      	bne.n	120 <rust_main+0x120>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:50
    let sensor = unsafe { sensor::sensor_mgr_find_next_bydevname(SENSOR_DEVICE, null_sensor()) };
  84:	f7ff fffe 	bl	0 <null_sensor>
  88:	4601      	mov	r1, r0
  8a:	f240 0000 	movw	r0, #0
  8e:	f2c0 0000 	movt	r0, #0
  92:	f7ff fffe 	bl	0 <sensor_mgr_find_next_bydevname>
  96:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:51
    assert!(unsafe{ !is_null_sensor(sensor) });
  98:	f7ff fffe 	bl	0 <is_null_sensor>
  9c:	2800      	cmp	r0, #0
  9e:	d166      	bne.n	16e <rust_main+0x16e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:56
        sl_func       : sensor::as_untyped(read_temperature),  //  Listener function
  a0:	f240 0000 	movw	r0, #0
  a4:	f2c0 0000 	movt	r0, #0
  a8:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor10as_untyped17hc683efc51e7df2deE>
  ac:	2100      	movs	r1, #0
  ae:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:62
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  b2:	910d      	str	r1, [sp, #52]	; 0x34
  b4:	920c      	str	r2, [sp, #48]	; 0x30
  b6:	9110      	str	r1, [sp, #64]	; 0x40
  b8:	2101      	movs	r1, #1
  ba:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  be:	a90c      	add	r1, sp, #48	; 0x30
  c0:	4620      	mov	r0, r4
  c2:	f7ff fffe 	bl	0 <_ZN6mynewt2hw6sensor17register_listener17he319e84e05fa897bE>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  c6:	2801      	cmp	r0, #1
  c8:	d158      	bne.n	17c <rust_main+0x17c>
rust_main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:51

    //  Main event loop
    loop {                            //  Loop forever...
        unsafe {
            os::os_eventq_run(            //  Process events...
                os::os_eventq_dflt_get()  //  From default event queue.
  ca:	f7ff fffe 	bl	0 <os_eventq_dflt_get>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:50
            os::os_eventq_run(            //  Process events...
  ce:	f7ff fffe 	bl	0 <os_eventq_run>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:48
    loop {                            //  Loop forever...
  d2:	e7fa      	b.n	ca <rust_main+0xca>
  d4:	a809      	add	r0, sp, #36	; 0x24
_ZN3app9send_coap18start_network_task17h2a398c27c459523fE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:256
  d6:	900a      	str	r0, [sp, #40]	; 0x28
  d8:	f240 0000 	movw	r0, #0
  dc:	a90b      	add	r1, sp, #44	; 0x2c
  de:	f2c0 0000 	movt	r0, #0
  e2:	9008      	str	r0, [sp, #32]
  e4:	e9cd 0106 	strd	r0, r1, [sp, #24]
  e8:	a80a      	add	r0, sp, #40	; 0x28
  ea:	9005      	str	r0, [sp, #20]
  ec:	f240 0000 	movw	r0, #0
  f0:	f2c0 0000 	movt	r0, #0
  f4:	f240 0100 	movw	r1, #0
  f8:	900b      	str	r0, [sp, #44]	; 0x2c
  fa:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  fc:	9011      	str	r0, [sp, #68]	; 0x44
  fe:	a805      	add	r0, sp, #20
 100:	9010      	str	r0, [sp, #64]	; 0x40
 102:	2003      	movs	r0, #3
 104:	e9cd 440e 	strd	r4, r4, [sp, #56]	; 0x38
_ZN3app9send_coap18start_network_task17h2a398c27c459523fE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:256
 108:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 10c:	900d      	str	r0, [sp, #52]	; 0x34
 10e:	f240 0000 	movw	r0, #0
 112:	f2c0 0000 	movt	r0, #0
 116:	900c      	str	r0, [sp, #48]	; 0x30
 118:	a80c      	add	r0, sp, #48	; 0x30
_ZN3app9send_coap18start_network_task17h2a398c27c459523fE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/send_coap.rs:256
 11a:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
 11e:	defe      	udf	#254	; 0xfe
rust_main():
 120:	a809      	add	r0, sp, #36	; 0x24
_ZN3app13listen_sensor21start_sensor_listener17h1fe770f3b0c9319cE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:47
    assert_eq!(rc, 0);
 122:	900a      	str	r0, [sp, #40]	; 0x28
 124:	f240 0000 	movw	r0, #0
 128:	a90b      	add	r1, sp, #44	; 0x2c
 12a:	f2c0 0000 	movt	r0, #0
 12e:	9008      	str	r0, [sp, #32]
 130:	e9cd 0106 	strd	r0, r1, [sp, #24]
 134:	a80a      	add	r0, sp, #40	; 0x28
 136:	9005      	str	r0, [sp, #20]
 138:	f240 0000 	movw	r0, #0
 13c:	f2c0 0000 	movt	r0, #0
 140:	f240 0100 	movw	r1, #0
 144:	900b      	str	r0, [sp, #44]	; 0x2c
 146:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 148:	9011      	str	r0, [sp, #68]	; 0x44
 14a:	a805      	add	r0, sp, #20
 14c:	9010      	str	r0, [sp, #64]	; 0x40
 14e:	2000      	movs	r0, #0
 150:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
 154:	2003      	movs	r0, #3
 156:	900d      	str	r0, [sp, #52]	; 0x34
 158:	f240 0000 	movw	r0, #0
 15c:	f2c0 0000 	movt	r0, #0
_ZN3app13listen_sensor21start_sensor_listener17h1fe770f3b0c9319cE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:47
 160:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 164:	900c      	str	r0, [sp, #48]	; 0x30
 166:	a80c      	add	r0, sp, #48	; 0x30
_ZN3app13listen_sensor21start_sensor_listener17h1fe770f3b0c9319cE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:47
 168:	f7ff fffe 	bl	0 <_ZN4core9panicking9panic_fmt17h6b4d8e87b0965449E>
 16c:	defe      	udf	#254	; 0xfe
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/listen_sensor.rs:51
    assert!(unsafe{ !is_null_sensor(sensor) });
 16e:	f240 0000 	movw	r0, #0
 172:	f2c0 0000 	movt	r0, #0
 176:	f7ff fffe 	bl	0 <_ZN4core9panicking5panic17h53ca63c6ac6312f8E>
 17a:	defe      	udf	#254	; 0xfe
rust_main():
 17c:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
 17e:	f240 0000 	movw	r0, #0
 182:	f2c0 0000 	movt	r0, #0
 186:	f7ff fffe 	bl	0 <rust_main>
 18a:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:62

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <_ZN4core5panic9PanicInfo8location17h5226165d8771f8a2E>
   4:	b338      	cbz	r0, 56 <rust_begin_unwind+0x56>
   6:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:63
        let file = location.file();
   8:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4file17h94cc6af18de736c4E>
   c:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:64
        let line = location.line();
   e:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:63
        let file = location.file();
  10:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:64
        let line = location.line();
  12:	f7ff fffe 	bl	0 <_ZN4core5panic8Location4line17h3ffc63f14d0a6636E>
  16:	4604      	mov	r4, r0
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
  26:	f7ff fffe 	bl	0 <console_flush>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:66
        console_print(b"panic at ");
        unsafe { console_buffer(file.as_ptr(), file.len() as u32) }
  2a:	4628      	mov	r0, r5
  2c:	4631      	mov	r1, r6
  2e:	f7ff fffe 	bl	0 <console_buffer>
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  32:	f240 0000 	movw	r0, #0
  36:	2108      	movs	r1, #8
  38:	f2c0 0000 	movt	r0, #0
  3c:	f7ff fffe 	bl	0 <console_buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:19
        console_flush();  //  TODO: Remove this.
  40:	f7ff fffe 	bl	0 <console_flush>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:68
        console_print(b" line 0x");
        unsafe { console_printhex(line as u8) }  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  44:	b2e0      	uxtb	r0, r4
  46:	f7ff fffe 	bl	0 <console_printhex>
_ZN3app4base13console_print17h223ddfb1bf7eafaaE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/base.rs:18
        console_buffer(msg.as_ptr(), len as u32);
  4a:	f240 0000 	movw	r0, #0
  4e:	2101      	movs	r1, #1
  50:	f2c0 0000 	movt	r0, #0
  54:	e004      	b.n	c <rust_begin_unwind+0xc>
  56:	f240 0000 	movw	r0, #0
  5a:	2112      	movs	r1, #18
  5c:	f2c0 0000 	movt	r0, #0
rust_begin_unwind():
  60:	f7ff fffe 	bl	0 <console_buffer>
  64:	f7ff fffe 	bl	0 <console_flush>
  68:	f7ff fffe 	bl	0 <console_flush>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  6c:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:78
        unsafe { console_flush() }
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  70:	e7fe      	b.n	70 <rust_begin_unwind+0x70>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.bc.z: File format not recognized
