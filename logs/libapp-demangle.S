In archive target/thumbv7m-none-eabi/release/libapp.rlib:

app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.o6vxcoia-cgu.0
000021f5 l       .debug_str	00000000 
00002b00 l       .debug_str	00000000 
00002b0a l       .debug_str	00000000 
00002b1a l       .debug_str	00000000 
00002b2f l       .debug_str	00000000 
00002b37 l       .debug_str	00000000 
00002b9b l       .debug_str	00000000 
00002c07 l       .debug_str	00000000 
00002c0e l       .debug_str	00000000 
00002c16 l       .debug_str	00000000 
00002c34 l       .debug_str	00000000 
00002c44 l       .debug_str	00000000 
00002c77 l       .debug_str	00000000 
00002c8c l       .debug_str	00000000 
00002c9f l       .debug_str	00000000 
00002cb4 l       .debug_str	00000000 
00002cbb l       .debug_str	00000000 
00002cd0 l       .debug_str	00000000 
00002cfa l       .debug_str	00000000 
00002d03 l       .debug_str	00000000 
00002d73 l       .debug_str	00000000 
00002dc6 l       .debug_str	00000000 
00002e15 l       .debug_str	00000000 
00002e55 l       .debug_str	00000000 
00002e7c l       .debug_str	00000000 
00002e80 l       .debug_str	00000000 
00002e82 l       .debug_str	00000000 
00002e84 l       .debug_str	00000000 
00002e8e l       .debug_str	00000000 
00002e97 l       .debug_str	00000000 
00002ea0 l       .debug_str	00000000 
00002eab l       .debug_str	00000000 
00002eb5 l       .debug_str	00000000 
00002edc l       .debug_str	00000000 
00002ef4 l       .debug_str	00000000 
00002efe l       .debug_str	00000000 
00002f21 l       .debug_str	00000000 
00002f69 l       .debug_str	00000000 
00002fa9 l       .debug_str	00000000 
00002ff0 l       .debug_str	00000000 
00002ff9 l       .debug_str	00000000 
00002ffd l       .debug_str	00000000 
00003027 l       .debug_str	00000000 
0000302c l       .debug_str	00000000 
00003074 l       .debug_str	00000000 
0000307c l       .debug_str	00000000 
000030c4 l       .debug_str	00000000 
000030cd l       .debug_str	00000000 
000030d0 l       .debug_str	00000000 
0000311a l       .debug_str	00000000 
00003123 l       .debug_str	00000000 
00003156 l       .debug_str	00000000 
00003181 l       .debug_str	00000000 
00003183 l       .debug_str	00000000 
000031bf l       .debug_str	00000000 
000031d2 l       .debug_str	00000000 
000031d7 l       .debug_str	00000000 
000031e9 l       .debug_str	00000000 
000031ef l       .debug_str	00000000 
000031f5 l       .debug_str	00000000 
000031fb l       .debug_str	00000000 
00003200 l       .debug_str	00000000 
0000320d l       .debug_str	00000000 
00003211 l       .debug_str	00000000 
00003216 l       .debug_str	00000000 
0000321e l       .debug_str	00000000 
00003222 l       .debug_str	00000000 
00003227 l       .debug_str	00000000 
0000322f l       .debug_str	00000000 
0000324d l       .debug_str	00000000 
00003256 l       .debug_str	00000000 
0000325b l       .debug_str	00000000 
00003260 l       .debug_str	00000000 
00003264 l       .debug_str	00000000 
0000326d l       .debug_str	00000000 
00003277 l       .debug_str	00000000 
0000328f l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
000000a2 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000ad l       .debug_str	00000000 
000000b0 l       .debug_str	00000000 
000000b8 l       .debug_str	00000000 
000000bc l       .debug_str	00000000 
000000c5 l       .debug_str	00000000 
000000cf l       .debug_str	00000000 
000000d6 l       .debug_str	00000000 
000000dc l       .debug_str	00000000 
000000e2 l       .debug_str	00000000 
000000e7 l       .debug_str	00000000 
000000ef l       .debug_str	00000000 
000000f4 l       .debug_str	00000000 
0000012b l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013e l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
00000149 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
0000014f l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015a l       .debug_str	00000000 
00000161 l       .debug_str	00000000 
00000169 l       .debug_str	00000000 
00000173 l       .debug_str	00000000 
00000177 l       .debug_str	00000000 
0000017f l       .debug_str	00000000 
0000018a l       .debug_str	00000000 
00000195 l       .debug_str	00000000 
000001a2 l       .debug_str	00000000 
000001ad l       .debug_str	00000000 
000001b5 l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d5 l       .debug_str	00000000 
000001e0 l       .debug_str	00000000 
000001eb l       .debug_str	00000000 
000001f8 l       .debug_str	00000000 
00000204 l       .debug_str	00000000 
00000211 l       .debug_str	00000000 
0000021f l       .debug_str	00000000 
00000229 l       .debug_str	00000000 
00000236 l       .debug_str	00000000 
00000242 l       .debug_str	00000000 
00000246 l       .debug_str	00000000 
00000251 l       .debug_str	00000000 
0000025c l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
00000267 l       .debug_str	00000000 
00000270 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002d1 l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
000002d7 l       .debug_str	00000000 
000002dd l       .debug_str	00000000 
000002e1 l       .debug_str	00000000 
000002e6 l       .debug_str	00000000 
000002eb l       .debug_str	00000000 
000002f1 l       .debug_str	00000000 
000002f7 l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000303 l       .debug_str	00000000 
00000305 l       .debug_str	00000000 
0000030a l       .debug_str	00000000 
00000318 l       .debug_str	00000000 
00000322 l       .debug_str	00000000 
00000326 l       .debug_str	00000000 
0000032e l       .debug_str	00000000 
00000336 l       .debug_str	00000000 
0000033d l       .debug_str	00000000 
00000351 l       .debug_str	00000000 
0000035d l       .debug_str	00000000 
00000368 l       .debug_str	00000000 
0000036f l       .debug_str	00000000 
00000375 l       .debug_str	00000000 
00000379 l       .debug_str	00000000 
0000037f l       .debug_str	00000000 
00000385 l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
00000397 l       .debug_str	00000000 
0000039e l       .debug_str	00000000 
000003a2 l       .debug_str	00000000 
000003ab l       .debug_str	00000000 
000003b7 l       .debug_str	00000000 
000003d0 l       .debug_str	00000000 
000003d5 l       .debug_str	00000000 
000003e6 l       .debug_str	00000000 
000003f0 l       .debug_str	00000000 
0000044e l       .debug_str	00000000 
00000459 l       .debug_str	00000000 
00000476 l       .debug_str	00000000 
0000047a l       .debug_str	00000000 
00000482 l       .debug_str	00000000 
00000499 l       .debug_str	00000000 
000004bd l       .debug_str	00000000 
000004d9 l       .debug_str	00000000 
000004de l       .debug_str	00000000 
000004f7 l       .debug_str	00000000 
00000501 l       .debug_str	00000000 
0000051b l       .debug_str	00000000 
00000578 l       .debug_str	00000000 
0000057d l       .debug_str	00000000 
00000584 l       .debug_str	00000000 
00000589 l       .debug_str	00000000 
00000595 l       .debug_str	00000000 
0000059d l       .debug_str	00000000 
000005a6 l       .debug_str	00000000 
000005ab l       .debug_str	00000000 
000005ae l       .debug_str	00000000 
000005b7 l       .debug_str	00000000 
000005be l       .debug_str	00000000 
000005c1 l       .debug_str	00000000 
000005c7 l       .debug_str	00000000 
000005d1 l       .debug_str	00000000 
000005d9 l       .debug_str	00000000 
000005df l       .debug_str	00000000 
000005ea l       .debug_str	00000000 
000005f3 l       .debug_str	00000000 
00000616 l       .debug_str	00000000 
00000635 l       .debug_str	00000000 
0000065c l       .debug_str	00000000 
00000666 l       .debug_str	00000000 
00000698 l       .debug_str	00000000 
0000069f l       .debug_str	00000000 
000006dc l       .debug_str	00000000 
000006f0 l       .debug_str	00000000 
000006f3 l       .debug_str	00000000 
000006fa l       .debug_str	00000000 
000006fe l       .debug_str	00000000 
00000702 l       .debug_str	00000000 
00000707 l       .debug_str	00000000 
0000070d l       .debug_str	00000000 
00000711 l       .debug_str	00000000 
00000721 l       .debug_str	00000000 
0000072d l       .debug_str	00000000 
00000739 l       .debug_str	00000000 
00000750 l       .debug_str	00000000 
0000075c l       .debug_str	00000000 
00000760 l       .debug_str	00000000 
00000784 l       .debug_str	00000000 
00000790 l       .debug_str	00000000 
0000079e l       .debug_str	00000000 
000007b5 l       .debug_str	00000000 
000007ca l       .debug_str	00000000 
000007cd l       .debug_str	00000000 
000007d6 l       .debug_str	00000000 
000007e0 l       .debug_str	00000000 
000007e5 l       .debug_str	00000000 
000007eb l       .debug_str	00000000 
000007f0 l       .debug_str	00000000 
000007f5 l       .debug_str	00000000 
0000080b l       .debug_str	00000000 
00000810 l       .debug_str	00000000 
0000081c l       .debug_str	00000000 
00000857 l       .debug_str	00000000 
00000868 l       .debug_str	00000000 
0000086a l       .debug_str	00000000 
00000892 l       .debug_str	00000000 
000008b3 l       .debug_str	00000000 
000008b7 l       .debug_str	00000000 
000008c1 l       .debug_str	00000000 
000008c6 l       .debug_str	00000000 
000008d4 l       .debug_str	00000000 
000008dd l       .debug_str	00000000 
000008eb l       .debug_str	00000000 
000008f6 l       .debug_str	00000000 
00000908 l       .debug_str	00000000 
0000091c l       .debug_str	00000000 
00000920 l       .debug_str	00000000 
00000929 l       .debug_str	00000000 
00000999 l       .debug_str	00000000 
000009cf l       .debug_str	00000000 
00000a01 l       .debug_str	00000000 
00000a71 l       .debug_str	00000000 
00000a9f l       .debug_str	00000000 
00000ac9 l       .debug_str	00000000 
00000b08 l       .debug_str	00000000 
00000b1e l       .debug_str	00000000 
00000b27 l       .debug_str	00000000 
00000b2d l       .debug_str	00000000 
00000b34 l       .debug_str	00000000 
00000b37 l       .debug_str	00000000 
00000b43 l       .debug_str	00000000 
00000b4b l       .debug_str	00000000 
00000ba5 l       .debug_str	00000000 
00000c07 l       .debug_str	00000000 
00000c12 l       .debug_str	00000000 
00000c59 l       .debug_str	00000000 
00000ca8 l       .debug_str	00000000 
00000cb2 l       .debug_str	00000000 
00000cef l       .debug_str	00000000 
00000d34 l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000d4d l       .debug_str	00000000 
00000d55 l       .debug_str	00000000 
00000daa l       .debug_str	00000000 
00000e07 l       .debug_str	00000000 
00000e13 l       .debug_str	00000000 
00000e1c l       .debug_str	00000000 
00000e28 l       .debug_str	00000000 
00000e34 l       .debug_str	00000000 
00000e3d l       .debug_str	00000000 
00000e45 l       .debug_str	00000000 
00000e4d l       .debug_str	00000000 
00000e57 l       .debug_str	00000000 
00000e6c l       .debug_str	00000000 
00000e73 l       .debug_str	00000000 
00000e93 l       .debug_str	00000000 
00000e9a l       .debug_str	00000000 
00000ea2 l       .debug_str	00000000 
00000eac l       .debug_str	00000000 
00000eb7 l       .debug_str	00000000 
00000ec0 l       .debug_str	00000000 
00000ecb l       .debug_str	00000000 
00000ed7 l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000ee4 l       .debug_str	00000000 
00000eeb l       .debug_str	00000000 
00000ef3 l       .debug_str	00000000 
00000efb l       .debug_str	00000000 
00000f05 l       .debug_str	00000000 
00000f0b l       .debug_str	00000000 
00000f12 l       .debug_str	00000000 
00000f19 l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f7b l       .debug_str	00000000 
00000f81 l       .debug_str	00000000 
00000f87 l       .debug_str	00000000 
00000f96 l       .debug_str	00000000 
00000fa6 l       .debug_str	00000000 
00000fb6 l       .debug_str	00000000 
00000fbe l       .debug_str	00000000 
00000fe7 l       .debug_str	00000000 
00001045 l       .debug_str	00000000 
000010ab l       .debug_str	00000000 
000010b2 l       .debug_str	00000000 
000010ba l       .debug_str	00000000 
000010c3 l       .debug_str	00000000 
000010e1 l       .debug_str	00000000 
000010f1 l       .debug_str	00000000 
000010ff l       .debug_str	00000000 
0000110a l       .debug_str	00000000 
00001117 l       .debug_str	00000000 
00001126 l       .debug_str	00000000 
0000113c l       .debug_str	00000000 
00001146 l       .debug_str	00000000 
0000114f l       .debug_str	00000000 
00001158 l       .debug_str	00000000 
0000117e l       .debug_str	00000000 
00001194 l       .debug_str	00000000 
0000119f l       .debug_str	00000000 
000011b5 l       .debug_str	00000000 
000011bd l       .debug_str	00000000 
000011de l       .debug_str	00000000 
000011f5 l       .debug_str	00000000 
000011fa l       .debug_str	00000000 
00001202 l       .debug_str	00000000 
0000120b l       .debug_str	00000000 
00001214 l       .debug_str	00000000 
0000121d l       .debug_str	00000000 
00001225 l       .debug_str	00000000 
0000122c l       .debug_str	00000000 
00001238 l       .debug_str	00000000 
00001243 l       .debug_str	00000000 
0000124b l       .debug_str	00000000 
00001253 l       .debug_str	00000000 
000012cf l       .debug_str	00000000 
00001353 l       .debug_str	00000000 
0000144f l       .debug_str	00000000 
00001553 l       .debug_str	00000000 
00001561 l       .debug_str	00000000 
0000156c l       .debug_str	00000000 
00001576 l       .debug_str	00000000 
00001581 l       .debug_str	00000000 
000015af l       .debug_str	00000000 
0000162a l       .debug_str	00000000 
000016ad l       .debug_str	00000000 
000016bb l       .debug_str	00000000 
0000171a l       .debug_str	00000000 
00001781 l       .debug_str	00000000 
00001797 l       .debug_str	00000000 
000017a7 l       .debug_str	00000000 
000017b6 l       .debug_str	00000000 
000017ba l       .debug_str	00000000 
000017c0 l       .debug_str	00000000 
000017c6 l       .debug_str	00000000 
000017cc l       .debug_str	00000000 
000017d8 l       .debug_str	00000000 
000017e0 l       .debug_str	00000000 
000017e8 l       .debug_str	00000000 
000017ee l       .debug_str	00000000 
00001811 l       .debug_str	00000000 
00001821 l       .debug_str	00000000 
00001854 l       .debug_str	00000000 
00001894 l       .debug_str	00000000 
000018dc l       .debug_str	00000000 
000018e0 l       .debug_str	00000000 
000018e6 l       .debug_str	00000000 
000018ec l       .debug_str	00000000 
000018f2 l       .debug_str	00000000 
00001904 l       .debug_str	00000000 
00001939 l       .debug_str	00000000 
0000197b l       .debug_str	00000000 
000019c5 l       .debug_str	00000000 
000019c9 l       .debug_str	00000000 
000019cf l       .debug_str	00000000 
000019d5 l       .debug_str	00000000 
000019db l       .debug_str	00000000 
000019ed l       .debug_str	00000000 
00001a22 l       .debug_str	00000000 
00001a64 l       .debug_str	00000000 
00001aae l       .debug_str	00000000 
00001ab2 l       .debug_str	00000000 
00001ab8 l       .debug_str	00000000 
00001abe l       .debug_str	00000000 
00001ac4 l       .debug_str	00000000 
00001aca l       .debug_str	00000000 
00001adb l       .debug_str	00000000 
00001b0f l       .debug_str	00000000 
00001b50 l       .debug_str	00000000 
00001b99 l       .debug_str	00000000 
00001b9e l       .debug_str	00000000 
00001ba3 l       .debug_str	00000000 
00001ba7 l       .debug_str	00000000 
00001bad l       .debug_str	00000000 
00001bb3 l       .debug_str	00000000 
00001bb9 l       .debug_str	00000000 
00001bca l       .debug_str	00000000 
00001bfe l       .debug_str	00000000 
00001c3f l       .debug_str	00000000 
00001c88 l       .debug_str	00000000 
00001c8c l       .debug_str	00000000 
00001c95 l       .debug_str	00000000 
00001ca6 l       .debug_str	00000000 
00001cda l       .debug_str	00000000 
00001d1b l       .debug_str	00000000 
00001d64 l       .debug_str	00000000 
00001d69 l       .debug_str	00000000 
00001d6d l       .debug_str	00000000 
00001d76 l       .debug_str	00000000 
00001d7d l       .debug_str	00000000 
00001d85 l       .debug_str	00000000 
00001d97 l       .debug_str	00000000 
00001dcc l       .debug_str	00000000 
00001e0e l       .debug_str	00000000 
00001e58 l       .debug_str	00000000 
00001e5c l       .debug_str	00000000 
00001e62 l       .debug_str	00000000 
00001e68 l       .debug_str	00000000 
00001e6e l       .debug_str	00000000 
00001e74 l       .debug_str	00000000 
00001e7c l       .debug_str	00000000 
00001e8a l       .debug_str	00000000 
00001e99 l       .debug_str	00000000 
00001eaa l       .debug_str	00000000 
00001eb5 l       .debug_str	00000000 
00001ec0 l       .debug_str	00000000 
00001ecb l       .debug_str	00000000 
00001ed2 l       .debug_str	00000000 
00001ef5 l       .debug_str	00000000 
00001f07 l       .debug_str	00000000 
00001f3c l       .debug_str	00000000 
00001f7e l       .debug_str	00000000 
00001fc8 l       .debug_str	00000000 
00001fcc l       .debug_str	00000000 
00001fd6 l       .debug_str	00000000 
00001fe8 l       .debug_str	00000000 
0000201d l       .debug_str	00000000 
0000205f l       .debug_str	00000000 
000020a9 l       .debug_str	00000000 
000020ae l       .debug_str	00000000 
000020b8 l       .debug_str	00000000 
000020ca l       .debug_str	00000000 
000020ff l       .debug_str	00000000 
00002141 l       .debug_str	00000000 
0000218b l       .debug_str	00000000 
0000219f l       .debug_str	00000000 
000021ad l       .debug_str	00000000 
000021bd l       .debug_str	00000000 
000021c6 l       .debug_str	00000000 
000021d1 l       .debug_str	00000000 
000021e0 l       .debug_str	00000000 
00002226 l       .debug_str	00000000 
000022c3 l       .debug_str	00000000 
00002368 l       .debug_str	00000000 
00002373 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
0000239d l       .debug_str	00000000 
000023b0 l       .debug_str	00000000 
000023e6 l       .debug_str	00000000 
00002469 l       .debug_str	00000000 
000024f4 l       .debug_str	00000000 
00002510 l       .debug_str	00000000 
0000255c l       .debug_str	00000000 
000025b0 l       .debug_str	00000000 
000025cd l       .debug_str	00000000 
000025e1 l       .debug_str	00000000 
0000262d l       .debug_str	00000000 
00002681 l       .debug_str	00000000 
00002697 l       .debug_str	00000000 
000026ab l       .debug_str	00000000 
000026f2 l       .debug_str	00000000 
00002741 l       .debug_str	00000000 
0000274a l       .debug_str	00000000 
00002758 l       .debug_str	00000000 
00002789 l       .debug_str	00000000 
0000278f l       .debug_str	00000000 
00002797 l       .debug_str	00000000 
0000279e l       .debug_str	00000000 
000027a6 l       .debug_str	00000000 
000027b1 l       .debug_str	00000000 
000027b9 l       .debug_str	00000000 
000027c8 l       .debug_str	00000000 
000027cc l       .debug_str	00000000 
000027d7 l       .debug_str	00000000 
000027e3 l       .debug_str	00000000 
000027ee l       .debug_str	00000000 
000027ff l       .debug_str	00000000 
00002805 l       .debug_str	00000000 
0000280d l       .debug_str	00000000 
00002814 l       .debug_str	00000000 
0000281e l       .debug_str	00000000 
00002826 l       .debug_str	00000000 
0000282e l       .debug_str	00000000 
00002850 l       .debug_str	00000000 
0000285b l       .debug_str	00000000 
00002867 l       .debug_str	00000000 
0000286f l       .debug_str	00000000 
00002878 l       .debug_str	00000000 
00002883 l       .debug_str	00000000 
0000288a l       .debug_str	00000000 
00002895 l       .debug_str	00000000 
000028a0 l       .debug_str	00000000 
000028b0 l       .debug_str	00000000 
000028ba l       .debug_str	00000000 
000028c0 l       .debug_str	00000000 
000028e2 l       .debug_str	00000000 
0000291a l       .debug_str	00000000 
0000295a l       .debug_str	00000000 
00002961 l       .debug_str	00000000 
00002969 l       .debug_str	00000000 
00002980 l       .debug_str	00000000 
00002989 l       .debug_str	00000000 
00002999 l       .debug_str	00000000 
000029a8 l       .debug_str	00000000 
000029b0 l       .debug_str	00000000 
000029b7 l       .debug_str	00000000 
000029bf l       .debug_str	00000000 
000029dd l       .debug_str	00000000 
000029ed l       .debug_str	00000000 
00002a20 l       .debug_str	00000000 
00002a35 l       .debug_str	00000000 
00002a3e l       .debug_str	00000000 
00002a9b l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.21	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.22	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.23	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.27	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.28	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.29	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.30	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.31	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.32	0000000d .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000004 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.34	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.34
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.35	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.35
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.36	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.36
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.37	00000005 .Lanon.3ed011473997af99b525cde47c9eaaac.37
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.38	00000048 .Lanon.3ed011473997af99b525cde47c9eaaac.38
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.39	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.39
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.40
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.41
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.42
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.43
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.44	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.44
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.45	00000007 .Lanon.3ed011473997af99b525cde47c9eaaac.45
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.46	00000003 .Lanon.3ed011473997af99b525cde47c9eaaac.46
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.47
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000e .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E	0000000c app::app_sensor::SENSOR_DEVICE
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000364 app::app_sensor::handle_sensor_data
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E	0000003a <&T as core::fmt::Debug>::fmt
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	0000000c <&T as core::fmt::Display>::fmt
00000000 l     F .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000050 core::result::unwrap_failed
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E
00000000 l    d  .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E	00000000 .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000000 .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17h2a469235bdce3198E
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.26	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.26
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <str as core::fmt::Display>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
00000000         *UND*	00000000 core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
00000000         *UND*	00000000 core::fmt::Formatter::debug_lower_hex
00000000         *UND*	00000000 core::fmt::Formatter::debug_upper_hex
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <core::fmt::Arguments as core::fmt::Display>::fmt
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::fmt::Debug>::fmt
00000000         *UND*	00000000 mynewt::hw::sensor::as_untyped
00000000         *UND*	00000000 mynewt::hw::sensor::register_listener
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::set_poll_rate_ms
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::mgr_find_next_bydevname
00000000         *UND*	00000000 mynewt::sys::console::print_strn
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 mynewt::sys::console::buffer
00000000         *UND*	00000000 mynewt::sys::console::printhex
00000000         *UND*	00000000 mynewt::Strn::new
00000000         *UND*	00000000 mynewt::libs::sensor_network::prepare_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::get_device_id
00000000         *UND*	00000000 mynewt::libs::sensor_network::do_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::init_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::start_server_transport
00000000         *UND*	00000000 mynewt::kernel::os::eventq_run
00000000         *UND*	00000000 mynewt::kernel::os::eventq_dflt_get
00000000         *UND*	00000000 mynewt::sysinit
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::key_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::to_void_ptr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::value_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::json_set_text_string
00000000         *UND*	00000000 mynewt::encoding::coap_context::COAP_CONTEXT
00000000         *UND*	00000000 <str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 json_helper_close_array
00000000         *UND*	00000000 json_helper_object_array_end_item
00000000         *UND*	00000000 json_helper_object_array_start_item
00000000         *UND*	00000000 json_helper_set_array
00000000         *UND*	00000000 json_helper_set_int
00000000         *UND*	00000000 json_helper_set_text_string
00000000         *UND*	00000000 json_rep_end_root_object
00000000         *UND*	00000000 json_rep_start_root_object
00000000 g     F .text.main	000000de main
00000000 g     F .text.rust_begin_unwind	00000078 rust_begin_unwind



Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e4cd90c2150b615E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h271d1c938b44f4eaE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt>

Disassembly of section .text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E:

00000000 <<&T as core::fmt::Debug>::fmt>:
_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h61ad4c3b3d847e36E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	b5b0      	push	{r4, r5, r7, lr}
   2:	6805      	ldr	r5, [r0, #0]
_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hc0a5c2426ccebe61E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:147
   4:	4608      	mov	r0, r1
   6:	460c      	mov	r4, r1
   8:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_lower_hex>
   c:	b128      	cbz	r0, 1a <<&T as core::fmt::Debug>::fmt+0x1a>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:148
   e:	4628      	mov	r0, r5
  10:	4621      	mov	r1, r4
  12:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  16:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:149
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <core::fmt::Formatter::debug_upper_hex>
  20:	b128      	cbz	r0, 2e <<&T as core::fmt::Debug>::fmt+0x2e>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:150
  22:	4628      	mov	r0, r5
  24:	4621      	mov	r1, r4
  26:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  2a:	f7ff bffe 	b.w	0 <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt>
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/num.rs:152
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
  36:	f7ff bffe 	b.w	0 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt>

Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E:

00000000 <<&T as core::fmt::Display>::fmt>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <<str as core::fmt::Display>::fmt>

Disassembly of section .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E:

00000000 <core::result::unwrap_failed>:
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E:

00000000 <app::app_sensor::handle_sensor_data>:
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:74
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b099      	sub	sp, #100	; 0x64
   6:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:76
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("Rust handle_sensor_data\n");
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79

    //  Check that the temperature data is valid.
    if sensor_data.is_null() { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  18:	2c00      	cmp	r4, #0
  1a:	d04d      	beq.n	b8 <app::app_sensor::handle_sensor_data+0xb8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:80
    assert!(!sensor.is_null(), "null sensor");
  1c:	2d00      	cmp	r5, #0
  1e:	f000 8123 	beq.w	268 <app::app_sensor::handle_sensor_data+0x268>
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:108

///  Convert the raw temperature value received from Mynewt into a `SensorValue` for transmission, which includes the sensor data key `t`. 
///  `sensor_type` indicates the type of data in `sensor_data`.
#[allow(non_snake_case, unused_variables)]
fn convert_sensor_data(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    console::print("TMP listener got rawtmp\n");
  22:	f240 0000 	movw	r0, #0
  26:	2118      	movs	r1, #24
  28:	f2c0 0000 	movt	r0, #0
  2c:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  30:	ad01      	add	r5, sp, #4
  32:	2600      	movs	r6, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:116
        key: TEMP_SENSOR_KEY,  //  Sensor data key is `t`
        val: match sensor_type {
            SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
                //  Interpret the sensor data as a `sensor_temp_raw_data` struct that contains raw temp.
                let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
                let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  34:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
                let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  36:	f88d 6008 	strb.w	r6, [sp, #8]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:116
                let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  3a:	4629      	mov	r1, r5
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:115
                let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3c:	9601      	str	r6, [sp, #4]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:116
                let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  3e:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:117
                assert_eq!(rc, 0, "rawtmp fail");
  42:	2800      	cmp	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:116
                let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  44:	9003      	str	r0, [sp, #12]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:117
                assert_eq!(rc, 0, "rawtmp fail");
  46:	f040 8116 	bne.w	276 <app::app_sensor::handle_sensor_data+0x276>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:119
                //  Check that the raw temperature data is valid.
                assert_ne!(rawtempdata.strd_temp_raw_is_valid, 0, "bad rawtmp");                
  4a:	f89d 0008 	ldrb.w	r0, [sp, #8]
  4e:	2800      	cmp	r0, #0
  50:	f000 814c 	beq.w	2ec <app::app_sensor::handle_sensor_data+0x2ec>
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:51
///   {"key":"device", "value":"0102030405060708090a0b0c0d0e0f10"},
///   {"key":"t",      "value":1715}
/// ]}
/// ```
pub fn send_sensor_data(val: &SensorValue) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console::print("Rust send_sensor_data\n");
  54:	f240 0000 	movw	r0, #0
  58:	2116      	movs	r1, #22
  5a:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:121
                //  Raw temperature data is valid.  Return it.
                SensorValueType::Uint(rawtempdata.strd_temp_raw)  //  Raw Temperature in integer (0 to 4095)
  5e:	9c01      	ldr	r4, [sp, #4]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:51
  60:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  64:	a812      	add	r0, sp, #72	; 0x48
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:53
    //  Get a randomly-generated device ID that changes each time we restart the device.
    let device_id = sensor_network::get_device_id() ? ;
  66:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::get_device_id>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h99ed3ab290884f4dE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  6a:	e9dd 1012 	ldrd	r1, r0, [sp, #72]	; 0x48
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:53
  6e:	2901      	cmp	r1, #1
  70:	d015      	beq.n	9e <app::app_sensor::handle_sensor_data+0x9e>
  72:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
  76:	ab04      	add	r3, sp, #16
  78:	ad12      	add	r5, sp, #72	; 0x48
  7a:	c307      	stmia	r3!, {r0, r1, r2}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:58

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post( strn!(()) ) ? ;  //  `strn!(())` means use default CoAP URI in `syscfg.yml`
  7c:	f240 0100 	movw	r1, #0
  80:	f2c0 0100 	movt	r1, #0
  84:	4628      	mov	r0, r5
  86:	2201      	movs	r2, #1
  88:	f7ff fffe 	bl	0 <mynewt::Strn::new>
  8c:	a80a      	add	r0, sp, #40	; 0x28
  8e:	4629      	mov	r1, r5
  90:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::init_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  94:	980a      	ldr	r0, [sp, #40]	; 0x28
  96:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:58
  98:	2901      	cmp	r1, #1
  9a:	d112      	bne.n	c2 <app::app_sensor::handle_sensor_data+0xc2>
  9c:	980b      	ldr	r0, [sp, #44]	; 0x2c
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:94
    if let Err(err) = ret {  //  `if let` will assign `err` to the error code inside `ret`
  9e:	3006      	adds	r0, #6
  a0:	d106      	bne.n	b0 <app::app_sensor::handle_sensor_data+0xb0>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:96
            console::print("TMP network not ready\n");
  a2:	f240 0000 	movw	r0, #0
  a6:	2116      	movs	r1, #22
  a8:	f2c0 0000 	movt	r0, #0
  ac:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  b0:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:102
}
  b2:	b019      	add	sp, #100	; 0x64
  b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  b8:	f06f 0001 	mvn.w	r0, #1
  bc:	b019      	add	sp, #100	; 0x64
  be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:61

    //  If network transport not ready, tell caller (Sensor Listener) to try again later.
    if !rc { return Err(MynewtError::SYS_EAGAIN); }
  c2:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  c6:	d0ec      	beq.n	a2 <app::app_sensor::handle_sensor_data+0xa2>
  c8:	a812      	add	r0, sp, #72	; 0x48
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:65

    //  Compose the CoAP Payload using the coap!() macro.
    //  Select @json or @cbor To encode CoAP Payload in JSON or CBOR format.
    let _payload = coap!( @json {        
  ca:	2132      	movs	r1, #50	; 0x32
  cc:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::prepare_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  d0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:65
  d4:	2801      	cmp	r0, #1
  d6:	f000 80b2 	beq.w	23e <app::app_sensor::handle_sensor_data+0x23e>
  da:	f7ff fffe 	bl	0 <json_rep_start_root_object>
  de:	f240 0a00 	movw	sl, #0
  e2:	f2c0 0a00 	movt	sl, #0
  e6:	4650      	mov	r0, sl
  e8:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
  ec:	f240 0100 	movw	r1, #0
  f0:	4607      	mov	r7, r0
  f2:	f2c0 0100 	movt	r1, #0
  f6:	4650      	mov	r0, sl
  f8:	2207      	movs	r2, #7
  fa:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
  fe:	4601      	mov	r1, r0
 100:	4638      	mov	r0, r7
 102:	f7ff fffe 	bl	0 <json_helper_set_array>
 106:	f240 0900 	movw	r9, #0
 10a:	4650      	mov	r0, sl
 10c:	f2c0 0900 	movt	r9, #0
 110:	220d      	movs	r2, #13
 112:	4649      	mov	r1, r9
 114:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 118:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 11c:	ae0a      	add	r6, sp, #40	; 0x28
 11e:	f240 0100 	movw	r1, #0
 122:	f2c0 0100 	movt	r1, #0
 126:	2204      	movs	r2, #4
 128:	4630      	mov	r0, r6
 12a:	f7ff fffe 	bl	0 <mynewt::Strn::new>
 12e:	af12      	add	r7, sp, #72	; 0x48
 130:	f240 0100 	movw	r1, #0
 134:	f2c0 0100 	movt	r1, #0
 138:	2207      	movs	r2, #7
 13a:	4638      	mov	r0, r7
 13c:	f7ff fffe 	bl	0 <mynewt::Strn::new>
 140:	4650      	mov	r0, sl
 142:	4631      	mov	r1, r6
 144:	463a      	mov	r2, r7
 146:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::json_set_text_string>
 14a:	ae12      	add	r6, sp, #72	; 0x48
 14c:	f240 0100 	movw	r1, #0
 150:	f2c0 0100 	movt	r1, #0
 154:	2206      	movs	r2, #6
 156:	4630      	mov	r0, r6
 158:	f7ff fffe 	bl	0 <mynewt::Strn::new>
 15c:	aa04      	add	r2, sp, #16
 15e:	4650      	mov	r0, sl
 160:	4631      	mov	r1, r6
 162:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::json_set_text_string>
 166:	4650      	mov	r0, sl
 168:	4649      	mov	r1, r9
 16a:	220d      	movs	r2, #13
 16c:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 170:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 174:	4650      	mov	r0, sl
 176:	4649      	mov	r1, r9
 178:	220d      	movs	r2, #13
 17a:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 17e:	f7ff fffe 	bl	0 <json_helper_object_array_start_item>
 182:	f240 0000 	movw	r0, #0
 186:	2103      	movs	r1, #3
 188:	f2c0 0000 	movt	r0, #0
 18c:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 190:	4683      	mov	fp, r0
 192:	f240 0000 	movw	r0, #0
 196:	460f      	mov	r7, r1
 198:	f2c0 0000 	movt	r0, #0
 19c:	2101      	movs	r1, #1
 19e:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 1a2:	4605      	mov	r5, r0
 1a4:	4650      	mov	r0, sl
 1a6:	460e      	mov	r6, r1
 1a8:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
 1ac:	4680      	mov	r8, r0
 1ae:	4650      	mov	r0, sl
 1b0:	4659      	mov	r1, fp
 1b2:	463a      	mov	r2, r7
 1b4:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 1b8:	4607      	mov	r7, r0
 1ba:	4650      	mov	r0, sl
 1bc:	4629      	mov	r1, r5
 1be:	4632      	mov	r2, r6
 1c0:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::value_to_cstr>
 1c4:	4602      	mov	r2, r0
 1c6:	4640      	mov	r0, r8
 1c8:	4639      	mov	r1, r7
 1ca:	f7ff fffe 	bl	0 <json_helper_set_text_string>
 1ce:	f240 0000 	movw	r0, #0
 1d2:	2105      	movs	r1, #5
 1d4:	f2c0 0000 	movt	r0, #0
 1d8:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 1dc:	4605      	mov	r5, r0
 1de:	4650      	mov	r0, sl
 1e0:	460e      	mov	r6, r1
 1e2:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
 1e6:	4607      	mov	r7, r0
 1e8:	4650      	mov	r0, sl
 1ea:	4629      	mov	r1, r5
 1ec:	4632      	mov	r2, r6
 1ee:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 1f2:	4601      	mov	r1, r0
 1f4:	4638      	mov	r0, r7
 1f6:	4622      	mov	r2, r4
 1f8:	2300      	movs	r3, #0
 1fa:	f7ff fffe 	bl	0 <json_helper_set_int>
 1fe:	4650      	mov	r0, sl
 200:	4649      	mov	r1, r9
 202:	220d      	movs	r2, #13
 204:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 208:	f7ff fffe 	bl	0 <json_helper_object_array_end_item>
 20c:	4650      	mov	r0, sl
 20e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::to_void_ptr>
 212:	f240 0100 	movw	r1, #0
 216:	4604      	mov	r4, r0
 218:	4650      	mov	r0, sl
 21a:	f2c0 0100 	movt	r1, #0
 21e:	2207      	movs	r2, #7
 220:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 224:	4601      	mov	r1, r0
 226:	4620      	mov	r0, r4
 228:	f7ff fffe 	bl	0 <json_helper_close_array>
 22c:	f7ff fffe 	bl	0 <json_rep_end_root_object>
 230:	a812      	add	r0, sp, #72	; 0x48
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:80
    });

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 232:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::do_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
 236:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:80
 23a:	2801      	cmp	r0, #1
 23c:	d104      	bne.n	248 <app::app_sensor::handle_sensor_data+0x248>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 23e:	9813      	ldr	r0, [sp, #76]	; 0x4c
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:94
    if let Err(err) = ret {  //  `if let` will assign `err` to the error code inside `ret`
 240:	3006      	adds	r0, #6
 242:	f43f af2e 	beq.w	a2 <app::app_sensor::handle_sensor_data+0xa2>
 246:	e733      	b.n	fffffe6a <.Lanon.3ed011473997af99b525cde47c9eaaac.47+0xfffffe4a>
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:83

    //  Display the URL with the random device ID for viewing the sensor data.
    console::print("NET view your sensor at \nhttps://blue-pill-geolocate.appspot.com?device=");
 248:	f240 0000 	movw	r0, #0
 24c:	2148      	movs	r1, #72	; 0x48
 24e:	f2c0 0000 	movt	r0, #0
 252:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 256:	a804      	add	r0, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:84
    console::print_strn(&device_id); console::print("\n");
 258:	f7ff fffe 	bl	0 <mynewt::sys::console::print_strn>
 25c:	f240 0000 	movw	r0, #0
 260:	2101      	movs	r1, #1
 262:	f2c0 0000 	movt	r0, #0
 266:	e721      	b.n	fffffe46 <.Lanon.3ed011473997af99b525cde47c9eaaac.47+0xfffffe26>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:80
    assert!(!sensor.is_null(), "null sensor");
 268:	f240 0000 	movw	r0, #0
 26c:	f2c0 0000 	movt	r0, #0
 270:	f7ff fffe 	bl	0 <core::panicking::panic>
 274:	defe      	udf	#254	; 0xfe
 276:	a803      	add	r0, sp, #12
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:117
                assert_eq!(rc, 0, "rawtmp fail");
 278:	9010      	str	r0, [sp, #64]	; 0x40
 27a:	f240 0000 	movw	r0, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 27e:	9617      	str	r6, [sp, #92]	; 0x5c
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:117
 280:	f2c0 0000 	movt	r0, #0
 284:	a911      	add	r1, sp, #68	; 0x44
 286:	9011      	str	r0, [sp, #68]	; 0x44
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 288:	f240 0000 	movw	r0, #0
 28c:	f2c0 0000 	movt	r0, #0
 290:	9016      	str	r0, [sp, #88]	; 0x58
 292:	2001      	movs	r0, #1
 294:	e9cd 6614 	strd	r6, r6, [sp, #80]	; 0x50
 298:	9013      	str	r0, [sp, #76]	; 0x4c
 29a:	f240 0000 	movw	r0, #0
 29e:	f2c0 0000 	movt	r0, #0
 2a2:	9012      	str	r0, [sp, #72]	; 0x48
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:117
 2a4:	f240 0000 	movw	r0, #0
 2a8:	f2c0 0000 	movt	r0, #0
 2ac:	900f      	str	r0, [sp, #60]	; 0x3c
 2ae:	a812      	add	r0, sp, #72	; 0x48
 2b0:	900e      	str	r0, [sp, #56]	; 0x38
 2b2:	f240 0000 	movw	r0, #0
 2b6:	f2c0 0000 	movt	r0, #0
 2ba:	900d      	str	r0, [sp, #52]	; 0x34
 2bc:	e9cd 010b 	strd	r0, r1, [sp, #44]	; 0x2c
 2c0:	a810      	add	r0, sp, #64	; 0x40
 2c2:	a90a      	add	r1, sp, #40	; 0x28
 2c4:	900a      	str	r0, [sp, #40]	; 0x28
 2c6:	2003      	movs	r0, #3
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 2c8:	9009      	str	r0, [sp, #36]	; 0x24
 2ca:	e9cd 6107 	strd	r6, r1, [sp, #28]
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:117
 2ce:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 2d2:	e9cd 0605 	strd	r0, r6, [sp, #20]
 2d6:	f240 0000 	movw	r0, #0
 2da:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:117
 2de:	f2c0 0100 	movt	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 2e2:	9004      	str	r0, [sp, #16]
 2e4:	a804      	add	r0, sp, #16
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:117
 2e6:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 2ea:	defe      	udf	#254	; 0xfe
 2ec:	1d28      	adds	r0, r5, #4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:119
                assert_ne!(rawtempdata.strd_temp_raw_is_valid, 0, "bad rawtmp");                
 2ee:	9010      	str	r0, [sp, #64]	; 0x40
 2f0:	f240 0000 	movw	r0, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 2f4:	f240 0100 	movw	r1, #0
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:119
 2f8:	f2c0 0000 	movt	r0, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 2fc:	f2c0 0100 	movt	r1, #0
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:119
 300:	9011      	str	r0, [sp, #68]	; 0x44
 302:	2000      	movs	r0, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 304:	9017      	str	r0, [sp, #92]	; 0x5c
 306:	aa11      	add	r2, sp, #68	; 0x44
 308:	9116      	str	r1, [sp, #88]	; 0x58
 30a:	2101      	movs	r1, #1
 30c:	e9cd 0014 	strd	r0, r0, [sp, #80]	; 0x50
 310:	9113      	str	r1, [sp, #76]	; 0x4c
 312:	f240 0100 	movw	r1, #0
 316:	f2c0 0100 	movt	r1, #0
 31a:	9112      	str	r1, [sp, #72]	; 0x48
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:119
 31c:	f240 0100 	movw	r1, #0
 320:	f2c0 0100 	movt	r1, #0
 324:	910f      	str	r1, [sp, #60]	; 0x3c
 326:	a912      	add	r1, sp, #72	; 0x48
 328:	910e      	str	r1, [sp, #56]	; 0x38
 32a:	f240 0100 	movw	r1, #0
 32e:	f2c0 0100 	movt	r1, #0
 332:	910d      	str	r1, [sp, #52]	; 0x34
 334:	e9cd 120b 	strd	r1, r2, [sp, #44]	; 0x2c
 338:	a910      	add	r1, sp, #64	; 0x40
 33a:	aa0a      	add	r2, sp, #40	; 0x28
 33c:	910a      	str	r1, [sp, #40]	; 0x28
 33e:	2103      	movs	r1, #3
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 340:	9109      	str	r1, [sp, #36]	; 0x24
 342:	e9cd 0207 	strd	r0, r2, [sp, #28]
 346:	e9cd 1005 	strd	r1, r0, [sp, #20]
 34a:	f240 0000 	movw	r0, #0
 34e:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:119
 352:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
 356:	9004      	str	r0, [sp, #16]
 358:	a804      	add	r0, sp, #16
_ZN3app10app_sensor19convert_sensor_data17h25f6914a05ed4a14E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:119
 35a:	f2c0 0100 	movt	r1, #0
 35e:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
 362:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:49
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                 //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:55
    //  Initialise the Mynewt packages and Blue Pill internal temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <mynewt::sysinit>
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:49
    console::print("Rust TMP poll\n");
   6:	f240 0000 	movw	r0, #0
   a:	210e      	movs	r1, #14
   c:	f2c0 0000 	movt	r0, #0
  10:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:52
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  14:	f240 0000 	movw	r0, #0
  18:	f242 7110 	movw	r1, #10000	; 0x2710
  1c:	f2c0 0000 	movt	r0, #0
  20:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::set_poll_rate_ms>
  24:	2801      	cmp	r0, #1
  26:	d142      	bne.n	ae <main+0xae>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, core::ptr::null_mut()) ? ;
  28:	f240 0100 	movw	r1, #0
  2c:	4668      	mov	r0, sp
  2e:	f2c0 0100 	movt	r1, #0
  32:	2200      	movs	r2, #0
  34:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h43143ffffefcd0f1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  38:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:55
  3c:	2801      	cmp	r0, #1
  3e:	d014      	beq.n	6a <main+0x6a>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:56
    assert!(!sensor.is_null(), "no sensor");
  40:	2c00      	cmp	r4, #0
  42:	d045      	beq.n	d0 <main+0xd0>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:61
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  44:	f240 0000 	movw	r0, #0
  48:	f2c0 0000 	movt	r0, #0
  4c:	f7ff fffe 	bl	0 <mynewt::hw::sensor::as_untyped>
  50:	2100      	movs	r1, #0
  52:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:66
    sensor::register_listener(sensor, listener) ? ;  //  `?` means in case of error, return error now.
  56:	9101      	str	r1, [sp, #4]
  58:	9200      	str	r2, [sp, #0]
  5a:	9104      	str	r1, [sp, #16]
  5c:	e9cd 0102 	strd	r0, r1, [sp, #8]
  60:	4669      	mov	r1, sp
  62:	4620      	mov	r0, r4
  64:	f7ff fffe 	bl	0 <mynewt::hw::sensor::register_listener>
  68:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  6a:	2c01      	cmp	r4, #1
  6c:	d120      	bne.n	b0 <main+0xb0>
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:62
    //  Start polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  6e:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::start_server_transport>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  72:	2801      	cmp	r0, #1
  74:	d124      	bne.n	c0 <main+0xc0>
main():
  76:	466c      	mov	r4, sp
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:68
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  78:	4620      	mov	r0, r4
  7a:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_dflt_get>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  7e:	9800      	ldr	r0, [sp, #0]
  80:	2801      	cmp	r0, #1
  82:	d00c      	beq.n	9e <main+0x9e>
  84:	9801      	ldr	r0, [sp, #4]
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:67
        os::eventq_run(               //  Processing events...
  86:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_run>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  8a:	2801      	cmp	r0, #1
  8c:	d0f4      	beq.n	78 <main+0x78>
main():
  8e:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  90:	f240 0000 	movw	r0, #0
  94:	f2c0 0000 	movt	r0, #0
  98:	f7ff fffe 	bl	0 <main>
  9c:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  9e:	9901      	ldr	r1, [sp, #4]
  a0:	f240 0000 	movw	r0, #0
  a4:	f2c0 0000 	movt	r0, #0
  a8:	f7ff fffe 	bl	0 <main>
  ac:	defe      	udf	#254	; 0xfe
main():
  ae:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  b0:	f240 0000 	movw	r0, #0
  b4:	4621      	mov	r1, r4
  b6:	f2c0 0000 	movt	r0, #0
  ba:	f7ff fffe 	bl	0 <main>
  be:	defe      	udf	#254	; 0xfe
main():
  c0:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  c2:	f240 0000 	movw	r0, #0
  c6:	f2c0 0000 	movt	r0, #0
  ca:	f7ff fffe 	bl	0 <main>
  ce:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:56
    assert!(!sensor.is_null(), "no sensor");
  d0:	f240 0000 	movw	r0, #0
  d4:	f2c0 0000 	movt	r0, #0
  d8:	f7ff fffe 	bl	0 <core::panicking::panic>
  dc:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:77
    //  Never comes here
}

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
   0:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:79
    //  Display the filename and line number to the Semihosting Console.
    console::print("panic ");
   2:	f240 0000 	movw	r0, #0
   6:	f2c0 0000 	movt	r0, #0
   a:	2106      	movs	r1, #6
   c:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
    if let Some(location) = info.location() {
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
  16:	b318      	cbz	r0, 60 <rust_begin_unwind+0x60>
  18:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let file = location.file();
  1a:	f7ff fffe 	bl	0 <core::panic::Location::file>
  1e:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        let line = location.line();
  20:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let file = location.file();
  22:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        let line = location.line();
  24:	f7ff fffe 	bl	0 <core::panic::Location::line>
  28:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:83
        console::print("at ");        console::buffer(&file);
  2a:	f240 0000 	movw	r0, #0
  2e:	f2c0 0000 	movt	r0, #0
  32:	2103      	movs	r1, #3
  34:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  38:	4628      	mov	r0, r5
  3a:	4631      	mov	r1, r6
  3c:	f7ff fffe 	bl	0 <mynewt::sys::console::buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:84
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  40:	f240 0000 	movw	r0, #0
  44:	2108      	movs	r1, #8
  46:	f2c0 0000 	movt	r0, #0
  4a:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  4e:	4620      	mov	r0, r4
  50:	f7ff fffe 	bl	0 <mynewt::sys::console::printhex>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:85
        console::print("\n");         console::flush();
  54:	f240 0000 	movw	r0, #0
  58:	2101      	movs	r1, #1
  5a:	f2c0 0000 	movt	r0, #0
  5e:	e004      	b.n	c <rust_begin_unwind+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:87
    } else {
        console::print("no loc\n");   console::flush();
  60:	f240 0000 	movw	r0, #0
  64:	2107      	movs	r1, #7
  66:	f2c0 0000 	movt	r0, #0
  6a:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  6e:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  72:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:92
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  76:	e7fe      	b.n	76 <rust_begin_unwind+0x76>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.bc.z: File format not recognized
