In archive target/thumbv7m-none-eabi/release/libapp.rlib:

app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.o:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 app.o6vxcoia-cgu.0
0000230f l       .debug_str	00000000 
00002c96 l       .debug_str	00000000 
00002d06 l       .debug_str	00000000 
00002d59 l       .debug_str	00000000 
00002da8 l       .debug_str	00000000 
00002de8 l       .debug_str	00000000 
00002e0f l       .debug_str	00000000 
00002e13 l       .debug_str	00000000 
00002e15 l       .debug_str	00000000 
00002e17 l       .debug_str	00000000 
00002e21 l       .debug_str	00000000 
00002e2a l       .debug_str	00000000 
00002e33 l       .debug_str	00000000 
00002e3e l       .debug_str	00000000 
00002e48 l       .debug_str	00000000 
00002e6f l       .debug_str	00000000 
00002e87 l       .debug_str	00000000 
00002e91 l       .debug_str	00000000 
00002eb4 l       .debug_str	00000000 
00002efc l       .debug_str	00000000 
00002f3c l       .debug_str	00000000 
00002f83 l       .debug_str	00000000 
00002f8c l       .debug_str	00000000 
00002f90 l       .debug_str	00000000 
00002fba l       .debug_str	00000000 
00002fbf l       .debug_str	00000000 
00002fc2 l       .debug_str	00000000 
0000300c l       .debug_str	00000000 
00003015 l       .debug_str	00000000 
00003048 l       .debug_str	00000000 
00003073 l       .debug_str	00000000 
00003075 l       .debug_str	00000000 
000030b1 l       .debug_str	00000000 
000030c4 l       .debug_str	00000000 
000030c9 l       .debug_str	00000000 
000030db l       .debug_str	00000000 
000030e1 l       .debug_str	00000000 
000030e7 l       .debug_str	00000000 
000030e9 l       .debug_str	00000000 
000030ef l       .debug_str	00000000 
000030f4 l       .debug_str	00000000 
00003101 l       .debug_str	00000000 
00003106 l       .debug_str	00000000 
0000310e l       .debug_str	00000000 
00003112 l       .debug_str	00000000 
00003117 l       .debug_str	00000000 
0000311f l       .debug_str	00000000 
00003135 l       .debug_str	00000000 
00003153 l       .debug_str	00000000 
0000315c l       .debug_str	00000000 
00003161 l       .debug_str	00000000 
00003166 l       .debug_str	00000000 
0000316a l       .debug_str	00000000 
00003173 l       .debug_str	00000000 
0000317d l       .debug_str	00000000 
00003195 l       .debug_str	00000000 
00000000 l       .debug_str	00000000 
00000041 l       .debug_str	00000000 
00000055 l       .debug_str	00000000 
00000085 l       .debug_str	00000000 
00000089 l       .debug_str	00000000 
00000094 l       .debug_str	00000000 
000000a2 l       .debug_str	00000000 
000000a9 l       .debug_str	00000000 
000000b1 l       .debug_str	00000000 
000000ba l       .debug_str	00000000 
000000bd l       .debug_str	00000000 
000000c7 l       .debug_str	00000000 
000000ce l       .debug_str	00000000 
000000d4 l       .debug_str	00000000 
000000da l       .debug_str	00000000 
000000df l       .debug_str	00000000 
00000116 l       .debug_str	00000000 
0000011b l       .debug_str	00000000 
00000122 l       .debug_str	00000000 
00000125 l       .debug_str	00000000 
00000129 l       .debug_str	00000000 
00000130 l       .debug_str	00000000 
00000134 l       .debug_str	00000000 
00000137 l       .debug_str	00000000 
0000013a l       .debug_str	00000000 
0000013f l       .debug_str	00000000 
00000145 l       .debug_str	00000000 
0000014c l       .debug_str	00000000 
00000154 l       .debug_str	00000000 
0000015e l       .debug_str	00000000 
00000162 l       .debug_str	00000000 
0000016a l       .debug_str	00000000 
00000175 l       .debug_str	00000000 
00000180 l       .debug_str	00000000 
0000018d l       .debug_str	00000000 
00000198 l       .debug_str	00000000 
000001a0 l       .debug_str	00000000 
000001ab l       .debug_str	00000000 
000001b6 l       .debug_str	00000000 
000001c0 l       .debug_str	00000000 
000001cb l       .debug_str	00000000 
000001d6 l       .debug_str	00000000 
000001e3 l       .debug_str	00000000 
000001ef l       .debug_str	00000000 
000001fc l       .debug_str	00000000 
0000020a l       .debug_str	00000000 
00000214 l       .debug_str	00000000 
00000221 l       .debug_str	00000000 
0000022d l       .debug_str	00000000 
00000231 l       .debug_str	00000000 
0000023c l       .debug_str	00000000 
00000247 l       .debug_str	00000000 
0000024e l       .debug_str	00000000 
00000257 l       .debug_str	00000000 
0000025e l       .debug_str	00000000 
00000263 l       .debug_str	00000000 
0000026f l       .debug_str	00000000 
00000277 l       .debug_str	00000000 
0000027e l       .debug_str	00000000 
00000282 l       .debug_str	00000000 
00000287 l       .debug_str	00000000 
00000290 l       .debug_str	00000000 
00000295 l       .debug_str	00000000 
00000298 l       .debug_str	00000000 
0000029c l       .debug_str	00000000 
000002a5 l       .debug_str	00000000 
000002ac l       .debug_str	00000000 
000002b1 l       .debug_str	00000000 
000002b6 l       .debug_str	00000000 
000002bc l       .debug_str	00000000 
000002c2 l       .debug_str	00000000 
000002cc l       .debug_str	00000000 
000002cf l       .debug_str	00000000 
000002d5 l       .debug_str	00000000 
000002df l       .debug_str	00000000 
000002e7 l       .debug_str	00000000 
000002ed l       .debug_str	00000000 
000002f3 l       .debug_str	00000000 
000002fe l       .debug_str	00000000 
00000307 l       .debug_str	00000000 
0000032a l       .debug_str	00000000 
00000349 l       .debug_str	00000000 
0000034b l       .debug_str	00000000 
00000350 l       .debug_str	00000000 
00000377 l       .debug_str	00000000 
0000037c l       .debug_str	00000000 
00000382 l       .debug_str	00000000 
00000388 l       .debug_str	00000000 
0000038b l       .debug_str	00000000 
0000039a l       .debug_str	00000000 
000003a1 l       .debug_str	00000000 
000003a5 l       .debug_str	00000000 
000003ae l       .debug_str	00000000 
000003b6 l       .debug_str	00000000 
000003be l       .debug_str	00000000 
000003c5 l       .debug_str	00000000 
000003d9 l       .debug_str	00000000 
000003e5 l       .debug_str	00000000 
000003f1 l       .debug_str	00000000 
0000040a l       .debug_str	00000000 
0000040f l       .debug_str	00000000 
00000420 l       .debug_str	00000000 
0000042a l       .debug_str	00000000 
00000438 l       .debug_str	00000000 
0000043c l       .debug_str	00000000 
00000447 l       .debug_str	00000000 
0000044e l       .debug_str	00000000 
00000454 l       .debug_str	00000000 
00000458 l       .debug_str	00000000 
0000045c l       .debug_str	00000000 
00000464 l       .debug_str	00000000 
0000047b l       .debug_str	00000000 
0000049f l       .debug_str	00000000 
000004bb l       .debug_str	00000000 
000004c5 l       .debug_str	00000000 
000004df l       .debug_str	00000000 
0000053d l       .debug_str	00000000 
00000548 l       .debug_str	00000000 
00000565 l       .debug_str	00000000 
0000057e l       .debug_str	00000000 
00000588 l       .debug_str	00000000 
000005ba l       .debug_str	00000000 
000005c1 l       .debug_str	00000000 
000005fa l       .debug_str	00000000 
0000060a l       .debug_str	00000000 
0000060d l       .debug_str	00000000 
00000614 l       .debug_str	00000000 
00000618 l       .debug_str	00000000 
0000061c l       .debug_str	00000000 
00000621 l       .debug_str	00000000 
00000627 l       .debug_str	00000000 
0000062b l       .debug_str	00000000 
0000063b l       .debug_str	00000000 
00000647 l       .debug_str	00000000 
00000653 l       .debug_str	00000000 
0000066a l       .debug_str	00000000 
00000676 l       .debug_str	00000000 
0000067a l       .debug_str	00000000 
00000687 l       .debug_str	00000000 
000006ab l       .debug_str	00000000 
000006b7 l       .debug_str	00000000 
000006c5 l       .debug_str	00000000 
000006dc l       .debug_str	00000000 
000006f1 l       .debug_str	00000000 
000006f4 l       .debug_str	00000000 
00000714 l       .debug_str	00000000 
0000071d l       .debug_str	00000000 
00000726 l       .debug_str	00000000 
0000072f l       .debug_str	00000000 
0000073b l       .debug_str	00000000 
00000743 l       .debug_str	00000000 
0000074b l       .debug_str	00000000 
00000751 l       .debug_str	00000000 
00000774 l       .debug_str	00000000 
00000785 l       .debug_str	00000000 
00000791 l       .debug_str	00000000 
000007cc l       .debug_str	00000000 
000007dd l       .debug_str	00000000 
000007df l       .debug_str	00000000 
00000807 l       .debug_str	00000000 
00000828 l       .debug_str	00000000 
0000082d l       .debug_str	00000000 
00000835 l       .debug_str	00000000 
0000083e l       .debug_str	00000000 
00000847 l       .debug_str	00000000 
0000084e l       .debug_str	00000000 
00000854 l       .debug_str	00000000 
000008b6 l       .debug_str	00000000 
00000920 l       .debug_str	00000000 
0000092e l       .debug_str	00000000 
00000942 l       .debug_str	00000000 
00000977 l       .debug_str	00000000 
00000982 l       .debug_str	00000000 
00000988 l       .debug_str	00000000 
00000994 l       .debug_str	00000000 
000009c1 l       .debug_str	00000000 
000009c5 l       .debug_str	00000000 
000009d7 l       .debug_str	00000000 
000009e6 l       .debug_str	00000000 
000009ef l       .debug_str	00000000 
000009f3 l       .debug_str	00000000 
00000a63 l       .debug_str	00000000 
00000a91 l       .debug_str	00000000 
00000abb l       .debug_str	00000000 
00000ac0 l       .debug_str	00000000 
00000aff l       .debug_str	00000000 
00000b15 l       .debug_str	00000000 
00000b1b l       .debug_str	00000000 
00000b22 l       .debug_str	00000000 
00000b25 l       .debug_str	00000000 
00000b31 l       .debug_str	00000000 
00000b39 l       .debug_str	00000000 
00000b93 l       .debug_str	00000000 
00000bf5 l       .debug_str	00000000 
00000c00 l       .debug_str	00000000 
00000c47 l       .debug_str	00000000 
00000c96 l       .debug_str	00000000 
00000ca0 l       .debug_str	00000000 
00000cdd l       .debug_str	00000000 
00000d22 l       .debug_str	00000000 
00000d2b l       .debug_str	00000000 
00000d3b l       .debug_str	00000000 
00000d43 l       .debug_str	00000000 
00000d98 l       .debug_str	00000000 
00000df5 l       .debug_str	00000000 
00000e01 l       .debug_str	00000000 
00000e0a l       .debug_str	00000000 
00000e16 l       .debug_str	00000000 
00000e22 l       .debug_str	00000000 
00000e2b l       .debug_str	00000000 
00000e33 l       .debug_str	00000000 
00000e3b l       .debug_str	00000000 
00000e45 l       .debug_str	00000000 
00000e5a l       .debug_str	00000000 
00000e61 l       .debug_str	00000000 
00000e81 l       .debug_str	00000000 
00000e88 l       .debug_str	00000000 
00000e90 l       .debug_str	00000000 
00000e9a l       .debug_str	00000000 
00000ea5 l       .debug_str	00000000 
00000eae l       .debug_str	00000000 
00000eb9 l       .debug_str	00000000 
00000ec5 l       .debug_str	00000000 
00000ec9 l       .debug_str	00000000 
00000ed2 l       .debug_str	00000000 
00000ed9 l       .debug_str	00000000 
00000ee1 l       .debug_str	00000000 
00000ee9 l       .debug_str	00000000 
00000ef3 l       .debug_str	00000000 
00000ef9 l       .debug_str	00000000 
00000f00 l       .debug_str	00000000 
00000f07 l       .debug_str	00000000 
00000f34 l       .debug_str	00000000 
00000f69 l       .debug_str	00000000 
00000f6f l       .debug_str	00000000 
00000f75 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f94 l       .debug_str	00000000 
00000fa4 l       .debug_str	00000000 
00000fac l       .debug_str	00000000 
00000fd5 l       .debug_str	00000000 
00001033 l       .debug_str	00000000 
00001099 l       .debug_str	00000000 
000010a0 l       .debug_str	00000000 
000010a8 l       .debug_str	00000000 
000010b1 l       .debug_str	00000000 
000010cf l       .debug_str	00000000 
000010df l       .debug_str	00000000 
000010ed l       .debug_str	00000000 
000010f8 l       .debug_str	00000000 
00001105 l       .debug_str	00000000 
00001114 l       .debug_str	00000000 
0000112a l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
0000113d l       .debug_str	00000000 
00001146 l       .debug_str	00000000 
0000116c l       .debug_str	00000000 
00001182 l       .debug_str	00000000 
0000118d l       .debug_str	00000000 
000011a3 l       .debug_str	00000000 
000011ab l       .debug_str	00000000 
000011cc l       .debug_str	00000000 
000011e3 l       .debug_str	00000000 
000011e8 l       .debug_str	00000000 
000011f0 l       .debug_str	00000000 
000011f9 l       .debug_str	00000000 
00001202 l       .debug_str	00000000 
0000120b l       .debug_str	00000000 
00001213 l       .debug_str	00000000 
0000121a l       .debug_str	00000000 
00001226 l       .debug_str	00000000 
00001231 l       .debug_str	00000000 
00001239 l       .debug_str	00000000 
00001241 l       .debug_str	00000000 
000012bd l       .debug_str	00000000 
00001341 l       .debug_str	00000000 
0000143d l       .debug_str	00000000 
00001541 l       .debug_str	00000000 
0000154f l       .debug_str	00000000 
0000155a l       .debug_str	00000000 
00001564 l       .debug_str	00000000 
0000156f l       .debug_str	00000000 
0000159d l       .debug_str	00000000 
00001618 l       .debug_str	00000000 
0000169b l       .debug_str	00000000 
000016a9 l       .debug_str	00000000 
00001708 l       .debug_str	00000000 
0000176f l       .debug_str	00000000 
00001785 l       .debug_str	00000000 
00001795 l       .debug_str	00000000 
000017a4 l       .debug_str	00000000 
000017a8 l       .debug_str	00000000 
000017ae l       .debug_str	00000000 
000017b4 l       .debug_str	00000000 
000017ba l       .debug_str	00000000 
000017ca l       .debug_str	00000000 
000017fd l       .debug_str	00000000 
0000183d l       .debug_str	00000000 
00001885 l       .debug_str	00000000 
00001889 l       .debug_str	00000000 
0000188f l       .debug_str	00000000 
00001895 l       .debug_str	00000000 
0000189b l       .debug_str	00000000 
000018ad l       .debug_str	00000000 
000018e2 l       .debug_str	00000000 
00001924 l       .debug_str	00000000 
0000196e l       .debug_str	00000000 
00001972 l       .debug_str	00000000 
00001978 l       .debug_str	00000000 
0000197e l       .debug_str	00000000 
00001984 l       .debug_str	00000000 
00001996 l       .debug_str	00000000 
000019cb l       .debug_str	00000000 
00001a0d l       .debug_str	00000000 
00001a57 l       .debug_str	00000000 
00001a5b l       .debug_str	00000000 
00001a61 l       .debug_str	00000000 
00001a67 l       .debug_str	00000000 
00001a6d l       .debug_str	00000000 
00001a73 l       .debug_str	00000000 
00001a84 l       .debug_str	00000000 
00001ab8 l       .debug_str	00000000 
00001af9 l       .debug_str	00000000 
00001b42 l       .debug_str	00000000 
00001b47 l       .debug_str	00000000 
00001b4c l       .debug_str	00000000 
00001b50 l       .debug_str	00000000 
00001b56 l       .debug_str	00000000 
00001b5c l       .debug_str	00000000 
00001b62 l       .debug_str	00000000 
00001b73 l       .debug_str	00000000 
00001ba7 l       .debug_str	00000000 
00001be8 l       .debug_str	00000000 
00001c31 l       .debug_str	00000000 
00001c35 l       .debug_str	00000000 
00001c69 l       .debug_str	00000000 
00001caa l       .debug_str	00000000 
00001cf3 l       .debug_str	00000000 
00001cf8 l       .debug_str	00000000 
00001cfc l       .debug_str	00000000 
00001d05 l       .debug_str	00000000 
00001d0c l       .debug_str	00000000 
00001d14 l       .debug_str	00000000 
00001d26 l       .debug_str	00000000 
00001d5b l       .debug_str	00000000 
00001d9d l       .debug_str	00000000 
00001de7 l       .debug_str	00000000 
00001deb l       .debug_str	00000000 
00001df1 l       .debug_str	00000000 
00001df7 l       .debug_str	00000000 
00001dfd l       .debug_str	00000000 
00001e03 l       .debug_str	00000000 
00001e0b l       .debug_str	00000000 
00001e19 l       .debug_str	00000000 
00001e28 l       .debug_str	00000000 
00001e39 l       .debug_str	00000000 
00001e44 l       .debug_str	00000000 
00001e4f l       .debug_str	00000000 
00001e5a l       .debug_str	00000000 
00001e61 l       .debug_str	00000000 
00001e84 l       .debug_str	00000000 
00001e96 l       .debug_str	00000000 
00001ecb l       .debug_str	00000000 
00001f0d l       .debug_str	00000000 
00001f57 l       .debug_str	00000000 
00001f5b l       .debug_str	00000000 
00001f65 l       .debug_str	00000000 
00001f77 l       .debug_str	00000000 
00001fac l       .debug_str	00000000 
00001fee l       .debug_str	00000000 
00002038 l       .debug_str	00000000 
0000203d l       .debug_str	00000000 
00002047 l       .debug_str	00000000 
00002059 l       .debug_str	00000000 
0000208e l       .debug_str	00000000 
000020d0 l       .debug_str	00000000 
0000211a l       .debug_str	00000000 
0000212e l       .debug_str	00000000 
00002132 l       .debug_str	00000000 
00002140 l       .debug_str	00000000 
00002150 l       .debug_str	00000000 
00002159 l       .debug_str	00000000 
00002164 l       .debug_str	00000000 
00002173 l       .debug_str	00000000 
00002188 l       .debug_str	00000000 
000021b9 l       .debug_str	00000000 
00002256 l       .debug_str	00000000 
000022fb l       .debug_str	00000000 
00002306 l       .debug_str	00000000 
00002330 l       .debug_str	00000000 
00002343 l       .debug_str	00000000 
00002379 l       .debug_str	00000000 
000023fc l       .debug_str	00000000 
00002487 l       .debug_str	00000000 
000024a3 l       .debug_str	00000000 
000024ef l       .debug_str	00000000 
00002543 l       .debug_str	00000000 
00002560 l       .debug_str	00000000 
00002574 l       .debug_str	00000000 
000025c0 l       .debug_str	00000000 
00002614 l       .debug_str	00000000 
0000262a l       .debug_str	00000000 
0000263e l       .debug_str	00000000 
00002685 l       .debug_str	00000000 
000026d4 l       .debug_str	00000000 
000026dd l       .debug_str	00000000 
000026eb l       .debug_str	00000000 
0000271c l       .debug_str	00000000 
00002722 l       .debug_str	00000000 
0000272a l       .debug_str	00000000 
00002731 l       .debug_str	00000000 
00002739 l       .debug_str	00000000 
00002744 l       .debug_str	00000000 
0000274c l       .debug_str	00000000 
0000275b l       .debug_str	00000000 
0000275f l       .debug_str	00000000 
0000276a l       .debug_str	00000000 
00002776 l       .debug_str	00000000 
00002781 l       .debug_str	00000000 
00002792 l       .debug_str	00000000 
00002798 l       .debug_str	00000000 
000027a0 l       .debug_str	00000000 
000027a7 l       .debug_str	00000000 
000027b1 l       .debug_str	00000000 
000027b9 l       .debug_str	00000000 
000027c1 l       .debug_str	00000000 
000027e3 l       .debug_str	00000000 
000027ee l       .debug_str	00000000 
000027fa l       .debug_str	00000000 
00002802 l       .debug_str	00000000 
0000280b l       .debug_str	00000000 
00002816 l       .debug_str	00000000 
0000281d l       .debug_str	00000000 
00002828 l       .debug_str	00000000 
00002833 l       .debug_str	00000000 
00002843 l       .debug_str	00000000 
0000284d l       .debug_str	00000000 
00002853 l       .debug_str	00000000 
00002875 l       .debug_str	00000000 
000028ad l       .debug_str	00000000 
000028ed l       .debug_str	00000000 
000028f4 l       .debug_str	00000000 
000028fc l       .debug_str	00000000 
00002913 l       .debug_str	00000000 
0000291c l       .debug_str	00000000 
0000292c l       .debug_str	00000000 
0000293b l       .debug_str	00000000 
00002943 l       .debug_str	00000000 
0000294a l       .debug_str	00000000 
00002952 l       .debug_str	00000000 
00002970 l       .debug_str	00000000 
00002980 l       .debug_str	00000000 
000029b3 l       .debug_str	00000000 
000029c8 l       .debug_str	00000000 
000029d1 l       .debug_str	00000000 
00002a2e l       .debug_str	00000000 
00002a93 l       .debug_str	00000000 
00002a9d l       .debug_str	00000000 
00002aad l       .debug_str	00000000 
00002ac2 l       .debug_str	00000000 
00002aca l       .debug_str	00000000 
00002b2e l       .debug_str	00000000 
00002b9a l       .debug_str	00000000 
00002ba1 l       .debug_str	00000000 
00002ba9 l       .debug_str	00000000 
00002bc7 l       .debug_str	00000000 
00002bd7 l       .debug_str	00000000 
00002c0a l       .debug_str	00000000 
00002c1f l       .debug_str	00000000 
00002c32 l       .debug_str	00000000 
00002c47 l       .debug_str	00000000 
00002c4e l       .debug_str	00000000 
00002c63 l       .debug_str	00000000 
00002c8d l       .debug_str	00000000 
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.10	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.10
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.11	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.11
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.13	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.13
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.14	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.14
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.16	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.16
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.17	00000019 .Lanon.3ed011473997af99b525cde47c9eaaac.17
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.18	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.18
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.19	00000016 .Lanon.3ed011473997af99b525cde47c9eaaac.19
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.2	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.2
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.20	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.20
00000000 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.21
00000004 l     O .rodata.cst4	00000004 .Lanon.3ed011473997af99b525cde47c9eaaac.22
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.23	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.23
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.24	00000006 .Lanon.3ed011473997af99b525cde47c9eaaac.24
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.25	0000004b .Lanon.3ed011473997af99b525cde47c9eaaac.25
00000000 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.26
00000008 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.27
00000010 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.28
00000018 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.29
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.30	00000012 .Lanon.3ed011473997af99b525cde47c9eaaac.30
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.31	00000009 .Lanon.3ed011473997af99b525cde47c9eaaac.31
00000020 l     O .rodata.cst8	00000008 .Lanon.3ed011473997af99b525cde47c9eaaac.32
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.33	00000001 .Lanon.3ed011473997af99b525cde47c9eaaac.33
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.4	00000010 .Lanon.3ed011473997af99b525cde47c9eaaac.4
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.6	0000000f .Lanon.3ed011473997af99b525cde47c9eaaac.6
00000000 l     O .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.9	00000018 .Lanon.3ed011473997af99b525cde47c9eaaac.9
00000000 l     O .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E	00000008 app::app_sensor::SENSOR_DEVICE
00000000 l     F .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	000002c4 app::app_sensor::handle_sensor_data
00000000 l     F .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	0000000c <&T as core::fmt::Display>::fmt
00000000 l     F .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000050 core::result::unwrap_failed
00000000 l    d  .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E	00000000 .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E
00000000 l    d  .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E	00000000 .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E
00000000 l    d  .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E	00000000 .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E
00000000 l    d  .text.main	00000000 .text.main
00000000 l    d  .text.rust_begin_unwind	00000000 .text.rust_begin_unwind
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.0
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.1
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.3
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.5
00000000 l    d  .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E	00000000 .rodata._ZN3app10app_sensor13SENSOR_DEVICE17hf13677561c0ef3d6E
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.7
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.8
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.12
00000000 l    d  .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15	00000000 .rodata..Lanon.3ed011473997af99b525cde47c9eaaac.15
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line	00000000 .debug_line
00000000         *UND*	00000000 <str as core::fmt::Display>::fmt
00000000         *UND*	00000000 core::panic::Location::file
00000000         *UND*	00000000 core::panic::Location::line
00000000         *UND*	00000000 core::panic::PanicInfo::location
00000000         *UND*	00000000 core::panicking::panic
00000000         *UND*	00000000 core::panicking::panic_fmt
00000000         *UND*	00000000 <mynewt::result::MynewtError as core::fmt::Debug>::fmt
00000000         *UND*	00000000 mynewt::hw::sensor::as_untyped
00000000         *UND*	00000000 mynewt::hw::sensor::register_listener
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::set_poll_rate_ms
00000000         *UND*	00000000 mynewt::hw::sensor::bindings::mgr_find_next_bydevname
00000000         *UND*	00000000 mynewt::sys::console::flush
00000000         *UND*	00000000 mynewt::sys::console::print
00000000         *UND*	00000000 mynewt::sys::console::buffer
00000000         *UND*	00000000 mynewt::sys::console::printhex
00000000         *UND*	00000000 mynewt::Strn::new
00000000         *UND*	00000000 mynewt::libs::sensor_network::do_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::init_server_post
00000000         *UND*	00000000 mynewt::libs::sensor_network::start_server_transport
00000000         *UND*	00000000 mynewt::kernel::os::eventq_run
00000000         *UND*	00000000 mynewt::kernel::os::eventq_dflt_get
00000000         *UND*	00000000 mynewt::sysinit
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::key_to_cstr
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::new_encoder
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::check_result
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::global_encoder
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::encoder
00000000         *UND*	00000000 mynewt::encoding::coap_context::CoapContext::cstr_len
00000000         *UND*	00000000 mynewt::encoding::coap_context::COAP_CONTEXT
00000000         *UND*	00000000 <str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul
00000000         *UND*	00000000 __bkpt
00000000         *UND*	00000000 cbor_encode_int
00000000         *UND*	00000000 cbor_encode_text_string
00000000         *UND*	00000000 cbor_encoder_close_container
00000000         *UND*	00000000 cbor_encoder_create_array
00000000         *UND*	00000000 cbor_encoder_create_map
00000000         *UND*	00000000 get_temp_raw_data
00000000         *UND*	00000000 is_null_sensor
00000000         *UND*	00000000 is_null_sensor_data
00000000 g     F .text.main	000000e8 main
00000000         *UND*	00000000 null_sensor
00000000 g     F .text.rust_begin_unwind	00000066 rust_begin_unwind



Disassembly of section .text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E:

00000000 <<&T as core::fmt::Display>::fmt>:
_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h422d517eccc73a15E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:1914
   0:	460a      	mov	r2, r1
   2:	e9d0 3100 	ldrd	r3, r1, [r0]
   6:	4618      	mov	r0, r3
   8:	f7ff bffe 	b.w	0 <<str as core::fmt::Display>::fmt>

Disassembly of section .text._ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E:

00000000 <core::result::unwrap_failed>:
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:998
   0:	b08e      	sub	sp, #56	; 0x38
   2:	2208      	movs	r2, #8
   4:	e9cd 0201 	strd	r0, r2, [sp, #4]
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:999
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	9103      	str	r1, [sp, #12]
  12:	900d      	str	r0, [sp, #52]	; 0x34
  14:	a803      	add	r0, sp, #12
  16:	900c      	str	r0, [sp, #48]	; 0x30
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	a90a      	add	r1, sp, #40	; 0x28
  22:	900b      	str	r0, [sp, #44]	; 0x2c
  24:	a801      	add	r0, sp, #4
  26:	900a      	str	r0, [sp, #40]	; 0x28
  28:	2002      	movs	r0, #2
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  2a:	9009      	str	r0, [sp, #36]	; 0x24
  2c:	9108      	str	r1, [sp, #32]
  2e:	2100      	movs	r1, #0
  30:	9107      	str	r1, [sp, #28]
  32:	e9cd 0105 	strd	r0, r1, [sp, #20]
  36:	f240 0000 	movw	r0, #0
  3a:	f2c0 0000 	movt	r0, #0
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  3e:	f240 0100 	movw	r1, #0
_ZN4core3fmt9Arguments6new_v117ha99294a9defa432aE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/fmt/mod.rs:316
  42:	9004      	str	r0, [sp, #16]
  44:	a804      	add	r0, sp, #16
_ZN4core6result13unwrap_failed17h4b64b7a78ab076d1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/macros.rs:18
  46:	f2c0 0100 	movt	r1, #0
  4a:	f7ff fffe 	bl	0 <core::panicking::panic_fmt>
  4e:	defe      	udf	#254	; 0xfe

Disassembly of section .text._ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E:

00000000 <app::app_sensor::handle_sensor_data>:
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:79
    Ok(())
}

///  This listener function is called every 10 seconds by Mynewt to handle the polled sensor data.
///  Return 0 if we have handled the sensor data successfully.
extern fn handle_sensor_data(sensor: sensor_ptr, _arg: sensor_arg, 
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b087      	sub	sp, #28
   6:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:81
    sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> MynewtError {
    console::print("Rust handle_sensor_data\n");
   8:	f240 0000 	movw	r0, #0
   c:	f2c0 0000 	movt	r0, #0
  10:	2118      	movs	r1, #24
  12:	4614      	mov	r4, r2
  14:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:84
    //  Check that the temperature data is valid.
    //  TODO
    if unsafe { sensor::is_null_sensor_data(sensor_data) } { return MynewtError::SYS_EINVAL; }  //  Exit if data is missing
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <is_null_sensor_data>
  1e:	b120      	cbz	r0, 2a <app::app_sensor::handle_sensor_data+0x2a>
  20:	f06f 0001 	mvn.w	r0, #1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:107
            return MynewtError::SYS_EOK; 
        }            
    }
    //  Return 0 to Mynewt to indicate no error.  Should not end with a semicolon (;).
    MynewtError::SYS_EOK
}
  24:	b007      	add	sp, #28
  26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:85
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
  2a:	4628      	mov	r0, r5
  2c:	f7ff fffe 	bl	0 <is_null_sensor>
  30:	2800      	cmp	r0, #0
  32:	f040 8132 	bne.w	29a <app::app_sensor::handle_sensor_data+0x29a>
  36:	2000      	movs	r0, #0
  38:	a904      	add	r1, sp, #16
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:119
fn get_temperature(sensor_data: sensor_data_ptr, sensor_type: sensor_type_t) -> SensorValue {
    let mut return_value = SensorValue::default();
    match sensor_type {                           //  Is this raw or computed temperature?
        SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW => {  //  If this is raw temperature...
            //  Interpret the sensor data as a sensor_temp_raw_data struct that contains raw temp.
            let mut rawtempdata = fill_zero!(sensor_temp_raw_data);
  3a:	f88d 0014 	strb.w	r0, [sp, #20]
  3e:	9004      	str	r0, [sp, #16]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:120
            let rc = unsafe { sensor::get_temp_raw_data(sensor_data, &mut rawtempdata) };
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <get_temp_raw_data>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:121
            assert!(rc == 0);
  46:	2800      	cmp	r0, #0
  48:	f040 812e 	bne.w	2a8 <app::app_sensor::handle_sensor_data+0x2a8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:124

            //  Check that the raw temperature data is valid.
            if rawtempdata.strd_temp_raw_is_valid == 0 { return return_value; }  //  Exit if data is not valid
  4c:	f89d 0014 	ldrb.w	r0, [sp, #20]
  50:	2800      	cmp	r0, #0
  52:	f000 8130 	beq.w	2b6 <app::app_sensor::handle_sensor_data+0x2b6>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:128

            //  Raw temperature data is valid.  Copy and display it.
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  56:	f240 0000 	movw	r0, #0
  5a:	2119      	movs	r1, #25
  5c:	f2c0 0000 	movt	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:127
            return_value.val = SensorValueType::Uint(rawtempdata.strd_temp_raw);  //  Raw Temperature in integer (0 to 4095)
  60:	f8dd 9010 	ldr.w	r9, [sp, #16]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:128
            console::print("TMP listener got rawtmp \n");  // return_value->int_val);
  64:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:60
///   {"key":"device", "value":"0102030405060708090a0b0c0d0e0f10"},
///   {"key":"t",      "value":1715}
/// ]}
/// ```
pub fn send_sensor_data(val: &SensorValue) -> MynewtResult<()>  {  //  Returns an error code upon error.
    console::print("Rust send_sensor_data\n");
  68:	f240 0000 	movw	r0, #0
  6c:	2116      	movs	r1, #22
  6e:	f2c0 0000 	movt	r0, #0
  72:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:66
    if let SensorValueType::None = val.val { assert!(false); }

    //  Start composing the CoAP Server message with the sensor data in the payload.  This will 
    //  block other tasks from composing and posting CoAP messages (through a semaphore).
    //  We only have 1 memory buffer for composing CoAP messages so it needs to be locked.
    let rc = sensor_network::init_server_post(strn!("")) ? ;
  76:	f240 0000 	movw	r0, #0
  7a:	2101      	movs	r1, #1
  7c:	f2c0 0000 	movt	r0, #0
  80:	f7ff fffe 	bl	0 <mynewt::Strn::new>
  84:	e9cd 0104 	strd	r0, r1, [sp, #16]
  88:	a802      	add	r0, sp, #8
  8a:	a904      	add	r1, sp, #16
  8c:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::init_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  90:	9802      	ldr	r0, [sp, #8]
  92:	b2c1      	uxtb	r1, r0
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:66
  94:	2901      	cmp	r1, #1
  96:	d107      	bne.n	a8 <app::app_sensor::handle_sensor_data+0xa8>
  98:	9803      	ldr	r0, [sp, #12]
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:99
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
  9a:	3006      	adds	r0, #6
  9c:	f000 80e7 	beq.w	26e <app::app_sensor::handle_sensor_data+0x26e>
  a0:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:107
}
  a2:	b007      	add	sp, #28
  a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:67
    if !rc { return Err(MynewtError::SYS_EAGAIN); }  //  If network transport not ready, tell caller (Sensor Listener) to try again later.
  a8:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
  ac:	f000 80df 	beq.w	26e <app::app_sensor::handle_sensor_data+0x26e>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:70

    //  Compose the CoAP Payload using the coap!() macro.
    let _payload = coap!(
  b0:	f240 0400 	movw	r4, #0
  b4:	f240 0a00 	movw	sl, #0
  b8:	f240 0b00 	movw	fp, #0
  bc:	2004      	movs	r0, #4
  be:	f2c0 0a00 	movt	sl, #0
  c2:	f2c0 0b00 	movt	fp, #0
  c6:	f2c0 0400 	movt	r4, #0
  ca:	9000      	str	r0, [sp, #0]
  cc:	4620      	mov	r0, r4
  ce:	4651      	mov	r1, sl
  d0:	2204      	movs	r2, #4
  d2:	465b      	mov	r3, fp
  d4:	f04f 0804 	mov.w	r8, #4
  d8:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
  dc:	4607      	mov	r7, r0
  de:	4620      	mov	r0, r4
  e0:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::global_encoder>
  e4:	4639      	mov	r1, r7
  e6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  ea:	f7ff fffe 	bl	0 <cbor_encoder_create_map>
  ee:	4601      	mov	r1, r0
  f0:	4620      	mov	r0, r4
  f2:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
  f6:	f240 0000 	movw	r0, #0
  fa:	2106      	movs	r1, #6
  fc:	f2c0 0000 	movt	r0, #0
 100:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 104:	4607      	mov	r7, r0
 106:	460e      	mov	r6, r1
 108:	4620      	mov	r0, r4
 10a:	4651      	mov	r1, sl
 10c:	2204      	movs	r2, #4
 10e:	465b      	mov	r3, fp
 110:	f8cd 8000 	str.w	r8, [sp]
 114:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 118:	4605      	mov	r5, r0
 11a:	4620      	mov	r0, r4
 11c:	4639      	mov	r1, r7
 11e:	4632      	mov	r2, r6
 120:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 124:	4680      	mov	r8, r0
 126:	4620      	mov	r0, r4
 128:	4639      	mov	r1, r7
 12a:	4632      	mov	r2, r6
 12c:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 130:	4602      	mov	r2, r0
 132:	4628      	mov	r0, r5
 134:	4641      	mov	r1, r8
 136:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 13a:	4601      	mov	r1, r0
 13c:	4620      	mov	r0, r4
 13e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 142:	f04f 0804 	mov.w	r8, #4
 146:	4620      	mov	r0, r4
 148:	4651      	mov	r1, sl
 14a:	2204      	movs	r2, #4
 14c:	465b      	mov	r3, fp
 14e:	f8cd 8000 	str.w	r8, [sp]
 152:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 156:	f240 0500 	movw	r5, #0
 15a:	f240 0300 	movw	r3, #0
 15e:	4606      	mov	r6, r0
 160:	2006      	movs	r0, #6
 162:	f2c0 0500 	movt	r5, #0
 166:	9000      	str	r0, [sp, #0]
 168:	f2c0 0300 	movt	r3, #0
 16c:	4620      	mov	r0, r4
 16e:	4629      	mov	r1, r5
 170:	2206      	movs	r2, #6
 172:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::new_encoder>
 176:	4601      	mov	r1, r0
 178:	4630      	mov	r0, r6
 17a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 17e:	f7ff fffe 	bl	0 <cbor_encoder_create_array>
 182:	4601      	mov	r1, r0
 184:	4620      	mov	r0, r4
 186:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 18a:	f240 0000 	movw	r0, #0
 18e:	2101      	movs	r1, #1
 190:	f2c0 0000 	movt	r0, #0
 194:	f7ff fffe 	bl	0 <<str as mynewt::encoding::coap_context::ToBytesOptionalNull>::to_bytes_optional_nul>
 198:	4606      	mov	r6, r0
 19a:	460f      	mov	r7, r1
 19c:	4620      	mov	r0, r4
 19e:	4629      	mov	r1, r5
 1a0:	2206      	movs	r2, #6
 1a2:	465b      	mov	r3, fp
 1a4:	f8cd 8000 	str.w	r8, [sp]
 1a8:	f04f 0a04 	mov.w	sl, #4
 1ac:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 1b0:	4605      	mov	r5, r0
 1b2:	4620      	mov	r0, r4
 1b4:	4631      	mov	r1, r6
 1b6:	463a      	mov	r2, r7
 1b8:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::key_to_cstr>
 1bc:	4680      	mov	r8, r0
 1be:	4620      	mov	r0, r4
 1c0:	4631      	mov	r1, r6
 1c2:	463a      	mov	r2, r7
 1c4:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::cstr_len>
 1c8:	4602      	mov	r2, r0
 1ca:	4628      	mov	r0, r5
 1cc:	4641      	mov	r1, r8
 1ce:	f7ff fffe 	bl	0 <cbor_encode_text_string>
 1d2:	4601      	mov	r1, r0
 1d4:	4620      	mov	r0, r4
 1d6:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 1da:	4628      	mov	r0, r5
 1dc:	464a      	mov	r2, r9
 1de:	2300      	movs	r3, #0
 1e0:	f7ff fffe 	bl	0 <cbor_encode_int>
 1e4:	4601      	mov	r1, r0
 1e6:	4620      	mov	r0, r4
 1e8:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 1ec:	f240 0600 	movw	r6, #0
 1f0:	4620      	mov	r0, r4
 1f2:	f2c0 0600 	movt	r6, #0
 1f6:	2204      	movs	r2, #4
 1f8:	4631      	mov	r1, r6
 1fa:	465b      	mov	r3, fp
 1fc:	f8cd a000 	str.w	sl, [sp]
 200:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 204:	f240 0100 	movw	r1, #0
 208:	f240 0300 	movw	r3, #0
 20c:	4605      	mov	r5, r0
 20e:	2006      	movs	r0, #6
 210:	9000      	str	r0, [sp, #0]
 212:	4620      	mov	r0, r4
 214:	f2c0 0100 	movt	r1, #0
 218:	2206      	movs	r2, #6
 21a:	f2c0 0300 	movt	r3, #0
 21e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 222:	4601      	mov	r1, r0
 224:	4628      	mov	r0, r5
 226:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 22a:	4601      	mov	r1, r0
 22c:	4620      	mov	r0, r4
 22e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 232:	4620      	mov	r0, r4
 234:	4631      	mov	r1, r6
 236:	2204      	movs	r2, #4
 238:	465b      	mov	r3, fp
 23a:	f8cd a000 	str.w	sl, [sp]
 23e:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::encoder>
 242:	4605      	mov	r5, r0
 244:	4620      	mov	r0, r4
 246:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::global_encoder>
 24a:	4629      	mov	r1, r5
 24c:	f7ff fffe 	bl	0 <cbor_encoder_close_container>
 250:	4601      	mov	r1, r0
 252:	4620      	mov	r0, r4
 254:	f7ff fffe 	bl	0 <mynewt::encoding::coap_context::CoapContext::check_result>
 258:	a804      	add	r0, sp, #16
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:90
    );

    //  Post the CoAP Server message to the CoAP Background Task for transmission.  After posting the
    //  message to the background task, we release a semaphore that unblocks other requests
    //  to compose and post CoAP messages.
    sensor_network::do_server_post() ? ;
 25a:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::do_server_post>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hfc45991b9511dbacE():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
 25e:	f89d 0010 	ldrb.w	r0, [sp, #16]
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:90
 262:	2801      	cmp	r0, #1
 264:	d10e      	bne.n	284 <app::app_sensor::handle_sensor_data+0x284>
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 266:	9805      	ldr	r0, [sp, #20]
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:99
    if let Err(err) = rc {  //  `if let` will assign `err` to the error code inside `rc`
 268:	3006      	adds	r0, #6
 26a:	f47f af19 	bne.w	a0 <app::app_sensor::handle_sensor_data+0xa0>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:101
            console::print("TMP network not ready\n");
 26e:	f240 0000 	movw	r0, #0
 272:	2116      	movs	r1, #22
 274:	f2c0 0000 	movt	r0, #0
 278:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 27c:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:107
}
 27e:	b007      	add	sp, #28
 280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
_ZN3app11app_network16send_sensor_data17heee59bf1f47d143dE():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_network.rs:92

    console::print("NET view your sensor at \nhttps://blue-pill-geolocate.appspot.com?device=%s\n");  //  , device_id);
 284:	f240 0000 	movw	r0, #0
 288:	214b      	movs	r1, #75	; 0x4b
 28a:	f2c0 0000 	movt	r0, #0
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
 28e:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
 292:	2000      	movs	r0, #0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:107
 294:	b007      	add	sp, #28
 296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:85
    assert!(unsafe { !sensor::is_null_sensor(sensor) });
 29a:	f240 0000 	movw	r0, #0
 29e:	f2c0 0000 	movt	r0, #0
 2a2:	f7ff fffe 	bl	0 <core::panicking::panic>
 2a6:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor15get_temperature17h019ecf0f82edebc9E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:121
            assert!(rc == 0);
 2a8:	f240 0000 	movw	r0, #0
 2ac:	f2c0 0000 	movt	r0, #0
 2b0:	f7ff fffe 	bl	0 <core::panicking::panic>
 2b4:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor18handle_sensor_data17hce4161ccff29c081E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:89
    if let SensorValueType::None = sensor_value.val { assert!(false); }  //  Invalid type
 2b6:	f240 0000 	movw	r0, #0
 2ba:	f2c0 0000 	movt	r0, #0
 2be:	f7ff fffe 	bl	0 <core::panicking::panic>
 2c2:	defe      	udf	#254	; 0xfe

Disassembly of section .text.main:

00000000 <main>:
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:49
};

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                     //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
   0:	b086      	sub	sp, #24
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:55
    //  Initialise the Mynewt packages and BME280 / temp_stm32 temperature sensor driver.
    //  Start the CoAP / OIC Background Task to transmit CoAP messages.  Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/bluepill_my_sensor/generated/src/bluepill_my_sensor-sysinit-app.c
    mynewt::sysinit();
   2:	f7ff fffe 	bl	0 <mynewt::sysinit>
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:54
    console::print("Rust TMP poll \n");  //  SENSOR_DEVICE "\n";
   6:	f240 0000 	movw	r0, #0
   a:	210f      	movs	r1, #15
   c:	f2c0 0000 	movt	r0, #0
  10:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:57
    sensor::set_poll_rate_ms(&SENSOR_DEVICE, SENSOR_POLL_TIME) ? ;
  14:	f240 0000 	movw	r0, #0
  18:	f242 7110 	movw	r1, #10000	; 0x2710
  1c:	f2c0 0000 	movt	r0, #0
  20:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::set_poll_rate_ms>
  24:	2801      	cmp	r0, #1
  26:	d147      	bne.n	b8 <main+0xb8>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:60
    let sensor = sensor::mgr_find_next_bydevname(&SENSOR_DEVICE, unsafe { sensor::null_sensor() }) ? ;
  28:	f7ff fffe 	bl	0 <null_sensor>
  2c:	f240 0100 	movw	r1, #0
  30:	4602      	mov	r2, r0
  32:	4668      	mov	r0, sp
  34:	f2c0 0100 	movt	r1, #0
  38:	f7ff fffe 	bl	0 <mynewt::hw::sensor::bindings::mgr_find_next_bydevname>
_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h43143ffffefcd0f1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:1283
  3c:	e9dd 0400 	ldrd	r0, r4, [sp]
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:60
  40:	2801      	cmp	r0, #1
  42:	d017      	beq.n	74 <main+0x74>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:61
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  44:	4620      	mov	r0, r4
  46:	f7ff fffe 	bl	0 <is_null_sensor>
  4a:	2800      	cmp	r0, #0
  4c:	d145      	bne.n	da <main+0xda>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:66
        sl_func       : sensor::as_untyped(handle_sensor_data),  //  Listener function
  4e:	f240 0000 	movw	r0, #0
  52:	f2c0 0000 	movt	r0, #0
  56:	f7ff fffe 	bl	0 <mynewt::hw::sensor::as_untyped>
  5a:	2100      	movs	r1, #0
  5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:71
    sensor::register_listener(sensor, listener)?;  //  `?` means in case of error, return error now.
  60:	9101      	str	r1, [sp, #4]
  62:	9200      	str	r2, [sp, #0]
  64:	9104      	str	r1, [sp, #16]
  66:	e9cd 0102 	strd	r0, r1, [sp, #8]
  6a:	4669      	mov	r1, sp
  6c:	4620      	mov	r0, r4
  6e:	f7ff fffe 	bl	0 <mynewt::hw::sensor::register_listener>
  72:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  74:	2c01      	cmp	r4, #1
  76:	d120      	bne.n	ba <main+0xba>
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:62
    //  Starting polling the temperature sensor every 10 seconds in the background.
    app_sensor::start_sensor_listener()
        .expect("TMP fail");

    //  Start the Server Transport for sending sensor data to CoAP Server over NB-IoT.
    sensor_network::start_server_transport()
  78:	f7ff fffe 	bl	0 <mynewt::libs::sensor_network::start_server_transport>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  7c:	2801      	cmp	r0, #1
  7e:	d124      	bne.n	ca <main+0xca>
main():
  80:	466c      	mov	r4, sp
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:68
        .expect("NET fail");

    //  Main event loop
    loop {                            //  Loop forever...
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
  82:	4620      	mov	r0, r4
  84:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_dflt_get>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  88:	9800      	ldr	r0, [sp, #0]
  8a:	2801      	cmp	r0, #1
  8c:	d00c      	beq.n	a8 <main+0xa8>
  8e:	9801      	ldr	r0, [sp, #4]
main():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:67
        os::eventq_run(               //  Processing events...
  90:	f7ff fffe 	bl	0 <mynewt::kernel::os::eventq_run>
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:826
  94:	2801      	cmp	r0, #1
  96:	d0f4      	beq.n	82 <main+0x82>
main():
  98:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  9a:	f240 0000 	movw	r0, #0
  9e:	f2c0 0000 	movt	r0, #0
  a2:	f7ff fffe 	bl	0 <main>
  a6:	defe      	udf	#254	; 0xfe
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h7103b9525d683fe6E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  a8:	9901      	ldr	r1, [sp, #4]
  aa:	f240 0000 	movw	r0, #0
  ae:	f2c0 0000 	movt	r0, #0
  b2:	f7ff fffe 	bl	0 <main>
  b6:	defe      	udf	#254	; 0xfe
main():
  b8:	4604      	mov	r4, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  ba:	f240 0000 	movw	r0, #0
  be:	4621      	mov	r1, r4
  c0:	f2c0 0000 	movt	r0, #0
  c4:	f7ff fffe 	bl	0 <main>
  c8:	defe      	udf	#254	; 0xfe
main():
  ca:	4601      	mov	r1, r0
_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1415bf1e9cd2cea1E():
/rustc/50a0defd5a93523067ef239936cc2e0755220904/src/libcore/result.rs:827
  cc:	f240 0000 	movw	r0, #0
  d0:	f2c0 0000 	movt	r0, #0
  d4:	f7ff fffe 	bl	0 <main>
  d8:	defe      	udf	#254	; 0xfe
_ZN3app10app_sensor21start_sensor_listener17h6305ebcaba950138E():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/app_sensor.rs:61
    assert!(unsafe{ !sensor::is_null_sensor(sensor) });
  da:	f240 0000 	movw	r0, #0
  de:	f2c0 0000 	movt	r0, #0
  e2:	f7ff fffe 	bl	0 <core::panicking::panic>
  e6:	defe      	udf	#254	; 0xfe

Disassembly of section .text.rust_begin_unwind:

00000000 <rust_begin_unwind>:
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:79

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    //  Display the filename and line number to the Semihosting Console.
    if let Some(location) = info.location() {
   0:	f7ff fffe 	bl	0 <core::panic::PanicInfo::location>
   4:	b318      	cbz	r0, 4e <rust_begin_unwind+0x4e>
   6:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
   8:	f7ff fffe 	bl	0 <core::panic::Location::file>
   c:	4605      	mov	r5, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
   e:	4620      	mov	r0, r4
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:80
        let file = location.file();
  10:	460e      	mov	r6, r1
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:81
        let line = location.line();
  12:	f7ff fffe 	bl	0 <core::panic::Location::line>
  16:	4604      	mov	r4, r0
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:82
        console::print("panic at ");  console::buffer(&file);
  18:	f240 0000 	movw	r0, #0
  1c:	f2c0 0000 	movt	r0, #0
  20:	2109      	movs	r1, #9
  22:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  26:	4628      	mov	r0, r5
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <mynewt::sys::console::buffer>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:83
        console::print(" line 0x");   console::printhex(line as u8);  //  TODO: Print in decimal not hex. Allow more than 255 lines.
  2e:	f240 0000 	movw	r0, #0
  32:	2108      	movs	r1, #8
  34:	f2c0 0000 	movt	r0, #0
  38:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  3c:	4620      	mov	r0, r4
  3e:	f7ff fffe 	bl	0 <mynewt::sys::console::printhex>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:84
        console::print("\n");         console::flush();
  42:	f240 0000 	movw	r0, #0
  46:	2101      	movs	r1, #1
  48:	f2c0 0000 	movt	r0, #0
  4c:	e004      	b.n	c <rust_begin_unwind+0xc>
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:86
    } else {
        console::print("panic unknown loc\n");  console::flush();
  4e:	f240 0000 	movw	r0, #0
  52:	2112      	movs	r1, #18
  54:	f2c0 0000 	movt	r0, #0
  58:	f7ff fffe 	bl	0 <mynewt::sys::console::print>
  5c:	f7ff fffe 	bl	0 <mynewt::sys::console::flush>
_ZN8cortex_m3asm4bkpt17h756c5667fd4cf09cE():
/Users/Luppy/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.0/src/asm.rs:19
        () => unsafe {
            extern "C" {
                fn __bkpt();
            }

            __bkpt();
  60:	f7ff fffe 	bl	0 <__bkpt>
rust_begin_unwind():
/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/app/src/lib.rs:91
    }
    //  Pause in the debugger.
    bkpt();
    //  Loop forever so that device won't restart.
    loop {}
  64:	e7fe      	b.n	64 <rust_begin_unwind+0x64>
arm-none-eabi-objdump: rust.metadata.bin: File format not recognized
arm-none-eabi-objdump: app-65c720a40574e4de.app.o6vxcoia-cgu.0.rcgu.bc.z: File format not recognized
